{"version":3,"file":"820.89ac200310424e96.js","mappings":"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","names":["i0","filter_r1","property","label","FilterChipsComponent","constructor","this","filters","filter","EventEmitter","onFilterDelete","event","filterIndex","findIndex","f","detail","value","splice","emit","static","t","core","Xpm","selectors","inputs","outputs","standalone","features","decls","vars","consts","template","rf","ctx","$event","FilterChipsComponent_forge_chip_1_Template","CommonModule","i1","styles","ctx_r0","tooltip","RouterlinkButtonComponent","route","queryParams","icon","RouterlinkButtonComponent_forge_tooltip_3_Template","length","RouterModule","i2","PeopleComponent","TableUtils","createLinkButton","clickHandler","linkElement","document","createElement","classList","add","innerText","toString","type","style","minWidth","addEventListener","createIconButton","title","iconButtonElement","buttonElement","iconElement","setAttribute","appendChild","tooltipElement","innerHTML","createMenuButton","selectHandler","options","menuElement","undefined","createExpanderRow","rowIndex","tableElement","viewContainerRef","component","data","callback","componentRef","expanderElement","isExpanded","isRowExpanded","querySelector","collapseRow","then","destroy","expandRow","createComponent","instance","isDefined","hostView","rootNodes","BaseTableComponent","recordCount","tableColumns","initializeSort","filterCache","sort","column","find","c","sortDirection","direction","initialSort","isFiltered","getColumnIndex","map","indexOf","onTableSort","columnProperty","getColumnPropertyFromEventIndex","columnIndex","skip","getRecords","onTablePaginatorChange","pageIndex","pageSize","take","setTableFiltersAF","window","cancelAnimationFrame","resetTable","index","hidden","Yz7","factory","ɵfac","PeopleCacheService","homeView","storageKey","showFilter","SortDirection","Ascending","FilterComponent","appCache","moduleCache","viewCache","formGroup","FormGroup","firstName","FormControl","lastName","gender","occupation","facet","genderOptions","facetFilter","push","of","ngOnInit","loadForm","onClearFilter","reset","onApplyFilter","Object","entries","Utils","reduceObject","e","propertyLabel","forEach","formControl","get","setValue","TableDetailComponent","ctx_r7","column_r9","header","_r11","ctx_r10","ctx_r12","HomeComponent_ng_container_8_forge_icon_4_Template","HomeComponent_ng_container_8_forge_badge_5_Template","ctx_r13","onTableOptionSelected","HomeComponent_ng_container_8_forge_option_12_Template","selectedTableColumns","optionalTableColumns","ctx_r1","selectedPeople","_r15","ctx_r14","ctx_r3","HomeComponent","router","appDataService","ngZone","super","isBusy","recordset","storageColumns","localStorage","getItem","columns","JSON","parse","isArray","storedColumn","sc","width","align","CellAlign","Center","cellElement","imgElement","src","formatNumber","id","sortable","filterDelegate","TextFieldComponentDelegate","Right","peopleTable","console","log","run","navigate","ngOnDestroy","onPeopleSelected","clearSelection","clearSelections","getSelectedRows","includes","setItem","stringify","reloadFilter","peopleFilter","getPeople","pipe","finalize","subscribe","result","count","i3","viewQuery","HomeComponent_ng_container_8_Template","HomeComponent_ng_container_9_Template","HomeComponent_div_12_Template","HomeComponent_div_13_Template","HomeComponent_div_14_Template","_c1","_c2","DetailComponent","cache","noImageUrl","snapshot","params","getPerson","r","person","imageUrl","onNavigate","onViewWiki","open","url","onImageError","targetElement","target","onerror","i4","quote","routes","path","children","redirectTo","pathMatch","PeopleModule","oAB","cJS","imports","forChild","AutocompleteRangeComponent","CardComponent","AppFormsModule","_angular_core__WEBPACK_IMPORTED_MODULE_0__","FormsModule","ReactiveFormsModule","ForgeModule"],"sourceRoot":"webpack:///","sources":["./src/app/shared/components/filter-chips/filter-chips.component.html","./src/app/shared/components/filter-chips/filter-chips.component.ts","./src/app/shared/components/routerlink-button/routerlink-button.component.html","./src/app/shared/components/routerlink-button/routerlink-button.component.ts","./src/app/people/people.component.ts","./src/app/people/people.component.html","./src/app/shared/table/utils.ts","./src/app/shared/table/base-table.component.ts","./src/app/people/people-cache.service.ts","./src/app/people/home/filter/filter.component.ts","./src/app/people/home/filter/filter.component.html","./src/app/people/home/table-detail/table-detail.component.ts","./src/app/people/home/table-detail/table-detail.component.html","./src/app/people/home/home.component.html","./src/app/people/home/home.component.ts","./src/app/people/detail/detail.component.ts","./src/app/people/detail/detail.component.html","./src/app/people/people.module.ts","./src/app/shared/app-forms.module.ts"],"sourcesContent":["<forge-chip-set type=\"input\" dense=\"true\" (forge-chip-delete)=\"onFilterDelete($event)\">\r\n  <forge-chip *ngFor=\"let filter of filters\" [value]=\"filter.property\">{{filter.label}}</forge-chip>\r\n</forge-chip-set>","import { CommonModule } from '@angular/common';\r\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-filter-chips',\r\n  templateUrl: './filter-chips.component.html',\r\n  styleUrls: ['./filter-chips.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class FilterChipsComponent {\r\n  @Input()\r\n  public filters: { property: string; value: string; label: string }[] = [];\r\n\r\n  @Output()\r\n  public filter = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  public onFilterDelete(event: CustomEvent) {\r\n    const filterIndex = this.filters.findIndex((f) => f.property === event.detail.value);\r\n    if (filterIndex !== -1) {\r\n      this.filters.splice(filterIndex, 1);\r\n      this.filter.emit();\r\n    }\r\n  }\r\n}\r\n","<forge-icon-button>\r\n  <a [routerLink]=\"route\" [queryParams]=\"queryParams\" class=\"forge-icon-button\">\r\n    <forge-icon [name]=\"icon\"></forge-icon>\r\n  </a>\r\n  <forge-tooltip *ngIf=\"tooltip?.length\">{{tooltip}}</forge-tooltip>\r\n</forge-icon-button>","import { CommonModule } from '@angular/common';\r\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, Input, OnInit } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-routerlink-button',\r\n  templateUrl: './routerlink-button.component.html',\r\n  styleUrls: ['./routerlink-button.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class RouterlinkButtonComponent {\r\n  @Input()\r\n  public route?: string;\r\n\r\n  @Input()\r\n  public queryParams?: any;\r\n\r\n  @Input()\r\n  public icon?: string;\r\n\r\n  @Input()\r\n  public tooltip?: string;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-people',\r\n  templateUrl: './people.component.html',\r\n  styleUrls: ['./people.component.scss']\r\n})\r\nexport class PeopleComponent {\r\n  constructor() { }\r\n}\r\n","<router-outlet></router-outlet>","import { isDefined } from '@tylertech/forge-core';\r\nimport { TableComponent, IMenuOption, MenuComponent } from '@tylertech/forge';\r\nimport { ViewContainerRef, ComponentRef, EmbeddedViewRef, Type } from '@angular/core';\r\n\r\nexport class TableUtils {\r\n  public static createLinkButton(label: string | number, clickHandler: (event: Event) => void): HTMLButtonElement {\r\n    const linkElement = document.createElement('button');\r\n    linkElement.classList.add('forge-hyperlink');\r\n    linkElement.innerText = label.toString();\r\n    linkElement.type = 'button';\r\n    linkElement.style.minWidth = '36px';\r\n    linkElement.addEventListener('click', clickHandler);\r\n    return linkElement;\r\n  }\r\n\r\n  public static createIconButton(icon: string, clickHandler?: (event: Event) => void, title?: string): HTMLElement {\r\n    const iconButtonElement = document.createElement('forge-icon-button');\r\n\r\n    const buttonElement = document.createElement('button');\r\n    buttonElement.type = 'button';\r\n    if (clickHandler) {\r\n      buttonElement.addEventListener('click', clickHandler);\r\n    }\r\n\r\n    const iconElement = document.createElement('forge-icon');\r\n    iconElement.setAttribute('name', icon);\r\n\r\n    buttonElement.appendChild(iconElement);\r\n    iconButtonElement.appendChild(buttonElement);\r\n\r\n    if (title) {\r\n      const tooltipElement = document.createElement('forge-tooltip');\r\n      tooltipElement.innerHTML = title;\r\n      buttonElement.appendChild(tooltipElement);\r\n    }\r\n    return iconButtonElement;\r\n  }\r\n\r\n  public static createMenuButton(icon: string, selectHandler: (event: Event) => void, options: IMenuOption[], title?: string): HTMLElement {\r\n    const menuElement = document.createElement('forge-menu') as MenuComponent;\r\n    menuElement.options = options;\r\n    menuElement.addEventListener('forge-menu-select', selectHandler);\r\n\r\n    menuElement.appendChild(this.createIconButton(icon, undefined, title));\r\n\r\n    return menuElement;\r\n  }\r\n\r\n  public static createExpanderRow<T>(\r\n    rowIndex: number,\r\n    tableElement: TableComponent,\r\n    viewContainerRef: ViewContainerRef,\r\n    component: Type<T>,\r\n    title?: string,\r\n    data?: any,\r\n    callback?: (value?: any) => any\r\n  ): HTMLElement {\r\n    let componentRef: ComponentRef<any> | null;\r\n\r\n    const expanderElement = TableUtils.createIconButton(\r\n      'expand_more',\r\n      () => {\r\n        const isExpanded = tableElement.isRowExpanded(rowIndex);\r\n        expanderElement.querySelector('forge-icon')?.setAttribute('name', isExpanded ? 'expand_more' : 'expand_less');\r\n        if (isExpanded) {\r\n          tableElement.collapseRow(rowIndex).then(() => {\r\n            componentRef?.destroy();\r\n            componentRef = null;\r\n          });\r\n        } else {\r\n          tableElement.expandRow(rowIndex, () => {\r\n            componentRef = viewContainerRef.createComponent(component);\r\n            componentRef.instance.rowIndex = rowIndex;\r\n            if (isDefined(data)) {\r\n              componentRef.instance.data = data;\r\n            }\r\n            if (isDefined(callback)) {\r\n              componentRef.instance.callback = callback;\r\n            }\r\n            const rootNode = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n            return rootNode;\r\n          });\r\n        }\r\n      },\r\n      title\r\n    );\r\n\r\n    return expanderElement;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { IColumnConfiguration, SortDirection } from '@tylertech/forge';\r\nimport { IFilterParameter } from 'src/app/shared/interfaces/filter.interface';\r\n\r\n@Injectable()\r\nexport abstract class BaseTableComponent {\r\n  public recordCount = 0;\r\n  public tableColumns: IColumnConfiguration[] = [];\r\n\r\n  private setTableFiltersAF?: number;\r\n\r\n  public abstract filterCache: IFilterParameter;\r\n\r\n  constructor() { }\r\n\r\n  public initializeSort() {\r\n    if (this.filterCache?.sort?.property.length) {\r\n      const column = this.tableColumns.find((c) => c.property === this.filterCache?.sort?.property) as IColumnConfiguration;\r\n      if (isDefined(column)) {\r\n        column.sortDirection = this.filterCache?.sort?.direction;\r\n        column.initialSort = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public get isFiltered(): boolean {\r\n    return this.filterCache?.filters?.length ? true : false;\r\n  }\r\n\r\n  public getColumnIndex(column: string): number {\r\n    return this.tableColumns.map((c) => c.property).indexOf(column);\r\n  }\r\n\r\n  public onTableSort(sort: { columnIndex: number; direction: SortDirection }): void {\r\n    const columnProperty = this.getColumnPropertyFromEventIndex(sort.columnIndex) as string;\r\n    this.filterCache.sort = { property: columnProperty, direction: sort.direction };\r\n    this.filterCache.skip = 0;\r\n    this.getRecords();\r\n  }\r\n\r\n  public onTablePaginatorChange(detail: { pageIndex: number; pageSize: number }): void {\r\n    this.filterCache.skip = detail.pageIndex * detail.pageSize;\r\n    this.filterCache.take = detail.pageSize;\r\n    this.getRecords();\r\n  }\r\n\r\n  protected destroy(): void {\r\n    if (this.setTableFiltersAF) {\r\n      window.cancelAnimationFrame(this.setTableFiltersAF);\r\n    }\r\n  }\r\n\r\n  protected resetTable(): void {\r\n    this.filterCache.filters = undefined;\r\n    this.filterCache.skip = 0;\r\n  }\r\n\r\n  private getColumnPropertyFromEventIndex(index: number) {\r\n    return this.tableColumns.filter((c) => !c.hidden)[index].property;\r\n  }\r\n\r\n  protected abstract getRecords(): void;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SortDirection } from '@tylertech/forge';\r\nimport { IPerson } from 'src/app/shared/interfaces/person.interface';\r\n\r\n@Injectable()\r\nexport class PeopleCacheService {\r\n  public people?: IPerson[];\r\n  public homeView = {\r\n    storageKey: 'people-home',\r\n    showFilter: false,\r\n    filter: {\r\n      sort: {\r\n        property: 'lastName',\r\n        direction: SortDirection.Ascending\r\n      },\r\n      filters: [] as any[],\r\n      skip: 0,\r\n      take: 25\r\n    }\r\n  };\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { IOption } from '@tylertech/forge';\r\n\r\nimport { Utils } from 'src/utils';\r\nimport { AppCacheService } from 'src/app/app-cache.service';\r\nimport { PeopleCacheService } from '../../people-cache.service';\r\n\r\n@Component({\r\n  selector: 'app-people-home-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.scss']\r\n})\r\nexport class FilterComponent implements OnInit {\r\n\r\n  @Output()\r\n  public filter = new EventEmitter();\r\n\r\n  public viewCache = this.moduleCache.homeView;\r\n  public formGroup = new FormGroup({\r\n    firstName: new FormControl(),\r\n    lastName: new FormControl(),\r\n    gender: new FormControl(),\r\n    occupation: new FormControl(),\r\n    facet: new FormControl()\r\n  });\r\n  public genderOptions: IOption[] = [\r\n    { label: 'Male', value: 'male' },\r\n    { label: 'Female', value: 'female' },\r\n    { label: 'Undecided', value: 'undecided' }\r\n  ];\r\n\r\n  public facetFilter = (filter: string): Observable<IOption[]> => {\r\n    const options = [];\r\n    for (let index = 0; index < 20; index++) {\r\n      options.push({ value: index, label: `Facet Option ${index}` });\r\n    }\r\n    return of(options);\r\n  }\r\n\r\n  constructor(public appCache: AppCacheService, public moduleCache: PeopleCacheService) { }\r\n\r\n  public ngOnInit() {\r\n    this.loadForm(this.moduleCache.homeView.filter.filters);\r\n  }\r\n\r\n  public onClearFilter() {\r\n    this.formGroup.reset();\r\n    this.moduleCache.homeView.filter.filters = [];\r\n  }\r\n\r\n  public onApplyFilter() {\r\n    this.moduleCache.homeView.filter.filters = Object.entries(Utils.reduceObject(this.formGroup.value)).map(e => ({ property: e[0], value: e[1], label: this.propertyLabel(e[0]) })) || [];\r\n    this.filter.emit();\r\n  }\r\n\r\n  public loadForm(filters: any[]) {\r\n    this.formGroup.reset();\r\n    filters.forEach((f) => {\r\n      const formControl = this.formGroup.get(f.property);\r\n      if (formControl) {\r\n        formControl.setValue(f.value);\r\n      }\r\n    });\r\n  }\r\n\r\n  private propertyLabel(property: string): string {\r\n    switch (property) {\r\n      case 'firstName':\r\n        return 'First name';\r\n      case 'lastName':\r\n        return 'Last name';\r\n      case 'gender':\r\n        return 'Gender';\r\n      case 'occupation':\r\n        return 'Occupation';\r\n      case 'facet':\r\n        return 'Facet';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n}\r\n","<forge-drawer direction=\"right\" type=\"dismissible\" [open]=\"viewCache.showFilter\" open=\"false\" (forge-drawer-close)=\"viewCache.showFilter = false\">\r\n  <div slot=\"header\" class=\"header\">\r\n    <span class=\"header__title forge-typography--subtitle1\">Filter people</span>\r\n    <forge-icon-button class=\"app--flex-right\">\r\n      <button type=\"button\" aria-label=\"close\" (click)=\"viewCache.showFilter = false\">\r\n        <forge-icon name=\"close\"></forge-icon>\r\n      </button>\r\n    </forge-icon-button>\r\n  </div>\r\n\r\n  <form class=\"body\" [formGroup]=\"formGroup\" novalidate autocomplete=\"off\" (ngSubmit)=\"onApplyFilter()\">\r\n    <forge-text-field>\r\n      <input type=\"text\" id=\"home-filter--first-name\" formControlName=\"firstName\">\r\n      <label for=\"home-filter--first-name\" slot=\"label\">First name</label>\r\n    </forge-text-field>\r\n    <forge-text-field>\r\n      <input type=\"text\" id=\"home-filter--last-name\" formControlName=\"lastName\">\r\n      <label for=\"home-filter--last-name\" slot=\"label\">Last name</label>\r\n    </forge-text-field>\r\n    <forge-select label=\"Gender\" formControlName=\"gender\" [options]=\"genderOptions\" multiple=\"true\"></forge-select>\r\n    <forge-text-field>\r\n      <input type=\"text\" id=\"home-filter--occupation\" formControlName=\"occupation\">\r\n      <label for=\"home-filter--occupation\" slot=\"label\">Occupation</label>\r\n    </forge-text-field>\r\n    <forge-divider></forge-divider>\r\n    <app-autocomplete-range [optionFilter]=\"facetFilter\" formControlName=\"facet\" label=\"Facet\"></app-autocomplete-range>\r\n  </form>\r\n\r\n  <div slot=\"footer\" class=\"footer\">\r\n    <forge-button type=\"outlined\">\r\n      <button type=\"button\" (click)=\"onClearFilter()\">Clear</button>\r\n    </forge-button>\r\n    <forge-button type=\"raised\">\r\n      <button type=\"submit\" (click)=\"onApplyFilter()\">Apply</button>\r\n    </forge-button>\r\n  </div>\r\n</forge-drawer>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-people-home-table-detail',\r\n  templateUrl: './table-detail.component.html',\r\n  styleUrls: ['./table-detail.component.scss']\r\n})\r\nexport class TableDetailComponent {\r\n  @Input()\r\n  public rowIndex?: number;\r\n\r\n  @Input()\r\n  public data?: any;\r\n\r\n  constructor() { }\r\n}\r\n","<app-card>\r\n  <div app-card-header slot=\"start\">\r\n    <span>Table row detail</span>\r\n  </div>\r\n\r\n  <p>{{ data | json}}</p>\r\n</app-card>","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--title\">People</h2>\r\n  <!-- <forge-icon-button slot=\"end\">\r\n    <a routerLink=\"/profile\" class=\"forge-icon-button\">\r\n      <forge-icon name=\"view_column\"></forge-icon>\r\n    </a>\r\n  </forge-icon-button> -->\r\n  <app-routerlink-button slot=\"end\" route=\"/profile\" icon=\"person\"></app-routerlink-button>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <div class=\"body__left\">\r\n    <div [ngClass]=\"{'app--hidden': isBusy}\" class=\"table\">\r\n      <div class=\"table__header\" [ngClass]=\"{'table__header-action': selectedPeople.length}\">\r\n        <ng-container *ngIf=\"!selectedPeople.length\">\r\n          <app-filter-chips [filters]=\"filterCache.filters\" (filter)=\"onApplyFilter(true)\"></app-filter-chips>\r\n          <forge-button class=\"app--flex-right\" type=\"outlined\">\r\n            <button type=\"button\" (click)=\"viewCache.showFilter = !viewCache.showFilter\">\r\n              <forge-icon name=\"filter_list\" *ngIf=\"!filterCache.filters?.length\"></forge-icon>\r\n              <forge-badge class=\"table__header__filter-count\" *ngIf=\"filterCache.filters.length\" theme=\"info-primary\">{{filterCache.filters?.length}}</forge-badge>\r\n              <span>Filter</span>\r\n            </button>\r\n          </forge-button>\r\n          <forge-icon-button id=\"home--column-select\" class=\"table__header__columns\">\r\n            <button type=\"button\" aria-label=\"Choose table columns\">\r\n              <forge-icon name=\"view_column\"></forge-icon>\r\n            </button>\r\n          </forge-icon-button>\r\n          <forge-select-dropdown target=\"#home--column-select\" multiple [value]=\"selectedTableColumns\" (change)=\"onTableOptionSelected($event.detail)\">\r\n            <forge-option *ngFor=\"let column of optionalTableColumns\" [value]=\"column.property\">\r\n              {{column.header}}\r\n            </forge-option>\r\n          </forge-select-dropdown>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"selectedPeople.length\">\r\n          <span>{{selectedPeople.length}} people selected</span>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <forge-table #peopleTable class=\"table__body\" [ngClass]=\"{'app--hidden': !recordCount}\" [data]=\"recordset\" [columnConfigurations]=\"tableColumns\" (forge-table-sort)=\"onTableSort($event.detail)\" select=\"true\" select-key=\"id\" (forge-table-select)=\"onPeopleSelected()\" (forge-table-select-all)=\"onPeopleSelected()\" fixed-headers=\"true\"></forge-table>\r\n\r\n      <div *ngIf=\"recordCount\" class=\"table__footer\">\r\n        <forge-paginator class=\"app--flex-right\" [pageIndex]=\"filterCache.skip / filterCache.take\" [pageSize]=\"filterCache.take\" [total]=\"recordCount\" (forge-paginator-change)=\"onTablePaginatorChange($event.detail)\"></forge-paginator>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"empty-state\" *ngIf=\"!isBusy && !recordCount\">\r\n      <img src=\"https://cdn.forge.tylertech.com/v1/images/spot-hero/general-empty-state-spot-hero.svg\" alt=\"\" />\r\n      <div>No people found.</div>\r\n    </div>\r\n\r\n    <div class=\"busy-state\" *ngIf=\"isBusy\">\r\n      <forge-skeleton list-item></forge-skeleton>\r\n      <forge-skeleton list-item></forge-skeleton>\r\n      <forge-skeleton list-item></forge-skeleton>\r\n    </div>\r\n  </div>\r\n\r\n  <app-people-home-filter (filter)=\"onApplyFilter(false)\"></app-people-home-filter>\r\n</div>","import { Component, ElementRef, EmbeddedViewRef, NgZone, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { isArray } from '@tylertech/forge-core';\r\nimport { CellAlign, TableComponent, TextFieldComponentDelegate } from '@tylertech/forge';\r\nimport { TableUtils } from 'src/app/shared/table/utils';\r\nimport { Utils } from 'src/utils';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { IPerson } from 'src/app/shared/interfaces/person.interface';\r\nimport { BaseTableComponent } from 'src/app/shared/table/base-table.component';\r\nimport { PeopleCacheService } from '../people-cache.service';\r\nimport { FilterComponent } from './filter/filter.component';\r\nimport { TableDetailComponent } from './table-detail/table-detail.component';\r\nimport { finalize } from 'rxjs';\r\nimport { RouterlinkButtonComponent } from 'src/app/shared/components/routerlink-button/routerlink-button.component';\r\n\r\n@Component({\r\n  selector: 'app-people-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent extends BaseTableComponent implements OnInit, OnDestroy {\r\n  @ViewChild('peopleTable', { static: true })\r\n  private peopleTable?: TableComponent;\r\n  @ViewChild(FilterComponent)\r\n  private peopleFilter?: FilterComponent;\r\n\r\n  public isBusy = false;\r\n  public recordset: Array<IPerson> = [];\r\n  public filterCache = this.moduleCache.homeView.filter;\r\n  public viewCache = this.moduleCache.homeView;\r\n  public optionalTableColumns = [\r\n    { property: 'image', header: 'Image', hidden: false },\r\n    { property: 'firstName', header: 'First', hidden: false },\r\n    { property: 'lastName', header: 'Last', hidden: false },\r\n    { property: 'gender', header: 'Gender', hidden: false },\r\n    { property: 'occupation', header: 'Occupation', hidden: false }\r\n  ];\r\n  public selectedPeople: IPerson[] = [];\r\n  public get selectedTableColumns() {\r\n    return this.optionalTableColumns.filter(c => !c.hidden).map(c => c.property);\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private appDataService: AppDataService,\r\n    public moduleCache: PeopleCacheService,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private ngZone: NgZone\r\n  ) {\r\n    super();\r\n\r\n    let storageColumns = localStorage.getItem(this.moduleCache.homeView.storageKey);\r\n    if (storageColumns?.length) {\r\n      const columns = JSON.parse(storageColumns) as { property: string; hidden: boolean; }[];\r\n      if (isArray(columns)) {\r\n        this.optionalTableColumns.forEach(c => {\r\n          const storedColumn = columns.find((sc) => sc.property === c.property);\r\n          if (storedColumn) {\r\n            c.hidden = storedColumn.hidden;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.tableColumns = [\r\n      {\r\n        property: 'image',\r\n        width: 48,\r\n        align: CellAlign.Center,\r\n        hidden: this.optionalTableColumns.find((c) => c.property === 'image')?.hidden,\r\n        template: (rowIndex: number, cellElement: HTMLElement, data: any) => {\r\n          const imgElement = document.createElement('img') as HTMLImageElement;\r\n          imgElement.src = `mock-data/${Utils.formatNumber(data.id, '2.0-0')}-small.png`;\r\n          imgElement.classList.add('forge-table-cell__image');\r\n          return imgElement;\r\n        }\r\n      },\r\n      { header: 'Id', property: 'id', sortable: true, filter: true, filterDelegate: new TextFieldComponentDelegate() },\r\n      {\r\n        header: 'First',\r\n        property: 'firstName',\r\n        sortable: true,\r\n        filter: true,\r\n        filterDelegate: new TextFieldComponentDelegate(),\r\n        hidden: this.optionalTableColumns.find((c) => c.property === 'firstName')?.hidden\r\n      },\r\n      {\r\n        header: 'Last',\r\n        property: 'lastName',\r\n        sortable: true,\r\n        filter: true,\r\n        filterDelegate: new TextFieldComponentDelegate(),\r\n        hidden: this.optionalTableColumns.find((c) => c.property === 'lastName')?.hidden\r\n      },\r\n      {\r\n        header: 'Gender',\r\n        property: 'gender',\r\n        sortable: true,\r\n        filter: true,\r\n        filterDelegate: new TextFieldComponentDelegate(),\r\n        hidden: this.optionalTableColumns.find((c) => c.property === 'gender')?.hidden\r\n      },\r\n      {\r\n        header: 'Occupation',\r\n        property: 'occupation',\r\n        sortable: true,\r\n        filter: true,\r\n        filterDelegate: new TextFieldComponentDelegate(),\r\n        hidden: this.optionalTableColumns.find((c) => c.property === 'occupation')?.hidden\r\n      },\r\n      {\r\n        align: CellAlign.Right,\r\n        template: (rowIndex: number, cellElement: HTMLElement, data: any) => {\r\n          cellElement.appendChild(\r\n            TableUtils.createExpanderRow(\r\n              rowIndex,\r\n              this.peopleTable,\r\n              this.viewContainerRef,\r\n              TableDetailComponent,\r\n              'Toggle table detail',\r\n              data\r\n            )\r\n          );\r\n\r\n          // cellElement.appendChild(TableUtils.createLinkButton(\r\n          //   'View more',\r\n          //   (event: Event) => {\r\n          //     console.log(event);\r\n          //   }\r\n          // ));\r\n\r\n          cellElement.appendChild(TableUtils.createMenuButton(\r\n            'more_vert',\r\n            (event: Event) => {\r\n              console.log(event);\r\n            },\r\n            [\r\n              { value: 1, label: 'Option 1' },\r\n              { value: 2, label: 'Option 2' },\r\n              { value: 3, label: 'Option 3' }\r\n            ],\r\n            'More options'\r\n          ));\r\n\r\n          cellElement.appendChild(TableUtils.createIconButton(\r\n            'keyboard_arrow_right',\r\n            (event: Event) => {\r\n              this.ngZone.run(() => {\r\n                this.router.navigate([`people/detail/${data.id}`]);\r\n              });\r\n            },\r\n            'View person details'\r\n          ));\r\n\r\n          // const componentRef = this.viewContainerRef.createComponent(RouterlinkButtonComponent);\r\n          // componentRef.instance.route = '/profile';\r\n          // componentRef.instance.queryParams = { id: data.id };\r\n          // componentRef.instance.icon = 'person';\r\n          // componentRef.instance.tooltip = 'Show profile';\r\n          // const linkButtonNode = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n          // cellElement.appendChild(linkButtonNode);\r\n\r\n          return '';\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.initializeSort();\r\n    this.getRecords();\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.destroy();\r\n  }\r\n\r\n  public onPeopleSelected(clearSelection = false): void {\r\n    if (clearSelection) {\r\n      this.selectedPeople.length = 0;\r\n      this.peopleTable?.clearSelections();\r\n    } else {\r\n      this.selectedPeople = this.peopleTable?.getSelectedRows();\r\n    }\r\n  }\r\n\r\n  public onTableOptionSelected(columns: string[]) {\r\n    this.tableColumns = this.tableColumns.map(c => {\r\n      if (columns.includes(c.property as string)) {\r\n        c.hidden = false;\r\n      } else {\r\n        c.hidden = true;\r\n      }\r\n      return c;\r\n    });\r\n    this.optionalTableColumns = this.optionalTableColumns.map(c => {\r\n      if (columns.includes(c.property as string)) {\r\n        c.hidden = false;\r\n      } else {\r\n        c.hidden = true;\r\n      }\r\n      return c;\r\n    });\r\n    localStorage.setItem(\r\n      this.moduleCache.homeView.storageKey,\r\n      JSON.stringify(this.optionalTableColumns.map((c) => ({ property: c.property, hidden: c.hidden })))\r\n    );\r\n  }\r\n\r\n  public onApplyFilter(reloadFilter: boolean) {\r\n    this.getRecords();\r\n    if (reloadFilter) {\r\n      (this.peopleFilter as FilterComponent).loadForm(this.filterCache.filters);\r\n    }\r\n  }\r\n\r\n  protected getRecords(): void {\r\n    this.onPeopleSelected(true);\r\n    this.isBusy = true;\r\n    this.appDataService\r\n      .getPeople({\r\n        sort: this.filterCache.sort,\r\n        filters: this.filterCache.filters,\r\n        skip: this.filterCache.skip,\r\n        take: this.filterCache.take\r\n      }).pipe(\r\n        finalize(() => this.isBusy = false)\r\n      )\r\n      .subscribe((result) => {\r\n        this.recordset = result.data;\r\n        this.recordCount = result.count;\r\n      });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { isDefined } from '@tylertech/forge-core';\r\n\r\nimport { Utils } from 'src/utils';\r\nimport { AppCacheService } from 'src/app/app-cache.service';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { IPerson } from 'src/app/shared/interfaces/person.interface';\r\nimport { PeopleCacheService } from '../people-cache.service';\r\n\r\n@Component({\r\n  selector: 'app-people-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.scss']\r\n})\r\nexport class DetailComponent {\r\n  public person?: IPerson;\r\n  public imageUrl?: string;\r\n  public index = 0;\r\n\r\n  private noImageUrl = 'mock-data/no-image.png';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public appCache: AppCacheService,\r\n    private appDataService: AppDataService,\r\n    public cache: PeopleCacheService\r\n  ) {\r\n    const id = this.route.snapshot.params['id'];\r\n    if (isDefined(id)) {\r\n      this.appDataService.getPerson(id).subscribe((r) => {\r\n        this.person = r;\r\n        this.imageUrl = `mock-data/${Utils.formatNumber(this.person?.id as number, '2.0-0')}.png`;\r\n      });\r\n    } else {\r\n      this.router.navigate(['people/home']);\r\n    }\r\n  }\r\n\r\n  public onNavigate(route: string): void {\r\n    switch (route) {\r\n      case 'back':\r\n        this.router.navigate(['people/home']);\r\n        break;\r\n    }\r\n  }\r\n\r\n  public onViewWiki(): void {\r\n    window.open(this.person?.url, '_blank');\r\n  }\r\n\r\n  public onImageError(event: Event): void {\r\n    const targetElement = event.target as HTMLImageElement;\r\n    if (!targetElement.src.includes(this.noImageUrl)) {\r\n      targetElement.src = this.noImageUrl;\r\n      targetElement.onerror = null;\r\n    }\r\n  }\r\n\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <div slot=\"start\">\r\n    <forge-icon-button>\r\n      <button (click)=\"onNavigate('back')\" aria-label=\"go back\">\r\n        <forge-icon name=\"arrow_back\"></forge-icon>\r\n      </button>\r\n    </forge-icon-button>\r\n    <h2 class=\"forge-typography--title\">{{person?.firstName + ' ' + person?.lastName}}</h2>\r\n  </div>\r\n  <div slot=\"end\">\r\n    <forge-button type=\"outlined\">\r\n      <button type=\"button\" (click)=\"onViewWiki()\" [disabled]=\"!person?.url?.length\">View wiki</button>\r\n    </forge-button>\r\n  </div>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <div class=\"body__left\">\r\n    <forge-label-value>\r\n      <span slot=\"label\">Gender</span>\r\n      <span slot=\"value\">{{person?.gender}}</span>\r\n    </forge-label-value>\r\n    <forge-label-value>\r\n      <span slot=\"label\">Occupation</span>\r\n      <span slot=\"value\">{{person?.occupation}}</span>\r\n    </forge-label-value>\r\n    <forge-label-value>\r\n      <span slot=\"label\">Quote</span>\r\n      <span slot=\"value\">{{person?.quote}}</span>\r\n    </forge-label-value>\r\n  </div>\r\n\r\n  <div class=\"body__right\">\r\n    <img [src]=\"imageUrl\" (error)=\"onImageError($event)\" alt=\"\" />\r\n  </div>\r\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AutocompleteRangeComponent } from 'src/app/shared/components/autocomplete-range/autocomplete-range.component';\r\nimport { FilterChipsComponent } from 'src/app/shared/components/filter-chips/filter-chips.component';\r\nimport { CardComponent } from 'src/app/shared/components/card/card.component';\r\nimport { RouterlinkButtonComponent } from 'src/app/shared/components/routerlink-button/routerlink-button.component';\r\nimport { AppFormsModule } from 'src/app/shared/app-forms.module';\r\nimport { PeopleComponent } from './people.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { DetailComponent } from './detail/detail.component';\r\nimport { FilterComponent } from './home/filter/filter.component';\r\nimport { TableDetailComponent } from './home/table-detail/table-detail.component';\r\nimport { PeopleCacheService } from './people-cache.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PeopleComponent,\r\n    children: [\r\n      { path: 'home', component: HomeComponent },\r\n      { path: 'detail', component: DetailComponent },\r\n      { path: 'detail/:id', component: DetailComponent },\r\n      { path: '', redirectTo: 'home', pathMatch: 'full' }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PeopleComponent,\r\n    HomeComponent,\r\n    DetailComponent,\r\n    FilterComponent,\r\n    TableDetailComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    AutocompleteRangeComponent,\r\n    FilterChipsComponent,\r\n    CardComponent,\r\n    RouterlinkButtonComponent,\r\n    AppFormsModule\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    PeopleCacheService\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class PeopleModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { ForgeModule } from '@tylertech/forge-angular';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [FormsModule, ReactiveFormsModule, ForgeModule],\r\n  providers: []\r\n})\r\nexport class AppFormsModule { }"],"x_google_ignoreList":[]}