{"version":3,"file":"996.17d87a0afa01a777.js","mappings":"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","names":["isString","str","String","isObject","obj","_obj$constructor","constructor","name","pick","keys","Array","isArray","_","k","includes","Object","entries","reduce","acc","_ref","v","escapeRegExp","replace","objectIncludes","b","a","arrA","arrB","i","length","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","hasOwnProperty","call","ActionDetails","opts","assign","this","value","slice","startChangePos","oldValue","oldSelection","start","Math","min","cursorPos","insertedCount","inserted","substr","removedCount","max","end","removed","head","substring","tail","removeDirection","IMask","el","InputMask","maskedClass","mask","Error","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Masked","Function","MaskedFunction","console","warn","normalizeOpts","instanceOpts","_mask","startsWith","createMask","nOpts","MaskedClass","MaskElement","selectionStart","_unsafeSelectionStart","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","HTMLMaskElement","input","super","_handlers","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","activeElement","bindEvents","handlers","forEach","event","_toggleEventHandler","EVENTS_MAP","unbindEvents","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","commit","HTMLInputMaskElement","setSelectionRange","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","isContentEditable","tagName","masked","_listeners","_value","_unmaskedValue","_saveSelection","bind","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","maskEquals","_this$masked","updateOptions","unmaskedValue","updateControl","typedValue","val","typedValueEquals","displayValue","_unbindEvents","_fireEvent","ev","e","listeners","l","_cursorChanging","_changingCursorPos","pos","_selection","newUnmaskedValue","newValue","newDisplayValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","isComplete","clearTimeout","nearestInputPos","on","push","off","hIndex","indexOf","splice","details","oldRawValue","rawInputValue","offset","raw","doCommit","preventDefault","stopPropagation","destroy","ChangeDetails","static","prep","rawInserted","skip","tailShift","aggregate","ContinuousTailDetails","from","stop","extend","appendTo","append","_appendPlaceholder","state","unshift","beforePos","shiftChar","shift","_update","DEFAULTS","_initialized","withValueRefresh","_rawInputValue","reset","resolve","flags","parse","format","extractInput","isFilled","direction","totalInputPositions","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","checkTail","consistentState","doPrepareChar","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","_beforeTailState","doPrepare","ci","d","doSkipInvalid","eager","remove","fn","_refreshing","rawInput","ret","runIsolated","_isolated","skipInvalid","normalize","prepare","prepareChar","validate","parent","deleteCount","tailPos","eagerRemove","forceDirection","valLength","tval","EMPTY_VALUES","undefined","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","phDetails","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","_log","ok","block","_blockStartPos","s","pushState","popState","pop","bindBlock","_pushLeft","_this$block","_pushRight","pushLeftBeforeFilled","isFixed","pushLeftBeforeInput","pushLeftBeforeRequired","isOptional","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","PatternFixedDefinition","isUnmasking","_isRawInput","maxPos","isResolved","char","PatternInputDefinition","placeholderChar","displayChar","lazy","maskOpts","currentMaskFlags","boundPos","_flags$_beforeTailSta","DEFAULT_DEFINITIONS","search","definitions","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","bi","every","_this$_mapPosToBlock","startBlockIndex","blockIter","_flags$_beforeTailSta2","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","stopBefore","si","toBlockIndex","startBlockIter","_blocks2","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","removeDetails","cursor","total","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_matchFrom","maxLength","to","autofix","patternOpts","fromStr","padStart","toStr","sameCharsCount","repeat","boundaries","minstr","maxstr","placeholder","num","match","padEnd","nextVal","patternBlocks","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","bk","date","isDateExist","day","month","year","split","currentMask","compiledMasks","_overwrite","_eager","_skipInvalid","_applyDispatch","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","oldMask","_this$currentMask5","inputs","isCurrent","startInputPos","weight","i1","i2","MaskedEnum","enum","_enum","eopts","some","_updateRegExps","allowNegative","scale","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","allowPositive","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailSeparatorsCount","appendDetails","beforeTailSeparatorsCount","_findSeparatorAround","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","isNaN","number","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","UNMASKED_RADIX","n","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","toLocaleString","useGrouping","maximumFractionDigits","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","arg","pipe","globalThis","NullableNumberMask","options","isDefined","DefaultImaskFactory","create","ɵfac","t","ɵprov","i0","token","factory","providedIn","IMASK_FACTORY","InjectionToken","inject","MASKEDINPUT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","IMaskDirective","multi","DEFAULT_IMASK_ELEMENT","elementRef","nativeElement","onTouched","onChange","_viewInitialized","_composing","_writing","_elementRef","ElementRef","_renderer","Renderer2","_factory","_platformId","PLATFORM_ID","_compositionMode","COMPOSITION_BUFFER_MODE","optional","_isAndroid","imaskElement","accept","EventEmitter","complete","element","maskValue","maskRef","unmask","setProperty","ngAfterViewInit","imask","initMask","ngOnChanges","changes","destroyMask","ngOnDestroy","beginWrite","_writingValue","endWrite","writeValue","_initialValue","_onAccept","emit","_onComplete","setDisabledState","isDisabled","registerOnChange","registerOnTouched","_handleInput","_compositionStart","_compositionEnd","isPlatformBrowser","navigator","userAgent","toLowerCase","ɵdir","type","selectors","hostBindings","rf","ctx","$event","target","outputs","exportAs","standalone","features","option_r4","label","routes","path","component","ImaskComponent","formGroup","FormGroup","FormControl","maskType","maskOptions","buildStringMask","log","imaskRef","onApply","get","setValue","requestAnimationFrame","buildNumberMask","buildNumberSearchMask","buildDateMask","buildDateSearchMask","signed","parseFloat","NaN","isFinite","mdy","parseInt","core","Xpm","viewQuery","ImaskComponent_forge_option_27_Template","ImaskModule","oAB","cJS","CommonModule","RouterModule","forChild","AppFormsModule","_angular_core__WEBPACK_IMPORTED_MODULE_0__","FormsModule","ReactiveFormsModule","ForgeModule"],"sourceRoot":"webpack:///","sources":["./node_modules/imask/esm/core/utils.js","./node_modules/imask/esm/core/action-details.js","./node_modules/imask/esm/core/holder.js","./node_modules/imask/esm/masked/factory.js","./node_modules/imask/esm/controls/mask-element.js","./node_modules/imask/esm/controls/html-mask-element.js","./node_modules/imask/esm/controls/html-input-mask-element.js","./node_modules/imask/esm/controls/html-contenteditable-mask-element.js","./node_modules/imask/esm/controls/input.js","./node_modules/imask/esm/core/change-details.js","./node_modules/imask/esm/core/continuous-tail-details.js","./node_modules/imask/esm/masked/base.js","./node_modules/imask/esm/masked/pattern/chunk-tail-details.js","./node_modules/imask/esm/masked/pattern/cursor.js","./node_modules/imask/esm/masked/pattern/fixed-definition.js","./node_modules/imask/esm/masked/pattern/input-definition.js","./node_modules/imask/esm/masked/regexp.js","./node_modules/imask/esm/masked/pattern.js","./node_modules/imask/esm/masked/range.js","./node_modules/imask/esm/masked/date.js","./node_modules/imask/esm/masked/dynamic.js","./node_modules/imask/esm/masked/enum.js","./node_modules/imask/esm/masked/function.js","./node_modules/imask/esm/masked/number.js","./node_modules/imask/esm/masked/pipe.js","./node_modules/imask/esm/index.js","./src/app/imask/nullable-number-mask.ts","./node_modules/angular-imask/fesm2022/angular-imask.mjs","./src/app/imask/imask.component.html","./src/app/imask/imask.module.ts","./src/app/imask/imask.component.ts","./src/app/shared/app-forms.module.ts"],"sourcesContent":["/** Checks if value is string */\nfunction isString(str) {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nfunction isObject(obj) {\n  var _obj$constructor;\n  return typeof obj === 'object' && obj != null && (obj == null ? void 0 : (_obj$constructor = obj.constructor) == null ? void 0 : _obj$constructor.name) === 'Object';\n}\nfunction pick(obj, keys) {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [k, v] = _ref;\n    if (keys(v, k)) acc[k] = v;\n    return acc;\n  }, {});\n}\n\n/** Direction */\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT'\n};\n\n/** Direction */\n\nfunction forceDirection(direction) {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nfunction escapeRegExp(str) {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nfunction objectIncludes(b, a) {\n  if (a === b) return true;\n  const arrA = Array.isArray(a),\n    arrB = Array.isArray(b);\n  let i;\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++) if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n  if (arrA != arrB) return false;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date,\n      dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n    const regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = 0; i < keys.length; i++) if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n    return a.toString() === b.toString();\n  }\n  return false;\n}\n\n/** Selection range */\n\nexport { DIRECTION, escapeRegExp, forceDirection, isObject, isString, objectIncludes, pick };\n","import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n","/** Applies mask on element */\nfunction IMask(el, opts) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\nexport { IMask as default };\n","import { isString, isObject, pick } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n/** Get Masked class by mask type */\nfunction maskedClass(mask) /* TODO */{\n  if (mask == null) throw new Error('mask property should be defined');\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  return IMask.Masked;\n}\nfunction normalizeOpts(opts) {\n  if (!opts) throw new Error('Options in not defined');\n  if (IMask.Masked) {\n    if (opts.prototype instanceof IMask.Masked) return {\n      mask: opts\n    };\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const {\n      mask = undefined,\n      ...instanceOpts\n    } = opts instanceof IMask.Masked ? {\n      mask: opts\n    } : isObject(opts) && opts.mask instanceof IMask.Masked ? opts : {};\n    if (mask) {\n      const _mask = mask.mask;\n      return {\n        ...pick(mask, (_, k) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts\n      };\n    }\n  }\n  if (!isObject(opts)) return {\n    mask: opts\n  };\n  return {\n    ...opts\n  };\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nfunction createMask(opts) {\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  const nOpts = normalizeOpts(opts);\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be imported manually before creating mask.');\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if (nOpts._mask) {\n    nOpts.mask = nOpts._mask;\n    delete nOpts._mask;\n  }\n  return new MaskedClass(nOpts);\n}\nIMask.createMask = createMask;\n\nexport { createMask as default, maskedClass, normalizeOpts };\n","import IMask from '../core/holder.js';\n\n/**  Generic element API to use with mask */\nclass MaskElement {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Safely returns selection start */\n  get selectionStart() {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n    return start != null ? start : this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd() {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n    return end != null ? end : this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select(start, end) {\n    if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive() {\n    return false;\n  }\n  /** */\n\n  /** */\n\n  /** */\n}\n\nIMask.MaskElement = MaskElement;\n\nexport { MaskElement as default };\n","import MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n/** Bridge between HTMLElement and {@link Masked} */\nclass HTMLMaskElement extends MaskElement {\n  /** HTMLElement to use mask on */\n\n  constructor(input) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n  get rootElement() {\n    var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n    return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) == null ? void 0 : _this$input$getRootNo2.call(_this$input)) != null ? _this$input$getRootNo : document;\n  }\n\n  /**\n    Is element in focus\n  */\n  get isActive() {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n  */\n  bindEvents(handlers) {\n    Object.keys(handlers).forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n  */\n  unbindEvents() {\n    Object.keys(this._handlers).forEach(event => this._toggleEventHandler(event));\n  }\n  _toggleEventHandler(event, handler) {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\n/** Mapping between HTMLElement events and mask internal events */\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur'\n};\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLInputMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /** Returns HTMLElement selection start */\n  get _unsafeSelectionStart() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  get _unsafeSelectionEnd() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  _unsafeSelect(start, end) {\n    if (!this.rootElement.createRange) return;\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  get value() {\n    return this.input.textContent || '';\n  }\n  set value(value) {\n    this.input.textContent = value;\n  }\n}\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\nexport { HTMLContenteditableMaskElement as default };\n","import { objectIncludes, DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLInputMaskElement from './html-input-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './html-mask-element.js';\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n  */\n\n  /** Internal {@link Masked} model */\n\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLInputMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) == null ? void 0 : _this$masked.maskEquals(mask));\n  }\n\n  /** Masked */\n  get mask() {\n    return this.masked.mask;\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = mask instanceof IMask.Masked ? mask : createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent(ev, e) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl() {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n      mask,\n      ...restOpts\n    } = opts;\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts); // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection\n    });\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    this._listeners.length = 0;\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n","import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Can skip chars */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n","/** Provides details of continuous extracted tail */\nclass ContinuousTailDetails {\n  /** Tail value as string */\n\n  /** Tail start position */\n\n  /** Start position */\n\n  constructor(value, from, stop) {\n    if (value === void 0) {\n      value = '';\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n  toString() {\n    return this.value;\n  }\n  extend(tail) {\n    this.value += String(tail);\n  }\n  appendTo(masked) {\n    return masked.append(this.toString(), {\n      tail: true\n    }).aggregate(masked._appendPlaceholder());\n  }\n  get state() {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop\n    };\n  }\n  set state(state) {\n    Object.assign(this, state);\n  }\n  unshift(beforePos) {\n    if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n  shift() {\n    if (!this.value.length) return '';\n    const shiftChar = this.value[this.value.length - 1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n\nexport { ContinuousTailDetails as default };\n","import ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { isString, DIRECTION, forceDirection } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n/** Append flags */\n\n/** Extract flags */\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\n/** Provides common masking stuff */\nclass Masked {\n  /** */\n\n  /** */\n\n  /** Transforms value before mask processing */\n\n  /** Transforms each char before mask processing */\n\n  /** Validates if value is acceptable */\n\n  /** Does additional processing at the end of editing */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions(opts) {\n    if (!Object.keys(opts).length) return;\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update(opts) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset() {\n    this._value = '';\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.resolve(value, {\n      input: true\n    });\n  }\n\n  /** Resolve new value */\n  resolve(value, flags) {\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n  get unmaskedValue() {\n    return this.value;\n  }\n  set unmaskedValue(value) {\n    this.resolve(value, {});\n  }\n  get typedValue() {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue;\n  }\n  set typedValue(value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue() {\n    return this.extractInput(0, this.value.length, {\n      raw: true\n    });\n  }\n  set rawInputValue(value) {\n    this.resolve(value, {\n      raw: true\n    });\n  }\n  get displayValue() {\n    return this.value;\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos(cursorPos, direction) {\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return Math.min(this.value.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.value.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw(ch, flags) {\n    if (!ch) return new ChangeDetails();\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch\n    });\n  }\n\n  /** Appends char */\n  _appendChar(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const consistentState = this.state;\n    let details;\n    [ch, details] = this.doPrepareChar(ch, flags);\n    details = details.aggregate(this._appendCharRaw(ch, flags));\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          checkTail.unshift(this.value.length - details.tailShift);\n        }\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted === checkTail.toString();\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          checkTail.shift();\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted === checkTail.toString();\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder() {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager() {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append(str, flags, tail) {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags != null && flags.tail) flags._beforeTailState = this.state;\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n    for (let ci = 0; ci < str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n    if ((this.eager === true || this.eager === 'append') && flags != null && flags.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n\n    return details;\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh(fn) {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n    const ret = fn();\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.value.length), {}, '');\n    }\n    delete this._refreshing;\n    return ret;\n  }\n  runIsolated(fn) {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n    const ret = fn(this);\n    this.state = state;\n    delete this._isolated;\n    return ret;\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepare ? this.prepare(str, this, flags) : str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepareChar ? this.prepareChar(str, this, flags) : str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate(flags) {\n    return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit() {\n    if (this.commit) this.commit(this.value, this);\n  }\n  splice(start, deleteCount, inserted, removeDirection, flags) {\n    if (removeDirection === void 0) {\n      removeDirection = DIRECTION.NONE;\n    }\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    const tailPos = start + deleteCount;\n    const tail = this.extractTail(tailPos);\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n    let oldRawValue;\n    if (eagerRemove) {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {\n        raw: true\n      });\n    }\n    let startChangePos = start;\n    const details = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !eagerRemove ? DIRECTION.NONE : removeDirection);\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n    details.aggregate(this.remove(startChangePos));\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {\n          details.aggregate(new ChangeDetails({\n            tailShift: -1\n          })).aggregate(this.remove(valLength - 1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n  maskEquals(mask) {\n    return this.mask === mask;\n  }\n  typedValueEquals(value) {\n    const tval = this.typedValue;\n    return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n}\nMasked.DEFAULTS = {\n  skipInvalid: true\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\nIMask.Masked = Masked;\n\nexport { Masked as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\nclass ChunksTailDetails {\n  /** */\n\n  constructor(chunks, from) {\n    if (chunks === void 0) {\n      chunks = [];\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.chunks = chunks;\n    this.from = from;\n  }\n  toString() {\n    return this.chunks.map(String).join('');\n  }\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    tailChunk = isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk;\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && (\n    // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n    // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift(); // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n  appendTo(masked) {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n    const details = new ChangeDetails();\n    for (let ci = 0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null && (\n      // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails ||\n        // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          const phDetails = masked._appendPlaceholder(stop);\n          details.aggregate(phDetails);\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n    return details;\n  }\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n  set state(state) {\n    const {\n      chunks,\n      ...props\n    } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n}\n\nexport { ChunksTailDetails as default };\n","import { DIRECTION } from '../../core/utils.js';\n\nclass PatternCursor {\n  constructor(masked, pos) {\n    this.masked = masked;\n    this._log = [];\n    const {\n      offset,\n      index\n    } = masked._mapPosToBlock(pos) || (pos < 0 ?\n    // first\n    {\n      index: 0,\n      offset: 0\n    } :\n    // last\n    {\n      index: this.masked._blocks.length,\n      offset: 0\n    });\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n  get block() {\n    return this.masked._blocks[this.index];\n  }\n  get pos() {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n  get state() {\n    return {\n      index: this.index,\n      offset: this.offset,\n      ok: this.ok\n    };\n  }\n  set state(s) {\n    Object.assign(this, s);\n  }\n  pushState() {\n    this._log.push(this.state);\n  }\n  popState() {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n  bindBlock() {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.value.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n\n  _pushLeft(fn) {\n    this.pushState();\n    for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) == null ? void 0 : _this$block.value.length) || 0) {\n      var _this$block;\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  _pushRight(fn) {\n    this.pushState();\n    for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  pushLeftBeforeFilled() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n  pushLeftBeforeInput() {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushLeftBeforeRequired() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushRightBeforeFilled() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n  pushRightBeforeInput() {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n  pushRightBeforeRequired() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n\nexport { PatternCursor as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\n\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n}\n\nexport { PatternFixedDefinition as default };\n","import createMask from '../factory.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION } from '../../core/utils.js';\nimport '../../core/holder.js';\n\nclass PatternInputDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    const {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager,\n      ...maskOpts\n    } = opts;\n    this.masked = createMask(maskOpts);\n    Object.assign(this, {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager\n    });\n  }\n  reset() {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n    return new ChangeDetails();\n  }\n  get value() {\n    return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\n  }\n  get unmaskedValue() {\n    return this.masked.unmaskedValue;\n  }\n  get rawInputValue() {\n    return this.masked.rawInputValue;\n  }\n  get displayValue() {\n    return this.masked.value && this.displayChar || this.value;\n  }\n  get isComplete() {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const state = this.masked.state;\n    // simulate input\n    const details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n    if (details.inserted && this.doValidate(flags) === false) {\n      details.inserted = details.rawInserted = '';\n      this.masked.state = state;\n    }\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n    return details;\n  }\n  append(str, flags, tail) {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled || this.isOptional) return details;\n    this.isFilled = true;\n    details.inserted = this.placeholderChar;\n    return details;\n  }\n  _appendEager() {\n    return new ChangeDetails();\n  }\n  extractTail(fromPos, toPos) {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n  appendTail(tail) {\n    return this.masked.appendTail(tail);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default:\n        return boundPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.value.slice(fromPos, toPos).length;\n  }\n  doValidate(flags) {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n  doCommit() {\n    this.masked.doCommit();\n  }\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled\n    };\n  }\n  set state(state) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta;\n    return {\n      ...flags,\n      _beforeTailState: (flags == null ? void 0 : (_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.masked) || (flags == null ? void 0 : flags._beforeTailState)\n    };\n  }\n}\nPatternInputDefinition.DEFAULT_DEFINITIONS = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\nexport { PatternInputDefinition as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const mask = opts.mask;\n    if (mask) opts.validate = value => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\n\nexport { MaskedRegExp as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport { DIRECTION } from '../core/utils.js';\nimport Masked from './base.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport PatternCursor from './pattern/cursor.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport PatternInputDefinition from './pattern/input-definition.js';\nimport './regexp.js';\nimport '../core/continuous-tail-details.js';\n\n/** Pattern mask */\nclass MaskedPattern extends Masked {\n  /** */\n\n  /** */\n\n  /** Single char for empty input */\n\n  /** Single char for filled input */\n\n  /** Show placeholder only when needed */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts == null ? void 0 : opts.definitions)\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n  _rebuildMask() {\n    const defs = this.definitions;\n    this._blocks = [];\n    this._stops = [];\n    this._maskedBlocks = {};\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n    for (let i = 0; i < pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const maskedBlock = createMask({\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            ...normalizeOpts(this.blocks[bName]),\n            parent: this\n          });\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n          i += bName.length - 1;\n          continue;\n        }\n      }\n      let char = pattern[i];\n      let isInput = (char in defs);\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n      const def = isInput ? new PatternInputDefinition({\n        isOptional: optionalBlock,\n        lazy: this.lazy,\n        eager: this.eager,\n        placeholderChar: this.placeholderChar,\n        displayChar: this.displayChar,\n        ...normalizeOpts(defs[char]),\n        parent: this\n      }) : new PatternFixedDefinition({\n        char,\n        eager: this.eager,\n        isUnmasking: unmaskingBlock\n      });\n      this._blocks.push(def);\n    }\n  }\n  get state() {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state)\n    };\n  }\n  set state(state) {\n    const {\n      _blocks,\n      ...maskedState\n    } = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n  reset() {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n  get isComplete() {\n    return this._blocks.every(b => b.isComplete);\n  }\n  get isFilled() {\n    return this._blocks.every(b => b.isFilled);\n  }\n  get isFixed() {\n    return this._blocks.every(b => b.isFixed);\n  }\n  get isOptional() {\n    return this._blocks.every(b => b.isOptional);\n  }\n  doCommit() {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n  get unmaskedValue() {\n    return this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get value() {\n    // TODO return _value when not in change?\n    return this._blocks.reduce((str, b) => str += b.value, '');\n  }\n  set value(value) {\n    super.value = value;\n  }\n  get displayValue() {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n  appendTail(tail) {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n  _appendEager() {\n    var _this$_mapPosToBlock;\n    const details = new ChangeDetails();\n    let startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.value.length)) == null ? void 0 : _this$_mapPosToBlock.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n    for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n      details.aggregate(d);\n    }\n    return details;\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const blockIter = this._mapPosToBlock(this.value.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n    for (let bi = blockIter.index;; ++bi) {\n      var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n      const block = this._blocks[bi];\n      if (!block) break;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : (_flags$_beforeTailSta2 = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta2[bi]\n      });\n      const skip = blockDetails.skip;\n      details.aggregate(blockDetails);\n      if (skip || blockDetails.rawInserted) break; // go next char\n    }\n\n    return details;\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n      chunkTail.extend(blockChunk);\n    });\n    return chunkTail;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (fromPos === toPos) return '';\n    let input = '';\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n    return input;\n  }\n  _findStopBefore(blockIndex) {\n    let stopBefore;\n    for (let si = 0; si < this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder(toBlockIndex) {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n    const startBlockIter = this._mapPosToBlock(this.value.length);\n    if (!startBlockIter) return details;\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n    this._blocks.slice(startBlockIndex, endBlockIndex).forEach(b => {\n      if (!b.lazy || toBlockIndex != null) {\n        var _blocks2;\n        const bDetails = b._appendPlaceholder((_blocks2 = b._blocks) == null ? void 0 : _blocks2.length);\n        this._value += bDetails.inserted;\n        details.aggregate(bDetails);\n      }\n    });\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock(pos) {\n    let accVal = '';\n    for (let bi = 0; bi < this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n      accVal += block.value;\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos\n        };\n      }\n    }\n  }\n  _blockStartPos(blockIndex) {\n    return this._blocks.slice(0, blockIndex).reduce((pos, b) => pos += b.value.length, 0);\n  }\n  _forEachBlocksInRange(fromPos, toPos, fn) {\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].value.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.value.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return 0;\n    }\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.value.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock(name) {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks(name) {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\nMaskedPattern.DEFAULTS = {\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\nIMask.MaskedPattern = MaskedPattern;\n\nexport { MaskedPattern as default };\n","import IMask from '../core/holder.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/change-details.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which accepts ranges */\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n\n  /** Min bound */\n\n  /** Max bound */\n\n  /** */\n\n  get _matchFrom() {\n    return this.maxLength - String(this.from).length;\n  }\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      to = this.to || 0,\n      from = this.from || 0,\n      maxLength = this.maxLength || 0,\n      autofix = this.autofix,\n      ...patternOpts\n    } = opts;\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n    super._update(patternOpts);\n  }\n  get isComplete() {\n    return super.isComplete && Boolean(this.value);\n  }\n  boundaries(str) {\n    let minstr = '';\n    let maxstr = '';\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n    return [minstr, maxstr];\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let details;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n    if (!this.autofix || !ch) return [ch, details];\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    const nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return ['', details];\n    const [minstr, maxstr] = this.boundaries(nextVal);\n    if (Number(maxstr) < this.from) return [fromStr[nextVal.length - 1], details];\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1] + ch, flags))];\n      }\n      return [toStr[nextVal.length - 1], details];\n    }\n    return [ch, details];\n  }\n  doValidate(flags) {\n    const str = this.value;\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n    const [minstr, maxstr] = this.boundaries(str);\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to && super.doValidate(flags);\n  }\n}\nIMask.MaskedRange = MaskedRange;\n\nexport { MaskedRange as default };\n","import MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport { isString } from '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Date mask */\nclass MaskedDate extends MaskedPattern {\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    const {\n      mask,\n      pattern,\n      ...patternOpts\n    } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    };\n    super({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      mask,\n      pattern,\n      blocks,\n      ...patternOpts\n    } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    };\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(patternBlocks).forEach(bk => {\n      const b = patternBlocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks\n    });\n  }\n  doValidate(flags) {\n    const date = this.date;\n    return super.doValidate(flags) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist(str) {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date() {\n    return this.typedValue;\n  }\n  set date(date) {\n    this.typedValue = date;\n  }\n  get typedValue() {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue(value) {\n    super.typedValue = value;\n  }\n  maskEquals(mask) {\n    return mask === Date || super.maskEquals(mask);\n  }\n}\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999\n  }\n});\nMaskedDate.DEFAULTS = {\n  mask: Date,\n  pattern: 'd{.}`m{.}`Y',\n  format: (date, masked) => {\n    if (!date) return '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return [day, month, year].join('.');\n  },\n  parse: (str, masked) => {\n    const [day, month, year] = str.split('.').map(Number);\n    return new Date(year, month - 1, day);\n  }\n};\nIMask.MaskedDate = MaskedDate;\n\nexport { MaskedDate as default };\n","import { DIRECTION, objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nclass MaskedDynamic extends Masked {\n  /** Currently chosen mask */\n\n  /** Compliled {@link Masked} options */\n\n  /** Chooses {@link Masked} depending on input value */\n\n  constructor(opts) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n    this.currentMask = undefined;\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    if ('mask' in opts) {\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(m => createMask({\n        overwrite: this._overwrite,\n        eager: this._eager,\n        skipInvalid: this._skipInvalid,\n        ...normalizeOpts(m)\n      })) : [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = this._applyDispatch(ch, flags);\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n    return details;\n  }\n  _applyDispatch(appended, flags, tail) {\n    if (appended === void 0) {\n      appended = '';\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._rawInputValue : inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n    const prevMaskState = prevMask == null ? void 0 : prevMask.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, {\n      ...flags\n    }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n        if (insertValue) {\n          const d = this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n        }\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {\n            raw: true,\n            tail: true\n          }).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n    return details;\n  }\n  _appendPlaceholder() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n    return details;\n  }\n  _appendEager() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n    return details;\n  }\n  appendTail(tail) {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n    return details.aggregate(this.currentMask ? this.currentMask.appendTail(tail) : super.appendTail(tail));\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n    return {\n      ...flags,\n      _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n    };\n  }\n  doDispatch(appended, flags, tail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    return this.dispatch(appended, this, flags, tail);\n  }\n  doValidate(flags) {\n    return super.doValidate(flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n  }\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepare(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepareChar(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  reset() {\n    var _this$currentMask;\n    (_this$currentMask = this.currentMask) == null ? void 0 : _this$currentMask.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n  get value() {\n    return this.currentMask ? this.currentMask.value : '';\n  }\n  set value(value) {\n    super.value = value;\n  }\n  get unmaskedValue() {\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.currentMask ? this.currentMask.typedValue : '';\n  }\n\n  // probably typedValue should not be used with dynamic\n  set typedValue(value) {\n    let unmaskedValue = String(value);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = value;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n  get displayValue() {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n  get isComplete() {\n    var _this$currentMask2;\n    return Boolean((_this$currentMask2 = this.currentMask) == null ? void 0 : _this$currentMask2.isComplete);\n  }\n  get isFilled() {\n    var _this$currentMask3;\n    return Boolean((_this$currentMask3 = this.currentMask) == null ? void 0 : _this$currentMask3.isFilled);\n  }\n  remove(fromPos, toPos) {\n    const details = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n      // update with dispatch\n      .aggregate(this._applyDispatch());\n    }\n    return details;\n  }\n  get state() {\n    var _this$currentMask4;\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: (_this$currentMask4 = this.currentMask) == null ? void 0 : _this$currentMask4.state\n    };\n  }\n  set state(state) {\n    const {\n      compiledMasks,\n      currentMaskRef,\n      currentMask,\n      ...maskedState\n    } = state;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n  extractInput(fromPos, toPos, flags) {\n    return this.currentMask ? this.currentMask.extractInput(fromPos, toPos, flags) : '';\n  }\n  extractTail(fromPos, toPos) {\n    return this.currentMask ? this.currentMask.extractTail(fromPos, toPos) : super.extractTail(fromPos, toPos);\n  }\n  doCommit() {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n  nearestInputPos(cursorPos, direction) {\n    return this.currentMask ? this.currentMask.nearestInputPos(cursorPos, direction) : super.nearestInputPos(cursorPos, direction);\n  }\n  get overwrite() {\n    return this.currentMask ? this.currentMask.overwrite : this._overwrite;\n  }\n  set overwrite(overwrite) {\n    this._overwrite = overwrite;\n  }\n  get eager() {\n    return this.currentMask ? this.currentMask.eager : this._eager;\n  }\n  set eager(eager) {\n    this._eager = eager;\n  }\n  get skipInvalid() {\n    return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;\n  }\n  set skipInvalid(skipInvalid) {\n    this._skipInvalid = skipInvalid;\n  }\n  maskEquals(mask) {\n    return Array.isArray(mask) ? this.compiledMasks.every((m, mi) => {\n      if (!mask[mi]) return;\n      const {\n        mask: oldMask,\n        ...restOpts\n      } = mask[mi];\n      return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n    }) : super.maskEquals(mask);\n  }\n  typedValueEquals(value) {\n    var _this$currentMask5;\n    return Boolean((_this$currentMask5 = this.currentMask) == null ? void 0 : _this$currentMask5.typedValueEquals(value));\n  }\n}\nMaskedDynamic.DEFAULTS = void 0;\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.value.length : m.nearestInputPos(m.value.length, DIRECTION.FORCE_LEFT);\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, {\n          raw: true\n        });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(0, Math.max(startInputPos, m.nearestInputPos(m.value.length, DIRECTION.FORCE_LEFT)))\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n","import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: _enum,\n      ...eopts\n    } = opts;\n    if (_enum) {\n      eopts.mask = '*'.repeat(_enum[0].length);\n      this.enum = _enum;\n    }\n    super._update(eopts);\n  }\n  doValidate(flags) {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) && super.doValidate(flags);\n  }\n}\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by custom Function */\nclass MaskedFunction extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update({\n      ...opts,\n      validate: opts.mask\n    });\n  }\n}\nIMask.MaskedFunction = MaskedFunction;\n\nexport { MaskedFunction as default };\n","import { escapeRegExp, DIRECTION } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/**\n  Number mask\n*/\nclass MaskedNumber extends Masked {\n  /** Single char */\n\n  /** Single char */\n\n  /** Array of single chars */\n\n  /** */\n\n  /** */\n\n  /** Digits after point */\n\n  /** Flag to remove leading and trailing zeros in the end of editing */\n\n  /** Flag to pad trailing zeros after point in the end of editing */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n  _updateRegExps() {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ? \"(\" + escapeRegExp(this.radix) + \"\\\\d{0,\" + this.scale + \"})?\" : '') + '$';\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(\"[\" + this.mapToRadix.map(escapeRegExp).join('') + \"]\", 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n  _removeThousandsSeparators(value) {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n  _insertThousandsSeparators(value) {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    ch = this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (\n    /*\n      radix should be mapped when\n      1) input is done from keyboard = flags.input && flags.raw\n      2) unmasked value is set = !flags.input && !flags.raw\n      and should not be mapped when\n      1) value is set = flags.input && !flags.raw\n      2) raw value is set = !flags.input && flags.raw\n    */\n    flags.input && flags.raw || !flags.input && !flags.raw) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch);\n    const [prepCh, details] = super.doPrepareChar(ch, flags);\n    if (ch && !prepCh) details.skip = true;\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n    return [prepCh, details];\n  }\n  _separatorsCount(to, extendOnSeparators) {\n    if (extendOnSeparators === void 0) {\n      extendOnSeparators = false;\n    }\n    let count = 0;\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n    return count;\n  }\n  _separatorsCountFromSlice(slice) {\n    if (slice === void 0) {\n      slice = this._value;\n    }\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n    const appendDetails = super._appendCharRaw(ch, flags);\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n    return appendDetails;\n  }\n  _findSeparatorAround(pos) {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n    return -1;\n  }\n  _adjustRangeWithSeparators(from, to) {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n    });\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (!this.thousandsSeparator) return cursorPos;\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        {\n          const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n          if (separatorAtLeftPos >= 0) {\n            const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n            if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\n              return separatorAtLeftPos;\n            }\n          }\n          break;\n        }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        {\n          const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n          if (separatorAtRightPos >= 0) {\n            return separatorAtRightPos + this.thousandsSeparator.length;\n          }\n        }\n    }\n    return cursorPos;\n  }\n  doValidate(flags) {\n    // validate as string\n    let valid = Boolean(this._removeThousandsSeparators(this.value).match(this._numberRegExp));\n    if (valid) {\n      // validate as number\n      const number = this.number;\n      valid = valid && !isNaN(number) && (\n      // check min bound for negative values\n      this.min == null || this.min >= 0 || this.min <= this.number) && (\n      // check max bound for positive values\n      this.max == null || this.max <= 0 || this.number <= this.max);\n    }\n    return valid && super.doValidate(flags);\n  }\n  doCommit() {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n      let formatted = this.value;\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n      this._value = formatted;\n    }\n    super.doCommit();\n  }\n  _normalizeZeros(value) {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n      if (!parts[1].length) parts.length = 1; // remove fractional\n    }\n\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n  _padFractionalZeros(value) {\n    if (!value) return value;\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (ch === this.radix || ch === MaskedNumber.UNMASKED_RADIX || this.mapToRadix.includes(ch));\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n  get unmaskedValue() {\n    return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.parse(this.unmaskedValue, this);\n  }\n  set typedValue(n) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number() {\n    return this.typedValue;\n  }\n  set number(number) {\n    this.typedValue = number;\n  }\n\n  /**\n    Is negative allowed\n  */\n  get allowNegative() {\n    return this.min != null && this.min < 0 || this.max != null && this.max < 0;\n  }\n\n  /**\n    Is positive allowed\n  */\n  get allowPositive() {\n    return this.min != null && this.min > 0 || this.max != null && this.max > 0;\n  }\n  typedValueEquals(value) {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (super.typedValueEquals(value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\n  }\n}\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\nMaskedNumber.DEFAULTS = {\n  mask: Number,\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [MaskedNumber.UNMASKED_RADIX],\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  scale: 2,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', {\n    useGrouping: false,\n    maximumFractionDigits: 20\n  })\n};\nIMask.MaskedNumber = MaskedNumber;\n\nexport { MaskedNumber as default };\n","import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n","export { default as InputMask } from './controls/input.js';\nimport IMask from './core/holder.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { default as HTMLInputMaskElement } from './controls/html-input-mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as ChangeDetails } from './core/change-details.js';\nexport { DIRECTION, forceDirection } from './core/utils.js';\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as createMask, normalizeOpts } from './masked/factory.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as ChunksTailDetails } from './masked/pattern/chunk-tail-details.js';\nexport { default as PatternFixedDefinition } from './masked/pattern/fixed-definition.js';\nexport { default as PatternInputDefinition } from './masked/pattern/input-definition.js';\nexport { PIPE_TYPE, createPipe, pipe } from './masked/pipe.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nimport './core/action-details.js';\nimport './core/continuous-tail-details.js';\nimport './masked/pattern/cursor.js';\n\ntry {\n  globalThis.IMask = IMask;\n} catch {}\n\nexport { IMask as default };\n","import * as IMask from 'imask';\r\nimport { isDefined } from '@tylertech/forge-core';\r\n\r\nexport class NullableNumberMask extends IMask.MaskedNumber {\r\n  constructor(options: any) {\r\n    options.format = (value: any) => isDefined(value) ? value.toString() : '';\r\n    super(options);\r\n  }\r\n\r\n  public override append(str: string, flags?: IMask.AppendFlags, tail?: string | String | IMask.TailDetails): IMask.ChangeDetails {\r\n    return super.append(isDefined(str) ? str.toString() : '', flags, tail);\r\n  }\r\n\r\n  // @ts-ignore\r\n  public override get typedValue() {\r\n    return this.unmaskedValue !== '' ? super.typedValue : null;\r\n  }\r\n\r\n  // @ts-ignore\r\n  public override set typedValue(value) {\r\n    super.typedValue = value ?? '' as any;\r\n  }\r\n}","import IMask, { pipe } from 'imask';\nexport { default as IMask, PIPE_TYPE, pipe } from 'imask';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, inject, forwardRef, ElementRef, Renderer2, PLATFORM_ID, EventEmitter, Directive, Input, Output, Pipe, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE } from '@angular/forms';\n\nclass DefaultImaskFactory {\n    create(el, opts) {\n        return IMask(el, opts);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.2\", ngImport: i0, type: DefaultImaskFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.2\", ngImport: i0, type: DefaultImaskFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.2\", ngImport: i0, type: DefaultImaskFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst IMASK_FACTORY = new InjectionToken('IMASK_FACTORY', { providedIn: 'root', factory: () => inject(DefaultImaskFactory) });\n\nconst MASKEDINPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => IMaskDirective),\n    multi: true,\n};\nconst DEFAULT_IMASK_ELEMENT = (elementRef) => elementRef.nativeElement;\nclass IMaskDirective {\n    constructor() {\n        this.onTouched = () => { };\n        this.onChange = () => { };\n        this._viewInitialized = false;\n        this._composing = false;\n        this._writing = false;\n        this._elementRef = inject(ElementRef);\n        this._renderer = inject(Renderer2);\n        this._factory = inject(IMASK_FACTORY);\n        this._platformId = inject(PLATFORM_ID);\n        this._compositionMode = inject(COMPOSITION_BUFFER_MODE, { optional: true }) ?? !this._isAndroid();\n        this.imaskElement = DEFAULT_IMASK_ELEMENT;\n        this.accept = new EventEmitter();\n        this.complete = new EventEmitter();\n    }\n    get element() {\n        return this.imaskElement(this._elementRef, this);\n    }\n    get maskValue() {\n        if (!this.maskRef)\n            return (this.element?.value || '');\n        if (this.unmask === 'typed')\n            return this.maskRef.typedValue;\n        if (this.unmask)\n            return this.maskRef.unmaskedValue;\n        return this.maskRef.value;\n    }\n    set maskValue(value) {\n        if (this.maskRef) {\n            if (this.unmask === 'typed')\n                this.maskRef.typedValue = value;\n            else if (this.unmask)\n                this.maskRef.unmaskedValue = value;\n            else\n                this.maskRef.value = value;\n        }\n        else {\n            this._renderer.setProperty(this.element, 'value', value);\n        }\n    }\n    ngAfterViewInit() {\n        if (this.imask)\n            this.initMask();\n        this._viewInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (changes['elementRef'] && !this.imaskElement)\n            this.imaskElement = DEFAULT_IMASK_ELEMENT;\n        if (!changes['imask'] || !this._viewInitialized)\n            return;\n        if (this.imask) {\n            if (this.maskRef)\n                this.maskRef.updateOptions(this.imask);\n            else {\n                this.initMask();\n                this.onChange(this.maskValue);\n            }\n        }\n        else {\n            this.destroyMask();\n        }\n    }\n    destroyMask() {\n        if (this.maskRef) {\n            this.maskRef.destroy();\n            delete this.maskRef;\n        }\n    }\n    ngOnDestroy() {\n        this.destroyMask();\n        this.accept.complete();\n        this.complete.complete();\n    }\n    beginWrite(value) {\n        this._writing = true;\n        this._writingValue = value;\n    }\n    endWrite() {\n        this._writing = false;\n        return this._writingValue;\n    }\n    writeValue(value) {\n        value = (value == null && this.unmask !== 'typed' ? '' : value);\n        if (this.maskRef) {\n            this.beginWrite(value);\n            this.maskValue = value;\n            this.endWrite();\n        }\n        else {\n            this._renderer.setProperty(this.element, 'value', value);\n            this._initialValue = value;\n        }\n    }\n    _onAccept() {\n        const value = this.maskValue;\n        // if value was not changed during writing don't fire events\n        // for details see https://github.com/uNmAnNeR/imaskjs/issues/136\n        if (this._writing && value === this.endWrite())\n            return;\n        this.onChange(value);\n        this.accept.emit(value);\n    }\n    _onComplete() {\n        this.complete.emit(this.maskValue);\n    }\n    initMask() {\n        this.maskRef = this._factory.create(this.element, this.imask)\n            .on('accept', this._onAccept.bind(this))\n            .on('complete', this._onComplete.bind(this));\n        if (this._initialValue != null)\n            this.writeValue(this._initialValue);\n        delete this._initialValue;\n    }\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this.element, 'disabled', isDisabled);\n    }\n    registerOnChange(fn) { this.onChange = fn; }\n    registerOnTouched(fn) { this.onTouched = fn; }\n    _handleInput(value) {\n        // if mask is attached all input goes throw mask\n        if (this.maskRef)\n            return;\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    _compositionStart() { this._composing = true; }\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this._handleInput(value);\n    }\n    _isAndroid() {\n        return isPlatformBrowser(this._platformId) && /android (\\d+)/.test(navigator.userAgent.toLowerCase());\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.2\", ngImport: i0, type: IMaskDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.2\", type: IMaskDirective, isStandalone: true, selector: \"[imask]\", inputs: { imask: \"imask\", unmask: \"unmask\", imaskElement: \"imaskElement\" }, outputs: { accept: \"accept\", complete: \"complete\" }, host: { listeners: { \"input\": \"_handleInput($event.target.value)\", \"blur\": \"onTouched()\", \"compositionstart\": \"_compositionStart()\", \"compositionend\": \"_compositionEnd($event.target.value)\" } }, providers: [MASKEDINPUT_VALUE_ACCESSOR], exportAs: [\"imask\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.2\", ngImport: i0, type: IMaskDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[imask]',\n                    standalone: true,\n                    exportAs: 'imask',\n                    host: {\n                        '(input)': '_handleInput($event.target.value)',\n                        '(blur)': 'onTouched()',\n                        '(compositionstart)': '_compositionStart()',\n                        '(compositionend)': '_compositionEnd($event.target.value)'\n                    },\n                    providers: [MASKEDINPUT_VALUE_ACCESSOR],\n                }]\n        }], propDecorators: { imask: [{\n                type: Input\n            }], unmask: [{\n                type: Input\n            }], imaskElement: [{\n                type: Input\n            }], accept: [{\n                type: Output\n            }], complete: [{\n                type: Output\n            }] } });\n\n/*\n * Transforms value through mask\n * Takes mask and optionally `from` and `to` pipe types.\n * Usage:\n *   value | imask:MASK_OR_MASKED:opt_from:opt_to\n * Example:\n *   {{ 2 | imask:mask }}\n*/\nclass IMaskPipe {\n    transform(...args) {\n        return pipe(...args);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.2\", ngImport: i0, type: IMaskPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.1.2\", ngImport: i0, type: IMaskPipe, isStandalone: true, name: \"imask\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.2\", ngImport: i0, type: IMaskPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: 'imask', standalone: true }]\n        }] });\n\nclass IMaskModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.2\", ngImport: i0, type: IMaskModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.2\", ngImport: i0, type: IMaskModule, imports: [IMaskDirective, IMaskPipe], exports: [IMaskDirective, IMaskPipe] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.2\", ngImport: i0, type: IMaskModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.2\", ngImport: i0, type: IMaskModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [IMaskDirective, IMaskPipe],\n                    exports: [IMaskDirective, IMaskPipe]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_IMASK_ELEMENT, DefaultImaskFactory, IMASK_FACTORY, IMaskDirective, IMaskModule, IMaskPipe, MASKEDINPUT_VALUE_ACCESSOR };\n","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--title\">IMask</h2>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <form novalidate autocomplete=\"off\" [formGroup]=\"formGroup\">\r\n    <forge-text-field>\r\n      <input #input id=\"imask-form--input\" type=\"text\" [imask]=\"mask\" [unmask]=\"unmask\" #imaskRef=\"imask\" formControlName=\"input\" />\r\n      <label for=\"imask-form--input\" slot=\"label\">Input</label>\r\n    </forge-text-field>\r\n    <div style=\"width: 600px;\">\r\n      <div>\r\n        <b>string mask</b>: (0) any digit, (a) any letter, (*) any char\r\n      </div>\r\n      <div>\r\n        <b>number mask</b>: (#) required digit, (&) optional digit, (-) sign, (.) decimal, (,) separator\r\n      </div>\r\n    </div>\r\n    <forge-text-field>\r\n      <input #input id=\"imask-form--format\" type=\"text\" formControlName=\"format\" />\r\n      <label for=\"imask-form--format\" slot=\"label\">Format</label>\r\n    </forge-text-field>\r\n    <div style=\"display: flex; column-gap: 8px; align-items: center;\">\r\n      <forge-select style=\"flex-grow: 1;\" formControlName=\"maskType\" label=\"Mask type\">\r\n        <forge-option *ngFor=\"let option of maskOptions\" [value]=\"option.value\">{{option.label}}</forge-option>\r\n      </forge-select>\r\n      <forge-button type=\"outlined\">\r\n        <button type=\"button\" (click)=\"onApply()\">\r\n          Apply\r\n        </button>\r\n      </forge-button>\r\n    </div>\r\n  </form>\r\n  <p>{{formGroup.value | json}}</p>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IMaskDirective } from 'angular-imask';\r\n\r\nimport { AppFormsModule } from 'src/app/shared/app-forms.module';\r\nimport { ImaskComponent } from './imask.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '**', component: ImaskComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ImaskComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    IMaskDirective,\r\n    AppFormsModule\r\n  ]\r\n})\r\nexport class ImaskModule { }\r\n","// https://github.com/uNmAnNeR/imaskjs/issues/876\r\n\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { IMaskDirective } from 'angular-imask';\r\nimport * as IMask from 'imask';\r\nimport { IOption } from '@tylertech/forge';\r\n\r\nimport { NullableNumberMask } from './nullable-number-mask';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-imask',\r\n  templateUrl: './imask.component.html',\r\n  styleUrls: ['./imask.component.scss']\r\n})\r\nexport class ImaskComponent implements AfterViewInit {\r\n  @ViewChild('imaskRef')\r\n  public imaskRef: IMaskDirective<any>;\r\n\r\n  public formGroup = new FormGroup({\r\n    format: new FormControl<string | null>('000-aa-****'),\r\n    input: new FormControl<string | null>(null),\r\n    maskType: new FormControl<string>('string')\r\n  });\r\n  public unmask: 'typed' | boolean = true;\r\n  public mask?: IMask.FactoryArg;\r\n  public maskOptions: IOption[] = [\r\n    { value: 'string', label: 'String' },\r\n    { value: 'number', label: 'Number' },\r\n    { value: 'number-search', label: 'Number search' },\r\n    { value: 'date', label: 'Date' },\r\n    { value: 'date-search', label: 'Date search' }\r\n  ];\r\n\r\n  constructor() {\r\n    this.unmask = false;\r\n    this.mask = this.buildStringMask(this.formGroup.value.format);\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    console.log(this.imaskRef);\r\n  }\r\n\r\n  public onApply() {\r\n    this.formGroup.get('input').setValue(null);\r\n\r\n    requestAnimationFrame(() => {\r\n      switch (this.formGroup.value.maskType) {\r\n        case 'string':\r\n          this.mask = this.buildStringMask(this.formGroup.value.format);\r\n          break;\r\n        case 'number':\r\n          this.mask = this.buildNumberMask(this.formGroup.value.format);\r\n          break;\r\n        case 'number-search':\r\n          this.mask = this.buildNumberSearchMask();\r\n          break;\r\n        case 'date':\r\n          this.mask = this.buildDateMask();\r\n          break;\r\n        case 'date-search':\r\n          this.mask = this.buildDateSearchMask();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildStringMask(format?: string): IMask.MaskedPattern | IMask.MaskedRegExp {\r\n    if (!format?.length) {\r\n      return {\r\n        mask: /./\r\n      } as IMask.MaskedRegExp\r\n    }\r\n\r\n    const mask = format.replace(/([0a*]*)/g, value => {\r\n      // adds ` to prevent symbols shift back\r\n      return value.length ? `\\`${value}` : '';\r\n    });\r\n\r\n    return new IMask.MaskedPattern({\r\n      mask,\r\n      lazy: false,\r\n      placeholderChar: ' '\r\n    });\r\n  }\r\n\r\n  private buildNumberMask(format?: string): IMask.MaskedNumber {\r\n    if (!format?.length) {\r\n      return new NullableNumberMask({\r\n        mask: Number,\r\n        scale: 0,\r\n        signed: true\r\n      })\r\n    }\r\n\r\n    const max = parseFloat(format.replace(/[#&-]/g, '9').replace(/,/g, ''));\r\n    const min = format.includes('&') ? format.includes('-') ? max * -1 : 0 : NaN;\r\n    return new NullableNumberMask({\r\n      mask: Number,\r\n      thousandsSeparator: format!.includes(',') ? ',' : '',\r\n      radix: '.',\r\n      padFractionalZeros: format!.includes('.') ? true : false,\r\n      scale: format!.split('.')[1]?.length || 0,\r\n      signed: format!.includes('-') ? true : false,\r\n      max: isFinite(max) ? max : undefined,\r\n      min: isFinite(min) ? min : undefined\r\n    });\r\n  }\r\n\r\n  private buildNumberSearchMask(): IMask.MaskedRegExp {\r\n    return {\r\n      mask: /^\\s*[!\\-.\\d:<>=|\\s+]*\\s*$/\r\n    } as IMask.MaskedRegExp\r\n  }\r\n\r\n  private buildDateMask(): IMask.MaskedDate {\r\n    return new IMask.MaskedDate({\r\n      mask: Date,\r\n      pattern: 'm/`d/`Y',\r\n      placeholderChar: ' ',\r\n      blocks: {\r\n        m: {\r\n          mask: IMask.MaskedRange,\r\n          from: 1,\r\n          to: 12,\r\n          maxLength: 2\r\n        } as any,\r\n        d: {\r\n          mask: IMask.MaskedRange,\r\n          from: 1,\r\n          to: 31,\r\n          maxLength: 2\r\n        } as any,\r\n        Y: {\r\n          mask: IMask.MaskedRange,\r\n          from: 1900,\r\n          to: 9999,\r\n          maxLength: 4\r\n        } as any\r\n      },\r\n      autofix: false,\r\n      lazy: false,\r\n      overwrite: false,\r\n      format: function (date) {\r\n        const day = ('0' + date.getDate()).slice(-2);\r\n        const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n        const year = date.getFullYear();\r\n        const value = [month, day, year].join('/');\r\n        return value;\r\n      },\r\n      parse: function (str) {\r\n        const mdy = str.split('/');\r\n        const date = new Date(parseInt(mdy[2], 10), parseInt(mdy[0], 10) - 1, parseInt(mdy[1]));\r\n        return date;\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildDateSearchMask(): IMask.MaskedRegExp {\r\n    return {\r\n      mask: /^\\s*[!\\-.\\d:<>=|\\s/]*\\s*$/\r\n    } as IMask.MaskedRegExp\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { ForgeModule } from '@tylertech/forge-angular';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [FormsModule, ReactiveFormsModule, ForgeModule],\r\n  providers: []\r\n})\r\nexport class AppFormsModule { }"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27]}