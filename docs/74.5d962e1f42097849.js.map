{"version":3,"file":"74.5d962e1f42097849.js","mappings":"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","names":["i0","QueryBuilderComponent_ng_container_2_ng_container_2_Template","_r1","_c0","filterGroup_r5","filterIndex_r6","QueryBuilderComponent_ng_template_10_ng_container_0_ng_container_1_Template","_r3","_c1","formGroup_r8","operator_r17","value","label","get","index_r9","errors","required","range","QueryBuilderComponent_ng_template_10_ng_container_25_ng_container_1_ng_container_1_Template","QueryBuilderComponent_ng_template_10_ng_container_25_ng_container_1_ng_container_3_Template","filter_r21","filterIndex_r22","QueryBuilderComponent_ng_template_10_ng_container_25_ng_container_1_Template","tmp_0_0","controls","QueryBuilderComponent_ng_template_10_ng_container_0_Template","QueryBuilderComponent_ng_template_10_forge_option_12_Template","QueryBuilderComponent_ng_template_10_forge_text_field_15_Template","QueryBuilderComponent_ng_template_10_div_16_Template","$event","_r27","formGroup","ctx_r26","onAddFilter","detail","ctx_r28","onDeleteFilter","QueryBuilderComponent_ng_template_10_ng_container_25_Template","ctx_r2","propertyOptions","propertyFilter","operatorOptions","filterOptions","tmp_12_0","length","condition_r31","QueryBuilderComponent_ng_template_12_forge_option_2_Template","formGroup_r29","ctx_r4","conditionOptions","routes","path","component","QueryBuilderComponent","constructor","this","FormGroup","filters","FormArray","buildFilterFormGroup","Utils","filterData","key","type","push","index","parent","indexOf","insert","formArray","removeAt","filter","property","FormControl","validators","Validators","condition","operator","validateFilterValue","minValue","maxValue","controlName","control","isDefined","toString","localeCompare","navigator","language","numeric","ignorePunctuation","setErrors","t","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","QueryBuilderComponent_ng_container_2_Template","QueryBuilderComponent_ng_template_10_Template","QueryBuilderComponent_ng_template_12_Template","tmp_1_0","getRawValue","QueryBuilderModule","oAB","cJS","CommonModule","RouterModule","forChild","AppFormsModule","static","data","direction","slice","sort","a","b","getPropertyValue","comparator","isArray","reduce","previousValue","currentValue","map","f","isString","substring","Object","defineProperty","toLowerCase","rec","every","strict","Date","getTime","isNaN","parseFloat","location","router","fallbackRoute","getState","navigationId","navigate","back","prefix","Math","random","replace","format","formatDate","formatNumber","params","window","search","httpParams","HttpParams","fromString","keys","forEach","k","getAll","enumerable","writable","object","reduced","trim","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","target","eventName","options","resultSelector","isFunction","undefined","pipe","mapOneOrManyArgs","add","remove","isEventTarget","addEventListener","removeEventListener","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","mergeMap","subTarget","innerFrom","TypeError","Observable","subscriber","args","next"],"sourceRoot":"webpack:///","sources":["./src/app/query-builder/query-builder.component.html","./src/app/query-builder/query-builder.module.ts","./src/app/query-builder/query-builder.component.ts","./src/utils.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js"],"sourcesContent":["<form [formGroup]=\"formGroup\" novalidate autocomplete=\"off\">\r\n  <div formArrayName=\"filters\">\r\n    <ng-container *ngFor=\"let filterGroup of formGroup.get('filters')?.controls; index as filterIndex;\">\r\n      <div class=\"filter__group\">\r\n        <ng-container *ngTemplateOutlet=\"filterFormTemplate, context: { formGroup: filterGroup, index: filterIndex }\"></ng-container>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <forge-button class=\"filter__group__add\">\r\n    <button type=\"button\" (click)=\"onAddFilter(formGroup, 'condition')\">\r\n      <forge-icon name=\"add_circle\"></forge-icon> Add a new condition\r\n    </button>\r\n  </forge-button>\r\n\r\n  <p>{{formGroup.getRawValue() | json}}</p>\r\n</form>\r\n\r\n<ng-template #filterFormTemplate let-formGroup=\"formGroup\" let-index=\"index\">\r\n  <ng-container *ngIf=\"index > 0\">\r\n    <ng-container *ngTemplateOutlet=\"filterHeaderTemplate, context: { formGroup: formGroup }\"></ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container [formGroup]=\"formGroup\">\r\n    <div class=\"filter__form\">\r\n      <forge-autocomplete formControlName=\"property\" [options]=\"propertyOptions\" [filter]=\"propertyFilter\">\r\n        <forge-text-field required [appFormControlInvalid]=\"formGroup.get('property')\">\r\n          <input type=\"text\" id=\"{{'app--query-builder--filter-property' + index}}\" />\r\n          <label for=\"{{'app--query-builder--filter-property' + index}}\">Property</label>\r\n          <forge-icon slot=\"trailing\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\r\n          <span slot=\"helper-text\" class=\"app-form-control-invalid\">A property is required</span>\r\n        </forge-text-field>\r\n      </forge-autocomplete>\r\n\r\n      <forge-select formControlName=\"operator\" label=\"Operator\" required [appFormControlInvalid]=\"formGroup.get('operator')\">\r\n        <forge-option [value]=\"operator.value\" *ngFor=\"let operator of operatorOptions\">{{operator.label}}</forge-option>\r\n        <span slot=\"helper-text\" class=\"app-form-control-invalid\">An operator is required</span>\r\n      </forge-select>\r\n\r\n      <forge-text-field *ngIf=\"formGroup.get('operator').value !== 6\" required [appFormControlInvalid]=\"formGroup.get('value')\">\r\n        <input type=\"text\" id=\"{{'app--query-builder--filter-value-' + index}}\" formControlName=\"value\">\r\n        <label for=\"{{'app--query-builder--filter-value-' + index}}\" slot=\"label\">Value</label>\r\n        <span slot=\"helper-text\" class=\"app-form-control-invalid\">A value is required</span>\r\n      </forge-text-field>\r\n\r\n      <div *ngIf=\"formGroup.get('operator').value === 6\" class=\"filter__form__range\">\r\n        <forge-text-field required [appFormControlInvalid]=\"formGroup.get('minValue')\">\r\n          <input type=\"text\" id=\"{{'app--query-builder--filter-min-' + index}}\" formControlName=\"minValue\">\r\n          <label for=\"{{'app--query-builder--filter-min-' + index}}\" slot=\"label\">Minimum</label>\r\n          <span slot=\"helper-text\" class=\"app-form-control-invalid\">A minimum value is required</span>\r\n        </forge-text-field>\r\n        <forge-text-field required [appFormControlInvalid]=\"formGroup.get('maxValue')\">\r\n          <input type=\"text\" id=\"{{'app--query-builder--filter-max-' + index}}\" formControlName=\"maxValue\">\r\n          <label for=\"{{'app--query-builder--filter-max-' + index}}\" slot=\"label\">Maximum</label>\r\n          <span slot=\"helper-text\" class=\"app-form-control-invalid\">\r\n            {{formGroup.get('maxValue').errors.required ? 'A maximum value is required' : formGroup.get('maxValue').errors.range ? 'Max value must be greater or equal to min value' : ''}}\r\n          </span>\r\n        </forge-text-field>\r\n      </div>\r\n\r\n      <div class=\"filter__form__action\">\r\n        <forge-menu [options]=\"filterOptions\" (forge-menu-select)=\"onAddFilter(formGroup, $event.detail.value)\">\r\n          <forge-icon-button>\r\n            <button type=\"button\" aria-label=\"add filter item\">\r\n              <forge-icon name=\"add_circle\"></forge-icon>\r\n            </button>\r\n          </forge-icon-button>\r\n        </forge-menu>\r\n        <forge-icon-button>\r\n          <button type=\"button\" (click)=\"onDeleteFilter(formGroup)\" aria-label=\"Delete filter\">\r\n            <forge-icon name=\"delete\"></forge-icon>\r\n          </button>\r\n        </forge-icon-button>\r\n      </div>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"formGroup.get('filters')?.controls?.length\" formArrayName=\"filters\">\r\n      <ng-container *ngFor=\"let filter of formGroup.get('filters')?.controls; index as filterIndex\">\r\n        <ng-container *ngTemplateOutlet=\"filterHeaderTemplate, context: { formGroup: filter }\"></ng-container>\r\n        <div class=\"filter__group\">\r\n          <ng-container *ngTemplateOutlet=\"filterFormTemplate, context: { formGroup: filter, index: filterIndex }\"></ng-container>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n</ng-template>\r\n\r\n<ng-template #filterHeaderTemplate let-formGroup=\"formGroup\">\r\n  <div class=\"filter__header\">\r\n    <forge-select [formControl]=\"formGroup.get('condition')\" class=\"filter__header__condition\">\r\n      <forge-option [value]=\"condition.value\" *ngFor=\"let condition of conditionOptions\">{{condition.label}}</forge-option>\r\n    </forge-select>\r\n  </div>\r\n</ng-template>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppFormsModule } from 'src/app/shared/app-forms.module';\r\nimport { FormControlInvalidDirective } from 'src/app/shared/directives/form-control-invalid/form-control-invalid.directive';\r\nimport { QueryBuilderComponent } from './query-builder.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '**', component: QueryBuilderComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    QueryBuilderComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    AppFormsModule,\r\n    FormControlInvalidDirective\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class QueryBuilderModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { Utils } from 'src/utils';\r\nimport { IFilter } from 'src/app/shared/interfaces/filter.interface';\r\n\r\n@Component({\r\n  selector: 'app-query-builder',\r\n  templateUrl: './query-builder.component.html',\r\n  styleUrls: ['./query-builder.component.scss']\r\n})\r\nexport class QueryBuilderComponent {\r\n  public formGroup = new FormGroup({\r\n    filters: new FormArray([this.buildFilterFormGroup()])\r\n  });\r\n\r\n  public conditionOptions = [\r\n    { value: 'and', label: 'And' },\r\n    { value: 'or', label: 'Or' }\r\n  ];\r\n\r\n  public propertyOptions = [\r\n    { value: 'firstName', label: 'First name' },\r\n    { value: 'lastName', label: 'Last name' },\r\n    { value: 'dateOfBirth', label: 'Date of birth' },\r\n    { value: 'gender', label: 'Gender' },\r\n    { value: 'occupation', label: 'Occupation' }\r\n  ];\r\n\r\n  public operatorOptions = [\r\n    { value: 0, label: 'Equal' },\r\n    { value: 1, label: 'Not equal' },\r\n    { value: 2, label: 'Greater than' },\r\n    { value: 3, label: 'Less than' },\r\n    { value: 4, label: 'Greater than equal to' },\r\n    { value: 5, label: 'Less than equal to' },\r\n    { value: 6, label: 'Range' },\r\n    { value: 7, label: 'Contains' },\r\n    { value: 8, label: 'Not contains' },\r\n    { value: 9, label: 'Empty' }\r\n  ];\r\n\r\n  public filterOptions = [\r\n    { value: 'condition', label: 'Add condition' },\r\n    { value: 'group', label: 'Add group' }\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  public propertyFilter = (value: string) => Utils.filterData(this.propertyOptions, [{ key: 'label', value }]);\r\n\r\n  public onAddFilter(formGroup: FormGroup, type: 'condition' | 'group') {\r\n    if (formGroup === this.formGroup) {\r\n      (this.formGroup.get('filters') as FormArray).push(this.buildFilterFormGroup());\r\n    } else {\r\n      switch (type) {\r\n        case 'condition': {\r\n          const index = (formGroup.parent as FormArray).controls.indexOf(formGroup) + 1;\r\n          (formGroup.parent as FormArray).insert(index, this.buildFilterFormGroup());\r\n          break;\r\n        }\r\n        case 'group':\r\n          (formGroup.get('filters') as FormArray).push(this.buildFilterFormGroup());\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onDeleteFilter(formGroup: FormGroup) {\r\n    const formArray = formGroup.parent as FormArray;\r\n    const index = formArray.controls.indexOf(formGroup);\r\n    if (index !== -1) {\r\n      formArray.removeAt(index);\r\n    }\r\n  }\r\n\r\n  private buildFilterFormGroup(filter?: IFilter): FormGroup {\r\n    return new FormGroup({\r\n      property: new FormControl(filter?.property, { validators: [Validators.required] }),\r\n      condition: new FormControl(filter?.condition || 'and', { validators: [Validators.required] }),\r\n      operator: new FormControl(filter?.operator, { validators: [Validators.required] }),\r\n      value: new FormControl(filter?.value, { validators: [this.validateFilterValue('value')] }),\r\n      minValue: new FormControl(filter?.minValue, { validators: [this.validateFilterValue('minValue')] }),\r\n      maxValue: new FormControl(filter?.minValue, { validators: [this.validateFilterValue('maxValue')] }),\r\n      filters: new FormArray([])\r\n    });\r\n  }\r\n\r\n  private validateFilterValue(controlName: string): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const formGroup = control.parent;\r\n      if (!formGroup) {\r\n        return null;\r\n      }\r\n\r\n      const operator = formGroup.value.operator;\r\n      if (!isDefined(operator)) {\r\n        return null;\r\n      }\r\n\r\n      switch (operator) {\r\n        case 6: {\r\n          if (controlName === 'value') {\r\n            return null;\r\n          }\r\n\r\n          if (!isDefined(control.value) || !control.value.toString().length) {\r\n            return { required: true };\r\n          }\r\n\r\n          const minValue = formGroup.value.minValue;\r\n          const maxValue = formGroup.value.maxValue;\r\n\r\n          if (controlName === 'minValue') {\r\n            if (isDefined(maxValue) && minValue.localeCompare(maxValue, navigator.language, { numeric: true, ignorePunctuation: true }) < 1) {\r\n              formGroup.get('maxValue')?.setErrors(null);\r\n            }\r\n          }\r\n\r\n          if (controlName === 'maxValue') {\r\n            if (!isDefined(minValue)) {\r\n              return null;\r\n            }\r\n\r\n            if (minValue.localeCompare(maxValue, navigator.language, { numeric: true, ignorePunctuation: true }) > 0) {\r\n              return { range: true };\r\n            }\r\n          }\r\n\r\n          return null;\r\n        }\r\n        default:\r\n          if (controlName === 'minValue' || controlName === 'maxValue') {\r\n            return null;\r\n          }\r\n\r\n          if (!isDefined(control.value) || !control.value.toString().length) {\r\n            return { required: true };\r\n          }\r\n\r\n          return null;\r\n      }\r\n    };\r\n  }\r\n}\r\n","import { formatDate, formatNumber, Location } from '@angular/common';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { isArray, getPropertyValue, isDefined, isString } from '@tylertech/forge-core';\r\nimport { SortDirection } from '@tylertech/forge';\r\n\r\nexport class Utils {\r\n  public static sortData(data: any[], key: string, type: 'string' | 'number' | 'boolean' | 'date', direction: 'ASC' | 'DESC' | SortDirection): any[] {\r\n    if (!data || !data.length) {\r\n      return data;\r\n    }\r\n\r\n    type = type || 'string';\r\n\r\n    if (direction !== 'DESC') {\r\n      direction = 'ASC';\r\n    }\r\n\r\n    return data.slice().sort((a, b): number => {\r\n      a = getPropertyValue(a, key);\r\n      b = getPropertyValue(b, key);\r\n\r\n      if (direction === 'DESC') {\r\n        return this.comparator(b, a, type);\r\n      } else {\r\n        return this.comparator(a, b, type);\r\n      }\r\n    });\r\n  }\r\n\r\n  public static groupData(data: any[], property: string): any[] {\r\n    if (!isArray(data) || !data.length || !property?.length) {\r\n      return data;\r\n    }\r\n\r\n    return data.reduce((previousValue, currentValue) => {\r\n      const key = currentValue[property];\r\n      if (!previousValue[key]) {\r\n        previousValue[key] = [];\r\n      }\r\n      previousValue[key].push(currentValue);\r\n      return previousValue;\r\n    }, {});\r\n  }\r\n\r\n  public static filterData(data: any[], filters: { key: string; value: string; type?: 'string' | 'number' | 'boolean' | 'date'; strict?: boolean }[]): any[] {\r\n    if (!isArray(data) || !data.length || !isArray(filters) || !filters.length) {\r\n      return data;\r\n    }\r\n\r\n    filters = filters.map((f) => {\r\n      if (isString(f.value) && f.value.length) {\r\n        let operator;\r\n        if (f.value.substring(0, 2) === '<>') {\r\n          if (f.value.length === 2) {\r\n            f.value = '';\r\n            return f;\r\n          }\r\n          operator = f.value.substring(0, 2);\r\n          f.value = f.value.substring(2);\r\n        } else if (f.value.substring(0, 1) === '<' || f.value.substring(0, 1) === '>') {\r\n          if (f.value.length === 1) {\r\n            f.value = '';\r\n            return f;\r\n          }\r\n          operator = f.value.substring(0, 1);\r\n          f.value = f.value.substring(1);\r\n        }\r\n\r\n        if (operator) {\r\n          Object.defineProperty(f, 'operator', { value: operator });\r\n        }\r\n      }\r\n\r\n      f.value = ('' + f.value).toLowerCase();\r\n      return f;\r\n    });\r\n\r\n    const filter = (rec: any) =>\r\n      filters.every((f) => {\r\n        if (!f.value.length) {\r\n          return true;\r\n        }\r\n\r\n        const value = ('' + getPropertyValue(rec, f.key)).toLowerCase();\r\n        if (!value.length) {\r\n          return false;\r\n        }\r\n\r\n        if (f.strict) {\r\n          return value === f.value;\r\n        }\r\n\r\n        switch ((f as any).operator) {\r\n          case '<>':\r\n            return this.comparator(value, f.value, f.type) !== 0;\r\n          case '>':\r\n            return this.comparator(value, f.value, f.type) > 0;\r\n          case '<':\r\n            return this.comparator(value, f.value, f.type) < 0;\r\n          default:\r\n            return value.indexOf(f.value) > -1;\r\n        }\r\n      });\r\n\r\n    return data.filter((rec) => filter(rec));\r\n  }\r\n\r\n  public static comparator(a: any, b: any, type: 'string' | 'number' | 'boolean' | 'date' = 'string'): number {\r\n    // eslint-disable-next-line eqeqeq\r\n    if (a == b) {\r\n      return 0;\r\n    }\r\n    if (!isDefined(a)) {\r\n      return -1;\r\n    }\r\n    if (!isDefined(b)) {\r\n      return 1;\r\n    }\r\n\r\n    switch (type) {\r\n      case 'boolean':\r\n        return a ? -1 : 1;\r\n      case 'date':\r\n        a = new Date(a).getTime();\r\n        if (isNaN(a)) {\r\n          return -1;\r\n        }\r\n        b = new Date(b).getTime();\r\n        if (isNaN(b)) {\r\n          return 1;\r\n        }\r\n        break;\r\n      case 'number':\r\n        a = parseFloat(a);\r\n        if (isNaN(a)) {\r\n          return -1;\r\n        }\r\n        b = parseFloat(b);\r\n        if (isNaN(b)) {\r\n          return 1;\r\n        }\r\n        break;\r\n      default:\r\n        if (!isNaN(parseFloat(a)) && !isNaN(parseFloat(b))) {\r\n          return ('' + a).localeCompare('' + b, navigator.language, { numeric: true });\r\n        } else {\r\n          return ('' + a).localeCompare('' + b);\r\n        }\r\n    }\r\n\r\n    return a < b ? -1 : a > b ? 1 : 0;\r\n  }\r\n\r\n  public static navigateBack(location: Location, router: Router, fallbackRoute: any[]): void {\r\n    if ((location.getState() as any)?.navigationId === 1) {\r\n      router.navigate(fallbackRoute);\r\n    } else {\r\n      location.back();\r\n    }\r\n  }\r\n\r\n  public static elementId(prefix: string): string {\r\n    return (\r\n      prefix +\r\n      Math.random()\r\n        .toString(36)\r\n        .replace(/[^a-z]+/g, '')\r\n    );\r\n  }\r\n\r\n  public static formatDate(value: Date, format = 'MM/dd/yyyy'): string {\r\n    if (!isDefined(value)) {\r\n      return '';\r\n    }\r\n    return formatDate(value, format, navigator.language);\r\n  }\r\n\r\n  public static formatNumber(value: number, format = '1.2-2'): string {\r\n    return formatNumber(value, navigator.language, format);\r\n  }\r\n\r\n  public static uniqueId(): string {\r\n    return Math.random().toString(36).substring(2);\r\n  }\r\n\r\n  public static parseQueryStringParameters(): any {\r\n    const params = {};\r\n\r\n    if (window.location.search.length) {\r\n      const httpParams = new HttpParams({ fromString: window.location.search.substring(1) });\r\n      httpParams.keys().forEach(k => {\r\n        const value = httpParams.getAll(k) as string[];\r\n        if (value.length) {\r\n          Object.defineProperty(params, k.toLowerCase(), { value: value.length === 1 ? value[0] : value, enumerable: true, writable: true });\r\n        }\r\n      });\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  public static reduceObject(object: any): any {\r\n    const reduced: any = {};\r\n\r\n    Object.keys(object).forEach(key => {\r\n      if (isDefined(object[key])) {\r\n        if (isArray(object[key])) {\r\n          if (object[key].length) {\r\n            reduced[key] = object[key];\r\n          }\r\n        } else if ((object[key] + '').trim().length) {\r\n          reduced[key] = typeof object[key] === 'string' ? object[key].trim() : object[key];\r\n        }\r\n      }\r\n    });\r\n\r\n    return reduced;\r\n  }\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n"],"x_google_ignoreList":[4]}