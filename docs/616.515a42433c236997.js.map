{"version":3,"file":"616.515a42433c236997.js","mappings":"6MAGA,MAAMA,EAAiB,CACnBC,QAAS,CACL,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,aAAc,cACf,CAAC,CAAEC,OAAQ,GAAK,CAAEA,OAAQ,IAC1B,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAEC,OAAQ,OAAS,CAAEA,OAAQ,UAC9B,CAAC,CAAEC,OAAQ,MAAQ,CAAEA,OAAQ,OAC7B,CAAC,CAAEC,UAAW,QACd,CAAC,CAAEC,KAAM,CAAC,SAAS,EAAO,QAAS,UACnC,CAAC,CAAEL,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC9B,CACI,CAAEM,MAAO,IACT,CAAEC,WAAY,KAElB,CAAC,CAAEC,KAAM,KACT,CAAC,CAAEC,MAAO,KACV,CAAC,SACD,CAAC,OAAQ,QAAS,SAClB,CAAC,WAKHC,EAAqB,IAAIC,MAAe,SAAU,CACpDC,WAAY,OACZC,QAASA,MAASC,QAAShB,0DC3BxB,SAASiB,EAAeC,EAAQC,GACnC,MAAMC,EAA8B,iBAAXD,EACzB,OAAO,IAAIE,QAAQ,CAACC,EAASC,KACzB,MAAMC,EAAa,IAAIC,KAAe,CAClCC,KAAOC,IACHL,EAAQK,GACRH,EAAWI,aAAY,EAE3BC,MAAON,EACPO,SAAUA,KACFV,EACAE,EAAQH,EAAOY,cAGfR,EAAO,IAAIS,IAAY,IAInCd,EAAOe,UAAUT,EAAU,EAEnC,uDCZkE,SAAAU,EAAAC,EAAAC,GAAA,EAAAD,GA0EkCE,MAAE,UAgoB9D,UAAAC,EAAAH,EAAAC,GAAA,EAAAD,GAhoB4DE,MAAE,UAkoB9D,UAAAE,EAAAJ,EAAAC,GADjC,GACiC,EAAAD,GAloB4DE,MAAE,EAAAH,EAAA,YAAFG,CAioB7F,EAAAC,EAAA,OAAAH,EAAA,OAAAK,EAjoB6FH,cAAE,EAAAG,EAAAC,SAAA,IAioB/F,WAAAC,EAAAP,EAAAC,GAAA,EAAAD,GAjoB6FE,MAAE,UA4oB9D,UAAAM,EAAAR,EAAAC,GAAA,EAAAD,GA5oB4DE,MAAE,UA8oB9D,UAAAO,EAAAT,EAAAC,GADjC,GACiC,EAAAD,GA9oB4DE,MAAE,EAAAK,EAAA,YAAFL,CA6oB7F,EAAAM,EAAA,OAAAR,EAAA,OAAAU,EA7oB6FR,cAAE,EAAAQ,EAAAJ,SAAA,IA6oB/F,QAAAK,EAAA,iHAAAC,EAAA,kGAAAC,EAAAb,EAAAC,GAAA,EAAAD,GA7oB6FE,MAAE,UAi2BtE,UAAAY,EAAAd,EAAAC,GAAA,EAAAD,GAj2BoEE,MAAE,UAm2BtE,CA36BhC,MAAMa,EAAYA,CAACC,EAAQC,IACFD,GAAUC,GACR,OAG3B,IACMC,EAAY,MAAlB,MAAMA,EACFC,YAAYC,EAAUpC,GAAQ,IAAAqC,EAAAC,KAC1BA,KAAKtC,OAASA,EACdsC,KAAKC,UAASC,MAAKC,OAAC,YAChB,IAAKJ,EAAKK,MAAO,CAIb,MAAMC,EAA+BN,EAAKO,SAASC,iBAUnDR,EAAKO,SAASC,iBAEVR,EAAKO,SAASE,iCACVT,EAAKO,SAASC,iBACtB,MAAME,QAAoBC,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,EAAAC,KAAAJ,EAAA,UAC1BX,EAAKO,SAASC,iBAAmBF,EACjCN,EAAKK,MAELK,EAAYM,SAASA,SAAWN,EAAYM,SAAWN,CAC3D,CAEAV,SAAKrC,OAAOsD,eAAeC,QAASC,IAChC,MAAMC,EAAkBpB,EAAKK,MAAMgB,OAAOF,EAAaE,QACvDD,EAAgBE,UAAYH,EAAaG,UACzCtB,EAAKK,MAAMkB,SAASH,GAAiB,EAAMpB,EAAKrC,OAAO6D,8BAA6B,SAE3ExB,EAAKyB,sBAAsBzB,EAAKK,MAAOL,EAAKrC,OAAO+D,cAAe1B,EAAKrC,OAAO6D,8BAC/F,IAAGG,QAAKC,KAAY,CAAEC,WAAY,EAAGC,UAAU,KAC/C7B,KAAKM,SAAWR,EAASgC,IAAIC,MACxB/B,KAAKtC,SACNsC,KAAKtC,OAAS,CAAEH,QAAShB,GAEjC,CACAyF,WACI,OAAOhC,KAAKC,MAChB,CAOMuB,sBAAsBpB,EAAOqB,EAAeF,GAA+B,SAAApB,KAAA,YAC7E,GAAI8B,MAAMC,QAAQT,GAEd,QAAWU,iBAAgBC,UAAUX,GAGjC,EAAIY,KAAaF,KACbA,QAAuB3E,EAAe2E,IAE1C/B,EAAMkB,SAASc,EAAMD,EAAgBZ,GAK7C,OAAOnB,CAAM,EAdgE,EAejF,CAACkC,SACQtC,KAAKuC,UAAI,SAAA1B,GAAA,WAAAA,GAAwFjB,GAAVhB,MAAwCA,OAAxCA,MAAgEzB,EAAkB,KAA6DmF,SACtOtC,KAAKwC,WADkF5D,MAAE,CAAA6D,MACY7C,EAAYtC,QAAZsC,EAAY2C,UAAAlF,WAAc,SAC3I,OApEKuC,CAAY,KAmFZ8C,EAAe,MAArB,MAAMA,EACF7C,cACIG,KAAK2C,UAAW,EAChB3C,KAAK4C,sBAAwB,MAC7B5C,KAAK6C,OAAS,KACd7C,KAAKgB,cAAgB,GACrBhB,KAAKyB,cAAgB,GACrBzB,KAAK8C,oBAAqB,EAC1B9C,KAAK+C,kBAAmB,EACxB/C,KAAKgD,eAAgB,EACrBhD,KAAKiD,YAAa,EAclBjD,KAAKkD,kBAAoB,KACzBlD,KAAKmD,gBAAkB,IAAIC,MAC3BpD,KAAKqD,gBAAkB,IAAID,MAC3BpD,KAAKsD,iBAAmB,IAAIF,MAC5BpD,KAAKuD,mBAAqB,IAAIH,MAC9BpD,KAAKwD,QAAU,IAAIJ,MACnBpD,KAAKyD,OAAS,IAAIL,MAClBpD,KAAK0D,cAAgB,IAAIN,MACzBpD,KAAK2D,aAAe,IAAIP,MACxBpD,KAAK4D,UAAW,EAChB5D,KAAKhB,UAAW,EAChBgB,KAAK6D,gBAAkB,MACvB7D,KAAK8D,aAAe,KACpB9D,KAAK+D,kBAAoB,KACzB/D,KAAKgE,cAAaC,OAAOC,OACzBlE,KAAKM,YAAW2D,OAAOlC,MACvB/B,KAAKmE,MAAKF,OAAOG,OACjBpE,KAAKqE,gBAAeJ,OAAOK,MAC3BtE,KAAKuE,cAAaN,OAAOO,OACzBxE,KAAKyE,YAAWR,OAAOS,OACvB1E,KAAK2E,QAAOV,OAAOW,OACnB5E,KAAK6E,WAAUZ,OAAOrE,GACtBI,KAAK8E,YAAc,CAACC,EAAaC,KAC7B,IAAIC,EAAOD,EAAcE,cAAc,cAAcC,WACxC,gBAATF,GAAmC,oBAATA,KAC1BA,EAAOjF,KAAKkD,mBAEhB,IAAIkC,EAAaH,EACjB,MAAMvF,EAASD,EAAUO,KAAKN,OAAQM,KAAK6E,QAAQnH,OAAOgC,QAC1D,GAAe,SAAXA,EACA0F,EAAaL,EAAYM,eAAQ,GAEjB,WAAX3F,EACL0F,EAAaL,EAAYO,mBAAY,GAErB,SAAX5F,EACL,IACI0F,EAAaG,KAAKC,UAAUT,EAAYO,cAC5C,OAEIF,EAAaL,EAAYM,SAC7B,CAEJ,OAAOD,GAEXpF,KAAKyF,YAAc,CAACV,EAAa7G,KAC7B,MAAMwB,EAASD,EAAUO,KAAKN,OAAQM,KAAK6E,QAAQnH,OAAOgC,QAC1D,GAAe,SAAXA,EAEA,OADiB,EAAC,GAAM,GAAOgG,SAAS1F,KAAK2F,UAAY3F,KAAK2F,SAAY3F,KAAK6E,QAAQnH,OAAOiI,WAAY,KAEtGzH,EAAQ8B,KAAKqE,aAAasB,SAASC,MAAgBC,KAAM3H,IAEtD6G,EAAYe,UAAUC,QAAQ,CAAEd,KAAM/G,IAE5C,GAAe,SAAXwB,EACL,IACI,OAAO6F,KAAKS,MAAM9H,EACtB,OAEI,MAAO,CAAC,CAAE+H,OAAQ/H,GACtB,CAEJ,OAAOA,GAEX8B,KAAKkG,uBAAyB,CAACC,EAAOC,EAAU3I,KAC5C,MAAM4I,EAAerG,KAAKqG,cAAgBrG,KAAK6E,QAAQnH,OAAO2I,aACxDC,GAA+BH,KAAWnG,KAAKuG,iBAA8B,SAAX9I,GAAqB4I,GAAiC,QAAjBA,IAExGrG,KAAKyD,OAAO+C,WACZxG,KAAKwD,QAAQgD,WACbxG,KAAKuD,mBAAmBiD,WACxBF,GAGLtG,KAAK2E,KAAK8B,IAAI,KACI,OAAVN,EACAnG,KAAKyD,OAAOiD,KAAK,CACbC,OAAQ3G,KAAK+E,YACbtH,WAGc,OAAb2I,GACLpG,KAAKwD,QAAQkD,KAAK,CACdC,OAAQ3G,KAAK+E,YACbtH,WAGRuC,KAAKuD,mBAAmBmD,KAAK,CACzBC,OAAQ3G,KAAK+E,YACbqB,WACAD,QACA1I,WAEA6I,GACAtG,KAAKuG,iBAETvG,KAAKmE,GAAGyC,cAAa,EACxB,EAEL5G,KAAK6G,kBAAoB,CAACC,EAAOC,EAAUtJ,KAEvC,MAAMuJ,EAAOhH,KAAK+E,YAAYM,UACxB4B,EAAUjH,KAAK+E,YAAYO,cACjC,IAAIL,EAAOjF,KAAKkH,WAAWhC,cAAc,cAAcC,WAC1C,gBAATF,GAAmC,oBAATA,KAC1BA,EAAOjF,KAAKkD,mBAEhB,MAAMmD,EAAerG,KAAKqG,cAAgBrG,KAAK6E,QAAQnH,OAAO2I,aACxDc,GAAyC,SAAX1J,GAAqB4I,GAAiC,QAAjBA,MAA6BrG,KAAKoH,eAEtGpH,KAAKsD,iBAAiBkD,WAAaW,GAGxCnH,KAAK2E,KAAK8B,IAAI,KACNU,GACAnH,KAAKoH,cAAcpH,KAAK8E,YAAY9E,KAAK+E,YAAa/E,KAAKkH,aAE/DlH,KAAKsD,iBAAiBoD,KAAK,CACvBO,UACAH,QACAH,OAAQ3G,KAAK+E,YACbE,OACA8B,WACAtJ,SACAuJ,SAEJhH,KAAKmE,GAAGyC,cAAa,EACxB,EAGL5G,KAAKqH,oBAAsB,CAACC,EAAOC,EAASC,EAAK/J,KAE7C,GAAKuC,KAAKqD,gBAAgBmD,SAI1B,GAAc,gBAAVc,EAAyB,CACzB,MAAMN,EAAOhH,KAAK+E,YAAYM,UACxB4B,EAAUjH,KAAK+E,YAAYO,cACjC,IAAIL,EAAOjF,KAAKkH,WAAWhC,cAAc,cAAcC,WAC1C,gBAATF,GAAmC,oBAATA,KAC1BA,EAAOjF,KAAKkD,mBAEhBlD,KAAK2E,KAAK8B,IAAI,KACVzG,KAAKqD,gBAAgBqD,KAAK,CACtBO,UACAH,MAAOS,EACPZ,OAAQ3G,KAAK+E,YACbuC,QACArC,OACA8B,SAAUS,EACV/J,SACAuJ,SAEJhH,KAAKmE,GAAGyC,cAAa,EAE7B,MAEI5G,KAAK2E,KAAK8B,IAAI,KACVzG,KAAKqD,gBAAgBqD,KAAK,CACtBC,OAAQ3G,KAAK+E,YACbuC,QACAlB,SAAUoB,EACVrB,MAAOoB,EACP9J,WAEJuC,KAAKmE,GAAGyC,cAAa,EACxB,CAGb,CACA,0BAAOa,CAAoBC,GAEvB,OADkBA,EAAQC,OAAOC,MAAM,KACtBC,OAAO,CAACC,EAAMC,KAC3B,MAAMC,EAAUD,EAAIJ,OACpB,OAAIK,GACAF,EAAKG,KAAKD,GAEPF,GACR,GACP,CACAI,WACIlI,KAAKhB,SAAWgB,KAAK8C,mBACrB9C,KAAK6D,gBAAkB7D,KAAK4C,qBAChC,CACAuF,mBACI,EAAIC,MAAiBpI,KAAKuE,cAK1BvE,KAAK+D,kBAAoB/D,KAAK6E,QAAQ7C,WAAWN,QAAK2G,KAAUjI,IAC5D,MAAMkI,EAAW,CAACtI,KAAK6E,QAAQrD,sBAAsBpB,EAAOJ,KAAKyB,gBAC3D8G,EAAevI,KAAKuI,cAAgBvI,KAAK6E,QAAQnH,OAAO6K,aAC9D,OAAIA,GACAD,EAASL,KAAKM,KAEX3K,QAAQ4K,IAAIF,GAAU1H,KAAK,IAAMR,EAAK,IAC7C5B,UAAU4B,IACVJ,KAAKkH,WAAalH,KAAKgE,WAAWyE,cAAcvD,cAAc,0BAC9D,MAAMwD,EAAc1I,KAAKgE,WAAWyE,cAAcvD,cAAc,0BAC1D3H,EAAUoL,OAAOC,OAAO,CAAC,EAAG5I,KAAKzC,SAAWyC,KAAK6E,QAAQnH,OAAOH,SAClEmL,EACAnL,EAAQf,QAAUkM,OAEOG,IAApBtL,EAAQf,UACbe,EAAQf,QAAUD,EAAeC,SAErC,IAAIsM,OAAmCD,IAArB7I,KAAK8I,YAA4B9I,KAAK8I,YAAc9I,KAAK6E,QAAQnH,OAAOoL,iBACtED,IAAhBC,IACAA,EAAc,wBAEd9I,KAAK6C,QACL8F,OAAOI,KAAK/I,KAAK6C,QAAQ5B,QAAS+H,IAC9BhJ,KAAKyE,SAASwE,SAASjJ,KAAKkH,WAAY8B,EAAKhJ,KAAK6C,OAAOmG,GAAI,GAGjEhJ,KAAK0H,SACL1H,KAAKkJ,WAAWlJ,KAAK0H,SAEzB1H,KAAKgB,cAAcC,QAASC,IACxB,MAAMC,EAAkBf,EAAMgB,OAAOF,EAAaE,QAClDD,EAAgBE,UAAYH,EAAaG,UACzCjB,EAAMkB,SAASH,GAAiB,EAAI,GAExC,IAAIgI,EAASnJ,KAAKmJ,QAA0B,SAAhBnJ,KAAKmJ,OAAoBnJ,KAAKkH,WAAalH,KAAKmJ,OACvEA,IACDA,EAASnJ,KAAK6E,QAAQnH,OAAOyL,OAASnJ,KAAK6E,QAAQnH,OAAOyL,OAASnJ,KAAKM,SAAS8I,MAErF,IAAIC,EAAQrJ,KAAKqJ,OACZA,IAAmB,IAAVA,GAAmBrJ,KAAK6E,QAAQnH,OAAO2L,QACjDA,EAAQrJ,KAAK6E,QAAQnH,OAAO2L,OAEhC,IAAIC,EAAWtJ,KAAKsJ,UACfA,IAA8B,IAAlBtJ,KAAKsJ,WAClBA,OAA4CT,IAAjC7I,KAAK6E,QAAQnH,OAAO4L,UAAyBtJ,KAAK6E,QAAQnH,OAAO4L,UAEhF,IAAIpG,EAAoBlD,KAAKkD,kBAEzBlD,KAAK6E,QAAQnH,OAAO6L,eAAe,uBACnCrG,EAAoBlD,KAAK6E,QAAQnH,OAAOwF,mBAE5C,IAAIsG,EAAUxJ,KAAKwJ,QAyCnB,IAxCKA,QAAuBX,IAAZW,IACZA,EAAUxJ,KAAK6E,QAAQnH,OAAO8L,QAAU,IAAIxJ,KAAK6E,QAAQnH,OAAO8L,SAA4C,OAAhCxJ,KAAK6E,QAAQnH,OAAO8L,QAAmB,UAAOX,GAE9H7I,KAAK2E,KAAK8E,kBAAkB,KA6BxB,GA5BAzJ,KAAK+E,YAAc,IAAI3E,EAAMJ,KAAKkH,WAAY,CAC1CiC,SACAE,MAAOA,EACPG,QAASA,EACTjM,UACAuL,cACAQ,WACApG,oBACAwG,SAAU1J,KAAK0J,SACfC,MAAO3J,KAAK2J,QAAU3J,KAAK6E,QAAQnH,OAAOiM,MAAQ3J,KAAK6E,QAAQnH,OAAOiM,MAAQ,UAE9E3J,KAAK2D,aAAa6C,WAElBxG,KAAK+E,YAAY6E,OAAOC,QAAQtJ,iBAAiB,OAAQ,IAAMP,KAAK2D,aAAa1F,KAAK,CAClF0I,OAAQ3G,KAAK+E,YACbtH,OAAQ,SAGIuC,KAAK+E,YAAY+E,UAAU,WACnCC,WAAWxJ,iBAAiB,YAAcI,GAAMA,EAAEqJ,mBAE1DhK,KAAK0D,cAAc8C,UACnBxG,KAAK+E,YAAY6E,OAAOC,QAAQtJ,iBAAiB,QAAS,IAAMP,KAAK0D,cAAczF,KAAK,CACpF0I,OAAQ3G,KAAK+E,YACbtH,OAAQ,SAIZuC,KAAKiK,gBAAiB,CAEtB,MAAMC,EADUlK,KAAK+E,aAAa4E,OAAOQ,SAClBC,MAAMlF,cAAc,oBACvCgF,GAAOG,UACPH,EAAMG,QAAQC,KAAOtK,KAAKiK,gBAElC,IAEAjK,KAAKiH,QAAS,CAEd,GAAe,SADAxH,EAAUO,KAAKN,OAAQM,KAAK6E,QAAQnH,OAAOgC,QAEtDM,KAAK+E,YAAYwF,QAAQvK,KAAKiH,QAAS,cAEtC,CACD,MAAMuD,GAAWxK,KAAKyF,YAAYzF,KAAK+E,YAAa/E,KAAKiH,SACzDjH,KAAK+E,YAAY0F,YAAYD,GAAU,SAC3C,CACgBxK,KAAK+E,YAAY+E,UAAU,WACnCY,OACZ,CAEA1K,KAAK2K,mBACL3K,KAAK4K,0BAGA5K,KAAKmD,gBAAgBqD,UAAaxG,KAAK6K,qBAM5CC,sBAAsB,KACd9K,KAAK6K,oBACL7K,KAAK6K,qBAET7K,KAAKmD,gBAAgBuD,KAAK1G,KAAK+E,aAC/B/E,KAAKmD,gBAAgB9E,UAAS,EACjC,GAET,CACA0M,cACI/K,KAAKgL,UACLhL,KAAK+D,mBAAmB5F,cACxB6B,KAAK+D,kBAAoB,IAC7B,CACAkH,YAAYC,GACR,GAAKlL,KAAK+E,YAeV,IAXImG,EAAQ5B,UACRtJ,KAAK+E,YAAYoG,QAAQD,EAAQ5B,SAAS8B,cAE1CF,EAAQpC,cACR9I,KAAK+E,YAAYqF,KAAKC,QAAQvB,YAC1BoC,EAAQpC,YAAYsC,cAExBF,EAAQhI,oBACRlD,KAAK+E,YAAYqF,KAAKC,QAAQnH,kBAC1BgI,EAAQhI,kBAAkBkI,cAE9BF,EAAQrI,OAAQ,CAChB,MAAMwI,EAAiBH,EAAQrI,OAAOuI,aAChCE,EAAkBJ,EAAQrI,OAAO0I,cACnCD,GACA3C,OAAOI,KAAKuC,GAAiBrK,QAAS+H,IAClChJ,KAAKyE,SAAS+G,YAAYxL,KAAKkH,WAAY8B,EAAG,GAGlDqC,GACA1C,OAAOI,KAAKsC,GAAgBpK,QAAS+H,IACjChJ,KAAKyE,SAASwE,SAASjJ,KAAKkH,WAAY8B,EAAKhJ,KAAK6C,OAAOmG,GAAI,EAGzE,CACA,GAAIkC,EAAQxD,QAAS,CACjB,MAAM+D,EAAiBP,EAAQxD,QAAQ0D,aACjCM,EAAkBR,EAAQxD,QAAQ6D,cACpCG,GACA1L,KAAK2L,cAAcD,GAEnBD,GACAzL,KAAKkJ,WAAWuC,EAExB,CAGIP,EAAQU,cACR5L,KAAK4K,wBAAuB,CAGpC,CACA1B,WAAW2C,GACPnJ,EAAgB+E,oBAAoBoE,GAAW5K,QAAS6K,IACpD9L,KAAKyE,SAASsH,SAAS/L,KAAKkH,WAAY4E,EAAC,EAEjD,CACAH,cAAcE,GACVnJ,EAAgB+E,oBAAoBoE,GAAW5K,QAAS6K,IACpD9L,KAAKyE,SAASuH,YAAYhM,KAAKkH,WAAY4E,EAAC,EAEpD,CACAG,WAAWb,GAMP,GAJIpL,KAAKiD,YAA+B,OAAjBmI,IAGvBpL,KAAKiH,QAAUmE,GACVpL,KAAK+E,aACN,OAEJ,MAAMrF,EAASD,EAAUO,KAAKN,OAAQM,KAAK6E,QAAQnH,OAAOgC,QACpD8K,EAAWxK,KAAKyF,YAAYzF,KAAK+E,YAAaqG,GACpD,GAAIpL,KAAKgD,cAAe,CACpB,MAAMkJ,EAAqBlM,KAAK+E,YAAYO,cAC5C,GAAIC,KAAKC,UAAU0G,KAAwB3G,KAAKC,UAAUgF,GACtD,MAER,CACIY,EACe,SAAX1L,EACAM,KAAK+E,YAAYwF,QAAQa,GAGzBpL,KAAK+E,YAAY0F,YAAYD,GAIrCxK,KAAK+E,YAAYwF,QAAQ,GAC7B,CACAI,iBAAiBwB,EAAanM,KAAK4D,UAE/B5D,KAAK4D,SAAWuI,EACZnM,KAAK+E,cACDoH,GACAnM,KAAK+E,YAAYqH,UACjBpM,KAAKyE,SAAS4H,aAAarM,KAAKgE,WAAWyE,cAAe,WAAY,cAGjEzI,KAAKsJ,UACNtJ,KAAK+E,YAAYoG,SAErBnL,KAAKyE,SAAS6H,gBAAgBtM,KAAKgE,WAAWyE,cAAe,aAGzE,CACA8D,iBAAiBC,GACbxM,KAAKoH,cAAgBoF,CACzB,CACAC,kBAAkBD,GACdxM,KAAKuG,eAAiBiG,CAC1B,CACAE,0BAA0BF,GACtBxM,KAAK6K,mBAAqB2B,CAC9B,CACAG,WACI,IAAK3M,KAAK+E,YACN,OAAO,KAEX,MAAM6H,EAAM,CAAC,EACb,IAAIC,GAAQ,EACZ,MAAM7F,EAAOhH,KAAK+E,YAAYM,UAExByH,EAAa9M,KAAK+C,iBAAmBiE,EAAKW,OAAOoF,OAA0B,IAAhB/F,EAAK+F,QAAuC,IAAvB/F,EAAKW,OAAOoF,OAAe,EAAI/F,EAAK+F,OAAS,EAC7HC,EAAkBhN,KAAK+E,YAAYO,cAAc2H,IACjDC,IAAuBF,GAA8C,IAA3BA,EAAgBD,QAAgB,CAAC,KAAM,IAAIrH,SAASsH,EAAgB,GAAG/G,QAAQkH,YAC/H,OAAInN,KAAKoN,WAAaN,GAAcA,EAAa9M,KAAKoN,YAClDR,EAAIS,eAAiB,CACjBC,MAAOR,EACPM,UAAWpN,KAAKoN,WAEpBP,GAAQ,GAER7M,KAAKuN,WAAaT,EAAa9M,KAAKuN,YACpCX,EAAIY,eAAiB,CACjBF,MAAOR,EACPS,UAAWvN,KAAKuN,WAEpBV,GAAQ,GAER7M,KAAK2C,WAAamK,GAAcI,IAChCN,EAAIa,cAAgB,CAChBC,OAAO,GAEXb,GAAQ,GAELA,EAAQ,KAAOD,CAC1B,CACAhC,yBACI5K,KAAKgL,UAILhL,KAAK2E,KAAK8E,kBAAkB,KACxBzJ,KAAK8D,aAAe,IAAI6J,KACxB3N,KAAK8D,aAAa8J,OAElBC,KAAU7N,KAAK+E,YAAa,oBAAoBvG,UAAU,EAAE2H,EAAOC,EAAU3I,MACzEuC,KAAKkG,uBAAuBC,EAAOC,EAAU3I,EAAM,IAIvD,IAAIqQ,KAAcD,KAAU7N,KAAK+E,YAAa,eAC1CgJ,KAAgBF,KAAU7N,KAAK+E,YAAa,iBACf,iBAAtB/E,KAAK4L,eACZkC,EAAcA,EAAYpM,QAAKkK,KAAa5L,KAAK4L,eACjDmC,EAAgBA,EAAcrM,QAAKkK,KAAa5L,KAAK4L,gBAEzD5L,KAAK8D,aAAa8J,IAElBE,EAAYtP,UAAU,EAAEsI,EAAOC,EAAUtJ,MACrCuC,KAAK6G,kBAAkBC,EAAOC,EAAUtJ,EAAM,IAElDuC,KAAK8D,aAAa8J,IAElBG,EAAcvP,UAAU,EAAE8I,EAAOC,EAASC,EAAK/J,MAC3CuC,KAAKqH,oBAAoBC,EAAOC,EAASC,EAAK/J,EAAM,GACtD,EAEV,CACAuN,UAC8B,OAAtBhL,KAAK8D,eACL9D,KAAK8D,aAAa3F,cAClB6B,KAAK8D,aAAe,KAE5B,CAACxB,SACQtC,KAAKuC,UAAI,SAAA1B,GAAA,WAAAA,GAAwF6B,EAAe,EAAmDJ,SACnKtC,KAAKgO,UA/hBkFpP,MAAE,CAAAqP,KA+hBJvL,EAAewL,OAAA,CAAAxO,OAAA,SAAAiK,MAAA,QAAApM,QAAA,UAAA8L,MAAA,QAAAC,SAAA,WAAAR,YAAA,cAAAyE,UAAA,YAAAH,UAAA,YAAAzK,SAAA,WAAA6G,QAAA,UAAA5G,sBAAA,wBAAA+C,SAAA,WAAA4C,aAAA,eAAA1F,OAAA,SAAA6G,SAAA,WAAAP,OAAA,SAAAnI,cAAA,gBAAAS,cAAA,gBAAA4E,aAAA,eAAAvD,mBAAA,qBAAA4E,QAAA,UAAA3E,iBAAA,mBAAAkH,gBAAA,kBAAAjH,cAAA,gBAAAC,WAAA,aAAA2I,aAAA,eAAA1I,kBAAA,oBAAA4B,YAAA,cAAAW,YAAA,eAAA0I,QAAA,CAAAhL,gBAAA,kBAAAE,gBAAA,kBAAAC,iBAAA,mBAAAC,mBAAA,qBAAAC,QAAA,UAAAC,OAAA,SAAAC,cAAA,gBAAAC,aAAA,gBAAAyK,SAAA,CA/hBbxP,SAgiBnG,OA/gBK8D,CAAe,KA6lBf2L,EAAoB,MAA1B,MAAMA,UAA6B3L,EAAgBJ,SACtCtC,KAAKuC,UAAI,UAAA+L,EAAA,gBAAAzN,GAAA,OAAAyN,MA/mB8E1P,MA+mBUyP,KAAoBxN,GAApBwN,EAAoB,GAA5G,GAAiK/L,SAC1KtC,KAAKuO,UAhnBkF3P,MAAE,CAAAqP,KAgnBJI,EAAoBG,UAAA,mBAAAC,YAAA,EAAAL,SAAA,CAhnBlBxP,MAgnB6E,CACrK,CACI8P,OAAO,EACPC,QAASC,KAETC,eAAaC,MAAW,IAAMT,IAElC,CACIK,OAAO,EACPC,QAASI,KAETF,eAAaC,MAAW,IAAMT,MA3nBsDzP,aAAEoQ,mBAAA1P,EAAA2P,MAAA,EAAAC,KAAA,EAAAC,OAAA,8BAAAC,SAAA,SAAA1Q,EAAAC,GAAA,EAAAD,IAAFE,MAAES,GAAFT,MAAE,EAAAE,EAAA,KAAFF,MAAE,GAAFA,MAAE,KAAFA,MAAE,KAAFA,MAAE,EAAAO,EAAA,MAgpBjG,EAAAT,IAhpB+FE,MAAE,UAAAD,EAAAkF,gBAAA,MAAFjF,MAAE,GAAFA,MAAE,UAAAD,EAAAkF,gBAAA,MAgpBjG,EAAAwL,aAAA,CACoGC,MAAYzM,OAAA,6CACpH,OApCKwL,CAAoB,KA2EpBkB,EAAsB,MAA5B,MAAMA,EACF1P,YAAY2P,EAAW3K,GACnB7E,KAAKwP,UAAYA,EACjBxP,KAAK6E,QAAUA,EACf7E,KAAKiH,QAAU,GACfjH,KAAKmF,UAAY,GACjBnF,KAAKyP,WAAa,SACtB,CACAxE,YAAYC,GASR,GARIA,EAAQvB,MAER3J,KAAKyP,WAAc,MADLvE,EAAQvB,MAAMyB,eAAiBpL,KAAK6E,QAAQnH,OAAOiM,MAAQ3J,KAAK6E,QAAQnH,OAAOiM,MAAQ,8BAG/F3J,KAAK2J,QAEX3J,KAAKyP,WAAc,MADLzP,KAAK6E,QAAQnH,OAAOiM,MAAQ3J,KAAK6E,QAAQnH,OAAOiM,MAAQ,8BAGtEuB,EAAQjE,QAAS,CACjB,MAAMA,EAAUiE,EAAQjE,QAAQmE,aAC1BzF,EAAW,EAAC,GAAM,GAAOD,SAAS1F,KAAK2F,UAAY3F,KAAK2F,SAAY3F,KAAK6E,QAAQnH,OAAOiI,WAAY,EAC1G3F,KAAKmF,UAAYQ,EAAWsB,EAAUjH,KAAKwP,UAAUE,wBAAwBzI,EACjF,CACJ,CAAC3E,SACQtC,KAAKuC,UAAI,SAAA1B,GAAA,WAAAA,GAAwF0O,GAhtBV3Q,MAgtBkD0F,MAhtBlD1F,MAgtB2EgB,GAAY,EAA4C0C,SAC1NtC,KAAKuO,UAjtBkF3P,MAAE,CAAAqP,KAitBJsB,EAAsBf,UAAA,sBAAAN,OAAA,CAAAjH,QAAA,UAAA0C,MAAA,QAAAhE,SAAA,YAAA8I,YAAA,EAAAL,SAAA,CAjtBpBxP,aAAEqQ,MAAA,EAAAC,KAAA,EAAAC,OAAA,+DAAAC,SAAA,SAAA1Q,EAAAC,GAAA,EAAAD,IAAFE,MAAE,WAAFA,MAAE,WAAFA,SAqtB5F,EAAAF,IArtB4FE,MAAE,UAAAD,EAAA8Q,YAAF7Q,cAAE,YAAAD,EAAAwG,UAAFvG,OAmtBlD,EAAAyQ,aAAA,CAGqEC,KAA2CK,MAAU9M,OAAA,kDAAA+M,cAAA,IAC3K,OA9BKL,CAAsB,KAmDtBM,EAAkB,MAAxB,MAAMA,EACFhQ,YAAYmE,EAAYS,EAAUE,EAAME,EAASR,EAAcE,GAC3DvE,KAAKgE,WAAaA,EAClBhE,KAAKyE,SAAWA,EAChBzE,KAAK2E,KAAOA,EACZ3E,KAAK6E,QAAUA,EACf7E,KAAKqE,aAAeA,EACpBrE,KAAKuE,WAAaA,EAClBvE,KAAK8P,QAAS,EACd9P,KAAKyB,cAAgB,GACrBzB,KAAKgB,cAAgB,GACrBhB,KAAK8C,oBAAqB,EAC1B9C,KAAKmD,gBAAkB,IAAIC,MAC3BpD,KAAKhB,UAAW,EAChBgB,KAAK+D,kBAAoB,KACzB/D,KAAKyF,YAAc,CAACV,EAAa7G,KAC7B,MAAMwB,EAASD,EAAUO,KAAKN,OAAQM,KAAK6E,QAAQnH,OAAOgC,QAC1D,IAAIuH,EAAU/I,EACd,GAAe,SAAXwB,EACAqF,EAAYwF,QAAQtD,OAEnB,CACD,GAAe,SAAXvH,GACiB,EAAC,GAAM,GAAOgG,SAAS1F,KAAK2F,UAAY3F,KAAK2F,SAAY3F,KAAK6E,QAAQnH,OAAOiI,WAAY,KAEtGzH,EAAQ8B,KAAKqE,aAAasB,SAASC,MAAgBC,KAAM3H,IAE7D+I,EAAUlC,EAAYe,UAAUC,QAAQ,CAAEd,KAAM/G,SAAO,GAEvC,SAAXwB,EACL,IACIuH,EAAU1B,KAAKS,MAAM9H,EACzB,OAEI+I,EAAU,CAAC,CAAEhB,OAAQ/H,GACzB,CAEJ6G,EAAY0F,YAAYxD,EAC5B,EAER,CACAiB,WACIlI,KAAKhB,SAAWgB,KAAK8C,kBACzB,CACAmI,YAAYC,GACHlL,KAAK+E,aAGNmG,EAAQjE,SACRjH,KAAKyF,YAAYzF,KAAK+E,YAAamG,EAAQjE,QAAQmE,aAE3D,CACAjD,mBACI,EAAIC,MAAiBpI,KAAKuE,cAG1BvE,KAAK+D,kBAAoB/D,KAAK6E,QAAQ7C,WAAWN,QAAK2G,KAAUjI,IAC5D,MAAMkI,EAAW,CAACtI,KAAK6E,QAAQrD,sBAAsBpB,EAAOJ,KAAKyB,gBAC3D8G,EAAevI,KAAKuI,cAAgBvI,KAAK6E,QAAQnH,OAAO6K,aAC9D,OAAIA,GACAD,EAASL,KAAKM,KAEX3K,QAAQ4K,IAAIF,GAAU1H,KAAK,IAAMR,EAAK,IAC7C5B,UAAU4B,IACV,MAAM7C,EAAUoL,OAAOC,OAAO,CAAC,EAAG5I,KAAKzC,SAAWyC,KAAK6E,QAAQnH,OAAOH,SACtEA,EAAQf,SAAU,EAClBwD,KAAKgB,cAAcC,QAASC,IACxB,MAAMC,EAAkBf,EAAMgB,OAAOF,EAAaE,QAClDD,EAAgBE,UAAYH,EAAaG,UACzCjB,EAAMkB,SAASH,GAAiB,EAAI,GAExC,IAAIkI,EAAQrJ,KAAKqJ,OACZA,IAAmB,IAAVA,GAAmBrJ,KAAK6E,QAAQnH,OAAO2L,QACjDA,EAAQrJ,KAAK6E,QAAQnH,OAAO2L,OAEhC,IAAIG,EAAUxJ,KAAKwJ,SACdA,QAAuBX,IAAZW,IACZA,EAAUxJ,KAAK6E,QAAQnH,OAAO8L,QAC1Bb,OAAOC,OAAO,CAAC,EAAG5I,KAAK6E,QAAQnH,OAAO8L,SAA4C,OAAhCxJ,KAAK6E,QAAQnH,OAAO8L,QAAmB,UAAOX,GAExG,MAAMc,EAAQ3J,KAAK2J,QAAU3J,KAAK6E,QAAQnH,OAAOiM,MAAQ3J,KAAK6E,QAAQnH,OAAOiM,MAAQ,QACrF3J,KAAKkH,WAAalH,KAAKgE,WAAWyE,cAAcvD,cAAc,wBAC9DlF,KAAK2E,KAAK8E,kBAAkB,KACxBzJ,KAAK+E,YAAc,IAAI3E,EAAMJ,KAAKkH,WAAY,CAC1CmC,MAAOA,EACPG,QAASA,EACTjM,UACA+L,UAAU,EACVwG,OAAQ9P,KAAK8P,OACbnG,SACH,GAEL3J,KAAKyE,SAASsH,SAAS/L,KAAKkH,WAAY,kBACpClH,KAAKiH,SACLjH,KAAKyF,YAAYzF,KAAK+E,YAAa/E,KAAKiH,SAIvCjH,KAAKmD,gBAAgB4M,UAAUhD,QAMpCjC,sBAAsB,KAClB9K,KAAKmD,gBAAgBuD,KAAK1G,KAAK+E,aAC/B/E,KAAKmD,gBAAgB9E,UAAS,EACjC,GAET,CACA0M,cACI/K,KAAK+D,mBAAmB5F,cACxB6B,KAAK+D,kBAAoB,IAC7B,CAACzB,SACQtC,KAAKuC,UAAI,SAAA1B,GAAA,WAAAA,GAAwFgP,GA91BVjR,MA81B8CA,OA91B9CA,MA81BwEA,OA91BxEA,MA81BiGA,OA91BjGA,MA81BuHgB,GA91BvHhB,MA81BgJoR,MA91BhJpR,MA81B8K4F,OAAW,EAA4ClC,SAC5TtC,KAAKuO,UA/1BkF3P,MAAE,CAAAqP,KA+1BJ4B,EAAkBrB,UAAA,iBAAAN,OAAA,CAAAxO,OAAA,SAAAiK,MAAA,QAAApM,QAAA,UAAA8L,MAAA,QAAAG,QAAA,UAAA7D,SAAA,WAAA4C,aAAA,eAAAuH,OAAA,SAAA7I,QAAA,UAAAxF,cAAA,gBAAAT,cAAA,gBAAA8B,mBAAA,sBAAAqL,QAAA,CAAAhL,gBAAA,mBAAAsL,YAAA,EAAAL,SAAA,CA/1BhBxP,aAAEqQ,MAAA,EAAAC,KAAA,EAAAC,OAAA,4BAAAC,SAAA,SAAA1Q,EAAAC,GAAA,EAAAD,GAAFE,MAAE,EAAAW,EAAA,YAAFX,CAk2BnG,EAAAY,EAAA,OAAAd,GAl2BmGE,MAAE,EAAAD,EAAAK,SAAA,IAk2BrG,EAAAqQ,aAAA,CAGiHC,MAAYzM,OAAA,6CAAA+M,cAAA,IAC7H,OA1HKC,CAAkB,KAmKlBI,EAAW,MAAjB,MAAMA,EACF,cAAOC,CAAQxS,GACX,MAAO,CACHyS,SAAUF,EACVG,UAAW,CACP,CACIzB,QAASxR,EACTkT,SAAU3S,IAI1B,CAAC4E,SACQtC,KAAKuC,UAAI,SAAA1B,GAAA,WAAAA,GAAwFoP,EAAW,EAAkD3N,SAC9JtC,KAAKsQ,UA55BkF1R,MAAE,CAAAqP,KA45BSgC,IAAwK3N,SAC1QtC,KAAKuQ,UA75BkF3R,MAAE,CAAA4R,QAAA,CA65BgCnC,EAAsBwB,EAAoBN,KAC/K,OAfKU,CAAW,KC58BJQ,EAAmB,MAA1B,MAAOA,EAbb5Q,cAcSG,KAAAgE,cAAaC,OAAOC,OAEpBlE,KAAA0Q,sBAAwB,IAAIC,KAC5B3Q,KAAA4Q,aAA6B,CAClCpU,QAAS,CACPuN,UAAW,CACT,CAAC,OAAQ,SAAU,YAAa,SAAU,QAC1C,CAAC,CAAE7M,MAAO,KACV,CAAC,CAAER,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAEE,OAAQ,MAAQ,CAAEA,OAAQ,OAC7B,CAAC,QACD,CAAC,CAAEG,MAAO,IAAM,CAAEC,WAAY,KAC9B,CAAC,SACD,CAAC,CAAEC,KAAM,IAAM,CAAEH,KAAM,IAAM,CAAEL,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC1D,CAAC,YAUA0G,gBAAgB0N,GACrBC,QAAQC,IAAIF,GACZ7Q,KAAKgE,WAAWyE,cAAcuI,iBAAiB,sBAAsB/P,QAASgQ,GAAoBA,EAAGC,UAAW,GAChHlR,KAAKgE,WAAWyE,cAAcuI,iBAAiB,+BAA+B/P,QAASgQ,GAAoBA,EAAGC,UAAW,EAC3H,CAEOC,gBACLnR,KAAK0Q,sBAAsB9M,SAAW5D,KAAK0Q,sBAAsBvF,SAAWnL,KAAK0Q,sBAAsBtE,SACzG,CAAC9J,SAAAtC,KAAA,mBAAAa,iBAjCU4P,EAAmB,EAAAnO,SAAAtC,KAAA,UAAAoR,EAAAC,IAAA,MAAnBZ,EAAmBjC,UAAA,sBAAAC,YAAA,EAAAL,SAAA,CAAAxP,OAAAqQ,MAAA,GAAAC,KAAA,EAAAC,OAAA,oPAAAC,SAAA,SAAA1Q,EAAAC,GAAA,EAAAD,ICvBhCE,MAAA,oBAAAA,CAA8B,UACqBA,MAAA,iBAAWA,QAC5DA,MAAA,mBAAAA,CAAyC,cACjBA,MAAA,0BAASD,EAAAwS,eAAe,GAAEvS,MAAA,kBAAYA,YAIhEA,MAAA,UAAAA,CAAkB,sBAC+IA,MAAA,mBAAA0S,GAAA,OAAWA,EAAAC,iBAAwB,EAAnC3S,CAAoC,2BAAA0S,GAAA,OAAoB3S,EAAAwE,gBAAAmO,EAAuB,GAAE1S,QAEhPA,MAAA,OAAGA,MAAA,IAA+BA,iBAFpBA,MAAA,GAAAA,MAAA,cAAAD,EAAA+R,sBAAA9R,CAAqC,cAArCA,CAAqC,UAAAD,EAAAiS,aAArChS,CAAqC,SAAAD,EAAAqF,WAAAyE,eAEhD7J,MAAA,GAAAA,MAAAD,EAAA+R,sBAAAxS,uBDIDoR,KACAkC,KAAmBC,UACnBxB,EAAWN,EACX+B,MAAiBC,MACjBC,MAAkBD,OAAA9O,OAAA,wxuBAKT4N,CAAmB,qGEjBhC,MAAMoB,EAA0B,CAAC,cAAe,kBAC1CC,EAAqB,CAAC,mBAAoB,uBAC1CC,EAAgB,CAAC,KAAM,OACtB,SAASlE,EAAUmE,EAAQC,EAAWC,EAASC,GAKlD,MAJIC,KAAWF,KACXC,EAAiBD,EACjBA,OAAUrJ,GAEVsJ,EACA,OAAOtE,EAAUmE,EAAQC,EAAWC,GAASxQ,QAAK2Q,KAAiBF,IAEvE,MAAOvE,EAAK0E,GA+BhB,SAASC,EAAcP,GACnB,SAAOI,KAAWJ,EAAOzR,oBAAgB,EAAK6R,KAAWJ,EAAOQ,oBACpE,CAjC0BD,CAAcP,GAC9BF,EAAmBW,IAAKC,GAAgBC,GAAYX,EAAOU,GAAYT,EAAWU,EAAST,IAwBrG,SAASU,EAAwBZ,GAC7B,SAAOI,KAAWJ,EAAOa,eAAW,EAAKT,KAAWJ,EAAOc,eAC/D,CAxBYF,CAAwBZ,GAClBH,EAAwBY,IAAIM,EAAwBf,EAAQC,IAwB9E,SAASe,EAA0BhB,GAC/B,SAAOI,KAAWJ,EAAOiB,MAAE,EAAKb,KAAWJ,EAAOkB,IACtD,CAzBkBF,CAA0BhB,GACtBD,EAAcU,IAAIM,EAAwBf,EAAQC,IAClD,GAClB,IAAKrE,MACGuF,KAAYnB,GACZ,SAAO3J,KAAU+K,GAAcvF,EAAUuF,EAAWnB,EAAWC,GAA/D,EAAuE,EAAEmB,MAAUrB,IAG3F,IAAKpE,EACD,MAAM,IAAI0F,UAAU,wBAExB,OAAO,IAAIC,IAAYxV,IACnB,MAAM4U,EAAUA,IAAIa,IAASzV,EAAWE,KAAK,EAAIuV,EAAKzG,OAASyG,EAAOA,EAAK,IAC3E5F,SAAI+E,GACG,IAAML,EAAOK,EAAO,EAEnC,CACA,SAASI,EAAwBf,EAAQC,GACrC,OAAQS,GAAgBC,GAAYX,EAAOU,GAAYT,EAAWU,EACtE,qECtCO,SAAS/G,EAAa6H,EAASC,EAAYC,KAC9C,SAAOC,KAAQ,CAACnW,EAAQM,KACpB,IAAI8V,EAAa,KACbC,EAAY,KACZC,EAAW,KACf,MAAMrN,EAAOA,KACT,GAAImN,EAAY,CACZA,EAAW1V,cACX0V,EAAa,KACb,MAAM3V,EAAQ4V,EACdA,EAAY,KACZ/V,EAAWE,KAAKC,EACpB,GAEJ,SAAS8V,IACL,MAAMC,EAAaF,EAAWN,EACxBS,EAAMR,EAAUQ,MACtB,GAAIA,EAAMD,EAGN,OAFAJ,EAAa7T,KAAKmU,cAAStL,EAAWoL,EAAaC,QACnDnW,EAAW6P,IAAIiG,GAGnBnN,GACJ,CACAjJ,EAAOe,aAAU4V,KAAyBrW,EAAaG,IACnD4V,EAAY5V,EACZ6V,EAAWL,EAAUQ,MAChBL,IACDA,EAAaH,EAAUS,SAASH,EAAcP,GAC9C1V,EAAW6P,IAAIiG,GAAU,EAE9B,KACCnN,IACA3I,EAAWM,UAAS,OACrBwK,EAAW,KACViL,EAAYD,EAAa,OAC3B,EAEV,2DCvCO,MAAMQ,UAAsBC,IAC/BzU,YAAY0U,EAAcC,IAAUC,EAAcD,IAAUE,EAAqBC,KAC7EC,QACA5U,KAAKuU,YAAcA,EACnBvU,KAAKyU,YAAcA,EACnBzU,KAAK0U,mBAAqBA,EAC1B1U,KAAK6U,QAAU,GACf7U,KAAK8U,qBAAsB,EAC3B9U,KAAK8U,oBAAsBL,IAAgBD,IAC3CxU,KAAKuU,YAAcQ,KAAKC,IAAI,EAAGT,GAC/BvU,KAAKyU,YAAcM,KAAKC,IAAI,EAAGP,EACnC,CACAxW,KAAKC,GACD,MAAQ+W,YAAWJ,UAASC,sBAAqBJ,qBAAoBD,eAAgBzU,KAChFiV,IACDJ,EAAQ5M,KAAK/J,IACZ4W,GAAuBD,EAAQ5M,KAAKyM,EAAmBR,MAAQO,IAEpEzU,KAAKkV,cACLN,MAAM3W,KAAKC,EACf,CACAiX,WAAWpX,GACPiC,KAAKoV,iBACLpV,KAAKkV,cACL,MAAMpR,EAAe9D,KAAKqV,gBAAgBtX,IAClC+W,sBAAqBD,WAAY7U,KACnCsV,EAAOT,EAAQU,QACrB,QAASC,EAAI,EAAGA,EAAIF,EAAKvI,SAAWhP,EAAW0X,OAAQD,GAAKV,EAAsB,EAAI,EAClF/W,EAAWE,KAAKqX,EAAKE,IAEzB,OAAAxV,KAAK0V,wBAAwB3X,GACtB+F,CACX,CACAoR,cACI,MAAQX,cAAaG,qBAAoBG,UAASC,uBAAwB9U,KACpE2V,GAAsBb,EAAsB,EAAI,GAAKP,EAE3D,GADAA,EAAcC,KAAYmB,EAAqBd,EAAQ9H,QAAU8H,EAAQe,OAAO,EAAGf,EAAQ9H,OAAS4I,IAC/Fb,EAAqB,CACtB,MAAMZ,EAAMQ,EAAmBR,MAC/B,IAAI2B,EAAO,EACX,QAASL,EAAI,EAAGA,EAAIX,EAAQ9H,QAAU8H,EAAQW,IAAMtB,EAAKsB,GAAK,EAC1DK,EAAOL,EAEXK,GAAQhB,EAAQe,OAAO,EAAGC,EAAO,EACrC,CACJ,oCCeJ,SAASC,EAAYC,EAAO9C,KAAOO,GAC/B,IAAW,IAAPP,EAEA,YADA8C,IAGJ,IAAW,IAAP9C,EACA,OAEJ,MAAM+C,EAAe,IAAIhY,KAAe,CACpCC,KAAMA,KACF+X,EAAa7X,cACb4X,GAAM,IAGd,SAAO1C,MAAUJ,KAAMO,IAAOhV,UAAUwX,EAC5C,CC3EO,SAASrU,EAAYsU,EAAoBC,EAAYxC,GACxD,IAAI9R,EACAC,GAAW,EACf,OAAIoU,GAAoD,iBAAvBA,IAC1BrU,aAAa4S,IAAU0B,aAAa1B,IAAU3S,YAAW,EAAO6R,aAAcuC,GAGjFrU,EAAcqU,GAAoFzB,IDLnG,SAAS2B,EAAMjE,EAAU,CAAC,GAC7B,MAAQkE,YAAYA,KAAM,IAAI9B,KAAW+B,gBAAe,EAAMC,mBAAkB,EAAMC,uBAAsB,GAASrE,EACrH,OAAQsE,IACJ,IAAIC,EACAC,EACAC,EACA9U,EAAW,EACX+U,GAAe,EACfC,GAAa,EACjB,MAAMC,EAAcA,KACkDJ,GAAgBvY,cAClFuY,OAAkB7N,GAEhBkN,EAAQA,KACVe,IACAL,EAAaE,OAAU9N,EACvB+N,EAAeC,GAAa,GAE1BE,EAAsBA,KACxB,MAAMC,EAAOP,EACbV,IAC4CiB,GAAK7Y,aAAY,EAEjE,SAAOyV,KAAQ,CAACnW,EAAQM,KACpB8D,KACKgV,IAAeD,GAChBE,IAEJ,MAAMG,EAAQN,EAAUA,GAAmDP,IAC3ErY,EAAW6P,IAAI,KACX/L,IACiB,IAAbA,IAAmBgV,IAAeD,IAClCF,EAAkBZ,EAAYiB,EAAqBR,GAAmB,GAG9EU,EAAKzY,UAAUT,IACV0Y,GACD5U,EAAW,IACX4U,EAAa,IAAIzY,KAAe,CAC5BC,KAAOC,GAAU+Y,EAAKhZ,KAAKC,GAC3BE,MAAQwO,IACJiK,GAAa,EACbC,IACAJ,EAAkBZ,EAAYC,EAAOM,EAAczJ,GACnDqK,EAAK7Y,MAAMwO,EAAG,EAElBvO,SAAUA,KACNuY,GAAe,EACfE,IACAJ,EAAkBZ,EAAYC,EAAOO,GACrCW,EAAK5Y,UAAS,KAErB,EACDgV,MAAU5V,GAAQe,UAAUiY,GAAU,EA9B9C,CAgCGD,EAAa,CAExB,CClDWL,CAAM,CACTC,UAAWA,IAAM,IAAI/B,EAAczS,EAAYsU,EAAYxC,GAC3D2C,cAAc,EACdC,iBAAiB,EACjBC,oBAAqB1U,GAE7B,iDChBO,MAAMqV,UAAevJ,KACxB9N,YAAY6T,EAAWyD,GACnBvC,OACJ,CACAT,SAASiD,EAAOC,EAAQ,GACpB,OAAOrX,IACX,ECPG,MAAMsX,EAAmB,CAC5BC,YAAY5E,EAAS6E,KAAYhE,GAC7B,MAAQiE,YAAaH,EACrB,OAAwDG,GAASF,YACtDE,EAASF,YAAY5E,EAAS6E,KAAYhE,GAE9C+D,YAAY5E,EAAS6E,KAAYhE,EAC5C,EACAkE,cAAcC,GACV,MAAQF,YAAaH,EACrB,OAA6DG,GAASC,eAAkBA,eAAeC,EAC3G,EACAF,cAAU5O,iBCTP,MAAM+O,UAAoBV,EAC7BrX,YAAY6T,EAAWyD,GACnBvC,MAAMlB,EAAWyD,GACjBnX,KAAK0T,UAAYA,EACjB1T,KAAKmX,KAAOA,EACZnX,KAAK6X,SAAU,CACnB,CACA1D,SAASiD,EAAOC,EAAQ,GACpB,IAAIS,EACJ,GAAI9X,KAAKyV,OACL,OAAOzV,KAEXA,KAAKoX,MAAQA,EACb,MAAMW,EAAK/X,KAAK+X,GACVrE,EAAY1T,KAAK0T,UACvB,OAAU,MAANqE,IACA/X,KAAK+X,GAAK/X,KAAKgY,eAAetE,EAAWqE,EAAIV,IAEjDrX,KAAK6X,SAAU,EACf7X,KAAKqX,MAAQA,EACbrX,KAAK+X,GAAwB,QAAlBD,EAAK9X,KAAK+X,UAAuB,IAAPD,EAAgBA,EAAK9X,KAAKiY,eAAevE,EAAW1T,KAAK+X,GAAIV,GAC3FrX,IACX,CACAiY,eAAevE,EAAWwE,EAAKb,EAAQ,GACnC,OAAOC,EAAiBC,YAAY7D,EAAUyE,MAAMrX,KAAK4S,EAAW1T,MAAOqX,EAC/E,CACAW,eAAeI,EAAYL,EAAIV,EAAQ,GACnC,GAAa,MAATA,GAAiBrX,KAAKqX,QAAUA,IAA0B,IAAjBrX,KAAK6X,QAC9C,OAAOE,EAED,MAANA,GACAT,EAAiBI,cAAcK,EAGvC,CACAM,QAAQjB,EAAOC,GACX,GAAIrX,KAAKyV,OACL,OAAO,IAAI6C,MAAM,gCAErBtY,KAAK6X,SAAU,EACf,MAAMzZ,EAAQ4B,KAAKuY,SAASnB,EAAOC,GACnC,GAAIjZ,EACA,OAAOA,GAEe,IAAjB4B,KAAK6X,SAAgC,MAAX7X,KAAK+X,KACpC/X,KAAK+X,GAAK/X,KAAKgY,eAAehY,KAAK0T,UAAW1T,KAAK+X,GAAI,MAE/D,CACAQ,SAASnB,EAAOoB,GACZ,IACIC,EADAC,GAAU,EAEd,IACI1Y,KAAKmX,KAAKC,EACd,OACOzW,GACH+X,GAAU,EACVD,EAAa9X,GAAQ,IAAI2X,MAAM,qCACnC,CACA,GAAII,EACA,OAAA1Y,KAAK7B,cACEsa,CAEf,CACAta,cACI,IAAK6B,KAAKyV,OAAQ,CACd,MAAQsC,KAAIrE,aAAc1T,MAClB2Y,WAAYjF,EACpB1T,KAAKmX,KAAOnX,KAAKoX,MAAQpX,KAAK0T,UAAY,KAC1C1T,KAAK6X,SAAU,KACfe,KAAUD,EAAS3Y,MACT,MAAN+X,IACA/X,KAAK+X,GAAK/X,KAAKgY,eAAetE,EAAWqE,EAAI,OAEjD/X,KAAKqX,MAAQ,KACbzC,MAAMzW,aACV,CACJ,kDC9EG,MAAM0a,EACThZ,YAAYiZ,EAAqB5E,EAAM2E,EAAU3E,KAC7ClU,KAAK8Y,oBAAsBA,EAC3B9Y,KAAKkU,IAAMA,CACf,CACAC,SAASgD,EAAME,EAAQ,EAAGD,GACtB,OAAO,IAAIpX,KAAK8Y,oBAAoB9Y,KAAMmX,GAAMhD,SAASiD,EAAOC,EACpE,EAEJwB,EAAU3E,IAAMS,IAAsBT,ICT/B,MAAM6E,UAAuBF,EAChChZ,YAAYmZ,EAAiB9E,EAAM2E,EAAU3E,KACzCU,MAAMoE,EAAiB9E,GACvBlU,KAAK2Y,QAAU,GACf3Y,KAAKiZ,SAAU,CACnB,CACAd,MAAMe,GACF,MAAQP,WAAY3Y,KACpB,GAAIA,KAAKiZ,QAEL,YADAN,EAAQ1Q,KAAKiR,GAGjB,IAAI9a,EACJ4B,KAAKiZ,SAAU,EACf,MACS7a,EAAQ8a,EAAOb,QAAQa,EAAO9B,MAAO8B,EAAO7B,OAC7C,YAEE6B,EAASP,EAAQQ,SAE3B,GADAnZ,KAAKiZ,SAAU,EACX7a,EAAO,CACP,KAAQ8a,EAASP,EAAQQ,SACrBD,EAAO/a,cAEX,MAAMC,CACV,CACJ,0DCzBG,MAAMuV,EAAiB,YAAIoF,GAAenB,KACpCwB,EAAQzF,mCCHd,MAAMgB,EAAwB,CACjCT,SACYS,EAAsB8C,UAAY4B,MAAMnF,MAEpDuD,cAAU5O","names":["defaultModules","toolbar","header","list","script","indent","direction","size","color","background","font","align","QUILL_CONFIG_TOKEN","InjectionToken","providedIn","factory","modules","firstValueFrom","source","config","hasConfig","Promise","resolve","reject","subscriber","SafeSubscriber","next","value","unsubscribe","error","complete","defaultValue","EmptyError","subscribe","QuillEditorComponent_Conditional_0_Conditional_0_Template","rf","ctx","i0","QuillEditorComponent_Conditional_0_Conditional_1_Template","QuillEditorComponent_Conditional_0_Template","ctx_r0","preserve","QuillEditorComponent_Conditional_4_Conditional_0_Template","QuillEditorComponent_Conditional_4_Conditional_1_Template","QuillEditorComponent_Conditional_4_Template","ctx_r1","_c0","_c1","QuillViewComponent_Conditional_0_Template","QuillViewComponent_Conditional_1_Template","getFormat","format","configFormat","QuillService","constructor","injector","_this","this","quill$","defer","_asyncToGenerator","Quill","maybePatchedAddEventListener","document","addEventListener","__zone_symbol__addEventListener","quillImport","__webpack_require__","e","then","t","bind","default","customOptions","forEach","customOption","newCustomOption","import","whitelist","register","suppressGlobalRegisterWarning","registerCustomModules","customModules","pipe","shareReplay","bufferSize","refCount","get","DOCUMENT","getQuill","Array","isArray","implementation","path","isObservable","static","ɵfac","ɵprov","token","QuillEditorBase","required","customToolbarPosition","styles","preserveWhitespace","trimOnValidation","compareValues","filterNull","defaultEmptyValue","onEditorCreated","EventEmitter","onEditorChanged","onContentChanged","onSelectionChanged","onFocus","onBlur","onNativeFocus","onNativeBlur","disabled","toolbarPosition","subscription","quillSubscription","elementRef","inject","ElementRef","cd","ChangeDetectorRef","domSanitizer","DomSanitizer","platformId","PLATFORM_ID","renderer","Renderer2","zone","NgZone","service","valueGetter","quillEditor","editorElement","html","querySelector","innerHTML","modelValue","getText","getContents","JSON","stringify","valueSetter","includes","sanitize","SecurityContext","HTML","clipboard","convert","parse","insert","selectionChangeHandler","range","oldRange","trackChanges","shouldTriggerOnModelTouched","onModelTouched","observed","run","emit","editor","markForCheck","textChangeHandler","delta","oldDelta","text","content","editorElem","shouldTriggerOnModelChange","onModelChange","editorChangeHandler","event","current","old","normalizeClassNames","classes","trim","split","reduce","prev","cur","trimmed","push","ngOnInit","ngAfterViewInit","isPlatformServer","mergeMap","promises","beforeRender","all","nativeElement","toolbarElem","Object","assign","undefined","placeholder","keys","key","setStyle","addClasses","bounds","body","debug","readOnly","hasOwnProperty","formats","runOutsideAngular","registry","theme","scroll","domNode","getModule","container","preventDefault","linkPlaceholder","input","tooltip","root","dataset","link","setText","newValue","setContents","clear","setDisabledState","addQuillEventListeners","onValidatorChanged","requestAnimationFrame","ngOnDestroy","dispose","ngOnChanges","changes","enable","currentValue","currentStyling","previousStyling","previousValue","removeStyle","currentClasses","previousClasses","removeClasses","debounceTime","classList","c","addClass","removeClass","writeValue","currentEditorValue","isDisabled","disable","setAttribute","removeAttribute","registerOnChange","fn","registerOnTouched","registerOnValidatorChange","validate","err","valid","textLength","length","deltaOperations","ops","onlyEmptyOperation","toString","minLength","minLengthError","given","maxLength","maxLengthError","requiredError","empty","Subscription","add","fromEvent","textChange$","editorChange$","ɵdir","type","inputs","outputs","features","QuillEditorComponent","ɵQuillEditorComponent_BaseFactory","ɵcmp","selectors","standalone","multi","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NG_VALIDATORS","ngContentSelectors","decls","vars","consts","template","dependencies","CommonModule","QuillViewHTMLComponent","sanitizer","themeClass","bypassSecurityTrustHtml","i2","encapsulation","QuillViewComponent","strict","observers","i2$1","QuillModule","forRoot","ngModule","providers","useValue","ɵmod","ɵinj","imports","TextEditorComponent","textEditorFormControl","FormControl","quillModules","quill","console","log","querySelectorAll","el","tabIndex","onToggleState","core","In1","$event","stopPropagation","ReactiveFormsModule","i1","ForgeButtonModule","i3","ForgeToolbarModule","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","target","eventName","options","resultSelector","isFunction","mapOneOrManyArgs","remove","isEventTarget","removeEventListener","map","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","subTarget","innerFrom","TypeError","Observable","args","dueTime","scheduler","asyncScheduler","operate","activeTask","lastValue","lastTime","emitWhenIdle","targetTime","now","schedule","createOperatorSubscriber","ReplaySubject","Subject","_bufferSize","Infinity","_windowTime","_timestampProvider","dateTimestampProvider","super","_buffer","_infiniteTimeWindow","Math","max","isStopped","_trimBuffer","_subscribe","_throwIfClosed","_innerSubscribe","copy","slice","i","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","handleReset","reset","onSubscriber","configOrBufferSize","windowTime","share","connector","resetOnError","resetOnComplete","resetOnRefCountZero","wrapperSource","connection","resetConnection","subject","hasCompleted","hasErrored","cancelReset","resetAndUnsubscribe","conn","dest","Action","work","state","delay","intervalProvider","setInterval","timeout","delegate","clearInterval","handle","AsyncAction","pending","_a","id","recycleAsyncId","requestAsyncId","_id","flush","_scheduler","execute","Error","_execute","_delay","errorValue","errored","actions","arrRemove","Scheduler","schedulerActionCtor","AsyncScheduler","SchedulerAction","_active","action","shift","async","Date"],"sourceRoot":"webpack:///","sources":["./node_modules/ngx-quill/fesm2022/ngx-quill-config.mjs","./node_modules/rxjs/dist/esm/internal/firstValueFrom.js","./node_modules/ngx-quill/fesm2022/ngx-quill.mjs","./src/app/text-editor/text-editor.component.ts","./src/app/text-editor/text-editor.component.html","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./node_modules/rxjs/dist/esm/internal/operators/share.js","./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, makeEnvironmentProviders } from '@angular/core';\n\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'],\n        ['table']\n    ]\n};\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n    providedIn: 'root',\n    factory: () => ({ modules: defaultModules })\n});\n\n/**\n * This `NgModule` provides a global Quill config on the root level, e.g., in `AppModule`.\n * But this eliminates the need to import the entire `ngx-quill` library into the main bundle.\n * The `quill-editor` itself may be rendered in any lazy-loaded module, but importing `QuillModule`\n * into the `AppModule` will bundle the `ngx-quill` into the vendor.\n */\nclass QuillConfigModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillConfigModule,\n            providers: [{ provide: QUILL_CONFIG_TOKEN, useValue: config }],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillConfigModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillConfigModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillConfigModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillConfigModule, decorators: [{\n            type: NgModule\n        }] });\n\n/**\n * Provides Quill configuration at the root level:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideQuillConfig(...)]\n * });\n * ```\n */\nconst provideQuillConfig = (config) => makeEnvironmentProviders([{ provide: QUILL_CONFIG_TOKEN, useValue: config }]);\n\n/*\n * Public API Surface of ngx-quill/config\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillConfigModule, defaultModules, provideQuillConfig };\n","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n","import { defaultModules, QUILL_CONFIG_TOKEN } from 'ngx-quill/config';\nexport * from 'ngx-quill/config';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, EventEmitter, inject, ElementRef, ChangeDetectorRef, PLATFORM_ID, Renderer2, NgZone, SecurityContext, Directive, Input, Output, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i2$1 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { defer, isObservable, firstValueFrom, Subscription, fromEvent } from 'rxjs';\nimport { shareReplay, mergeMap, debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass QuillService {\n    constructor(injector, config) {\n        this.config = config;\n        this.quill$ = defer(async () => {\n            if (!this.Quill) {\n                // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n                // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n                // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n                const maybePatchedAddEventListener = this.document.addEventListener;\n                // There're 2 types of Angular applications:\n                // 1) zone-full (by default)\n                // 2) zone-less\n                // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n                // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n                // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n                // this means the `zone.js` is not imported.\n                // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n                // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n                this.document.addEventListener =\n                    // eslint-disable-next-line @typescript-eslint/dot-notation\n                    this.document['__zone_symbol__addEventListener'] ||\n                        this.document.addEventListener;\n                const quillImport = await import('quill');\n                this.document.addEventListener = maybePatchedAddEventListener;\n                this.Quill = (\n                // seems like esmodules have nested \"default\"\n                quillImport.default?.default ?? quillImport.default ?? quillImport);\n            }\n            // Only register custom options and modules once\n            this.config.customOptions?.forEach((customOption) => {\n                const newCustomOption = this.Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n            });\n            return await this.registerCustomModules(this.Quill, this.config.customModules, this.config.suppressGlobalRegisterWarning);\n        }).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n        this.document = injector.get(DOCUMENT);\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        return this.quill$;\n    }\n    /**\n     * Marked as internal so it won't be available for `ngx-quill` consumers, this is only\n     * internal method to be used within the library.\n     *\n     * @internal\n     */\n    async registerCustomModules(Quill, customModules, suppressGlobalRegisterWarning) {\n        if (Array.isArray(customModules)) {\n            // eslint-disable-next-line prefer-const\n            for (let { implementation, path } of customModules) {\n                // The `implementation` might be an observable that resolves the actual implementation,\n                // e.g. if it should be lazy loaded.\n                if (isObservable(implementation)) {\n                    implementation = await firstValueFrom(implementation);\n                }\n                Quill.register(path, implementation, suppressGlobalRegisterWarning);\n            }\n        }\n        // Return `Quill` constructor so we'll be able to re-use its return value except of using\n        // `map` operators, etc.\n        return Quill;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillService, deps: [{ token: i0.Injector }, { token: QUILL_CONFIG_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [QUILL_CONFIG_TOKEN]\n                }] }] });\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n    constructor() {\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.styles = null;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.compareValues = false;\n        this.filterNull = false;\n        /*\n        https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n      \n        provide default empty value\n        by default null\n      \n        e.g. defaultEmptyValue=\"\" - empty string\n      \n        <quill-editor\n          defaultEmptyValue=\"\"\n          formControlName=\"message\"\n        ></quill-editor>\n        */\n        this.defaultEmptyValue = null;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onNativeFocus = new EventEmitter();\n        this.onNativeBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.preserve = false;\n        this.toolbarPosition = 'top';\n        this.subscription = null;\n        this.quillSubscription = null;\n        this.elementRef = inject(ElementRef);\n        this.document = inject(DOCUMENT);\n        this.cd = inject(ChangeDetectorRef);\n        this.domSanitizer = inject(DomSanitizer);\n        this.platformId = inject(PLATFORM_ID);\n        this.renderer = inject(Renderer2);\n        this.zone = inject(NgZone);\n        this.service = inject(QuillService);\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                if (sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert({ html: value });\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched && (source === 'user' || trackChanges && trackChanges === 'all');\n            // only emit changes when there's any listener\n            if (!this.onBlur.observed &&\n                !this.onFocus.observed &&\n                !this.onSelectionChanged.observed &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n                this.cd.markForCheck();\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observed && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n                this.cd.markForCheck();\n            });\n        };\n        // eslint-disable-next-line max-len\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observed) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = this.defaultEmptyValue;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n            else {\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        editor: this.quillEditor,\n                        event,\n                        oldRange: old,\n                        range: current,\n                        source\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n        };\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n        this.toolbarPosition = this.customToolbarPosition;\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        // The `quill-editor` component might be destroyed before the `quill` chunk is loaded and its code is executed\n        // this will lead to runtime exceptions, since the code will be executed on DOM nodes that don't exist within the tree.\n        this.quillSubscription = this.service.getQuill().pipe(mergeMap((Quill) => {\n            const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n            const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n            if (beforeRender) {\n                promises.push(beforeRender());\n            }\n            return Promise.all(promises).then(() => Quill);\n        })).subscribe(Quill => {\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let defaultEmptyValue = this.defaultEmptyValue;\n            // eslint-disable-next-line no-prototype-builtins\n            if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n                defaultEmptyValue = this.service.config.defaultEmptyValue;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    defaultEmptyValue,\n                    registry: this.registry,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n                if (this.onNativeBlur.observed) {\n                    // https://github.com/quilljs/quill/issues/2186#issuecomment-533401328\n                    this.quillEditor.scroll.domNode.addEventListener('blur', () => this.onNativeBlur.next({\n                        editor: this.quillEditor,\n                        source: 'dom'\n                    }));\n                    // https://github.com/quilljs/quill/issues/2186#issuecomment-803257538\n                    const toolbar = this.quillEditor.getModule('toolbar');\n                    toolbar.container?.addEventListener('mousedown', (e) => e.preventDefault());\n                }\n                if (this.onNativeFocus.observed) {\n                    this.quillEditor.scroll.domNode.addEventListener('focus', () => this.onNativeFocus.next({\n                        editor: this.quillEditor,\n                        source: 'dom'\n                    }));\n                }\n                // Set optional link placeholder, Quill has no native API for it so using workaround\n                if (this.linkPlaceholder) {\n                    const tooltip = this.quillEditor?.theme?.tooltip;\n                    const input = tooltip?.root?.querySelector('input[data-link]');\n                    if (input?.dataset) {\n                        input.dataset.link = this.linkPlaceholder;\n                    }\n                }\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else {\n                    const newValue = this.valueSetter(this.quillEditor, this.content);\n                    this.quillEditor.setContents(newValue, 'silent');\n                }\n                const history = this.quillEditor.getModule('history');\n                history.clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            this.addQuillEventListeners();\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observed && !this.onValidatorChanged) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n                this.onEditorCreated.complete();\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.dispose();\n        this.quillSubscription?.unsubscribe();\n        this.quillSubscription = null;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        /* eslint-disable @typescript-eslint/dot-notation */\n        if (changes.readOnly) {\n            this.quillEditor.enable(!changes.readOnly.currentValue);\n        }\n        if (changes.placeholder) {\n            this.quillEditor.root.dataset.placeholder =\n                changes.placeholder.currentValue;\n        }\n        if (changes.defaultEmptyValue) {\n            this.quillEditor.root.dataset.defaultEmptyValue =\n                changes.defaultEmptyValue.currentValue;\n        }\n        if (changes.styles) {\n            const currentStyling = changes.styles.currentValue;\n            const previousStyling = changes.styles.previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes.classes) {\n            const currentClasses = changes.classes.currentValue;\n            const previousClasses = changes.classes.previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n        // `debounceTime` operator or vice-versa remove it.\n        if (changes.debounceTime) {\n            this.addQuillEventListeners();\n        }\n        /* eslint-enable @typescript-eslint/dot-notation */\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        // optional fix for https://github.com/angular/angular/issues/14988\n        if (this.filterNull && currentValue === null) {\n            return;\n        }\n        this.content = currentValue;\n        if (!this.quillEditor) {\n            return;\n        }\n        const format = getFormat(this.format, this.service.config.format);\n        const newValue = this.valueSetter(this.quillEditor, currentValue);\n        if (this.compareValues) {\n            const currentEditorValue = this.quillEditor.getContents();\n            if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n                return;\n            }\n        }\n        if (currentValue) {\n            if (format === 'text') {\n                this.quillEditor.setText(currentValue);\n            }\n            else {\n                this.quillEditor.setContents(newValue);\n            }\n            return;\n        }\n        this.quillEditor.setText('');\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        const deltaOperations = this.quillEditor.getContents().ops;\n        const onlyEmptyOperation = !!deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert?.toString());\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength && onlyEmptyOperation) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n    addQuillEventListeners() {\n        this.dispose();\n        // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n        // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n        // `zone.run` when we emit an event to the parent component.\n        this.zone.runOutsideAngular(() => {\n            this.subscription = new Subscription();\n            this.subscription.add(\n            // mark model as touched if editor lost focus\n            fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n                this.selectionChangeHandler(range, oldRange, source);\n            }));\n            // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n            // will be invoked upon subscription and teardown.\n            let textChange$ = fromEvent(this.quillEditor, 'text-change');\n            let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n            if (typeof this.debounceTime === 'number') {\n                textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n                editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n            }\n            this.subscription.add(\n            // update model if text changes\n            textChange$.subscribe(([delta, oldDelta, source]) => {\n                this.textChangeHandler(delta, oldDelta, source);\n            }));\n            this.subscription.add(\n            // triggered if selection or text changed\n            editorChange$.subscribe(([event, current, old, source]) => {\n                this.editorChangeHandler(event, current, old, source);\n            }));\n        });\n    }\n    dispose() {\n        if (this.subscription !== null) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillEditorBase, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.1\", type: QuillEditorBase, inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", required: \"required\", formats: \"formats\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", beforeRender: \"beforeRender\", styles: \"styles\", registry: \"registry\", bounds: \"bounds\", customOptions: \"customOptions\", customModules: \"customModules\", trackChanges: \"trackChanges\", preserveWhitespace: \"preserveWhitespace\", classes: \"classes\", trimOnValidation: \"trimOnValidation\", linkPlaceholder: \"linkPlaceholder\", compareValues: \"compareValues\", filterNull: \"filterNull\", debounceTime: \"debounceTime\", defaultEmptyValue: \"defaultEmptyValue\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\", onNativeFocus: \"onNativeFocus\", onNativeBlur: \"onNativeBlur\" }, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillEditorBase, decorators: [{\n            type: Directive\n        }], propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], readOnly: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], customToolbarPosition: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], beforeRender: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], registry: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], trackChanges: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], classes: [{\n                type: Input\n            }], trimOnValidation: [{\n                type: Input\n            }], linkPlaceholder: [{\n                type: Input\n            }], compareValues: [{\n                type: Input\n            }], filterNull: [{\n                type: Input\n            }], debounceTime: [{\n                type: Input\n            }], defaultEmptyValue: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }], onEditorChanged: [{\n                type: Output\n            }], onContentChanged: [{\n                type: Output\n            }], onSelectionChanged: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onNativeFocus: [{\n                type: Output\n            }], onNativeBlur: [{\n                type: Output\n            }], valueGetter: [{\n                type: Input\n            }], valueSetter: [{\n                type: Input\n            }] } });\nclass QuillEditorComponent extends QuillEditorBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillEditorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.1\", type: QuillEditorComponent, isStandalone: true, selector: \"quill-editor\", providers: [\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            },\n            {\n                multi: true,\n                provide: NG_VALIDATORS,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            }\n        ], usesInheritance: true, ngImport: i0, template: `\n    @if (toolbarPosition !== 'top') {\n      @if (preserve) {\n        <pre quill-editor-element></pre>\n      } @else {\n        <div quill-editor-element></div>\n      }\n    }\n\n    <ng-content select=\"[above-quill-editor-toolbar]\"></ng-content>\n    <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n    <ng-content select=\"[below-quill-editor-toolbar]\"></ng-content>\n\n    @if (toolbarPosition === 'top') {\n      @if (preserve) {\n        <pre quill-editor-element></pre>\n      } @else {\n        <div quill-editor-element></div>\n      }\n    }\n  `, isInline: true, styles: [\":host{display:inline-block}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillEditorComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.Emulated, providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALIDATORS,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        }\n                    ], selector: 'quill-editor', template: `\n    @if (toolbarPosition !== 'top') {\n      @if (preserve) {\n        <pre quill-editor-element></pre>\n      } @else {\n        <div quill-editor-element></div>\n      }\n    }\n\n    <ng-content select=\"[above-quill-editor-toolbar]\"></ng-content>\n    <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n    <ng-content select=\"[below-quill-editor-toolbar]\"></ng-content>\n\n    @if (toolbarPosition === 'top') {\n      @if (preserve) {\n        <pre quill-editor-element></pre>\n      } @else {\n        <div quill-editor-element></div>\n      }\n    }\n  `, standalone: true, imports: [CommonModule], styles: [\":host{display:inline-block}\\n\"] }]\n        }] });\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.content = '';\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            const content = changes.content.currentValue;\n            const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n            this.innerHTML = sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillViewHTMLComponent, deps: [{ token: DomSanitizer }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.1\", type: QuillViewHTMLComponent, isStandalone: true, selector: \"quill-view-html\", inputs: { content: \"content\", theme: \"theme\", sanitize: \"sanitize\" }, usesOnChanges: true, ngImport: i0, template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillViewHTMLComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, selector: 'quill-view-html', template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, standalone: true, imports: [CommonModule], styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"] }]\n        }], ctorParameters: () => [{ type: i2$1.DomSanitizer, decorators: [{\n                    type: Inject,\n                    args: [DomSanitizer]\n                }] }, { type: QuillService }], propDecorators: { content: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.onEditorCreated = new EventEmitter();\n        this.preserve = false;\n        this.quillSubscription = null;\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                    if (sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert({ html: value });\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        this.quillSubscription = this.service.getQuill().pipe(mergeMap((Quill) => {\n            const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n            const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n            if (beforeRender) {\n                promises.push(beforeRender());\n            }\n            return Promise.all(promises).then(() => Quill);\n        })).subscribe(Quill => {\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                this.onEditorCreated.emit(this.quillEditor);\n                this.onEditorCreated.complete();\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.quillSubscription?.unsubscribe();\n        this.quillSubscription = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillViewComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }, { token: i2$1.DomSanitizer }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.1\", type: QuillViewComponent, isStandalone: true, selector: \"quill-view\", inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", sanitize: \"sanitize\", beforeRender: \"beforeRender\", strict: \"strict\", content: \"content\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\" }, outputs: { onEditorCreated: \"onEditorCreated\" }, usesOnChanges: true, ngImport: i0, template: `\n@if (preserve) {\n  <pre quill-view-element></pre>\n} @else {\n  <div quill-view-element></div>\n}\n`, isInline: true, styles: [\".ql-container.ngx-quill-view{border:0}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillViewComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, selector: 'quill-view', template: `\n@if (preserve) {\n  <pre quill-view-element></pre>\n} @else {\n  <div quill-view-element></div>\n}\n`, standalone: true, imports: [CommonModule], styles: [\".ql-container.ngx-quill-view{border:0}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }, { type: i2$1.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }], propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], beforeRender: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }] } });\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillModule, imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent], exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillModule, imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.1\", ngImport: i0, type: QuillModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                    exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-quill\n */\n// Re-export everything from the secondary entry-point so we can be backwards-compatible\n// and don't introduce breaking changes for consumers.\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent };\n","import { CommonModule } from '@angular/common';\r\nimport { Component, ElementRef, inject } from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { ForgeButtonModule, ForgeToolbarModule } from '@tylertech/forge-angular';\r\nimport { Quill } from 'quill';\r\nimport { QuillModule, QuillModules } from 'ngx-quill';\r\n\r\n// https://quilljs.com/docs/\r\n// https://github.com/KillerCodeMonkey/ngx-quill\r\n\r\n@Component({\r\n  selector: 'app-text-editor',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    QuillModule,\r\n    ForgeButtonModule,\r\n    ForgeToolbarModule\r\n  ],\r\n  templateUrl: './text-editor.component.html',\r\n  styleUrls: ['./text-editor.component.scss']\r\n})\r\nexport class TextEditorComponent {\r\n  public elementRef = inject(ElementRef);\r\n\r\n  public textEditorFormControl = new FormControl();\r\n  public quillModules: QuillModules = {\r\n    toolbar: {\r\n      container: [\r\n        ['bold', 'italic', 'underline', 'strike', 'code'],\r\n        [{ align: [] }],\r\n        [{ list: 'ordered' }, { list: 'bullet' }],\r\n        [{ indent: '-1' }, { indent: '+1' }],\r\n        ['link'],\r\n        [{ color: [] }, { background: [] }],\r\n        ['clean'],\r\n        [{ font: [] }, { size: [] }, { header: [1, 2, 3, 4, 5, 6, false] }],\r\n        ['image']\r\n      ],\r\n      // handlers: {\r\n      //   'link': (value) => {\r\n      //     console.log(value);\r\n      //   }\r\n      // }\r\n    }\r\n  };\r\n\r\n  public onEditorCreated(quill: Quill) {\r\n    console.log(quill);\r\n    this.elementRef.nativeElement.querySelectorAll('.ql-toolbar button').forEach((el: HTMLElement) => el.tabIndex = -1);\r\n    this.elementRef.nativeElement.querySelectorAll('.ql-toolbar [role=\"button\"]').forEach((el: HTMLElement) => el.tabIndex = -1);\r\n  }\r\n\r\n  public onToggleState() {\r\n    this.textEditorFormControl.disabled ? this.textEditorFormControl.enable() : this.textEditorFormControl.disable();\r\n  }\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--title\">Text Editor</h2>\r\n  <forge-button slot=\"end\" type=\"outlined\">\r\n    <button type=\"button\" (click)=\"onToggleState()\">Toggle state</button>\r\n  </forge-button>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <quill-editor [formControl]=\"textEditorFormControl\" [sanitize]=\"true\" placeholder=\"\" [modules]=\"quillModules\" [bounds]=\"elementRef.nativeElement\" #quillEditor (keydown)=\"$event.stopPropagation()\" (onEditorCreated)=\"onEditorCreated($event)\"></quill-editor>\r\n\r\n  <p>{{textEditorFormControl.value}}</p>\r\n</div>","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options = {}) {\n    const { connector = () => new Subject(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n    return (wrapperSource) => {\n        let connection;\n        let resetConnection;\n        let subject;\n        let refCount = 0;\n        let hasCompleted = false;\n        let hasErrored = false;\n        const cancelReset = () => {\n            resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n            resetConnection = undefined;\n        };\n        const reset = () => {\n            cancelReset();\n            connection = subject = undefined;\n            hasCompleted = hasErrored = false;\n        };\n        const resetAndUnsubscribe = () => {\n            const conn = connection;\n            reset();\n            conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n        };\n        return operate((source, subscriber) => {\n            refCount++;\n            if (!hasErrored && !hasCompleted) {\n                cancelReset();\n            }\n            const dest = (subject = subject !== null && subject !== void 0 ? subject : connector());\n            subscriber.add(() => {\n                refCount--;\n                if (refCount === 0 && !hasErrored && !hasCompleted) {\n                    resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n                }\n            });\n            dest.subscribe(subscriber);\n            if (!connection &&\n                refCount > 0) {\n                connection = new SafeSubscriber({\n                    next: (value) => dest.next(value),\n                    error: (err) => {\n                        hasErrored = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnError, err);\n                        dest.error(err);\n                    },\n                    complete: () => {\n                        hasCompleted = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnComplete);\n                        dest.complete();\n                    },\n                });\n                innerFrom(source).subscribe(connection);\n            }\n        })(wrapperSource);\n    };\n}\nfunction handleReset(reset, on, ...args) {\n    if (on === true) {\n        reset();\n        return;\n    }\n    if (on === false) {\n        return;\n    }\n    const onSubscriber = new SafeSubscriber({\n        next: () => {\n            onSubscriber.unsubscribe();\n            reset();\n        },\n    });\n    return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n    }\n    else {\n        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n"],"x_google_ignoreList":[0,1,2,5,6,7,8,9,10,11,12,13,14,15,16]}