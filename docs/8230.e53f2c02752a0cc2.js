"use strict";(self.webpackChunkdemo_ng_forge=self.webpackChunkdemo_ng_forge||[]).push([[8230],{28230:(Kt,Ge,b)=>{b.r(Ge),b.d(Ge,{default:()=>Yt});var P=b(71670),v=b(18100),st=b(73889),we=b(78189),k=b(32995),ke=b(28191),x=b(53661),at=b(90642),ye=b(30801),ot=b(7521),C=b(9497),Ee=b(83382),lt=(b(19420),b(4139)),ct=b(66508),q=b(20891),ut=b(22735),ft=b(6363),dt=b(29812),mt=b(55123),_e=(b(6010),b(1897)),pt=b(53492),Ve=b(4583),ze=b(51299),$e=b(80661),ht=b(9508),Ne=b(53403),yt=b(18079),ge=b(51015),gt=b(44480),xt=b(99508),Ye=b(2547),xe=b(1137),K=b(73691),re=b(6147),It=b(79092),Xe=b(13549),se=b(26890),z=b(13110),Je=b(62265),V=b(10465),A=b(35787);let $=class extends((0,xt.v)(gt.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}init(){var t=this;return(0,P.Z)(function*(){const e=(0,z.zD)();t.addResolvingPromise(e),yield t.when()})()}normalizeCtorArgs(t){return t&&t.ioConfig&&(t={...t,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:ge.Z.create(),...t.ioConfig}}),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,e=(0,z.ut)(t.spatialReference);return(0,x.pC)(e)&&t.extent.width>=e/2}set url(t){this._set("url",(0,Ve.Nm)(t,ke.Z.getLogger(this.declaredClass)))}open(t){return(0,P.Z)(function*(){throw new k.Z("BaseRaster:open-not-implemented","open() is not implemented")})()}fetchTile(t,e,i,r={}){var n=this;return(0,P.Z)(function*(){const a=r.tileInfo||n.rasterInfo.storageInfo.tileInfo,s=n.getTileExtentFromTileInfo(t,e,i,a);return n.fetchPixels(s,a.size[0],a.size[1],r)})()}identify(t,e={}){var i=this;return(0,P.Z)(function*(){t=(0,Ee.TJ)(A.Z,t).clone().normalize();const{multidimensionalDefinition:r,timeExtent:n}=e,{rasterInfo:a}=i,{hasMultidimensionalTranspose:s,multidimensionalInfo:l}=a;let{transposedVariableName:o}=e;const c=(0,x.pC)(l)&&s&&(null!=n||(0,K.WU)(r));c&&!o&&(o=(0,x.pC)(r)&&r.length>0?r[0].variableName??void 0:l.variables[0].name,e={...e,transposedVariableName:o}),e=i._getRequestOptionsWithSliceId(e);const{spatialReference:u,extent:d}=a,{datumTransformation:f}=e;let m=(0,z.nF)(t,u,f);if(!d.intersects(m))return{location:m,value:null};if((0,x.pC)(a.transform)){const B=a.transform.inverseTransform(m);if(!a.nativeExtent.intersects(B))return{location:B,value:null};m=B}let h=0;const g=(0,x.pC)(o)&&(0,x.pC)(l)&&a.hasMultidimensionalTranspose;if("Function"===i.datasetFormat){const B=i.primaryRasters.rasters[0];if(g)return B.identify(m,e);const{pixelSize:N}=a,J=3,W=N.x*J/2,L=N.y*J/2,G=new V.Z({xmin:m.x-W,xmax:m.x+W,ymin:m.y-L,ymax:m.y+L,spatialReference:u}),H={interpolation:"nearest"},{pixelBlock:X}=yield B.fetchPixels(G,J,J,H),{pixelBlock:_}=yield i.fetchPixels(G,J,J,H);if((0,x.Wi)(X))return{location:m,value:null};const te=Math.floor(J*J*.5),pe=!X.mask||X.mask[te]?X.pixels.map(he=>he[te]):null;let Te;return(0,x.pC)(_)&&(Te=!_.mask||_.mask[te]?_.pixels.map(he=>he[te]):void 0),{location:m,value:pe,processedValue:Te,pyramidLevel:0}}if(!g)if(e.srcResolution)h=(0,z.kr)(e.srcResolution,a,i.ioConfig.sampling).pyramidLevel;else if(h=yield i.computeBestPyramidLevelForLocation(t,e),null==h)return{location:m,value:null};const y=i.identifyPixelLocation(m,h,null,g);if(null===y)return{location:m,value:null};const{row:p,col:I,rowOffset:S,colOffset:M,blockWidth:F}=y,Z=o??(0,x.Wg)(e.sliceId),T=(0,re.Rq)(i.url,Z),w=`${h}/${p}/${I}`;let D=(0,re.Qg)(T,null,w);(0,x.Wi)(D)&&(D=i.fetchRawTile(h,p,I,e),(0,re.gX)(T,null,w,D));const R=yield D;return(0,x.Wi)(R)||!R.pixels?.length?{location:m,value:null}:i._processIdentifyResult(R,{srcLocation:m,position:S*F+M,pyramidLevel:h,useTransposedTile:!!g,requestSomeSlices:c,identifyOptions:e})})()}fetchPixels(t,e,i,r={}){var n=this;return(0,P.Z)(function*(){if(t=(0,z.kZ)(t),(r=n._getRequestOptionsWithSliceId(r)).requestRawData)return n._fetchPixels(t,e,i,r);const a=(0,z.ut)(t.spatialReference),s=(0,z.Hq)(t);if((0,x.Wi)(a)||0===s||1===s&&n._isGlobalWrappableSource)return n._fetchPixels(t,e,i,r);if(s>=3)return{extent:t,pixelBlock:null};const l=[],{xmin:o,xmax:c}=t,u=Math.round(a/(c-o)*e),d=u-Math.round((a/2-o)/(c-o)*e);let f=0;const m=[];for(let p=0;p<=s;p++){const I=new V.Z({xmin:0===p?o:-a/2,xmax:p===s?c-a*p:a/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),S=0===p?u-d:p===s?e-f:u;f+=S,m.push(S);const M=r.disableWrapAround&&p>0?null:n._fetchPixels(I,S,i,r);l.push(M)}const h=(yield Promise.all(l)).map(p=>p?.pixelBlock);let g=null;const y={width:e,height:i};return g=n.rasterJobHandler?(yield n.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:h,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:m},r)).pixelBlock:(0,se.us)(h,y,{blockWidths:m}),{extent:t,srcExtent:(0,z.tB)(t,n.rasterInfo.spatialReference,r.datumTransformation),pixelBlock:g}})()}fetchRawPixels(t,e,i,r={}){var n=this;return(0,P.Z)(function*(){e={x:Math.floor(e.x),y:Math.floor(e.y)};const a=yield n._fetchRawTiles(t,e,i,r),{nativeExtent:s,nativePixelSize:l,storageInfo:o}=n.rasterInfo,c=2**t,u=l.x*c,d=l.y*c,f=new V.Z({xmin:s.xmin+u*e.x,xmax:s.xmin+u*(e.x+i.width-1),ymin:s.ymax-d*(e.y+i.height-1),ymax:s.ymax-d*e.y,spatialReference:s.spatialReference});if(!a)return{extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:m,mosaicSize:h}=a;if(1===m.length&&(0,x.pC)(m[0])&&m[0].width===i.width&&m[0].height===i.height)return{extent:f,srcExtent:f,pixelBlock:a.pixelBlocks[0]};const p={x:e.x%(t>0?o.pyramidBlockWidth:o.blockWidth),y:e.y%(t>0?o.pyramidBlockHeight:o.blockHeight)};let I;return I=n.rasterJobHandler?(yield n.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:h,destDimension:i,clipOffset:p,clipSize:i,coefs:null,sampleSpacing:null,interpolation:r.interpolation,alignmentInfo:null,blockWidths:null},r)).pixelBlock:(0,se.us)(m,h,{clipOffset:p,clipSize:i}),{extent:f,srcExtent:f,pixelBlock:I}})()}fetchRawTile(t,e,i,r){throw new k.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return(0,z.tB)(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?(0,Xe.J)(t,e):this.rasterJobHandler.decode({data:t,options:e})}request(t,e,i=0){var r=this;return(0,P.Z)(function*(){const{customFetchParameters:n}=r.ioConfig,{range:a,query:s,headers:l}=e;i=i??e.retryCount??r.ioConfig.retryCount;const o=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return yield(0,_e.default)(t,{...e,query:{...s,...n},headers:{...l,...o}})}catch(c){if(i>0)return i--,r.request(t,e,i);throw c}})()}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;return(0,x.Wi)(e)||(0,x.Wi)(t)||0===t.length?null:(0,K.gk)(t,e)}getTileExtentFromTileInfo(t,e,i,r){const n=(0,x.s3)(r.lodAt(t));return this.getTileExtent({x:n.resolution,y:n.resolution},e,i,r.origin,r.spatialReference,r.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:i,pixelSize:r}=this.rasterInfo;if(!t.tileInfo){const n=[],a=t.maximumPyramidLevel||0;let s=Math.max(r.x,r.y),l=1/.0254*96*s;for(let c=0;c<=a;c++)n.push(new Ye.Z({level:a-c,resolution:s,scale:l})),s*=2,l*=2;const o=new A.Z({x:i.xmin,y:i.ymax,spatialReference:e});t.tileInfo=new ge.Z({origin:o,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:n}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,i=512,r){const{width:n,height:a,nativeExtent:s,pixelSize:l,spatialReference:o}=t,c=new A.Z({x:s.xmin,y:s.ymax,spatialReference:o});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(n,a))/Math.LN2-8)));const u=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[l],r);t.storageInfo=new xe.Z({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:u})}computeBestPyramidLevelForLocation(t,e={}){return(0,P.Z)(function*(){return 0})()}computeBlockBoundary(t,e,i,r,n,a=0,s=2){if(1===n.length&&a>0){n=[...n];let{x:u,y:d}=n[0];for(let f=0;f<a;f++)u*=s,d*=s,n.push({x:u,y:d})}const l=[],{x:o,y:c}=r;for(let u=0;u<n.length;u++){const{x:d,y:f}=n[u];l.push({minCol:Math.floor((t.xmin-o+.1*d)/e/d),maxCol:Math.floor((t.xmax-o-.1*d)/e/d),minRow:Math.floor((c-t.ymax+.1*f)/i/f),maxRow:Math.floor((c-t.ymin-.1*f)/i/f)})}return l}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:r}=this.rasterInfo.storageInfo;if(0===t)return e;if((0,x.pC)(i)&&i.length)return i[t-1];const n=r**t;return{x:e.x*n,y:e.y*n}}identifyPixelLocation(t,e,i,r){const{spatialReference:n,nativeExtent:a,storageInfo:s}=this.rasterInfo,{maximumPyramidLevel:l,origin:o,transposeInfo:c}=s,u=r&&(0,x.pC)(c)?c.tileSize[0]:s.blockWidth,d=r&&(0,x.pC)(c)?c.tileSize[1]:s.blockHeight,f=(0,z.nF)(t,n,i);if(!a.intersects(f)||e<0||e>l)return null;const m=this.getPyramidPixelSize(e),{x:h,y:g}=m,y=(o.y-f.y)/g/d,p=(f.x-o.x)/h/u,I=Math.min(d-1,Math.floor((y-Math.floor(y))*d)),S=Math.min(u-1,Math.floor((p-Math.floor(p))*u));return{pyramidLevel:e,row:Math.floor(y),col:Math.floor(p),rowOffset:I,colOffset:S,blockWidth:u,srcLocation:f}}getTileExtent(t,e,i,r,n,a){const[s,l]=a,o=r.x+i*s*t.x,u=r.y-e*l*t.y;return new V.Z({xmin:o,xmax:o+s*t.x,ymin:u-l*t.y,ymax:u,spatialReference:n})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,i){const r=this.rasterInfo.storageInfo.blockBoundary[t];return!r||r.maxRow<e||r.maxCol<i||r.minRow>e||r.minCol>i}_fetchPixels(t,e,i,r={}){var n=this;return(0,P.Z)(function*(){let a=(0,z.Hq)(t);if(a>=2)return{extent:t,pixelBlock:null};const s=n._getSourceDataInfo(t,e,i,r),{pyramidLevel:l,pyramidResolution:o,srcResolution:c,srcExtent:u,srcWidth:d,srcHeight:f}=s;if(0===d||0===f)return{extent:t,srcExtent:u,pixelBlock:null};const m=(0,x.Wg)(n.rasterInfo.transform),h="gcs-shift"===m?.type,g=(0,x.pC)((0,z.ut)(t.spatialReference));!h&&g||(a=(0,z.Hq)(s.srcExtent,h));const y=n.rasterInfo.storageInfo,p={x:Math.floor((u.xmin-y.origin.x)/o.x+.1),y:Math.floor((y.origin.y-u.ymax)/o.y+.1)},I=yield n._fetchRawTiles(l,p,{width:d,height:f,wrapCount:a},r);if(!I)return{extent:t,srcExtent:u,pixelBlock:null};const S=l>0?y.pyramidBlockWidth:y.blockWidth,M=l>0?y.pyramidBlockHeight:y.blockHeight,F=S===d&&M===f&&p.x%S==0&&p.y%M==0,Z=new A.Z({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference}),T=!t.spatialReference.equals(n.rasterInfo.spatialReference),{datumTransformation:w}=r;if(!T&&F&&1===I.pixelBlocks.length&&S===e&&M===i&&c.x===Z.x&&c.y===Z.y)return{extent:t,srcExtent:u,pixelBlock:I.pixelBlocks[0]};const D=g&&(0,x.pC)((0,z.ut)(u.spatialReference)),R=r.requestProjectedLocalDirections&&n.rasterInfo.dataType.startsWith("vector");R&&!n.rasterJobHandler&&(yield(0,z.zD)());const O=n.rasterJobHandler?yield n.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:I.extent,pixelSize:Z.toJSON(),datumTransformation:w,rasterTransform:m,hasWrapAround:a>0||D,isAdaptive:!1!==n.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:R},r):(0,z.Qp)({projectedExtent:t,srcBufferExtent:I.extent,pixelSize:Z,datumTransformation:w,rasterTransform:m,hasWrapAround:a>0||D,isAdaptive:!1,includeGCSGrid:R});let B;const N=!r.requestRawData,J={rows:O.spacing[0],cols:O.spacing[1]},W=(0,x.Wg)(n._getRasterTileAlignmentInfo(l,I.extent.xmin)),{pixelBlocks:L,mosaicSize:G,isPartiallyFilled:H}=I;let X=null;if(n.rasterJobHandler)({pixelBlock:B,localNorthDirections:X}=yield n.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:L,srcMosaicSize:G,destDimension:N?{width:e,height:i}:null,coefs:N?O.coefficients:null,sampleSpacing:N?J:null,projectDirections:R,gcsGrid:R?O.gcsGrid:null,isUV:"vector-uv"===n.rasterInfo.dataType,interpolation:r.interpolation,alignmentInfo:W,blockWidths:null},r));else{const _=(0,se.us)(L,G,{alignmentInfo:W});B=N?(0,se.Uk)(_,{width:e,height:i},O.coefficients,J,r.interpolation):_,R&&O.gcsGrid&&(X=(0,se.Qh)({width:e,height:i},O.gcsGrid),B=(0,Je.xQ)(B,n.rasterInfo.dataType,X))}return r.requestRawData||R?{srcExtent:u,pixelBlock:B,transformGrid:O,localNorthDirections:X,extent:t,isPartiallyFilled:H}:{srcExtent:u,extent:t,pixelBlock:B}})()}_fetchRawTiles(t,e,i,r){var n=this;return(0,P.Z)(function*(){const{origin:a,blockBoundary:s}=n.rasterInfo.storageInfo,{blockWidth:l,blockHeight:o}=n.getBlockWidthHeight(t);let{x:c,y:u}=e,{width:d,height:f,wrapCount:m}=i;const h=n._getRasterTileAlignmentInfo(t,0);r.buffer&&(c-=r.buffer.cols,u-=r.buffer.rows,d+=2*r.buffer.cols,f+=2*r.buffer.rows);let g=0,y=0,p=0;m&&(0,x.pC)(h)&&(({worldColumnCountFromOrigin:y,originColumnOffset:p,rightPadding:g}=h),y*h.blockWidth-g>=c+d&&(g=0));const I=Math.floor(c/l),S=Math.floor(u/o),M=Math.floor((c+d+g-1)/l),F=Math.floor((u+f+g-1)/o),Z=s[t];if(!Z)return null;const{minRow:T,minCol:w,maxCol:D,maxRow:R}=Z;if(0===m&&(F<T||M<w||S>R||I>D))return null;const O=new Array;let B=!1;const N=null==n.ioConfig.allowPartialFill?r.allowPartialFill:n.ioConfig.allowPartialFill;for(let _=S;_<=F;_++)for(let te=I;te<=M;te++){let pe=te;if(!r.disableWrapAround&&m&&(0,x.pC)(h)&&y<=te&&(pe=te-y-p),_>=T&&pe>=w&&R>=_&&D>=pe){const Te=n._fetchRawTile(t,_,pe,r);O.push(N?new Promise(he=>{Te.then(Xt=>he(Xt)).catch(()=>{B=!0,he(null)})}):Te)}else O.push(Promise.resolve(null))}if(0===O.length)return null;const J=yield Promise.all(O),W={height:(F-S+1)*o,width:(M-I+1)*l},{spatialReference:L}=n.rasterInfo,G=n.getPyramidPixelSize(t),{x:H,y:X}=G;return{extent:new V.Z({xmin:a.x+I*l*H,xmax:a.x+(M+1)*l*H,ymin:a.y-(F+1)*o*X,ymax:a.y-S*o*X,spatialReference:L}),pixelBlocks:J,mosaicSize:W,isPartiallyFilled:B}})()}_fetchRawTile(t,e,i,r){const n=this.rasterInfo.storageInfo.blockBoundary[t];if(!n)return Promise.resolve(null);const{minRow:a,minCol:s,maxCol:l,maxRow:o}=n;if(e<a||i<s||e>o||i>l)return Promise.resolve(null);const c=(0,re.Rq)(this.url,r.sliceId),u=`${t}/${e}/${i}`;let d=(0,re.Qg)(c,r.registryId,u);if((0,x.Wi)(d)){const f=new AbortController;d=this.fetchRawTile(t,e,i,{...r,signal:f.signal}),(0,re.gX)(c,r.registryId,u,d,f),d.catch(()=>(0,re.Gc)(c,r.registryId,u))}return r.signal&&(0,ye.fu)(r,()=>{(0,re.OE)(c,r.registryId,u)}),d}_computeMagDirValues(t){const{bandCount:e,dataType:i}=this.rasterInfo;if((2!==e||"vector-magdir"!==i)&&"vector-uv"!==i||2!==t?.length||!t[0]?.length)return null;const r=t[0].length;if("vector-magdir"===i){const o=t[1].map(c=>(c+360)%360);return[t[0],o]}const[n,a]=t,s=[],l=[];for(let o=0;o<r;o++){const[c,u]=(0,Je.Tg)([n[o],a[o]]);s.push(c),l.push(u)}return[s,l]}_getRasterTileAlignmentInfo(t,e){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,z.P_)(this.rasterInfo)),(0,x.Wi)(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[t]}}_getSourceDataInfo(t,e,i,r={}){const n={datumTransformation:r.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};r.srcResolution&&(n.srcResolution=r.srcResolution,this._updateSourceDataInfo(t,n));const a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:l,pyramidLevel:o}=n,c=s/e,u=l/i,d=o<a&&c*u>=16,f=o===a&&this._requireTooManySrcTiles(s,l,e,i);if(d||f||0===s||0===l){const m=new A.Z({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference});let h=(0,z.VO)(m,this.rasterInfo.spatialReference,t,n.datumTransformation);if(d&&r.srcResolution&&(!h||r.srcResolution&&h.x+h.y<r.srcResolution.x+r.srcResolution.y)){const y=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(a-o+3>=y){const p=2**y;h={x:r.srcResolution.x*p,y:r.srcResolution.y*p}}}h&&(n.srcResolution=h,this._updateSourceDataInfo(t,n))}return this._requireTooManySrcTiles(n.srcWidth,n.srcHeight,e,i)&&(n.srcWidth=0,n.srcHeight=0),n}_requireTooManySrcTiles(t,e,i,r){const{tileInfo:n}=this.rasterInfo.storageInfo;return Math.ceil(t/n.size[0])*Math.ceil(e/n.size[1])>=256||t/i>8||e/r>8}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:r,datumTransformation:n}=e,{pyramidLevel:a,pyramidResolution:s,excessiveReading:l}=(0,z.kr)(r,this.rasterInfo,this.ioConfig.sampling);if(l)return;let o=e.srcExtent||(0,z.tB)(t,i,n);if(null==o)return;const c=(0,x.Wg)(this.rasterInfo.transform);c&&(o=c.inverseTransform(o)),e.srcExtent=o;const u=Math.ceil((o.xmax-o.xmin)/s.x-.1),d=Math.ceil((o.ymax-o.ymin)/s.y-.1);e.pyramidLevel=a,e.pyramidResolution=s,e.srcWidth=u,e.srcHeight=d}_getRequestOptionsWithSliceId(t){return(0,x.pC)(this.rasterInfo.multidimensionalInfo)&&null==t.sliceId&&(t={...t,sliceId:this.getSliceIndex(t.multidimensionalDefinition)}),t}_processIdentifyResult(t,e){const{srcLocation:i,position:r,pyramidLevel:n,useTransposedTile:a}=e,s=t.pixels[0].length/t.width/t.height;if(t.mask&&!t.mask[r])return{location:i,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if((0,x.Wi)(l)||!a){const y=t.pixels.map(S=>S[r]),p={location:i,value:y,pyramidLevel:n},I=this._computeMagDirValues(y.map(S=>[S]));return I?.length&&(p.magdirValue=I.map(S=>S[0])),p}let o=t.pixels.map(y=>y.slice(r*s,r*s+s)),c=this._computeMagDirValues(o);const{requestSomeSlices:u,identifyOptions:d}=e;let f=(0,K.MO)(l,d.transposedVariableName);if(u){const y=(0,K.Ur)(f,(0,x.Wg)(d.multidimensionalDefinition),(0,x.Wg)(d.timeExtent));o=o.map(p=>y.map(I=>p[I])),c=c?.map(p=>y.map(I=>p[I])),f=y.map(p=>f[p])}const m=t.noDataValues||this.rasterInfo.noDataValue,h={pixels:o,pixelType:t.pixelType};let g;return(0,x.pC)(m)&&((0,It.A)(h,m),g=h.mask),{location:i,value:null,dataSeries:f.map((y,p)=>{const I={value:0===g?.[p]?null:o.map(S=>S[p]),multidimensionalDefinition:y.multidimensionalDefinition.map(S=>new $e.Z({...S,isSlice:!0}))};return c?.length&&(I.magdirValue=[c[0][p],c[1][p]]),I}),pyramidLevel:n}}};(0,v._)([(0,C.Cb)()],$.prototype,"_rasterTileAlighmentInfo",void 0),(0,v._)([(0,C.Cb)({readOnly:!0})],$.prototype,"_isGlobalWrappableSource",null),(0,v._)([(0,C.Cb)(ze.HQ)],$.prototype,"url",null),(0,v._)([(0,C.Cb)({type:String,json:{write:!0}})],$.prototype,"datasetName",void 0),(0,v._)([(0,C.Cb)({type:String,json:{write:!0}})],$.prototype,"datasetFormat",void 0),(0,v._)([(0,C.Cb)()],$.prototype,"hasUniqueSourceStorageInfo",void 0),(0,v._)([(0,C.Cb)()],$.prototype,"rasterInfo",void 0),(0,v._)([(0,C.Cb)()],$.prototype,"ioConfig",void 0),(0,v._)([(0,C.Cb)()],$.prototype,"sourceJSON",void 0),$=(0,v._)([(0,q.j)("esri.layers.support.rasterDatasets.BaseRaster")],$);const ae=$;let oe=class extends ae{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}open(t){var e=this;return(0,P.Z)(function*(){yield e.init();const{rasterFunction:i}=e;e.primaryRasters?.rasters?.length?i.sourceRasters=e.primaryRasters.rasters:e.primaryRasters=i.getPrimaryRasters();const{rasters:r,rasterIds:n}=e.primaryRasters,a=r.map(c=>c.rasterInfo?void 0:c.open(t));yield Promise.all(a);const s=r.map(({rasterInfo:c})=>c),l=i.bind({rasterInfos:s,rasterIds:n});if(!l.success||0===s.length)throw new k.Z("raster-function:open",`cannot bind the function: ${l.error??""}`);yield e.syncJobHandler();const o=s[0];e.hasUniqueSourceStorageInfo=1===s.length||s.slice(1).every(c=>e._hasSameStorageInfo(c,o)),e.set("sourceJSON",r[0].sourceJSON),e.set("rasterInfo",i.rasterInfo)})()}syncJobHandler(){var t=this;return(0,P.Z)(function*(){return t.rasterJobHandler?.updateRasterFunction(t.rasterFunction)})()}fetchPixels(t,e,i,r={}){var n=this;return(0,P.Z)(function*(){const{rasters:a,rasterIds:s}=n.primaryRasters,l=a.map(f=>f.fetchPixels(t,e,i,r)),o=yield Promise.all(l),c=o.map(f=>f.pixelBlock);if(r.skipRasterFunction||c.every(f=>(0,x.Wi)(f)))return o[0];const u=o.find(f=>(0,x.pC)(f.pixelBlock))?.extent??t,d=n.rasterJobHandler?yield n.rasterJobHandler.process({extent:u,primaryPixelBlocks:c,primaryRasterIds:s}):n.rasterFunction.process({extent:u,primaryPixelBlocks:c,primaryRasterIds:s});return{...o[0],pixelBlock:d}})()}_hasSameStorageInfo(t,e){const{storageInfo:i,pixelSize:r,spatialReference:n,extent:a}=t,{storageInfo:s,pixelSize:l,spatialReference:o,extent:c}=e;return r.x===l.x&&r.y===l.y&&n.equals(o)&&a.equals(c)&&i.blockHeight===s.blockHeight&&i.blockWidth===s.blockWidth&&i.maximumPyramidLevel===s.maximumPyramidLevel}};(0,v._)([(0,C.Cb)({type:String,json:{write:!0}})],oe.prototype,"datasetFormat",void 0),(0,v._)([(0,C.Cb)()],oe.prototype,"tileType",void 0),(0,v._)([(0,C.Cb)()],oe.prototype,"rasterFunction",void 0),(0,v._)([(0,C.Cb)()],oe.prototype,"primaryRasters",void 0),oe=(0,v._)([(0,q.j)("esri.layers.support.rasterDatasets.FunctionRaster")],oe);const He=oe;var Fe=b(65428),ne=b(4990),bt=b(47088),St=b(45809),U=b(68230);const Qe=ke.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),Rt=t=>{let e=class extends t{constructor(...r){super(...r),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===r[0]?.raster?.datasetFormat}get fullExtent(){return this.rasterInfo?.extent}set multidimensionalDefinition(r){this._set("multidimensionalDefinition",r),this.updateRenderer()}get tileInfo(){return this.rasterInfo?.storageInfo.tileInfo}set url(r){this._set("url",(0,Ve.Nm)(r,Qe))}set renderer(r){this._set("renderer",r),this.updateRenderer()}convertVectorFieldData(r,n){var a=this;return(0,P.Z)(function*(){if((0,x.Wi)(r)||!a.rasterInfo)return null;const s=a._rasterJobHandler.instance,l=a.rasterInfo.dataType;return s?s.convertVectorFieldData({pixelBlock:r,dataType:l},n):(0,Je.KC)(r,l)})()}createFlowMesh(r,n){var a=this;return(0,P.Z)(function*(){const s=a._rasterJobHandler.instance;return s?s.createFlowMesh(r,n):(0,St.GE)(r.meshType,r.simulationSettings,r.flowData,(0,x.pC)(n.signal)?n.signal:(new AbortController).signal)})()}normalizeRasterFetchOptions(r){const{multidimensionalInfo:n}=this.rasterInfo??{};if((0,x.Wi)(n))return r;let a=r.multidimensionalDefinition||this.multidimensionalDefinition;!(0,x.Wi)(a)&&a.length||(a=(0,K.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const s=r.timeExtent||this.timeExtent;if((0,x.pC)(a)&&(0,x.pC)(s)&&((0,x.pC)(s.start)||(0,x.pC)(s.end))){a=a.map(g=>g.clone());const l=n.variables.find(({name:g})=>g===a[0].variableName)?.dimensions?.find(({name:g})=>"StdTime"===g),o=a.find(({dimensionName:g})=>"StdTime"===g);if(!l||!o)return{...r,multidimensionalDefinition:null};const{start:c,end:u}=s,d=(0,x.Wi)(c)?null:c.getTime(),f=(0,x.Wi)(u)?null:u.getTime(),m=d??f,h=f??d;if((0,x.pC)(l.values)){const g=l.values.filter(y=>Array.isArray(y)?m===h?y[0]<=m&&y[1]>=m:y[0]<=m&&y[1]>m||y[0]<h&&y[1]>=h||y[0]>=m&&y[1]<=h||y[0]<m&&y[1]>h:m===h?y===m:y>=m&&y<=h);if(g.length){const y=g.sort((p,I)=>m===h?(p[0]??p)-(I[0]??I):Math.abs((p[1]??p)-h)-Math.abs((I[1]??I)-h))[0];o.values=[y]}else a=null}else if(l.hasRegularIntervals&&l.extent){const[g,y]=l.extent;m>y||h<g?a=null:o.values=m===h?[m]:[Math.max(g,m),Math.min(y,h)]}}return(0,x.pC)(a)&&(0,K.nb)(a,this.multidimensionalSubset)?{...r,multidimensionalDefinition:null}:{...r,multidimensionalDefinition:a}}updateRasterFunction(){var r=this;return(0,P.Z)(function*(){if("imagery-tile"!==r.type||!r.rasterFunction&&!r._cachedRasterFunctionJson||JSON.stringify(r.rasterFunction)===JSON.stringify(r._cachedRasterFunctionJson))return;if(r._isConstructedFromFunctionRaster&&"Function"===r.raster.datasetFormat){const d=r.raster.rasterFunction.toJSON();return!r.rasterFunction&&d&&r._set("rasterFunction",Ne.Z.fromJSON(d)),void(r._cachedRasterFunctionJson=r.rasterFunction?.toJSON())}let n,a=r.raster,s=!1;"Function"===a.datasetFormat?(n=a.primaryRasters.rasters,a=n[0],s=!0):n=[a];const{rasterFunction:l}=r;if(l){const d={raster:a};n.length>1&&n.forEach(h=>d[h.url]=h);const f=(0,Fe.Ue)(l.rasterFunctionDefinition??l.toJSON(),d),m=new He({rasterFunction:f});m.rasterJobHandler=r._rasterJobHandler.instance,yield m.open(),r._cachedRasterFunctionJson=r.rasterFunction?.toJSON(),r.raster=m}else r.raster=a,r._cachedRasterFunctionJson=null;if(r._cachedRendererJson=null,!s&&!l)return;const{bandIds:o}=r,{bandCount:c}=r.raster.rasterInfo,u=o?.length?o.some(d=>d>=c):c>=3;o&&(u||"raster-stretch"!==r.renderer.type)&&r._set("bandIds",null),r._configDefaultRenderer("auto")})()}updateRenderer(){var r=this;return(0,P.Z)(function*(){const{loaded:n,symbolizer:a}=r;if(!n||!a)return;const{rasterInfo:s}=r.raster,l=(0,K.WY)(s,{multidimensionalDefinition:r.multidimensionalDefinition,multidimensionalSubset:r.multidimensionalSubset})?.name,o=(0,ne.ol)({...r.renderer.toJSON(),variableName:l});if(JSON.stringify(r._cachedRendererJson)===JSON.stringify(o))return;const c=r._rasterJobHandler.instance;c&&(a.rasterInfo=(0,ne.FI)(s,l),a.rendererJSON=o,a.bind(),yield c.updateSymbolizer(a),r._cachedRendererJson=o)})()}applyRenderer(r,n){var a=this;return(0,P.Z)(function*(){const s=r&&r.pixelBlock;if(!((0,x.pC)(s)&&s.pixels&&s.pixels.length>0))return null;let l;yield a.updateRenderer();const o=a._rasterJobHandler.instance,c=a.bandIds??[];return l=o?yield o.symbolize({...r,simpleStretchParams:n,bandIds:c}):a.symbolizer.symbolize({...r,simpleStretchParams:n,bandIds:c}),l})()}getTileUrl(r,n,a){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${r}/${n}/${a}`:""}getCompatibleTileInfo(r,n,a=!1){if(!this.loaded||(0,x.Wi)(n))return null;if(a&&r.equals(this.spatialReference))return this.tileInfo;const s=(0,pt.C5)(r);return ge.Z.create({size:256,spatialReference:r,origin:s?{x:s.origin[0],y:s.origin[1]}:{x:n.xmin,y:n.ymax}})}getCompatibleFullExtent(r){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(r)||(this._compatibleFullExtent=this.raster.computeExtent(r)),this._compatibleFullExtent):null}fetchTile(r,n,a,s={}){var l=this;return(0,P.Z)(function*(){if(i(l),s.requestAsImageElement){const c=l.getTileUrl(r,n,a);return(0,_e.default)(c,{responseType:"image",query:{...l.refreshParameters,...l.raster.ioConfig.customFetchParameters},signal:s.signal}).then(u=>u.data)}const{rasterInfo:o}=l;return(0,x.pC)(o.multidimensionalInfo)&&(s=l.normalizeRasterFetchOptions(s),(0,x.Wi)(s.multidimensionalDefinition))?{extent:l.raster.getTileExtentFromTileInfo(r,n,a,s.tileInfo||o.storageInfo.tileInfo),pixelBlock:null}:(yield l._initJobHandler(),yield l.updateRasterFunction(),"raster-shaded-relief"===l.renderer.type&&(s={...s,buffer:{cols:1,rows:1}}),l.raster.fetchTile(r,n,a,s))})()}fetchPixels(r,n,a,s={}){var l=this;return(0,P.Z)(function*(){return(0,x.pC)(l.rasterInfo.multidimensionalInfo)&&(s=l.normalizeRasterFetchOptions(s),(0,x.Wi)(s.multidimensionalDefinition))?{extent:r,pixelBlock:null}:(yield l._initJobHandler(),yield l.updateRasterFunction(),l.raster.fetchPixels(r,n,a,s))})()}identify(r,n={}){var a=this;return(0,P.Z)(function*(){const{raster:s,rasterInfo:l}=a;if((0,x.pC)(l.multidimensionalInfo)&&(!l.hasMultidimensionalTranspose||!((0,K.WU)(n.multidimensionalDefinition)||n.transposedVariableName||n.timeExtent))&&(n=a.normalizeRasterFetchOptions(n),(0,x.Wi)(n.multidimensionalDefinition)))return{location:r,value:null};const o=a.multidimensionalSubset?.areaOfInterest;if(o&&!o.contains(r))throw new k.Z("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return s.identify(r,n)})()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const r=this.rasterInfo?.multidimensionalInfo;if((0,x.Wi)(r)||"standard-time"!==this.rasterInfo?.dataType)return!1;const n=this.multidimensionalDefinition,a=n?.[0]?.variableName;return r.variables.some(s=>s.name===a&&(!n?.[0].dimensionName||s.dimensions.some(l=>"StdTime"===l.name)))}getStandardTimeValue(r){return new Date(24*(r-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(r){return(0,K.jj)(this.multidimensionalSubset,r??this.rasterInfo?.multidimensionalInfo)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,K.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const r=new yt.Z;return this._rasterJobHandler.connectionPromise=r.initialize().then(()=>{i(this),this._rasterJobHandler.instance=r,this.raster.rasterJobHandler=r,this.renderer&&this.updateRenderer(),"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){i(this);const{raster:r}=this,n=(0,ne.In)(r.rasterInfo,r.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",n)}}_configDefaultRenderer(r="no"){i(this);const{rasterInfo:n}=this.raster;!this.bandIds&&n.bandCount>1&&(this.bandIds=(0,ne.YD)(n));const a=(0,K.WY)(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name;if(!this.renderer||"override"===r){const c=(0,ne.Ob)(n,{bandIds:this.bandIds,variableName:a});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===c.type&&((n.statistics?.[0].max??0)>1e24||(n.statistics?.[0].min??0)<-1e24)&&(c.dynamicRangeAdjustment=!0,c.statistics=null,"none"===c.stretchType&&(c.stretchType="min-max")),this.renderer=c}const s=(0,ne.ol)({...this.renderer.toJSON(),variableName:a}),l=(0,ne.FI)(n,a);this.symbolizer?(this.symbolizer.rendererJSON=s,this.symbolizer.rasterInfo=l):this.symbolizer=new bt.Z({rendererJSON:s,rasterInfo:l});const o=this.symbolizer.bind();if(o.success){if("auto"===r){const{colormap:c}=this.raster.rasterInfo,u=this.renderer;if((0,x.pC)(c))if("raster-colormap"!==u.type)this._configDefaultRenderer("override");else{const d=(0,ne.Ob)(this.raster.rasterInfo);JSON.stringify(d)!==JSON.stringify(u)&&this._configDefaultRenderer("override")}else if("raster-stretch"===u.type){const d=this.bandIds?.length,f=u.statistics?.length;!u.dynamicRangeAdjustment&&f&&d&&f!==d&&this._configDefaultRenderer("override")}}}else Qe.warn("imagery-tile-mixin",o.error||"The given renderer is not supported by the layer."),"auto"===r&&this._configDefaultRenderer("override")}};function i(r){if(!r.raster||!r.rasterInfo)throw new k.Z("imagery-tile","no raster")}return(0,v._)([(0,C.Cb)()],e.prototype,"_cachedRendererJson",void 0),(0,v._)([(0,C.Cb)()],e.prototype,"_cachedRasterFunctionJson",void 0),(0,v._)([(0,C.Cb)()],e.prototype,"_compatibleFullExtent",void 0),(0,v._)([(0,C.Cb)()],e.prototype,"_isConstructedFromFunctionRaster",void 0),(0,v._)([(0,C.Cb)()],e.prototype,"_rasterJobHandler",void 0),(0,v._)([(0,C.Cb)()],e.prototype,"bandIds",void 0),(0,v._)([(0,C.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),(0,v._)([(0,C.Cb)({json:{read:!1}})],e.prototype,"fullExtent",null),(0,v._)([(0,C.Cb)()],e.prototype,"interpolation",void 0),(0,v._)([(0,C.Cb)()],e.prototype,"ioConfig",void 0),(0,v._)([(0,C.Cb)({type:[$e.Z],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),(0,v._)([(0,C.Cb)({type:ht.Z,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),(0,v._)([(0,C.Cb)()],e.prototype,"raster",void 0),(0,v._)([(0,C.Cb)({type:Ne.Z})],e.prototype,"rasterFunction",void 0),(0,v._)([(0,C.Cb)()],e.prototype,"rasterInfo",void 0),(0,v._)([(0,C.Cb)()],e.prototype,"sourceJSON",void 0),(0,v._)([(0,C.Cb)({readOnly:!0,type:U.Z,json:{read:!1}})],e.prototype,"spatialReference",void 0),(0,v._)([(0,C.Cb)({json:{read:!1}})],e.prototype,"tileInfo",null),(0,v._)([(0,C.Cb)(ze.HQ)],e.prototype,"url",null),(0,v._)([(0,C.Cb)({types:we.dr})],e.prototype,"renderer",null),(0,v._)([(0,C.Cb)()],e.prototype,"symbolizer",void 0),e=(0,v._)([(0,q.j)("esri.layers.ImageryTileMixin")],e),e};var Ct=b(33829),Tt=b(16617),wt=b(17085),Ft=b(72450),Pt=b(37302),Ie=b(23973),Mt=b(92016),ve=b(14385),qe=b(25791);function Ot(t){const e=t.fields,i=t.records,r=e.some(c=>"oid"===c.name.toLowerCase())?"OBJECTID":"OID",n=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),a=n.map(c=>c.name),s=[];let l=0,o=0;return i.forEach(c=>{const u={};for(u[r]=l++,o=1;o<a.length;o++)u[a[o]]=c[o-1];s.push({attributes:u})}),{displayFieldName:"",fields:n,features:s}}class et{static get supportedVersions(){return[5]}static parse(e){const i=new DataView(e),r=3&i.getUint8(0);if(3!==r)return{header:{version:r},recordSet:null};const n=i.getUint32(4,!0),a=i.getUint16(8,!0),s=i.getUint16(10,!0),l={version:r,recordCount:n,headerByteCount:a,recordByteCount:s};let o=32;const c=[],u=[];let d;if(3===r){for(;13!==i.getUint8(o);)d=String.fromCharCode(i.getUint8(o+11)).trim(),c.push({name:(0,qe.f)(new Uint8Array(e,o,11)),type:d,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(d)],length:i.getUint8(o+16)}),o+=32;if(o+=1,c.length>0)for(;u.length<n&&e.byteLength-o>s;){const f=[];32===i.getUint8(o)?(o+=1,c.forEach(m=>{if("C"===m.type)f.push((0,qe.f)(new Uint8Array(e,o,m.length)).trim());else if("N"===m.type)f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim(),10));else if("F"===m.type)f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim()));else if("D"===m.type){const h=String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim();f.push(new Date(parseInt(h.substring(0,4),10),parseInt(h.substring(4,6),10)-1,parseInt(h.substring(6,8),10)))}o+=m.length}),u.push(f)):o+=s}}return{header:l,fields:c,records:u,recordSet:Ot({fields:c,records:u})}}}var tt=b(58971),rt=b(87096);const le=new Map;le.set("int16","esriFieldTypeSmallInteger"),le.set("int32","esriFieldTypeInteger"),le.set("int64","esriFieldTypeInteger"),le.set("float32","esriFieldTypeSingle"),le.set("float64","esriFieldTypeDouble"),le.set("text","esriFieldTypeString");let be=class extends ae{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}open(t){var e=this;return(0,P.Z)(function*(){yield e.init();const{data:i}=yield e.request(e.url+"/conf.json",{signal:t?.signal});if(!e._validateHeader(i))throw new k.Z("cloudraster:open","Invalid or unsupported conf.json.");e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1);const{storageInfo:r,rasterInfo:n}=e._parseHeader(i);if("thematic"===n.dataType){const a=yield e._fetchAuxiliaryInformation();n.attributeTable=a}e._set("storageInfo",r),e._set("rasterInfo",n),e.ioConfig.retryCount=e.ioConfig.retryCount||0})()}fetchRawTile(t,e,i,r={}){var n=this;return(0,P.Z)(function*(){const{transposeInfo:a}=n.rasterInfo.storageInfo,{transposedVariableName:s}=r,l=!(!a||!s),o=l?0:n.rasterInfo.storageInfo.maximumPyramidLevel-t;if(o<0)return null;const c=n._buildCacheFilePath(o,e,i,r.multidimensionalDefinition,s),u=n._getIndexRecordFromBundle(e,i,l),d=yield n.request(c,{range:{from:0,to:n.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!d)return null;const f=new Uint8Array(d.data),m=n._getTileEndAndContentType(f,u);if(0===m.recordSize)return null;const h=yield n.request(c,{range:{from:m.position,to:m.position+m.recordSize},responseType:"array-buffer",signal:r.signal});if(!h)return null;const[g,y]=n._getTileSize(l);return n.decodePixelBlock(h.data,{width:g,height:y,planes:null,pixelType:null,returnInterleaved:l})})()}_validateHeader(t){return t&&"RasterInfo"===t.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(i=>!t[i])}_parseHeader(t){const e=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][t.pixelType],{bandCount:i,histograms:r,colormap:n,blockWidth:a,blockHeight:s,firstPyramidLevel:l,maximumPyramidLevel:o}=t,c=t.statistics&&t.statistics.map(H=>({min:H.min,max:H.max,avg:H.mean,stddev:H.standardDeviation,median:H.median,mode:H.mode})),u=t.extent.spatialReference,d=t.geodataXform?.spatialReference,f=new U.Z(u?.wkid||u?.wkt?u:d);let m=new V.Z({xmin:t.extent.xmin,ymin:t.extent.ymin,xmax:t.extent.xmax,ymax:t.extent.ymax,spatialReference:f});const h=new A.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:f}),g=Math.round((m.xmax-m.xmin)/h.x),y=Math.round((m.ymax-m.ymin)/h.y),p=this._parseTransform(t.geodataXform),I=p?m:null;p&&(m=p.forwardTransform(m),h.x=(m.xmax-m.xmin)/g,h.y=(m.ymax-m.ymin)/y);const S=t.properties??{},M=t.format.toLowerCase().replace("cache/",""),F=new A.Z(t.origin.x,t.origin.y,f);let Z,T,w,D;if(n&&n.colors)for(Z=[],T=0;T<n.colors.length;T++)w=n.colors[T],D=n.values?n.values[T]:T,Z.push([D,255&w,w<<16>>>24,w<<8>>>24,w>>>24]);const R=t.LODInfos,O=[];for(T=0;T<R.levels.length;T++)O.push(new Ye.Z({level:R.levels[T],resolution:R.resolutions[T],scale:96/.0254*R.resolutions[T]}));const B=new ge.Z({dpi:96,lods:O,format:M,origin:F,size:[a,s],spatialReference:f}),N={recordSize:8,packetSize:t.packetSize,headerSize:t.packetSize*t.packetSize*8+64},J=[{maxCol:Math.ceil(g/a)-1,maxRow:Math.ceil(y/s)-1,minCol:0,minRow:0}];let W=2;if(o>0)for(T=0;T<o;T++)J.push({maxCol:Math.ceil(g/W/a)-1,maxRow:Math.ceil(y/W/s)-1,minCol:0,minRow:0}),W*=2;const L=t.mdInfo;let G=null;if(L&&S._yxs){const H=S._yxs;G={packetSize:H.PacketSize,tileSize:[H.TileXSize,H.TileYSize]}}return{storageInfo:N,rasterInfo:new ve.Z({width:g,height:y,pixelType:e,bandCount:i,extent:m,nativeExtent:I,transform:p,spatialReference:f,pixelSize:h,keyProperties:S,statistics:c,histograms:r,multidimensionalInfo:L,colormap:Z,storageInfo:new xe.Z({blockWidth:a,blockHeight:s,pyramidBlockWidth:a,pyramidBlockHeight:s,origin:F,tileInfo:B,transposeInfo:G,firstPyramidLevel:l,maximumPyramidLevel:o,blockBoundary:J})})}}_parseTransform(t){if(!(0,tt.j)(t))throw new k.Z("cloudraster:open","the data contains unsupported geodata transform types");const e=(0,tt.c)(t);if("identity"===e.type)return null;if("polynomial"!==e.type||!e.forwardCoefficients?.length||!e.inverseCoefficients?.length)throw new k.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return e}_fetchAuxiliaryInformation(t){var e=this;return(0,P.Z)(function*(){const i=e.request(e.url+"/conf.vat.json",{signal:t}).then(s=>s.data).catch(()=>null),r=e.request(e.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:t}).then(s=>s.data).catch(()=>null),n=yield Promise.all([i,r]);let a;if(n[0]){let s=n[0].fields;const l=n[0].values;if(s&&l){s=s.map(c=>({type:"OID"===c.name?"esriFieldTypeOID":le.get(c.type),name:c.name,alias:c.alias||c.name}));const o=l.map(c=>({attributes:c}));s&&l&&(a={fields:s,features:o})}}return!a&&n[1]&&(a=et.parse(n[1]).recordSet),rt.Z.fromJSON(a)})()}_buildCacheFilePath(t,e,i,r,n){const a=this._getPackageSize(!!n),s=Math.floor(e/a)*a,l=Math.floor(i/a)*a,o="R"+this._toHexString4(s)+"C"+this._toHexString4(l);let c="L";c+=t>=10?t.toString():"0"+t.toString();const{multidimensionalInfo:u}=this.rasterInfo,d=r?.[0];if((0,x.Wi)(u)||!d)return`${this.url}/_alllayers/${c}/${o}.bundle`;let f="_yxs";if(!n){f=u.variables.find(g=>g.name===d.variableName).dimensions[0].values.indexOf(d.values[0]).toString(16);const h=4-f.length;for(let g=0;g<h;g++)f="0"+f;f="S"+f}const m=this._getVariableFolderName(n||d.variableName);return`${this.url}/_alllayers/${m}/${f}/${c}/${o}.bundle`}_getPackageSize(t=!1){const{transposeInfo:e}=this.rasterInfo.storageInfo;return t&&(0,x.pC)(e)?e.packetSize??0:this.storageInfo.packetSize}_getTileSize(t=!1){const{storageInfo:e}=this.rasterInfo,{transposeInfo:i}=e;return t&&(0,x.pC)(i)?i.tileSize:e.tileInfo.size}_getVariableFolderName(t){return""===(t=t.trim())?"_v":t.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(t,e,i=!1){const r=this._getPackageSize(i),n=r*(t%r)+e%r;if(n<0)throw new Error("Invalid level / row / col");return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(t,e){const i=t.subarray(e,e+8);let r,n=0;for(r=0;r<5;r++)n|=(255&i[r])<<8*r;const a=0xffffffffff&n;for(n=0,r=5;r<8;r++)n|=(255&i[r])<<8*(r-5);return{position:a,recordSize:0xffffffffff&n}}_toHexString4(t){let e=t.toString(16);if(4!==e.length){let i=4-e.length;for(;i-- >0;)e="0"+e}return e}};(0,v._)([(0,C.Cb)({readOnly:!0})],be.prototype,"storageInfo",void 0),(0,v._)([(0,C.Cb)({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),be=(0,v._)([(0,q.j)("esri.layers.support.rasterDatasets.CloudRaster")],be);const Dt=be;var Zt=b(67087),Pe=b(34589);let Se=class extends ae{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}open(t){var e=this;return(0,P.Z)(function*(){yield e.init();const i=e.data,{pixelBlock:r,statistics:n,histograms:a,name:s,keyProperties:l,nativeExtent:o,transform:c}=e.data,{width:u,height:d,pixelType:f}=r,m=i.extent??new V.Z({xmin:-.5,ymin:.5,xmax:u-.5,ymax:d-.5,spatialReference:new U.Z({wkid:3857})}),y=new ve.Z({width:u,height:d,pixelType:f,extent:m,nativeExtent:o,transform:c,pixelSize:{x:m.width/u,y:m.height/d},spatialReference:m.spatialReference,bandCount:r.pixels.length,keyProperties:l||{},statistics:n,isPseudoSpatialReference:i.isPseudoSpatialReference??!i.extent,histograms:a});e.createRemoteDatasetStorageInfo(y,512,512),e._set("rasterInfo",y),e.updateTileInfo(),yield e._buildInMemoryRaster(r,{width:512,height:512},t),e.datasetName=s,e.url="/InMemory/"+s})()}fetchRawTile(t,e,i,r={}){const n=this._pixelBlockTiles.get(`${t}/${e}/${i}`);return Promise.resolve(n)}_buildInMemoryRaster(t,e,i){var r=this;return(0,P.Z)(function*(){const n=r.rasterInfo.storageInfo.maximumPyramidLevel,a=r.rasterJobHandler?r.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:n},i):Promise.resolve((0,se.Vl)(t,e,n)),s=(0,x.pC)(r.rasterInfo.statistics),l=(0,x.pC)(r.rasterInfo.histograms),o=s?Promise.resolve({statistics:null,histograms:null}):r.rasterJobHandler?r.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},i):Promise.resolve((0,Pe.Hv)(t)),c=yield(0,ye.as)([a,o]);if(!c[0].value&&c[1].value)throw new k.Z("inmemory-raster:open","failed to build in memory raster");r._pixelBlockTiles=c[0].value,s||(r.rasterInfo.statistics=c[1].value?.statistics),l||(r.rasterInfo.histograms=c[1].value?.histograms)})()}};(0,v._)([(0,C.Cb)({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),(0,v._)([(0,C.Cb)()],Se.prototype,"data",void 0),Se=(0,v._)([(0,q.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],Se);const Bt=Se;function de(t,e){if(!t||!e)return[];let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const r=[];if(e){const a=de(t,i);for(let s=0;s<a.length;s++)de(a[s],e).forEach(l=>r.push(l));return r}const n=t.getElementsByTagNameNS("*",i);if(!n||0===n.length)return[];for(let a=0;a<n.length;a++)r.push(n[a]||n.item[a]);return r}function Y(t,e){if(!t||!e)return null;let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const r=de(t,i);return r.length>0?e?Y(r[0],e):r[0]:null}function Q(t,e=null){const i=e?Y(t,e):t;let r;return i?(r=i.textContent||i.nodeValue,r?r.trim():null):null}function Me(t,e){return function kt(t,e){const i=de(t,e),r=[];let n;for(let a=0;a<i.length;a++)n=i[a].textContent||i[a].nodeValue,n&&(n=n.trim(),""!==n&&r.push(n));return r}(t,e).map(i=>Number(i))}function ce(t,e){const i=Q(t,e);return Number(i)}function We(t,e){const i=t?.nodeName?.toLowerCase(),r=e.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===r}var Le=b(95533);function it(t,e){if(!t||!e)return null;const i=[];for(let r=0;r<t.length;r++)i.push(t[r]),i.push(e[r]);return i}function Oe(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&0!==e)return new U.Z({wkid:e});if((t=String(t)).startsWith("COMPD_CS")){if(!t.includes("VERTCS")||!t.includes("GEOGCS")&&!t.startsWith("PROJCS"))return null;const i=t.indexOf("VERTCS"),r=t.indexOf("PROJCS"),n=r>-1?r:t.indexOf("GEOGCS");if(-1===n)return null;const a=t.slice(n,t.lastIndexOf("]",i)+1).trim(),s=t.slice(i,t.lastIndexOf("]")).trim();e=Ae(a);const l=new U.Z(e?{wkid:e}:{wkt:a}),o=Ae(s);return o&&(l.vcsWkid=o),l}return t.startsWith("GEOGCS")||t.startsWith("PROJCS")?(e=Ae(t),new U.Z(0!==e?{wkid:e}:{wkt:t})):null}function Ae(t){const e=t.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(n=>n.trim()).filter(n=>""!==n),i=e[e.length-1].split(","),r=i[0]?.toLowerCase();if(("epsg"===r||"esri"===r)&&t.endsWith('"]]')){const n=Number(i[1]);if(!isNaN(n)&&0!==n)return n}return 0}function Ue(t){if("pamdataset"!==t?.documentElement.tagName?.toLowerCase())return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(r=>{if(1===r.nodeType)if(We(r,"SRS")){if(!e.spatialReference){const n=Q(r);e.spatialReference=Oe(n)}}else if(We(r,"Metadata"))if("xml:ESRI"===r.getAttribute("domain")){const{spatialReference:n,transform:a}=function Et(t){const e=Y(t,"GeodataXform"),i=Oe(ce(e,"SpatialReference/WKID")||Q(e,"SpatialReference/WKT"));if("typens:PolynomialXform"!==e.getAttribute("xsi:type"))return{spatialReference:i,transform:null};const r=ce(e,"PolynomialOrder")??1,n=Me(e,"CoeffX/Double"),a=Me(e,"CoeffY/Double"),s=Me(e,"InverseCoeffX/Double"),l=Me(e,"InverseCoeffY/Double"),o=it(n,a),c=it(s,l);return{spatialReference:i,transform:o&&c&&o.length&&c.length?new Le.Z({spatialReference:i,polynomialOrder:r,forwardCoefficients:o,inverseCoefficients:c}):null}}(r);e.transform=a,e.spatialReference||(e.spatialReference=n)}else de(r,"MDI").forEach(n=>e.metadata[n.getAttribute("key")]=Q(n));else if(We(r,"PAMRasterBand")){const n=function zt(t){const e=ce(t,"NoDataValue"),i=Y(t,"Histograms/HistItem"),r=ce(i,"HistMin"),n=ce(i,"HistMax"),a=ce(i,"BucketCount"),s=Q(i,"HistCounts")?.split("|").map(f=>Number(f));let l,o,c,u;de(t,"Metadata/MDI").forEach(f=>{const m=Number(f.textContent??f.nodeValue);switch(f.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=m;break;case"STATISTICS_MAXIMUM":o=m;break;case"STATISTICS_MEAN":c=m;break;case"STATISTICS_STDDEV":u=m}});const d=ce(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:s?.length&&null!=r&&null!=n?{min:r,max:n,size:a||s.length,counts:s}:null,sourceBandIndex:d,statistics:null!=l&&null!=o?{min:l,max:o,avg:c,stddev:u}:null}}(r);null!=n.sourceBandIndex&&null==e.rasterBands[n.sourceBandIndex]?e.rasterBands[n.sourceBandIndex]=n:e.rasterBands.push(n)}});const i=e.rasterBands;return i.length&&(e.statistics=i[0].statistics?i.map(a=>a.statistics).filter(x.pC):null,e.histograms=i[0].histogram?i.map(a=>a.histogram).filter(x.pC):null),e}let De=class extends ae{open(t){var e=this;return(0,P.Z)(function*(){yield e.init();const i=yield e._fetchData(t);let{spatialReference:r,statistics:n,histograms:a,transform:s}=yield e._fetchAuxiliaryData(t);const l=!r;l&&(r=new U.Z({wkid:3857})),a?.length&&null==n&&(n=(0,Pe.Oh)(a));const{width:o,height:c}=i;let u=new V.Z({xmin:-.5,ymin:.5-c,xmax:o-.5,ymax:.5,spatialReference:r});const d=s?s.forwardTransform(u):u;let f=!0;if(s){const h=s.forwardCoefficients;f=h&&0===h[1]&&0===h[2],f&&(s=null,u=d)}const m=new Bt({data:{extent:d,nativeExtent:u,transform:s,pixelBlock:i,statistics:n,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:l}});yield m.open(),m.data=null,e._set("rasterInfo",m.rasterInfo),e._inMemoryRaster=m})()}fetchRawTile(t,e,i,r={}){return this._inMemoryRaster.fetchRawTile(t,e,i,r)}_fetchData(t){var e=this;return(0,P.Z)(function*(){const{data:i}=yield e.request(e.url,{responseType:"array-buffer",signal:t?.signal}),r=(0,Xe.y)(i).toUpperCase();if("JPG"!==r&&"PNG"!==r&&"GIF"!==r&&"BMP"!==r)throw new k.Z("image-aux-raster:open","the data is not a supported format");e._set("datasetFormat",r);const n=r.toLowerCase(),a="gif"===n||"bmp"===n||!(0,Zt.Z)("ios"),s=yield e.decodePixelBlock(i,{format:n,useCanvas:a,hasNoZlibMask:!0});if(null==s)throw new k.Z("image-aux-raster:open","the data cannot be decoded");return s})()}_fetchAuxiliaryData(t){var e=this;return(0,P.Z)(function*(){const i=(0,x.Wg)(t?.signal),r=e.ioConfig.skipExtensions??[],n=r.includes("aux.xml")?null:e.request(e.url+".aux.xml",{responseType:"xml",signal:i}),a=e.datasetFormat,s="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,l=s&&r.includes(s)?null:e.request(e.url.slice(0,e.url.lastIndexOf("."))+"."+s,{responseType:"text",signal:i}),o=yield(0,ye.as)([n,l]);if(i?.aborted)throw(0,ye.zE)();const c=Ue(o[0].value?.data);if(!c.transform){const u=o[1].value?o[1].value.data.split("\n").slice(0,6).map(d=>Number(d)):null;c.transform=6===u?.length?new Le.Z({forwardCoefficients:[u[4],u[5],u[0],-u[1],u[2],-u[3]]}):null}return c})()}};(0,v._)([(0,C.Cb)({type:String,json:{write:!0}})],De.prototype,"datasetFormat",void 0),De=(0,v._)([(0,q.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],De);const Ze=De;var Nt=b(55050),Jt=b(32651),Ht=b(88411),Wt=b(80633),Lt=b(11989);let Re=class extends ae{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}open(t){var e=this;return(0,P.Z)(function*(){yield e.init();const i=t&&t.signal,r=e.sourceJSON?{data:e.sourceJSON}:yield e.request(e.url,{query:{f:"json"},signal:i});r.ssl&&(e.url=e.url.replace(/^http:/i,"https:"));const n=r.data;if(e.sourceJSON=n,!n)throw new k.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!n.tileInfo)throw new k.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");e._fixScaleInServiceInfo(),e.tileType=n.cacheType,null==e.tileType&&(e.tileType=["jpg","jpeg","png","png8","png24","png32","mixed"].includes(n.tileInfo.format.toLowerCase())?"Map":"lerc"===n.tileInfo.format.toLowerCase()?"Elevation":"Raster"),e.datasetName=n.name?.slice(n.name.indexOf("/")+1)??"";const s=yield e._fetchRasterInfo({signal:i});if((0,x.Wi)(s))throw new k.Z("image-server-raster:open","cannot initialize image service");const l="Map"===e.tileType?(0,Jt.d)(n.tileInfo,n):ge.Z.fromJSON(n.tileInfo);(0,x.O3)(l);const[o,c]=e._computeMinMaxLOD(s,l),{extent:u,pixelSize:d}=s,f=.5/s.width*d.x,m=Math.max(d.x,d.y),{lods:h}=l;("Map"!==e.tileType&&0!==n.maxScale||Math.abs(d.x-d.y)>f||!h.some(w=>Math.abs(w.resolution-m)<f))&&(d.x=d.y=o.resolution,s.width=Math.ceil((u.xmax-u.xmin)/d.x-.1),s.height=Math.ceil((u.ymax-u.ymin)/d.y-.1));const g=o.level-c.level,[y,p]=l.size,I=[],S=[];h.forEach((w,D)=>{w.level>=c.level&&w.level<=o.level&&I.push({x:w.resolution,y:w.resolution}),D<h.length-1&&S.push(Math.round(10*w.resolution/h[D+1].resolution)/10)}),I.sort((w,D)=>w.x-D.x);const M=e.computeBlockBoundary(u,y,p,l.origin,I,g),F=I.length>1?I.slice(1):null;let Z;n.transposeInfo&&(Z={tileSize:[n.transposeInfo.rows,n.transposeInfo.cols],packetSize:s.keyProperties?._yxs.PacketSize??0});const T=S.length<=1||S.length>=3&&S.slice(0,S.length-1).every(w=>w===S[0])?S[0]??2:Math.round(10/(c.resolution/o.resolution)**(-1/g))/10;if(s.storageInfo=new xe.Z({blockWidth:l.size[0],blockHeight:l.size[1],pyramidBlockWidth:l.size[0],pyramidBlockHeight:l.size[1],pyramidResolutions:F,pyramidScalingFactor:T,compression:l.format,origin:l.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:l,transposeInfo:Z,blockBoundary:M}),e._fixGCSShift(s),e._set("rasterInfo",s),n.capabilities.toLowerCase().includes("tilemap")){const w={tileInfo:s.storageInfo.tileInfo,parsedUrl:(0,Nt.mN)(e.url),url:e.url,tileServers:[],type:"tile"};e._tilemapCache=new Ht.y({layer:w})}})()}fetchRawTile(t,e,i,r={}){var n=this;return(0,P.Z)(function*(){const{storageInfo:a,extent:s}=n.rasterInfo,{transposeInfo:l}=a,o=(0,x.pC)(l)&&!!r.transposedVariableName;if(n._slices&&!o&&null==r.sliceId)return null;const u=`${n.url}/tile/${o?0:a.maximumPyramidLevel-t+n._levelOffset}/${e}/${i}`,d=n._slices?o?{variable:r.transposedVariableName}:{sliceId:r.sliceId||0}:null,{data:f}=yield n.request(u,{query:d,responseType:"array-buffer",signal:r.signal});if(!f)return null;const m=o?l.tileSize:a.tileInfo.size,h=yield n.decodePixelBlock(f,{width:m[0],height:m[1],planes:null,pixelType:null,isPoint:"Elevation"===n.tileType,returnInterleaved:o,noDataValue:(0,x.Wg)(n.rasterInfo.noDataValue)});if(null==h)return null;const g=a.blockBoundary[t];if("jpg"!==a.compression||i>g.minCol&&i<g.maxCol&&e>g.minRow&&e<g.maxRow)return h;const{origin:y,blockWidth:p,blockHeight:I}=a,{x:S,y:M}=n.getPyramidPixelSize(t),F=Math.round((s.xmin-y.x)/S)%p,Z=Math.round((s.xmax-y.x)/S)%p||p,T=Math.round((y.y-s.ymax)/M)%I,w=Math.round((y.y-s.ymin)/M)%I||I,D=i===g.minCol?F:0,R=e===g.minRow?T:0;return(0,se.pW)(h,{x:D,y:R},{width:(i===g.maxCol?Z:p)-D,height:(e===g.maxRow?w:I)-R}),h})()}getSliceIndex(t){if(!this._slices||(0,x.Wi)(t)||0===t.length)return null;const e=t;for(let i=0;i<this._slices.length;i++){const r=this._slices[i].multidimensionalDefinition;if(r.length===e.length&&!r.some(n=>{const a=e.find(s=>n.variableName===s.variableName&&s.dimensionName===n.dimensionName);return!a||(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0])}))return i}return null}fetchVariableStatisticsHistograms(t,e){var i=this;return(0,P.Z)(function*(){const r=i.request(i.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(s=>s.data?.statistics),n=i.request(i.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(s=>s.data?.histograms),a=yield Promise.all([r,n]);return a[0]&&a[0].forEach(s=>{s.avg=s.mean,s.stddev=s.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}})()}computeBestPyramidLevelForLocation(t,e={}){var i=this;return(0,P.Z)(function*(){if(!i._tilemapCache)return 0;let r=i.identifyPixelLocation(t,0,(0,x.Wg)(e.datumTransformation));if(null===r)return null;let n=0;const{maximumPyramidLevel:a}=i.rasterInfo.storageInfo;let s=a-n+i._levelOffset;const l=r.srcLocation;for(;s>=0;){try{if("available"===(yield i._tilemapCache.fetchAvailability(s,r.row,r.col,e)))break}catch{}if(s--,n++,r=i.identifyPixelLocation(l,n,(0,x.Wg)(e.datumTransformation)),null===r)return null}return-1===s||null==r?null:n})()}_fetchRasterInfo(t){var e=this;return(0,P.Z)(function*(){const i=e.sourceJSON;if("Map"===e.tileType){const l=i.fullExtent||i.extent,o=Math.ceil((l.xmax-l.xmin)/i.pixelSizeX-.1),c=Math.ceil((l.ymax-l.ymin)/i.pixelSizeY-.1),u=U.Z.fromJSON(i.spatialReference||l.spatialReference),d=new A.Z({x:i.pixelSizeX,y:i.pixelSizeY,spatialReference:u});return new ve.Z({width:o,height:c,bandCount:3,extent:V.Z.fromJSON(l),spatialReference:u,pixelSize:d,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:r}=t,n=(0,Lt.g)(e.url,e.sourceJSON,{signal:r,query:e.ioConfig.customFetchParameters}),a=i.hasMultidimensions?e.request(`${e.url}/slices`,{query:{f:"json"},signal:r}).then(l=>l.data&&l.data.slices).catch(()=>null):null,s=yield Promise.all([n,a]);return e._slices=s[1],s[0]})()}_fixScaleInServiceInfo(){const{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_fixGCSShift(t){const{extent:e,spatialReference:i}=t;e.xmin>-1&&e.xmax>181&&i?.wkid&&i.isGeographic&&(t.nativeExtent=t.extent,t.transform=new Wt.Z,t.extent=t.transform.forwardTransform(e))}_computeMinMaxLOD(t,e){const{pixelSize:i}=t,r=.5/t.width*i.x,{lods:n}=e,a=e.lodAt(Math.max.apply(null,n.map(f=>f.level))),s=e.lodAt(Math.min.apply(null,n.map(f=>f.level))),{tileType:l}=this;if("Map"===l)return this._levelOffset=n[0].level,[a,s];if("Raster"===l)return[n.find(f=>f.resolution===i.x)??a,s];const{minScale:o,maxScale:c}=this.sourceJSON;let u=a;c>0&&(u=n.find(f=>Math.abs(f.scale-c)<r),u||(u=n.filter(f=>f.scale>c).sort((f,m)=>f.scale>m.scale?1:-1)[0]??a));let d=s;return o>0&&(d=n.find(f=>Math.abs(f.scale-o)<r)??s,this._levelOffset=d.level-s.level),[u,d]}};(0,v._)([(0,C.Cb)({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),(0,v._)([(0,C.Cb)()],Re.prototype,"tileType",void 0),Re=(0,v._)([(0,q.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],Re);const At=Re;var Ut=b(76082),jt=b(48957);const ee=new Map;ee.set("Int8","s8"),ee.set("UInt8","u8"),ee.set("Int16","s16"),ee.set("UInt16","u16"),ee.set("Int32","s32"),ee.set("UInt32","u32"),ee.set("Float32","f32"),ee.set("Float64","f32"),ee.set("Double64","f32");const ie=new Map;ie.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ie.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ie.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ie.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let me=class extends ae{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}open(t){var e=this;return(0,P.Z)(function*(){yield e.init(),e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1);const i=t?(0,x.Wg)(t.signal):null,r=yield e.request(e.url,{responseType:"xml",signal:i}),{rasterInfo:n,files:a}=e._parseHeader(r.data);if(-1===e.ioConfig.skipExtensions?.indexOf("aux.xml")){const y=yield e._fetchAuxiliaryData(t);null!=y&&(n.statistics=y.statistics??n.statistics,n.histograms=y.histograms,y.histograms&&(0,x.Wi)(n.statistics)&&(n.statistics=(0,Pe.Oh)(y.histograms)))}e._set("rasterInfo",n),e._files=a;const s=yield e.request(a.index,{responseType:"array-buffer",signal:i});e._storageIndex=e._parseIndex(s.data);const{blockWidth:l,blockHeight:o}=e.rasterInfo.storageInfo,c=e.rasterInfo.storageInfo.pyramidScalingFactor,{width:u,height:d}=e.rasterInfo,f=[],m=e._getBandSegmentCount();let h=0,g=-1;for(;h<e._storageIndex.length;){g++;const y=Math.ceil(u/l/c**g)-1,p=Math.ceil(d/o/c**g)-1;h+=(y+1)*(p+1)*m*4,f.push({maxRow:p,maxCol:y,minCol:0,minRow:0})}e.rasterInfo.storageInfo.blockBoundary=f,g>0&&(e.rasterInfo.storageInfo.firstPyramidLevel=1,e.rasterInfo.storageInfo.maximumPyramidLevel=g),e.updateTileInfo()})()}fetchRawTile(t,e,i,r={}){var n=this;return(0,P.Z)(function*(){const{blockWidth:a,blockHeight:s,blockBoundary:l}=n.rasterInfo.storageInfo,o=l[t];if(!o||o.maxRow<e||o.maxCol<i||o.minRow>e||o.minCol>i)return null;const{bandCount:c,pixelType:u}=n.rasterInfo,{ranges:d,actualTileWidth:f,actualTileHeight:m}=n._getTileLocation(t,e,i);if(!d||0===d.length)return null;if(0===d[0].from&&0===d[0].to){const R=new Uint8Array(a*s);return new Ut.Z({width:a,height:s,pixels:null,mask:R,validPixelCount:0})}const{bandIds:h}=n.ioConfig,g=n._getBandSegmentCount(),y=[];let p=0;for(p=0;p<g;p++)(!h||h.indexOf[p]>-1)&&y.push(n.request(n._files.data,{range:{from:d[p].from,to:d[p].to},responseType:"array-buffer",signal:r.signal}));const I=yield Promise.all(y),S=I.map(R=>R.data.byteLength).reduce((R,O)=>R+O),M=new Uint8Array(S);let F=0;for(p=0;p<g;p++)M.set(new Uint8Array(I[p].data),F),F+=I[p].data.byteLength;const Z=ie.get(n.rasterInfo.storageInfo.compression).decoderFormat,T=yield n.decodePixelBlock(M.buffer,{width:a,height:s,format:Z,planes:h?.length||c,pixelType:u});if(null==T)return null;if((0,x.pC)(n.rasterInfo.noDataValue)&&"lerc"!==Z&&!T.mask){const R=n.rasterInfo.noDataValue[0];if(null!=R){const O=T.width*T.height,B=new Uint8Array(O);if(Math.abs(R)>1e24)for(p=0;p<O;p++)Math.abs((T.pixels[0][p]-R)/R)>1e-6&&(B[p]=1);else for(p=0;p<O;p++)T.pixels[0][p]!==R&&(B[p]=1);T.mask=B}}let w=0,D=0;if(f!==a||m!==s){let R=T.mask;if(R)for(p=0;p<s;p++)if(D=p*a,p<m)for(w=f;w<a;w++)R[D+w]=0;else for(w=0;w<a;w++)R[D+w]=0;else for(R=new Uint8Array(a*s),T.mask=R,p=0;p<m;p++)for(D=p*a,w=0;w<f;w++)R[D+w]=1}return T})()}_parseIndex(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,i,r,n,a,s;if(jt.f){for(i=new Uint8Array(t),n=new ArrayBuffer(t.byteLength),r=new Uint8Array(n),a=0;a<t.byteLength/4;a++)for(s=0;s<4;s++)r[4*a+s]=i[4*a+3-s];e=new Uint32Array(n)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return ie.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,i){const{blockWidth:r,blockHeight:n,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:s,height:l}=this.rasterInfo,o=this._getBandSegmentCount();let c,u,d,f=0,m=0;for(d=0;d<t;d++)m=a**d,c=Math.ceil(s/r/m),u=Math.ceil(l/n/m),f+=c*u;m=a**t,c=Math.ceil(s/r/m),u=Math.ceil(l/n/m),f+=e*c+i,f*=4*o;const h=this._storageIndex.subarray(f,f+4*o);let g=0,y=0;const p=[];for(let I=0;I<o;I++)g=h[4*I+0]*2**32+h[4*I+1],y=g+h[4*I+2]*2**32+h[4*I+3],p.push({from:g,to:y});return{ranges:p,actualTileWidth:i<c-1?r:Math.ceil(s/m)-r*(c-1),actualTileHeight:e<u-1?n:Math.ceil(l/m)-n*(u-1)}}_parseHeader(t){const e=Y(t,"MRF_META/Raster");if(!e)throw new k.Z("mrf:open","not a valid MRF format");const i=Y(e,"Size"),r=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),a=parseInt(i.getAttribute("c"),10),s=(Q(e,"Compression")||"none").toLowerCase();if(!ie.has(s))throw new k.Z("mrf:open","currently does not support compression "+s);const l=Q(e,"DataType")||"UInt8",o=ee.get(l);if(null==o)throw new k.Z("mrf:open","currently does not support pixel type "+l);const c=Y(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),d=parseInt(c.getAttribute("y"),10),f=Y(e,"DataValues");let m,h;if(f&&(h=f.getAttribute("NoData"),null!=h&&(m=h.trim().split(" ").map(O=>parseFloat(O)))),Y(t,"MRF_META/CachedSource"))throw new k.Z("mrf:open","currently does not support MRF referencing other data files");const g=Y(t,"MRF_META/GeoTags"),y=Y(g,"BoundingBox");let p,I=!1;if(null!=y){const O=parseFloat(y.getAttribute("minx")),B=parseFloat(y.getAttribute("miny")),N=parseFloat(y.getAttribute("maxx")),J=parseFloat(y.getAttribute("maxy")),W=Q(g,"Projection")||"";let L=U.Z.WGS84;if("LOCAL_CS[]"!==W)if(W.toLowerCase().startsWith("epsg:")){const G=Number(W.slice(5));isNaN(G)||0===G||(L=new U.Z({wkid:G}))}else L=Oe(W)??U.Z.WGS84;else I=!0,L=new U.Z({wkid:3857});p=new V.Z(O,B,N,J),p.spatialReference=L}else I=!0,p=new V.Z({xmin:-.5,ymin:.5-n,xmax:r-.5,ymax:.5,spatialReference:new U.Z({wkid:3857})});const S=Y(t,"MRF_META/Rsets"),M=parseInt(S&&S.getAttribute("scale")||"2",10),F=p.spatialReference,Z=new xe.Z({origin:new A.Z({x:p.xmin,y:p.ymax,spatialReference:F}),blockWidth:u,blockHeight:d,pyramidBlockWidth:u,pyramidBlockHeight:d,compression:s,pyramidScalingFactor:M}),T=new A.Z({x:p.width/r,y:p.height/n,spatialReference:F}),w=new ve.Z({width:r,height:n,extent:p,isPseudoSpatialReference:I,spatialReference:F,bandCount:a,pixelType:o,pixelSize:T,noDataValue:m,storageInfo:Z}),D=Q(t,"datafile"),R=Q(t,"IndexFile");return{rasterInfo:w,files:{mrf:this.url,index:R||this.url.replace(".mrf",".idx"),data:D||this.url.replace(".mrf",ie.get(s).blobExtension)}}}_fetchAuxiliaryData(t){var e=this;return(0,P.Z)(function*(){try{const{data:i}=yield e.request(e.url+".aux.xml",{responseType:"xml",signal:t?.signal});return Ue(i)}catch{return null}})()}};(0,v._)([(0,C.Cb)()],me.prototype,"_files",void 0),(0,v._)([(0,C.Cb)()],me.prototype,"_storageIndex",void 0),(0,v._)([(0,C.Cb)({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),me=(0,v._)([(0,q.j)("esri.layers.support.rasterIO.MRFRaster")],me);const Gt=me;var ue=b(27986),Be=b(65693);const je=(t,e)=>t.get(e)?.values,Ce=(t,e)=>t.get(e)?.values?.[0];let fe=class extends ae{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}open(t){var e=this;return(0,P.Z)(function*(){yield e.init();const i=t?(0,x.Wg)(t.signal):null,{data:r}=yield e.request(e.url,{range:{from:0,to:e._bufferSize},responseType:"array-buffer",signal:i});if(!r)throw new k.Z("tiffraster:open","failed to open url "+e.url);e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1,e.url.lastIndexOf("."));const{littleEndian:n,firstIFDPos:a,isBigTiff:s}=(0,ue.cK)(r),l=[];yield e._readIFDs(l,r,n,a,0,s?8:4,i);const{imageInfo:o,rasterInfo:c}=e._parseIFDs(l),u=(0,ue.ee)(l),d=(0,ue.I7)(l);if(e._headerInfo={littleEndian:n,isBigTiff:s,ifds:l,pyramidIFDs:u,maskIFDs:d,...o},e._set("rasterInfo",c),!o.isSupported)throw new k.Z("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new k.Z("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:f=[]}=e.ioConfig;if(!f.includes("aux.xml")){const m=yield e._fetchAuxiliaryMetaData(t);null!=m&&e._processPAMInfo(m,c)}f.includes("vat.dbf")||1!==c.bandCount||"u8"!==c.pixelType||(c.attributeTable=yield e._fetchAuxiliaryTable(t),(0,x.pC)(c.attributeTable)&&(c.keyProperties.DataType="thematic")),e.updateTileInfo()})()}fetchRawTile(t,e,i,r={}){var n=this;return(0,P.Z)(function*(){if(!n._headerInfo?.isSupported||n.isBlockOutside(t,e,i))return null;const a=yield n._fetchRawTiffTile(t,e,i,!1,r);if((0,x.pC)(a)&&n._headerInfo.hasMaskBand){const s=yield n._fetchRawTiffTile(t,e,i,!0,r);(0,x.pC)(s)&&s.pixels[0]instanceof Uint8Array&&(a.mask=s.pixels[0])}return a})()}_parseIFDs(t){const e=(0,ue.FI)(t),{width:i,height:r,tileWidth:n,tileHeight:a,planes:s,pixelType:l,compression:o,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:d,pyramidBlockHeight:f,tileBoundary:m,affine:h,metadata:g}=e;let p=Oe(e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid),I=!!e.isPseudoGeographic;null==p&&(I=!0,p=new U.Z({wkid:3857}));const S=new V.Z({...e.extent,spatialReference:p}),M=new A.Z(S?{x:S.xmin,y:S.ymax,spatialReference:p}:{x:0,y:0}),F=new xe.Z({blockWidth:n,blockHeight:a,pyramidBlockWidth:d,pyramidBlockHeight:f,compression:o,origin:M,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:m}),Z=new A.Z({x:(S.xmax-S.xmin)/i,y:(S.ymax-S.ymin)/r,spatialReference:p}),T=g?{BandProperties:g.bandProperties,DataType:g.dataType}:{};let w=null;const D=Ce(t[0],"PHOTOMETRICINTERPRETATION"),R=je(t[0],"COLORMAP");if(D<=3&&R?.length>3&&R.length%3==0){w=[];const B=R.length/3;for(let N=0;N<B;N++)w.push([N,R[N]>>>8,R[N+B]>>>8,R[N+2*B]>>>8])}const O=new ve.Z({width:i,height:r,bandCount:s,pixelType:l,pixelSize:Z,storageInfo:F,spatialReference:p,isPseudoSpatialReference:I,keyProperties:T,extent:S,colormap:w,statistics:g?g.statistics:null});return h?.length&&(O.nativeExtent=new V.Z({xmin:-.5,ymin:.5-r,xmax:i-.5,ymax:.5,spatialReference:p}),O.transform=new Le.Z({polynomialOrder:1,forwardCoefficients:[h[2]+h[0]/2,h[5]-h[3]/2,h[0],h[3],-h[1],-h[4]]}),O.extent=O.transform.forwardTransform(O.nativeExtent),O.pixelSize=new A.Z({x:(S.xmax-S.xmin)/i,y:(S.ymax-S.ymin)/r,spatialReference:p}),F.origin.x=-.5,F.origin.y=.5),{imageInfo:e,rasterInfo:O}}_processPAMInfo(t,e){if(e.statistics=t.statistics??e.statistics,e.histograms=t.histograms,t.histograms&&(0,x.Wi)(e.statistics)&&(e.statistics=(0,Pe.Oh)(t.histograms)),t.transform&&(0,x.Wi)(e.transform)){e.transform=t.transform,e.nativeExtent=e.extent;const i=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new A.Z({x:(i.xmax-i.xmin)/e.width,y:(i.ymax-i.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=i}e.isPseudoSpatialReference&&t.spatialReference&&(e.spatialReference=t.spatialReference)}_readIFDs(t,e,i,r,n,a=4,s){var l=this;return(0,P.Z)(function*(){if(!r)return null;(r>=e.byteLength||r<0)&&(e=(yield l.request(l.url,{range:{from:r+n,to:r+n+l._bufferSize},responseType:"array-buffer",signal:s})).data,n=r+n,r=0);const o=yield l._readIFD(e,i,r,n,Be.Z.TIFF_TAGS,a,s);if(t.push(o.ifd),!o.nextIFD)return null;yield l._readIFDs(t,e,i,o.nextIFD-n,n,a,s)})()}_readIFD(t,e,i,r,n=Be.Z.TIFF_TAGS,a=4,s){var l=this;return(0,P.Z)(function*(){if(!t)return null;const o=(0,ue.vr)(t,e,i,r,n,a);if(o.success){const c=[];if(o.ifd?.forEach(u=>{u.values||c.push(u)}),c.length>0){const u=c.map(f=>f.offlineOffsetSize).filter(x.pC),d=Math.min.apply(null,u.map(f=>f[0]));if(Math.min.apply(null,u.map(f=>f[0]+f[1]))-d<=l._bufferSize){const{data:f}=yield l.request(l.url,{range:{from:d,to:d+l._bufferSize},responseType:"array-buffer",signal:s});t=f,r=d,c.forEach(m=>(0,ue.Dq)(t,e,m,r))}}if(o.ifd?.has("GEOKEYDIRECTORY")){const u=o.ifd.get("GEOKEYDIRECTORY"),d=u?.values;if(d&&d.length>4){const f=d[0]+"."+d[1]+"."+d[2],m=yield l._readIFD(t,e,u.valueOffset+6-r,r,Be.Z.GEO_KEYS,2,s);u.data=m.ifd,u.data&&u.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[f]})}}return o}return o.requiredBufferSize&&o.requiredBufferSize!==t.byteLength?(t=(yield l.request(l.url,{range:{from:r,to:r+o.requiredBufferSize+4},responseType:"array-buffer",signal:s})).data).byteLength<o.requiredBufferSize?null:l._readIFD(t,e,0,r,Be.Z.TIFF_TAGS,4,s):void 0})()}_fetchRawTiffTile(t,e,i,r,n={}){var a=this;return(0,P.Z)(function*(){const s=a._getTileLocation(t,e,i,r);if(!s)return null;const{ranges:l,actualTileWidth:o,actualTileHeight:c,ifd:u}=s,d=l.map(T=>a.request(a.url,{range:T,responseType:"array-buffer",signal:n.signal})),f=yield Promise.all(d),m=f.map(T=>T.data.byteLength).reduce((T,w)=>T+w),h=1===f.length?f[0].data:new ArrayBuffer(m),g=[0],y=[0];if(f.length>1){const T=new Uint8Array(h);for(let w=0,D=0;w<f.length;w++){const R=f[w].data;T.set(new Uint8Array(R),D),g[w]=D,D+=R.byteLength,y[w]=R.byteLength}}const{blockWidth:p,blockHeight:I}=a.getBlockWidthHeight(t),S=yield a.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:a._headerInfo,ifd:u,offsets:g,sizes:y},width:p,height:I,planes:null,pixelType:null});if(null==S)return null;let M,F,Z;if(o!==p||c!==I){let T=S.mask;if(T)for(M=0;M<I;M++)if(Z=M*p,M<c)for(F=o;F<p;F++)T[Z+F]=0;else for(F=0;F<p;F++)T[Z+F]=0;else for(T=new Uint8Array(p*I),S.mask=T,M=0;M<c;M++)for(Z=M*p,F=0;F<o;F++)T[Z+F]=1}return S})()}_getTileLocation(t,e,i,r=!1){const{firstPyramidLevel:n,blockBoundary:a}=this.rasterInfo.storageInfo,s=0===t?0:t-(n-1),{_headerInfo:l}=this;if(!l)return null;const o=r?l.maskIFDs[s]:0===s?l?.ifds[0]:l?.pyramidIFDs[s-1];if(!o)return null;const c=(0,ue.If)(o,l),u=je(o,"TILEOFFSETS");if(void 0===u)return null;const d=je(o,"TILEBYTECOUNTS"),{minRow:f,minCol:m,maxRow:h,maxCol:g}=a[s];if(e>h||i>g||e<f||i<m)return null;const y=Ce(o,"IMAGEWIDTH"),p=Ce(o,"IMAGELENGTH"),I=Ce(o,"TILEWIDTH"),S=Ce(o,"TILELENGTH"),M=c?this.rasterInfo.bandCount:1,F=M*e*(g+1)+i,Z=[{from:u[F],to:u[F+M-1]+d[F+M-1]-1}];if(c){let D=!0;for(let R=0;R<M;R++)if(u[F+R]+d[F+R]!==u[F+R+1]){D=!1;break}if(!D)for(let R=0;R<M;R++)Z[R]={from:u[F+R],to:u[F+R]+d[F+R]-1}}return null==u[F]||null==d[F]?null:{ranges:Z,ifd:o,actualTileWidth:i===g&&y%I||I,actualTileHeight:e===h&&p%S||S}}_fetchAuxiliaryMetaData(t){var e=this;return(0,P.Z)(function*(){try{const{data:i}=yield e.request(e.url+".aux.xml",{responseType:"xml",signal:t?.signal});return Ue(i)}catch{return null}})()}_fetchAuxiliaryTable(t){var e=this;return(0,P.Z)(function*(){try{const{data:i}=yield e.request(e.url+".vat.dbf",{responseType:"array-buffer",signal:t?.signal}),r=et.parse(i);return r?.recordSet?rt.Z.fromJSON(r.recordSet):null}catch{return null}})()}};(0,v._)([(0,C.Cb)()],fe.prototype,"_files",void 0),(0,v._)([(0,C.Cb)()],fe.prototype,"_headerInfo",void 0),(0,v._)([(0,C.Cb)()],fe.prototype,"_bufferSize",void 0),(0,v._)([(0,C.Cb)({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),fe=(0,v._)([(0,q.j)("esri.layers.support.rasterDatasets.TIFFRaster")],fe);const _t=fe,j=new Map;j.set("CRF",{desc:"Cloud Raster Format",constructor:Dt}),j.set("MRF",{desc:"Meta Raster Format",constructor:Gt}),j.set("TIFF",{desc:"GeoTIFF",constructor:_t}),j.set("RasterTileServer",{desc:"Raster Tile Server",constructor:At}),j.set("JPG",{desc:"JPG Raster Format",constructor:Ze}),j.set("PNG",{desc:"PNG Raster Format",constructor:Ze}),j.set("GIF",{desc:"GIF Raster Format",constructor:Ze}),j.set("BMP",{desc:"BMP Raster Format",constructor:Ze});class Vt{static get supportedFormats(){const e=new Set;return j.forEach((i,r)=>e.add(r)),e}static open(e){var i=this;return(0,P.Z)(function*(){const{url:r,ioConfig:n,sourceJSON:a}=e;let s=e.datasetFormat;null==s&&r.lastIndexOf(".")&&(s=r.slice(r.lastIndexOf(".")+1).toUpperCase()),"OVR"===s||"TIF"===s?s="TIFF":"JPG"!==s&&"JPEG"!==s&&"JFIF"!==s||(s="JPG"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(s="RasterTileServer");const l={url:r,sourceJSON:a,datasetFormat:s,ioConfig:n??{bandIds:null,sampling:null}};let o,c;if(s&&i.supportedFormats.has(s)){if("CRF"===s&&!n?.enableCRF)throw new k.Z("rasterfactory:open",`cannot open raster: ${r}`);return o=j.get(s).constructor,c=new o(l),yield c.open({signal:e.signal}),c}if(s)throw new k.Z("rasterfactory:open","not a supported format "+s);const u=Array.from(j.keys());let d=0;const f=()=>(s=u[d++],s&&("CRF"!==s||n?.enableCRF)?(o=j.get(s).constructor,c=new o(l),c.open({signal:e.signal}).then(()=>c).catch(()=>f())):null);return f()})()}static register(e,i,r){j.has(e.toUpperCase())||j.set(e.toUpperCase(),{desc:i,constructor:r})}}var $t=b(67056);let E=class extends((0,dt.h)((0,Ft.M)((0,Ct.q)((0,Tt.I)((0,mt.N)(Rt((0,Pt.n)((0,ft.Y)((0,wt.Q)((0,at.R)(ut.Z))))))))))){constructor(...t){super(...t),this._primaryRasters=null,this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(t,e){return"string"==typeof t?{url:t,...e}:t}load(t){const e=(0,x.pC)(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(ye.r9).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let t=[new Ie.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:e}=this,i=e?.attributeTable,r=(0,x.pC)(i)?i.fields:null;if(r){const l=r.filter(o=>"oid"!==o.type&&"value"!==o.name.toLowerCase()).map(o=>{const c=o.clone();return c.name="Raster."+o.name,c});t=t.concat(l)}const a=e?.dataType,s=e?.multidimensionalInfo;if(("vector-magdir"===a||"vector-uv"===a)&&(0,x.pC)(s)){const l=s.variables[0].unit?.trim();t.push(new Ie.Z({name:"Raster.Magnitude",alias:"Magnitude"+(l?` (${l})`:""),domain:null,editable:!1,type:"double"})),t.push(new Ie.Z({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return t}set renderer(t){this._set("renderer",t),this.updateRenderer()}readRenderer(t,e,i){const n=(0,we.ij)(e&&e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.renderer,i)||void 0;if(null!=n)return n}createPopupTemplate(t){return(0,$t.eZ)({fields:this.rasterFields,title:this.title},t)}generateRasterInfo(t,e){var i=this;return(0,P.Z)(function*(){if(!(t=(0,Ee.TJ)(Ne.Z,t)))return i._primaryRasters[0].rasterInfo;try{const r={raster:i._primaryRasters[0]};i._primaryRasters.length>1&&i._primaryRasters.forEach(s=>r[s.url]=s);const n=(0,Fe.Ue)(t.toJSON(),r),a=new He({rasterFunction:n});return yield a.open(e),a.rasterInfo}catch{return null}})()}write(t,e){const{raster:i}=this;return(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))?super.write(t,e):(e&&e.messages&&e.messages.push(new k.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e.origin}/${e.layerContainerType||"operational-layers"}'`,{layer:this})),null)}_openRaster(t){var e=this;return(0,P.Z)(function*(){let i=!1;if(e.raster)e.raster.rasterInfo||(yield e.raster.open()),"Function"===e.raster.datasetFormat?(i=!0,e._primaryRasters=e.raster.primaryRasters.rasters):e._primaryRasters=[e.raster],e.url=e.raster.url;else{const{rasterFunction:n}=e,a=[e.url];n&&(0,Fe.G8)(n.toJSON(),a);const s=yield Promise.all(a.map(o=>Vt.open({url:o,sourceJSON:e.sourceJSON,ioConfig:{sampling:"closest",...e.ioConfig,customFetchParameters:e.customParameters},signal:t}))),l=s.findIndex(o=>null==o);if(l>-1)throw new k.Z("imagery-tile-layer:open",`cannot open raster: ${a[l]}`);if(e._primaryRasters=s,n){const o={raster:e._primaryRasters[0]};e._primaryRasters.length>1&&e._primaryRasters.forEach(d=>o[d.url]=d);const c=(0,Fe.Ue)(n.rasterFunctionDefinition??n.toJSON(),o),u=new He({rasterFunction:c});try{yield u.open(),e.raster=u}catch(d){const f=ke.Z.getLogger(e.declaredClass);d instanceof k.Z&&f.error("imagery-tile-layer:open",d.message),f.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),e._set("rasterFunction",null),e.raster=s[0]}}else e.raster=s[0]}const r=e.raster.rasterInfo;if(!r)throw new k.Z("imagery-tile-layer:load","cannot load resources on "+e.url);if(e._set("rasterInfo",i?r:e._primaryRasters[0].rasterInfo),e._set("spatialReference",r.spatialReference),e.sourceJSON=e.sourceJSON||e.raster.sourceJSON,null!=e.sourceJSON){const n="Map"===e.raster.tileType&&null!=e.sourceJSON.minLOD&&null!=e.sourceJSON.maxLOD?e.sourceJSON:{...e.sourceJSON,minScale:0,maxScale:0};e.read(n,{origin:"service"})}e.title||(e.title=e.raster.datasetName),"Map"===e.raster.tileType&&(e.popupEnabled=!1),e._configDefaultSettings(),e.addHandles((0,ot.YP)(()=>e.customParameters,n=>{e.raster&&(e.raster.ioConfig.customFetchParameters=n)}))})()}};(0,v._)([(0,C.Cb)()],E.prototype,"_primaryRasters",void 0),(0,v._)([(0,C.Cb)({type:[Ee.z8],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],E.prototype,"bandIds",void 0),(0,v._)([(0,C.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,lt.J)(Mt.c)],E.prototype,"interpolation",void 0),(0,v._)([(0,C.Cb)(ze.rn)],E.prototype,"legendEnabled",void 0),(0,v._)([(0,C.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],E.prototype,"isReference",void 0),(0,v._)([(0,C.Cb)({type:["show","hide"]})],E.prototype,"listMode",void 0),(0,v._)([(0,C.Cb)({json:{read:!0,write:!0}})],E.prototype,"blendMode",void 0),(0,v._)([(0,C.Cb)()],E.prototype,"sourceJSON",void 0),(0,v._)([(0,C.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],E.prototype,"version",void 0),(0,v._)([(0,C.Cb)({readOnly:!0,json:{read:!1}})],E.prototype,"type",void 0),(0,v._)([(0,C.Cb)({type:["ArcGISTiledImageServiceLayer"]})],E.prototype,"operationalLayerType",void 0),(0,v._)([(0,C.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(t,e,i){e[i]=!t}}}})],E.prototype,"popupEnabled",void 0),(0,v._)([(0,C.Cb)({type:st.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],E.prototype,"popupTemplate",void 0),(0,v._)([(0,C.Cb)({readOnly:!0})],E.prototype,"defaultPopupTemplate",null),(0,v._)([(0,C.Cb)({readOnly:!0,type:[Ie.Z]})],E.prototype,"fields",void 0),(0,v._)([(0,C.Cb)({readOnly:!0,type:[Ie.Z]})],E.prototype,"rasterFields",null),(0,v._)([(0,C.Cb)({types:we.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||!("raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma)}}},origins:{"web-scene":{types:we.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&"vector-field"!==t.type&&"flow"!==t.type})}}}}})],E.prototype,"renderer",null),(0,v._)([(0,ct.r)("renderer")],E.prototype,"readRenderer",null),E=(0,v._)([(0,q.j)("esri.layers.ImageryTileLayer")],E);const Yt=E}}]);
//# sourceMappingURL=8230.e53f2c02752a0cc2.js.map