{
  "version": 3,
  "sources": ["src/app/table-demo/table-demo.component.ts", "src/app/table-demo/table-demo.component.html"],
  "sourcesContent": ["import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { finalize, fromEvent, tap, Subject, takeUntil, merge, BehaviorSubject } from 'rxjs';\r\nimport { CdkDragDrop, DragDropModule, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { IColumnConfiguration, PopoverComponent, SortDirection } from '@tylertech/forge';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { ForgeCheckboxModule, ForgeDividerModule, ForgeIconButtonModule, ForgeIconModule, ForgeListItemModule, ForgeListModule, ForgePopoverModule, ForgeToolbarModule } from '@tylertech/forge-angular';\r\n\r\nimport { IPerson } from 'src/app/shared/interfaces/person.interface';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { AutoFocusDirective } from 'src/app/shared/directives/auto-focus/auto-focus.directive';\r\nimport { CallbackPipe } from 'src/app/shared/pipes/callback.pipe';\r\nimport { TableDetailComponent } from 'src/app/shared/components/table-detail/table-detail.component';\r\nimport { Utils } from 'src/utils';\r\n\r\n@Component({\r\n  selector: 'app-table-demo',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    DragDropModule,\r\n    ScrollingModule,\r\n    ForgeCheckboxModule,\r\n    ForgeDividerModule,\r\n    ForgeIconButtonModule,\r\n    ForgeIconModule,\r\n    ForgeListItemModule,\r\n    ForgeListModule,\r\n    ForgePopoverModule,\r\n    ForgeToolbarModule,\r\n    TableDetailComponent,\r\n    AutoFocusDirective,\r\n    CallbackPipe\r\n  ],\r\n  templateUrl: './table-demo.component.html',\r\n  styleUrls: ['./table-demo.component.scss']\r\n})\r\nexport class TableDemoComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  private appDataService = inject(AppDataService);\r\n  @ViewChild('table', { static: true })\r\n  private tableElementRef?: ElementRef<HTMLTableElement>;\r\n  @ViewChild('columnHeaderPopover')\r\n  private columnHeaderPopover?: ElementRef<PopoverComponent>;\r\n  @ViewChild(CdkVirtualScrollViewport)\r\n  public virtualScrollViewport?: CdkVirtualScrollViewport;\r\n  private tableColumnResize$ = new Subject<void>();\r\n  private isColumnResizing = false;\r\n\r\n  public isBusy = false;\r\n  public filterCache = {\r\n    sort: {\r\n      property: 'lastName',\r\n      direction: SortDirection.Ascending\r\n    },\r\n    filters: [] as any[],\r\n    skip: 0,\r\n    take: 25\r\n  };\r\n  public recordset: IPerson[] = [];\r\n  public recordset$ = new BehaviorSubject<IPerson[]>([]);\r\n  public recordCount = 0;\r\n  public tableColumns: IColumnConfiguration[] = [\r\n    { header: 'Id', property: 'id', width: 48 },\r\n    { header: 'First', property: 'firstName' },\r\n    { header: 'Last', property: 'lastName' },\r\n    { header: 'Gender', property: 'gender' },\r\n    { header: 'Occupation', property: 'occupation' }\r\n  ];\r\n  public tableHeaderOffset = 0;\r\n  public expandedRows: any[] = [];\r\n  public id = Utils.elementId('app-');\r\n\r\n  public visibleColumns = (columns: IColumnConfiguration[]) => {\r\n    return columns.filter((c) => c.hidden !== true);\r\n  };\r\n\r\n  public recordsetTrackBy = (index: number, person: IPerson) => {\r\n    return person.id;\r\n  };\r\n\r\n  public ngOnInit() {\r\n    this.getRecords();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.virtualScrollViewport?.renderedRangeStream.subscribe((o) => {\r\n      this.tableHeaderOffset = o.start;\r\n      if (!this.isBusy && o.start > 0 && o.end + 20 > this.recordCount) {\r\n        this.isBusy = true;\r\n        this.appDataService\r\n          .getPeople({\r\n            sort: this.filterCache.sort\r\n          })\r\n          .pipe(finalize(() => (this.isBusy = false)))\r\n          .subscribe((result) => {\r\n            const startId = this.recordset.length + 1;\r\n            this.recordset = [\r\n              ...this.recordset,\r\n              ...result.data.map((p, i) => {\r\n                p.id = startId + p.id;\r\n                return p;\r\n              })\r\n            ];\r\n            this.recordCount = this.recordset.length;\r\n            this.recordset$.next(this.recordset);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.tableColumnResize$.next();\r\n    this.tableColumnResize$.complete();\r\n  }\r\n\r\n  public onColumnHeaderDragStart() {\r\n    this.virtualScrollViewport?.scrollToOffset(0);\r\n  }\r\n\r\n  public onColumnHeaderDragDrop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.tableColumns, event.previousIndex, event.currentIndex);\r\n    this.tableColumns = [...this.tableColumns];\r\n  }\r\n\r\n  public onColumnHeaderResize(event: MouseEvent, columnIndex: number, column: IColumnConfiguration) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    this.tableColumnResize$.next();\r\n\r\n    let columnHeaderElement = (this.tableElementRef?.nativeElement as HTMLTableElement).querySelectorAll('thead tr th')[columnIndex] as HTMLTableCellElement;\r\n    let columnElements = (this.tableElementRef?.nativeElement as HTMLTableElement).querySelectorAll(`tbody tr td:nth-child(${columnIndex + 1})`);\r\n\r\n    let positionX = event.clientX;\r\n    if (columnHeaderElement) {\r\n      this.isColumnResizing = true;\r\n      this.tableElementRef?.nativeElement.querySelector('.forge-table-head__row')?.classList.add('forge-table-head__row--resizing');\r\n      columnHeaderElement.classList.add('forge-table-head__cell--resizing');\r\n      columnElements.forEach((c) => c.classList.add('forge-table-body__cell--resizing'));\r\n\r\n      fromEvent<MouseEvent>(document.body, 'mousemove')\r\n        .pipe(\r\n          takeUntil(this.tableColumnResize$),\r\n          tap((event) => {\r\n            column.width = columnHeaderElement.offsetWidth + (event.clientX - positionX);\r\n            positionX = event.clientX;\r\n          })\r\n        )\r\n        .subscribe();\r\n\r\n      const theadElement = this.tableElementRef?.nativeElement.querySelector('thead');\r\n      merge(fromEvent(theadElement, 'mouseup'), fromEvent(theadElement, 'mouseleave'))\r\n        .pipe(\r\n          finalize(() =>\r\n            requestAnimationFrame(() => {\r\n              this.isColumnResizing = false;\r\n              (columnHeaderElement as any) = undefined;\r\n              (columnElements as any) = undefined;\r\n            })\r\n          ),\r\n          takeUntil(this.tableColumnResize$),\r\n          tap((event) => {\r\n            this.tableColumnResize$.next();\r\n            this.tableElementRef?.nativeElement.querySelector('.forge-table-head__row')?.classList.remove('forge-table-head__row--resizing');\r\n            columnHeaderElement.classList.remove('forge-table-head__cell--resizing');\r\n            columnElements.forEach((c) => c.classList.remove('forge-table-body__cell--resizing'));\r\n          })\r\n        )\r\n        .subscribe();\r\n    }\r\n  }\r\n\r\n  public onColumnHeaderRightClick(event: PointerEvent, columnIndex: number) {\r\n    event.preventDefault();\r\n    if (this.columnHeaderPopover.nativeElement.open) {\r\n      this.columnHeaderPopover.nativeElement.open = false;\r\n      requestAnimationFrame(() => {\r\n        this.columnHeaderPopover.nativeElement.anchor = '';\r\n      });\r\n    } else {\r\n      this.columnHeaderPopover.nativeElement.anchor = `th-${columnIndex}-${this.id}`;\r\n      requestAnimationFrame(() => {\r\n        this.columnHeaderPopover.nativeElement.open = true;\r\n      });\r\n    }\r\n  }\r\n\r\n  public onColumnPopoverItemSelected(value: any) {\r\n    switch (value) {\r\n      case 'reset-column-width':\r\n        this.tableColumns.forEach((c) => (c.width = undefined));\r\n        break;\r\n      case 'freeze-column': {\r\n        const columnHeaderElement = (this.tableElementRef?.nativeElement as HTMLTableElement).querySelectorAll('thead tr th')[0];\r\n        const columnElements = (this.tableElementRef?.nativeElement as HTMLTableElement).querySelectorAll(`tbody tr td:nth-child(${1})`);\r\n        columnHeaderElement.classList.add('forge-table-head__cell--frozen');\r\n        columnElements.forEach((c) => c.classList.add('forge-table-body__cell--frozen'));\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        const tableColumn = this.tableColumns.find((c) => c.property === value.property);\r\n        if (tableColumn) {\r\n          // prevent hiding all columns\r\n          if (this.tableColumns.filter((c) => !c.hidden).length) {\r\n            tableColumn.hidden = isDefined(tableColumn.hidden) ? !tableColumn.hidden : true;\r\n            tableColumn.sortDirection = undefined;\r\n            this.tableColumns = [...this.tableColumns];\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.columnHeaderPopover.nativeElement.open = false;\r\n    this.columnHeaderPopover.nativeElement.anchor = '';\r\n  }\r\n\r\n  public onTableSort(event: MouseEvent, column: IColumnConfiguration) {\r\n    event.stopPropagation();\r\n    this.columnHeaderPopover.nativeElement.open = false;\r\n    this.columnHeaderPopover.nativeElement.anchor = '';\r\n\r\n    if (!this.isColumnResizing) {\r\n      this.tableColumns.filter((c) => c.property !== column.property).forEach((c) => (c.sortDirection = undefined));\r\n      if (column.sortDirection === SortDirection.Ascending) {\r\n        column.sortDirection = SortDirection.Descending;\r\n      } else if (column.sortDirection === SortDirection.Descending) {\r\n        column.sortDirection = undefined;\r\n      } else {\r\n        column.sortDirection = SortDirection.Ascending;\r\n      }\r\n\r\n      (this.filterCache as any).sort = column.sortDirection ? { property: column.property, direction: column.sortDirection } : undefined;\r\n      this.filterCache.skip = 0;\r\n      this.virtualScrollViewport?.scrollToOffset(0);\r\n      this.expandedRows.length = 0;\r\n      this.getRecords();\r\n    }\r\n  }\r\n\r\n  public onTablePaginatorChange(detail: { pageIndex: number; pageSize: number }) {\r\n    this.filterCache.skip = detail.pageIndex * detail.pageSize;\r\n    this.filterCache.take = detail.pageSize;\r\n    this.expandedRows.length = 0;\r\n    this.getRecords();\r\n  }\r\n\r\n  public onExpandRow(index: number, value: any) {\r\n    if (this.expandedRows[index]) {\r\n      this.expandedRows[index] = undefined;\r\n    } else {\r\n      this.expandedRows[index] = value;\r\n    }\r\n  }\r\n\r\n  private getRecords() {\r\n    this.isBusy = true;\r\n    this.appDataService\r\n      .getPeople({\r\n        sort: this.filterCache.sort\r\n      })\r\n      .pipe(finalize(() => (this.isBusy = false)))\r\n      .subscribe((result) => {\r\n        this.recordset = result.data;\r\n        this.recordCount = result.count;\r\n        this.recordset$.next(this.recordset);\r\n      });\r\n  }\r\n}\r\n", "<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--subheading4\">Table demo</h2>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <div class=\"body__table\">\r\n    <cdk-virtual-scroll-viewport itemSize=\"48\">\r\n      <table #table class=\"forge-table forge-table--fixed\">\r\n        <thead [style.--table-header-offset]=\"tableHeaderOffset\" [style.--table-header-translate-y]=\"tableHeaderOffset * -48 + 'px'\">\r\n          <tr class=\"forge-table-row forge-table-head__row\" cdkDropList (cdkDropListDropped)=\"onColumnHeaderDragDrop($event)\" cdkDropListOrientation=\"horizontal\">\r\n            <th class=\"forge-table-cell forge-table-head__cell forge-table-row__expander\"></th>\r\n            @for (col of tableColumns | appCallback: $any(visibleColumns); track colIndex; let colIndex = $index) {\r\n              <th\r\n                scope=\"col\"\r\n                class=\"forge-table-cell forge-table-head__cell forge-table-head__cell--sortable\"\r\n                cdkDrag\r\n                cdkDragLockAxis=\"x\"\r\n                (cdkDragStarted)=\"onColumnHeaderDragStart()\"\r\n                (click)=\"onTableSort($event, col)\"\r\n                (contextmenu)=\"onColumnHeaderRightClick($any($event), colIndex)\"\r\n                tabindex=\"-1\"\r\n                [style.--table-column-width]=\"col.width\"\r\n                [id]=\"'th-' + colIndex + '-' + id\"\r\n              >\r\n                <div class=\"forge-table-head__cell-container\">\r\n                  <span class=\"forge-table-head__cell-text\">{{ col.header }}</span>\r\n                  @if (col.sortDirection?.length) {\r\n                    <forge-icon [name]=\"col.sortDirection === 'DESC' ? 'arrow_downward' : col.sortDirection === 'ASC' ? 'arrow_upward' : ''\" class=\"forge-table-head__cell-sort-icon\" aria-hidden=\"true\"></forge-icon>\r\n                  }\r\n                </div>\r\n                <div class=\"forge-table-head__cell-actions\">\r\n                  <div class=\"forge-table-head__cell-dragger\" cdkDragHandle></div>\r\n                  <div class=\"forge-table-head__cell-resizer\" (mousedown)=\"onColumnHeaderResize($event, colIndex + 1, col)\"></div>\r\n                </div>\r\n              </th>\r\n            }\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <ng-container *cdkVirtualFor=\"let record of recordset$; trackBy: recordsetTrackBy; let recordIndex = index\">\r\n            <tr class=\"forge-table-row forge-table-body__row\" [ngClass]=\"{ 'forge-table-row--expanded': expandedRows[recordIndex] }\">\r\n              <td class=\"forge-table-cell forge-table-body__cell forge-table-row__expander\">\r\n                <forge-icon-button (click)=\"onExpandRow(recordIndex, record)\" aria-label=\"Toggle details\">\r\n                  <forge-icon [name]=\"expandedRows[recordIndex] ? 'expand_less' : 'expand_more'\"></forge-icon>\r\n                </forge-icon-button>\r\n              </td>\r\n              @for (col of tableColumns | appCallback: $any(visibleColumns); track colIndex; let colIndex = $index) {\r\n                <td class=\"forge-table-cell forge-table-body__cell\">\r\n                  <div class=\"forge-table-cell__container\">\r\n                    {{ $any(record)[col.property] }}\r\n                  </div>\r\n                </td>\r\n              }\r\n            </tr>\r\n            @if (expandedRows[recordIndex]) {\r\n              <tr class=\"forge-table-row forge-table-body__row forge-table-row__expandable-content\">\r\n                <td class=\"forge-table-row__expandable-content-cell\" [attr.colspan]=\"(tableColumns | appCallback: $any(visibleColumns)).length + 1\">\r\n                  <app-table-detail [data]=\"expandedRows[recordIndex]\" [rowIndex]=\"recordIndex\"></app-table-detail>\r\n                </td>\r\n              </tr>\r\n            }\r\n          </ng-container>\r\n        </tbody>\r\n      </table>\r\n    </cdk-virtual-scroll-viewport>\r\n  </div>\r\n\r\n  <forge-toolbar inverted=\"true\">\r\n    <span slot=\"end\" class=\"forge-typography--label1\">Records: {{ recordCount }}</span>\r\n    <!-- <forge-paginator slot=\"end\" [pageIndex]=\"filterCache.skip / filterCache.take\" [pageSize]=\"filterCache.take\" [total]=\"recordCount\" (forge-paginator-change)=\"onTablePaginatorChange($event.detail)\"></forge-paginator> -->\r\n  </forge-toolbar>\r\n</div>\r\n\r\n<forge-popover #columnHeaderPopover placement=\"right-end\" animation-type=\"none\">\r\n  <forge-list class=\"column-popover\" (forge-list-item-select)=\"onColumnPopoverItemSelected($event.detail.value)\">\r\n    @for (column of tableColumns; track i; let i = $index) {\r\n      <forge-list-item [value]=\"column\">\r\n        <forge-icon slot=\"start\" [name]=\"column.hidden ? 'check_box_outline_blank' : 'check_box'\"></forge-icon>\r\n        <button type=\"button\">{{ column.header }}</button>\r\n      </forge-list-item>\r\n    }\r\n    <forge-divider></forge-divider>\r\n    <forge-list-item value=\"reset-column-width\">\r\n      <button type=\"button\">Reset column widths</button>\r\n    </forge-list-item>\r\n    <forge-list-item value=\"freeze-column\">\r\n      <button type=\"button\">Freeze column</button>\r\n    </forge-list-item>\r\n  </forge-list>\r\n</forge-popover>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275element", "\u0275\u0275property", "col_r4", "sortDirection", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onColumnHeaderDragStart", "$event", "$implicit", "onTableSort", "\u0275$index_20_r5", "$index", "onColumnHeaderRightClick", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275template", "TableDemoComponent_For_12_Conditional_4_Template", "ctx_r5", "onColumnHeaderResize", "\u0275\u0275styleProp", "width", "id", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "header", "\u0275\u0275conditional", "length", "\u0275\u0275textInterpolate1", "record_r9", "col_r11", "property", "expandedRows", "recordIndex_r10", "\u0275\u0275elementContainerStart", "ctx_r7", "_r7", "index", "onExpandRow", "\u0275\u0275repeaterCreate", "TableDemoComponent_ng_container_15_For_6_Template", "\u0275\u0275repeaterTrackByIndex", "TableDemoComponent_ng_container_15_Conditional_8_Template", "\u0275\u0275pureFunction1", "_c2", "\u0275\u0275repeater", "\u0275\u0275pipeBind2", "tableColumns", "visibleColumns", "column_r12", "hidden", "TableDemoComponent", "constructor", "appDataService", "inject", "AppDataService", "tableColumnResize$", "Subject", "isColumnResizing", "isBusy", "filterCache", "sort", "direction", "SortDirection", "Ascending", "filters", "skip", "take", "recordset", "recordset$", "BehaviorSubject", "recordCount", "tableHeaderOffset", "Utils", "elementId", "columns", "filter", "c", "recordsetTrackBy", "person", "ngOnInit", "getRecords", "ngAfterViewInit", "virtualScrollViewport", "renderedRangeStream", "subscribe", "o", "start", "end", "getPeople", "pipe", "finalize", "result", "startId", "data", "map", "p", "i", "next", "ngOnDestroy", "complete", "scrollToOffset", "onColumnHeaderDragDrop", "event", "moveItemInArray", "previousIndex", "currentIndex", "columnIndex", "column", "stopPropagation", "preventDefault", "columnHeaderElement", "tableElementRef", "nativeElement", "querySelectorAll", "columnElements", "positionX", "clientX", "querySelector", "classList", "add", "forEach", "fromEvent", "document", "body", "takeUntil", "tap", "offsetWidth", "theadElement", "merge", "requestAnimationFrame", "undefined", "remove", "columnHeaderPopover", "open", "anchor", "onColumnPopoverItemSelected", "value", "tableColumn", "find", "isDefined", "Descending", "onTablePaginatorChange", "detail", "pageIndex", "pageSize", "count", "selectors", "viewQuery", "rf", "ctx", "CdkVirtualScrollViewport", "i0", "_r1", "TableDemoComponent_For_12_Template", "TableDemoComponent_ng_container_15_Template", "TableDemoComponent_For_23_Template", "CommonModule", "NgClass", "DragDropModule", "CdkDropList", "CdkDrag", "CdkDragHandle", "ScrollingModule", "CdkFixedSizeVirtualScroll", "CdkVirtualForOf", "ForgeCheckboxModule", "ForgeDividerModule", "DividerComponent", "ForgeIconButtonModule", "IconButtonComponent", "IconComponent", "ForgeIconModule", "ForgeListItemModule", "ListItemComponent", "ForgeListModule", "ListComponent", "ForgePopoverModule", "PopoverComponent", "ForgeToolbarModule", "ToolbarComponent", "TableDetailComponent", "CallbackPipe", "styles"]
}
