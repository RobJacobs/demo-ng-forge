{
  "version": 3,
  "sources": ["node_modules/@tylertech/forge/sass/core/styles/typography/index.scss", "node_modules/@tylertech/forge/sass/core/styles/core/_config.scss", "node_modules/@tylertech/forge/sass/core/styles/_utils.scss", "node_modules/@tylertech/forge/sass/core/styles/theme/index.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/theme/_tokens.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/theme/_tokens.brand.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/theme/_token-utils.scss", "node_modules/@tylertech/forge/sass/core/styles/theme/_utils.scss", "node_modules/@tylertech/forge/sass/core/styles/theme/_color-utils.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/theme/_color-emphasis.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/theme/_tokens.surface.scss", "node_modules/@tylertech/forge/sass/core/styles/elevation/index.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/elevation/_tokens.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/color-palette/index.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/color-palette/_extended-color-palette.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/color-palette/_material-color-palette.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/theme/_tokens.core.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/theme/_tokens.text.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/theme/_tokens.status.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/theme/_tokens.utilities.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/typography/_tokens.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/typography/_tokens.body.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/typography/_scale.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/typography/_type-utils.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/typography/_tokens.core.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/typography/_weight.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/typography/_tokens.display.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/typography/_tokens.heading.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/typography/_tokens.label.scss", "node_modules/@tylertech/forge/sass/core/styles/tokens/typography/_tokens.subheading.scss", "node_modules/@tylertech/forge/sass/utils/_mixins-flex.scss", "node_modules/@tylertech/forge/sass/utils/_mixins.scss", "node_modules/@tylertech/forge/sass/utils/_variables-flex.scss", "src/app/app.component.scss"],
  "sourcesContent": ["/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use 'sass:list';\n@use '../core/config';\n@use '../utils';\n@use '../theme';\n@use '../tokens/typography/tokens';\n@use '../tokens/typography/scale';\n@use '../tokens/typography/tokens.core' as core;\n\n@forward '../tokens/typography/tokens';\n\n///\n/// Emits the typography styles for the given style.\n///\n/// Example:\n/// ```scss\n/// @include style(title);\n/// ```\n///\n/// Allows for providing an optional list of tokens to exclude from the output:\n/// ```scss\n/// @include style(title, $exclude: [font-family font-size]);\n/// ```\n///\n@mixin style($style, $exclude: null) {\n  $styles: (\n    font-family: _get-style-value($style, font-family),\n    font-size: _get-style-value($style, font-size),\n    font-weight: _get-style-value($style, font-weight),\n    line-height: _get-style-value($style, line-height),\n    letter-spacing: _get-style-value($style, letter-spacing),\n    text-transform: _get-style-value($style, text-transform),\n    text-decoration: _get-style-value($style, text-decoration)\n  );\n\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n\n  @each $key, $value in $styles {\n    @if not $exclude or not list.index($exclude, $key) {\n      #{$key}: #{$value};\n    }\n  }\n}\n\n///\n/// Gets a CSS custom property declaration for a specific typography style token, with its token value as the fallback value.\n///\n@function variable($style, $token, $prefix: config.$prefix) {\n  @return _get-style-value($style, $token);\n}\n\n///\n/// Gets the value of a typography scale token.\n///\n@function scale($scale, $unit: rem) {\n  @return #{scale.value($scale)}#{if($unit, $unit, '')};\n}\n\n@mixin ellipse {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n///\n/// Sets base typography styles.\n///\n@mixin base {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: core.get(font-family);\n  color: theme.variable(text-high);\n\n  @include style(body2);\n}\n\n///\n/// Generates helper classes for each typography style/role.\n///\n@mixin classes {\n  @each $style, $tokens in tokens.$tokens {\n    .#{config.$prefix}-typography--#{$style} {\n      @include style($style);\n    }\n  }\n}\n\n///\n/// Create a selector for default anchor link styles\n///\n@mixin anchor {\n  .forge-anchor,\n  .forge-hyperlink,\n  .forge-typography--link {\n    @include anchor-base;\n\n    &:visited {\n      @include anchor-visited;\n    }\n\n    &:hover {\n      @include anchor-hover;\n    }\n\n    &:active {\n      @include anchor-active;\n    }\n\n    &-plain {\n      @include anchor-plain;\n    }\n  }\n}\n\n@mixin anchor-base {\n  text-decoration: var(--forge-typography-link-text-decoration, underline);\n  color: theme.variable(primary);\n  cursor: pointer;\n}\n\n@mixin anchor-visited {\n  color: theme.variable(primary);\n}\n\n@mixin anchor-hover {\n  text-decoration: none;\n}\n\n@mixin anchor-active {\n  opacity: theme.emphasis(high);\n}\n\n@mixin anchor-plain {\n  text-decoration: none;\n  color: inherit;\n  outline: none;\n}\n\n///\n/// Provides override CSS custom property declarations for the given style overrides.\n///\n/// Example:\n/// ```\n/// .my-class {\n///   @include provide(title, (font-family: Arial, font-size: 20px));\n/// }\n/// ```\n///\n/// This will output:\n/// ```\n/// .my-class {\n///   --forge-typography-title-font-family: Arial;\n///   --forge-typography-title-font-size: 20px;\n/// }\n/// ```\n///\n@mixin provide($style, $overrides) {\n  $style-tokens: map.get(tokens.$tokens, $style);\n  @each $key, $value in $overrides {\n    @if not map.get($style-tokens, $key) {\n      @error 'Invalid token \"#{$key}\" for style \"#{$style}\"';\n    }\n    --#{config.$prefix}-typography-#{$style}-#{$key}: #{$value};\n  }\n}\n\n///\n/// Creates a calculated style value that will scale relative to the root font size.\n///\n/// Example:\n/// ```scss\n/// .my-class {\n///   padding: typography.font-size-relative(2);\n/// }\n///\n/// // Outputs\n/// .my-class {\n///   padding: calc(var(--forge-typography-font-size, 1rem) * 2);\n/// }\n///\n/// ```\n///\n@function font-size-relative($scale) {\n  $scale-value: scale.value($scale);\n  @return calc(#{core.get(font-size)} * #{$scale-value});\n}\n\n@function _get-style-value($style, $token) {\n  @return var(--#{config.$prefix}-typography-#{$style}-#{$token}, #{tokens.get($style, $token)});\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n$prefix: forge !default;\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use 'sass:math';\n@use './core/config';\n\n///\n/// Gets a CSS custom property declaration for a specific theme variable, with its token value as the fallback value\n///\n@function variable($module, $tokens, $key, $prefix: config.$prefix) {\n  $value: map.get($tokens, $key);\n  @if not $value {\n    @error 'Invalid #{$module} token: #{$key}';\n  }\n  @return create-var($module, $key, $value, $prefix);\n}\n\n///\n/// Creates a CSS custom property reference for a token in the provided module\n/// referencing an existing module token variable as the fallback.\n///\n/// To provide a module reference variable with a different fallback value, set the\n/// $type parameter to `value` and `$value` will be used verbatim.\n///\n/// Example:\n/// ```scss\n/// $my-token: module-ref(comp, color, primary-color); // => var(--forge-comp-color, var(--_primary-color));\n/// ```\n///\n@function module-ref($module, $token, $value, $type: ref, $prefix: config.$prefix) {\n  $fallback: if($type == ref, module-var($module, $value), $value);\n  @return create-var($module, $token, $fallback, $prefix);\n}\n\n///\n/// Creates an internal token reference variable for a module.\n///\n/// Example:\n/// ```sass\n/// color: #{module-var(color)}; // => color: var(--_component-name-color);\n/// ```\n///\n/// @param {String} $module - The module name.\n/// @param {String} $token - The token name.\n///\n@function module-var($module, $token, $prefix: config.$prefix) {\n  @return var(#{create-module-var($module, $token)});\n}\n\n///\n/// Creates a CSS custom property reference for a module token using the\n/// provided value as the variable fallback.\n///\n/// Example:\n/// ```scss\n/// $my-token: module-val(comp, color, red); // => var(--forge-comp-color, red);\n/// $my-other-token: module-val(comp, color, theme.variable(primary)); // => var(--forge-comp-color, var(--forge-theme-primary));\n/// ```\n///\n@function module-val($module, $token, $value, $prefix: config.$prefix) {\n  @return create-var($module, $token, $value, $prefix);\n}\n\n///\n/// Creates a CSS custom property variable reference for a token in the provided module.\n///\n/// Example:\n/// ```scss\n/// $my-var: variable-ref(theme, color); // => var(--forge-theme-color);\n/// ```\n///\n@function variable-ref($module, $token, $value: null, $prefix: config.$prefix) {\n  @return create-var($module, $token, $value, $prefix);\n}\n\n///\n/// Creates a CSS custom property variable reference for a token in the provided module.\n///\n/// Example:\n/// ```scss\n/// $my-var: variable-ref(theme, color); // => var(--forge-theme-color);\n/// ```\n///\n@function variable-ref($module, $token, $value: null, $prefix: config.$prefix) {\n  @return create-var($module, $token, $value, $prefix);\n}\n\n///\n/// Emits CSS custom property declarations for tokens on a per-module basis,\n/// using the provided token map.\n///\n@mixin provide($module-tokens, $tokens, $module, $prefix: config.$prefix) {\n  @each $token-name, $token-value in $tokens {\n    @if not map.get($module-tokens, $token-name) {\n      @error 'Invalid token \"#{$token-name}\" for module \"#{$module}\"';\n    }\n    @include declare-var($module, $token-name, $token-value, $prefix);\n  }\n}\n\n///\n/// Creates a token CSS custom property definition to point one token to another.\n///\n/// If `$new-token` is not a valid token then the provided value will be used verbatim.\n///\n/// Example:\n/// ```sass\n/// #{override(component-name, tokens, color, new-color)}; // => --_component-name-color: var(--_component-name-new-color);\n/// #{override(component-name, tokens, color, red)}; // => --_component-name-color: red;\n/// ```\n///\n/// @param {String} $module - The module name.\n/// @param {String} $module-tokens - The available tokens.\n/// @param {String} $token - The token name to override.\n/// @param {String} $token-or-value - The token name (if exists) or value to point to.\n/// @param {Boolean} $type - The type of token this is. Valid values are `token` and `value`.\n///\n@mixin override($module, $module-tokens, $token, $token-or-value, $type: token) {\n  @if $type == 'token' {\n    @if not map.get($module-tokens, $token) {\n      @error 'Invalid token \"#{$token}\" for module \"#{$module}\"';\n    }\n    @if not map.get($module-tokens, $token-or-value) {\n      @error 'Invalid override token \"#{$token-or-value}\" for module \"#{$module}\"';\n    }\n  }\n\n  // When the \"token\" type is specified, we output a module-level CSS custom property override\n  // that points to the provided token. This ensures that the module is taking ownership of the\n  // token value (which breaks the global cascading of internal tokens) and the module can choose\n  // to provide its own token specific to that override.\n  //\n  // When the \"value\" type is specified, we output a global-level CSS custom property override\n  // that points to the provided value. This keeps the global cascading of internal tokens intact\n  // instead of just overriding the token to a specific unchangeable value.\n  $value: if(\n    $type == 'token' and map.has-key($module-tokens, $token-or-value),\n    module-var($module, $token-or-value),\n    create-var($module, $token, $token-or-value)\n  );\n  #{create-module-var($module, $token)}: #{$value};\n}\n\n///\n/// Creates a new map by inheriting from a base map and overriding/adding values.\n///\n@function inherit-map($base, $overrides) {\n  @return map.merge($base, $overrides);\n}\n\n///\n/// Creates a CSS custom property reference for a module token, using the provided fallback value.\n///\n@function create-var($module, $token, $value: null, $prefix: config.$prefix) {\n  @if $value == null {\n    @return var(--#{$prefix}-#{$module}-#{$token});\n  }\n  @return var(--#{$prefix}-#{$module}-#{$token}, $value);\n}\n\n///\n/// Rounds a number to the specified number of decimal places.\n///\n@function round-fraction($value, $fractionDigits: 0) {\n  $power: math.pow(10, $fractionDigits);\n  @return math.div(math.round($power * $value), $power);\n}\n\n///\n/// Creates a CSS custom property declaration for a module token.\n///\n@mixin declare-var($module, $name, $value, $prefix: config.$prefix) {\n  --#{$prefix}-#{$module}-#{$name}: #{$value};\n}\n\n///\n/// Declares an internal token reference variable for a module.\n///\n/// Example:\n/// ```sass\n/// #{create-module-var(color)}: red; // => --_component-name-color: red;\n/// ```\n///\n/// @param {String} $token - The token name.\n///\n@function create-module-var($module, $token) {\n  @return --_#{$module}-#{$token};\n}\n\n///\n/// Flattens multiple maps into a single map.\n///\n@function flatten($maps...) {\n  $merged: ();\n  @each $map in $maps {\n    $merged: map.merge($merged, $map);\n  }\n  @return $merged;\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use 'sass:math';\n@use '../core/config';\n@use '../tokens/theme/tokens';\n@use '../tokens/theme/color-emphasis';\n@use '../utils';\n\n@forward './utils';\n\n///\n/// Emits custom property declarations for all default theme tokens.\n///\n@mixin properties {\n  @each $token-name, $token-value in tokens.$tokens {\n    @include utils.declare-var(theme, $token-name, $token-value);\n  }\n}\n\n///\n/// Emits custom property declarations for all dark theme tokens.\n///\n@mixin properties-dark {\n  @each $token-name, $token-value in tokens.$tokens-dark {\n    @include utils.declare-var(theme, $token-name, $token-value);\n  }\n}\n\n///\n/// Emits custom property declarations for all color-emphasis tokens that used as part of the theme composition.\n///\n@mixin color-emphasis-properties {\n  @each $emphasis, $value in color-emphasis.$color-emphasis {\n    @include utils.declare-var(color-emphasis, $emphasis, math.div($value, 100%));\n  }\n}\n\n///\n/// Generates utility classes for each theme token as both `color` and `background-color` styles separately.\n///\n@mixin classes {\n  @each $token, $value in tokens.$tokens {\n    .#{config.$prefix}-color--#{$token} {\n      color: #{variable($token)};\n    }\n    .#{config.$prefix}-background--#{$token} {\n      background-color: #{variable($token)};\n    }\n  }\n}\n\n///\n/// Gets a CSS custom property declaration for a specific theme token, with its token value as the fallback value\n///\n@function variable($key, $prefix: config.$prefix) {\n  @return utils.variable(theme, tokens.$tokens, $key, $prefix);\n}\n\n///\n/// Generates CSS custom property declarations for the provided theme tokens.\n///\n@mixin provide($tokens, $prefix: config.$prefix) {\n  @include utils.provide(tokens.$tokens, $tokens, theme, $prefix);\n}\n\n///\n/// Gets a theme emphasis value by semantic name.\n///\n/// Valid names are `highest`, `higher`, `high`, `medium-high`, `medium`, `medium-low`, `low`, `lower`, and `lowest`.\n///\n@function emphasis($emphasis) {\n  @return math.div(color-emphasis.value($emphasis), 100%);\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use '../../utils';\n@use './tokens.brand' as brand;\n@use './tokens.core' as core;\n@use './tokens.surface' as surface;\n@use './tokens.text' as text;\n@use './tokens.status' as status;\n@use './tokens.utilities' as utilities;\n\n// Forge default (light) theme\n$tokens: utils.flatten(brand.$tokens, core.$tokens, surface.$tokens, text.$tokens, status.$tokens, utilities.$tokens);\n\n// Forge dark theme\n$tokens-dark: utils.flatten(brand.$tokens-dark, core.$tokens-dark, surface.$tokens-dark, text.$tokens-dark, status.$tokens-dark, utilities.$tokens-dark);\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use '../../utils';\n@use './token-utils';\n@use './tokens.surface' as surface;\n@use '../color-palette';\n\n// Light\n$tokens: (\n  brand: color-palette.$indigo-800,\n  on-brand: color-palette.$white\n);\n\n// Dark\n$tokens-dark: (\n  brand: color-palette.$grey-900,\n  on-brand: color-palette.$white\n);\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use '../../theme/utils' as theme-utils;\n@use '../../theme/color-utils';\n@use './color-emphasis';\n\n///\n/// Computes the dependent theme colors from the provided theme color value.\n///\n/// @param {String} $name - The name of the theme color\n/// @param {Color} $color - The theme color\n/// @param {Color} $surface - The base surface color\n/// @return {Map} - The computed theme map\n///\n@function get-color-theme($name, $color, $surface) {\n  @if not theme-utils.is-color($color) {\n    @error 'The value for \"#{$name}\" must be a color type.';\n  }\n\n  // The container colors are the provided color mixed with the surface color at lower emphasis levels\n  $container-high: theme-utils.hexify($color, $surface, color-emphasis.value(medium-low));\n  $container: theme-utils.hexify($color, $surface, color-emphasis.value(low));\n  $container-low: theme-utils.hexify($color, $surface, color-emphasis.value(lower));\n  $container-minimum: theme-utils.hexify($color, $surface, color-emphasis.value(minimum));\n\n  // The on-color is the contrast color against the provided color\n  $on-color: theme-utils.contrast($color);\n\n  // The on-container colors are the contrast color for the provided color mixed with the\n  // container color at a lower emphasis to let the contrast color bleed through for\n  // increased contrast against the lower emphasis container color\n  $on-container-high: theme-utils.contrast($container-high);\n  $on-container: theme-utils.hexify($color, theme-utils.contrast($container), color-emphasis.value(medium));\n  $on-container-low: theme-utils.hexify($color, theme-utils.contrast($container-low), color-emphasis.value(medium));\n  $on-container-minimum: theme-utils.hexify($color, theme-utils.contrast($container-minimum), color-emphasis.value(medium));\n\n  // Compute contrast ratio for foreground colors against their corresponding background\n  $minimum-ratio: 4.5;\n  @if color-utils.contrast-ratio($color, $on-color) < $minimum-ratio {\n    @warn 'The contrast ratio  between \"#{$name}\" and \"on-#{$name}\" is less than 4.5:1.';\n  }\n  @if color-utils.contrast-ratio($container, $on-container) < $minimum-ratio {\n    @warn 'The contrast ratio  between \"#{$name}-container\" and \"on-#{$name}-container\" is less than 4.5:1.';\n  }\n  @if color-utils.contrast-ratio($container-high, $on-container-high) < $minimum-ratio {\n    @warn 'The contrast ratio  between \"#{$name}-container-high\" and \"on-#{$name}-container-high\" is less than 4.5:1.';\n  }\n  @if color-utils.contrast-ratio($container-low, $on-container-low) < $minimum-ratio {\n    @warn 'The contrast ratio  between \"#{$name}-container-low\" and \"on-#{$name}-container-low\" is less than 4.5:1.';\n  }\n  @if color-utils.contrast-ratio($container-minimum, $on-container-minimum) < $minimum-ratio {\n    @warn 'The contrast ratio  between \"#{$name}-container-minimum\" and \"on-#{$name}-container-minimum\" is less than 4.5:1.';\n  }\n\n  @return (\n    #{$name}: $color,\n    #{$name}-container-minimum: $container-minimum,\n    #{$name}-container-low: $container-low,\n    #{$name}-container: $container,\n    #{$name}-container-high: $container-high,\n    on-#{$name}: $on-color,\n    on-#{$name}-container-minimum: $on-container-minimum,\n    on-#{$name}-container-low: $on-container-low,\n    on-#{$name}-container: $on-container,\n    on-#{$name}-container-high: $on-container-high\n  );\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:meta';\n@use 'sass:string';\n@use 'sass:color';\n@use '../utils';\n@use './color-utils';\n\n///\n/// Returns a new color with the same hue and saturation as the input color, but with a different lightness value.\n///\n/// Example:\n/// scale(#ff0000, 50%) => #ff6060\n///\n/// @param {Color} $color - The input color.\n/// @param {Number} $lightness - The desired lightness percentage to scale `$color` by. Specified as a percentage number between 0 and 100.\n/// @return {Color} - The new color with the same hue and saturation as the input color, but with a different lightness value.\n///\n@function scale($color, $lightness) {\n  @return color.scale($color, $lightness: 100 - $lightness);\n}\n\n///\n/// Creates a new color by applying the specified emphasis to the input color via the alpha channel.\n///\n/// Example:\n/// emphasized(#ff0000, 50%) => rgba(255, 0, 0, 0.5)\n///\n/// @param {Color} $color - The input color.\n/// @param {Number} $alpha - The desired opacity to apply to `$color`.\n/// @return {Color} - The input color, but with an alpha channel value in `rgba()` format.\n///\n@function emphasized($color, $emphasis) {\n  @return rgba($color, $emphasis);\n}\n\n///\n/// Computes the contrast color for the provided color.\n///\n/// Example:\n/// contrast(#ff0000) => #ffffff\n///\n/// @param {Color} $color - The input color.\n/// @param {Color} $light - The light color to use for contrast. Default to `#ffffff`.\n/// @param {Color} $dark - The dark color to use for contrast. Default to `#000000`.\n/// @return {Color} - The contrast color for the provided color.\n///\n@function contrast($color, $alpha: null, $light: #ffffff, $dark: #000000) {\n  $contrast-color: if(color-utils.contrast-tone($color) == 'dark', $dark, $light);\n  @if $alpha != null {\n    @return emphasized($contrast-color, $alpha);\n  }\n  @return $contrast-color;\n}\n\n///\n/// Converts a color with an opacity value on top of a specific background color to an opaque hex color.\n///\n@function hexify($color, $background, $alpha: 100%) {\n  @return if($alpha == 100%, color.mix($background, $color, $alpha), color.mix($background, $color, 100 - $alpha));\n}\n\n///\n/// Determines if the provided value is a `color` type or not.\n///\n@function is-color($value) {\n  @return meta.type-of($value) == color;\n}\n\n///\n/// Computes the hue, saturation, lightness (and optionally alpha) values for the provided color and returns a string in HSL format.\n///\n@function hsl-values($color, $with-alpha: false) {\n  $value: utils.round-fraction(color.hue($color), 2) utils.round-fraction(color.saturation($color), 2) utils.round-fraction(color.lightness($color), 2);\n  @if $with-alpha {\n    $value: string.unquote($value + ' / ' + alpha($color));\n  }\n  @return $value;\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:meta';\n@use 'sass:math';\n@use 'sass:color';\n\n@function _linear-channel-value($channel-value) {\n  $normalized-channel-value: math.div($channel-value, 255);\n  @if $normalized-channel-value < 0.03928 {\n    @return math.div($normalized-channel-value, 12.92);\n  }\n\n  @return math.pow(math.div($normalized-channel-value + 0.055, 1.055), 2.4);\n}\n\n// Calculate the luminance for a color.\n// See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n@function luminance($color) {\n  $red: _linear-channel-value(color.red($color));\n  $green: _linear-channel-value(color.green($color));\n  $blue: _linear-channel-value(color.blue($color));\n\n  @return 0.2126 * $red + 0.7152 * $green + 0.0722 * $blue;\n}\n\n// Calculate the contrast ratio between two colors.\n// See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n@function contrast-ratio($back, $front) {\n  $backLum: luminance($back) + 0.05;\n  $foreLum: luminance($front) + 0.05;\n  @return math.div(math.max($backLum, $foreLum), math.min($backLum, $foreLum));\n}\n\n// Determine whether the color is 'light' or 'dark'.\n@function tone($color) {\n  @if $color == 'dark' or $color == 'light' {\n    @return $color;\n  }\n\n  @if meta.type-of($color) != 'color' {\n    @warn '#{$color} is not a color. Falling back to \"dark\" tone.';\n    @return 'dark';\n  }\n\n  $minimumContrast: 3.1;\n  $lightContrast: contrast-ratio($color, white);\n  $darkContrast: contrast-ratio($color, rgb(black, 0.87));\n\n  @if $lightContrast < $minimumContrast and $darkContrast > $lightContrast {\n    @return 'light';\n  } @else {\n    @return 'dark';\n  }\n}\n\n// Determine whether to use dark or light text on top of given color to meet accessibility standards for contrast.\n// Returns 'dark' if the given color is light and 'light' if the given color is dark.\n@function contrast-tone($color) {\n  @return if(tone($color) == 'dark', 'light', 'dark');\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n\n$color-emphasis-scale: (\n  '004': 4%,\n  '008': 8%,\n  '012': 12%,\n  '024': 24%,\n  '038': 38%,\n  '054': 54%,\n  '060': 60%,\n  '065': 65%,\n  '070': 70%,\n  '080': 80%,\n  '087': 87%\n);\n\n$color-emphasis: (\n  highest: map.get($color-emphasis-scale, '087'),\n  inverse: map.get($color-emphasis-scale, '080'),\n  higher: map.get($color-emphasis-scale, '070'),\n  high: map.get($color-emphasis-scale, '065'),\n  medium-high: map.get($color-emphasis-scale, '060'),\n  medium: map.get($color-emphasis-scale, '054'),\n  medium-low: map.get($color-emphasis-scale, '038'),\n  low: map.get($color-emphasis-scale, '024'),\n  lower: map.get($color-emphasis-scale, '012'),\n  lowest: map.get($color-emphasis-scale, '008'),\n  minimum: map.get($color-emphasis-scale, '004')\n);\n\n@function value($emphasis) {\n  @return map.get($color-emphasis, $emphasis);\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use '../../elevation';\n@use '../color-palette';\n\n// Light\n$tokens: (\n  surface: color-palette.$neutral-50,\n  surface-inverse: #333333,\n  surface-container: color-palette.$grey-300,\n  surface-container-minimum: color-palette.$grey-100,\n  surface-container-low: #ebebeb,\n  surface-container-medium: #c2c2c2,\n  surface-container-high: color-palette.$grey-500,\n  surface-dim: color-palette.$grey-50,\n  surface-bright: color-palette.$neutral-50,\n  surface-bright-shadow: elevation.value(2),\n  on-surface: color-palette.$black,\n  on-surface-inverse: color-palette.$white,\n  on-surface-container: color-palette.$black,\n  on-surface-container-minimum: color-palette.$black,\n  on-surface-container-low: color-palette.$black,\n  on-surface-container-medium: color-palette.$black,\n  on-surface-container-high: color-palette.$black\n);\n\n// Dark\n$tokens-dark: (\n  surface: color-palette.$neutral-900,\n  surface-inverse: #d5d5d5,\n  surface-container: #454545,\n  surface-container-minimum: #343434,\n  surface-container-low: #3d3d3d,\n  surface-container-medium: #7c7c7c,\n  surface-container-high: color-palette.$grey-500,\n  surface-dim: color-palette.$grey-900,\n  surface-bright: #343434,\n  surface-bright-shadow: elevation.value(16),\n  on-surface: color-palette.$white,\n  on-surface-inverse: color-palette.$black,\n  on-surface-container: color-palette.$white,\n  on-surface-container-minimum: color-palette.$white,\n  on-surface-container-low: color-palette.$white,\n  on-surface-container-medium: color-palette.$white,\n  on-surface-container-high: color-palette.$black\n);\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n@use '../utils';\n@use '../core/config';\n@use '../tokens/elevation/tokens';\n\n///\n/// Emits custom property declarations for all default theme tokens.\n///\n@mixin properties {\n  @each $token-name, $token-value in tokens.$tokens {\n    @include utils.declare-var(elevation, $token-name, $token-value);\n  }\n}\n\n///\n/// Emits custom property declarations for all z-index theme tokens.\n///\n@mixin z-index-properties {\n  @each $token-name, $token-value in tokens.$z-index-tokens {\n    @include utils.declare-var(z-index, $token-name, $token-value);\n  }\n}\n\n///\n/// Returns a an elevation value specified by the provided elevation z-value.\n///\n@function value($level) {\n  @return string.unquote(tokens.get($level));\n}\n\n///\n/// Sets a `box-shadow` style specified by the provided elevation z-value.\n///\n@mixin box-shadow($level) {\n  box-shadow: #{value($level)};\n}\n\n///\n/// Sets the z-index of an element based on the level provided.\n///\n/// All z-index values are set as CSS custom properties, so they can be overridden globally.\n///\n@mixin z-index($level) {\n  $value: map.get(tokens.$z-index-tokens, $level);\n  z-index: var(--#{config.$prefix}-z-index-#{$level}, #{$value});\n}\n\n///\n/// Returns a global z-index CSS custom property reference (with the fallback value) specified by the provided level.\n///\n/// @param {Number} $level - The z-index level to return.\n///\n@function z-index-variable($level) {\n  @return utils.variable(z-index, tokens.$z-index-tokens, $level);\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n\n/// Layering values to define z-index ranges for common groups of UI elements\n/// to ensure floating elements overlay correctly.\n$z-index-tokens: (\n  surface: 1,\n  header: 4,\n  backdrop: 7,\n  dialog: 8,\n  notification: 9,\n  popup: 10,\n  tooltip: 11\n) !default;\n\n$baseline-color: black !default;\n$umbra-color: rgba($baseline-color, 0.2) !default;\n$penumbra-color: rgba($baseline-color, 0.14) !default;\n$ambient-color: rgba($baseline-color, 0.12) !default;\n\n$tokens: (\n  0: '0px 0px 0px 0px #{$umbra-color}, 0px 0px 0px 0px #{$penumbra-color}, 0px 0px 0px 0px #{$ambient-color}',\n  1: '0px 2px 1px -1px #{$umbra-color}, 0px 1px 1px 0px #{$penumbra-color}, 0px 1px 3px 0px #{$ambient-color}',\n  2: '0px 3px 1px -2px #{$umbra-color}, 0px 2px 2px 0px #{$penumbra-color}, 0px 1px 5px 0px #{$ambient-color}',\n  3: '0px 3px 3px -2px #{$umbra-color}, 0px 3px 4px 0px #{$penumbra-color}, 0px 1px 8px 0px #{$ambient-color}',\n  4: '0px 2px 4px -1px #{$umbra-color}, 0px 4px 5px 0px #{$penumbra-color}, 0px 1px 10px 0px #{$ambient-color}',\n  5: '0px 3px 5px -1px #{$umbra-color}, 0px 5px 8px 0px #{$penumbra-color}, 0px 1px 14px 0px #{$ambient-color}',\n  6: '0px 3px 5px -1px #{$umbra-color}, 0px 6px 10px 0px #{$penumbra-color}, 0px 1px 18px 0px #{$ambient-color}',\n  7: '0px 4px 5px -2px #{$umbra-color}, 0px 7px 10px 1px #{$penumbra-color}, 0px 2px 16px 1px #{$ambient-color}',\n  8: '0px 5px 5px -3px #{$umbra-color}, 0px 8px 10px 1px #{$penumbra-color}, 0px 3px 14px 2px #{$ambient-color}',\n  9: '0px 5px 6px -3px #{$umbra-color}, 0px 9px 12px 1px #{$penumbra-color}, 0px 3px 16px 2px #{$ambient-color}',\n  10: '0px 6px 6px -3px #{$umbra-color}, 0px 10px 14px 1px #{$penumbra-color}, 0px 4px 18px 3px #{$ambient-color}',\n  11: '0px 6px 7px -4px #{$umbra-color}, 0px 11px 15px 1px #{$penumbra-color}, 0px 4px 20px 3px #{$ambient-color}',\n  12: '0px 7px 8px -4px #{$umbra-color}, 0px 12px 17px 2px #{$penumbra-color}, 0px 5px 22px 4px #{$ambient-color}',\n  13: '0px 7px 8px -4px #{$umbra-color}, 0px 13px 19px 2px #{$penumbra-color}, 0px 5px 24px 4px #{$ambient-color}',\n  14: '0px 7px 9px -4px #{$umbra-color}, 0px 14px 21px 2px #{$penumbra-color}, 0px 5px 26px 4px #{$ambient-color}',\n  15: '0px 8px 9px -5px #{$umbra-color}, 0px 15px 22px 2px #{$penumbra-color}, 0px 6px 28px 5px #{$ambient-color}',\n  16: '0px 8px 10px -5px #{$umbra-color}, 0px 16px 24px 2px #{$penumbra-color}, 0px 6px 30px 5px #{$ambient-color}',\n  17: '0px 8px 11px -5px #{$umbra-color}, 0px 17px 26px 2px #{$penumbra-color}, 0px 6px 32px 5px #{$ambient-color}',\n  18: '0px 9px 11px -5px #{$umbra-color}, 0px 18px 28px 2px #{$penumbra-color}, 0px 7px 34px 6px #{$ambient-color}',\n  19: '0px 9px 12px -6px #{$umbra-color}, 0px 19px 29px 2px #{$penumbra-color}, 0px 7px 36px 6px #{$ambient-color}',\n  20: '0px 10px 13px -6px #{$umbra-color}, 0px 20px 31px 3px #{$penumbra-color}, 0px 8px 38px 7px #{$ambient-color}',\n  21: '0px 10px 13px -6px #{$umbra-color}, 0px 21px 33px 3px #{$penumbra-color}, 0px 8px 40px 7px #{$ambient-color}',\n  22: '0px 10px 14px -6px #{$umbra-color}, 0px 22px 35px 3px #{$penumbra-color}, 0px 8px 42px 7px #{$ambient-color}',\n  23: '0px 11px 14px -7px #{$umbra-color}, 0px 23px 36px 3px #{$penumbra-color}, 0px 9px 44px 8px #{$ambient-color}',\n  24: '0px 11px 15px -7px #{$umbra-color}, 0px 24px 38px 3px #{$penumbra-color}, 0px 9px 46px 8px #{$ambient-color}'\n) !default;\n\n@function get($key) {\n  @return map.get($tokens, $key);\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@forward './extended-color-palette';\n@forward './material-color-palette';\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n$white: #ffffff;\n$black: #000000;\n\n$neutral-50: #ffffff;\n$neutral-100: #f9f9f9;\n$neutral-200: #dddddd;\n$neutral-300: #c1c1c1;\n$neutral-400: #a6a6a6;\n$neutral-500: #8b8b8b;\n$neutral-600: #727272;\n$neutral-700: #595959;\n$neutral-800: #424242;\n$neutral-900: #2c2c2c;\n\n$crimson-50: #fdeaee;\n$crimson-100: #fbcad2;\n$crimson-200: #ea959b;\n$crimson-300: #de6c74;\n$crimson-400: #e84853;\n$crimson-500: #ed323b;\n$crimson-600: #de2839;\n$crimson-700: #cc1d33;\n$crimson-800: #bf152c;\n$crimson-900: #b00020;\n\n$burnt-orange-50: #fbe9e6;\n$burnt-orange-100: #fdccb9;\n$burnt-orange-200: #fcac8c;\n$burnt-orange-300: #fa8c5d;\n$burnt-orange-400: #f87439;\n$burnt-orange-500: #f75d0e;\n$burnt-orange-600: #ec5709;\n$burnt-orange-700: #df5003;\n$burnt-orange-800: #d14900;\n$burnt-orange-900: #b93c00;\n\n$ruddy-pink-50: #fbe1e5;\n$ruddy-pink-100: #f5b4c0;\n$ruddy-pink-200: #ec8396;\n$ruddy-pink-300: #e2526f;\n$ruddy-pink-400: #d82c52;\n$ruddy-pink-500: #cf0038;\n$ruddy-pink-600: #c00038;\n$ruddy-pink-700: #ac0035;\n$ruddy-pink-800: #990033;\n$ruddy-pink-900: #78002f;\n\n$apricot-50: #fceae3;\n$apricot-100: #fbcfb0;\n$apricot-200: #f8b27c;\n$apricot-300: #f29645;\n$apricot-400: #ed830b;\n$apricot-500: #e87200;\n$apricot-600: #de6c00;\n$apricot-700: #d16400;\n$apricot-800: #c45c00;\n$apricot-900: #ad4e00;\n\n$dollar-bill-50: #f2f8ec;\n$dollar-bill-100: #deedcf;\n$dollar-bill-200: #c8e1b2;\n$dollar-bill-300: #b4d494;\n$dollar-bill-400: #a4cb7e;\n$dollar-bill-500: #95c269;\n$dollar-bill-600: #86b260;\n$dollar-bill-700: #749e55;\n$dollar-bill-800: #63894c;\n$dollar-bill-900: #46673b;\n\n$maroon-50: #f0e2e4;\n$maroon-100: #dcb7bb;\n$maroon-200: #bf868d;\n$maroon-300: #ad5661;\n$maroon-400: #92313c;\n$maroon-500: #7f0d1a;\n$maroon-600: #6c0913;\n$maroon-700: #62070f;\n$maroon-800: #4f0308;\n$maroon-900: #31050a;\n$maroon-a100: #ff636f;\n$maroon-a200: #ff3540;\n$maroon-a300: #991100;\n$maroon-a700: #771100;\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$red-50: #ffebee;\n$red-100: #ffcdd2;\n$red-200: #ef9a9a;\n$red-300: #e57373;\n$red-400: #ef5350;\n$red-500: #f44336;\n$red-600: #e53935;\n$red-700: #d32f2f;\n$red-800: #c62828;\n$red-900: #b71c1c;\n$red-a100: #ff8a80;\n$red-a200: #ff5252;\n$red-a400: #ff1744;\n$red-a700: #d50000;\n\n$pink-50: #fce4ec;\n$pink-100: #f8bbd0;\n$pink-200: #f48fb1;\n$pink-300: #f06292;\n$pink-400: #ec407a;\n$pink-500: #e91e63;\n$pink-600: #d81b60;\n$pink-700: #c2185b;\n$pink-800: #ad1457;\n$pink-900: #880e4f;\n$pink-a100: #ff80ab;\n$pink-a200: #ff4081;\n$pink-a400: #f50057;\n$pink-a700: #c51162;\n\n$purple-50: #f3e5f5;\n$purple-100: #e1bee7;\n$purple-200: #ce93d8;\n$purple-300: #ba68c8;\n$purple-400: #ab47bc;\n$purple-500: #9c27b0;\n$purple-600: #8e24aa;\n$purple-700: #7b1fa2;\n$purple-800: #6a1b9a;\n$purple-900: #4a148c;\n$purple-a100: #ea80fc;\n$purple-a200: #e040fb;\n$purple-a400: #d500f9;\n$purple-a700: #a0f;\n\n$deep-purple-50: #ede7f6;\n$deep-purple-100: #d1c4e9;\n$deep-purple-200: #b39ddb;\n$deep-purple-300: #9575cd;\n$deep-purple-400: #7e57c2;\n$deep-purple-500: #673ab7;\n$deep-purple-600: #5e35b1;\n$deep-purple-700: #512da8;\n$deep-purple-800: #4527a0;\n$deep-purple-900: #311b92;\n$deep-purple-a100: #b388ff;\n$deep-purple-a200: #7c4dff;\n$deep-purple-a400: #651fff;\n$deep-purple-a700: #6200ea;\n\n$indigo-50: #e8eaf6;\n$indigo-100: #c5cae9;\n$indigo-200: #9fa8da;\n$indigo-300: #7986cb;\n$indigo-400: #5c6bc0;\n$indigo-500: #3f51b5;\n$indigo-600: #3949ab;\n$indigo-700: #303f9f;\n$indigo-800: #283593;\n$indigo-900: #1a237e;\n$indigo-a100: #8c9eff;\n$indigo-a200: #536dfe;\n$indigo-a400: #3d5afe;\n$indigo-a700: #304ffe;\n\n$blue-50: #e3f2fd;\n$blue-100: #bbdefb;\n$blue-200: #90caf9;\n$blue-300: #64b5f6;\n$blue-400: #42a5f5;\n$blue-500: #2196f3;\n$blue-600: #1e88e5;\n$blue-700: #1976d2;\n$blue-800: #1565c0;\n$blue-900: #0d47a1;\n$blue-a100: #82b1ff;\n$blue-a200: #448aff;\n$blue-a400: #2979ff;\n$blue-a700: #2962ff;\n\n$light-blue-50: #e1f5fe;\n$light-blue-100: #b3e5fc;\n$light-blue-200: #81d4fa;\n$light-blue-300: #4fc3f7;\n$light-blue-400: #29b6f6;\n$light-blue-500: #03a9f4;\n$light-blue-600: #039be5;\n$light-blue-700: #0288d1;\n$light-blue-800: #0277bd;\n$light-blue-900: #01579b;\n$light-blue-a100: #80d8ff;\n$light-blue-a200: #40c4ff;\n$light-blue-a400: #00b0ff;\n$light-blue-a700: #0091ea;\n\n$cyan-50: #e0f7fa;\n$cyan-100: #b2ebf2;\n$cyan-200: #80deea;\n$cyan-300: #4dd0e1;\n$cyan-400: #26c6da;\n$cyan-500: #00bcd4;\n$cyan-600: #00acc1;\n$cyan-700: #0097a7;\n$cyan-800: #00838f;\n$cyan-900: #006064;\n$cyan-a100: #84ffff;\n$cyan-a200: #18ffff;\n$cyan-a400: #00e5ff;\n$cyan-a700: #00b8d4;\n\n$teal-50: #e0f2f1;\n$teal-100: #b2dfdb;\n$teal-200: #80cbc4;\n$teal-300: #4db6ac;\n$teal-400: #26a69a;\n$teal-500: #009688;\n$teal-600: #00897b;\n$teal-700: #00796b;\n$teal-800: #00695c;\n$teal-900: #004d40;\n$teal-a100: #a7ffeb;\n$teal-a200: #64ffda;\n$teal-a400: #1de9b6;\n$teal-a700: #00bfa5;\n\n$green-50: #e8f5e9;\n$green-100: #c8e6c9;\n$green-200: #a5d6a7;\n$green-300: #81c784;\n$green-400: #66bb6a;\n$green-500: #4caf50;\n$green-600: #43a047;\n$green-700: #388e3c;\n$green-800: #2e7d32;\n$green-900: #1b5e20;\n$green-a100: #b9f6ca;\n$green-a200: #69f0ae;\n$green-a400: #00e676;\n$green-a700: #00c853;\n\n$light-green-50: #f1f8e9;\n$light-green-100: #dcedc8;\n$light-green-200: #c5e1a5;\n$light-green-300: #aed581;\n$light-green-400: #9ccc65;\n$light-green-500: #8bc34a;\n$light-green-600: #7cb342;\n$light-green-700: #689f38;\n$light-green-800: #558b2f;\n$light-green-900: #33691e;\n$light-green-a100: #ccff90;\n$light-green-a200: #b2ff59;\n$light-green-a400: #76ff03;\n$light-green-a700: #64dd17;\n\n$lime-50: #f9fbe7;\n$lime-100: #f0f4c3;\n$lime-200: #e6ee9c;\n$lime-300: #dce775;\n$lime-400: #d4e157;\n$lime-500: #cddc39;\n$lime-600: #c0ca33;\n$lime-700: #afb42b;\n$lime-800: #9e9d24;\n$lime-900: #827717;\n$lime-a100: #f4ff81;\n$lime-a200: #eeff41;\n$lime-a400: #c6ff00;\n$lime-a700: #aeea00;\n\n$yellow-50: #fffde7;\n$yellow-100: #fff9c4;\n$yellow-200: #fff59d;\n$yellow-300: #fff176;\n$yellow-400: #ffee58;\n$yellow-500: #ffeb3b;\n$yellow-600: #fdd835;\n$yellow-700: #fbc02d;\n$yellow-800: #f9a825;\n$yellow-900: #f57f17;\n$yellow-a100: #ffff8d;\n$yellow-a200: #ff0;\n$yellow-a400: #ffea00;\n$yellow-a700: #ffd600;\n\n$amber-50: #fff8e1;\n$amber-100: #ffecb3;\n$amber-200: #ffe082;\n$amber-300: #ffd54f;\n$amber-400: #ffca28;\n$amber-500: #ffc107;\n$amber-600: #ffb300;\n$amber-700: #ffa000;\n$amber-800: #ff8f00;\n$amber-900: #ff6f00;\n$amber-a100: #ffe57f;\n$amber-a200: #ffd740;\n$amber-a400: #ffc400;\n$amber-a700: #ffab00;\n\n$orange-50: #fff3e0;\n$orange-100: #ffe0b2;\n$orange-200: #ffcc80;\n$orange-300: #ffb74d;\n$orange-400: #ffa726;\n$orange-500: #ff9800;\n$orange-600: #fb8c00;\n$orange-700: #f57c00;\n$orange-800: #ef6c00;\n$orange-900: #e65100;\n$orange-a100: #ffd180;\n$orange-a200: #ffab40;\n$orange-a400: #ff9100;\n$orange-a700: #ff6d00;\n\n$deep-orange-50: #fbe9e7;\n$deep-orange-100: #ffccbc;\n$deep-orange-200: #ffab91;\n$deep-orange-300: #ff8a65;\n$deep-orange-400: #ff7043;\n$deep-orange-500: #ff5722;\n$deep-orange-600: #f4511e;\n$deep-orange-700: #e64a19;\n$deep-orange-800: #d84315;\n$deep-orange-900: #bf360c;\n$deep-orange-a100: #ff9e80;\n$deep-orange-a200: #ff6e40;\n$deep-orange-a400: #ff3d00;\n$deep-orange-a700: #dd2c00;\n\n$brown-50: #efebe9;\n$brown-100: #d7ccc8;\n$brown-200: #bcaaa4;\n$brown-300: #a1887f;\n$brown-400: #8d6e63;\n$brown-500: #795548;\n$brown-600: #6d4c41;\n$brown-700: #5d4037;\n$brown-800: #4e342e;\n$brown-900: #3e2723;\n\n$grey-50: #fafafa;\n$grey-100: #f5f5f5;\n$grey-200: #eee;\n$grey-300: #e0e0e0;\n$grey-400: #bdbdbd;\n$grey-500: #9e9e9e;\n$grey-600: #757575;\n$grey-700: #616161;\n$grey-800: #424242;\n$grey-900: #212121;\n\n$blue-grey-50: #eceff1;\n$blue-grey-100: #cfd8dc;\n$blue-grey-200: #b0bec5;\n$blue-grey-300: #90a4ae;\n$blue-grey-400: #78909c;\n$blue-grey-500: #607d8b;\n$blue-grey-600: #546e7a;\n$blue-grey-700: #455a64;\n$blue-grey-800: #37474f;\n$blue-grey-900: #263238;\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use '../color-palette';\n\n// Light\n$tokens: (\n  primary: color-palette.$indigo-500,\n  primary-container-minimum: #f7f8fc,\n  primary-container-low: color-palette.$indigo-50,\n  primary-container: #d1d5ed,\n  primary-container-high: #b6bde3,\n  on-primary: color-palette.$white,\n  on-primary-container-minimum: #222c62,\n  on-primary-container-low: #222c62,\n  on-primary-container: #222c62,\n  on-primary-container-high: color-palette.$black,\n  secondary: color-palette.$amber-500,\n  secondary-container-minimum: #fffdf5,\n  secondary-container-low: color-palette.$amber-50,\n  secondary-container: #fff0c3,\n  secondary-container-high: #ffe7a1,\n  on-secondary: color-palette.$black,\n  on-secondary-container-minimum: #8a6804,\n  on-secondary-container-low: #8a6804,\n  on-secondary-container: #8a6804,\n  on-secondary-container-high: color-palette.$black,\n  tertiary: color-palette.$indigo-a400,\n  tertiary-container-minimum: #f7f8ff,\n  tertiary-container-low: #e8ebff,\n  tertiary-container: #d0d7ff,\n  tertiary-container-high: #b5c0ff,\n  on-tertiary: color-palette.$white,\n  on-tertiary-container-minimum: #213189,\n  on-tertiary-container-low: #213189,\n  on-tertiary-container: #213189,\n  on-tertiary-container-high: color-palette.$black\n);\n\n// Dark\n$tokens-dark: (\n  primary: color-palette.$indigo-a100,\n  primary-container-minimum: #303134,\n  primary-container-low: #383a45,\n  primary-container: #43475f,\n  primary-container-high: #50577c,\n  on-primary: color-palette.$black,\n  on-primary-container-minimum: #c1cbff,\n  on-primary-container-low: #c1cbff,\n  on-primary-container: #c1cbff,\n  on-primary-container-high: color-palette.$white,\n  secondary: color-palette.$amber-200,\n  secondary-container-minimum: #34332f,\n  secondary-container-low: #454236,\n  secondary-container: #5f5741,\n  secondary-container-high: #7c704d,\n  on-secondary: color-palette.$black,\n  on-secondary-container-minimum: #ffeebc,\n  on-secondary-container-low: #ffeebc,\n  on-secondary-container: #ffeebc,\n  on-secondary-container-high: color-palette.$white,\n  tertiary: color-palette.$amber-200,\n  tertiary-container-minimum: #34332f,\n  tertiary-container-low: #454236,\n  tertiary-container: #5f5741,\n  tertiary-container-high: #7c704d,\n  on-tertiary: color-palette.$black,\n  on-tertiary-container-minimum: #ffeebc,\n  on-tertiary-container-low: #ffeebc,\n  on-tertiary-container: #ffeebc,\n  on-tertiary-container-high: color-palette.$white\n);\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use './color-emphasis';\n@use './tokens.surface' as surface;\n\n// Light\n$tokens: (\n  text-high: rgba(#000, color-emphasis.value(highest)),\n  text-high-inverse: rgba(#fff, color-emphasis.value(highest)),\n  text-medium: rgba(#000, color-emphasis.value(medium-high)),\n  text-medium-inverse: rgba(#fff, color-emphasis.value(medium-high)),\n  text-low: rgba(#000, color-emphasis.value(medium-low)),\n  text-low-inverse: rgba(#fff, color-emphasis.value(medium-low)),\n  text-lowest: rgba(#000, color-emphasis.value(lower)),\n  text-lowest-inverse: rgba(#fff, color-emphasis.value(lower))\n);\n\n// Dark\n$tokens-dark: (\n  text-high: rgba(#fff, color-emphasis.value(highest)),\n  text-high-inverse: rgba(#000, color-emphasis.value(highest)),\n  text-medium: rgba(#fff, color-emphasis.value(medium-high)),\n  text-medium-inverse: rgba(#000, color-emphasis.value(medium-high)),\n  text-low: rgba(#fff, color-emphasis.value(medium-low)),\n  text-low-inverse: rgba(#000, color-emphasis.value(medium-low)),\n  text-lowest: rgba(#fff, color-emphasis.value(lower)),\n  text-lowest-inverse: rgba(#000, color-emphasis.value(lower))\n);\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use '../color-palette';\n\n// Light\n$tokens: (\n  success: color-palette.$green-800,\n  success-container-minimum: #f7faf7,\n  success-container-low: #e6efe6,\n  success-container: #cde0ce,\n  success-container-high: #b0ceb1,\n  on-success: color-palette.$white,\n  on-success-container-minimum: #19441b,\n  on-success-container-low: #19441b,\n  on-success-container: #19441b,\n  on-success-container-high: color-palette.$black,\n  error: color-palette.$crimson-900,\n  error-container-minimum: #fcf5f6,\n  error-container-low: #f6e0e4,\n  error-container: #ecc2c9,\n  error-container-high: #e19eaa,\n  on-error: color-palette.$white,\n  on-error-container-minimum: #5f0011,\n  on-error-container-low: #5f0011,\n  on-error-container: #5f0011,\n  on-error-container-high: color-palette.$black,\n  warning: color-palette.$burnt-orange-800,\n  warning-container-minimum: #fdf8f5,\n  warning-container-low: #f9e9e0,\n  warning-container: #f4d3c2,\n  warning-container-high: #eeba9e,\n  on-warning: color-palette.$white,\n  on-warning-container-minimum: #712700,\n  on-warning-container-low: #712700,\n  on-warning-container: #712700,\n  on-warning-container-high: color-palette.$black,\n  info: color-palette.$blue-800,\n  info-container-minimum: #f6f9fc,\n  info-container-low: #e3edf7,\n  info-container: #c7daf0,\n  info-container-high: #a6c4e7,\n  on-info: color-palette.$white,\n  on-info-container-minimum: #0b3768,\n  on-info-container-low: #0b3768,\n  on-info-container: #0b3768,\n  on-info-container-high: color-palette.$black\n);\n\n// Dark\n$tokens-dark: (\n  success: color-palette.$dollar-bill-600,\n  success-container-minimum: #30312e,\n  success-container-low: #373c32,\n  success-container: #424c38,\n  success-container-high: #4e5f40,\n  on-success: color-palette.$black,\n  on-success-container-minimum: #bed5a9,\n  on-success-container-low: #bed5a9,\n  on-success-container: #bed5a9,\n  on-success-container-high: color-palette.$white,\n  error: color-palette.$ruddy-pink-200,\n  error-container-minimum: #342f30,\n  error-container-low: #433639,\n  error-container: #5a4145,\n  error-container-high: #754d54,\n  on-error: color-palette.$black,\n  on-error-container-minimum: #f5bcc6,\n  on-error-container-low: #f5bcc6,\n  on-error-container: #f5bcc6,\n  on-error-container-high: color-palette.$white,\n  warning: color-palette.$apricot-200,\n  warning-container-minimum: #34312f,\n  warning-container-low: #443c36,\n  warning-container: #5d4c3f,\n  warning-container-high: #7a5f4a,\n  on-warning: color-palette.$black,\n  on-warning-container-minimum: #fbd5b8,\n  on-warning-container-low: #fbd5b8,\n  on-warning-container: #fbd5b8,\n  on-warning-container-high: color-palette.$white,\n  info: color-palette.$blue-800,\n  info-container-minimum: #2b2e32,\n  info-container-low: #29333e,\n  info-container: #263a50,\n  info-container-high: #234264,\n  on-info: color-palette.$white,\n  on-info-container-minimum: #81acdd,\n  on-info-container-low: #81acdd,\n  on-info-container: #81acdd,\n  on-info-container-high: color-palette.$white\n);\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use '../color-palette';\n\n// Light\n$tokens: (\n  outline-high: color-palette.$grey-900,\n  outline-medium: color-palette.$grey-600,\n  outline-low: color-palette.$grey-500,\n  outline: color-palette.$grey-300\n);\n\n// Dark\n$tokens-dark: (\n  outline-high: #e4e4e4,\n  outline-medium: color-palette.$grey-500,\n  outline-low: color-palette.$grey-600,\n  outline: color-palette.$grey-800\n);\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use '../../utils';\n@use './tokens.body' as body;\n@use './tokens.display' as display;\n@use './tokens.heading' as heading;\n@use './tokens.label' as label;\n@use './tokens.subheading' as subheading;\n\n$tokens: utils.flatten(display.$tokens, heading.$tokens, subheading.$tokens, body.$tokens, label.$tokens) !default;\n\n///\n/// Retrieves a typography style token value.\n///\n/// @param {String} $style - The typography style.\n/// @param {String} $token - The token within the provided style.\n/// @return {String} - The value of the style token.\n///\n@function get($style, $token) {\n  $style-tokens: map.get($tokens, $style);\n\n  @if not $style-tokens {\n    @error 'Invalid typography style: \"#{$style}\"';\n  }\n\n  @if not map.get($style-tokens, $token) {\n    @error 'Invalid typography token for style \"#{$style}\" using token \"#{$token}\"';\n  }\n\n  @return map.get($style-tokens, $token);\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use '../../theme';\n@use '../../utils';\n@use './scale';\n@use './type-utils';\n@use './tokens.core' as core;\n\n$body1: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(body, font-size, '0875'),\n    line-height: type-utils.font-size-relative(body, line-height, '1125'),\n    letter-spacing: type-utils.calc-letter-spacing(0.5, scale.value('0875'))\n  )\n) !default;\n\n$body2: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(body, font-size, '1000'),\n    line-height: type-utils.font-size-relative(body, line-height, '1375'),\n    letter-spacing: type-utils.calc-letter-spacing(0.25, scale.value('1000'))\n  )\n) !default;\n\n$body3: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(body, font-size, '1125'),\n    line-height: type-utils.font-size-relative(body, line-height, '1500'),\n    letter-spacing: type-utils.calc-letter-spacing(0.15, scale.value('1125'))\n  )\n) !default;\n\n$body4: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(body, font-size, '1250'),\n    line-height: type-utils.font-size-relative(body, line-height, '1750'),\n    letter-spacing: type-utils.calc-letter-spacing(0.1, scale.value('1250'))\n  )\n) !default;\n\n$tokens: (\n  body1: $body1,\n  body2: $body2,\n  body3: $body3,\n  body4: $body4\n) !default;\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n\n/* prettier-ignore */\n$scale: (\n  '0750': 0.75,   // 12px\n  '0813': 0.8125, // 13px\n  '0875': 0.875,  // 14px\n  '1000': 1,      // 16px\n  '1125': 1.125,  // 18px\n  '1250': 1.25,   // 20px\n  '1375': 1.375,  // 22px\n  '1500': 1.5,    // 24px\n  '1750': 1.75,   // 28px\n  '2000': 2,      // 32px\n  '2125': 2.125,  // 34px\n  '2250': 2.25,   // 36px\n  '2500': 2.5,    // 40px\n  '2625': 2.625,  // 42px\n  '2750': 2.75,   // 44px\n  '3000': 3,      // 48px\n  '3250': 3.25,   // 52px\n  '3500': 3.5,    // 56px\n  '3750': 3.75,   // 60px\n  '4000': 4,      // 64px\n  '4250': 4.25,   // 68px\n  '4500': 4.5,    // 72px\n  '4750': 4.75,   // 76px\n  '5000': 5       // 80px\n) !default;\n\n@function value($key) {\n  @if not map.has-key($scale, $key) {\n    @error 'Unknown scale value `#{$key}`.';\n  }\n  @return map.get($scale, $key);\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:math';\n@use '../../core/config';\n@use './tokens.core' as core;\n@use './scale';\n\n$module: 'typography' !default;\n$token: 'scale' !default;\n\n///\n/// Creates a style value that is relative to the base font size for the given property.\n///\n/// This allows for typography styles to be scaled relative to the root font size, or\n/// relative to a specific CSS custom property if optionally applied. This is useful\n/// when embedding Forge in an application that adjusts the root `font-size` to something\n/// other than `16px` (browser default).\n///\n@function font-size-relative($style, $property, $scale) {\n  $scale-value: scale.value($scale);\n  $var-name: '--#{config.$prefix}-#{$module}-#{$style}-#{$property}-#{$token}';\n  @return calc(#{core.get(font-size)} * var(#{$var-name}, #{$scale-value}));\n}\n\n///\n/// Calculates the letter spacing value for the given tracking and font size.\n///\n/// @param {Number} $tracking - The tracking value.\n/// @param {Number} $font-size - The font size value.\n/// @return {String} - The letter spacing value.\n///\n@function calc-letter-spacing($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use '../../utils';\n@use '../../core/config';\n@use './weight';\n\n// Base typography style values\n$font-family: 'Roboto', sans-serif !default;\n$font-size: 1rem !default; // 16px\n\n// The base typography styles that other styles inherit from.\n$base: (\n  font-family: utils.create-var(typography, font-family, $font-family),\n  font-size: utils.create-var(typography, font-size, $font-size),\n  font-weight: weight.value(regular),\n  line-height: normal,\n  letter-spacing: normal,\n  text-transform: inherit,\n  text-decoration: inherit\n) !default;\n\n@function get($key) {\n  @if not map.has-key($base, $key) {\n    @error 'No typography style exists with the key `#{$key}`.';\n  }\n  @return map.get($base, $key);\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n\n$font-weight: (\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700\n) !default;\n\n@function value($weight) {\n  @if not map.has-key($font-weight, $weight) {\n    @error 'Invalid font weight: \"#{$weight}\"';\n  }\n  @return map.get($font-weight, $weight);\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use '../../utils';\n@use './type-utils';\n@use './tokens.core' as core;\n@use './weight';\n@use './scale';\n\n$display1: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(display1, font-size, '1500'),\n    font-weight: weight.value(light),\n    line-height: type-utils.font-size-relative(display1, line-height, '2250')\n  )\n) !default;\n\n$display2: utils.inherit-map(\n  $display1,\n  (\n    font-size: type-utils.font-size-relative(display2, font-size, '1750'),\n    line-height: type-utils.font-size-relative(display2, line-height, '2250')\n  )\n) !default;\n\n$display3: utils.inherit-map(\n  $display2,\n  (\n    font-size: type-utils.font-size-relative(display3, font-size, '2000'),\n    line-height: type-utils.font-size-relative(display3, line-height, '2500')\n  )\n) !default;\n\n$display4: utils.inherit-map(\n  $display3,\n  (\n    font-size: type-utils.font-size-relative(display4, font-size, '2250'),\n    line-height: type-utils.font-size-relative(display4, line-height, '2750'),\n    letter-spacing: type-utils.calc-letter-spacing(-0.25, scale.value('2250'))\n  )\n) !default;\n\n$display5: utils.inherit-map(\n  $display4,\n  (\n    font-size: type-utils.font-size-relative(display5, font-size, '2500'),\n    line-height: type-utils.font-size-relative(display5, line-height, '3000'),\n    letter-spacing: type-utils.calc-letter-spacing(-0.5, scale.value('2500'))\n  )\n) !default;\n\n$display6: utils.inherit-map(\n  $display5,\n  (\n    font-size: type-utils.font-size-relative(display6, font-size, '3000'),\n    line-height: type-utils.font-size-relative(display6, line-height, '4000'),\n    letter-spacing: type-utils.calc-letter-spacing(-1, scale.value('3000'))\n  )\n) !default;\n\n$display7: utils.inherit-map(\n  $display6,\n  (\n    font-size: type-utils.font-size-relative(display7, font-size, '3500'),\n    line-height: type-utils.font-size-relative(display7, line-height, '4500'),\n    letter-spacing: type-utils.calc-letter-spacing(-1.5, scale.value('3500'))\n  )\n) !default;\n\n$display8: utils.inherit-map(\n  $display7,\n  (\n    font-size: type-utils.font-size-relative(display8, font-size, '4000'),\n    line-height: type-utils.font-size-relative(display8, line-height, '4750'),\n    letter-spacing: type-utils.calc-letter-spacing(-2, scale.value('4000'))\n  )\n) !default;\n\n$tokens: (\n  display1: $display1,\n  display2: $display2,\n  display3: $display3,\n  display4: $display4,\n  display5: $display5,\n  display6: $display6,\n  display7: $display7,\n  display8: $display8\n) !default;\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use '../../utils';\n@use './type-utils';\n@use './scale';\n@use './weight';\n@use './tokens.core' as core;\n\n$heading1: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(heading1, font-size, '0875'),\n    font-weight: weight.value(medium),\n    line-height: type-utils.font-size-relative(heading1, line-height, '1125'),\n    letter-spacing: type-utils.calc-letter-spacing(0.25, scale.value('0875'))\n  )\n) !default;\n\n$heading2: utils.inherit-map(\n  $heading1,\n  (\n    font-size: type-utils.font-size-relative(heading2, font-size, '1000'),\n    line-height: type-utils.font-size-relative(heading2, line-height, '1250'),\n    letter-spacing: type-utils.calc-letter-spacing(0.2, scale.value('1000'))\n  )\n) !default;\n\n$heading3: utils.inherit-map(\n  $heading2,\n  (\n    font-size: type-utils.font-size-relative(heading3, font-size, '1125'),\n    line-height: type-utils.font-size-relative(heading3, line-height, '1375'),\n    letter-spacing: type-utils.calc-letter-spacing(0.15, scale.value('1125'))\n  )\n) !default;\n\n$heading4: utils.inherit-map(\n  $heading3,\n  (\n    font-size: type-utils.font-size-relative(heading4, font-size, '1250'),\n    line-height: type-utils.font-size-relative(heading4, line-height, '1500'),\n    letter-spacing: type-utils.calc-letter-spacing(0.1, scale.value('1250'))\n  )\n) !default;\n\n$heading5: utils.inherit-map(\n  $heading4,\n  (\n    font-size: type-utils.font-size-relative(heading5, font-size, '1500'),\n    line-height: type-utils.font-size-relative(heading5, line-height, '1750'),\n    letter-spacing: type-utils.calc-letter-spacing(0, scale.value('1500'))\n  )\n) !default;\n\n$heading6: utils.inherit-map(\n  $heading5,\n  (\n    font-size: type-utils.font-size-relative(heading6, font-size, '1750'),\n    line-height: type-utils.font-size-relative(heading6, line-height, '2125'),\n    letter-spacing: type-utils.calc-letter-spacing(0, scale.value('1750'))\n  )\n) !default;\n\n$heading7: utils.inherit-map(\n  $heading6,\n  (\n    font-size: type-utils.font-size-relative(heading7, font-size, '2000'),\n    line-height: type-utils.font-size-relative(heading7, line-height, '2500'),\n    letter-spacing: type-utils.calc-letter-spacing(-0.05, scale.value('2000'))\n  )\n) !default;\n\n$heading8: utils.inherit-map(\n  $heading7,\n  (\n    font-size: type-utils.font-size-relative(heading8, font-size, '2250'),\n    line-height: type-utils.font-size-relative(heading8, line-height, '2625'),\n    letter-spacing: type-utils.calc-letter-spacing(-0.1, scale.value('2250'))\n  )\n) !default;\n\n$tokens: (\n  heading1: $heading1,\n  heading2: $heading2,\n  heading3: $heading3,\n  heading4: $heading4,\n  heading5: $heading5,\n  heading6: $heading6,\n  heading7: $heading7,\n  heading8: $heading8\n) !default;\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use '../../utils';\n@use './type-utils';\n@use './weight';\n@use './scale';\n@use './tokens.core' as core;\n\n$label1: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(label, font-size, '0750'),\n    line-height: type-utils.font-size-relative(label, line-height, '1250'),\n    letter-spacing: type-utils.calc-letter-spacing(0.5, scale.value('0875'))\n  )\n) !default;\n\n$label2: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(label, font-size, '0813'),\n    line-height: type-utils.font-size-relative(label, line-height, '1250'),\n    letter-spacing: type-utils.calc-letter-spacing(0.125, scale.value('0813'))\n  )\n) !default;\n\n$label3: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(label, font-size, '0875'),\n    line-height: type-utils.font-size-relative(label, line-height, '1250'),\n    letter-spacing: type-utils.calc-letter-spacing(0.125, scale.value('0875'))\n  )\n) !default;\n\n$button: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(button, font-size, '0875'),\n    font-weight: weight.value(medium),\n    letter-spacing: type-utils.calc-letter-spacing(1, scale.value('0875'))\n  )\n) !default;\n\n$overline: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(overline, font-size, '0750'),\n    font-weight: weight.value(medium),\n    line-height: type-utils.font-size-relative(overline, line-height, '2000'),\n    letter-spacing: type-utils.calc-letter-spacing(2, scale.value('0750')),\n    text-transform: uppercase\n  )\n) !default;\n\n$tokens: (\n  label1: $label1,\n  label2: $label2,\n  label3: $label3,\n  button: $button,\n  overline: $overline\n) !default;\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use '../../utils';\n@use './scale';\n@use './weight';\n@use './type-utils';\n@use './tokens.core' as core;\n\n$subheading1: utils.inherit-map(\n  core.$base,\n  (\n    font-size: type-utils.font-size-relative(subheading1, font-size, '0875'),\n    font-weight: weight.value(regular),\n    line-height: type-utils.font-size-relative(subheading1, line-height, '1125')\n  )\n) !default;\n\n$subheading2: utils.inherit-map(\n  $subheading1,\n  (\n    font-size: type-utils.font-size-relative(subheading2, font-size, '1000'),\n    line-height: type-utils.font-size-relative(subheading2, line-height, '1250')\n  )\n) !default;\n\n$subheading3: utils.inherit-map(\n  $subheading2,\n  (\n    font-size: type-utils.font-size-relative(subheading3, font-size, '1125'),\n    line-height: type-utils.font-size-relative(subheading3, line-height, '1375')\n  )\n) !default;\n\n$subheading4: utils.inherit-map(\n  $subheading3,\n  (\n    font-size: type-utils.font-size-relative(subheading4, font-size, '1250'),\n    line-height: type-utils.font-size-relative(subheading4, line-height, '1500')\n  )\n) !default;\n\n$subheading5: utils.inherit-map(\n  $subheading4,\n  (\n    font-size: type-utils.font-size-relative(subheading5, font-size, '1500'),\n    line-height: type-utils.font-size-relative(subheading5, line-height, '1750'),\n    letter-spacing: type-utils.calc-letter-spacing(0, scale.value('1500'))\n  )\n) !default;\n\n$subheading6: utils.inherit-map(\n  $subheading5,\n  (\n    font-size: type-utils.font-size-relative(subheading6, font-size, '1750'),\n    line-height: type-utils.font-size-relative(subheading6, line-height, '2125'),\n    letter-spacing: type-utils.calc-letter-spacing(0, scale.value('1750'))\n  )\n) !default;\n\n$subheading7: utils.inherit-map(\n  $subheading6,\n  (\n    font-size: type-utils.font-size-relative(subheading7, font-size, '2000'),\n    line-height: type-utils.font-size-relative(subheading7, line-height, '2500'),\n    letter-spacing: type-utils.calc-letter-spacing(-0.05, scale.value('2000'))\n  )\n) !default;\n\n$subheading8: utils.inherit-map(\n  $subheading7,\n  (\n    font-size: type-utils.font-size-relative(subheading8, font-size, '2250'),\n    line-height: type-utils.font-size-relative(subheading8, line-height, '2625'),\n    letter-spacing: type-utils.calc-letter-spacing(-0.1, scale.value('2250'))\n  )\n) !default;\n\n$tokens: (\n  subheading1: $subheading1,\n  subheading2: $subheading2,\n  subheading3: $subheading3,\n  subheading4: $subheading4,\n  subheading5: $subheading5,\n  subheading6: $subheading6,\n  subheading7: $subheading7,\n  subheading8: $subheading8\n) !default;\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n@use './mixins';\n@use './variables-flex';\n\n@mixin container($display, $direction: row, $wrap: null, $alignment: null) {\n  @if not map.has-key($map: variables-flex.$displays, $key: $display) {\n    @error 'Invalid flex display specified! Choose one of #{map.keys(variables-flex.$displays)}';\n  }\n  display: map.get($map: variables-flex.$displays, $key: $display);\n\n  @if not map.has-key(variables-flex.$directions, $direction) {\n    @error 'Invalid flex direction specified! Choose one of #{map.keys(variables-flex.$directions)}';\n  }\n  flex-direction: map.get($map: variables-flex.$directions, $key: $direction);\n\n  @if $wrap != null {\n    @if not map.has-key(variables-flex.$wraps, $wrap) {\n      @error 'Invalid flex wrap specified! Choose one of #{map.keys(variables-flex.$wraps)}';\n    }\n    flex-wrap: map.get($map: variables-flex.$wraps, $key: $wrap);\n  }\n\n  @if $alignment != null {\n    @if not map.has-key(variables-flex.$alignments, $alignment) {\n      @error 'Invalid flex alignment specified! Choose one of #{map.keys(variables-flex.$alignments)}';\n    }\n    align-items: map.get($map: variables-flex.$alignments, $key: $alignment);\n  }\n}\n\n@mixin item($shrink: 0, $grow: 0, $basis: auto, $alignment: null) {\n  flex: #{$shrink} #{$grow} #{$basis};\n\n  @if $alignment != null {\n    @if not map.has-key(variables-flex.$alignments, $alignment) {\n      @error 'Invalid flex alignment specified! Choose one of #{map.keys(variables-flex.$alignments)}';\n    }\n    align-self: map.get($map: variables-flex.$alignments, $key: $alignment);\n  }\n}\n\n@mixin overflow($overflow: auto) {\n  @include mixins.overflow($overflow);\n  @include item(1, 1);\n\n  min-height: 0;\n  min-width: 0;\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n@use 'sass:map';\n\n@mixin position-abs-zero($position: absolute) {\n  position: $position;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n@mixin overflow($overflow: auto) {\n  @if $overflow == hidden {\n    overflow: hidden;\n  }\n  @if $overflow == auto {\n    overflow: auto;\n  }\n  @if $overflow == overflow-x {\n    overflow-x: auto;\n    overflow-y: hidden;\n  }\n  @if $overflow == overflow-y {\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n}\n\n@mixin visually-hidden() {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  clip-path: inset(50%);\n  white-space: nowrap;\n  border: 0;\n}\n", "/**\n * @license\n * Copyright Tyler Technologies, Inc. \n * License: Apache-2.0\n */\n$displays: (\n  flex: flex,\n  inline-flex: inline-flex\n) !default;\n\n$directions: (\n  row: row,\n  row-reverse: row-reverse,\n  column: column,\n  column-reverse: column-reverse\n) !default;\n\n$wraps: (\n  nowrap: nowrap,\n  wrap: wrap,\n  wrap-reverse: wrap-reverse\n) !default;\n\n$alignments: (\n  flex-start: flex-start,\n  flex-end: flex-end,\n  center: center,\n  baseline: baseline,\n  stretch: stretch\n) !default;\n", "@use 'src/global' as *;\n\n:host {\n  display: block;\n}\n\n[slot='body'] {\n  display: grid;\n  background-color: var(--forge-theme-surface-dim);\n}\n\n.menu-expander {\n  --forge-button-height: 3rem;\n\n  &--open {\n    forge-icon {\n      margin-left: auto;\n      margin-right: 8px;\n    }\n  }\n}\n"],
  "mappings": "AiCEA,MACE,QAAA,MAGF,CAAA,WACE,QAAA,KACA,iBAAA,IAAA,2BAGF,CAAA,cACE,uBAAA,KAGE,CAAA,oBAAA,WACE,YAAA,KACA,aAAA",
  "names": []
}
