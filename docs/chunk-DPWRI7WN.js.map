{"version":3,"sources":["src/app/test/test.component.ts","src/app/test/test.component.html","node_modules/rxjs/dist/esm/internal/observable/dom/WebSocketSubject.js","node_modules/rxjs/dist/esm/internal/observable/dom/webSocket.js","src/app/app-web-socket.service.ts","src/app/test/parent/parent.component.ts","src/app/test/parent/parent.component.html","src/app/test/child/child.component.ts","src/app/test/child/child.component.html","src/app/test/routes.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-test',\n  imports: [RouterOutlet],\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent {}\n","<router-outlet></router-outlet>\n","import { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { ReplaySubject } from '../../ReplaySubject';\nconst DEFAULT_WEBSOCKET_CONFIG = {\n  url: '',\n  deserializer: e => JSON.parse(e.data),\n  serializer: value => JSON.stringify(value)\n};\nconst WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\nexport class WebSocketSubject extends AnonymousSubject {\n  constructor(urlConfigOrSource, destination) {\n    super();\n    this._socket = null;\n    if (urlConfigOrSource instanceof Observable) {\n      this.destination = destination;\n      this.source = urlConfigOrSource;\n    } else {\n      const config = this._config = Object.assign({}, DEFAULT_WEBSOCKET_CONFIG);\n      this._output = new Subject();\n      if (typeof urlConfigOrSource === 'string') {\n        config.url = urlConfigOrSource;\n      } else {\n        for (const key in urlConfigOrSource) {\n          if (urlConfigOrSource.hasOwnProperty(key)) {\n            config[key] = urlConfigOrSource[key];\n          }\n        }\n      }\n      if (!config.WebSocketCtor && WebSocket) {\n        config.WebSocketCtor = WebSocket;\n      } else if (!config.WebSocketCtor) {\n        throw new Error('no WebSocket constructor can be found');\n      }\n      this.destination = new ReplaySubject();\n    }\n  }\n  lift(operator) {\n    const sock = new WebSocketSubject(this._config, this.destination);\n    sock.operator = operator;\n    sock.source = this;\n    return sock;\n  }\n  _resetState() {\n    this._socket = null;\n    if (!this.source) {\n      this.destination = new ReplaySubject();\n    }\n    this._output = new Subject();\n  }\n  multiplex(subMsg, unsubMsg, messageFilter) {\n    const self = this;\n    return new Observable(observer => {\n      try {\n        self.next(subMsg());\n      } catch (err) {\n        observer.error(err);\n      }\n      const subscription = self.subscribe({\n        next: x => {\n          try {\n            if (messageFilter(x)) {\n              observer.next(x);\n            }\n          } catch (err) {\n            observer.error(err);\n          }\n        },\n        error: err => observer.error(err),\n        complete: () => observer.complete()\n      });\n      return () => {\n        try {\n          self.next(unsubMsg());\n        } catch (err) {\n          observer.error(err);\n        }\n        subscription.unsubscribe();\n      };\n    });\n  }\n  _connectSocket() {\n    const {\n      WebSocketCtor,\n      protocol,\n      url,\n      binaryType\n    } = this._config;\n    const observer = this._output;\n    let socket = null;\n    try {\n      socket = protocol ? new WebSocketCtor(url, protocol) : new WebSocketCtor(url);\n      this._socket = socket;\n      if (binaryType) {\n        this._socket.binaryType = binaryType;\n      }\n    } catch (e) {\n      observer.error(e);\n      return;\n    }\n    const subscription = new Subscription(() => {\n      this._socket = null;\n      if (socket && socket.readyState === 1) {\n        socket.close();\n      }\n    });\n    socket.onopen = evt => {\n      const {\n        _socket\n      } = this;\n      if (!_socket) {\n        socket.close();\n        this._resetState();\n        return;\n      }\n      const {\n        openObserver\n      } = this._config;\n      if (openObserver) {\n        openObserver.next(evt);\n      }\n      const queue = this.destination;\n      this.destination = Subscriber.create(x => {\n        if (socket.readyState === 1) {\n          try {\n            const {\n              serializer\n            } = this._config;\n            socket.send(serializer(x));\n          } catch (e) {\n            this.destination.error(e);\n          }\n        }\n      }, err => {\n        const {\n          closingObserver\n        } = this._config;\n        if (closingObserver) {\n          closingObserver.next(undefined);\n        }\n        if (err && err.code) {\n          socket.close(err.code, err.reason);\n        } else {\n          observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n        }\n        this._resetState();\n      }, () => {\n        const {\n          closingObserver\n        } = this._config;\n        if (closingObserver) {\n          closingObserver.next(undefined);\n        }\n        socket.close();\n        this._resetState();\n      });\n      if (queue && queue instanceof ReplaySubject) {\n        subscription.add(queue.subscribe(this.destination));\n      }\n    };\n    socket.onerror = e => {\n      this._resetState();\n      observer.error(e);\n    };\n    socket.onclose = e => {\n      if (socket === this._socket) {\n        this._resetState();\n      }\n      const {\n        closeObserver\n      } = this._config;\n      if (closeObserver) {\n        closeObserver.next(e);\n      }\n      if (e.wasClean) {\n        observer.complete();\n      } else {\n        observer.error(e);\n      }\n    };\n    socket.onmessage = e => {\n      try {\n        const {\n          deserializer\n        } = this._config;\n        observer.next(deserializer(e));\n      } catch (err) {\n        observer.error(err);\n      }\n    };\n  }\n  _subscribe(subscriber) {\n    const {\n      source\n    } = this;\n    if (source) {\n      return source.subscribe(subscriber);\n    }\n    if (!this._socket) {\n      this._connectSocket();\n    }\n    this._output.subscribe(subscriber);\n    subscriber.add(() => {\n      const {\n        _socket\n      } = this;\n      if (this._output.observers.length === 0) {\n        if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n          _socket.close();\n        }\n        this._resetState();\n      }\n    });\n    return subscriber;\n  }\n  unsubscribe() {\n    const {\n      _socket\n    } = this;\n    if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n      _socket.close();\n    }\n    this._resetState();\n    super.unsubscribe();\n  }\n}\n","import { WebSocketSubject } from './WebSocketSubject';\nexport function webSocket(urlConfigOrSource) {\n  return new WebSocketSubject(urlConfigOrSource);\n}\n","import { Injectable } from '@angular/core';\nimport { webSocket } from 'rxjs/webSocket';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppWebSocketService {\n  public readonly webSocketSubject = webSocket('http://localhost:5001');\n}\n","import { CommonModule } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { Router } from '@angular/router';\r\nimport { ForgeButtonModule, ForgeCircularProgressModule, ForgeToolbarModule } from '@tylertech/forge-angular';\r\nimport { finalize, Observable, tap } from 'rxjs';\r\n\r\nimport { AppCacheService } from 'src/app/app-cache.service';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { AppWebSocketService } from 'src/app/app-web-socket.service';\r\n\r\n@Component({\r\n  selector: 'app-test-parent',\r\n  imports: [CommonModule, ForgeButtonModule, ForgeCircularProgressModule, ForgeToolbarModule],\r\n  templateUrl: './parent.component.html',\r\n  styleUrls: ['./parent.component.scss']\r\n})\r\nexport class ParentComponent implements OnInit, OnDestroy {\r\n  private router = inject(Router);\r\n  private destroyRef = inject(DestroyRef);\r\n  private appDataService = inject(AppDataService);\r\n  private appWebSocketService = inject(AppWebSocketService);\r\n\r\n  public isRequesting = false;\r\n  public isPolling = false;\r\n  public isMessaging = false;\r\n  public response: string;\r\n\r\n  public ngOnInit() {\r\n    this.appWebSocketService.webSocketSubject.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (result) => {\r\n        this.isMessaging = false;\r\n        console.log(result);\r\n        this.response = JSON.stringify(result);\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.appWebSocketService.webSocketSubject.complete();\r\n  }\r\n\r\n  public onNavigate(route: string) {\r\n    this.router.navigate([route], { state: { id: 0, name: 'name' } });\r\n  }\r\n\r\n  public onMakeLongRequest() {\r\n    this.isRequesting = true;\r\n    this.response = undefined;\r\n    this.appDataService\r\n      .getLongRequest()\r\n      .pipe(\r\n        takeUntilDestroyed(this.destroyRef),\r\n        finalize(() => (this.isRequesting = false))\r\n      )\r\n      .subscribe({\r\n        next: (result) => {\r\n          console.log(result);\r\n          this.response = JSON.stringify(result);\r\n        },\r\n        error: (error) => console.log(error)\r\n      });\r\n  }\r\n\r\n  public onMakePollingRequest() {\r\n    this.isPolling = true;\r\n    this.response = undefined;\r\n    this.appDataService\r\n      .pollingRequest('simpson')\r\n      .pipe(\r\n        takeUntilDestroyed(this.destroyRef),\r\n        finalize(() => (this.isPolling = false))\r\n      )\r\n      .subscribe({\r\n        next: (r) => {\r\n          console.log(r);\r\n          this.response = JSON.stringify(r);\r\n        }\r\n      });\r\n  }\r\n\r\n  public onSendMessage() {\r\n    this.isMessaging = true;\r\n    this.response = undefined;\r\n    this.appWebSocketService.webSocketSubject.next({\r\n      data: 'message from front end.',\r\n      date: new Date()\r\n    });\r\n  }\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--subheading4\">Parent</h2>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <div>Parent content</div>\r\n\r\n  <div style=\"display: flex; flex-wrap: wrap; gap: 8px 16px; padding-block: 16px\">\r\n    <forge-button variant=\"filled\" (click)=\"onNavigate('test/child')\">View child</forge-button>\r\n    <forge-button variant=\"outlined\" (click)=\"onSendMessage()\" [disabled]=\"isMessaging\">\r\n      <span>Send message</span>\r\n      @if (isMessaging) {\r\n        <forge-circular-progress></forge-circular-progress>\r\n      }\r\n    </forge-button>\r\n    <forge-button variant=\"outlined\" (click)=\"onMakeLongRequest()\" [disabled]=\"isRequesting\">\r\n      <span>Make long request</span>\r\n      @if (isRequesting) {\r\n        <forge-circular-progress></forge-circular-progress>\r\n      }\r\n    </forge-button>\r\n    <forge-button variant=\"outlined\" (click)=\"onMakePollingRequest()\" [disabled]=\"isPolling\">\r\n      <span>Make polling request</span>\r\n      @if (isPolling) {\r\n        <forge-circular-progress></forge-circular-progress>\r\n      }\r\n    </forge-button>\r\n  </div>\r\n  <div style=\"overflow-wrap: break-word\">{{ response }}</div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ForgeButtonModule, ForgeIconButtonModule, ForgeIconModule, ForgeToolbarModule } from '@tylertech/forge-angular';\n\n@Component({\n  selector: 'app-test-child',\n  imports: [CommonModule, ForgeButtonModule, ForgeIconButtonModule, ForgeIconModule, ForgeToolbarModule],\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.scss']\n})\nexport class ChildComponent {\n  private router = inject(Router);\n\n  public onNavigate(route: string) {\n    this.router.navigate([route]);\n  }\n}\n","<forge-toolbar class=\"header\">\n  <div slot=\"start\">\n    <forge-icon-button (click)=\"onNavigate('test/parent')\" aria-label=\"Go back\">\n      <forge-icon name=\"arrow_back\"></forge-icon>\n    </forge-icon-button>\n    <h2 class=\"forge-typography--subheading4\">Child</h2>\n  </div>\n</forge-toolbar>\n<div class=\"body\"></div>\n","import { Routes } from '@angular/router';\n\nimport { TestComponent } from './test.component';\nimport { ParentComponent } from './parent/parent.component';\nimport { ChildComponent } from './child/child.component';\n\nexport const TEST_ROUTES: Routes = [\n  {\n    path: '',\n    component: TestComponent,\n    children: [\n      { path: 'parent', component: ParentComponent },\n      { path: 'child', component: ChildComponent },\n      { path: '', redirectTo: 'parent', pathMatch: 'full' }\n    ]\n  }\n];\n"],"mappings":"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","names":["TestComponent","selectors","decls","vars","template","rf","ctx","ɵɵelement","RouterOutlet","styles","_TestComponent","DEFAULT_WEBSOCKET_CONFIG","e","value","WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT","WebSocketSubject","_WebSocketSubject","AnonymousSubject","urlConfigOrSource","destination","Observable","config","Subject","key","ReplaySubject","operator","sock","subMsg","unsubMsg","messageFilter","self","observer","err","subscription","x","WebSocketCtor","protocol","url","binaryType","socket","Subscription","evt","_socket","openObserver","queue","Subscriber","serializer","closingObserver","closeObserver","deserializer","subscriber","source","webSocket","urlConfigOrSource","WebSocketSubject","AppWebSocketService","constructor","webSocketSubject","webSocket","factory","ɵfac","providedIn","_AppWebSocketService","ɵɵelement","ParentComponent","constructor","router","inject","Router","destroyRef","DestroyRef","appDataService","AppDataService","appWebSocketService","AppWebSocketService","isRequesting","isPolling","isMessaging","ngOnInit","webSocketSubject","pipe","takeUntilDestroyed","subscribe","next","result","console","log","response","JSON","stringify","ngOnDestroy","complete","onNavigate","route","navigate","state","id","name","onMakeLongRequest","undefined","getLongRequest","finalize","error","onMakePollingRequest","pollingRequest","r","onSendMessage","data","date","Date","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ɵɵconditionalCreate","ParentComponent_Conditional_12_Template","ParentComponent_Conditional_16_Template","ParentComponent_Conditional_20_Template","ɵɵadvance","ɵɵproperty","ɵɵconditional","ɵɵtextInterpolate","CommonModule","ForgeButtonModule","ButtonComponent","ForgeCircularProgressModule","CircularProgressComponent","ForgeToolbarModule","ToolbarComponent","styles","_ParentComponent","ChildComponent","constructor","router","inject","Router","onNavigate","route","navigate","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵlistener","ɵɵelement","ɵɵelementEnd","ɵɵtext","CommonModule","ForgeButtonModule","ForgeIconButtonModule","IconButtonComponent","IconComponent","ForgeIconModule","ForgeToolbarModule","ToolbarComponent","styles","_ChildComponent","TEST_ROUTES","path","component","TestComponent","children","ParentComponent","ChildComponent","redirectTo","pathMatch"],"x_google_ignoreList":[2,3]}