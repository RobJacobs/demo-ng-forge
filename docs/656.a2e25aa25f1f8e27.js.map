{"version":3,"file":"656.a2e25aa25f1f8e27.js","mappings":"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","names":["SearchSaveComponent","constructor","this","dialogConfig","inject","DialogConfig","dialogRef","DialogRef","formGroup","FormGroup","name","FormControl","validators","Validators","required","description","isDefault","isPublic","record","data","patchValue","onSave","close","parseFormGroup","onCancel","id","value","filters","static","t","core","In1","selectors","standalone","features","i0","decls","vars","consts","template","rf","ctx","controls","invalid","CommonModule","ReactiveFormsModule","i1","ForgeButtonModule","i2","ForgeCheckboxModule","ForgeIconButtonModule","ForgeIconModule","ForgeTextFieldModule","AutoFocusDirective","FormControlInvalidDirective","styles","INDETERMINATE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","IndeterminateDirective","multi","elementRef","ElementRef","#indeterminateEnabled","onChange","_","onTouched","#value","elementChange","isDefined","nativeElement","indeterminate","checked","change","elementBlur","appIndeterminate","toString","writeValue","registerOnChange","fn","registerOnTouched","Sc5","hostBindings","ctx_r0","searchName","searchDescription","$event","search_r12","_r18","$implicit","ctx_r17","onSearchAction","ctx_r19","_r21","ctx_r20","detail","SearchComponent_ng_template_24_For_6_Template","_forTrack0","ctx_r2","searchCache","searches","name_r22","_r25","_r23","ctx_r24","onOperatorPopupOpen","_c1","tmp_0_0","ctx_r7","get","operator","_r10","SearchComponent_ng_template_65_For_2_Conditional_3_Template","option_r27","ctx_r26","operatorPopupFormGroup","label","_r34","ctx_r33","onOperatorSelected","SearchComponent_ng_template_65_For_2_Template","ctx_r9","operatorOptions","SearchComponent","dialogService","DialogService","toastService","ToastService","dataService","AppDataService","storageKey","activeSearchId","undefined","dateOfBirth","address","include","facet","facetOptions","nameFilter","filter","lastValueFrom","getPeople","pipe","map","r","p","firstName","toLocaleLowerCase","includes","lastName","facetFilter","of","ngOnInit","getSearches","subscribe","result","activeSearch","find","s","index","push","onSearch","onSaveSearch","search","sub","show","backdropClose","escapeClose","afterClosed","unsubscribe","searchIndex","findIndex","length","Math","max","saveSearches","next","message","error","onClearSearch","setValue","reset","event","action","stopPropagation","searchesPopup","copySearch","JSON","parse","stringify","splice","popup","operatorPopup","open","parseInt","viewQuery","SearchComponent_Conditional_4_Template","_r35","_r1","SearchComponent_ng_template_24_Template","_r4","_r5","SearchComponent_ng_container_54_Template","SearchComponent_ng_template_63_Template","SearchComponent_ng_template_65_Template","_r3","_r8","_c2","getRawValue","ForgeAutocompleteModule","i3","ForgeDatePickerModule","ForgeDividerModule","ForgeListItemModule","ForgeListModule","ForgePopupModule","ForgeToolbarModule","AutocompleteRangeComponent","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","target","eventName","options","resultSelector","isFunction","mapOneOrManyArgs","add","remove","isEventTarget","addEventListener","removeEventListener","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","mergeMap","subTarget","innerFrom","TypeError","Observable","subscriber","args","timer","dueTime","intervalOrScheduler","scheduler","asyncScheduler","intervalDuration","isScheduler","due","isValidDate","Date","isNaN","now","n","schedule","closed","complete","distinctUntilChanged","comparator","keySelector","identity","defaultCompare","operate","source","previousKey","first","createOperatorSubscriber","currentKey","a","b","Action","Subscription","work","super","state","delay","intervalProvider","setInterval","timeout","delegate","clearInterval","handle","AsyncAction","pending","_a","recycleAsyncId","requestAsyncId","_id","flush","bind","_scheduler","execute","Error","_execute","_delay","errorValue","errored","e","actions","arrRemove","Scheduler","schedulerActionCtor","dateTimestampProvider","AsyncScheduler","SchedulerAction","_active","shift","async"],"sourceRoot":"webpack:///","sources":["./src/app/search/save/search-save.component.ts","./src/app/search/save/search-save.component.html","./src/app/shared/directives/indeterminate/indeterminate.directive.ts","./src/app/search/search.component.html","./src/app/search/search.component.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./node_modules/rxjs/dist/esm/internal/observable/timer.js","./node_modules/rxjs/dist/esm/internal/util/isDate.js","./node_modules/rxjs/dist/esm/internal/operators/distinctUntilChanged.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { DialogConfig, DialogRef, ForgeButtonModule, ForgeCheckboxModule, ForgeIconButtonModule, ForgeIconModule, ForgeTextFieldModule } from '@tylertech/forge-angular';\r\n\r\nimport { AutoFocusDirective } from 'src/app/shared/directives/auto-focus/auto-focus.directive';\r\nimport { FormControlInvalidDirective } from 'src/app/shared/directives/form-control-invalid/form-control-invalid.directive';\r\n\r\n@Component({\r\n  selector: 'app-search-save',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ForgeButtonModule,\r\n    ForgeCheckboxModule,\r\n    ForgeIconButtonModule,\r\n    ForgeIconModule,\r\n    ForgeTextFieldModule,\r\n    AutoFocusDirective,\r\n    FormControlInvalidDirective\r\n  ],\r\n  templateUrl: './search-save.component.html',\r\n  styleUrls: ['./search-save.component.scss']\r\n})\r\nexport class SearchSaveComponent {\r\n  public dialogConfig = inject(DialogConfig);\r\n  private dialogRef = inject(DialogRef);\r\n\r\n  public record: {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    isDefault: boolean;\r\n    isPublic: boolean;\r\n    filters: { property: string; value: string }[];\r\n  };\r\n  public formGroup = new FormGroup({\r\n    name: new FormControl<string | null>(null, { validators: [Validators.required] }),\r\n    description: new FormControl(),\r\n    isDefault: new FormControl(),\r\n    isPublic: new FormControl()\r\n  });\r\n\r\n  constructor() {\r\n    this.record = this.dialogConfig.data;\r\n    this.formGroup.patchValue(this.record);\r\n  }\r\n\r\n  public onSave() {\r\n    this.dialogRef.close(this.parseFormGroup());\r\n  }\r\n\r\n  public onCancel() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  private parseFormGroup() {\r\n    return {\r\n      id: this.record.id,\r\n      name: this.formGroup.value.name,\r\n      description: this.formGroup.value.description,\r\n      isDefault: this.formGroup.value.isDefault,\r\n      isPublic: this.formGroup.value.isPublic,\r\n      filters: this.record.filters\r\n    };\r\n  }\r\n}\r\n","<div class=\"dialog__header\">\r\n  <span class=\"forge-typography--headline5\">Save search</span>\r\n  <forge-icon-button class=\"forge-flex-item--right\">\r\n    <button type=\"button\" aria-label=\"close\" (click)=\"onCancel()\">\r\n      <forge-icon name=\"close\"></forge-icon>\r\n    </button>\r\n  </forge-icon-button>\r\n</div>\r\n\r\n<div class=\"dialog__body\">\r\n  <form class=\"form-grid\" novalidate autocomplete=\"off\" [formGroup]=\"formGroup\">\r\n    <forge-text-field required [appFormControlInvalid]=\"formGroup.controls.name\">\r\n      <input type=\"text\" appAutoFocus id=\"search-save-name\" formControlName=\"name\">\r\n      <label for=\"search-save-name\" slot=\"label\">Name</label>\r\n      <span slot=\"helper-text\" class=\"app-form-control-invalid\">A name is required</span>\r\n    </forge-text-field>\r\n    <forge-text-field>\r\n      <input type=\"text\" id=\"search-save-description\" formControlName=\"description\">\r\n      <label for=\"search-save-description\" slot=\"label\">Description</label>\r\n    </forge-text-field>\r\n    <forge-checkbox>\r\n      <input type=\"checkbox\" id=\"search-save-default\" formControlName=\"isDefault\">\r\n      <label for=\"search-save-default\">Make this your default search</label>\r\n    </forge-checkbox>\r\n    <forge-checkbox>\r\n      <input type=\"checkbox\" id=\"search-save-public\" formControlName=\"isPublic\">\r\n      <label for=\"search-save-public\">Make this search public</label>\r\n    </forge-checkbox>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"dialog__footer\">\r\n  <forge-button type=\"outlined\" class=\"forge-flex-item--right\">\r\n    <button type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n  </forge-button>\r\n  <forge-button type=\"raised\">\r\n    <button type=\"button\" (click)=\"onSave()\" [disabled]=\"formGroup.invalid\">Save</button>\r\n  </forge-button>\r\n</div>","import { Directive, ElementRef, forwardRef, HostListener, inject, Input } from '@angular/core';\r\nimport { StaticProvider } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { isDefined } from '@tylertech/forge-core';\r\n\r\nexport const INDETERMINATE_VALUE_ACCESSOR: StaticProvider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => IndeterminateDirective),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[appIndeterminate]',\r\n  standalone: true,\r\n  providers: [INDETERMINATE_VALUE_ACCESSOR]\r\n})\r\nexport class IndeterminateDirective implements ControlValueAccessor {\r\n  private elementRef = inject(ElementRef);\r\n\r\n  #value?: boolean | null;\r\n  #indeterminateEnabled = true;\r\n\r\n  @HostListener('change')\r\n  public elementChange() {\r\n    if (this.#indeterminateEnabled) {\r\n      if (!isDefined(this.#value)) {\r\n        this.#value = true;\r\n      } else if (this.#value) {\r\n        this.#value = false;\r\n      } else {\r\n        this.#value = null;\r\n      }\r\n      (this.elementRef.nativeElement as HTMLInputElement).indeterminate = !isDefined(this.#value);\r\n      (this.elementRef.nativeElement as HTMLInputElement).checked = this.#value ? true : false;\r\n    } else {\r\n      this.#value = (this.elementRef.nativeElement as HTMLInputElement).checked;\r\n    }\r\n\r\n    this.change(this.#value);\r\n    this.onTouched();\r\n  }\r\n  @HostListener('blur')\r\n  public elementBlur() {\r\n    this.onTouched();\r\n  }\r\n\r\n  @Input()\r\n  public set appIndeterminate(value: boolean) {\r\n    this.#indeterminateEnabled = value?.toString() === 'false' ? false : true;\r\n    if (!this.#indeterminateEnabled && (this.elementRef.nativeElement as HTMLInputElement).indeterminate) {\r\n      (this.elementRef.nativeElement as HTMLInputElement).indeterminate = false;\r\n      (this.elementRef.nativeElement as HTMLInputElement).checked = false;\r\n      this.#value = false;\r\n      this.change(this.#value);\r\n    }\r\n  }\r\n\r\n  public onChange = (_: any) => { };\r\n  public onTouched = () => { };\r\n\r\n  public writeValue(value: any): void {\r\n    if (this.#value !== value) {\r\n      this.#value = value;\r\n      if (this.#indeterminateEnabled) {\r\n        (this.elementRef.nativeElement as HTMLInputElement).indeterminate = !isDefined(this.#value);\r\n      }\r\n      (this.elementRef.nativeElement as HTMLInputElement).checked = this.#value ? true : false;\r\n    }\r\n  }\r\n\r\n  public registerOnChange(fn: (_: boolean) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public change(value: boolean | null): void {\r\n    this.onChange(value);\r\n  }\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <div slot=\"start\">\r\n    <h2 class=\"forge-typography--title\">Search</h2>\r\n    @if (searchCache.activeSearchId) {\r\n    <forge-divider vertical></forge-divider>\r\n    <span class=\"forge-typography--subtitle1-secondary\">{{searchName}}</span>\r\n    <span class=\"forge-typography--subtitle2-secondary\">{{searchDescription}}</span>\r\n    }\r\n  </div>\r\n  <div slot=\"end\">\r\n    <forge-button type=\"outlined\">\r\n      <button type=\"button\" (click)=\"onSaveSearch()\">\r\n        <span>Save search</span>\r\n      </button>\r\n    </forge-button>\r\n    <forge-button type=\"outlined\">\r\n      <button type=\"button\" #searchesPopup=\"forgePopup\" [forgePopup]=\"searchesPopupTemplate\" [forgePopupPlacement]=\"'bottom-start'\" (click)=\"searchesPopup.open()\">\r\n        <span>Saved searches</span>\r\n        <forge-icon name=\"arrow_drop_down\"></forge-icon>\r\n      </button>\r\n    </forge-button>\r\n    <forge-button type=\"outlined\">\r\n      <button type=\"button\" (click)=\"onClearSearch()\">\r\n        <span>Clear all</span>\r\n      </button>\r\n    </forge-button>\r\n    <forge-button type=\"raised\">\r\n      <button type=\"button\" (click)=\"onSearch()\">\r\n        <span>Search</span>\r\n      </button>\r\n    </forge-button>\r\n  </div>\r\n</forge-toolbar>\r\n\r\n<ng-template #searchesPopupTemplate>\r\n  <forge-list class=\"searches-popup\" (forge-list-item-select)=\"onSearchAction($event, 'search', $event.detail.value)\">\r\n    <forge-list-item>\r\n      <span>Add new search</span>\r\n    </forge-list-item>\r\n    <forge-divider></forge-divider>\r\n    @for (search of searchCache.searches; track search.id) {\r\n    <forge-list-item [value]=\"search.id\">\r\n      <span>{{search.name}}</span>\r\n      <div slot=\"trailing\">\r\n        <forge-icon-button>\r\n          <button (click)=\"onSearchAction($any($event), 'edit', search.id)\">\r\n            <forge-icon name=\"edit\"></forge-icon>\r\n          </button>\r\n        </forge-icon-button>\r\n        <forge-icon-button>\r\n          <button (click)=\"onSearchAction($any($event), 'delete', search.id)\">\r\n            <forge-icon name=\"delete\"></forge-icon>\r\n          </button>\r\n        </forge-icon-button>\r\n      </div>\r\n    </forge-list-item>\r\n    }\r\n  </forge-list>\r\n</ng-template>\r\n\r\n<div class=\"body\">\r\n  <form novalidate autocomplete=\"off\" [formGroup]=\"formGroup\" class=\"form\" (ngSubmit)=\"onSearch()\">\r\n    <ng-container formGroupName=\"name\">\r\n      <forge-autocomplete multiple=\"true\" formControlName=\"value\" [filter]=\"nameFilter\" allow-unmatched=\"true\">\r\n        <forge-text-field>\r\n          <input type=\"text\" id=\"app--search--name\" />\r\n          <label for=\"app--search--name\">Name</label>\r\n          <forge-icon slot=\"trailing\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\r\n          <forge-icon-button slot=\"addon-end\" class=\"operator__addon\" [ngClass]=\"{'operator__addon--selected': formGroup.controls.name.value.operator}\">\r\n            <button type=\"button\" #nameOperatorPopup=\"forgePopup\" [forgePopup]=\"operatorPopupTemplate\" (click)=\"onOperatorPopupOpen($event, nameOperatorPopup, 'name')\">\r\n              <forge-icon name=\"bolt\"></forge-icon>\r\n            </button>\r\n          </forge-icon-button>\r\n        </forge-text-field>\r\n      </forge-autocomplete>\r\n    </ng-container>\r\n\r\n    <ng-container formGroupName=\"dateOfBirth\">\r\n      <forge-date-picker formControlName=\"value\">\r\n        <forge-text-field>\r\n          <input type=\"text\" id=\"app--search--date-of-birth\" />\r\n          <label for=\"app--search--date-of-birth\">Date</label>\r\n          <forge-icon-button slot=\"addon-end\" class=\"operator__addon\" [ngClass]=\"{'operator__addon--selected': formGroup.controls.dateOfBirth.value.operator}\">\r\n            <button type=\"button\" #dateOfBirthOperatorPopup=\"forgePopup\" [forgePopup]=\"operatorPopupTemplate\" (click)=\"onOperatorPopupOpen($event, dateOfBirthOperatorPopup, 'dateOfBirth')\">\r\n              <forge-icon name=\"bolt\"></forge-icon>\r\n            </button>\r\n          </forge-icon-button>\r\n        </forge-text-field>\r\n      </forge-date-picker>\r\n    </ng-container>\r\n\r\n    <ng-container formGroupName=\"address\">\r\n      <forge-text-field>\r\n        <input type=\"text\" id=\"app--search--address\" formControlName=\"value\" />\r\n        <label for=\"app--search--address\" slot=\"label\">Address</label>\r\n        <ng-container *ngTemplateOutlet=\"opertatorAddonTemplate, context: { name: 'address' }\"></ng-container>\r\n      </forge-text-field>\r\n    </ng-container>\r\n\r\n    <forge-checkbox>\r\n      <input type=\"checkbox\" id=\"app--search--include\" formControlName=\"include\" [appIndeterminate]=\"true\" />\r\n      <label for=\"app--search--include\">Include</label>\r\n    </forge-checkbox>\r\n\r\n    <app-autocomplete-range [optionFilter]=\"facetFilter\" formControlName=\"facet\" label=\"Facet\"></app-autocomplete-range>\r\n  </form>\r\n\r\n  <p>{{formGroup.getRawValue() | json}}</p>\r\n</div>\r\n\r\n<ng-template #opertatorAddonTemplate let-name=\"name\">\r\n  <forge-icon-button slot=\"addon-end\" class=\"operator__addon\" [ngClass]=\"{'operator__addon--selected': formGroup.get(name)?.value.operator}\">\r\n    <button type=\"button\" #operatorPopup=\"forgePopup\" [forgePopup]=\"operatorPopupTemplate\" (click)=\"onOperatorPopupOpen($event, operatorPopup, name)\">\r\n      <forge-icon name=\"bolt\"></forge-icon>\r\n    </button>\r\n  </forge-icon-button>\r\n</ng-template>\r\n\r\n<ng-template #operatorPopupTemplate>\r\n  <forge-list class=\"operator-popup\" (forge-list-item-select)=\"onOperatorSelected($event.detail.value)\">\r\n    @for (option of operatorOptions; track i; let i = $index) {\r\n    <forge-list-item [value]=\"option.value\" [selected]=\"operatorPopupFormGroup?.value.operator === option.value\">\r\n      <span>{{option.label}}</span>\r\n      @if (operatorPopupFormGroup?.value.operator === option.value) {\r\n      <forge-icon name=\"check\" slot=\"trailing\"></forge-icon>\r\n      }\r\n    </forge-list-item>\r\n    }\r\n  </forge-list>\r\n</ng-template>","import { Component, ViewChild, OnInit, inject } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { AutocompleteFilterCallback, IOption } from '@tylertech/forge';\r\nimport { PopupDirective, DialogService, ToastService, ForgeToolbarModule, ForgeDividerModule, ForgeButtonModule, ForgeIconModule, ForgeListModule, ForgeListItemModule, ForgeIconButtonModule, ForgeAutocompleteModule, ForgeTextFieldModule, ForgeDatePickerModule, ForgeCheckboxModule, ForgePopupModule } from '@tylertech/forge-angular';\r\nimport { Observable, lastValueFrom, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { ISearch } from 'src/app/shared/interfaces/search.interface';\r\nimport { SearchSaveComponent } from './save/search-save.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AutocompleteRangeComponent } from 'src/app/shared/components/autocomplete-range/autocomplete-range.component';\r\nimport { IndeterminateDirective } from 'src/app/shared/directives/indeterminate/indeterminate.directive';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ForgeAutocompleteModule,\r\n    ForgeButtonModule,\r\n    ForgeCheckboxModule,\r\n    ForgeDatePickerModule,\r\n    ForgeDividerModule,\r\n    ForgeIconButtonModule,\r\n    ForgeIconModule,\r\n    ForgeListItemModule,\r\n    ForgeListModule,\r\n    ForgePopupModule,\r\n    ForgeTextFieldModule,\r\n    ForgeToolbarModule,\r\n    AutocompleteRangeComponent,\r\n    IndeterminateDirective\r\n  ],\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  private dialogService = inject(DialogService);\r\n  private toastService = inject(ToastService);\r\n  private dataService = inject(AppDataService);\r\n\r\n  @ViewChild('searchesPopup', { static: false })\r\n  private searchesPopup?: PopupDirective;\r\n  private storageKey = 'search-searches';\r\n  private operatorPopup?: PopupDirective;\r\n\r\n  public searchName?: string;\r\n  public searchDescription?: string;\r\n  // TODO consider moving to a cache service\r\n  public searchCache: { activeSearchId?: number; searches: ISearch[] } = {\r\n    activeSearchId: undefined,\r\n    searches: []\r\n  };\r\n  // TODO consider moving to a cache service\r\n  public formGroup = new FormGroup({\r\n    name: new FormGroup({\r\n      value: new FormControl(),\r\n      operator: new FormControl()\r\n    }),\r\n    dateOfBirth: new FormGroup({\r\n      value: new FormControl(),\r\n      operator: new FormControl()\r\n    }),\r\n    address: new FormGroup({\r\n      value: new FormControl(),\r\n      operator: new FormControl()\r\n    }),\r\n    include: new FormControl(),\r\n    facet: new FormControl()\r\n  });\r\n  public facetOptions: { label: string; value: number }[] = [];\r\n  public operatorOptions = [\r\n    { value: null, label: 'None' },\r\n    { value: 0, label: 'Equal' },\r\n    { value: 1, label: 'Not equal' },\r\n    { value: 2, label: 'Greater than' },\r\n    { value: 3, label: 'Less than' },\r\n    { value: 4, label: 'Greater than equal to' },\r\n    { value: 5, label: 'Less than equal to' },\r\n    { value: 6, label: 'Range' },\r\n    { value: 7, label: 'Contains' },\r\n    { value: 8, label: 'Not contains' },\r\n    { value: 9, label: 'Empty' }\r\n  ];\r\n  public operatorPopupFormGroup?: FormGroup;\r\n  public nameFilter: AutocompleteFilterCallback = (filter: string) => lastValueFrom(this.dataService.getPeople().pipe(\r\n    map(r => r.data\r\n      .filter(p => p.firstName.toLocaleLowerCase().includes(filter.toLocaleLowerCase()) || p.lastName.toLocaleLowerCase().includes(filter.toLocaleLowerCase()))\r\n      .map(p => ({ label: `${p.firstName} ${p.lastName}`, value: p.id }))\r\n    )\r\n  ));\r\n  public facetFilter = (filter: string): Observable<IOption[]> => {\r\n    return of(this.facetOptions);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataService.getSearches(this.storageKey).subscribe((result) => {\r\n      this.searchCache.searches = result || [];\r\n\r\n      const activeSearch = this.searchCache.searches.find((s) => s.id === this.searchCache.activeSearchId);\r\n      if (isDefined(activeSearch)) {\r\n        this.searchName = activeSearch?.name;\r\n        this.searchDescription = activeSearch?.description;\r\n        this.formGroup.patchValue(activeSearch?.filters);\r\n      }\r\n    });\r\n    for (let index = 0; index < 20; index++) {\r\n      this.facetOptions.push({ value: index, label: `Facet Option ${index}` });\r\n    }\r\n  }\r\n\r\n  public onSearch() {\r\n    // TODO implement search action\r\n  }\r\n\r\n  public onSaveSearch(search?: {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    isDefault: boolean;\r\n    isPublic: boolean;\r\n    filters: { property: string; value: string }[];\r\n  }) {\r\n    const activeSearch = isDefined(search) ? search : this.searchCache.searches.find((s) => s.id === this.searchCache.activeSearchId);\r\n    const record = {\r\n      id: activeSearch?.id,\r\n      name: activeSearch?.name,\r\n      description: activeSearch?.description,\r\n      isDefault: activeSearch?.isDefault,\r\n      isPublic: activeSearch?.isPublic,\r\n      filters: this.formGroup.value\r\n    };\r\n    const dialogRef = this.dialogService.show(SearchSaveComponent, { backdropClose: false, escapeClose: false }, { data: record });\r\n    const sub = dialogRef.afterClosed.subscribe((result) => {\r\n      sub.unsubscribe();\r\n      if (result) {\r\n        if (isDefined(result.id)) {\r\n          const searchIndex = this.searchCache.searches.findIndex((s) => s.id === result.id);\r\n          if (searchIndex !== -1) {\r\n            this.searchCache.searches[searchIndex] = result;\r\n          }\r\n        } else {\r\n          result.id = this.searchCache.searches.length ? Math.max(...this.searchCache.searches.map((s) => s.id)) + 1 : 1;\r\n          this.searchCache.searches.push(result);\r\n        }\r\n\r\n        this.dataService.saveSearches(this.storageKey, this.searchCache.searches).subscribe(\r\n          {\r\n            next: () => {\r\n              this.searchCache.activeSearchId = result.id;\r\n              this.searchName = result.name;\r\n              this.searchDescription = result.description;\r\n              this.toastService.show({ message: 'Search saved' });\r\n            },\r\n            error: () => this.toastService.show({ message: 'Search save failed' })\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  public onClearSearch() {\r\n    this.formGroup.controls.include.setValue(null);\r\n    this.formGroup.reset();\r\n  }\r\n\r\n  public onSearchAction(event: CustomEvent, action: string, id: number) {\r\n    event.stopPropagation();\r\n    this.searchesPopup?.close();\r\n\r\n    if (!isDefined(id)) {\r\n      this.searchCache.activeSearchId = undefined;\r\n      this.searchName = '';\r\n      this.searchDescription = '';\r\n      this.formGroup.reset();\r\n    } else {\r\n      const search = this.searchCache.searches.find((s) => s.id === id);\r\n      if (isDefined(search)) {\r\n        switch (action) {\r\n          case 'search':\r\n            this.searchCache.activeSearchId = search?.id;\r\n            this.searchName = search?.name;\r\n            this.searchDescription = search?.description;\r\n            this.onSearch();\r\n            break;\r\n          case 'edit':\r\n            this.searchCache.activeSearchId = search?.id;\r\n            this.searchName = search?.name;\r\n            this.searchDescription = search?.description;\r\n            this.formGroup.patchValue(search?.filters);\r\n            break;\r\n          case 'copy': {\r\n            const copySearch = JSON.parse(JSON.stringify(search));\r\n            copySearch.id = undefined;\r\n            copySearch.name = `${copySearch.name} copy`;\r\n            copySearch.isDefault = false;\r\n            this.onSaveSearch(copySearch);\r\n            break;\r\n          }\r\n          case 'delete': {\r\n            const searchIndex = this.searchCache.searches.findIndex((s) => s.id === search?.id);\r\n            if (searchIndex !== -1) {\r\n              this.searchCache.searches.splice(searchIndex, 1);\r\n              this.dataService.saveSearches(this.storageKey, this.searchCache.searches).subscribe((result) => { });\r\n            }\r\n\r\n            if (this.searchCache.activeSearchId === search?.id) {\r\n              this.searchCache.activeSearchId = undefined;\r\n              this.searchName = '';\r\n              this.searchDescription = '';\r\n            }\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public onOperatorPopupOpen(event: Event, popup: PopupDirective, name: string) {\r\n    event.stopPropagation();\r\n    this.operatorPopupFormGroup = this.formGroup.get(name) as FormGroup;\r\n    this.operatorPopup = popup;\r\n    this.operatorPopup.open();\r\n  }\r\n\r\n  public onOperatorSelected(value: string | number) {\r\n    value = parseInt(value as string, 10);\r\n    this.operatorPopupFormGroup?.get('operator')?.setValue(value);\r\n    this.operatorPopup?.close();\r\n  }\r\n\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime = 0, intervalOrScheduler, scheduler = asyncScheduler) {\n    let intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable((subscriber) => {\n        let due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        let n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n","export function isValidDate(value) {\n    return value instanceof Date && !isNaN(value);\n}\n","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector = identity) {\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate((source, subscriber) => {\n        let previousKey;\n        let first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n"],"x_google_ignoreList":[5,6,7,8,9,10,11,12,13,14,15]}