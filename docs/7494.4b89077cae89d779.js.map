{"version":3,"file":"7494.4b89077cae89d779.js","mappings":"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","names":["i0","filter_r1","property","label","FilterChipsComponent","constructor","this","filters","filter","EventEmitter","onFilterDelete","event","filterIndex","findIndex","f","detail","value","splice","emit","t","core","Xpm","selectors","inputs","outputs","standalone","features","decls","vars","consts","template","rf","ctx","$event","FilterChipsComponent_forge_chip_1_Template","CommonModule","i1","styles","ctx_r0","tooltip","RouterlinkButtonComponent","route","queryParams","icon","RouterlinkButtonComponent_forge_tooltip_3_Template","length","RouterModule","i2","PeopleComponent","TableUtils","static","clickHandler","linkElement","document","createElement","classList","add","innerText","toString","type","style","minWidth","addEventListener","title","iconButtonElement","buttonElement","iconElement","setAttribute","appendChild","tooltipElement","innerHTML","selectHandler","options","menuElement","createIconButton","undefined","rowIndex","tableElement","viewContainerRef","component","data","callback","componentRef","expanderElement","isExpanded","isRowExpanded","querySelector","collapseRow","then","destroy","expandRow","createComponent","instance","isDefined","hostView","rootNodes","BaseTableComponent","recordCount","tableColumns","initializeSort","filterCache","sort","column","find","c","sortDirection","direction","initialSort","isFiltered","getColumnIndex","map","indexOf","onTableSort","columnProperty","getColumnPropertyFromEventIndex","columnIndex","skip","getRecords","onTablePaginatorChange","pageIndex","pageSize","take","setTableFiltersAF","window","cancelAnimationFrame","resetTable","index","hidden","Yz7","factory","ɵfac","PeopleCacheService","homeView","storageKey","showFilter","SortDirection","FilterComponent","appCache","moduleCache","viewCache","formGroup","FormGroup","firstName","FormControl","lastName","gender","occupation","facet","genderOptions","facetFilter","push","of","ngOnInit","loadForm","onClearFilter","reset","onApplyFilter","Object","entries","Utils","e","propertyLabel","forEach","formControl","get","setValue","TableDetailComponent","ctx_r7","column_r9","header","_r11","ctx_r10","ctx_r12","HomeComponent_ng_container_8_forge_icon_4_Template","HomeComponent_ng_container_8_forge_badge_5_Template","ctx_r13","onTableOptionSelected","HomeComponent_ng_container_8_forge_option_12_Template","selectedTableColumns","optionalTableColumns","ctx_r1","selectedPeople","_r15","ctx_r14","ctx_r3","HomeComponent","router","appDataService","ngZone","super","isBusy","recordset","storageColumns","localStorage","getItem","columns","JSON","parse","isArray","storedColumn","sc","width","align","CellAlign","cellElement","imgElement","src","id","sortable","filterDelegate","TextFieldComponentDelegate","peopleTable","console","log","run","navigate","ngOnDestroy","onPeopleSelected","clearSelection","clearSelections","getSelectedRows","includes","setItem","stringify","reloadFilter","peopleFilter","getPeople","pipe","finalize","subscribe","result","count","i3","viewQuery","HomeComponent_ng_container_8_Template","HomeComponent_ng_container_9_Template","HomeComponent_div_12_Template","HomeComponent_div_13_Template","HomeComponent_div_14_Template","_c1","_c2","DetailComponent","cache","noImageUrl","snapshot","params","getPerson","r","person","imageUrl","onNavigate","onViewWiki","open","url","onImageError","targetElement","target","onerror","i4","quote","routes","path","children","redirectTo","pathMatch","PeopleModule","oAB","cJS","imports","AutocompleteRangeComponent","CardComponent","AppFormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/shared/components/filter-chips/filter-chips.component.html","./src/app/shared/components/filter-chips/filter-chips.component.ts","./src/app/shared/components/routerlink-button/routerlink-button.component.html","./src/app/shared/components/routerlink-button/routerlink-button.component.ts","./src/app/people/people.component.ts","./src/app/people/people.component.html","./src/app/shared/table/utils.ts","./src/app/shared/table/base-table.component.ts","./src/app/people/people-cache.service.ts","./src/app/people/home/filter/filter.component.ts","./src/app/people/home/filter/filter.component.html","./src/app/people/home/table-detail/table-detail.component.ts","./src/app/people/home/table-detail/table-detail.component.html","./src/app/people/home/home.component.html","./src/app/people/home/home.component.ts","./src/app/people/detail/detail.component.ts","./src/app/people/detail/detail.component.html","./src/app/people/people.module.ts"],"sourcesContent":["<forge-chip-set type=\"input\" dense=\"true\" (forge-chip-delete)=\"onFilterDelete($event)\">\r\n  <forge-chip *ngFor=\"let filter of filters\" [value]=\"filter.property\">{{filter.label}}</forge-chip>\r\n</forge-chip-set>","import { CommonModule } from '@angular/common';\r\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-filter-chips',\r\n  templateUrl: './filter-chips.component.html',\r\n  styleUrls: ['./filter-chips.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class FilterChipsComponent {\r\n  @Input()\r\n  public filters: { property: string; value: string; label: string }[] = [];\r\n\r\n  @Output()\r\n  public filter = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  public onFilterDelete(event: CustomEvent) {\r\n    const filterIndex = this.filters.findIndex((f) => f.property === event.detail.value);\r\n    if (filterIndex !== -1) {\r\n      this.filters.splice(filterIndex, 1);\r\n      this.filter.emit();\r\n    }\r\n  }\r\n}\r\n","<forge-icon-button>\n  <a [routerLink]=\"route\" [queryParams]=\"queryParams\" class=\"forge-icon-button\">\n    <forge-icon [name]=\"icon\"></forge-icon>\n  </a>\n  <forge-tooltip *ngIf=\"tooltip?.length\">{{tooltip}}</forge-tooltip>\n</forge-icon-button>","import { CommonModule } from '@angular/common';\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, Input, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-routerlink-button',\n  templateUrl: './routerlink-button.component.html',\n  styleUrls: ['./routerlink-button.component.scss'],\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class RouterlinkButtonComponent {\n  @Input()\n  public route?: string;\n\n  @Input()\n  public queryParams?: any;\n\n  @Input()\n  public icon?: string;\n\n  @Input()\n  public tooltip?: string;\n\n  constructor() { }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-people',\n  templateUrl: './people.component.html',\n  styleUrls: ['./people.component.scss']\n})\nexport class PeopleComponent {\n  constructor() { }\n}\n","<router-outlet></router-outlet>","import { isDefined } from '@tylertech/forge-core';\r\nimport { TableComponent, IMenuOption, MenuComponent } from '@tylertech/forge';\r\nimport { ViewContainerRef, ComponentRef, EmbeddedViewRef, Type } from '@angular/core';\r\n\r\nexport class TableUtils {\r\n  public static createLinkButton(label: string | number, clickHandler: (event: Event) => void): HTMLButtonElement {\r\n    const linkElement = document.createElement('button');\r\n    linkElement.classList.add('forge-hyperlink');\r\n    linkElement.innerText = label.toString();\r\n    linkElement.type = 'button';\r\n    linkElement.style.minWidth = '36px';\r\n    linkElement.addEventListener('click', clickHandler);\r\n    return linkElement;\r\n  }\r\n\r\n  public static createIconButton(icon: string, clickHandler?: (event: Event) => void, title?: string): HTMLElement {\r\n    const iconButtonElement = document.createElement('forge-icon-button');\r\n\r\n    const buttonElement = document.createElement('button');\r\n    buttonElement.type = 'button';\r\n    if (clickHandler) {\r\n      buttonElement.addEventListener('click', clickHandler);\r\n    }\r\n\r\n    const iconElement = document.createElement('forge-icon');\r\n    iconElement.setAttribute('name', icon);\r\n\r\n    buttonElement.appendChild(iconElement);\r\n    iconButtonElement.appendChild(buttonElement);\r\n\r\n    if (title) {\r\n      const tooltipElement = document.createElement('forge-tooltip');\r\n      tooltipElement.innerHTML = title;\r\n      buttonElement.appendChild(tooltipElement);\r\n    }\r\n    return iconButtonElement;\r\n  }\r\n\r\n  public static createMenuButton(icon: string, selectHandler: (event: Event) => void, options: IMenuOption[], title?: string): HTMLElement {\r\n    const menuElement = document.createElement('forge-menu') as MenuComponent;\r\n    menuElement.options = options;\r\n    menuElement.addEventListener('forge-menu-select', selectHandler);\r\n\r\n    menuElement.appendChild(this.createIconButton(icon, undefined, title));\r\n\r\n    return menuElement;\r\n  }\r\n\r\n  public static createExpanderRow<T>(\r\n    rowIndex: number,\r\n    tableElement: TableComponent,\r\n    viewContainerRef: ViewContainerRef,\r\n    component: Type<T>,\r\n    title?: string,\r\n    data?: any,\r\n    callback?: (value?: any) => any\r\n  ): HTMLElement {\r\n    let componentRef: ComponentRef<any> | null;\r\n\r\n    const expanderElement = TableUtils.createIconButton(\r\n      'expand_more',\r\n      () => {\r\n        const isExpanded = tableElement.isRowExpanded(rowIndex);\r\n        expanderElement.querySelector('forge-icon')?.setAttribute('name', isExpanded ? 'expand_more' : 'expand_less');\r\n        if (isExpanded) {\r\n          tableElement.collapseRow(rowIndex).then(() => {\r\n            componentRef?.destroy();\r\n            componentRef = null;\r\n          });\r\n        } else {\r\n          tableElement.expandRow(rowIndex, () => {\r\n            componentRef = viewContainerRef.createComponent(component);\r\n            componentRef.instance.rowIndex = rowIndex;\r\n            if (isDefined(data)) {\r\n              componentRef.instance.data = data;\r\n            }\r\n            if (isDefined(callback)) {\r\n              componentRef.instance.callback = callback;\r\n            }\r\n            const rootNode = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n            return rootNode;\r\n          });\r\n        }\r\n      },\r\n      title\r\n    );\r\n\r\n    return expanderElement;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { IColumnConfiguration, SortDirection } from '@tylertech/forge';\r\nimport { IFilterParameter } from 'src/app/shared/interfaces/filter.interface';\r\n\r\n@Injectable()\r\nexport abstract class BaseTableComponent {\r\n  public recordCount = 0;\r\n  public tableColumns: IColumnConfiguration[] = [];\r\n\r\n  private setTableFiltersAF?: number;\r\n\r\n  public abstract filterCache: IFilterParameter;\r\n\r\n  constructor() { }\r\n\r\n  public initializeSort() {\r\n    if (this.filterCache?.sort?.property.length) {\r\n      const column = this.tableColumns.find((c) => c.property === this.filterCache?.sort?.property) as IColumnConfiguration;\r\n      if (isDefined(column)) {\r\n        column.sortDirection = this.filterCache?.sort?.direction;\r\n        column.initialSort = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public get isFiltered(): boolean {\r\n    return this.filterCache?.filters?.length ? true : false;\r\n  }\r\n\r\n  public getColumnIndex(column: string): number {\r\n    return this.tableColumns.map((c) => c.property).indexOf(column);\r\n  }\r\n\r\n  public onTableSort(sort: { columnIndex: number; direction: SortDirection }): void {\r\n    const columnProperty = this.getColumnPropertyFromEventIndex(sort.columnIndex) as string;\r\n    this.filterCache.sort = { property: columnProperty, direction: sort.direction };\r\n    this.filterCache.skip = 0;\r\n    this.getRecords();\r\n  }\r\n\r\n  public onTablePaginatorChange(detail: { pageIndex: number; pageSize: number }): void {\r\n    this.filterCache.skip = detail.pageIndex * detail.pageSize;\r\n    this.filterCache.take = detail.pageSize;\r\n    this.getRecords();\r\n  }\r\n\r\n  protected destroy(): void {\r\n    if (this.setTableFiltersAF) {\r\n      window.cancelAnimationFrame(this.setTableFiltersAF);\r\n    }\r\n  }\r\n\r\n  protected resetTable(): void {\r\n    this.filterCache.filters = undefined;\r\n    this.filterCache.skip = 0;\r\n  }\r\n\r\n  private getColumnPropertyFromEventIndex(index: number) {\r\n    return this.tableColumns.filter((c) => !c.hidden)[index].property;\r\n  }\r\n\r\n  protected abstract getRecords(): void;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SortDirection } from '@tylertech/forge';\r\nimport { IPerson } from 'src/app/shared/interfaces/person.interface';\r\n\r\n@Injectable()\r\nexport class PeopleCacheService {\r\n  public people?: IPerson[];\r\n  public homeView = {\r\n    storageKey: 'people-home',\r\n    showFilter: false,\r\n    filter: {\r\n      sort: {\r\n        property: 'lastName',\r\n        direction: SortDirection.Ascending\r\n      },\r\n      filters: [] as any[],\r\n      skip: 0,\r\n      take: 25\r\n    }\r\n  };\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { IOption } from '@tylertech/forge';\n\nimport { Utils } from 'src/utils';\nimport { AppCacheService } from 'src/app/app-cache.service';\nimport { PeopleCacheService } from '../../people-cache.service';\n\n@Component({\n  selector: 'app-people-home-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnInit {\n\n  @Output()\n  public filter = new EventEmitter();\n\n  public viewCache = this.moduleCache.homeView;\n  public formGroup = new FormGroup({\n    firstName: new FormControl(),\n    lastName: new FormControl(),\n    gender: new FormControl(),\n    occupation: new FormControl(),\n    facet: new FormControl()\n  });\n  public genderOptions: IOption[] = [\n    { label: 'Male', value: 'male' },\n    { label: 'Female', value: 'female' },\n    { label: 'Undecided', value: 'undecided' }\n  ];\n\n  public facetFilter = (filter: string): Observable<IOption[]> => {\n    const options = [];\n    for (let index = 0; index < 20; index++) {\n      options.push({ value: index, label: `Facet Option ${index}` });\n    }\n    return of(options);\n  }\n\n  constructor(public appCache: AppCacheService, public moduleCache: PeopleCacheService) { }\n\n  public ngOnInit() {\n    this.loadForm(this.moduleCache.homeView.filter.filters);\n  }\n\n  public onClearFilter() {\n    this.formGroup.reset();\n    this.moduleCache.homeView.filter.filters = [];\n  }\n\n  public onApplyFilter() {\n    this.moduleCache.homeView.filter.filters = Object.entries(Utils.reduceObject(this.formGroup.value)).map(e => ({ property: e[0], value: e[1], label: this.propertyLabel(e[0]) })) || [];\n    this.filter.emit();\n  }\n\n  public loadForm(filters: any[]) {\n    this.formGroup.reset();\n    filters.forEach((f) => {\n      const formControl = this.formGroup.get(f.property);\n      if (formControl) {\n        formControl.setValue(f.value);\n      }\n    });\n  }\n\n  private propertyLabel(property: string): string {\n    switch (property) {\n      case 'firstName':\n        return 'First name';\n      case 'lastName':\n        return 'Last name';\n      case 'gender':\n        return 'Gender';\n      case 'occupation':\n        return 'Occupation';\n      case 'facet':\n        return 'Facet';\n      default:\n        return '';\n    }\n  }\n\n}\n","<forge-drawer direction=\"right\" type=\"dismissible\" [open]=\"viewCache.showFilter\" open=\"false\" (forge-drawer-close)=\"viewCache.showFilter = false\">\n  <div slot=\"header\" class=\"header\">\n    <span class=\"header__title forge-typography--subtitle1\">Filter people</span>\n    <forge-icon-button class=\"app--flex-right\">\n      <button type=\"button\" aria-label=\"close\" (click)=\"viewCache.showFilter = false\">\n        <forge-icon name=\"close\"></forge-icon>\n      </button>\n    </forge-icon-button>\n  </div>\n\n  <form class=\"body\" [formGroup]=\"formGroup\" novalidate autocomplete=\"off\" (ngSubmit)=\"onApplyFilter()\">\n    <forge-text-field>\n      <input type=\"text\" id=\"home-filter--first-name\" formControlName=\"firstName\">\n      <label for=\"home-filter--first-name\" slot=\"label\">First name</label>\n    </forge-text-field>\n    <forge-text-field>\n      <input type=\"text\" id=\"home-filter--last-name\" formControlName=\"lastName\">\n      <label for=\"home-filter--last-name\" slot=\"label\">Last name</label>\n    </forge-text-field>\n    <forge-select label=\"Gender\" formControlName=\"gender\" [options]=\"genderOptions\" multiple=\"true\"></forge-select>\n    <forge-text-field>\n      <input type=\"text\" id=\"home-filter--occupation\" formControlName=\"occupation\">\n      <label for=\"home-filter--occupation\" slot=\"label\">Occupation</label>\n    </forge-text-field>\n    <forge-divider></forge-divider>\n    <app-autocomplete-range [optionFilter]=\"facetFilter\" formControlName=\"facet\" label=\"Facet\"></app-autocomplete-range>\n  </form>\n\n  <div slot=\"footer\" class=\"footer\">\n    <forge-button type=\"outlined\">\n      <button type=\"button\" (click)=\"onClearFilter()\">Clear</button>\n    </forge-button>\n    <forge-button type=\"raised\">\n      <button type=\"submit\" (click)=\"onApplyFilter()\">Apply</button>\n    </forge-button>\n  </div>\n</forge-drawer>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-people-home-table-detail',\n  templateUrl: './table-detail.component.html',\n  styleUrls: ['./table-detail.component.scss']\n})\nexport class TableDetailComponent {\n  @Input()\n  public rowIndex?: number;\n\n  @Input()\n  public data?: any;\n\n  constructor() { }\n}\n","<app-card>\n  <div app-card-header slot=\"start\">\n    <span>Table row detail</span>\n  </div>\n\n  <p>{{ data | json}}</p>\n</app-card>","<forge-toolbar class=\"header\">\n  <h2 slot=\"start\" class=\"forge-typography--title\">People</h2>\n  <!-- <forge-icon-button slot=\"end\">\n    <a routerLink=\"/profile\" class=\"forge-icon-button\">\n      <forge-icon name=\"view_column\"></forge-icon>\n    </a>\n  </forge-icon-button> -->\n  <app-routerlink-button slot=\"end\" route=\"/profile\" icon=\"person\"></app-routerlink-button>\n</forge-toolbar>\n\n<div class=\"body\">\n  <div class=\"body__left\">\n    <div [ngClass]=\"{'app--hidden': isBusy}\" class=\"table\">\n      <div class=\"table__header\" [ngClass]=\"{'table__header-action': selectedPeople.length}\">\n        <ng-container *ngIf=\"!selectedPeople.length\">\n          <app-filter-chips [filters]=\"filterCache.filters\" (filter)=\"onApplyFilter(true)\"></app-filter-chips>\n          <forge-button class=\"app--flex-right\" type=\"outlined\">\n            <button type=\"button\" (click)=\"viewCache.showFilter = !viewCache.showFilter\">\n              <forge-icon name=\"filter_list\" *ngIf=\"!filterCache.filters?.length\"></forge-icon>\n              <forge-badge class=\"table__header__filter-count\" *ngIf=\"filterCache.filters.length\" theme=\"info-primary\">{{filterCache.filters?.length}}</forge-badge>\n              <span>Filter</span>\n            </button>\n          </forge-button>\n          <forge-icon-button id=\"home--column-select\" class=\"table__header__columns\">\n            <button type=\"button\" aria-label=\"Choose table columns\">\n              <forge-icon name=\"view_column\"></forge-icon>\n            </button>\n          </forge-icon-button>\n          <forge-select-dropdown target=\"#home--column-select\" multiple [value]=\"selectedTableColumns\" (change)=\"onTableOptionSelected($event.detail)\">\n            <forge-option *ngFor=\"let column of optionalTableColumns\" [value]=\"column.property\">\n              {{column.header}}\n            </forge-option>\n          </forge-select-dropdown>\n        </ng-container>\n\n        <ng-container *ngIf=\"selectedPeople.length\">\n          <span>{{selectedPeople.length}} people selected</span>\n        </ng-container>\n      </div>\n\n      <forge-table #peopleTable class=\"table__body\" [ngClass]=\"{'app--hidden': !recordCount}\" [data]=\"recordset\" [columnConfigurations]=\"tableColumns\" (forge-table-sort)=\"onTableSort($event.detail)\" select=\"true\" select-key=\"id\" (forge-table-select)=\"onPeopleSelected()\" (forge-table-select-all)=\"onPeopleSelected()\" fixed-headers=\"true\"></forge-table>\n\n      <div *ngIf=\"recordCount\" class=\"table__footer\">\n        <forge-paginator class=\"app--flex-right\" [pageIndex]=\"filterCache.skip / filterCache.take\" [pageSize]=\"filterCache.take\" [total]=\"recordCount\" (forge-paginator-change)=\"onTablePaginatorChange($event.detail)\"></forge-paginator>\n      </div>\n    </div>\n\n    <div class=\"empty-state\" *ngIf=\"!isBusy && !recordCount\">\n      <img src=\"https://cdn.forge.tylertech.com/v1/images/spot-hero/general-empty-state-spot-hero.svg\" alt=\"\" />\n      <div>No people found.</div>\n    </div>\n\n    <div class=\"busy-state\" *ngIf=\"isBusy\">\n      <forge-skeleton list-item></forge-skeleton>\n      <forge-skeleton list-item></forge-skeleton>\n      <forge-skeleton list-item></forge-skeleton>\n    </div>\n  </div>\n\n  <app-people-home-filter (filter)=\"onApplyFilter(false)\"></app-people-home-filter>\n</div>","import { Component, ElementRef, EmbeddedViewRef, NgZone, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { isArray } from '@tylertech/forge-core';\r\nimport { CellAlign, TableComponent, TextFieldComponentDelegate } from '@tylertech/forge';\r\nimport { TableUtils } from 'src/app/shared/table/utils';\r\nimport { Utils } from 'src/utils';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { IPerson } from 'src/app/shared/interfaces/person.interface';\r\nimport { BaseTableComponent } from 'src/app/shared/table/base-table.component';\r\nimport { PeopleCacheService } from '../people-cache.service';\r\nimport { FilterComponent } from './filter/filter.component';\r\nimport { TableDetailComponent } from './table-detail/table-detail.component';\r\nimport { finalize } from 'rxjs';\r\nimport { RouterlinkButtonComponent } from 'src/app/shared/components/routerlink-button/routerlink-button.component';\r\n\r\n@Component({\r\n  selector: 'app-people-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent extends BaseTableComponent implements OnInit, OnDestroy {\r\n  @ViewChild('peopleTable', { static: true })\r\n  private peopleTable?: TableComponent;\r\n  @ViewChild(FilterComponent)\r\n  private peopleFilter?: FilterComponent;\r\n\r\n  public isBusy = false;\r\n  public recordset: Array<IPerson> = [];\r\n  public filterCache = this.moduleCache.homeView.filter;\r\n  public viewCache = this.moduleCache.homeView;\r\n  public optionalTableColumns = [\r\n    { property: 'image', header: 'Image', hidden: false },\r\n    { property: 'firstName', header: 'First', hidden: false },\r\n    { property: 'lastName', header: 'Last', hidden: false },\r\n    { property: 'gender', header: 'Gender', hidden: false },\r\n    { property: 'occupation', header: 'Occupation', hidden: false }\r\n  ];\r\n  public selectedPeople: IPerson[] = [];\r\n  public get selectedTableColumns() {\r\n    return this.optionalTableColumns.filter(c => !c.hidden).map(c => c.property);\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private appDataService: AppDataService,\r\n    public moduleCache: PeopleCacheService,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private ngZone: NgZone\r\n  ) {\r\n    super();\r\n\r\n    let storageColumns = localStorage.getItem(this.moduleCache.homeView.storageKey);\r\n    if (storageColumns?.length) {\r\n      const columns = JSON.parse(storageColumns) as { property: string; hidden: boolean; }[];\r\n      if (isArray(columns)) {\r\n        this.optionalTableColumns.forEach(c => {\r\n          const storedColumn = columns.find((sc) => sc.property === c.property);\r\n          if (storedColumn) {\r\n            c.hidden = storedColumn.hidden;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.tableColumns = [\r\n      {\r\n        property: 'image',\r\n        width: 48,\r\n        align: CellAlign.Center,\r\n        hidden: this.optionalTableColumns.find((c) => c.property === 'image')?.hidden,\r\n        template: (rowIndex: number, cellElement: HTMLElement, data: any) => {\r\n          const imgElement = document.createElement('img') as HTMLImageElement;\r\n          imgElement.src = `mock-data/${Utils.formatNumber(data.id, '2.0-0')}-small.png`;\r\n          imgElement.classList.add('forge-table-cell__image');\r\n          return imgElement;\r\n        }\r\n      },\r\n      { header: 'Id', property: 'id', sortable: true, filter: true, filterDelegate: new TextFieldComponentDelegate() },\r\n      {\r\n        header: 'First',\r\n        property: 'firstName',\r\n        sortable: true,\r\n        filter: true,\r\n        filterDelegate: new TextFieldComponentDelegate(),\r\n        hidden: this.optionalTableColumns.find((c) => c.property === 'firstName')?.hidden\r\n      },\r\n      {\r\n        header: 'Last',\r\n        property: 'lastName',\r\n        sortable: true,\r\n        filter: true,\r\n        filterDelegate: new TextFieldComponentDelegate(),\r\n        hidden: this.optionalTableColumns.find((c) => c.property === 'lastName')?.hidden\r\n      },\r\n      {\r\n        header: 'Gender',\r\n        property: 'gender',\r\n        sortable: true,\r\n        filter: true,\r\n        filterDelegate: new TextFieldComponentDelegate(),\r\n        hidden: this.optionalTableColumns.find((c) => c.property === 'gender')?.hidden\r\n      },\r\n      {\r\n        header: 'Occupation',\r\n        property: 'occupation',\r\n        sortable: true,\r\n        filter: true,\r\n        filterDelegate: new TextFieldComponentDelegate(),\r\n        hidden: this.optionalTableColumns.find((c) => c.property === 'occupation')?.hidden\r\n      },\r\n      {\r\n        align: CellAlign.Right,\r\n        template: (rowIndex: number, cellElement: HTMLElement, data: any) => {\r\n          cellElement.appendChild(\r\n            TableUtils.createExpanderRow(\r\n              rowIndex,\r\n              this.peopleTable,\r\n              this.viewContainerRef,\r\n              TableDetailComponent,\r\n              'Toggle table detail',\r\n              data\r\n            )\r\n          );\r\n\r\n          // cellElement.appendChild(TableUtils.createLinkButton(\r\n          //   'View more',\r\n          //   (event: Event) => {\r\n          //     console.log(event);\r\n          //   }\r\n          // ));\r\n\r\n          cellElement.appendChild(TableUtils.createMenuButton(\r\n            'more_vert',\r\n            (event: Event) => {\r\n              console.log(event);\r\n            },\r\n            [\r\n              { value: 1, label: 'Option 1' },\r\n              { value: 2, label: 'Option 2' },\r\n              { value: 3, label: 'Option 3' }\r\n            ],\r\n            'More options'\r\n          ));\r\n\r\n          cellElement.appendChild(TableUtils.createIconButton(\r\n            'keyboard_arrow_right',\r\n            (event: Event) => {\r\n              this.ngZone.run(() => {\r\n                this.router.navigate([`people/detail/${data.id}`]);\r\n              });\r\n            },\r\n            'View person details'\r\n          ));\r\n\r\n          // const componentRef = this.viewContainerRef.createComponent(RouterlinkButtonComponent);\r\n          // componentRef.instance.route = '/profile';\r\n          // componentRef.instance.queryParams = { id: data.id };\r\n          // componentRef.instance.icon = 'person';\r\n          // componentRef.instance.tooltip = 'Show profile';\r\n          // const linkButtonNode = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n          // cellElement.appendChild(linkButtonNode);\r\n\r\n          return '';\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.initializeSort();\r\n    this.getRecords();\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.destroy();\r\n  }\r\n\r\n  public onPeopleSelected(clearSelection = false): void {\r\n    if (clearSelection) {\r\n      this.selectedPeople.length = 0;\r\n      this.peopleTable?.clearSelections();\r\n    } else {\r\n      this.selectedPeople = this.peopleTable?.getSelectedRows();\r\n    }\r\n  }\r\n\r\n  public onTableOptionSelected(columns: string[]) {\r\n    this.tableColumns = this.tableColumns.map(c => {\r\n      if (columns.includes(c.property as string)) {\r\n        c.hidden = false;\r\n      } else {\r\n        c.hidden = true;\r\n      }\r\n      return c;\r\n    });\r\n    this.optionalTableColumns = this.optionalTableColumns.map(c => {\r\n      if (columns.includes(c.property as string)) {\r\n        c.hidden = false;\r\n      } else {\r\n        c.hidden = true;\r\n      }\r\n      return c;\r\n    });\r\n    localStorage.setItem(\r\n      this.moduleCache.homeView.storageKey,\r\n      JSON.stringify(this.optionalTableColumns.map((c) => ({ property: c.property, hidden: c.hidden })))\r\n    );\r\n  }\r\n\r\n  public onApplyFilter(reloadFilter: boolean) {\r\n    this.getRecords();\r\n    if (reloadFilter) {\r\n      (this.peopleFilter as FilterComponent).loadForm(this.filterCache.filters);\r\n    }\r\n  }\r\n\r\n  protected getRecords(): void {\r\n    this.onPeopleSelected(true);\r\n    this.isBusy = true;\r\n    this.appDataService\r\n      .getPeople({\r\n        sort: this.filterCache.sort,\r\n        filters: this.filterCache.filters,\r\n        skip: this.filterCache.skip,\r\n        take: this.filterCache.take\r\n      }).pipe(\r\n        finalize(() => this.isBusy = false)\r\n      )\r\n      .subscribe((result) => {\r\n        this.recordset = result.data;\r\n        this.recordCount = result.count;\r\n      });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { isDefined } from '@tylertech/forge-core';\r\n\r\nimport { Utils } from 'src/utils';\r\nimport { AppCacheService } from 'src/app/app-cache.service';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { IPerson } from 'src/app/shared/interfaces/person.interface';\r\nimport { PeopleCacheService } from '../people-cache.service';\r\n\r\n@Component({\r\n  selector: 'app-people-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.scss']\r\n})\r\nexport class DetailComponent {\r\n  public person?: IPerson;\r\n  public imageUrl?: string;\r\n  public index = 0;\r\n\r\n  private noImageUrl = 'mock-data/no-image.png';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public appCache: AppCacheService,\r\n    private appDataService: AppDataService,\r\n    public cache: PeopleCacheService\r\n  ) {\r\n    const id = this.route.snapshot.params['id'];\r\n    if (isDefined(id)) {\r\n      this.appDataService.getPerson(id).subscribe((r) => {\r\n        this.person = r;\r\n        this.imageUrl = `mock-data/${Utils.formatNumber(this.person?.id as number, '2.0-0')}.png`;\r\n      });\r\n    } else {\r\n      this.router.navigate(['people/home']);\r\n    }\r\n  }\r\n\r\n  public onNavigate(route: string): void {\r\n    switch (route) {\r\n      case 'back':\r\n        this.router.navigate(['people/home']);\r\n        break;\r\n    }\r\n  }\r\n\r\n  public onViewWiki(): void {\r\n    window.open(this.person?.url, '_blank');\r\n  }\r\n\r\n  public onImageError(event: Event): void {\r\n    const targetElement = event.target as HTMLImageElement;\r\n    if (!targetElement.src.includes(this.noImageUrl)) {\r\n      targetElement.src = this.noImageUrl;\r\n      targetElement.onerror = null;\r\n    }\r\n  }\r\n\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <div slot=\"start\">\r\n    <forge-icon-button>\r\n      <button (click)=\"onNavigate('back')\" aria-label=\"go back\">\r\n        <forge-icon name=\"arrow_back\"></forge-icon>\r\n      </button>\r\n    </forge-icon-button>\r\n    <h2 class=\"forge-typography--title\">{{person?.firstName + ' ' + person?.lastName}}</h2>\r\n  </div>\r\n  <div slot=\"end\">\r\n    <forge-button type=\"outlined\">\r\n      <button type=\"button\" (click)=\"onViewWiki()\" [disabled]=\"!person?.url?.length\">View wiki</button>\r\n    </forge-button>\r\n  </div>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <div class=\"body__left\">\r\n    <forge-label-value>\r\n      <span slot=\"label\">Gender</span>\r\n      <span slot=\"value\">{{person?.gender}}</span>\r\n    </forge-label-value>\r\n    <forge-label-value>\r\n      <span slot=\"label\">Occupation</span>\r\n      <span slot=\"value\">{{person?.occupation}}</span>\r\n    </forge-label-value>\r\n    <forge-label-value>\r\n      <span slot=\"label\">Quote</span>\r\n      <span slot=\"value\">{{person?.quote}}</span>\r\n    </forge-label-value>\r\n  </div>\r\n\r\n  <div class=\"body__right\">\r\n    <img [src]=\"imageUrl\" (error)=\"onImageError($event)\" alt=\"\" />\r\n  </div>\r\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AutocompleteRangeComponent } from 'src/app/shared/components/autocomplete-range/autocomplete-range.component';\nimport { FilterChipsComponent } from 'src/app/shared/components/filter-chips/filter-chips.component';\nimport { CardComponent } from 'src/app/shared/components/card/card.component';\nimport { RouterlinkButtonComponent } from 'src/app/shared/components/routerlink-button/routerlink-button.component';\nimport { AppFormsModule } from 'src/app/shared/app-forms.module';\nimport { PeopleComponent } from './people.component';\nimport { HomeComponent } from './home/home.component';\nimport { DetailComponent } from './detail/detail.component';\nimport { FilterComponent } from './home/filter/filter.component';\nimport { TableDetailComponent } from './home/table-detail/table-detail.component';\nimport { PeopleCacheService } from './people-cache.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PeopleComponent,\n    children: [\n      { path: 'home', component: HomeComponent },\n      { path: 'detail', component: DetailComponent },\n      { path: 'detail/:id', component: DetailComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full' }\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [\n    PeopleComponent,\n    HomeComponent,\n    DetailComponent,\n    FilterComponent,\n    TableDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    AutocompleteRangeComponent,\n    FilterChipsComponent,\n    CardComponent,\n    RouterlinkButtonComponent,\n    AppFormsModule\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    PeopleCacheService\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class PeopleModule { }\n"],"x_google_ignoreList":[]}