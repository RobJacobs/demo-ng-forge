{"version":3,"file":"common.a616de69dc19a584.js","mappings":"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","names":["CardComponent","constructor","this","border","raisedClass","outlinedClass","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","In1","selectors","hostVars","hostBindings","rf","ctx","i0","CommonModule","ForgeToolbarModule","i1","styles","AutoFocusDirective","element","inject","ElementRef","ngAfterViewInit","window","requestAnimationFrame","nativeElement","focus","Sc5","standalone","FormControlInvalidDirective","destroyRef","DestroyRef","elementRef","renderer","Renderer2","ngOnInit","blur$","fromEvent","pipe","delay","statusChanges$","control","statusChanges","startWith","status","combineLatest","map","value","touched","distinctUntilChanged","takeUntilDestroyed","subscribe","shouldMarkInvalid","setAttribute","addClass","removeAttribute","removeClass","inputs","None","CallbackPipe","transform","callback","args","UTH","pure","TextFieldComponentDelegate","FormFieldComponentDelegate","config","super","_build","_a","_b","textField","document","createElement","TEXT_FIELD_CONSTANTS","elementName","_inputElement","_buildInputElement","_config","options","leadingElement","slot","appendChild","trailingElement","_configure","helperText","setHelperText","label","_createLabel","disabled","invalid","_element","inputElement","labelElement","_labelElement","onChange","listener","addEventListener","evt","target","onFocus","onBlur","setLabel","text","textContent","removeChild","undefined","_helperTextElement","floatLabel","id","_c","_d","_e","type","placeholder","lastValueFrom","source","hasConfig","Promise","resolve","reject","_value","_hasValue","next","error","complete","defaultValue","EmptyError","delayWhen","delayDurationSelector","subscriptionDelay","concat","take","ignoreElements","operate","subscriber","createOperatorSubscriber","noop","mergeMap","index","innerFrom","mapTo","due","scheduler","asyncScheduler","duration","timer","isValid","date","isDate","Date","Object","prototype","toString","call","_date","toDate","isNaN","Number","argument","argStr","NaN"],"sourceRoot":"webpack:///","sources":["./src/app/shared/components/card/card.component.ts","./src/app/shared/components/card/card.component.html","./src/app/shared/directives/auto-focus/auto-focus.directive.ts","./src/app/shared/directives/form-control-invalid/form-control-invalid.directive.ts","./src/app/shared/pipes/callback.pipe.ts","./node_modules/@tylertech/forge/esm/text-field/text-field-component-delegate.js","./node_modules/rxjs/dist/esm/internal/lastValueFrom.js","./node_modules/rxjs/dist/esm/internal/operators/delayWhen.js","./node_modules/rxjs/dist/esm/internal/operators/ignoreElements.js","./node_modules/rxjs/dist/esm/internal/operators/delay.js","./node_modules/date-fns/isValid.mjs","./node_modules/date-fns/isDate.mjs","./node_modules/date-fns/toDate.mjs"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, HostBinding, Input } from '@angular/core';\r\nimport { ForgeToolbarModule } from '@tylertech/forge-angular';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ForgeToolbarModule\r\n  ]\r\n})\r\nexport class CardComponent {\r\n  @HostBinding('class.app-card--raised')\r\n  public get raisedClass() { return this.border === 'raised'; }\r\n  @HostBinding('class.app-card--outlined')\r\n  public get outlinedClass() { return this.border === 'outlined'; }\r\n\r\n  @Input()\r\n  public border: 'raised' | 'outlined' = 'raised';\r\n}\r\n","<forge-toolbar class=\"header\" slot=\"header\">\r\n  <ng-content select=\"[app-card-header]\"></ng-content>\r\n</forge-toolbar>\r\n<div class=\"body\">\r\n  <ng-content></ng-content>\r\n</div>\r\n<forge-toolbar class=\"footer\" slot=\"footer\" inverted=\"true\">\r\n  <ng-content select=\"[app-card-footer]\"></ng-content>\r\n</forge-toolbar>","import { AfterViewInit, Directive, ElementRef, inject } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAutoFocus]',\r\n  standalone: true\r\n})\r\nexport class AutoFocusDirective implements AfterViewInit {\r\n  private element = inject(ElementRef);\r\n\r\n  public ngAfterViewInit() {\r\n    window.requestAnimationFrame(() => {\r\n      this.element.nativeElement.focus();\r\n    });\r\n  }\r\n}\r\n","\r\nimport { DestroyRef, Directive, ElementRef, Input, OnInit, Renderer2, inject } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { combineLatest, delay, distinctUntilChanged, fromEvent, map, startWith } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[appFormControlInvalid]',\r\n  standalone: true\r\n})\r\nexport class FormControlInvalidDirective implements OnInit {\r\n  private destroyRef = inject(DestroyRef);\r\n  private elementRef = inject(ElementRef<HTMLElement>);\r\n  private renderer = inject(Renderer2);\r\n\r\n  @Input('appFormControlInvalid')\r\n  public control?: AbstractControl;\r\n\r\n  public ngOnInit() {\r\n    const blur$ = fromEvent<FocusEvent>(this.elementRef.nativeElement, 'focusout').pipe(delay(0));\r\n    const statusChanges$ = this.control?.statusChanges.pipe(startWith(this.control.status));\r\n\r\n    // TODO\r\n    combineLatest([blur$, statusChanges$]).pipe(\r\n      map(value => (value as any)[1] === 'INVALID' && this.control?.touched),\r\n      distinctUntilChanged(),\r\n      takeUntilDestroyed(this.destroyRef)\r\n    ).subscribe(shouldMarkInvalid => {\r\n      if (shouldMarkInvalid) {\r\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'invalid', '');\r\n        this.renderer.addClass(this.elementRef.nativeElement, 'app-form-control-invalid');\r\n      } else {\r\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'invalid');\r\n        this.renderer.removeClass(this.elementRef.nativeElement, 'app-form-control-invalid');\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'appCallback',\r\n  standalone: true\r\n})\r\nexport class CallbackPipe implements PipeTransform {\r\n  transform(value: any, callback: (value: any, ...args: any[]) => boolean, ...args: any[]): any {\r\n    return callback(value, ...args);\r\n  }\r\n}","/**\n * @license\n * Copyright 2023 Tyler Technologies, Inc. \n * License: Apache-2.0\n */\nimport { FormFieldComponentDelegate } from '../core/delegates/form-field-component-delegate';\nimport { TEXT_FIELD_CONSTANTS } from './text-field-constants';\nexport class TextFieldComponentDelegate extends FormFieldComponentDelegate {\n    constructor(config) {\n        super(config);\n    }\n    _build() {\n        var _a, _b;\n        const textField = document.createElement(TEXT_FIELD_CONSTANTS.elementName);\n        this._inputElement = this._buildInputElement(textField);\n        if ((_a = this._config.options) === null || _a === void 0 ? void 0 : _a.leadingElement) {\n            this._config.options.leadingElement.slot = 'leading';\n            textField.appendChild(this._config.options.leadingElement);\n        }\n        if ((_b = this._config.options) === null || _b === void 0 ? void 0 : _b.trailingElement) {\n            this._config.options.trailingElement.slot = 'trailing';\n            textField.appendChild(this._config.options.trailingElement);\n        }\n        textField.appendChild(this._inputElement);\n        return textField;\n    }\n    _configure() {\n        var _a, _b;\n        if ((_a = this._config.options) === null || _a === void 0 ? void 0 : _a.helperText) {\n            this.setHelperText(this._config.options.helperText);\n        }\n        if (typeof ((_b = this._config.options) === null || _b === void 0 ? void 0 : _b.label) === 'string') {\n            this._createLabel(this._config.options.label);\n        }\n    }\n    get value() {\n        return this._inputElement.value;\n    }\n    set value(value) {\n        this._inputElement.value = value;\n    }\n    get disabled() {\n        return this._inputElement.disabled;\n    }\n    set disabled(value) {\n        this._inputElement.disabled = value;\n    }\n    get invalid() {\n        return this._element.invalid || false;\n    }\n    set invalid(value) {\n        this._element.invalid = value;\n    }\n    get inputElement() {\n        return this._inputElement;\n    }\n    get labelElement() {\n        return this._labelElement;\n    }\n    onChange(listener) {\n        this._inputElement.addEventListener('input', evt => listener(evt.target.value));\n    }\n    onFocus(listener) {\n        this._inputElement.addEventListener('focus', evt => listener(evt));\n    }\n    onBlur(listener) {\n        this._inputElement.addEventListener('blur', evt => listener(evt));\n    }\n    setLabel(text) {\n        if (text) {\n            if (this._labelElement) {\n                this._labelElement.textContent = text;\n            }\n            else {\n                this._createLabel(text);\n            }\n        }\n        else if (this._labelElement) {\n            this._element.removeChild(this._labelElement);\n            this._labelElement = undefined;\n        }\n    }\n    setHelperText(text) {\n        if (text) {\n            if (!this._helperTextElement) {\n                this._helperTextElement = document.createElement('span');\n                this._helperTextElement.slot = 'helper-text';\n                this._element.appendChild(this._helperTextElement);\n            }\n            this._helperTextElement.textContent = text;\n        }\n        else if (this._helperTextElement) {\n            this._element.removeChild(this._helperTextElement);\n            this._helperTextElement = undefined;\n        }\n    }\n    floatLabel(value) {\n        this._element.floatLabel(value);\n    }\n    _createLabel(text) {\n        var _a;\n        this._labelElement = document.createElement('label');\n        this._labelElement.textContent = text;\n        if ((_a = this._config.options) === null || _a === void 0 ? void 0 : _a.id) {\n            this._labelElement.setAttribute('for', this._config.options.id);\n        }\n        this._element.appendChild(this._labelElement);\n    }\n    _buildInputElement(textField) {\n        var _a, _b, _c, _d, _e;\n        const inputElement = document.createElement('input');\n        inputElement.type = ((_a = this._config.options) === null || _a === void 0 ? void 0 : _a.type) || 'text';\n        if (((_b = this._config.options) === null || _b === void 0 ? void 0 : _b.value) !== undefined) {\n            inputElement.value = this._config.options.value;\n        }\n        if ((_c = this._config.options) === null || _c === void 0 ? void 0 : _c.id) {\n            inputElement.id = this._config.options.id;\n        }\n        if (typeof ((_d = this._config.options) === null || _d === void 0 ? void 0 : _d.placeholder) === 'string') {\n            inputElement.placeholder = (_e = this._config.options) === null || _e === void 0 ? void 0 : _e.placeholder;\n        }\n        textField.appendChild(inputElement);\n        return inputElement;\n    }\n}\n","import { EmptyError } from './util/EmptyError';\nexport function lastValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        let _hasValue = false;\n        let _value;\n        source.subscribe({\n            next: (value) => {\n                _value = value;\n                _hasValue = true;\n            },\n            error: reject,\n            complete: () => {\n                if (_hasValue) {\n                    resolve(_value);\n                }\n                else if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n    });\n}\n","import { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n    }\n    return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function ignoreElements() {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, noop));\n    });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due, scheduler = asyncScheduler) {\n    const duration = timer(due, scheduler);\n    return delayWhen(() => duration);\n}\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n"],"x_google_ignoreList":[5,6,7,8,9,10,11,12]}