{"version":3,"sources":["node_modules/ieee754/index.js","src/app/examples/examples.service.ts","src/app/examples/examples.component.ts","src/app/examples/examples.component.html","src/app/examples/autocomplete/autocomplete.component.ts","src/app/examples/autocomplete/autocomplete.component.html","src/app/examples/drag-drop/drag-drop.component.ts","src/app/examples/drag-drop/drag-drop.component.html","src/app/examples/select/select.component.ts","src/app/examples/select/select.component.html","src/app/examples/binding/child/child.component.ts","src/app/examples/binding/child/child.component.html","src/app/examples/binding/binding.component.ts","src/app/examples/binding/binding.component.html","node_modules/token-types/lib/index.js","node_modules/peek-readable/lib/EndOfStreamError.js","node_modules/peek-readable/lib/AbstractStreamReader.js","node_modules/peek-readable/lib/WebStreamReader.js","node_modules/strtok3/lib/AbstractTokenizer.js","node_modules/strtok3/lib/ReadStreamTokenizer.js","node_modules/strtok3/lib/BufferTokenizer.js","node_modules/strtok3/lib/core.js","node_modules/uint8array-extras/index.js","node_modules/file-type/util.js","node_modules/file-type/supported.js","node_modules/file-type/core.js","src/app/shared/components/busy-indicator/busy-indicator.component.ts","src/app/shared/components/busy-indicator/busy-indicator.component.html","src/app/shared/components/busy-indicator/busy-indicator.service.ts","src/app/shared/pipes/array-find.pipe.ts","src/app/examples/misc/misc.component.ts","src/app/examples/misc/misc.component.html","src/app/examples/routes.ts"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n  buffer[offset + i - d] |= s * 128;\n};","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Utils } from 'src/utils';\r\n\r\nexport interface IRecord {\r\n  id: number;\r\n  code: string;\r\n  description: string;\r\n}\r\n\r\n@Injectable()\r\nexport class ExamplesService {\r\n  public mockData: IRecord[] = [];\r\n\r\n  constructor() {\r\n    for (let index = 0; index < 300; index++) {\r\n      this.mockData.push({\r\n        id: index,\r\n        code: Utils.formatNumber(index, '3.0'),\r\n        description: `Item ${Utils.formatNumber(index, '3.0')}`\r\n      });\r\n    }\r\n  }\r\n\r\n  public getSingleSelectOptions(filterText?: string, value?: string | number | null, take = 100): Observable<IRecord[]> {\r\n    // NOTES\r\n    // if there is filter text, query records with case insensitive include - sort, take\r\n    // if there is a value, query records for value match, return single result as []\r\n    // if there is no value or filter text query top - sort, take\r\n    return new Observable((o) => {\r\n      setTimeout(() => {\r\n        let records = [];\r\n        if (filterText?.length) {\r\n          records = this.mockData.filter((d) => d.description.toLocaleLowerCase().includes(filterText.toLocaleLowerCase())).slice(0, take);\r\n        } else if (value) {\r\n          records = this.mockData.filter((d) => d.id.toString() === value.toString());\r\n        } else {\r\n          records = this.mockData.slice(0, take);\r\n        }\r\n        o.next(records);\r\n        o.complete();\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  public getMutlipleSelectOptions(filterText?: string, values?: string[] | number[] | null, take = 100): Observable<IRecord[]> {\r\n    // NOTES\r\n    // if there is filter text, query records with case insensitive include - sort, take\r\n    // if there are values and no filter text, query records for values and top - sort by selected, take\r\n    // if there are no values or filter text query top - sort, take\r\n    return new Observable((o) => {\r\n      setTimeout(() => {\r\n        let records = [];\r\n        if (filterText?.length) {\r\n          records = this.mockData.filter((d) => d.description.toLocaleLowerCase().includes(filterText.toLocaleLowerCase())).slice(0, take);\r\n        } else {\r\n          if (values?.length) {\r\n            records = [\r\n              ...new Set([...this.mockData.filter((d) => values.map((v) => v.toString()).includes(d.id.toString())), ...this.mockData.slice(0, take)])\r\n            ];\r\n          } else {\r\n            records = this.mockData.slice(0, take);\r\n          }\r\n        }\r\n\r\n        o.next(records);\r\n        o.complete();\r\n      }, 1000);\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-examples',\r\n  imports: [RouterModule],\r\n  templateUrl: './examples.component.html',\r\n  styleUrls: ['./examples.component.scss']\r\n})\r\nexport class ExamplesComponent {}\r\n","<router-outlet></router-outlet>\n","import { Component, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { lastValueFrom } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AutocompleteFilterCallback, AutocompleteOptionBuilder, AutocompleteSelectedTextBuilder, IOption } from '@tylertech/forge';\r\nimport { ForgeAutocompleteModule, ForgeButtonModule, ForgeDividerModule, ForgeIconModule, ForgeTextFieldModule } from '@tylertech/forge-angular';\r\n\r\nimport { ExamplesService, IRecord } from '../examples.service';\r\n\r\n@Component({\r\n  selector: 'app-examples-autocomplete',\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ForgeAutocompleteModule,\r\n    ForgeButtonModule,\r\n    ForgeDividerModule,\r\n    ForgeIconModule,\r\n    ForgeTextFieldModule\r\n  ],\r\n  templateUrl: './autocomplete.component.html',\r\n  styleUrls: ['./autocomplete.component.scss']\r\n})\r\nexport class AutocompleteComponent {\r\n  public moduleService = inject(ExamplesService);\r\n\r\n  public formGroup = new FormGroup({\r\n    autocomplete01: new FormControl(1),\r\n    autocomplete02: new FormControl({\r\n      value: { id: 2, code: '002', description: 'Item 002' },\r\n      label: 'Item 002'\r\n    }),\r\n    autocomplete03: new FormControl([3, 4, 5]),\r\n    autocomplete04: new FormControl(),\r\n    autocomplete05: new FormControl()\r\n  });\r\n  public autocomplete06 = 6;\r\n  public autocomplete07 = 7;\r\n\r\n  public optionBuilder: AutocompleteOptionBuilder = (option: IOption, filterText: string, parentElement: HTMLElement) => {\r\n    const defaultSpan = document.createElement('span');\r\n    defaultSpan.innerText = option.value.description;\r\n    parentElement.appendChild(defaultSpan);\r\n\r\n    const subTitleSpan = document.createElement('span');\r\n    subTitleSpan.setAttribute('slot', 'secondary-text');\r\n    subTitleSpan.innerText = option.value.code;\r\n    parentElement.appendChild(subTitleSpan);\r\n\r\n    return undefined as unknown as HTMLElement;\r\n  };\r\n\r\n  public selectedTextBuilder: AutocompleteSelectedTextBuilder = (options: IOption[]): string => {\r\n    return options[0] ? `${options[0].value} - ${options[0]?.label}` : '';\r\n  };\r\n\r\n  public singleSelectPrimitiveFilter: AutocompleteFilterCallback = (filterText: string, value: string) => {\r\n    if (value) {\r\n      return lastValueFrom(\r\n        this.moduleService.getSingleSelectOptions(undefined, value).pipe(map((result) => result.map((d) => ({ value: d.id, label: d.description }))))\r\n      );\r\n    } else {\r\n      return lastValueFrom(\r\n        this.moduleService.getSingleSelectOptions(filterText).pipe(map((result) => result.map((d) => ({ value: d.id, label: d.description }))))\r\n      );\r\n    }\r\n  };\r\n\r\n  public singleSelectObjectFilter: AutocompleteFilterCallback = (filterText: string, value: IOption) => {\r\n    if (value) {\r\n      return [{ label: value.label, value }];\r\n    } else {\r\n      return lastValueFrom(\r\n        this.moduleService.getSingleSelectOptions(filterText).pipe(map((result) => result.map((d) => ({ label: d.description, value: d }))))\r\n      );\r\n    }\r\n  };\r\n\r\n  public multipleSelectFilter: AutocompleteFilterCallback = (filterText: string, value: string) => {\r\n    if (value) {\r\n      return [];\r\n    } else {\r\n      return lastValueFrom(\r\n        this.moduleService.getMutlipleSelectOptions(filterText, this.formGroup.value.autocomplete03).pipe(\r\n          map(\r\n            (result) =>\r\n              result.map((d: IRecord) => ({\r\n                value: d.id,\r\n                label: d.description\r\n              })) as IOption[]\r\n          )\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  public onAutocompleteChange(event: CustomEvent) {\r\n    this.autocomplete07 = event.detail;\r\n  }\r\n\r\n  public onDisable() {\r\n    const control = this.formGroup.controls.autocomplete01;\r\n    if (control?.disabled) {\r\n      control?.enable();\r\n    } else {\r\n      control?.disable();\r\n    }\r\n  }\r\n}\r\n","<form [formGroup]=\"formGroup\" novalidate autocomplete=\"off\" class=\"form-grid\">\n  <div>\n    <forge-autocomplete [filter]=\"singleSelectPrimitiveFilter\" formControlName=\"autocomplete01\">\n      <forge-text-field>\n        <input id=\"examples--autocomplete--01\" type=\"text\" [disabled]=\"formGroup.controls.autocomplete01.disabled\" />\n        <label for=\"examples--autocomplete--01\">Autocomplete01 - single primitive</label>\n        <forge-icon slot=\"end\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\n      </forge-text-field>\n    </forge-autocomplete>\n    <forge-button (click)=\"onDisable()\">Disable</forge-button>\n  </div>\n\n  <forge-autocomplete [filter]=\"singleSelectObjectFilter\" formControlName=\"autocomplete02\">\n    <forge-text-field>\n      <input id=\"examples--autocomplete--02\" type=\"text\" />\n      <label for=\"examples--autocomplete--02\">Autocomplete02 - single object</label>\n      <forge-icon slot=\"end\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\n    </forge-text-field>\n  </forge-autocomplete>\n\n  <forge-autocomplete [filter]=\"multipleSelectFilter\" formControlName=\"autocomplete03\" multiple>\n    <forge-text-field>\n      <input id=\"examples--autocomplete--03\" type=\"text\" />\n      <label for=\"examples--autocomplete--03\">Autocomplete03 - multiple select</label>\n      <forge-icon slot=\"end\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\n    </forge-text-field>\n  </forge-autocomplete>\n\n  <forge-autocomplete [filter]=\"singleSelectObjectFilter\" formControlName=\"autocomplete04\" [optionBuilder]=\"optionBuilder\">\n    <forge-text-field>\n      <input id=\"examples--autocomplete--04\" type=\"text\" />\n      <label for=\"examples--autocomplete--04\">Autocomplete04 - option builder</label>\n      <forge-icon slot=\"end\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\n    </forge-text-field>\n  </forge-autocomplete>\n\n  <forge-autocomplete [filter]=\"singleSelectPrimitiveFilter\" formControlName=\"autocomplete05\" [selectedTextBuilder]=\"selectedTextBuilder\">\n    <forge-text-field>\n      <input id=\"examples--autocomplete--05\" type=\"text\" />\n      <label for=\"examples--autocomplete--05\">Autocomplete05 - selected text builder</label>\n      <forge-icon slot=\"end\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\n    </forge-text-field>\n  </forge-autocomplete>\n\n  <p class=\"form-grid--col-span\">{{ formGroup.getRawValue() | json }}</p>\n</form>\n\n<forge-divider></forge-divider>\n\n<div class=\"form-grid\">\n  <forge-autocomplete [filter]=\"singleSelectPrimitiveFilter\" [(ngModel)]=\"autocomplete06\">\n    <forge-text-field>\n      <input id=\"examples--autocomplete--06\" type=\"text\" />\n      <label for=\"examples--autocomplete--06\">Autocomplete06 - ngModel binding</label>\n      <forge-icon slot=\"end\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\n      <span slot=\"support-text\">selected value: {{ autocomplete06 }}</span>\n    </forge-text-field>\n  </forge-autocomplete>\n\n  <forge-autocomplete [filter]=\"singleSelectPrimitiveFilter\" [value]=\"autocomplete07\" (forge-autocomplete-change)=\"onAutocompleteChange($event)\">\n    <forge-text-field>\n      <input id=\"examples--autocomplete--07\" type=\"text\" />\n      <label for=\"examples--autocomplete--07\">Autocomplete07 - value binding</label>\n      <forge-icon slot=\"end\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\n      <span slot=\"support-text\">selected value: {{ autocomplete07 }}</span>\n    </forge-text-field>\n  </forge-autocomplete>\n</div>\n","import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CdkDragDrop, DragDropModule, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { ForgeListItemModule, ForgeListModule } from '@tylertech/forge-angular';\r\n\r\n@Component({\r\n  selector: 'app-examples-drag-drop',\r\n  imports: [CommonModule, DragDropModule, ForgeListItemModule, ForgeListModule],\r\n  templateUrl: './drag-drop.component.html',\r\n  styleUrls: ['./drag-drop.component.scss']\r\n})\r\nexport class DragDropComponent {\r\n  public items01 = ['List 1 - item 01', 'List 1 - item 02', 'List 1 - item 03', 'List 1 - item 04'];\r\n  public items02 = ['List 2 - item 01', 'List 2 - item 02', 'List 2 - item 03', 'List 2 - item 04'];\r\n\r\n  public onDrop(event: CdkDragDrop<string[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n    }\r\n  }\r\n}\r\n","<div class=\"card-container\" cdkDropListGroup>\n  <div class=\"card\">\n    <div class=\"title\">List 1</div>\n\n    <forge-list cdkDropList #item01List=\"cdkDropList\" [cdkDropListData]=\"items01\" [cdkDropListConnectedTo]=\"[item02List]\" (cdkDropListDropped)=\"onDrop($event)\">\n      @for (item of items01; track i; let i = $index) {\n        <forge-list-item cdkDrag>\n          <span class=\"cdk-drag__content\">{{ item }}</span>\n        </forge-list-item>\n      }\n      <forge-list-item class=\"cdk-drag-placeholder\" *cdkDragPlaceholder></forge-list-item>\n    </forge-list>\n  </div>\n\n  <div class=\"card\">\n    <div class=\"title\">List 2</div>\n\n    <forge-list cdkDropList #item02List=\"cdkDropList\" [cdkDropListData]=\"items02\" [cdkDropListConnectedTo]=\"[item01List]\" (cdkDropListDropped)=\"onDrop($event)\">\n      @for (item of items02; track i; let i = $index) {\n        <forge-list-item cdkDrag>\n          <span class=\"cdk-drag__content\">{{ item }}</span>\n        </forge-list-item>\n      }\n      <forge-list-item class=\"cdk-drag-placeholder\" *cdkDragPlaceholder></forge-list-item>\n    </forge-list>\n  </div>\n</div>\n","import { Component, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IOption, SelectOptionBuilder, SelectSelectedTextBuilder } from '@tylertech/forge';\r\nimport { ForgeDividerModule, ForgeOptionModule, ForgeSelectModule } from '@tylertech/forge-angular';\r\n\r\nimport { ExamplesService } from '../examples.service';\r\n\r\n@Component({\r\n  selector: 'app-examples-select',\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, ForgeDividerModule, ForgeOptionModule, ForgeSelectModule],\r\n  templateUrl: './select.component.html',\r\n  styleUrls: ['./select.component.scss']\r\n})\r\nexport class SelectComponent {\r\n  public moduleService = inject(ExamplesService);\r\n\r\n  public options = this.moduleService.mockData.slice(0, 20).map((d) => ({ value: d.id, label: d.description }));\r\n  public objectOptions = this.moduleService.mockData.slice(0, 20).map((d) => ({ value: d, label: d.description }));\r\n  public formGroup = new FormGroup({\r\n    select01: new FormControl(1),\r\n    select02: new FormControl(this.objectOptions[2].value),\r\n    select03: new FormControl([3, 4, 5]),\r\n    select04: new FormControl(),\r\n    select05: new FormControl()\r\n  });\r\n  public select06 = 6;\r\n  public select07 = 7;\r\n\r\n  public optionBuilder: SelectOptionBuilder = (option: IOption, parentElement: HTMLElement) => {\r\n    const defaultSpan = document.createElement('span');\r\n    defaultSpan.innerText = option.value.description;\r\n    parentElement.appendChild(defaultSpan);\r\n\r\n    const subTitleSpan = document.createElement('span');\r\n    subTitleSpan.setAttribute('slot', 'secondary-text');\r\n    subTitleSpan.innerText = option.value.code;\r\n    parentElement.appendChild(subTitleSpan);\r\n\r\n    return undefined as unknown as HTMLElement;\r\n  };\r\n\r\n  public selectedTextBuilder: SelectSelectedTextBuilder = (options: IOption[]): string => {\r\n    return options[0] ? `${options[0].value} - ${options[0]?.label}` : '';\r\n  };\r\n\r\n  public onSelectChange(event: CustomEvent) {\r\n    this.select07 = event.detail;\r\n  }\r\n}\r\n","<form [formGroup]=\"formGroup\" novalidate autocomplete=\"off\" class=\"form-grid\">\n  <forge-select formControlName=\"select01\" label=\"Select01 - single primitive\">\n    @for (option of options; track i; let i = $index) {\n      <forge-option [value]=\"option.value\">{{ option.label }}</forge-option>\n    }\n  </forge-select>\n\n  <forge-select label=\"Select02 - single object\" [options]=\"objectOptions\" formControlName=\"select02\"></forge-select>\n\n  <forge-select label=\"Select03 - multiple select\" [options]=\"options\" multiple formControlName=\"select03\"></forge-select>\n\n  <forge-select label=\"Select04 - option builder\" [options]=\"objectOptions\" formControlName=\"select04\" [optionBuilder]=\"optionBuilder\"></forge-select>\n\n  <forge-select label=\"Select05 - selected text builder\" [options]=\"options\" formControlName=\"select05\" [selectedTextBuilder]=\"selectedTextBuilder\"></forge-select>\n\n  <p class=\"form-grid--col-span\">{{ formGroup.getRawValue() | json }}</p>\n</form>\n\n<forge-divider></forge-divider>\n\n<div class=\"form-grid\">\n  <forge-select label=\"Select06 - ngModel binding\" [options]=\"options\" [(ngModel)]=\"select06\">\n    <span slot=\"support-text\">selected value: {{ select06 }}</span>\n  </forge-select>\n  <forge-select label=\"Select07 - value binding\" [options]=\"options\" [value]=\"select07\" (change)=\"onSelectChange($event)\">\n    <span slot=\"support-text\">selected value: {{ select07 }}</span>\n  </forge-select>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { Component, model } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ForgeTextFieldModule } from '@tylertech/forge-angular';\n\n@Component({\n  selector: 'app-examples-binding-child',\n  imports: [CommonModule, FormsModule, ForgeTextFieldModule],\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.scss']\n})\nexport class ChildComponent {\n  name = model<string>();\n}\n","<forge-text-field>\n  <!-- <input type=\"text\" id=\"examples--binding--child--name\" [(ngModel)]=\"name\" (input)=\"onNameChange()\" /> -->\n  <input type=\"text\" id=\"examples--binding--child--name\" [(ngModel)]=\"name\" autocomplete=\"off\" />\n  <label for=\"examples--binding--child--name\" slot=\"label\">Child component</label>\n</forge-text-field>\n","import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ForgeTextFieldModule } from '@tylertech/forge-angular';\r\n\r\nimport { ChildComponent } from './child/child.component';\r\n\r\n@Component({\r\n  selector: 'app-examples-binding',\r\n  imports: [CommonModule, FormsModule, ForgeTextFieldModule, ChildComponent],\r\n  templateUrl: './binding.component.html',\r\n  styleUrls: ['./binding.component.scss']\r\n})\r\nexport class BindingComponent {\r\n  public name = 'two way binding example';\r\n}\r\n","<div class=\"two-way-binding\">\n  <forge-text-field>\n    <input type=\"text\" id=\"examples--binding--name\" [(ngModel)]=\"name\" autocomplete=\"off\" />\n    <label for=\"examples--binding--name\" slot=\"label\">Parent component</label>\n  </forge-text-field>\n  <app-examples-binding-child [(name)]=\"name\"></app-examples-binding-child>\n</div>\n","import * as ieee754 from 'ieee754';\n// Primitive types\nfunction dv(array) {\n  return new DataView(array.buffer, array.byteOffset);\n}\n/**\n * 8-bit unsigned integer\n */\nexport const UINT8 = {\n  len: 1,\n  get(array, offset) {\n    return dv(array).getUint8(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setUint8(offset, value);\n    return offset + 1;\n  }\n};\n/**\n * 16-bit unsigned integer, Little Endian byte order\n */\nexport const UINT16_LE = {\n  len: 2,\n  get(array, offset) {\n    return dv(array).getUint16(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setUint16(offset, value, true);\n    return offset + 2;\n  }\n};\n/**\n * 16-bit unsigned integer, Big Endian byte order\n */\nexport const UINT16_BE = {\n  len: 2,\n  get(array, offset) {\n    return dv(array).getUint16(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setUint16(offset, value);\n    return offset + 2;\n  }\n};\n/**\n * 24-bit unsigned integer, Little Endian byte order\n */\nexport const UINT24_LE = {\n  len: 3,\n  get(array, offset) {\n    const dataView = dv(array);\n    return dataView.getUint8(offset) + (dataView.getUint16(offset + 1, true) << 8);\n  },\n  put(array, offset, value) {\n    const dataView = dv(array);\n    dataView.setUint8(offset, value & 0xff);\n    dataView.setUint16(offset + 1, value >> 8, true);\n    return offset + 3;\n  }\n};\n/**\n * 24-bit unsigned integer, Big Endian byte order\n */\nexport const UINT24_BE = {\n  len: 3,\n  get(array, offset) {\n    const dataView = dv(array);\n    return (dataView.getUint16(offset) << 8) + dataView.getUint8(offset + 2);\n  },\n  put(array, offset, value) {\n    const dataView = dv(array);\n    dataView.setUint16(offset, value >> 8);\n    dataView.setUint8(offset + 2, value & 0xff);\n    return offset + 3;\n  }\n};\n/**\n * 32-bit unsigned integer, Little Endian byte order\n */\nexport const UINT32_LE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getUint32(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setUint32(offset, value, true);\n    return offset + 4;\n  }\n};\n/**\n * 32-bit unsigned integer, Big Endian byte order\n */\nexport const UINT32_BE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getUint32(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setUint32(offset, value);\n    return offset + 4;\n  }\n};\n/**\n * 8-bit signed integer\n */\nexport const INT8 = {\n  len: 1,\n  get(array, offset) {\n    return dv(array).getInt8(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setInt8(offset, value);\n    return offset + 1;\n  }\n};\n/**\n * 16-bit signed integer, Big Endian byte order\n */\nexport const INT16_BE = {\n  len: 2,\n  get(array, offset) {\n    return dv(array).getInt16(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setInt16(offset, value);\n    return offset + 2;\n  }\n};\n/**\n * 16-bit signed integer, Little Endian byte order\n */\nexport const INT16_LE = {\n  len: 2,\n  get(array, offset) {\n    return dv(array).getInt16(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setInt16(offset, value, true);\n    return offset + 2;\n  }\n};\n/**\n * 24-bit signed integer, Little Endian byte order\n */\nexport const INT24_LE = {\n  len: 3,\n  get(array, offset) {\n    const unsigned = UINT24_LE.get(array, offset);\n    return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n  },\n  put(array, offset, value) {\n    const dataView = dv(array);\n    dataView.setUint8(offset, value & 0xff);\n    dataView.setUint16(offset + 1, value >> 8, true);\n    return offset + 3;\n  }\n};\n/**\n * 24-bit signed integer, Big Endian byte order\n */\nexport const INT24_BE = {\n  len: 3,\n  get(array, offset) {\n    const unsigned = UINT24_BE.get(array, offset);\n    return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n  },\n  put(array, offset, value) {\n    const dataView = dv(array);\n    dataView.setUint16(offset, value >> 8);\n    dataView.setUint8(offset + 2, value & 0xff);\n    return offset + 3;\n  }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_BE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getInt32(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setInt32(offset, value);\n    return offset + 4;\n  }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_LE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getInt32(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setInt32(offset, value, true);\n    return offset + 4;\n  }\n};\n/**\n * 64-bit unsigned integer, Little Endian byte order\n */\nexport const UINT64_LE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getBigUint64(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setBigUint64(offset, value, true);\n    return offset + 8;\n  }\n};\n/**\n * 64-bit signed integer, Little Endian byte order\n */\nexport const INT64_LE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getBigInt64(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setBigInt64(offset, value, true);\n    return offset + 8;\n  }\n};\n/**\n * 64-bit unsigned integer, Big Endian byte order\n */\nexport const UINT64_BE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getBigUint64(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setBigUint64(offset, value);\n    return offset + 8;\n  }\n};\n/**\n * 64-bit signed integer, Big Endian byte order\n */\nexport const INT64_BE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getBigInt64(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setBigInt64(offset, value);\n    return offset + 8;\n  }\n};\n/**\n * IEEE 754 16-bit (half precision) float, big endian\n */\nexport const Float16_BE = {\n  len: 2,\n  get(dataView, offset) {\n    return ieee754.read(dataView, offset, false, 10, this.len);\n  },\n  put(dataView, offset, value) {\n    ieee754.write(dataView, value, offset, false, 10, this.len);\n    return offset + this.len;\n  }\n};\n/**\n * IEEE 754 16-bit (half precision) float, little endian\n */\nexport const Float16_LE = {\n  len: 2,\n  get(array, offset) {\n    return ieee754.read(array, offset, true, 10, this.len);\n  },\n  put(array, offset, value) {\n    ieee754.write(array, value, offset, true, 10, this.len);\n    return offset + this.len;\n  }\n};\n/**\n * IEEE 754 32-bit (single precision) float, big endian\n */\nexport const Float32_BE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getFloat32(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setFloat32(offset, value);\n    return offset + 4;\n  }\n};\n/**\n * IEEE 754 32-bit (single precision) float, little endian\n */\nexport const Float32_LE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getFloat32(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setFloat32(offset, value, true);\n    return offset + 4;\n  }\n};\n/**\n * IEEE 754 64-bit (double precision) float, big endian\n */\nexport const Float64_BE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getFloat64(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setFloat64(offset, value);\n    return offset + 8;\n  }\n};\n/**\n * IEEE 754 64-bit (double precision) float, little endian\n */\nexport const Float64_LE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getFloat64(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setFloat64(offset, value, true);\n    return offset + 8;\n  }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, big endian\n */\nexport const Float80_BE = {\n  len: 10,\n  get(array, offset) {\n    return ieee754.read(array, offset, false, 63, this.len);\n  },\n  put(array, offset, value) {\n    ieee754.write(array, value, offset, false, 63, this.len);\n    return offset + this.len;\n  }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, little endian\n */\nexport const Float80_LE = {\n  len: 10,\n  get(array, offset) {\n    return ieee754.read(array, offset, true, 63, this.len);\n  },\n  put(array, offset, value) {\n    ieee754.write(array, value, offset, true, 63, this.len);\n    return offset + this.len;\n  }\n};\n/**\n * Ignore a given number of bytes\n */\nexport class IgnoreType {\n  /**\n   * @param len number of bytes to ignore\n   */\n  constructor(len) {\n    this.len = len;\n  }\n  // ToDo: don't read, but skip data\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  get(array, off) {}\n}\nexport class Uint8ArrayType {\n  constructor(len) {\n    this.len = len;\n  }\n  get(array, offset) {\n    return array.subarray(offset, offset + this.len);\n  }\n}\n/**\n * Consume a fixed number of bytes from the stream and return a string with a specified encoding.\n */\nexport class StringType {\n  constructor(len, encoding) {\n    this.len = len;\n    this.encoding = encoding;\n    this.textDecoder = new TextDecoder(encoding);\n  }\n  get(uint8Array, offset) {\n    return this.textDecoder.decode(uint8Array.subarray(offset, offset + this.len));\n  }\n}\n/**\n * ANSI Latin 1 String\n * Using windows-1252 / ISO 8859-1 decoding\n */\nexport class AnsiStringType {\n  constructor(len) {\n    this.len = len;\n    this.textDecoder = new TextDecoder('windows-1252');\n  }\n  get(uint8Array, offset = 0) {\n    return this.textDecoder.decode(uint8Array.subarray(offset, offset + this.len));\n  }\n}","export const defaultMessages = 'End-Of-Stream';\n/**\n * Thrown on read operation of the end of file or stream has been reached\n */\nexport class EndOfStreamError extends Error {\n  constructor() {\n    super(defaultMessages);\n  }\n}","import { EndOfStreamError } from \"./EndOfStreamError.js\";\nexport class AbstractStreamReader {\n  constructor() {\n    /**\n     * Maximum request length on read-stream operation\n     */\n    this.maxStreamReadSize = 1 * 1024 * 1024;\n    this.endOfStream = false;\n    /**\n     * Store peeked data\n     * @type {Array}\n     */\n    this.peekQueue = [];\n  }\n  async peek(uint8Array, offset, length) {\n    const bytesRead = await this.read(uint8Array, offset, length);\n    this.peekQueue.push(uint8Array.subarray(offset, offset + bytesRead)); // Put read data back to peek buffer\n    return bytesRead;\n  }\n  async read(buffer, offset, length) {\n    if (length === 0) {\n      return 0;\n    }\n    let bytesRead = this.readFromPeekBuffer(buffer, offset, length);\n    bytesRead += await this.readRemainderFromStream(buffer, offset + bytesRead, length - bytesRead);\n    if (bytesRead === 0) {\n      throw new EndOfStreamError();\n    }\n    return bytesRead;\n  }\n  /**\n   * Read chunk from stream\n   * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n   * @param offset - Offset target\n   * @param length - Number of bytes to read\n   * @returns Number of bytes read\n   */\n  readFromPeekBuffer(buffer, offset, length) {\n    let remaining = length;\n    let bytesRead = 0;\n    // consume peeked data first\n    while (this.peekQueue.length > 0 && remaining > 0) {\n      const peekData = this.peekQueue.pop(); // Front of queue\n      if (!peekData) throw new Error('peekData should be defined');\n      const lenCopy = Math.min(peekData.length, remaining);\n      buffer.set(peekData.subarray(0, lenCopy), offset + bytesRead);\n      bytesRead += lenCopy;\n      remaining -= lenCopy;\n      if (lenCopy < peekData.length) {\n        // remainder back to queue\n        this.peekQueue.push(peekData.subarray(lenCopy));\n      }\n    }\n    return bytesRead;\n  }\n  async readRemainderFromStream(buffer, offset, initialRemaining) {\n    let remaining = initialRemaining;\n    let bytesRead = 0;\n    // Continue reading from stream if required\n    while (remaining > 0 && !this.endOfStream) {\n      const reqLen = Math.min(remaining, this.maxStreamReadSize);\n      const chunkLen = await this.readFromStream(buffer, offset + bytesRead, reqLen);\n      if (chunkLen === 0) break;\n      bytesRead += chunkLen;\n      remaining -= chunkLen;\n    }\n    return bytesRead;\n  }\n}","import { EndOfStreamError } from './EndOfStreamError.js';\nexport { EndOfStreamError } from './EndOfStreamError.js';\nimport { AbstractStreamReader } from \"./AbstractStreamReader.js\";\n/**\n * Read from a WebStream\n * Reference: https://nodejs.org/api/webstreams.html#class-readablestreambyobreader\n */\nexport class WebStreamReader extends AbstractStreamReader {\n  constructor(stream) {\n    super();\n    this.reader = stream.getReader({\n      mode: 'byob'\n    });\n  }\n  async readFromStream(buffer, offset, length) {\n    if (this.endOfStream) {\n      throw new EndOfStreamError();\n    }\n    const result = await this.reader.read(new Uint8Array(length));\n    if (result.done) {\n      this.endOfStream = result.done;\n    }\n    if (result.value) {\n      buffer.set(result.value, offset);\n      return result.value.byteLength;\n    }\n    return 0;\n  }\n  abort() {\n    return this.reader.cancel(); // Signals a loss of interest in the stream by a consumer\n  }\n  async close() {\n    await this.abort();\n    this.reader.releaseLock();\n  }\n}","import { EndOfStreamError } from 'peek-readable';\n/**\n * Core tokenizer\n */\nexport class AbstractTokenizer {\n  /**\n   * Constructor\n   * @param options Tokenizer options\n   * @protected\n   */\n  constructor(options) {\n    this.numBuffer = new Uint8Array(8);\n    /**\n     * Tokenizer-stream position\n     */\n    this.position = 0;\n    this.onClose = options?.onClose;\n    if (options?.abortSignal) {\n      options.abortSignal.addEventListener('abort', () => {\n        this.abort();\n      });\n    }\n  }\n  /**\n   * Read a token from the tokenizer-stream\n   * @param token - The token to read\n   * @param position - If provided, the desired position in the tokenizer-stream\n   * @returns Promise with token data\n   */\n  async readToken(token, position = this.position) {\n    const uint8Array = new Uint8Array(token.len);\n    const len = await this.readBuffer(uint8Array, {\n      position\n    });\n    if (len < token.len) throw new EndOfStreamError();\n    return token.get(uint8Array, 0);\n  }\n  /**\n   * Peek a token from the tokenizer-stream.\n   * @param token - Token to peek from the tokenizer-stream.\n   * @param position - Offset where to begin reading within the file. If position is null, data will be read from the current file position.\n   * @returns Promise with token data\n   */\n  async peekToken(token, position = this.position) {\n    const uint8Array = new Uint8Array(token.len);\n    const len = await this.peekBuffer(uint8Array, {\n      position\n    });\n    if (len < token.len) throw new EndOfStreamError();\n    return token.get(uint8Array, 0);\n  }\n  /**\n   * Read a numeric token from the stream\n   * @param token - Numeric token\n   * @returns Promise with number\n   */\n  async readNumber(token) {\n    const len = await this.readBuffer(this.numBuffer, {\n      length: token.len\n    });\n    if (len < token.len) throw new EndOfStreamError();\n    return token.get(this.numBuffer, 0);\n  }\n  /**\n   * Read a numeric token from the stream\n   * @param token - Numeric token\n   * @returns Promise with number\n   */\n  async peekNumber(token) {\n    const len = await this.peekBuffer(this.numBuffer, {\n      length: token.len\n    });\n    if (len < token.len) throw new EndOfStreamError();\n    return token.get(this.numBuffer, 0);\n  }\n  /**\n   * Ignore number of bytes, advances the pointer in under tokenizer-stream.\n   * @param length - Number of bytes to ignore\n   * @return resolves the number of bytes ignored, equals length if this available, otherwise the number of bytes available\n   */\n  async ignore(length) {\n    if (this.fileInfo.size !== undefined) {\n      const bytesLeft = this.fileInfo.size - this.position;\n      if (length > bytesLeft) {\n        this.position += bytesLeft;\n        return bytesLeft;\n      }\n    }\n    this.position += length;\n    return length;\n  }\n  async close() {\n    await this.abort();\n    await this.onClose?.();\n  }\n  normalizeOptions(uint8Array, options) {\n    if (options && options.position !== undefined && options.position < this.position) {\n      throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n    }\n    if (options) {\n      return {\n        mayBeLess: options.mayBeLess === true,\n        offset: options.offset ? options.offset : 0,\n        length: options.length ? options.length : uint8Array.length - (options.offset ? options.offset : 0),\n        position: options.position ? options.position : this.position\n      };\n    }\n    return {\n      mayBeLess: false,\n      offset: 0,\n      length: uint8Array.length,\n      position: this.position\n    };\n  }\n  abort() {\n    return Promise.resolve(); // Ignore abort signal\n  }\n}","import { AbstractTokenizer } from './AbstractTokenizer.js';\nimport { EndOfStreamError } from 'peek-readable';\nconst maxBufferSize = 256000;\nexport class ReadStreamTokenizer extends AbstractTokenizer {\n  /**\n   * Constructor\n   * @param streamReader stream-reader to read from\n   * @param options Tokenizer options\n   */\n  constructor(streamReader, options) {\n    super(options);\n    this.streamReader = streamReader;\n    this.fileInfo = options?.fileInfo ?? {};\n  }\n  /**\n   * Read buffer from tokenizer\n   * @param uint8Array - Target Uint8Array to fill with data read from the tokenizer-stream\n   * @param options - Read behaviour options\n   * @returns Promise with number of bytes read\n   */\n  async readBuffer(uint8Array, options) {\n    const normOptions = this.normalizeOptions(uint8Array, options);\n    const skipBytes = normOptions.position - this.position;\n    if (skipBytes > 0) {\n      await this.ignore(skipBytes);\n      return this.readBuffer(uint8Array, options);\n    }\n    if (skipBytes < 0) {\n      throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n    }\n    if (normOptions.length === 0) {\n      return 0;\n    }\n    const bytesRead = await this.streamReader.read(uint8Array, normOptions.offset, normOptions.length);\n    this.position += bytesRead;\n    if ((!options || !options.mayBeLess) && bytesRead < normOptions.length) {\n      throw new EndOfStreamError();\n    }\n    return bytesRead;\n  }\n  /**\n   * Peek (read ahead) buffer from tokenizer\n   * @param uint8Array - Uint8Array (or Buffer) to write data to\n   * @param options - Read behaviour options\n   * @returns Promise with number of bytes peeked\n   */\n  async peekBuffer(uint8Array, options) {\n    const normOptions = this.normalizeOptions(uint8Array, options);\n    let bytesRead = 0;\n    if (normOptions.position) {\n      const skipBytes = normOptions.position - this.position;\n      if (skipBytes > 0) {\n        const skipBuffer = new Uint8Array(normOptions.length + skipBytes);\n        bytesRead = await this.peekBuffer(skipBuffer, {\n          mayBeLess: normOptions.mayBeLess\n        });\n        uint8Array.set(skipBuffer.subarray(skipBytes), normOptions.offset);\n        return bytesRead - skipBytes;\n      }\n      if (skipBytes < 0) {\n        throw new Error('Cannot peek from a negative offset in a stream');\n      }\n    }\n    if (normOptions.length > 0) {\n      try {\n        bytesRead = await this.streamReader.peek(uint8Array, normOptions.offset, normOptions.length);\n      } catch (err) {\n        if (options?.mayBeLess && err instanceof EndOfStreamError) {\n          return 0;\n        }\n        throw err;\n      }\n      if (!normOptions.mayBeLess && bytesRead < normOptions.length) {\n        throw new EndOfStreamError();\n      }\n    }\n    return bytesRead;\n  }\n  async ignore(length) {\n    // debug(`ignore ${this.position}...${this.position + length - 1}`);\n    const bufSize = Math.min(maxBufferSize, length);\n    const buf = new Uint8Array(bufSize);\n    let totBytesRead = 0;\n    while (totBytesRead < length) {\n      const remaining = length - totBytesRead;\n      const bytesRead = await this.readBuffer(buf, {\n        length: Math.min(bufSize, remaining)\n      });\n      if (bytesRead < 0) {\n        return bytesRead;\n      }\n      totBytesRead += bytesRead;\n    }\n    return totBytesRead;\n  }\n  abort() {\n    return this.streamReader.abort();\n  }\n  supportsRandomAccess() {\n    return false;\n  }\n}","import { EndOfStreamError } from 'peek-readable';\nimport { AbstractTokenizer } from './AbstractTokenizer.js';\nexport class BufferTokenizer extends AbstractTokenizer {\n  /**\n   * Construct BufferTokenizer\n   * @param uint8Array - Uint8Array to tokenize\n   * @param options Tokenizer options\n   */\n  constructor(uint8Array, options) {\n    super(options);\n    this.uint8Array = uint8Array;\n    this.fileInfo = {\n      ...(options?.fileInfo ?? {}),\n      ...{\n        size: uint8Array.length\n      }\n    };\n  }\n  /**\n   * Read buffer from tokenizer\n   * @param uint8Array - Uint8Array to tokenize\n   * @param options - Read behaviour options\n   * @returns {Promise<number>}\n   */\n  async readBuffer(uint8Array, options) {\n    if (options?.position) {\n      if (options.position < this.position) {\n        throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n      }\n      this.position = options.position;\n    }\n    const bytesRead = await this.peekBuffer(uint8Array, options);\n    this.position += bytesRead;\n    return bytesRead;\n  }\n  /**\n   * Peek (read ahead) buffer from tokenizer\n   * @param uint8Array\n   * @param options - Read behaviour options\n   * @returns {Promise<number>}\n   */\n  async peekBuffer(uint8Array, options) {\n    const normOptions = this.normalizeOptions(uint8Array, options);\n    const bytes2read = Math.min(this.uint8Array.length - normOptions.position, normOptions.length);\n    if (!normOptions.mayBeLess && bytes2read < normOptions.length) {\n      throw new EndOfStreamError();\n    }\n    uint8Array.set(this.uint8Array.subarray(normOptions.position, normOptions.position + bytes2read), normOptions.offset);\n    return bytes2read;\n  }\n  close() {\n    return super.close();\n  }\n  supportsRandomAccess() {\n    return true;\n  }\n  setPosition(position) {\n    this.position = position;\n  }\n}","import { StreamReader, WebStreamReader } from 'peek-readable';\nimport { ReadStreamTokenizer } from './ReadStreamTokenizer.js';\nimport { BufferTokenizer } from './BufferTokenizer.js';\nexport { EndOfStreamError } from 'peek-readable';\nexport { AbstractTokenizer } from './AbstractTokenizer.js';\n/**\n * Construct ReadStreamTokenizer from given Stream.\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param stream - Read from Node.js Stream.Readable\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromStream(stream, options) {\n  return new ReadStreamTokenizer(new StreamReader(stream), options);\n}\n/**\n * Construct ReadStreamTokenizer from given ReadableStream (WebStream API).\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param webStream - Read from Node.js Stream.Readable (must be a byte stream)\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromWebStream(webStream, options) {\n  return new ReadStreamTokenizer(new WebStreamReader(webStream), options);\n}\n/**\n * Construct ReadStreamTokenizer from given Buffer.\n * @param uint8Array - Uint8Array to tokenize\n * @param options - Tokenizer options\n * @returns BufferTokenizer\n */\nexport function fromBuffer(uint8Array, options) {\n  return new BufferTokenizer(uint8Array, options);\n}","const objectToString = Object.prototype.toString;\nconst uint8ArrayStringified = '[object Uint8Array]';\nconst arrayBufferStringified = '[object ArrayBuffer]';\nfunction isType(value, typeConstructor, typeStringified) {\n  if (!value) {\n    return false;\n  }\n  if (value.constructor === typeConstructor) {\n    return true;\n  }\n  return objectToString.call(value) === typeStringified;\n}\nexport function isUint8Array(value) {\n  return isType(value, Uint8Array, uint8ArrayStringified);\n}\nfunction isArrayBuffer(value) {\n  return isType(value, ArrayBuffer, arrayBufferStringified);\n}\nfunction isUint8ArrayOrArrayBuffer(value) {\n  return isUint8Array(value) || isArrayBuffer(value);\n}\nexport function assertUint8Array(value) {\n  if (!isUint8Array(value)) {\n    throw new TypeError(`Expected \\`Uint8Array\\`, got \\`${typeof value}\\``);\n  }\n}\nexport function assertUint8ArrayOrArrayBuffer(value) {\n  if (!isUint8ArrayOrArrayBuffer(value)) {\n    throw new TypeError(`Expected \\`Uint8Array\\` or \\`ArrayBuffer\\`, got \\`${typeof value}\\``);\n  }\n}\nexport function toUint8Array(value) {\n  if (value instanceof ArrayBuffer) {\n    return new Uint8Array(value);\n  }\n  if (ArrayBuffer.isView(value)) {\n    return new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n  }\n  throw new TypeError(`Unsupported value, got \\`${typeof value}\\`.`);\n}\nexport function concatUint8Arrays(arrays, totalLength) {\n  if (arrays.length === 0) {\n    return new Uint8Array(0);\n  }\n  totalLength ??= arrays.reduce((accumulator, currentValue) => accumulator + currentValue.length, 0);\n  const returnValue = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const array of arrays) {\n    assertUint8Array(array);\n    returnValue.set(array, offset);\n    offset += array.length;\n  }\n  return returnValue;\n}\nexport function areUint8ArraysEqual(a, b) {\n  assertUint8Array(a);\n  assertUint8Array(b);\n  if (a === b) {\n    return true;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // eslint-disable-next-line unicorn/no-for-loop\n  for (let index = 0; index < a.length; index++) {\n    if (a[index] !== b[index]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function compareUint8Arrays(a, b) {\n  assertUint8Array(a);\n  assertUint8Array(b);\n  const length = Math.min(a.length, b.length);\n  for (let index = 0; index < length; index++) {\n    const diff = a[index] - b[index];\n    if (diff !== 0) {\n      return Math.sign(diff);\n    }\n  }\n\n  // At this point, all the compared elements are equal.\n  // The shorter array should come first if the arrays are of different lengths.\n  return Math.sign(a.length - b.length);\n}\nconst cachedDecoders = {\n  utf8: new globalThis.TextDecoder('utf8')\n};\nexport function uint8ArrayToString(array, encoding = 'utf8') {\n  assertUint8ArrayOrArrayBuffer(array);\n  cachedDecoders[encoding] ??= new globalThis.TextDecoder(encoding);\n  return cachedDecoders[encoding].decode(array);\n}\nfunction assertString(value) {\n  if (typeof value !== 'string') {\n    throw new TypeError(`Expected \\`string\\`, got \\`${typeof value}\\``);\n  }\n}\nconst cachedEncoder = new globalThis.TextEncoder();\nexport function stringToUint8Array(string) {\n  assertString(string);\n  return cachedEncoder.encode(string);\n}\nfunction base64ToBase64Url(base64) {\n  return base64.replaceAll('+', '-').replaceAll('/', '_').replace(/=+$/, '');\n}\nfunction base64UrlToBase64(base64url) {\n  return base64url.replaceAll('-', '+').replaceAll('_', '/');\n}\n\n// Reference: https://phuoc.ng/collection/this-vs-that/concat-vs-push/\nconst MAX_BLOCK_SIZE = 65_535;\nexport function uint8ArrayToBase64(array, {\n  urlSafe = false\n} = {}) {\n  assertUint8Array(array);\n  let base64;\n  if (array.length < MAX_BLOCK_SIZE) {\n    // Required as `btoa` and `atob` don't properly support Unicode: https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n    base64 = globalThis.btoa(String.fromCodePoint.apply(this, array));\n  } else {\n    base64 = '';\n    for (const value of array) {\n      base64 += String.fromCodePoint(value);\n    }\n    base64 = globalThis.btoa(base64);\n  }\n  return urlSafe ? base64ToBase64Url(base64) : base64;\n}\nexport function base64ToUint8Array(base64String) {\n  assertString(base64String);\n  return Uint8Array.from(globalThis.atob(base64UrlToBase64(base64String)), x => x.codePointAt(0));\n}\nexport function stringToBase64(string, {\n  urlSafe = false\n} = {}) {\n  assertString(string);\n  return uint8ArrayToBase64(stringToUint8Array(string), {\n    urlSafe\n  });\n}\nexport function base64ToString(base64String) {\n  assertString(base64String);\n  return uint8ArrayToString(base64ToUint8Array(base64String));\n}\nconst byteToHexLookupTable = Array.from({\n  length: 256\n}, (_, index) => index.toString(16).padStart(2, '0'));\nexport function uint8ArrayToHex(array) {\n  assertUint8Array(array);\n\n  // Concatenating a string is faster than using an array.\n  let hexString = '';\n\n  // eslint-disable-next-line unicorn/no-for-loop -- Max performance is critical.\n  for (let index = 0; index < array.length; index++) {\n    hexString += byteToHexLookupTable[array[index]];\n  }\n  return hexString;\n}\nconst hexToDecimalLookupTable = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  b: 11,\n  c: 12,\n  d: 13,\n  e: 14,\n  f: 15,\n  A: 10,\n  B: 11,\n  C: 12,\n  D: 13,\n  E: 14,\n  F: 15\n};\nexport function hexToUint8Array(hexString) {\n  assertString(hexString);\n  if (hexString.length % 2 !== 0) {\n    throw new Error('Invalid Hex string length.');\n  }\n  const resultLength = hexString.length / 2;\n  const bytes = new Uint8Array(resultLength);\n  for (let index = 0; index < resultLength; index++) {\n    const highNibble = hexToDecimalLookupTable[hexString[index * 2]];\n    const lowNibble = hexToDecimalLookupTable[hexString[index * 2 + 1]];\n    if (highNibble === undefined || lowNibble === undefined) {\n      throw new Error(`Invalid Hex character encountered at position ${index * 2}`);\n    }\n    bytes[index] = highNibble << 4 | lowNibble; // eslint-disable-line no-bitwise\n  }\n  return bytes;\n}\n\n/**\n@param {DataView} view\n@returns {number}\n*/\nexport function getUintBE(view) {\n  const {\n    byteLength\n  } = view;\n  if (byteLength === 6) {\n    return view.getUint16(0) * 2 ** 32 + view.getUint32(2);\n  }\n  if (byteLength === 5) {\n    return view.getUint8(0) * 2 ** 32 + view.getUint32(1);\n  }\n  if (byteLength === 4) {\n    return view.getUint32(0);\n  }\n  if (byteLength === 3) {\n    return view.getUint8(0) * 2 ** 16 + view.getUint16(1);\n  }\n  if (byteLength === 2) {\n    return view.getUint16(0);\n  }\n  if (byteLength === 1) {\n    return view.getUint8(0);\n  }\n}\n\n/**\n@param {Uint8Array} array\n@param {Uint8Array} value\n@returns {number}\n*/\nexport function indexOf(array, value) {\n  const arrayLength = array.length;\n  const valueLength = value.length;\n  if (valueLength === 0) {\n    return -1;\n  }\n  if (valueLength > arrayLength) {\n    return -1;\n  }\n  const validOffsetLength = arrayLength - valueLength;\n  for (let index = 0; index <= validOffsetLength; index++) {\n    let isMatch = true;\n    for (let index2 = 0; index2 < valueLength; index2++) {\n      if (array[index + index2] !== value[index2]) {\n        isMatch = false;\n        break;\n      }\n    }\n    if (isMatch) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n@param {Uint8Array} array\n@param {Uint8Array} value\n@returns {boolean}\n*/\nexport function includes(array, value) {\n  return indexOf(array, value) !== -1;\n}","import { StringType } from 'token-types';\nexport function stringToBytes(string) {\n  return [...string].map(character => character.charCodeAt(0)); // eslint-disable-line unicorn/prefer-code-point\n}\n\n/**\nChecks whether the TAR checksum is valid.\n\n@param {Uint8Array} arrayBuffer - The TAR header `[offset ... offset + 512]`.\n@param {number} offset - TAR header offset.\n@returns {boolean} `true` if the TAR checksum is valid, otherwise `false`.\n*/\nexport function tarHeaderChecksumMatches(arrayBuffer, offset = 0) {\n  const readSum = Number.parseInt(new StringType(6).get(arrayBuffer, 148).replace(/\\0.*$/, '').trim(), 8); // Read sum in header\n  if (Number.isNaN(readSum)) {\n    return false;\n  }\n  let sum = 8 * 0x20; // Initialize signed bit sum\n\n  for (let index = offset; index < offset + 148; index++) {\n    sum += arrayBuffer[index];\n  }\n  for (let index = offset + 156; index < offset + 512; index++) {\n    sum += arrayBuffer[index];\n  }\n  return readSum === sum;\n}\n\n/**\nID3 UINT32 sync-safe tokenizer token.\n28 bits (representing up to 256MB) integer, the msb is 0 to avoid \"false syncsignals\".\n*/\nexport const uint32SyncSafeToken = {\n  get: (buffer, offset) => buffer[offset + 3] & 0x7F | buffer[offset + 2] << 7 | buffer[offset + 1] << 14 | buffer[offset] << 21,\n  len: 4\n};","export const extensions = ['jpg', 'png', 'apng', 'gif', 'webp', 'flif', 'xcf', 'cr2', 'cr3', 'orf', 'arw', 'dng', 'nef', 'rw2', 'raf', 'tif', 'bmp', 'icns', 'jxr', 'psd', 'indd', 'zip', 'tar', 'rar', 'gz', 'bz2', '7z', 'dmg', 'mp4', 'mid', 'mkv', 'webm', 'mov', 'avi', 'mpg', 'mp2', 'mp3', 'm4a', 'oga', 'ogg', 'ogv', 'opus', 'flac', 'wav', 'spx', 'amr', 'pdf', 'epub', 'elf', 'macho', 'exe', 'swf', 'rtf', 'wasm', 'woff', 'woff2', 'eot', 'ttf', 'otf', 'ico', 'flv', 'ps', 'xz', 'sqlite', 'nes', 'crx', 'xpi', 'cab', 'deb', 'ar', 'rpm', 'Z', 'lz', 'cfb', 'mxf', 'mts', 'blend', 'bpg', 'docx', 'pptx', 'xlsx', '3gp', '3g2', 'j2c', 'jp2', 'jpm', 'jpx', 'mj2', 'aif', 'qcp', 'odt', 'ods', 'odp', 'xml', 'mobi', 'heic', 'cur', 'ktx', 'ape', 'wv', 'dcm', 'ics', 'glb', 'pcap', 'dsf', 'lnk', 'alias', 'voc', 'ac3', 'm4v', 'm4p', 'm4b', 'f4v', 'f4p', 'f4b', 'f4a', 'mie', 'asf', 'ogm', 'ogx', 'mpc', 'arrow', 'shp', 'aac', 'mp1', 'it', 's3m', 'xm', 'ai', 'skp', 'avif', 'eps', 'lzh', 'pgp', 'asar', 'stl', 'chm', '3mf', 'zst', 'jxl', 'vcf', 'jls', 'pst', 'dwg', 'parquet', 'class', 'arj', 'cpio', 'ace', 'avro', 'icc', 'fbx', 'vsdx', 'vtt', 'apk'];\nexport const mimeTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/flif', 'image/x-xcf', 'image/x-canon-cr2', 'image/x-canon-cr3', 'image/tiff', 'image/bmp', 'image/vnd.ms-photo', 'image/vnd.adobe.photoshop', 'application/x-indesign', 'application/epub+zip', 'application/x-xpinstall', 'application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.oasis.opendocument.presentation', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/zip', 'application/x-tar', 'application/x-rar-compressed', 'application/gzip', 'application/x-bzip2', 'application/x-7z-compressed', 'application/x-apple-diskimage', 'application/x-apache-arrow', 'video/mp4', 'audio/midi', 'video/x-matroska', 'video/webm', 'video/quicktime', 'video/vnd.avi', 'audio/wav', 'audio/qcelp', 'audio/x-ms-asf', 'video/x-ms-asf', 'application/vnd.ms-asf', 'video/mpeg', 'video/3gpp', 'audio/mpeg', 'audio/mp4',\n// RFC 4337\n'video/ogg', 'audio/ogg', 'audio/ogg; codecs=opus', 'application/ogg', 'audio/x-flac', 'audio/ape', 'audio/wavpack', 'audio/amr', 'application/pdf', 'application/x-elf', 'application/x-mach-binary', 'application/x-msdownload', 'application/x-shockwave-flash', 'application/rtf', 'application/wasm', 'font/woff', 'font/woff2', 'application/vnd.ms-fontobject', 'font/ttf', 'font/otf', 'image/x-icon', 'video/x-flv', 'application/postscript', 'application/eps', 'application/x-xz', 'application/x-sqlite3', 'application/x-nintendo-nes-rom', 'application/x-google-chrome-extension', 'application/vnd.ms-cab-compressed', 'application/x-deb', 'application/x-unix-archive', 'application/x-rpm', 'application/x-compress', 'application/x-lzip', 'application/x-cfb', 'application/x-mie', 'application/mxf', 'video/mp2t', 'application/x-blender', 'image/bpg', 'image/j2c', 'image/jp2', 'image/jpx', 'image/jpm', 'image/mj2', 'audio/aiff', 'application/xml', 'application/x-mobipocket-ebook', 'image/heif', 'image/heif-sequence', 'image/heic', 'image/heic-sequence', 'image/icns', 'image/ktx', 'application/dicom', 'audio/x-musepack', 'text/calendar', 'text/vcard', 'text/vtt', 'model/gltf-binary', 'application/vnd.tcpdump.pcap', 'audio/x-dsf',\n// Non-standard\n'application/x.ms.shortcut',\n// Invented by us\n'application/x.apple.alias',\n// Invented by us\n'audio/x-voc', 'audio/vnd.dolby.dd-raw', 'audio/x-m4a', 'image/apng', 'image/x-olympus-orf', 'image/x-sony-arw', 'image/x-adobe-dng', 'image/x-nikon-nef', 'image/x-panasonic-rw2', 'image/x-fujifilm-raf', 'video/x-m4v', 'video/3gpp2', 'application/x-esri-shape', 'audio/aac', 'audio/x-it', 'audio/x-s3m', 'audio/x-xm', 'video/MP1S', 'video/MP2P', 'application/vnd.sketchup.skp', 'image/avif', 'application/x-lzh-compressed', 'application/pgp-encrypted', 'application/x-asar', 'model/stl', 'application/vnd.ms-htmlhelp', 'model/3mf', 'image/jxl', 'application/zstd', 'image/jls', 'application/vnd.ms-outlook', 'image/vnd.dwg', 'application/x-parquet', 'application/java-vm', 'application/x-arj', 'application/x-cpio', 'application/x-ace-compressed', 'application/avro', 'application/vnd.iccprofile', 'application/x.autodesk.fbx',\n// Invented by us\n'application/vnd.visio', 'application/vnd.android.package-archive'];","/**\nPrimary entry point, Node.js specific entry point is index.js\n*/\n\nimport * as Token from 'token-types';\nimport * as strtok3 from 'strtok3/core';\nimport { includes, indexOf, getUintBE } from 'uint8array-extras';\nimport { stringToBytes, tarHeaderChecksumMatches, uint32SyncSafeToken } from './util.js';\nimport { extensions, mimeTypes } from './supported.js';\nexport const reasonableDetectionSizeInBytes = 4100; // A fair amount of file-types are detectable within this range.\n\nexport async function fileTypeFromStream(stream) {\n  return new FileTypeParser().fromStream(stream);\n}\nexport async function fileTypeFromBuffer(input) {\n  return new FileTypeParser().fromBuffer(input);\n}\nexport async function fileTypeFromBlob(blob) {\n  return new FileTypeParser().fromBlob(blob);\n}\nfunction _check(buffer, headers, options) {\n  options = {\n    offset: 0,\n    ...options\n  };\n  for (const [index, header] of headers.entries()) {\n    // If a bitmask is set\n    if (options.mask) {\n      // If header doesn't equal `buf` with bits masked off\n      if (header !== (options.mask[index] & buffer[index + options.offset])) {\n        return false;\n      }\n    } else if (header !== buffer[index + options.offset]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport async function fileTypeFromTokenizer(tokenizer) {\n  return new FileTypeParser().fromTokenizer(tokenizer);\n}\nexport async function fileTypeStream(webStream, options) {\n  return new FileTypeParser(options).toDetectionStream(webStream, options);\n}\nexport class FileTypeParser {\n  constructor(options) {\n    this.detectors = options?.customDetectors;\n    this.tokenizerOptions = {\n      abortSignal: options?.signal\n    };\n    this.fromTokenizer = this.fromTokenizer.bind(this);\n    this.fromBuffer = this.fromBuffer.bind(this);\n    this.parse = this.parse.bind(this);\n  }\n  async fromTokenizer(tokenizer) {\n    const initialPosition = tokenizer.position;\n    for (const detector of this.detectors || []) {\n      const fileType = await detector(tokenizer);\n      if (fileType) {\n        return fileType;\n      }\n      if (initialPosition !== tokenizer.position) {\n        return undefined; // Cannot proceed scanning of the tokenizer is at an arbitrary position\n      }\n    }\n    return this.parse(tokenizer);\n  }\n  async fromBuffer(input) {\n    if (!(input instanceof Uint8Array || input instanceof ArrayBuffer)) {\n      throw new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n    }\n    const buffer = input instanceof Uint8Array ? input : new Uint8Array(input);\n    if (!(buffer?.length > 1)) {\n      return;\n    }\n    return this.fromTokenizer(strtok3.fromBuffer(buffer, this.tokenizerOptions));\n  }\n  async fromBlob(blob) {\n    return this.fromStream(blob.stream());\n  }\n  async fromStream(stream) {\n    const tokenizer = await strtok3.fromWebStream(stream, this.tokenizerOptions);\n    try {\n      return await this.fromTokenizer(tokenizer);\n    } finally {\n      await tokenizer.close();\n    }\n  }\n  async toDetectionStream(stream, options) {\n    const {\n      sampleSize = reasonableDetectionSizeInBytes\n    } = options;\n    let detectedFileType;\n    let firstChunk;\n    const reader = stream.getReader({\n      mode: 'byob'\n    });\n    try {\n      // Read the first chunk from the stream\n      const {\n        value: chunk,\n        done\n      } = await reader.read(new Uint8Array(sampleSize));\n      firstChunk = chunk;\n      if (!done && chunk) {\n        try {\n          // Attempt to detect the file type from the chunk\n          detectedFileType = await this.fromBuffer(chunk.slice(0, sampleSize));\n        } catch (error) {\n          if (!(error instanceof strtok3.EndOfStreamError)) {\n            throw error; // Re-throw non-EndOfStreamError\n          }\n          detectedFileType = undefined;\n        }\n      }\n      firstChunk = chunk;\n    } finally {\n      reader.releaseLock(); // Ensure the reader is released\n    }\n\n    // Create a new ReadableStream to manage locking issues\n    const transformStream = new TransformStream({\n      async start(controller) {\n        controller.enqueue(firstChunk); // Enqueue the initial chunk\n      },\n      transform(chunk, controller) {\n        // Pass through the chunks without modification\n        controller.enqueue(chunk);\n      }\n    });\n    const newStream = stream.pipeThrough(transformStream);\n    newStream.fileType = detectedFileType;\n    return newStream;\n  }\n  check(header, options) {\n    return _check(this.buffer, header, options);\n  }\n  checkString(header, options) {\n    return this.check(stringToBytes(header), options);\n  }\n  async parse(tokenizer) {\n    this.buffer = new Uint8Array(reasonableDetectionSizeInBytes);\n\n    // Keep reading until EOF if the file size is unknown.\n    if (tokenizer.fileInfo.size === undefined) {\n      tokenizer.fileInfo.size = Number.MAX_SAFE_INTEGER;\n    }\n    this.tokenizer = tokenizer;\n    await tokenizer.peekBuffer(this.buffer, {\n      length: 12,\n      mayBeLess: true\n    });\n\n    // -- 2-byte signatures --\n\n    if (this.check([0x42, 0x4D])) {\n      return {\n        ext: 'bmp',\n        mime: 'image/bmp'\n      };\n    }\n    if (this.check([0x0B, 0x77])) {\n      return {\n        ext: 'ac3',\n        mime: 'audio/vnd.dolby.dd-raw'\n      };\n    }\n    if (this.check([0x78, 0x01])) {\n      return {\n        ext: 'dmg',\n        mime: 'application/x-apple-diskimage'\n      };\n    }\n    if (this.check([0x4D, 0x5A])) {\n      return {\n        ext: 'exe',\n        mime: 'application/x-msdownload'\n      };\n    }\n    if (this.check([0x25, 0x21])) {\n      await tokenizer.peekBuffer(this.buffer, {\n        length: 24,\n        mayBeLess: true\n      });\n      if (this.checkString('PS-Adobe-', {\n        offset: 2\n      }) && this.checkString(' EPSF-', {\n        offset: 14\n      })) {\n        return {\n          ext: 'eps',\n          mime: 'application/eps'\n        };\n      }\n      return {\n        ext: 'ps',\n        mime: 'application/postscript'\n      };\n    }\n    if (this.check([0x1F, 0xA0]) || this.check([0x1F, 0x9D])) {\n      return {\n        ext: 'Z',\n        mime: 'application/x-compress'\n      };\n    }\n    if (this.check([0xC7, 0x71])) {\n      return {\n        ext: 'cpio',\n        mime: 'application/x-cpio'\n      };\n    }\n    if (this.check([0x60, 0xEA])) {\n      return {\n        ext: 'arj',\n        mime: 'application/x-arj'\n      };\n    }\n\n    // -- 3-byte signatures --\n\n    if (this.check([0xEF, 0xBB, 0xBF])) {\n      // UTF-8-BOM\n      // Strip off UTF-8-BOM\n      this.tokenizer.ignore(3);\n      return this.parse(tokenizer);\n    }\n    if (this.check([0x47, 0x49, 0x46])) {\n      return {\n        ext: 'gif',\n        mime: 'image/gif'\n      };\n    }\n    if (this.check([0x49, 0x49, 0xBC])) {\n      return {\n        ext: 'jxr',\n        mime: 'image/vnd.ms-photo'\n      };\n    }\n    if (this.check([0x1F, 0x8B, 0x8])) {\n      return {\n        ext: 'gz',\n        mime: 'application/gzip'\n      };\n    }\n    if (this.check([0x42, 0x5A, 0x68])) {\n      return {\n        ext: 'bz2',\n        mime: 'application/x-bzip2'\n      };\n    }\n    if (this.checkString('ID3')) {\n      await tokenizer.ignore(6); // Skip ID3 header until the header size\n      const id3HeaderLength = await tokenizer.readToken(uint32SyncSafeToken);\n      if (tokenizer.position + id3HeaderLength > tokenizer.fileInfo.size) {\n        // Guess file type based on ID3 header for backward compatibility\n        return {\n          ext: 'mp3',\n          mime: 'audio/mpeg'\n        };\n      }\n      await tokenizer.ignore(id3HeaderLength);\n      return this.fromTokenizer(tokenizer); // Skip ID3 header, recursion\n    }\n\n    // Musepack, SV7\n    if (this.checkString('MP+')) {\n      return {\n        ext: 'mpc',\n        mime: 'audio/x-musepack'\n      };\n    }\n    if ((this.buffer[0] === 0x43 || this.buffer[0] === 0x46) && this.check([0x57, 0x53], {\n      offset: 1\n    })) {\n      return {\n        ext: 'swf',\n        mime: 'application/x-shockwave-flash'\n      };\n    }\n\n    // -- 4-byte signatures --\n\n    // Requires a sample size of 4 bytes\n    if (this.check([0xFF, 0xD8, 0xFF])) {\n      if (this.check([0xF7], {\n        offset: 3\n      })) {\n        // JPG7/SOF55, indicating a ISO/IEC 14495 / JPEG-LS file\n        return {\n          ext: 'jls',\n          mime: 'image/jls'\n        };\n      }\n      return {\n        ext: 'jpg',\n        mime: 'image/jpeg'\n      };\n    }\n    if (this.check([0x4F, 0x62, 0x6A, 0x01])) {\n      return {\n        ext: 'avro',\n        mime: 'application/avro'\n      };\n    }\n    if (this.checkString('FLIF')) {\n      return {\n        ext: 'flif',\n        mime: 'image/flif'\n      };\n    }\n    if (this.checkString('8BPS')) {\n      return {\n        ext: 'psd',\n        mime: 'image/vnd.adobe.photoshop'\n      };\n    }\n    if (this.checkString('WEBP', {\n      offset: 8\n    })) {\n      return {\n        ext: 'webp',\n        mime: 'image/webp'\n      };\n    }\n\n    // Musepack, SV8\n    if (this.checkString('MPCK')) {\n      return {\n        ext: 'mpc',\n        mime: 'audio/x-musepack'\n      };\n    }\n    if (this.checkString('FORM')) {\n      return {\n        ext: 'aif',\n        mime: 'audio/aiff'\n      };\n    }\n    if (this.checkString('icns', {\n      offset: 0\n    })) {\n      return {\n        ext: 'icns',\n        mime: 'image/icns'\n      };\n    }\n\n    // Zip-based file formats\n    // Need to be before the `zip` check\n    if (this.check([0x50, 0x4B, 0x3, 0x4])) {\n      // Local file header signature\n      try {\n        while (tokenizer.position + 30 < tokenizer.fileInfo.size) {\n          await tokenizer.readBuffer(this.buffer, {\n            length: 30\n          });\n          const view = new DataView(this.buffer.buffer);\n\n          // https://en.wikipedia.org/wiki/Zip_(file_format)#File_headers\n          const zipHeader = {\n            compressedSize: view.getUint32(18, true),\n            uncompressedSize: view.getUint32(22, true),\n            filenameLength: view.getUint16(26, true),\n            extraFieldLength: view.getUint16(28, true)\n          };\n          zipHeader.filename = await tokenizer.readToken(new Token.StringType(zipHeader.filenameLength, 'utf-8'));\n          await tokenizer.ignore(zipHeader.extraFieldLength);\n          if (/classes\\d*\\.dex/.test(zipHeader.filename)) {\n            return {\n              ext: 'apk',\n              mime: 'application/vnd.android.package-archive'\n            };\n          }\n\n          // Assumes signed `.xpi` from addons.mozilla.org\n          if (zipHeader.filename === 'META-INF/mozilla.rsa') {\n            return {\n              ext: 'xpi',\n              mime: 'application/x-xpinstall'\n            };\n          }\n          if (zipHeader.filename.endsWith('.rels') || zipHeader.filename.endsWith('.xml')) {\n            const type = zipHeader.filename.split('/')[0];\n            switch (type) {\n              case '_rels':\n                break;\n              case 'word':\n                return {\n                  ext: 'docx',\n                  mime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n                };\n              case 'ppt':\n                return {\n                  ext: 'pptx',\n                  mime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n                };\n              case 'xl':\n                return {\n                  ext: 'xlsx',\n                  mime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n                };\n              case 'visio':\n                return {\n                  ext: 'vsdx',\n                  mime: 'application/vnd.visio'\n                };\n              default:\n                break;\n            }\n          }\n          if (zipHeader.filename.startsWith('xl/')) {\n            return {\n              ext: 'xlsx',\n              mime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n            };\n          }\n          if (zipHeader.filename.startsWith('3D/') && zipHeader.filename.endsWith('.model')) {\n            return {\n              ext: '3mf',\n              mime: 'model/3mf'\n            };\n          }\n\n          // The docx, xlsx and pptx file types extend the Office Open XML file format:\n          // https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n          // We look for:\n          // - one entry named '[Content_Types].xml' or '_rels/.rels',\n          // - one entry indicating specific type of file.\n          // MS Office, OpenOffice and LibreOffice may put the parts in different order, so the check should not rely on it.\n          if (zipHeader.filename === 'mimetype' && zipHeader.compressedSize === zipHeader.uncompressedSize) {\n            let mimeType = await tokenizer.readToken(new Token.StringType(zipHeader.compressedSize, 'utf-8'));\n            mimeType = mimeType.trim();\n            switch (mimeType) {\n              case 'application/epub+zip':\n                return {\n                  ext: 'epub',\n                  mime: 'application/epub+zip'\n                };\n              case 'application/vnd.oasis.opendocument.text':\n                return {\n                  ext: 'odt',\n                  mime: 'application/vnd.oasis.opendocument.text'\n                };\n              case 'application/vnd.oasis.opendocument.spreadsheet':\n                return {\n                  ext: 'ods',\n                  mime: 'application/vnd.oasis.opendocument.spreadsheet'\n                };\n              case 'application/vnd.oasis.opendocument.presentation':\n                return {\n                  ext: 'odp',\n                  mime: 'application/vnd.oasis.opendocument.presentation'\n                };\n              default:\n            }\n          }\n\n          // Try to find next header manually when current one is corrupted\n          if (zipHeader.compressedSize === 0) {\n            let nextHeaderIndex = -1;\n            while (nextHeaderIndex < 0 && tokenizer.position < tokenizer.fileInfo.size) {\n              await tokenizer.peekBuffer(this.buffer, {\n                mayBeLess: true\n              });\n              nextHeaderIndex = indexOf(this.buffer, new Uint8Array([0x50, 0x4B, 0x03, 0x04]));\n\n              // Move position to the next header if found, skip the whole buffer otherwise\n              await tokenizer.ignore(nextHeaderIndex >= 0 ? nextHeaderIndex : this.buffer.length);\n            }\n          } else {\n            await tokenizer.ignore(zipHeader.compressedSize);\n          }\n        }\n      } catch (error) {\n        if (!(error instanceof strtok3.EndOfStreamError)) {\n          throw error;\n        }\n      }\n      return {\n        ext: 'zip',\n        mime: 'application/zip'\n      };\n    }\n    if (this.checkString('OggS')) {\n      // This is an OGG container\n      await tokenizer.ignore(28);\n      const type = new Uint8Array(8);\n      await tokenizer.readBuffer(type);\n\n      // Needs to be before `ogg` check\n      if (_check(type, [0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64])) {\n        return {\n          ext: 'opus',\n          mime: 'audio/ogg; codecs=opus'\n        };\n      }\n\n      // If ' theora' in header.\n      if (_check(type, [0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61])) {\n        return {\n          ext: 'ogv',\n          mime: 'video/ogg'\n        };\n      }\n\n      // If '\\x01video' in header.\n      if (_check(type, [0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00])) {\n        return {\n          ext: 'ogm',\n          mime: 'video/ogg'\n        };\n      }\n\n      // If ' FLAC' in header  https://xiph.org/flac/faq.html\n      if (_check(type, [0x7F, 0x46, 0x4C, 0x41, 0x43])) {\n        return {\n          ext: 'oga',\n          mime: 'audio/ogg'\n        };\n      }\n\n      // 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n      if (_check(type, [0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20])) {\n        return {\n          ext: 'spx',\n          mime: 'audio/ogg'\n        };\n      }\n\n      // If '\\x01vorbis' in header\n      if (_check(type, [0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73])) {\n        return {\n          ext: 'ogg',\n          mime: 'audio/ogg'\n        };\n      }\n\n      // Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n      return {\n        ext: 'ogx',\n        mime: 'application/ogg'\n      };\n    }\n    if (this.check([0x50, 0x4B]) && (this.buffer[2] === 0x3 || this.buffer[2] === 0x5 || this.buffer[2] === 0x7) && (this.buffer[3] === 0x4 || this.buffer[3] === 0x6 || this.buffer[3] === 0x8)) {\n      return {\n        ext: 'zip',\n        mime: 'application/zip'\n      };\n    }\n\n    //\n\n    // File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n    // It's not required to be first, but it's recommended to be. Almost all ISO base media files start with `ftyp` box.\n    // `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n    // Here we check for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n    if (this.checkString('ftyp', {\n      offset: 4\n    }) && (this.buffer[8] & 0x60) !== 0x00 // Brand major, first character ASCII?\n    ) {\n      // They all can have MIME `video/mp4` except `application/mp4` special-case which is hard to detect.\n      // For some cases, we're specific, everything else falls to `video/mp4` with `mp4` extension.\n      const brandMajor = new Token.StringType(4, 'latin1').get(this.buffer, 8).replace('\\0', ' ').trim();\n      switch (brandMajor) {\n        case 'avif':\n        case 'avis':\n          return {\n            ext: 'avif',\n            mime: 'image/avif'\n          };\n        case 'mif1':\n          return {\n            ext: 'heic',\n            mime: 'image/heif'\n          };\n        case 'msf1':\n          return {\n            ext: 'heic',\n            mime: 'image/heif-sequence'\n          };\n        case 'heic':\n        case 'heix':\n          return {\n            ext: 'heic',\n            mime: 'image/heic'\n          };\n        case 'hevc':\n        case 'hevx':\n          return {\n            ext: 'heic',\n            mime: 'image/heic-sequence'\n          };\n        case 'qt':\n          return {\n            ext: 'mov',\n            mime: 'video/quicktime'\n          };\n        case 'M4V':\n        case 'M4VH':\n        case 'M4VP':\n          return {\n            ext: 'm4v',\n            mime: 'video/x-m4v'\n          };\n        case 'M4P':\n          return {\n            ext: 'm4p',\n            mime: 'video/mp4'\n          };\n        case 'M4B':\n          return {\n            ext: 'm4b',\n            mime: 'audio/mp4'\n          };\n        case 'M4A':\n          return {\n            ext: 'm4a',\n            mime: 'audio/x-m4a'\n          };\n        case 'F4V':\n          return {\n            ext: 'f4v',\n            mime: 'video/mp4'\n          };\n        case 'F4P':\n          return {\n            ext: 'f4p',\n            mime: 'video/mp4'\n          };\n        case 'F4A':\n          return {\n            ext: 'f4a',\n            mime: 'audio/mp4'\n          };\n        case 'F4B':\n          return {\n            ext: 'f4b',\n            mime: 'audio/mp4'\n          };\n        case 'crx':\n          return {\n            ext: 'cr3',\n            mime: 'image/x-canon-cr3'\n          };\n        default:\n          if (brandMajor.startsWith('3g')) {\n            if (brandMajor.startsWith('3g2')) {\n              return {\n                ext: '3g2',\n                mime: 'video/3gpp2'\n              };\n            }\n            return {\n              ext: '3gp',\n              mime: 'video/3gpp'\n            };\n          }\n          return {\n            ext: 'mp4',\n            mime: 'video/mp4'\n          };\n      }\n    }\n    if (this.checkString('MThd')) {\n      return {\n        ext: 'mid',\n        mime: 'audio/midi'\n      };\n    }\n    if (this.checkString('wOFF') && (this.check([0x00, 0x01, 0x00, 0x00], {\n      offset: 4\n    }) || this.checkString('OTTO', {\n      offset: 4\n    }))) {\n      return {\n        ext: 'woff',\n        mime: 'font/woff'\n      };\n    }\n    if (this.checkString('wOF2') && (this.check([0x00, 0x01, 0x00, 0x00], {\n      offset: 4\n    }) || this.checkString('OTTO', {\n      offset: 4\n    }))) {\n      return {\n        ext: 'woff2',\n        mime: 'font/woff2'\n      };\n    }\n    if (this.check([0xD4, 0xC3, 0xB2, 0xA1]) || this.check([0xA1, 0xB2, 0xC3, 0xD4])) {\n      return {\n        ext: 'pcap',\n        mime: 'application/vnd.tcpdump.pcap'\n      };\n    }\n\n    // Sony DSD Stream File (DSF)\n    if (this.checkString('DSD ')) {\n      return {\n        ext: 'dsf',\n        mime: 'audio/x-dsf' // Non-standard\n      };\n    }\n    if (this.checkString('LZIP')) {\n      return {\n        ext: 'lz',\n        mime: 'application/x-lzip'\n      };\n    }\n    if (this.checkString('fLaC')) {\n      return {\n        ext: 'flac',\n        mime: 'audio/x-flac'\n      };\n    }\n    if (this.check([0x42, 0x50, 0x47, 0xFB])) {\n      return {\n        ext: 'bpg',\n        mime: 'image/bpg'\n      };\n    }\n    if (this.checkString('wvpk')) {\n      return {\n        ext: 'wv',\n        mime: 'audio/wavpack'\n      };\n    }\n    if (this.checkString('%PDF')) {\n      try {\n        await tokenizer.ignore(1350);\n        const maxBufferSize = 10 * 1024 * 1024;\n        const buffer = new Uint8Array(Math.min(maxBufferSize, tokenizer.fileInfo.size));\n        await tokenizer.readBuffer(buffer, {\n          mayBeLess: true\n        });\n\n        // Check if this is an Adobe Illustrator file\n        if (includes(buffer, new TextEncoder().encode('AIPrivateData'))) {\n          return {\n            ext: 'ai',\n            mime: 'application/postscript'\n          };\n        }\n      } catch (error) {\n        // Swallow end of stream error if file is too small for the Adobe AI check\n        if (!(error instanceof strtok3.EndOfStreamError)) {\n          throw error;\n        }\n      }\n\n      // Assume this is just a normal PDF\n      return {\n        ext: 'pdf',\n        mime: 'application/pdf'\n      };\n    }\n    if (this.check([0x00, 0x61, 0x73, 0x6D])) {\n      return {\n        ext: 'wasm',\n        mime: 'application/wasm'\n      };\n    }\n\n    // TIFF, little-endian type\n    if (this.check([0x49, 0x49])) {\n      const fileType = await this.readTiffHeader(false);\n      if (fileType) {\n        return fileType;\n      }\n    }\n\n    // TIFF, big-endian type\n    if (this.check([0x4D, 0x4D])) {\n      const fileType = await this.readTiffHeader(true);\n      if (fileType) {\n        return fileType;\n      }\n    }\n    if (this.checkString('MAC ')) {\n      return {\n        ext: 'ape',\n        mime: 'audio/ape'\n      };\n    }\n\n    // https://github.com/file/file/blob/master/magic/Magdir/matroska\n    if (this.check([0x1A, 0x45, 0xDF, 0xA3])) {\n      // Root element: EBML\n      async function readField() {\n        const msb = await tokenizer.peekNumber(Token.UINT8);\n        let mask = 0x80;\n        let ic = 0; // 0 = A, 1 = B, 2 = C, 3 = D\n\n        while ((msb & mask) === 0 && mask !== 0) {\n          ++ic;\n          mask >>= 1;\n        }\n        const id = new Uint8Array(ic + 1);\n        await tokenizer.readBuffer(id);\n        return id;\n      }\n      async function readElement() {\n        const idField = await readField();\n        const lengthField = await readField();\n        lengthField[0] ^= 0x80 >> lengthField.length - 1;\n        const nrLength = Math.min(6, lengthField.length); // JavaScript can max read 6 bytes integer\n\n        const idView = new DataView(idField.buffer);\n        const lengthView = new DataView(lengthField.buffer, lengthField.length - nrLength, nrLength);\n        return {\n          id: getUintBE(idView),\n          len: getUintBE(lengthView)\n        };\n      }\n      async function readChildren(children) {\n        while (children > 0) {\n          const element = await readElement();\n          if (element.id === 0x42_82) {\n            const rawValue = await tokenizer.readToken(new Token.StringType(element.len));\n            return rawValue.replaceAll(/\\00.*$/g, ''); // Return DocType\n          }\n          await tokenizer.ignore(element.len); // ignore payload\n          --children;\n        }\n      }\n      const re = await readElement();\n      const docType = await readChildren(re.len);\n      switch (docType) {\n        case 'webm':\n          return {\n            ext: 'webm',\n            mime: 'video/webm'\n          };\n        case 'matroska':\n          return {\n            ext: 'mkv',\n            mime: 'video/x-matroska'\n          };\n        default:\n          return;\n      }\n    }\n\n    // RIFF file format which might be AVI, WAV, QCP, etc\n    if (this.check([0x52, 0x49, 0x46, 0x46])) {\n      if (this.check([0x41, 0x56, 0x49], {\n        offset: 8\n      })) {\n        return {\n          ext: 'avi',\n          mime: 'video/vnd.avi'\n        };\n      }\n      if (this.check([0x57, 0x41, 0x56, 0x45], {\n        offset: 8\n      })) {\n        return {\n          ext: 'wav',\n          mime: 'audio/wav'\n        };\n      }\n\n      // QLCM, QCP file\n      if (this.check([0x51, 0x4C, 0x43, 0x4D], {\n        offset: 8\n      })) {\n        return {\n          ext: 'qcp',\n          mime: 'audio/qcelp'\n        };\n      }\n    }\n    if (this.checkString('SQLi')) {\n      return {\n        ext: 'sqlite',\n        mime: 'application/x-sqlite3'\n      };\n    }\n    if (this.check([0x4E, 0x45, 0x53, 0x1A])) {\n      return {\n        ext: 'nes',\n        mime: 'application/x-nintendo-nes-rom'\n      };\n    }\n    if (this.checkString('Cr24')) {\n      return {\n        ext: 'crx',\n        mime: 'application/x-google-chrome-extension'\n      };\n    }\n    if (this.checkString('MSCF') || this.checkString('ISc(')) {\n      return {\n        ext: 'cab',\n        mime: 'application/vnd.ms-cab-compressed'\n      };\n    }\n    if (this.check([0xED, 0xAB, 0xEE, 0xDB])) {\n      return {\n        ext: 'rpm',\n        mime: 'application/x-rpm'\n      };\n    }\n    if (this.check([0xC5, 0xD0, 0xD3, 0xC6])) {\n      return {\n        ext: 'eps',\n        mime: 'application/eps'\n      };\n    }\n    if (this.check([0x28, 0xB5, 0x2F, 0xFD])) {\n      return {\n        ext: 'zst',\n        mime: 'application/zstd'\n      };\n    }\n    if (this.check([0x7F, 0x45, 0x4C, 0x46])) {\n      return {\n        ext: 'elf',\n        mime: 'application/x-elf'\n      };\n    }\n    if (this.check([0x21, 0x42, 0x44, 0x4E])) {\n      return {\n        ext: 'pst',\n        mime: 'application/vnd.ms-outlook'\n      };\n    }\n    if (this.checkString('PAR1')) {\n      return {\n        ext: 'parquet',\n        mime: 'application/x-parquet'\n      };\n    }\n    if (this.check([0xCF, 0xFA, 0xED, 0xFE])) {\n      return {\n        ext: 'macho',\n        mime: 'application/x-mach-binary'\n      };\n    }\n\n    // -- 5-byte signatures --\n\n    if (this.check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n      return {\n        ext: 'otf',\n        mime: 'font/otf'\n      };\n    }\n    if (this.checkString('#!AMR')) {\n      return {\n        ext: 'amr',\n        mime: 'audio/amr'\n      };\n    }\n    if (this.checkString('{\\\\rtf')) {\n      return {\n        ext: 'rtf',\n        mime: 'application/rtf'\n      };\n    }\n    if (this.check([0x46, 0x4C, 0x56, 0x01])) {\n      return {\n        ext: 'flv',\n        mime: 'video/x-flv'\n      };\n    }\n    if (this.checkString('IMPM')) {\n      return {\n        ext: 'it',\n        mime: 'audio/x-it'\n      };\n    }\n    if (this.checkString('-lh0-', {\n      offset: 2\n    }) || this.checkString('-lh1-', {\n      offset: 2\n    }) || this.checkString('-lh2-', {\n      offset: 2\n    }) || this.checkString('-lh3-', {\n      offset: 2\n    }) || this.checkString('-lh4-', {\n      offset: 2\n    }) || this.checkString('-lh5-', {\n      offset: 2\n    }) || this.checkString('-lh6-', {\n      offset: 2\n    }) || this.checkString('-lh7-', {\n      offset: 2\n    }) || this.checkString('-lzs-', {\n      offset: 2\n    }) || this.checkString('-lz4-', {\n      offset: 2\n    }) || this.checkString('-lz5-', {\n      offset: 2\n    }) || this.checkString('-lhd-', {\n      offset: 2\n    })) {\n      return {\n        ext: 'lzh',\n        mime: 'application/x-lzh-compressed'\n      };\n    }\n\n    // MPEG program stream (PS or MPEG-PS)\n    if (this.check([0x00, 0x00, 0x01, 0xBA])) {\n      //  MPEG-PS, MPEG-1 Part 1\n      if (this.check([0x21], {\n        offset: 4,\n        mask: [0xF1]\n      })) {\n        return {\n          ext: 'mpg',\n          // May also be .ps, .mpeg\n          mime: 'video/MP1S'\n        };\n      }\n\n      // MPEG-PS, MPEG-2 Part 1\n      if (this.check([0x44], {\n        offset: 4,\n        mask: [0xC4]\n      })) {\n        return {\n          ext: 'mpg',\n          // May also be .mpg, .m2p, .vob or .sub\n          mime: 'video/MP2P'\n        };\n      }\n    }\n    if (this.checkString('ITSF')) {\n      return {\n        ext: 'chm',\n        mime: 'application/vnd.ms-htmlhelp'\n      };\n    }\n    if (this.check([0xCA, 0xFE, 0xBA, 0xBE])) {\n      return {\n        ext: 'class',\n        mime: 'application/java-vm'\n      };\n    }\n\n    // -- 6-byte signatures --\n\n    if (this.check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n      return {\n        ext: 'xz',\n        mime: 'application/x-xz'\n      };\n    }\n    if (this.checkString('<?xml ')) {\n      return {\n        ext: 'xml',\n        mime: 'application/xml'\n      };\n    }\n    if (this.check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n      return {\n        ext: '7z',\n        mime: 'application/x-7z-compressed'\n      };\n    }\n    if (this.check([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7]) && (this.buffer[6] === 0x0 || this.buffer[6] === 0x1)) {\n      return {\n        ext: 'rar',\n        mime: 'application/x-rar-compressed'\n      };\n    }\n    if (this.checkString('solid ')) {\n      return {\n        ext: 'stl',\n        mime: 'model/stl'\n      };\n    }\n    if (this.checkString('AC')) {\n      const version = new Token.StringType(4, 'latin1').get(this.buffer, 2);\n      if (version.match('^d*') && version >= 1000 && version <= 1050) {\n        return {\n          ext: 'dwg',\n          mime: 'image/vnd.dwg'\n        };\n      }\n    }\n    if (this.checkString('070707')) {\n      return {\n        ext: 'cpio',\n        mime: 'application/x-cpio'\n      };\n    }\n\n    // -- 7-byte signatures --\n\n    if (this.checkString('BLENDER')) {\n      return {\n        ext: 'blend',\n        mime: 'application/x-blender'\n      };\n    }\n    if (this.checkString('!<arch>')) {\n      await tokenizer.ignore(8);\n      const string = await tokenizer.readToken(new Token.StringType(13, 'ascii'));\n      if (string === 'debian-binary') {\n        return {\n          ext: 'deb',\n          mime: 'application/x-deb'\n        };\n      }\n      return {\n        ext: 'ar',\n        mime: 'application/x-unix-archive'\n      };\n    }\n    if (this.checkString('WEBVTT') &&\n    // One of LF, CR, tab, space, or end of file must follow \"WEBVTT\" per the spec (see `fixture/fixture-vtt-*.vtt` for examples). Note that `\\0` is technically the null character (there is no such thing as an EOF character). However, checking for `\\0` gives us the same result as checking for the end of the stream.\n    ['\\n', '\\r', '\\t', ' ', '\\0'].some(char7 => this.checkString(char7, {\n      offset: 6\n    }))) {\n      return {\n        ext: 'vtt',\n        mime: 'text/vtt'\n      };\n    }\n\n    // -- 8-byte signatures --\n\n    if (this.check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n      // APNG format (https://wiki.mozilla.org/APNG_Specification)\n      // 1. Find the first IDAT (image data) chunk (49 44 41 54)\n      // 2. Check if there is an \"acTL\" chunk before the IDAT one (61 63 54 4C)\n\n      // Offset calculated as follows:\n      // - 8 bytes: PNG signature\n      // - 4 (length) + 4 (chunk type) + 13 (chunk data) + 4 (CRC): IHDR chunk\n\n      await tokenizer.ignore(8); // ignore PNG signature\n\n      async function readChunkHeader() {\n        return {\n          length: await tokenizer.readToken(Token.INT32_BE),\n          type: await tokenizer.readToken(new Token.StringType(4, 'latin1'))\n        };\n      }\n      do {\n        const chunk = await readChunkHeader();\n        if (chunk.length < 0) {\n          return; // Invalid chunk length\n        }\n        switch (chunk.type) {\n          case 'IDAT':\n            return {\n              ext: 'png',\n              mime: 'image/png'\n            };\n          case 'acTL':\n            return {\n              ext: 'apng',\n              mime: 'image/apng'\n            };\n          default:\n            await tokenizer.ignore(chunk.length + 4);\n          // Ignore chunk-data + CRC\n        }\n      } while (tokenizer.position + 8 < tokenizer.fileInfo.size);\n      return {\n        ext: 'png',\n        mime: 'image/png'\n      };\n    }\n    if (this.check([0x41, 0x52, 0x52, 0x4F, 0x57, 0x31, 0x00, 0x00])) {\n      return {\n        ext: 'arrow',\n        mime: 'application/x-apache-arrow'\n      };\n    }\n    if (this.check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n      return {\n        ext: 'glb',\n        mime: 'model/gltf-binary'\n      };\n    }\n\n    // `mov` format variants\n    if (this.check([0x66, 0x72, 0x65, 0x65], {\n      offset: 4\n    }) // `free`\n    || this.check([0x6D, 0x64, 0x61, 0x74], {\n      offset: 4\n    }) // `mdat` MJPEG\n    || this.check([0x6D, 0x6F, 0x6F, 0x76], {\n      offset: 4\n    }) // `moov`\n    || this.check([0x77, 0x69, 0x64, 0x65], {\n      offset: 4\n    }) // `wide`\n    ) {\n      return {\n        ext: 'mov',\n        mime: 'video/quicktime'\n      };\n    }\n\n    // -- 9-byte signatures --\n\n    if (this.check([0x49, 0x49, 0x52, 0x4F, 0x08, 0x00, 0x00, 0x00, 0x18])) {\n      return {\n        ext: 'orf',\n        mime: 'image/x-olympus-orf'\n      };\n    }\n    if (this.checkString('gimp xcf ')) {\n      return {\n        ext: 'xcf',\n        mime: 'image/x-xcf'\n      };\n    }\n\n    // -- 12-byte signatures --\n\n    if (this.check([0x49, 0x49, 0x55, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0xE7, 0x74, 0xD8])) {\n      return {\n        ext: 'rw2',\n        mime: 'image/x-panasonic-rw2'\n      };\n    }\n\n    // ASF_Header_Object first 80 bytes\n    if (this.check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n      async function readHeader() {\n        const guid = new Uint8Array(16);\n        await tokenizer.readBuffer(guid);\n        return {\n          id: guid,\n          size: Number(await tokenizer.readToken(Token.UINT64_LE))\n        };\n      }\n      await tokenizer.ignore(30);\n      // Search for header should be in first 1KB of file.\n      while (tokenizer.position + 24 < tokenizer.fileInfo.size) {\n        const header = await readHeader();\n        let payload = header.size - 24;\n        if (_check(header.id, [0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65])) {\n          // Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n          const typeId = new Uint8Array(16);\n          payload -= await tokenizer.readBuffer(typeId);\n          if (_check(typeId, [0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n            // Found audio:\n            return {\n              ext: 'asf',\n              mime: 'audio/x-ms-asf'\n            };\n          }\n          if (_check(typeId, [0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n            // Found video:\n            return {\n              ext: 'asf',\n              mime: 'video/x-ms-asf'\n            };\n          }\n          break;\n        }\n        await tokenizer.ignore(payload);\n      }\n\n      // Default to ASF generic extension\n      return {\n        ext: 'asf',\n        mime: 'application/vnd.ms-asf'\n      };\n    }\n    if (this.check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n      return {\n        ext: 'ktx',\n        mime: 'image/ktx'\n      };\n    }\n    if ((this.check([0x7E, 0x10, 0x04]) || this.check([0x7E, 0x18, 0x04])) && this.check([0x30, 0x4D, 0x49, 0x45], {\n      offset: 4\n    })) {\n      return {\n        ext: 'mie',\n        mime: 'application/x-mie'\n      };\n    }\n    if (this.check([0x27, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], {\n      offset: 2\n    })) {\n      return {\n        ext: 'shp',\n        mime: 'application/x-esri-shape'\n      };\n    }\n    if (this.check([0xFF, 0x4F, 0xFF, 0x51])) {\n      return {\n        ext: 'j2c',\n        mime: 'image/j2c'\n      };\n    }\n    if (this.check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n      // JPEG-2000 family\n\n      await tokenizer.ignore(20);\n      const type = await tokenizer.readToken(new Token.StringType(4, 'ascii'));\n      switch (type) {\n        case 'jp2 ':\n          return {\n            ext: 'jp2',\n            mime: 'image/jp2'\n          };\n        case 'jpx ':\n          return {\n            ext: 'jpx',\n            mime: 'image/jpx'\n          };\n        case 'jpm ':\n          return {\n            ext: 'jpm',\n            mime: 'image/jpm'\n          };\n        case 'mjp2':\n          return {\n            ext: 'mj2',\n            mime: 'image/mj2'\n          };\n        default:\n          return;\n      }\n    }\n    if (this.check([0xFF, 0x0A]) || this.check([0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n      return {\n        ext: 'jxl',\n        mime: 'image/jxl'\n      };\n    }\n    if (this.check([0xFE, 0xFF])) {\n      // UTF-16-BOM-LE\n      if (this.check([0, 60, 0, 63, 0, 120, 0, 109, 0, 108], {\n        offset: 2\n      })) {\n        return {\n          ext: 'xml',\n          mime: 'application/xml'\n        };\n      }\n      return undefined; // Some unknown text based format\n    }\n\n    // -- Unsafe signatures --\n\n    if (this.check([0x0, 0x0, 0x1, 0xBA]) || this.check([0x0, 0x0, 0x1, 0xB3])) {\n      return {\n        ext: 'mpg',\n        mime: 'video/mpeg'\n      };\n    }\n    if (this.check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n      return {\n        ext: 'ttf',\n        mime: 'font/ttf'\n      };\n    }\n    if (this.check([0x00, 0x00, 0x01, 0x00])) {\n      return {\n        ext: 'ico',\n        mime: 'image/x-icon'\n      };\n    }\n    if (this.check([0x00, 0x00, 0x02, 0x00])) {\n      return {\n        ext: 'cur',\n        mime: 'image/x-icon'\n      };\n    }\n    if (this.check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n      // Detected Microsoft Compound File Binary File (MS-CFB) Format.\n      return {\n        ext: 'cfb',\n        mime: 'application/x-cfb'\n      };\n    }\n\n    // Increase sample size from 12 to 256.\n    await tokenizer.peekBuffer(this.buffer, {\n      length: Math.min(256, tokenizer.fileInfo.size),\n      mayBeLess: true\n    });\n    if (this.check([0x61, 0x63, 0x73, 0x70], {\n      offset: 36\n    })) {\n      return {\n        ext: 'icc',\n        mime: 'application/vnd.iccprofile'\n      };\n    }\n\n    // ACE: requires 14 bytes in the buffer\n    if (this.checkString('**ACE', {\n      offset: 7\n    }) && this.checkString('**', {\n      offset: 12\n    })) {\n      return {\n        ext: 'ace',\n        mime: 'application/x-ace-compressed'\n      };\n    }\n\n    // -- 15-byte signatures --\n\n    if (this.checkString('BEGIN:')) {\n      if (this.checkString('VCARD', {\n        offset: 6\n      })) {\n        return {\n          ext: 'vcf',\n          mime: 'text/vcard'\n        };\n      }\n      if (this.checkString('VCALENDAR', {\n        offset: 6\n      })) {\n        return {\n          ext: 'ics',\n          mime: 'text/calendar'\n        };\n      }\n    }\n\n    // `raf` is here just to keep all the raw image detectors together.\n    if (this.checkString('FUJIFILMCCD-RAW')) {\n      return {\n        ext: 'raf',\n        mime: 'image/x-fujifilm-raf'\n      };\n    }\n    if (this.checkString('Extended Module:')) {\n      return {\n        ext: 'xm',\n        mime: 'audio/x-xm'\n      };\n    }\n    if (this.checkString('Creative Voice File')) {\n      return {\n        ext: 'voc',\n        mime: 'audio/x-voc'\n      };\n    }\n    if (this.check([0x04, 0x00, 0x00, 0x00]) && this.buffer.length >= 16) {\n      // Rough & quick check Pickle/ASAR\n      const jsonSize = new DataView(this.buffer.buffer).getUint32(12, true);\n      if (jsonSize > 12 && this.buffer.length >= jsonSize + 16) {\n        try {\n          const header = new TextDecoder().decode(this.buffer.slice(16, jsonSize + 16));\n          const json = JSON.parse(header);\n          // Check if Pickle is ASAR\n          if (json.files) {\n            // Final check, assuring Pickle/ASAR format\n            return {\n              ext: 'asar',\n              mime: 'application/x-asar'\n            };\n          }\n        } catch {}\n      }\n    }\n    if (this.check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n      return {\n        ext: 'mxf',\n        mime: 'application/mxf'\n      };\n    }\n    if (this.checkString('SCRM', {\n      offset: 44\n    })) {\n      return {\n        ext: 's3m',\n        mime: 'audio/x-s3m'\n      };\n    }\n\n    // Raw MPEG-2 transport stream (188-byte packets)\n    if (this.check([0x47]) && this.check([0x47], {\n      offset: 188\n    })) {\n      return {\n        ext: 'mts',\n        mime: 'video/mp2t'\n      };\n    }\n\n    // Blu-ray Disc Audio-Video (BDAV) MPEG-2 transport stream has 4-byte TP_extra_header before each 188-byte packet\n    if (this.check([0x47], {\n      offset: 4\n    }) && this.check([0x47], {\n      offset: 196\n    })) {\n      return {\n        ext: 'mts',\n        mime: 'video/mp2t'\n      };\n    }\n    if (this.check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {\n      offset: 60\n    })) {\n      return {\n        ext: 'mobi',\n        mime: 'application/x-mobipocket-ebook'\n      };\n    }\n    if (this.check([0x44, 0x49, 0x43, 0x4D], {\n      offset: 128\n    })) {\n      return {\n        ext: 'dcm',\n        mime: 'application/dicom'\n      };\n    }\n    if (this.check([0x4C, 0x00, 0x00, 0x00, 0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46])) {\n      return {\n        ext: 'lnk',\n        mime: 'application/x.ms.shortcut' // Invented by us\n      };\n    }\n    if (this.check([0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00])) {\n      return {\n        ext: 'alias',\n        mime: 'application/x.apple.alias' // Invented by us\n      };\n    }\n    if (this.checkString('Kaydara FBX Binary  \\u0000')) {\n      return {\n        ext: 'fbx',\n        mime: 'application/x.autodesk.fbx' // Invented by us\n      };\n    }\n    if (this.check([0x4C, 0x50], {\n      offset: 34\n    }) && (this.check([0x00, 0x00, 0x01], {\n      offset: 8\n    }) || this.check([0x01, 0x00, 0x02], {\n      offset: 8\n    }) || this.check([0x02, 0x00, 0x02], {\n      offset: 8\n    }))) {\n      return {\n        ext: 'eot',\n        mime: 'application/vnd.ms-fontobject'\n      };\n    }\n    if (this.check([0x06, 0x06, 0xED, 0xF5, 0xD8, 0x1D, 0x46, 0xE5, 0xBD, 0x31, 0xEF, 0xE7, 0xFE, 0x74, 0xB7, 0x1D])) {\n      return {\n        ext: 'indd',\n        mime: 'application/x-indesign'\n      };\n    }\n\n    // Increase sample size from 256 to 512\n    await tokenizer.peekBuffer(this.buffer, {\n      length: Math.min(512, tokenizer.fileInfo.size),\n      mayBeLess: true\n    });\n\n    // Requires a buffer size of 512 bytes\n    if (tarHeaderChecksumMatches(this.buffer)) {\n      return {\n        ext: 'tar',\n        mime: 'application/x-tar'\n      };\n    }\n    if (this.check([0xFF, 0xFE])) {\n      // UTF-16-BOM-BE\n      if (this.check([60, 0, 63, 0, 120, 0, 109, 0, 108, 0], {\n        offset: 2\n      })) {\n        return {\n          ext: 'xml',\n          mime: 'application/xml'\n        };\n      }\n      if (this.check([0xFF, 0x0E, 0x53, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x74, 0x00, 0x63, 0x00, 0x68, 0x00, 0x55, 0x00, 0x70, 0x00, 0x20, 0x00, 0x4D, 0x00, 0x6F, 0x00, 0x64, 0x00, 0x65, 0x00, 0x6C, 0x00], {\n        offset: 2\n      })) {\n        return {\n          ext: 'skp',\n          mime: 'application/vnd.sketchup.skp'\n        };\n      }\n      return undefined; // Some text based format\n    }\n    if (this.checkString('-----BEGIN PGP MESSAGE-----')) {\n      return {\n        ext: 'pgp',\n        mime: 'application/pgp-encrypted'\n      };\n    }\n\n    // Check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE)\n    if (this.buffer.length >= 2 && this.check([0xFF, 0xE0], {\n      offset: 0,\n      mask: [0xFF, 0xE0]\n    })) {\n      if (this.check([0x10], {\n        offset: 1,\n        mask: [0x16]\n      })) {\n        // Check for (ADTS) MPEG-2\n        if (this.check([0x08], {\n          offset: 1,\n          mask: [0x08]\n        })) {\n          return {\n            ext: 'aac',\n            mime: 'audio/aac'\n          };\n        }\n\n        // Must be (ADTS) MPEG-4\n        return {\n          ext: 'aac',\n          mime: 'audio/aac'\n        };\n      }\n\n      // MPEG 1 or 2 Layer 3 header\n      // Check for MPEG layer 3\n      if (this.check([0x02], {\n        offset: 1,\n        mask: [0x06]\n      })) {\n        return {\n          ext: 'mp3',\n          mime: 'audio/mpeg'\n        };\n      }\n\n      // Check for MPEG layer 2\n      if (this.check([0x04], {\n        offset: 1,\n        mask: [0x06]\n      })) {\n        return {\n          ext: 'mp2',\n          mime: 'audio/mpeg'\n        };\n      }\n\n      // Check for MPEG layer 1\n      if (this.check([0x06], {\n        offset: 1,\n        mask: [0x06]\n      })) {\n        return {\n          ext: 'mp1',\n          mime: 'audio/mpeg'\n        };\n      }\n    }\n  }\n  async readTiffTag(bigEndian) {\n    const tagId = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n    this.tokenizer.ignore(10);\n    switch (tagId) {\n      case 50_341:\n        return {\n          ext: 'arw',\n          mime: 'image/x-sony-arw'\n        };\n      case 50_706:\n        return {\n          ext: 'dng',\n          mime: 'image/x-adobe-dng'\n        };\n      default:\n    }\n  }\n  async readTiffIFD(bigEndian) {\n    const numberOfTags = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n    for (let n = 0; n < numberOfTags; ++n) {\n      const fileType = await this.readTiffTag(bigEndian);\n      if (fileType) {\n        return fileType;\n      }\n    }\n  }\n  async readTiffHeader(bigEndian) {\n    const version = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 2);\n    const ifdOffset = (bigEndian ? Token.UINT32_BE : Token.UINT32_LE).get(this.buffer, 4);\n    if (version === 42) {\n      // TIFF file header\n      if (ifdOffset >= 6) {\n        if (this.checkString('CR', {\n          offset: 8\n        })) {\n          return {\n            ext: 'cr2',\n            mime: 'image/x-canon-cr2'\n          };\n        }\n        if (ifdOffset >= 8 && (this.check([0x1C, 0x00, 0xFE, 0x00], {\n          offset: 8\n        }) || this.check([0x1F, 0x00, 0x0B, 0x00], {\n          offset: 8\n        }))) {\n          return {\n            ext: 'nef',\n            mime: 'image/x-nikon-nef'\n          };\n        }\n      }\n      await this.tokenizer.ignore(ifdOffset);\n      const fileType = await this.readTiffIFD(bigEndian);\n      return fileType ?? {\n        ext: 'tif',\n        mime: 'image/tiff'\n      };\n    }\n    if (version === 43) {\n      // Big TIFF file header\n      return {\n        ext: 'tif',\n        mime: 'image/tiff'\n      };\n    }\n  }\n}\nexport const supportedExtensions = new Set(extensions);\nexport const supportedMimeTypes = new Set(mimeTypes);","import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { DIALOG_DATA, ForgeCircularProgressModule, ForgeLinearProgressModule } from '@tylertech/forge-angular';\n\nexport interface IBusyIndicatorData {\n  title?: string;\n  message: string;\n  progress: 'circular' | 'linear';\n}\n\n@Component({\n  selector: 'app-busy-indicator',\n  templateUrl: './busy-indicator.component.html',\n  styleUrl: './busy-indicator.component.scss',\n  imports: [CommonModule, ForgeLinearProgressModule, ForgeCircularProgressModule]\n})\nexport class BusyIndicatorComponent {\n  public dialogConfig = inject<IBusyIndicatorData>(DIALOG_DATA);\n}\n","@if (dialogConfig.title?.length) {\r\n  <h2 class=\"header forge-typography--heading5\">{{ dialogConfig.title }}</h2>\r\n}\r\n\r\n<div class=\"body\">\r\n  @if (dialogConfig.progress === 'circular') {\r\n    <forge-circular-progress></forge-circular-progress>\r\n  }\r\n  <div class=\"forge-typography--subheading4\">{{ dialogConfig.message }}</div>\r\n  @if (dialogConfig.progress === 'linear') {\r\n    <forge-linear-progress></forge-linear-progress>\r\n  }\r\n</div>\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { DialogRef, DialogService } from '@tylertech/forge-angular';\r\nimport { BusyIndicatorComponent, IBusyIndicatorData } from './busy-indicator.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusyIndicatorService {\r\n  private dialogService = inject(DialogService);\r\n  private dialogRef: DialogRef<BusyIndicatorComponent, IBusyIndicatorData>;\r\n\r\n  public show(data: IBusyIndicatorData) {\r\n    if (this.dialogRef) {\r\n      this.dialogRef.close();\r\n    }\r\n    this.dialogRef = this.dialogService.open(BusyIndicatorComponent, {\r\n      options: { persistent: true },\r\n      data\r\n    });\r\n  }\r\n\r\n  public hide() {\r\n    this.dialogRef?.close();\r\n    this.dialogRef = undefined;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isDeepEqual } from '@tylertech/forge-core';\n\n@Pipe({\n  name: 'appArrayFind'\n})\nexport class ArrayFindPipe implements PipeTransform {\n  transform(value: string | number, source: any[], filterProperty: string, returnProperty?: string) {\n    if (!value?.toString().length || !source.length || !filterProperty.length) {\n      return;\n    }\n    const sourceValue = source.find((o) => isDeepEqual(o[filterProperty], value));\n    if (!sourceValue) {\n      return;\n    }\n\n    return returnProperty ? sourceValue[returnProperty] : sourceValue;\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, FormControl, FormGroup, FormsModule, ReactiveFormsModule, ValidationErrors } from '@angular/forms';\r\nimport {\r\n  ForgeButtonModule,\r\n  ForgeCheckboxModule,\r\n  ForgeIconButtonModule,\r\n  ForgeIconModule,\r\n  ForgeTextFieldModule,\r\n  ForgeToolbarModule,\r\n  ToastService\r\n} from '@tylertech/forge-angular';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { of, Subject } from 'rxjs';\r\nimport { fileTypeFromStream } from 'file-type';\r\n\r\nimport { Utils } from 'src/utils';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { CardComponent } from 'src/app/shared/components/card/card.component';\r\nimport { BusyIndicatorService } from 'src/app/shared/components/busy-indicator/busy-indicator.service';\r\nimport { ArrayFindPipe } from 'src/app/shared/pipes/array-find.pipe';\r\n\r\n@Component({\r\n  selector: 'app-examples-misc',\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ForgeButtonModule,\r\n    ForgeCheckboxModule,\r\n    ForgeIconButtonModule,\r\n    ForgeIconModule,\r\n    ForgeTextFieldModule,\r\n    ForgeToolbarModule,\r\n    CardComponent,\r\n    ArrayFindPipe\r\n  ],\r\n  templateUrl: './misc.component.html',\r\n  styleUrls: ['./misc.component.scss']\r\n})\r\nexport class MiscComponent implements OnInit {\r\n  private destroyRef = inject(DestroyRef);\r\n  private appDataService = inject(AppDataService);\r\n  private busyIndicatorService = inject(BusyIndicatorService);\r\n  private toastService = inject(ToastService);\r\n  private propertyPathsData = {\r\n    firstName: 'First',\r\n    lastName: 'Last',\r\n    age: 12,\r\n    citizen: false,\r\n    address: {\r\n      city: 'ctiy value',\r\n      state: 'state value',\r\n      districts: [\r\n        {\r\n          name: 'district 1',\r\n          location: 'district 1 location',\r\n          pets: ['rock', 'dog', 'cat']\r\n        },\r\n        { name: 'district 2', location: 'district 2 location' },\r\n        { name: 'district 3', location: 'district 3 location' }\r\n      ]\r\n    },\r\n    friends: ['Homer', 'Marge', 'Bart', 'Lisa', 'Maggie']\r\n  };\r\n  private asyncValidators = new Map<\r\n    string,\r\n    {\r\n      value: any;\r\n      control: AbstractControl;\r\n      response: Subject<ValidationErrors | null>;\r\n    }\r\n  >();\r\n\r\n  public arrayData = [\r\n    { value: 0, label: 'Item 0' },\r\n    { value: 1, label: 'Item 1' },\r\n    { value: 2, label: 'Item 2' },\r\n    { value: 3, label: 'Item 3' },\r\n    { value: 4, label: 'Item 4' },\r\n    { value: 5, label: 'Item 5' },\r\n    { value: 6, label: 'Item 6' },\r\n    { value: 7, label: 'Item 7' },\r\n    { value: 8, label: 'Item 8' },\r\n    { value: 9, label: 'Item 9' }\r\n  ];\r\n  public propertyPaths: object;\r\n  public fileName: string = '';\r\n  public fileEncoded = false;\r\n  public openAsDownload = false;\r\n  public formGroup = new FormGroup({\r\n    name: new FormControl('', {\r\n      asyncValidators: [this.asyncValidator('name')]\r\n    }),\r\n    age: new FormControl('', { asyncValidators: [this.asyncValidator('age')] }),\r\n    location: new FormControl('', {\r\n      asyncValidators: [this.asyncValidator('location')]\r\n    })\r\n  });\r\n\r\n  public ngOnInit() {\r\n    this.propertyPaths = Utils.objectPropertyPaths(this.propertyPathsData);\r\n  }\r\n\r\n  public onShowFile() {\r\n    this.appDataService\r\n      .getFile(this.fileName)\r\n      .pipe(takeUntilDestroyed(this.destroyRef))\r\n      .subscribe({\r\n        next: (result) => {\r\n          if (result?.size && result.type !== 'text/html') {\r\n            if (this.fileEncoded) {\r\n              result.text().then((value) => {\r\n                const encodedBlob = this.base64toBlob(value);\r\n                if (encodedBlob) {\r\n                  this.openFile(encodedBlob);\r\n                }\r\n              });\r\n            } else {\r\n              this.openFile(result);\r\n            }\r\n          } else {\r\n            this.toastService.show({\r\n              message: 'An error occurred downloading the file',\r\n              duration: Infinity,\r\n              dismissible: true\r\n            });\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.toastService.show({\r\n            message: 'An error occurred downloading the file',\r\n            duration: Infinity,\r\n            dismissible: true\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public onShowBusy() {\r\n    const config = {\r\n      message: 'Processing request...',\r\n      progress: 'circular' as const,\r\n      title: 'Processing title'\r\n    };\r\n    this.busyIndicatorService.show(config);\r\n    window.setTimeout(() => {\r\n      this.busyIndicatorService.hide();\r\n    }, 5000);\r\n  }\r\n\r\n  public onValidate() {\r\n    if (this.asyncValidators.size) {\r\n      const key = this.asyncValidators.keys().next().value;\r\n      const validator = this.asyncValidators.get(key);\r\n      // validator.response.next({ wrongFormat: true });\r\n      validator.response.next(null);\r\n      validator.response.complete();\r\n      // validator.control.markAsPristine();\r\n      // validator.control.markAsUntouched();\r\n      this.asyncValidators.delete(key);\r\n    }\r\n  }\r\n\r\n  public onResetForm() {\r\n    this.asyncValidators.forEach((v) => {\r\n      v.response.next(null);\r\n      v.response.complete();\r\n    });\r\n    this.asyncValidators.clear();\r\n    this.formGroup.reset();\r\n  }\r\n\r\n  private asyncValidator(name: string): AsyncValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!control.dirty) {\r\n        return of(null);\r\n      }\r\n\r\n      if (!this.asyncValidators.has(name)) {\r\n        this.asyncValidators.set(name, {\r\n          value: control.value,\r\n          control,\r\n          response: new Subject<ValidationErrors | null>()\r\n        });\r\n      }\r\n\r\n      return this.asyncValidators.get(name).response;\r\n    };\r\n  }\r\n\r\n  private base64toBlob(value: string): Blob {\r\n    // powershell script to convert to base64\r\n    // $fileBytes = [System.IO.File]::ReadAllBytes(‘file‘)\r\n    // $encodedText = [Convert]::ToBase64String($fileBytes)\r\n    // [System.IO.File]::WriteAllText(‘file-output‘, $encodedText)\r\n\r\n    let binaryValue: string;\r\n    try {\r\n      binaryValue = atob(value);\r\n    } catch (e) {\r\n      console.error(e);\r\n      this.toastService.show({\r\n        message: 'An error occurred decoding the base64 file',\r\n        duration: Infinity,\r\n        dismissible: true\r\n      });\r\n      return undefined;\r\n    }\r\n    const valueArray = Uint8Array.from(binaryValue, (c) => c.charCodeAt(0));\r\n    return new Blob([valueArray]);\r\n  }\r\n\r\n  private openFile(value: Blob) {\r\n    fileTypeFromStream(value.stream()).then((fileTypeResult) => {\r\n      const resultBlob = new Blob([value], {\r\n        type: fileTypeResult?.mime?.length ? fileTypeResult.mime : 'application/octet-stream'\r\n      });\r\n      const resultBlobUrl = URL.createObjectURL(resultBlob);\r\n\r\n      if (this.openAsDownload) {\r\n        let openFileName = this.fileName;\r\n        if (openFileName.split('.').at(-1) !== fileTypeResult.ext) {\r\n          openFileName += `.${fileTypeResult.ext}`;\r\n        }\r\n\r\n        const linkElement = document.createElement('a') as HTMLAnchorElement;\r\n        linkElement.style.display = 'none';\r\n        linkElement.href = resultBlobUrl;\r\n        linkElement.setAttribute('download', openFileName);\r\n        document.body.appendChild(linkElement);\r\n        linkElement.click();\r\n        linkElement.remove();\r\n      } else {\r\n        window.open(resultBlobUrl);\r\n      }\r\n\r\n      URL.revokeObjectURL(resultBlobUrl);\r\n    });\r\n  }\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--subheading4\">Misc examples</h2>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <app-card border=\"raised\">\r\n    <ng-container app-card-header>\r\n      <span slot=\"start\">Card header</span>\r\n      <forge-icon-button slot=\"after-end\" aria-label=\"Close\">\r\n        <forge-icon name=\"close\"></forge-icon>\r\n      </forge-icon-button>\r\n    </ng-container>\r\n\r\n    <div class=\"card-body\">\r\n      <div class=\"card-body__section\">\r\n        <div>File viewer</div>\r\n        <forge-text-field>\r\n          <input type=\"text\" id=\"test--parent--file-name\" [(ngModel)]=\"fileName\" autocomplete=\"off\" />\r\n          <label for=\"test--parent--file-name\" slot=\"label\">File name</label>\r\n          <div slot=\"support-text\">\r\n            <div slot=\"support-text\">Must exist in src/mock-data.</div>\r\n            <div slot=\"support-text\">Included examples: test.docx test.jpg test.pdf test.png test.txt test.xlsx test.xml</div>\r\n            <div slot=\"support-text\">Included encoded examples: test-encoded-jpg.txt test-encoded-pdf.txt</div>\r\n          </div>\r\n        </forge-text-field>\r\n        <div style=\"display: flex; column-gap: 16px\">\r\n          <forge-checkbox [(ngModel)]=\"fileEncoded\">File is Base64 encoded</forge-checkbox>\r\n          <forge-checkbox [(ngModel)]=\"openAsDownload\">Open as download</forge-checkbox>\r\n        </div>\r\n\r\n        <forge-button variant=\"filled\" (click)=\"onShowFile()\" [disabled]=\"!fileName?.length\">Show file</forge-button>\r\n      </div>\r\n\r\n      <form class=\"card-body__section\" [formGroup]=\"formGroup\" novalidate autocomplete=\"off\">\r\n        <div>Async validation</div>\r\n        <forge-text-field>\r\n          <input type=\"text\" id=\"test--parent--name\" formControlName=\"name\" />\r\n          <label for=\"test--parent--name\" slot=\"label\">Name</label>\r\n          <span slot=\"support-text\">\r\n            status: {{ formGroup.controls.name.status }} - valid: {{ formGroup.controls.name.valid }} - pristine: {{ formGroup.controls.name.pristine }} - touched: {{ formGroup.controls.name.touched }} - dirty:\r\n            {{ formGroup.controls.name.dirty }}\r\n          </span>\r\n        </forge-text-field>\r\n        <forge-text-field>\r\n          <input type=\"text\" id=\"test--parent--age\" formControlName=\"age\" />\r\n          <label for=\"test--parent--age\" slot=\"label\">Age</label>\r\n          <span slot=\"support-text\">{{ formGroup.controls.age.status }}</span>\r\n        </forge-text-field>\r\n        <forge-text-field>\r\n          <input type=\"text\" id=\"test--parent--location\" formControlName=\"location\" />\r\n          <label for=\"test--parent--location\" slot=\"label\">Location</label>\r\n          <span slot=\"support-text\">{{ formGroup.controls.location.status }}</span>\r\n        </forge-text-field>\r\n        <div class=\"card-body__section__footer\">\r\n          <forge-button variant=\"outlined\" (click)=\"onResetForm()\">Reset</forge-button>\r\n          <forge-button variant=\"filled\" (click)=\"onValidate()\">Validate</forge-button>\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"card-body__section\">\r\n        <div>Template variable and array pipes</div>\r\n        <ng-template #variableTemplate [ngTemplateOutlet]=\"variableTemplate\" [ngTemplateOutletContext]=\"{ $implicit: { cats: 1, dogs: 2 } }\" let-variable>\r\n          <div>{{ variable | json }}</div>\r\n        </ng-template>\r\n\r\n        <div>{{ 0 | appArrayFind: arrayData : 'value' : 'label' }}</div>\r\n        <div>{{ 1 | appArrayFind: arrayData : 'value' | json }}</div>\r\n        <div>{{ propertyPaths | json }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <ng-container app-card-footer>\r\n      <forge-button slot=\"end\" variant=\"outlined\" (click)=\"onShowBusy()\">Show busy</forge-button>\r\n      <forge-button slot=\"end\" variant=\"outlined\">Cancel</forge-button>\r\n      <forge-button slot=\"end\" variant=\"raised\">Save</forge-button>\r\n    </ng-container>\r\n  </app-card>\r\n</div>\r\n","import { Routes } from '@angular/router';\n\nimport { ExamplesService } from './examples.service';\nimport { ExamplesComponent } from './examples.component';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { DragDropComponent } from './drag-drop/drag-drop.component';\nimport { SelectComponent } from './select/select.component';\nimport { BindingComponent } from './binding/binding.component';\nimport { MiscComponent } from './misc/misc.component';\n\nexport const EXAMPLES_ROUTES: Routes = [\n  {\n    path: '',\n    component: ExamplesComponent,\n    providers: [ExamplesService],\n    children: [\n      { path: 'autocomplete', component: AutocompleteComponent },\n      { path: 'drag-drop', component: DragDropComponent },\n      { path: 'select', component: SelectComponent },\n      { path: 'binding', component: BindingComponent },\n      { path: 'misc', component: MiscComponent },\n      { path: '', redirectTo: 'autocomplete', pathMatch: 'full' }\n    ]\n  }\n];\n"],"mappings":"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","names":["require_ieee754","__commonJSMin","exports","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","value","c","rt","ExamplesService","constructor","mockData","index","push","id","code","Utils","formatNumber","description","getSingleSelectOptions","filterText","value","take","Observable","o","setTimeout","records","length","filter","d","toLocaleLowerCase","includes","slice","toString","next","complete","getMutlipleSelectOptions","values","Set","map","v","factory","ɵfac","_ExamplesService","ExamplesComponent","selectors","decls","vars","template","rf","ctx","ɵɵelement","RouterModule","RouterOutlet","styles","_ExamplesComponent","AutocompleteComponent","constructor","moduleService","inject","ExamplesService","formGroup","FormGroup","autocomplete01","FormControl","autocomplete02","value","id","code","description","label","autocomplete03","autocomplete04","autocomplete05","autocomplete06","autocomplete07","optionBuilder","option","filterText","parentElement","defaultSpan","document","createElement","innerText","appendChild","subTitleSpan","setAttribute","selectedTextBuilder","options","singleSelectPrimitiveFilter","lastValueFrom","getSingleSelectOptions","undefined","pipe","map","result","d","singleSelectObjectFilter","multipleSelectFilter","getMutlipleSelectOptions","onAutocompleteChange","event","detail","onDisable","control","controls","disabled","enable","disable","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ɵɵtwoWayListener","$event","i0","ɵɵtwoWayBindingSet","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","getRawValue","ɵɵtwoWayProperty","ɵɵtextInterpolate1","CommonModule","JsonPipe","FormsModule","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","NgModel","ReactiveFormsModule","FormGroupDirective","FormControlName","ForgeAutocompleteModule","AutocompleteValueAccessor","ForgeButtonModule","ButtonComponent","ForgeDividerModule","DividerComponent","ForgeIconModule","IconComponent","ForgeTextFieldModule","TextFieldComponent","styles","_AutocompleteComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r2","ɵɵelement","item_r3","DragDropComponent","constructor","items01","items02","onDrop","event","previousContainer","container","moveItemInArray","data","previousIndex","currentIndex","transferArrayItem","selectors","decls","vars","consts","template","rf","ctx","ɵɵlistener","$event","i0","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵrepeaterCreate","DragDropComponent_For_7_Template","ɵɵrepeaterTrackByIndex","ɵɵtemplate","DragDropComponent_forge_list_item_8_Template","DragDropComponent_For_15_Template","DragDropComponent_forge_list_item_16_Template","ɵɵproperty","ɵɵpureFunction1","_c0","item02List_r5","ɵɵrepeater","item01List_r4","CommonModule","DragDropModule","CdkDropList","CdkDropListGroup","CdkDrag","CdkDragPlaceholder","ForgeListItemModule","ListItemComponent","ForgeListModule","ListComponent","styles","_DragDropComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r1","value","ɵɵadvance","ɵɵtextInterpolate","label","SelectComponent","constructor","moduleService","inject","ExamplesService","options","mockData","slice","map","d","id","description","objectOptions","formGroup","FormGroup","select01","FormControl","select02","select03","select04","select05","select06","select07","optionBuilder","option","parentElement","defaultSpan","document","createElement","innerText","appendChild","subTitleSpan","setAttribute","code","selectedTextBuilder","onSelectChange","event","detail","selectors","decls","vars","consts","template","rf","ctx","ɵɵrepeaterCreate","SelectComponent_For_3_Template","ɵɵrepeaterTrackByIndex","ɵɵelement","ɵɵtwoWayListener","$event","i0","ɵɵtwoWayBindingSet","ɵɵlistener","ɵɵrepeater","ɵɵpipeBind1","getRawValue","ɵɵtwoWayProperty","ɵɵtextInterpolate1","CommonModule","JsonPipe","FormsModule","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","NgModel","ReactiveFormsModule","FormGroupDirective","FormControlName","ForgeDividerModule","DividerComponent","ForgeOptionModule","OptionComponent","ForgeSelectModule","SelectValueAccessor","styles","_SelectComponent","ChildComponent","constructor","name","model","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtwoWayListener","$event","i0","ɵɵtwoWayBindingSet","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtwoWayProperty","CommonModule","FormsModule","DefaultValueAccessor","NgControlStatus","NgModel","ForgeTextFieldModule","TextFieldComponent","styles","_ChildComponent","BindingComponent","constructor","name","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtwoWayListener","$event","i0","ɵɵtwoWayBindingSet","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtwoWayProperty","CommonModule","FormsModule","DefaultValueAccessor","NgControlStatus","NgModel","ForgeTextFieldModule","TextFieldComponent","ChildComponent","styles","_BindingComponent","ieee754","dv","array","UINT8","offset","value","UINT16_LE","UINT16_BE","UINT32_LE","array","offset","dv","value","UINT32_BE","INT32_BE","array","offset","dv","value","UINT64_LE","array","offset","dv","value","StringType","len","encoding","uint8Array","offset","defaultMessages","EndOfStreamError","AbstractStreamReader","uint8Array","offset","length","__async","bytesRead","buffer","EndOfStreamError","remaining","peekData","lenCopy","initialRemaining","reqLen","chunkLen","WebStreamReader","AbstractStreamReader","stream","buffer","offset","length","__async","EndOfStreamError","result","AbstractTokenizer","options","_0","__async","token","position","uint8Array","EndOfStreamError","length","bytesLeft","maxBufferSize","ReadStreamTokenizer","AbstractTokenizer","streamReader","options","uint8Array","__async","normOptions","skipBytes","bytesRead","EndOfStreamError","skipBuffer","err","length","bufSize","buf","totBytesRead","remaining","BufferTokenizer","AbstractTokenizer","uint8Array","options","__spreadProps","__spreadValues","__async","bytesRead","normOptions","bytes2read","EndOfStreamError","position","fromWebStream","webStream","options","ReadStreamTokenizer","WebStreamReader","fromBuffer","uint8Array","BufferTokenizer","cachedDecoders","cachedEncoder","byteToHexLookupTable","_","index","getUintBE","view","byteLength","indexOf","array","value","arrayLength","valueLength","validOffsetLength","index","isMatch","index2","includes","stringToBytes","string","character","tarHeaderChecksumMatches","arrayBuffer","offset","readSum","StringType","sum","index","uint32SyncSafeToken","buffer","extensions","mimeTypes","reasonableDetectionSizeInBytes","fileTypeFromStream","stream","__async","FileTypeParser","_check","buffer","headers","options","__spreadValues","index","header","FileTypeParser","options","tokenizer","__async","initialPosition","detector","fileType","input","buffer","fromBuffer","blob","stream","fromWebStream","sampleSize","reasonableDetectionSizeInBytes","detectedFileType","firstChunk","reader","chunk","done","error","EndOfStreamError","transformStream","controller","newStream","header","_check","stringToBytes","id3HeaderLength","uint32SyncSafeToken","view","zipHeader","StringType","mimeType","nextHeaderIndex","indexOf","type","brandMajor","maxBufferSize","includes","readField","msb","UINT8","mask","ic","id","readElement","idField","lengthField","nrLength","idView","lengthView","getUintBE","readChildren","children","element","re","version","char7","readChunkHeader","INT32_BE","readHeader","guid","UINT64_LE","payload","typeId","jsonSize","tarHeaderChecksumMatches","bigEndian","tagId","UINT16_BE","UINT16_LE","numberOfTags","n","ifdOffset","UINT32_BE","UINT32_LE","supportedExtensions","extensions","supportedMimeTypes","mimeTypes","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","dialogConfig","title","ɵɵelement","BusyIndicatorComponent","constructor","inject","DIALOG_DATA","selectors","decls","vars","consts","template","rf","ctx","ɵɵconditionalCreate","BusyIndicatorComponent_Conditional_0_Template","BusyIndicatorComponent_Conditional_2_Template","BusyIndicatorComponent_Conditional_5_Template","ɵɵconditional","length","progress","message","CommonModule","ForgeLinearProgressModule","LinearProgressComponent","ForgeCircularProgressModule","CircularProgressComponent","styles","_BusyIndicatorComponent","BusyIndicatorService","constructor","dialogService","inject","DialogService","show","data","dialogRef","close","open","BusyIndicatorComponent","options","persistent","hide","undefined","factory","ɵfac","providedIn","_BusyIndicatorService","ArrayFindPipe","transform","value","source","filterProperty","returnProperty","toString","length","sourceValue","find","o","isDeepEqual","pure","_ArrayFindPipe","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","variable_r2","MiscComponent","constructor","destroyRef","inject","DestroyRef","appDataService","AppDataService","busyIndicatorService","BusyIndicatorService","toastService","ToastService","propertyPathsData","firstName","lastName","age","citizen","address","city","state","districts","name","location","pets","friends","asyncValidators","Map","arrayData","value","label","fileName","fileEncoded","openAsDownload","formGroup","FormGroup","FormControl","asyncValidator","ngOnInit","propertyPaths","Utils","objectPropertyPaths","onShowFile","getFile","pipe","takeUntilDestroyed","subscribe","next","result","size","type","text","then","encodedBlob","base64toBlob","openFile","show","message","duration","Infinity","dismissible","error","err","onShowBusy","config","progress","title","window","setTimeout","hide","onValidate","key","keys","validator","get","response","complete","delete","onResetForm","forEach","v","clear","reset","control","dirty","has","set","Subject","of","binaryValue","atob","e","console","valueArray","Uint8Array","from","c","charCodeAt","Blob","fileTypeFromStream","stream","fileTypeResult","resultBlob","mime","length","resultBlobUrl","URL","createObjectURL","openFileName","split","at","ext","linkElement","document","createElement","style","display","href","setAttribute","body","appendChild","click","remove","open","revokeObjectURL","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementContainerStart","ɵɵelement","ɵɵtwoWayListener","$event","i0","ɵɵrestoreView","_r1","ɵɵtwoWayBindingSet","ɵɵresetView","ɵɵlistener","ɵɵtemplate","MiscComponent_ng_template_61_Template","ɵɵtemplateRefExtractor","ɵɵtwoWayProperty","ɵɵproperty","ɵɵtextInterpolate5","controls","status","valid","pristine","touched","variableTemplate_r3","ɵɵpureFunction1","_c1","ɵɵpureFunction0","_c0","ɵɵpipeBind4","ɵɵpipeBind3","CommonModule","NgTemplateOutlet","JsonPipe","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","NgModel","ReactiveFormsModule","FormGroupDirective","FormControlName","ForgeButtonModule","ButtonComponent","ForgeCheckboxModule","CheckboxValueAccessor","CheckboxComponent","ForgeIconButtonModule","IconButtonComponent","IconComponent","ForgeIconModule","ForgeTextFieldModule","TextFieldComponent","ForgeToolbarModule","ToolbarComponent","CardComponent","ArrayFindPipe","styles","_MiscComponent","EXAMPLES_ROUTES","path","component","ExamplesComponent","providers","ExamplesService","children","AutocompleteComponent","DragDropComponent","SelectComponent","BindingComponent","MiscComponent","redirectTo","pathMatch"],"x_google_ignoreList":[0,14,15,16,17,18,19,20,21,22,23,24,25]}