{"version":3,"file":"746.c273d8e328da8bc7.js","mappings":"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","names":["isString","str","String","isObject","obj","_obj$constructor","constructor","name","pick","keys","Array","isArray","_","k","includes","Object","entries","reduce","acc","_ref","v","escapeRegExp","replace","objectIncludes","b","a","arrA","arrB","i","length","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","hasOwnProperty","call","ActionDetails","opts","assign","this","value","slice","startChangePos","oldValue","oldSelection","start","insertedCount","cursorPos","end","Math","min","inserted","substr","removedCount","max","removed","head","substring","tail","removeDirection","IMask","el","InputMask","maskedClass","mask","Error","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Masked","Function","MaskedFunction","console","warn","normalizeOpts","instanceOpts","_mask","startsWith","createMask","nOpts","MaskedClass","MaskElement","selectionStart","_unsafeSelectionStart","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","HTMLMaskElement","input","super","_onKeydown","bind","_onInput","_onBeforeinput","_onCompositionEnd","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","activeElement","bindEvents","handlers","addEventListener","drop","click","focus","commit","_handlers","e","redo","keyCode","shiftKey","metaKey","ctrlKey","preventDefault","undo","isComposing","selectionChange","inputType","unbindEvents","removeEventListener","HTMLInputMaskElement","setSelectionRange","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","InputHistory","states","currentIndex","currentState","isEmpty","push","state","MAX_LENGTH","shift","go","steps","clear","isContentEditable","tagName","masked","_listeners","_value","_unmaskedValue","_rawInputValue","history","_saveSelection","_onChange","_onDrop","_onFocus","_onClick","_onUndo","_onRedo","alignCursor","alignCursorFriendly","_bindEvents","updateValue","maskEquals","_this$masked","updateOptions","unmaskedValue","updateControl","rawInputValue","typedValue","val","typedValueEquals","displayValue","_unbindEvents","_fireEvent","ev","listeners","forEach","l","_cursorChanging","_changingCursorPos","pos","_selection","newUnmaskedValue","newValue","newRawInputValue","newDisplayValue","isChanged","_fireChangeEvents","_historyChanging","restOpts","updateMask","updateOpts","optionsIsChanged","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","isComplete","clearTimeout","nearestInputPos","on","handler","off","hIndex","indexOf","splice","details","oldRawValue","offset","raw","doCommit","stopPropagation","_applyHistoryState","destroy","ChangeDetails","normalize","prep","rawInserted","tailShift","skip","aggregate","consumed","equals","ContinuousTailDetails","from","stop","extend","appendTo","append","_appendPlaceholder","unshift","beforePos","shiftChar","_update","DEFAULTS","_initialized","withValueRefresh","reset","resolve","flags","parse","format","extractInput","isFilled","direction","totalInputPositions","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","checkTail","consistentState","doPrepareChar","autofix","noFixState","fixDetails","pad","chDetails","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","_beforeTailState","doPrepare","ci","d","doSkipInvalid","eager","remove","fn","_refreshing","rawInput","ret","runIsolated","_isolated","skipInvalid","prepare","prepareChar","validate","parent","deleteCount","tailPos","eagerRemove","forceDirection","valLength","tval","EMPTY_VALUES","undefined","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","_log","ok","block","_blockStartPos","s","pushState","popState","pop","bindBlock","_pushLeft","_this$block","_pushRight","pushLeftBeforeFilled","isFixed","pushLeftBeforeInput","pushLeftBeforeRequired","isOptional","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","PatternFixedDefinition","isUnmasking","_isRawInput","maxPos","isResolved","char","PatternInputDefinition","placeholderChar","displayChar","lazy","maskOpts","currentMaskFlags","boundPos","_flags$_beforeTailSta","DEFAULT_DEFINITIONS","search","definitions","_rebuildMask","defs","exposeBlock","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","expose","repeat","bOpts","blockOpts","maskedBlock","RepeatBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","bi","every","_this$_mapPosToBlock","startBlockIndex","blockIter","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","stopBefore","si","toBlockIndex","startBlockIter","_blocks2","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","removeDetails","cursor","total","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_matchFrom","maxLength","to","patternOpts","fromStr","padStart","toStr","sameCharsCount","boundaries","minstr","maxstr","placeholder","num","match","padEnd","padLength","split","extractPatternOptions","patternBlocks","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","date","isDateExist","day","month","year","currentMask","exposeMask","compiledMasks","_overwrite","_eager","_skipInvalid","_applyDispatch","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","doDispatch","_flags$_beforeTailSta2","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","_autofix","oldMask","_this$currentMask5","inputs","isCurrent","startInputPos","weight","i1","i2","MaskedEnum","enum","enum_","eopts","lengths","requiredLength","optionalLength","matchFrom","matches","matchValue","mch","_MaskedNumber","estr","istr","_updateRegExps","allowNegative","scale","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","allowPositive","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailSeparatorsCount","appendDetails","accepted","isNaN","number","fixedNum","UNMASKED_RADIX","beforeTailSeparatorsCount","_findSeparatorAround","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","n","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","toLocaleString","useGrouping","maximumFractionDigits","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","arg","pipe","repeatFrom","Infinity","repeatTo","_ref2","_ref3","_ref4","_this$_blocks","_blockOpts","_allocateBlock","allocated","_this$_mapPosToBlock$","_this$_blocks$bi","_trimEmptyTail","_this$_mapPosToBlock2","_this$_mapPosToBlock3","firstBlockIndex","lastBlockIndex","removeCount","globalThis","DefaultImaskFactory","create","static","ɵfac","t","ɵprov","i0","token","factory","providedIn","IMASK_FACTORY","InjectionToken","inject","MASKEDINPUT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","IMaskDirective","multi","DEFAULT_IMASK_ELEMENT","elementRef","nativeElement","onTouched","onChange","_viewInitialized","_composing","_writing","_elementRef","ElementRef","_renderer","Renderer2","_factory","_platformId","PLATFORM_ID","_compositionMode","COMPOSITION_BUFFER_MODE","optional","_isAndroid","imaskElement","accept","EventEmitter","complete","element","maskValue","maskRef","unmask","setProperty","ngAfterViewInit","imask","initMask","ngOnChanges","changes","destroyMask","ngOnDestroy","beginWrite","_writingValue","endWrite","writeValue","_initialValue","_onAccept","emit","_onComplete","setDisabledState","isDisabled","registerOnChange","registerOnTouched","_handleInput","_compositionStart","_compositionEnd","isPlatformBrowser","navigator","userAgent","toLowerCase","ɵdir","type","selectors","hostBindings","rf","ctx","$event","target","outputs","exportAs","standalone","features","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchResult","matchPatterns","defaultMatchWidth","matchedString","parsePatterns","defaultParseWidth","key","findIndex","array","predicate","findKey","object","valueCallback","rest","enUS","code","formatDistance","result","tokenValue","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","rem100","era","narrow","abbreviated","wide","quarter","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchPatternFn","matchPattern","parseResult","parsePattern","parseInt","any","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","pow","millisecondsInWeek","startOfDay","toDate","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","constructFrom","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","fourthOfJanuaryOfNextYear","setFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getISOWeek","startOfISOWeekYear","fourthOfJanuary","round","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","startOfWeekYear","firstWeek","addLeadingZeros","targetLength","abs","lightFormatters","y","signedYear","M","dayPeriodEnumValue","toUpperCase","h","H","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","getDayOfYear","differenceInCalendarDays","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","startOfYear","cleanDate","E","dayOfWeek","localDayOfWeek","isoDayOfWeek","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","T","delimiter","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","P","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","_message","message","subject","RangeError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","defaultLocale","originalDate","isValid","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","formatter","matched","Setter","subPriority","_utcDate","ValueSetter","validateValue","setValue","priority","set","DateToSystemTimezoneSetter","timestampIsSet","transpose","fromDate","Parser","run","dateString","setter","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","isLeapYearIndex","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","addDays","amount","NaN","setDay","currentDay","delta","parsers","EraParser","incompatibleTokens","YearParser","isTwoDigitYear","normalizedTwoDigitYear","LocalWeekYearParser","ISOWeekYearParser","_flags","firstWeekOfYear","ExtendedYearParser","QuarterParser","setMonth","StandAloneQuarterParser","MonthParser","StandAloneMonthParser","LocalWeekParser","setWeek","ISOWeekParser","setISOWeek","DateParser","isLeapYear","DayOfYearParser","subpriority","DayParser","LocalDayParser","wholeWeekDays","floor","StandAloneLocalDayParser","ISODayParser","setISODay","getISODay","AMPMParser","AMPMMidnightParser","DayPeriodParser","Hour1to12Parser","isPM","Hour0to23Parser","Hour0To11Parser","Hour1To24Parser","MinuteParser","setMinutes","SecondParser","setSeconds","FractionOfSecondParser","setMilliseconds","ISOTimezoneWithZParser","ISOTimezoneParser","TimestampSecondsParser","TimestampMillisecondsParser","notWhitespaceRegExp","dateStr","referenceDate","getInternalDefaultOptions","subFnOptions","setters","tokens","usedTokens","parser","incompatibleToken","find","usedToken","fullToken","uniquePrioritySetters","setterArray","NullableNumberMask","isDefined","option_r2","label","ImaskComponent","formGroup","FormGroup","FormControl","maskType","maskOptions","helpText","buildStringMask","log","imaskRef","onApply","controls","requestAnimationFrame","buildNumberMask","buildNumberSearchMask","buildDateMask","buildDateSearchMask","buildDateTimeMask","signed","parseFloat","isFinite","MM","dd","yyyy","dateIsValid","dateFormat","dateParse","hh","mm","ss","aa","core","VBU","viewQuery","ImaskComponent_For_30_Template","_r1","getRawValue","CommonModule","ReactiveFormsModule","ForgeButtonModule","i3","ForgeOptionModule","ForgeSelectModule","ForgeTextFieldModule","ForgeToolbarModule","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/imask/esm/core/utils.js","./node_modules/imask/esm/core/action-details.js","./node_modules/imask/esm/core/holder.js","./node_modules/imask/esm/masked/factory.js","./node_modules/imask/esm/controls/mask-element.js","./node_modules/imask/esm/controls/html-mask-element.js","./node_modules/imask/esm/controls/html-input-mask-element.js","./node_modules/imask/esm/controls/html-contenteditable-mask-element.js","./node_modules/imask/esm/controls/input-history.js","./node_modules/imask/esm/controls/input.js","./node_modules/imask/esm/core/change-details.js","./node_modules/imask/esm/core/continuous-tail-details.js","./node_modules/imask/esm/masked/base.js","./node_modules/imask/esm/masked/pattern/chunk-tail-details.js","./node_modules/imask/esm/masked/pattern/cursor.js","./node_modules/imask/esm/masked/pattern/fixed-definition.js","./node_modules/imask/esm/masked/pattern/input-definition.js","./node_modules/imask/esm/masked/regexp.js","./node_modules/imask/esm/masked/pattern.js","./node_modules/imask/esm/masked/range.js","./node_modules/imask/esm/masked/date.js","./node_modules/imask/esm/masked/dynamic.js","./node_modules/imask/esm/masked/enum.js","./node_modules/imask/esm/masked/number.js","./node_modules/imask/esm/masked/function.js","./node_modules/imask/esm/masked/pipe.js","./node_modules/imask/esm/masked/repeat.js","./node_modules/imask/esm/index.js","./node_modules/angular-imask/fesm2022/angular-imask.mjs","./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","./node_modules/date-fns/locale/en-US/_lib/match.mjs","./node_modules/date-fns/locale/en-US.mjs","./node_modules/date-fns/locale/en-US/_lib/localize.mjs","./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","./node_modules/date-fns/_lib/defaultOptions.mjs","./node_modules/date-fns/constants.mjs","./node_modules/date-fns/startOfDay.mjs","./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","./node_modules/date-fns/constructFrom.mjs","./node_modules/date-fns/startOfWeek.mjs","./node_modules/date-fns/startOfISOWeek.mjs","./node_modules/date-fns/getISOWeekYear.mjs","./node_modules/date-fns/getISOWeek.mjs","./node_modules/date-fns/startOfISOWeekYear.mjs","./node_modules/date-fns/getWeekYear.mjs","./node_modules/date-fns/getWeek.mjs","./node_modules/date-fns/startOfWeekYear.mjs","./node_modules/date-fns/_lib/addLeadingZeros.mjs","./node_modules/date-fns/_lib/format/lightFormatters.mjs","./node_modules/date-fns/_lib/format/formatters.mjs","./node_modules/date-fns/getDayOfYear.mjs","./node_modules/date-fns/differenceInCalendarDays.mjs","./node_modules/date-fns/startOfYear.mjs","./node_modules/date-fns/_lib/format/longFormatters.mjs","./node_modules/date-fns/_lib/protectedTokens.mjs","./node_modules/date-fns/format.mjs","./node_modules/date-fns/parse/_lib/Setter.mjs","./node_modules/date-fns/transpose.mjs","./node_modules/date-fns/parse/_lib/Parser.mjs","./node_modules/date-fns/parse/_lib/constants.mjs","./node_modules/date-fns/parse/_lib/utils.mjs","./node_modules/date-fns/parse/_lib/parsers/DateParser.mjs","./node_modules/date-fns/addDays.mjs","./node_modules/date-fns/setDay.mjs","./node_modules/date-fns/parse/_lib/parsers.mjs","./node_modules/date-fns/parse/_lib/parsers/EraParser.mjs","./node_modules/date-fns/parse/_lib/parsers/YearParser.mjs","./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.mjs","./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.mjs","./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.mjs","./node_modules/date-fns/parse/_lib/parsers/QuarterParser.mjs","./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.mjs","./node_modules/date-fns/parse/_lib/parsers/MonthParser.mjs","./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.mjs","./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.mjs","./node_modules/date-fns/setWeek.mjs","./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.mjs","./node_modules/date-fns/setISOWeek.mjs","./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.mjs","./node_modules/date-fns/parse/_lib/parsers/DayParser.mjs","./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.mjs","./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.mjs","./node_modules/date-fns/parse/_lib/parsers/ISODayParser.mjs","./node_modules/date-fns/setISODay.mjs","./node_modules/date-fns/getISODay.mjs","./node_modules/date-fns/parse/_lib/parsers/AMPMParser.mjs","./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.mjs","./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.mjs","./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.mjs","./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.mjs","./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.mjs","./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.mjs","./node_modules/date-fns/parse/_lib/parsers/MinuteParser.mjs","./node_modules/date-fns/parse/_lib/parsers/SecondParser.mjs","./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.mjs","./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.mjs","./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.mjs","./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.mjs","./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.mjs","./node_modules/date-fns/parse.mjs","./node_modules/date-fns/getDefaultOptions.mjs","./src/app/imask/nullable-number-mask.ts","./src/app/imask/imask.component.html","./src/app/imask/imask.component.ts"],"sourcesContent":["/** Checks if value is string */\nfunction isString(str) {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nfunction isObject(obj) {\n  var _obj$constructor;\n  return typeof obj === 'object' && obj != null && (obj == null || (_obj$constructor = obj.constructor) == null ? void 0 : _obj$constructor.name) === 'Object';\n}\nfunction pick(obj, keys) {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [k, v] = _ref;\n    if (keys(v, k)) acc[k] = v;\n    return acc;\n  }, {});\n}\n\n/** Direction */\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT'\n};\n\n/** Direction */\n\nfunction forceDirection(direction) {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nfunction escapeRegExp(str) {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nfunction objectIncludes(b, a) {\n  if (a === b) return true;\n  const arrA = Array.isArray(a),\n    arrB = Array.isArray(b);\n  let i;\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++) if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n  if (arrA != arrB) return false;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date,\n      dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n    const regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = 0; i < keys.length; i++) if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n    return a.toString() === b.toString();\n  }\n  return false;\n}\n\n/** Selection range */\n\nexport { DIRECTION, escapeRegExp, forceDirection, isObject, isString, objectIncludes, pick };\n","import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n    if (this.insertedCount) {\n      // double check right part\n      while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n        if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n      }\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n","/** Applies mask on element */\nfunction IMask(el, opts) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\nexport { IMask as default };\n","import { isString, isObject, pick } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n/** Get Masked class by mask type */\nfunction maskedClass(mask) /* TODO */{\n  if (mask == null) throw new Error('mask property should be defined');\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  return IMask.Masked;\n}\nfunction normalizeOpts(opts) {\n  if (!opts) throw new Error('Options in not defined');\n  if (IMask.Masked) {\n    if (opts.prototype instanceof IMask.Masked) return {\n      mask: opts\n    };\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const {\n      mask = undefined,\n      ...instanceOpts\n    } = opts instanceof IMask.Masked ? {\n      mask: opts\n    } : isObject(opts) && opts.mask instanceof IMask.Masked ? opts : {};\n    if (mask) {\n      const _mask = mask.mask;\n      return {\n        ...pick(mask, (_, k) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts\n      };\n    }\n  }\n  if (!isObject(opts)) return {\n    mask: opts\n  };\n  return {\n    ...opts\n  };\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nfunction createMask(opts) {\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  const nOpts = normalizeOpts(opts);\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error(\"Masked class is not found for provided mask \" + nOpts.mask + \", appropriate module needs to be imported manually before creating mask.\");\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if (nOpts._mask) {\n    nOpts.mask = nOpts._mask;\n    delete nOpts._mask;\n  }\n  return new MaskedClass(nOpts);\n}\nIMask.createMask = createMask;\n\nexport { createMask as default, maskedClass, normalizeOpts };\n","import IMask from '../core/holder.js';\n\n/**  Generic element API to use with mask */\nclass MaskElement {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Safely returns selection start */\n  get selectionStart() {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n    return start != null ? start : this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd() {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n    return end != null ? end : this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select(start, end) {\n    if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive() {\n    return false;\n  }\n  /** */\n\n  /** */\n\n  /** */\n}\nIMask.MaskElement = MaskElement;\n\nexport { MaskElement as default };\n","import MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\nconst KEY_Z = 90;\nconst KEY_Y = 89;\n\n/** Bridge between HTMLElement and {@link Masked} */\nclass HTMLMaskElement extends MaskElement {\n  /** HTMLElement to use mask on */\n\n  constructor(input) {\n    super();\n    this.input = input;\n    this._onKeydown = this._onKeydown.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onBeforeinput = this._onBeforeinput.bind(this);\n    this._onCompositionEnd = this._onCompositionEnd.bind(this);\n  }\n  get rootElement() {\n    var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n    return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) == null ? void 0 : _this$input$getRootNo2.call(_this$input)) != null ? _this$input$getRootNo : document;\n  }\n\n  /** Is element in focus */\n  get isActive() {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /** Binds HTMLElement events to mask internal events */\n  bindEvents(handlers) {\n    this.input.addEventListener('keydown', this._onKeydown);\n    this.input.addEventListener('input', this._onInput);\n    this.input.addEventListener('beforeinput', this._onBeforeinput);\n    this.input.addEventListener('compositionend', this._onCompositionEnd);\n    this.input.addEventListener('drop', handlers.drop);\n    this.input.addEventListener('click', handlers.click);\n    this.input.addEventListener('focus', handlers.focus);\n    this.input.addEventListener('blur', handlers.commit);\n    this._handlers = handlers;\n  }\n  _onKeydown(e) {\n    if (this._handlers.redo && (e.keyCode === KEY_Z && e.shiftKey && (e.metaKey || e.ctrlKey) || e.keyCode === KEY_Y && e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n    if (this._handlers.undo && e.keyCode === KEY_Z && (e.metaKey || e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (!e.isComposing) this._handlers.selectionChange(e);\n  }\n  _onBeforeinput(e) {\n    if (e.inputType === 'historyUndo' && this._handlers.undo) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (e.inputType === 'historyRedo' && this._handlers.redo) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n  }\n  _onCompositionEnd(e) {\n    this._handlers.input(e);\n  }\n  _onInput(e) {\n    if (!e.isComposing) this._handlers.input(e);\n  }\n\n  /** Unbinds HTMLElement events to mask internal events */\n  unbindEvents() {\n    this.input.removeEventListener('keydown', this._onKeydown);\n    this.input.removeEventListener('input', this._onInput);\n    this.input.removeEventListener('beforeinput', this._onBeforeinput);\n    this.input.removeEventListener('compositionend', this._onCompositionEnd);\n    this.input.removeEventListener('drop', this._handlers.drop);\n    this.input.removeEventListener('click', this._handlers.click);\n    this.input.removeEventListener('focus', this._handlers.focus);\n    this.input.removeEventListener('blur', this._handlers.commit);\n    this._handlers = {};\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLInputMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /** Returns HTMLElement selection start */\n  get _unsafeSelectionStart() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  get _unsafeSelectionEnd() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  _unsafeSelect(start, end) {\n    if (!this.rootElement.createRange) return;\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  get value() {\n    return this.input.textContent || '';\n  }\n  set value(value) {\n    this.input.textContent = value;\n  }\n}\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\nexport { HTMLContenteditableMaskElement as default };\n","class InputHistory {\n  constructor() {\n    this.states = [];\n    this.currentIndex = 0;\n  }\n  get currentState() {\n    return this.states[this.currentIndex];\n  }\n  get isEmpty() {\n    return this.states.length === 0;\n  }\n  push(state) {\n    // if current index points before the last element then remove the future\n    if (this.currentIndex < this.states.length - 1) this.states.length = this.currentIndex + 1;\n    this.states.push(state);\n    if (this.states.length > InputHistory.MAX_LENGTH) this.states.shift();\n    this.currentIndex = this.states.length - 1;\n  }\n  go(steps) {\n    this.currentIndex = Math.min(Math.max(this.currentIndex + steps, 0), this.states.length - 1);\n    return this.currentState;\n  }\n  undo() {\n    return this.go(-1);\n  }\n  redo() {\n    return this.go(+1);\n  }\n  clear() {\n    this.states.length = 0;\n    this.currentIndex = 0;\n  }\n}\nInputHistory.MAX_LENGTH = 100;\n\nexport { InputHistory as default };\n","import { DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLInputMaskElement from './html-input-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport InputHistory from './input-history.js';\nimport './html-mask-element.js';\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n  */\n\n  /** Internal {@link Masked} model */\n\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLInputMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._rawInputValue = '';\n    this.history = new InputHistory();\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onUndo = this._onUndo.bind(this);\n    this._onRedo = this._onRedo.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) == null ? void 0 : _this$masked.maskEquals(mask));\n  }\n\n  /** Masked */\n  get mask() {\n    return this.masked.mask;\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = mask instanceof IMask.Masked ? mask : createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl('auto');\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl('auto');\n  }\n\n  /** Raw input value */\n  get rawInputValue() {\n    return this._rawInputValue;\n  }\n  set rawInputValue(str) {\n    if (this.rawInputValue === str) return;\n    this.masked.rawInputValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl('auto');\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n      undo: this._onUndo,\n      redo: this._onRedo\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent(ev, e) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n    this._unmaskedValue = this.masked.unmaskedValue;\n    this._rawInputValue = this.masked.rawInputValue;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl(cursorPos) {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newRawInputValue = this.masked.rawInputValue;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue || this._rawInputValue !== newRawInputValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    this._rawInputValue = newRawInputValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (cursorPos === 'auto') this.alignCursor();else if (cursorPos != null) this.cursorPos = cursorPos;\n    if (isChanged) this._fireChangeEvents();\n    if (!this._historyChanging && (isChanged || this.history.isEmpty)) this.history.push({\n      unmaskedValue: newUnmaskedValue,\n      selection: {\n        start: this.selectionStart,\n        end: this.cursorPos\n      }\n    });\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n      mask,\n      ...restOpts\n    } = opts; // TODO types, yes, mask is optional\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = this.masked.optionsIsChanged(restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts); // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection\n    });\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) this.updateValue();\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n  _onUndo() {\n    this._applyHistoryState(this.history.undo());\n  }\n  _onRedo() {\n    this._applyHistoryState(this.history.redo());\n  }\n  _applyHistoryState(state) {\n    if (!state) return;\n    this._historyChanging = true;\n    this.unmaskedValue = state.unmaskedValue;\n    this.el.select(state.selection.start, state.selection.end);\n    this._saveSelection();\n    this._historyChanging = false;\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    this._listeners.length = 0;\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n","import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  /** Can skip chars */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      tailShift: 0,\n      skip: false\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.inserted += details.inserted;\n    this.rawInserted += details.rawInserted;\n    this.tailShift += details.tailShift;\n    this.skip = this.skip || details.skip;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n  get consumed() {\n    return Boolean(this.rawInserted) || this.skip;\n  }\n  equals(details) {\n    return this.inserted === details.inserted && this.tailShift === details.tailShift && this.rawInserted === details.rawInserted && this.skip === details.skip;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n","/** Provides details of continuous extracted tail */\nclass ContinuousTailDetails {\n  /** Tail value as string */\n\n  /** Tail start position */\n\n  /** Start position */\n\n  constructor(value, from, stop) {\n    if (value === void 0) {\n      value = '';\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n  toString() {\n    return this.value;\n  }\n  extend(tail) {\n    this.value += String(tail);\n  }\n  appendTo(masked) {\n    return masked.append(this.toString(), {\n      tail: true\n    }).aggregate(masked._appendPlaceholder());\n  }\n  get state() {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop\n    };\n  }\n  set state(state) {\n    Object.assign(this, state);\n  }\n  unshift(beforePos) {\n    if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n  shift() {\n    if (!this.value.length) return '';\n    const shiftChar = this.value[this.value.length - 1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n\nexport { ContinuousTailDetails as default };\n","import ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { isString, DIRECTION, objectIncludes, forceDirection } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n/** Append flags */\n\n/** Extract flags */\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\n/** Provides common masking stuff */\nclass Masked {\n  /** */\n\n  /** */\n\n  /** Transforms value before mask processing */\n\n  /** Transforms each char before mask processing */\n\n  /** Validates if value is acceptable */\n\n  /** Does additional processing at the end of editing */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions(opts) {\n    if (!this.optionsIsChanged(opts)) return;\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update(opts) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset() {\n    this._value = '';\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.resolve(value, {\n      input: true\n    });\n  }\n\n  /** Resolve new value */\n  resolve(value, flags) {\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n  get unmaskedValue() {\n    return this.value;\n  }\n  set unmaskedValue(value) {\n    this.resolve(value, {});\n  }\n  get typedValue() {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue;\n  }\n  set typedValue(value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue() {\n    return this.extractInput(0, this.displayValue.length, {\n      raw: true\n    });\n  }\n  set rawInputValue(value) {\n    this.resolve(value, {\n      raw: true\n    });\n  }\n  get displayValue() {\n    return this.value;\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos(cursorPos, direction) {\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return Math.min(this.displayValue.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return this.displayValue.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw(ch, flags) {\n    if (!ch) return new ChangeDetails();\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch\n    });\n  }\n\n  /** Appends char */\n  _appendChar(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const consistentState = this.state;\n    let details;\n    [ch, details] = this.doPrepareChar(ch, flags);\n    if (ch) {\n      details = details.aggregate(this._appendCharRaw(ch, flags));\n\n      // TODO handle `skip`?\n\n      // try `autofix` lookahead\n      if (!details.rawInserted && this.autofix === 'pad') {\n        const noFixState = this.state;\n        this.state = consistentState;\n        let fixDetails = this.pad(flags);\n        const chDetails = this._appendCharRaw(ch, flags);\n        fixDetails = fixDetails.aggregate(chDetails);\n\n        // if fix was applied or\n        // if details are equal use skip restoring state optimization\n        if (chDetails.rawInserted || fixDetails.equals(details)) {\n          details = fixDetails;\n        } else {\n          this.state = noFixState;\n        }\n      }\n    }\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.unshift(this.displayValue.length - details.tailShift);\n          }\n        }\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted.length === checkTail.toString().length;\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.shift();\n          }\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted.length === checkTail.toString().length;\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder() {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager() {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append(str, flags, tail) {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags != null && flags.tail) flags._beforeTailState = this.state;\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n    for (let ci = 0; ci < str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n    if ((this.eager === true || this.eager === 'append') && flags != null && flags.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n    return details;\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    this._value = this.displayValue.slice(0, fromPos) + this.displayValue.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh(fn) {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n    const ret = fn();\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.displayValue.length), {}, '');\n      this.doCommit();\n    }\n    delete this._refreshing;\n    return ret;\n  }\n  runIsolated(fn) {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n    const ret = fn(this);\n    this.state = state;\n    delete this._isolated;\n    return ret;\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepare ? this.prepare(str, this, flags) : str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepareChar ? this.prepareChar(str, this, flags) : str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate(flags) {\n    return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit() {\n    if (this.commit) this.commit(this.value, this);\n  }\n  splice(start, deleteCount, inserted, removeDirection, flags) {\n    if (inserted === void 0) {\n      inserted = '';\n    }\n    if (removeDirection === void 0) {\n      removeDirection = DIRECTION.NONE;\n    }\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    const tailPos = start + deleteCount;\n    const tail = this.extractTail(tailPos);\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n    let oldRawValue;\n    if (eagerRemove) {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {\n        raw: true\n      });\n    }\n    let startChangePos = start;\n    const details = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !eagerRemove ? DIRECTION.NONE : removeDirection);\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n    details.aggregate(this.remove(startChangePos));\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.displayValue.length)) {\n          details.aggregate(new ChangeDetails({\n            tailShift: -1\n          })).aggregate(this.remove(valLength - 1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n  maskEquals(mask) {\n    return this.mask === mask;\n  }\n  optionsIsChanged(opts) {\n    return !objectIncludes(this, opts);\n  }\n  typedValueEquals(value) {\n    const tval = this.typedValue;\n    return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nMasked.DEFAULTS = {\n  skipInvalid: true\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\nIMask.Masked = Masked;\n\nexport { Masked as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\nclass ChunksTailDetails {\n  /** */\n\n  constructor(chunks, from) {\n    if (chunks === void 0) {\n      chunks = [];\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.chunks = chunks;\n    this.from = from;\n  }\n  toString() {\n    return this.chunks.map(String).join('');\n  }\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    tailChunk = isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk;\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && (\n    // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n    // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift(); // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n  appendTo(masked) {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n    const details = new ChangeDetails();\n    for (let ci = 0; ci < this.chunks.length; ++ci) {\n      const chunk = this.chunks[ci];\n      const lastBlockIter = masked._mapPosToBlock(masked.displayValue.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null && (\n      // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails ||\n        // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        details.aggregate(tailDetails);\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n    return details;\n  }\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n  set state(state) {\n    const {\n      chunks,\n      ...props\n    } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n}\n\nexport { ChunksTailDetails as default };\n","import { DIRECTION } from '../../core/utils.js';\n\nclass PatternCursor {\n  constructor(masked, pos) {\n    this.masked = masked;\n    this._log = [];\n    const {\n      offset,\n      index\n    } = masked._mapPosToBlock(pos) || (pos < 0 ?\n    // first\n    {\n      index: 0,\n      offset: 0\n    } :\n    // last\n    {\n      index: this.masked._blocks.length,\n      offset: 0\n    });\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n  get block() {\n    return this.masked._blocks[this.index];\n  }\n  get pos() {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n  get state() {\n    return {\n      index: this.index,\n      offset: this.offset,\n      ok: this.ok\n    };\n  }\n  set state(s) {\n    Object.assign(this, s);\n  }\n  pushState() {\n    this._log.push(this.state);\n  }\n  popState() {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n  bindBlock() {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.displayValue.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n  _pushLeft(fn) {\n    this.pushState();\n    for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) == null ? void 0 : _this$block.displayValue.length) || 0) {\n      var _this$block;\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  _pushRight(fn) {\n    this.pushState();\n    for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  pushLeftBeforeFilled() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n  pushLeftBeforeInput() {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushLeftBeforeRequired() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushRightBeforeFilled() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n  pushRightBeforeInput() {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n  pushRightBeforeRequired() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n\nexport { PatternCursor as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\n\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    const details = new ChangeDetails({\n      inserted: this.char,\n      rawInserted: isResolved ? this.char : ''\n    });\n    this._value = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n  pad(flags) {\n    return this._appendPlaceholder();\n  }\n}\n\nexport { PatternFixedDefinition as default };\n","import createMask from '../factory.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION } from '../../core/utils.js';\nimport '../../core/holder.js';\n\nclass PatternInputDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    const {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager,\n      ...maskOpts\n    } = opts;\n    this.masked = createMask(maskOpts);\n    Object.assign(this, {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager\n    });\n  }\n  reset() {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n    return new ChangeDetails();\n  }\n  get value() {\n    return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\n  }\n  get unmaskedValue() {\n    return this.masked.unmaskedValue;\n  }\n  get rawInputValue() {\n    return this.masked.rawInputValue;\n  }\n  get displayValue() {\n    return this.masked.value && this.displayChar || this.value;\n  }\n  get isComplete() {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const state = this.masked.state;\n    // simulate input\n    let details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n    if (details.inserted && this.doValidate(flags) === false) {\n      details = new ChangeDetails();\n      this.masked.state = state;\n    }\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n    return details;\n  }\n  append(str, flags, tail) {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n  _appendPlaceholder() {\n    if (this.isFilled || this.isOptional) return new ChangeDetails();\n    this.isFilled = true;\n    return new ChangeDetails({\n      inserted: this.placeholderChar\n    });\n  }\n  _appendEager() {\n    return new ChangeDetails();\n  }\n  extractTail(fromPos, toPos) {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n  appendTail(tail) {\n    return this.masked.appendTail(tail);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default:\n        return boundPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.value.slice(fromPos, toPos).length;\n  }\n  doValidate(flags) {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n  doCommit() {\n    this.masked.doCommit();\n  }\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled\n    };\n  }\n  set state(state) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta;\n    return {\n      ...flags,\n      _beforeTailState: (flags == null || (_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.masked) || (flags == null ? void 0 : flags._beforeTailState)\n    };\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nPatternInputDefinition.DEFAULT_DEFINITIONS = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\nexport { PatternInputDefinition as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const mask = opts.mask;\n    if (mask) opts.validate = value => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\n\nexport { MaskedRegExp as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport { DIRECTION } from '../core/utils.js';\nimport Masked from './base.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport PatternCursor from './pattern/cursor.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport PatternInputDefinition from './pattern/input-definition.js';\nimport './regexp.js';\nimport '../core/continuous-tail-details.js';\n\n/** Pattern mask */\nclass MaskedPattern extends Masked {\n  /** */\n\n  /** */\n\n  /** Single char for empty input */\n\n  /** Single char for filled input */\n\n  /** Show placeholder only when needed */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts == null ? void 0 : opts.definitions)\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n  _rebuildMask() {\n    const defs = this.definitions;\n    this._blocks = [];\n    this.exposeBlock = undefined;\n    this._stops = [];\n    this._maskedBlocks = {};\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n    for (let i = 0; i < pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const {\n            expose,\n            repeat,\n            ...bOpts\n          } = normalizeOpts(this.blocks[bName]); // TODO type Opts<Arg & Extra>\n          const blockOpts = {\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            autofix: this.autofix,\n            ...bOpts,\n            repeat,\n            parent: this\n          };\n          const maskedBlock = repeat != null ? new IMask.RepeatBlock(blockOpts /* TODO */) : createMask(blockOpts);\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n            if (expose) this.exposeBlock = maskedBlock;\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n          i += bName.length - 1;\n          continue;\n        }\n      }\n      let char = pattern[i];\n      let isInput = (char in defs);\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n      const def = isInput ? new PatternInputDefinition({\n        isOptional: optionalBlock,\n        lazy: this.lazy,\n        eager: this.eager,\n        placeholderChar: this.placeholderChar,\n        displayChar: this.displayChar,\n        ...normalizeOpts(defs[char]),\n        parent: this\n      }) : new PatternFixedDefinition({\n        char,\n        eager: this.eager,\n        isUnmasking: unmaskingBlock\n      });\n      this._blocks.push(def);\n    }\n  }\n  get state() {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state)\n    };\n  }\n  set state(state) {\n    if (!state) {\n      this.reset();\n      return;\n    }\n    const {\n      _blocks,\n      ...maskedState\n    } = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n  reset() {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n  get isComplete() {\n    return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every(b => b.isComplete);\n  }\n  get isFilled() {\n    return this._blocks.every(b => b.isFilled);\n  }\n  get isFixed() {\n    return this._blocks.every(b => b.isFixed);\n  }\n  get isOptional() {\n    return this._blocks.every(b => b.isOptional);\n  }\n  doCommit() {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n  get unmaskedValue() {\n    return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.unmaskedValue = unmaskedValue;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get value() {\n    return this.exposeBlock ? this.exposeBlock.value :\n    // TODO return _value when not in change?\n    this._blocks.reduce((str, b) => str += b.value, '');\n  }\n  set value(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.value = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.value = value;\n  }\n  get typedValue() {\n    return this.exposeBlock ? this.exposeBlock.typedValue : super.typedValue;\n  }\n  set typedValue(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.typedValue = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.typedValue = value;\n  }\n  get displayValue() {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n  appendTail(tail) {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n  _appendEager() {\n    var _this$_mapPosToBlock;\n    const details = new ChangeDetails();\n    let startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n    for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n      details.aggregate(d);\n    }\n    return details;\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const blockIter = this._mapPosToBlock(this.displayValue.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n    for (let bi = blockIter.index, block; block = this._blocks[bi]; ++bi) {\n      var _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n      chunkTail.extend(blockChunk);\n    });\n    return chunkTail;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (fromPos === toPos) return '';\n    let input = '';\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n    return input;\n  }\n  _findStopBefore(blockIndex) {\n    let stopBefore;\n    for (let si = 0; si < this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder(toBlockIndex) {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n    const startBlockIter = this._mapPosToBlock(this.displayValue.length);\n    if (!startBlockIter) return details;\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n    this._blocks.slice(startBlockIndex, endBlockIndex).forEach(b => {\n      if (!b.lazy || toBlockIndex != null) {\n        var _blocks2;\n        details.aggregate(b._appendPlaceholder((_blocks2 = b._blocks) == null ? void 0 : _blocks2.length));\n      }\n    });\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock(pos) {\n    let accVal = '';\n    for (let bi = 0; bi < this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n      accVal += block.displayValue;\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos\n        };\n      }\n    }\n  }\n  _blockStartPos(blockIndex) {\n    return this._blocks.slice(0, blockIndex).reduce((pos, b) => pos += b.displayValue.length, 0);\n  }\n  _forEachBlocksInRange(fromPos, toPos, fn) {\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].displayValue.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].displayValue.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.displayValue.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return 0;\n    }\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.displayValue.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock(name) {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks(name) {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    this._forEachBlocksInRange(0, this.displayValue.length, b => details.aggregate(b.pad(flags)));\n    return details;\n  }\n}\nMaskedPattern.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\nIMask.MaskedPattern = MaskedPattern;\n\nexport { MaskedPattern as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which accepts ranges */\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n\n  /** Min bound */\n\n  /** Max bound */\n\n  get _matchFrom() {\n    return this.maxLength - String(this.from).length;\n  }\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      to = this.to || 0,\n      from = this.from || 0,\n      maxLength = this.maxLength || 0,\n      autofix = this.autofix,\n      ...patternOpts\n    } = opts;\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n    super._update(patternOpts);\n  }\n  get isComplete() {\n    return super.isComplete && Boolean(this.value);\n  }\n  boundaries(str) {\n    let minstr = '';\n    let maxstr = '';\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n    return [minstr, maxstr];\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let details;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n    if (!ch) details.skip = !this.isComplete;\n    return [ch, details];\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (!this.autofix || this.value.length + 1 > this.maxLength) return super._appendCharRaw(ch, flags);\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    const [minstr, maxstr] = this.boundaries(this.value + ch);\n    if (Number(maxstr) < this.from) return super._appendCharRaw(fromStr[this.value.length], flags);\n    if (Number(minstr) > this.to) {\n      if (!flags.tail && this.autofix === 'pad' && this.value.length + 1 < this.maxLength) {\n        return super._appendCharRaw(fromStr[this.value.length], flags).aggregate(this._appendCharRaw(ch, flags));\n      }\n      return super._appendCharRaw(toStr[this.value.length], flags);\n    }\n    return super._appendCharRaw(ch, flags);\n  }\n  doValidate(flags) {\n    const str = this.value;\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n    const [minstr, maxstr] = this.boundaries(str);\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to && super.doValidate(flags);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    if (this.value.length === this.maxLength) return details;\n    const value = this.value;\n    const padLength = this.maxLength - this.value.length;\n    if (padLength) {\n      this.reset();\n      for (let i = 0; i < padLength; ++i) {\n        details.aggregate(super._appendCharRaw('0', flags));\n      }\n\n      // append tail\n      value.split('').forEach(ch => this._appendCharRaw(ch));\n    }\n    return details;\n  }\n}\nIMask.MaskedRange = MaskedRange;\n\nexport { MaskedRange as default };\n","import MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport { isString } from '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\nconst DefaultPattern = 'd{.}`m{.}`Y';\n\n// Make format and parse required when pattern is provided\n\n/** Date mask */\nclass MaskedDate extends MaskedPattern {\n  static extractPatternOptions(opts) {\n    const {\n      mask,\n      pattern,\n      ...patternOpts\n    } = opts;\n    return {\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern\n    };\n  }\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super(MaskedDate.extractPatternOptions({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    }));\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      mask,\n      pattern,\n      blocks,\n      ...patternOpts\n    } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    };\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks\n    });\n  }\n  doValidate(flags) {\n    const date = this.date;\n    return super.doValidate(flags) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist(str) {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date() {\n    return this.typedValue;\n  }\n  set date(date) {\n    this.typedValue = date;\n  }\n  get typedValue() {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue(value) {\n    super.typedValue = value;\n  }\n  maskEquals(mask) {\n    return mask === Date || super.maskEquals(mask);\n  }\n  optionsIsChanged(opts) {\n    return super.optionsIsChanged(MaskedDate.extractPatternOptions(opts));\n  }\n}\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999\n  }\n});\nMaskedDate.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  mask: Date,\n  pattern: DefaultPattern,\n  format: (date, masked) => {\n    if (!date) return '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return [day, month, year].join('.');\n  },\n  parse: (str, masked) => {\n    const [day, month, year] = str.split('.').map(Number);\n    return new Date(year, month - 1, day);\n  }\n};\nIMask.MaskedDate = MaskedDate;\n\nexport { MaskedDate as default };\n","import { DIRECTION, objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nclass MaskedDynamic extends Masked {\n  constructor(opts) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n    this.currentMask = undefined;\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    if ('mask' in opts) {\n      this.exposeMask = undefined;\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(m => {\n        const {\n          expose,\n          ...maskOpts\n        } = normalizeOpts(m);\n        const masked = createMask({\n          overwrite: this._overwrite,\n          eager: this._eager,\n          skipInvalid: this._skipInvalid,\n          ...maskOpts\n        });\n        if (expose) this.exposeMask = masked;\n        return masked;\n      }) : [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = this._applyDispatch(ch, flags);\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n    return details;\n  }\n  _applyDispatch(appended, flags, tail) {\n    if (appended === void 0) {\n      appended = '';\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._rawInputValue : inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n    const prevMaskState = prevMask == null ? void 0 : prevMask.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, {\n      ...flags\n    }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n        if (insertValue) {\n          this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = this.currentMask.value.length - prevValueBeforeTail.length;\n        }\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {\n            raw: true,\n            tail: true\n          }).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n    return details;\n  }\n  _appendPlaceholder() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n    return details;\n  }\n  _appendEager() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n    return details;\n  }\n  appendTail(tail) {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n    return details.aggregate(this.currentMask ? this.currentMask.appendTail(tail) : super.appendTail(tail));\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n    return {\n      ...flags,\n      _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n    };\n  }\n  doDispatch(appended, flags, tail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    return this.dispatch(appended, this, flags, tail);\n  }\n  doValidate(flags) {\n    return super.doValidate(flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n  }\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepare(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepareChar(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  reset() {\n    var _this$currentMask;\n    (_this$currentMask = this.currentMask) == null || _this$currentMask.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n  get value() {\n    return this.exposeMask ? this.exposeMask.value : this.currentMask ? this.currentMask.value : '';\n  }\n  set value(value) {\n    if (this.exposeMask) {\n      this.exposeMask.value = value;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.value = value;\n  }\n  get unmaskedValue() {\n    return this.exposeMask ? this.exposeMask.unmaskedValue : this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.unmaskedValue = unmaskedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.exposeMask ? this.exposeMask.typedValue : this.currentMask ? this.currentMask.typedValue : '';\n  }\n  set typedValue(typedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.typedValue = typedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n      return;\n    }\n    let unmaskedValue = String(typedValue);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = typedValue;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n  get displayValue() {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n  get isComplete() {\n    var _this$currentMask2;\n    return Boolean((_this$currentMask2 = this.currentMask) == null ? void 0 : _this$currentMask2.isComplete);\n  }\n  get isFilled() {\n    var _this$currentMask3;\n    return Boolean((_this$currentMask3 = this.currentMask) == null ? void 0 : _this$currentMask3.isFilled);\n  }\n  remove(fromPos, toPos) {\n    const details = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n      // update with dispatch\n      .aggregate(this._applyDispatch());\n    }\n    return details;\n  }\n  get state() {\n    var _this$currentMask4;\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: (_this$currentMask4 = this.currentMask) == null ? void 0 : _this$currentMask4.state\n    };\n  }\n  set state(state) {\n    const {\n      compiledMasks,\n      currentMaskRef,\n      currentMask,\n      ...maskedState\n    } = state;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n  extractInput(fromPos, toPos, flags) {\n    return this.currentMask ? this.currentMask.extractInput(fromPos, toPos, flags) : '';\n  }\n  extractTail(fromPos, toPos) {\n    return this.currentMask ? this.currentMask.extractTail(fromPos, toPos) : super.extractTail(fromPos, toPos);\n  }\n  doCommit() {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n  nearestInputPos(cursorPos, direction) {\n    return this.currentMask ? this.currentMask.nearestInputPos(cursorPos, direction) : super.nearestInputPos(cursorPos, direction);\n  }\n  get overwrite() {\n    return this.currentMask ? this.currentMask.overwrite : this._overwrite;\n  }\n  set overwrite(overwrite) {\n    this._overwrite = overwrite;\n  }\n  get eager() {\n    return this.currentMask ? this.currentMask.eager : this._eager;\n  }\n  set eager(eager) {\n    this._eager = eager;\n  }\n  get skipInvalid() {\n    return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;\n  }\n  set skipInvalid(skipInvalid) {\n    this._skipInvalid = skipInvalid;\n  }\n  get autofix() {\n    return this.currentMask ? this.currentMask.autofix : this._autofix;\n  }\n  set autofix(autofix) {\n    this._autofix = autofix;\n  }\n  maskEquals(mask) {\n    return Array.isArray(mask) ? this.compiledMasks.every((m, mi) => {\n      if (!mask[mi]) return;\n      const {\n        mask: oldMask,\n        ...restOpts\n      } = mask[mi];\n      return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n    }) : super.maskEquals(mask);\n  }\n  typedValueEquals(value) {\n    var _this$currentMask5;\n    return Boolean((_this$currentMask5 = this.currentMask) == null ? void 0 : _this$currentMask5.typedValueEquals(value));\n  }\n}\n/** Currently chosen mask */\n/** Currently chosen mask */\n/** Compliled {@link Masked} options */\n/** Chooses {@link Masked} depending on input value */\nMaskedDynamic.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.displayValue.length : m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT);\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, {\n          raw: true\n        });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(0, Math.max(startInputPos, m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT)))\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n","import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { DIRECTION } from '../core/utils.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport './base.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  constructor(opts) {\n    super({\n      ...MaskedEnum.DEFAULTS,\n      ...opts\n    }); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: enum_,\n      ...eopts\n    } = opts;\n    if (enum_) {\n      const lengths = enum_.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n      this.enum = enum_;\n    }\n    super._update(eopts);\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const matchFrom = Math.min(this.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    const matches = this.enum.filter(e => this.matchValue(e, this.unmaskedValue + ch, matchFrom));\n    if (matches.length) {\n      if (matches.length === 1) {\n        this._forEachBlocksInRange(0, this.value.length, (b, bi) => {\n          const mch = matches[0][bi];\n          if (bi >= this.value.length || mch === b.value) return;\n          b.reset();\n          b._appendChar(mch, flags);\n        });\n      }\n      const d = super._appendCharRaw(matches[0][this.value.length], flags);\n      if (matches.length === 1) {\n        matches[0].slice(this.unmaskedValue.length).split('').forEach(mch => d.aggregate(super._appendCharRaw(mch)));\n      }\n      return d;\n    }\n    return new ChangeDetails({\n      skip: !this.isComplete\n    });\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    // just drop tail\n    return new ContinuousTailDetails('', fromPos);\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (fromPos === toPos) return new ChangeDetails();\n    const matchFrom = Math.min(super.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    let pos;\n    for (pos = fromPos; pos >= 0; --pos) {\n      const matches = this.enum.filter(e => this.matchValue(e, this.value.slice(matchFrom, pos), matchFrom));\n      if (matches.length > 1) break;\n    }\n    const details = super.remove(pos, toPos);\n    details.tailShift += pos - fromPos;\n    return details;\n  }\n  get isComplete() {\n    return this.enum.indexOf(this.value) >= 0;\n  }\n}\n/** Match enum value */\nMaskedEnum.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  matchValue: (estr, istr, matchFrom) => estr.indexOf(istr, matchFrom) === matchFrom\n};\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n","import { escapeRegExp, DIRECTION } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\nvar _MaskedNumber;\n/** Number mask */\nclass MaskedNumber extends Masked {\n  /** Single char */\n\n  /** Single char */\n\n  /** Array of single chars */\n\n  /** */\n\n  /** */\n\n  /** Digits after point */\n\n  /** Flag to remove leading and trailing zeros in the end of editing */\n\n  /** Flag to pad trailing zeros after point in the end of editing */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n  _updateRegExps() {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ? \"(\" + escapeRegExp(this.radix) + \"\\\\d{0,\" + this.scale + \"})?\" : '') + '$';\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(\"[\" + this.mapToRadix.map(escapeRegExp).join('') + \"]\", 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n  _removeThousandsSeparators(value) {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n  _insertThousandsSeparators(value) {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const [prepCh, details] = super.doPrepareChar(this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (\n    /*\n      radix should be mapped when\n      1) input is done from keyboard = flags.input && flags.raw\n      2) unmasked value is set = !flags.input && !flags.raw\n      and should not be mapped when\n      1) value is set = flags.input && !flags.raw\n      2) raw value is set = !flags.input && flags.raw\n    */\n    flags.input && flags.raw || !flags.input && !flags.raw) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch), flags);\n    if (ch && !prepCh) details.skip = true;\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n    return [prepCh, details];\n  }\n  _separatorsCount(to, extendOnSeparators) {\n    if (extendOnSeparators === void 0) {\n      extendOnSeparators = false;\n    }\n    let count = 0;\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n    return count;\n  }\n  _separatorsCountFromSlice(slice) {\n    if (slice === void 0) {\n      slice = this._value;\n    }\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n    const oldValue = this._value;\n    this._value += ch;\n    const num = this.number;\n    let accepted = !isNaN(num);\n    let skip = false;\n    if (accepted) {\n      let fixedNum;\n      if (this.min != null && this.min < 0 && this.number < this.min) fixedNum = this.min;\n      if (this.max != null && this.max > 0 && this.number > this.max) fixedNum = this.max;\n      if (fixedNum != null) {\n        if (this.autofix) {\n          this._value = this.format(fixedNum, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n          skip || (skip = oldValue === this._value && !flags.tail); // if not changed on tail it's still ok to proceed\n        } else {\n          accepted = false;\n        }\n      }\n      accepted && (accepted = Boolean(this._value.match(this._numberRegExp)));\n    }\n    let appendDetails;\n    if (!accepted) {\n      this._value = oldValue;\n      appendDetails = new ChangeDetails();\n    } else {\n      appendDetails = new ChangeDetails({\n        inserted: this._value.slice(oldValue.length),\n        rawInserted: skip ? '' : ch,\n        skip\n      });\n    }\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    return appendDetails;\n  }\n  _findSeparatorAround(pos) {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n    return -1;\n  }\n  _adjustRangeWithSeparators(from, to) {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n    });\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (!this.thousandsSeparator) return cursorPos;\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        {\n          const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n          if (separatorAtLeftPos >= 0) {\n            const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n            if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\n              return separatorAtLeftPos;\n            }\n          }\n          break;\n        }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        {\n          const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n          if (separatorAtRightPos >= 0) {\n            return separatorAtRightPos + this.thousandsSeparator.length;\n          }\n        }\n    }\n    return cursorPos;\n  }\n  doCommit() {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n      let formatted = this.value;\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n      this._value = formatted;\n    }\n    super.doCommit();\n  }\n  _normalizeZeros(value) {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n      if (!parts[1].length) parts.length = 1; // remove fractional\n    }\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n  _padFractionalZeros(value) {\n    if (!value) return value;\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (ch === this.radix || ch === MaskedNumber.UNMASKED_RADIX || this.mapToRadix.includes(ch));\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n  get unmaskedValue() {\n    return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.parse(this.unmaskedValue, this);\n  }\n  set typedValue(n) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number() {\n    return this.typedValue;\n  }\n  set number(number) {\n    this.typedValue = number;\n  }\n  get allowNegative() {\n    return this.min != null && this.min < 0 || this.max != null && this.max < 0;\n  }\n  get allowPositive() {\n    return this.min != null && this.min > 0 || this.max != null && this.max > 0;\n  }\n  typedValueEquals(value) {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (super.typedValueEquals(value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\n  }\n}\n_MaskedNumber = MaskedNumber;\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\nMaskedNumber.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  mask: Number,\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [_MaskedNumber.UNMASKED_RADIX],\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  scale: 2,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', {\n    useGrouping: false,\n    maximumFractionDigits: 20\n  })\n};\nIMask.MaskedNumber = MaskedNumber;\n\nexport { MaskedNumber as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by custom Function */\nclass MaskedFunction extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update({\n      ...opts,\n      validate: opts.mask\n    });\n  }\n}\nIMask.MaskedFunction = MaskedFunction;\n\nexport { MaskedFunction as default };\n","import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern mask */\nclass RepeatBlock extends MaskedPattern {\n  get repeatFrom() {\n    var _ref;\n    return (_ref = Array.isArray(this.repeat) ? this.repeat[0] : this.repeat === Infinity ? 0 : this.repeat) != null ? _ref : 0;\n  }\n  get repeatTo() {\n    var _ref2;\n    return (_ref2 = Array.isArray(this.repeat) ? this.repeat[1] : this.repeat) != null ? _ref2 : Infinity;\n  }\n  constructor(opts) {\n    super(opts);\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    var _ref3, _ref4, _this$_blocks;\n    const {\n      repeat,\n      ...blockOpts\n    } = normalizeOpts(opts); // TODO type\n    this._blockOpts = Object.assign({}, this._blockOpts, blockOpts);\n    const block = createMask(this._blockOpts);\n    this.repeat = (_ref3 = (_ref4 = repeat != null ? repeat : block.repeat) != null ? _ref4 : this.repeat) != null ? _ref3 : Infinity; // TODO type\n\n    super._update({\n      mask: 'm'.repeat(Math.max(this.repeatTo === Infinity && ((_this$_blocks = this._blocks) == null ? void 0 : _this$_blocks.length) || 0, this.repeatFrom)),\n      blocks: {\n        m: block\n      },\n      eager: block.eager,\n      overwrite: block.overwrite,\n      skipInvalid: block.skipInvalid,\n      lazy: block.lazy,\n      placeholderChar: block.placeholderChar,\n      displayChar: block.displayChar\n    });\n  }\n  _allocateBlock(bi) {\n    if (bi < this._blocks.length) return this._blocks[bi];\n    if (this.repeatTo === Infinity || this._blocks.length < this.repeatTo) {\n      this._blocks.push(createMask(this._blockOpts));\n      this.mask += 'm';\n      return this._blocks[this._blocks.length - 1];\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    for (let bi = (_this$_mapPosToBlock$ = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index) != null ? _this$_mapPosToBlock$ : Math.max(this._blocks.length - 1, 0), block, allocated;\n    // try to get a block or\n    // try to allocate a new block if not allocated already\n    block = (_this$_blocks$bi = this._blocks[bi]) != null ? _this$_blocks$bi : allocated = !allocated && this._allocateBlock(bi); ++bi) {\n      var _this$_mapPosToBlock$, _this$_mapPosToBlock, _this$_blocks$bi, _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      if (blockDetails.skip && allocated) {\n        // remove the last allocated block and break\n        this._blocks.pop();\n        this.mask = this.mask.slice(1);\n        break;\n      }\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  _trimEmptyTail(fromPos, toPos) {\n    var _this$_mapPosToBlock2, _this$_mapPosToBlock3;\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    const firstBlockIndex = Math.max(((_this$_mapPosToBlock2 = this._mapPosToBlock(fromPos)) == null ? void 0 : _this$_mapPosToBlock2.index) || 0, this.repeatFrom, 0);\n    let lastBlockIndex;\n    if (toPos != null) lastBlockIndex = (_this$_mapPosToBlock3 = this._mapPosToBlock(toPos)) == null ? void 0 : _this$_mapPosToBlock3.index;\n    if (lastBlockIndex == null) lastBlockIndex = this._blocks.length - 1;\n    let removeCount = 0;\n    for (let blockIndex = lastBlockIndex; firstBlockIndex <= blockIndex; --blockIndex, ++removeCount) {\n      if (this._blocks[blockIndex].unmaskedValue) break;\n    }\n    if (removeCount) {\n      this._blocks.splice(lastBlockIndex - removeCount + 1, removeCount);\n      this.mask = this.mask.slice(removeCount);\n    }\n  }\n  reset() {\n    super.reset();\n    this._trimEmptyTail();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._trimEmptyTail(fromPos, toPos);\n    return removeDetails;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos == null && this.repeatTo === Infinity) return Infinity;\n    return super.totalInputPositions(fromPos, toPos);\n  }\n  get state() {\n    return super.state;\n  }\n  set state(state) {\n    this._blocks.length = state._blocks.length;\n    this.mask = this.mask.slice(0, this._blocks.length);\n    super.state = state;\n  }\n}\nIMask.RepeatBlock = RepeatBlock;\n\nexport { RepeatBlock as default };\n","export { default as InputMask } from './controls/input.js';\nimport IMask from './core/holder.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { default as HTMLInputMaskElement } from './controls/html-input-mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as ChangeDetails } from './core/change-details.js';\nexport { DIRECTION, forceDirection } from './core/utils.js';\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as createMask, normalizeOpts } from './masked/factory.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as ChunksTailDetails } from './masked/pattern/chunk-tail-details.js';\nexport { default as PatternFixedDefinition } from './masked/pattern/fixed-definition.js';\nexport { default as PatternInputDefinition } from './masked/pattern/input-definition.js';\nexport { PIPE_TYPE, createPipe, pipe } from './masked/pipe.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as RepeatBlock } from './masked/repeat.js';\nimport './core/action-details.js';\nimport './controls/input-history.js';\nimport './core/continuous-tail-details.js';\nimport './masked/pattern/cursor.js';\n\ntry {\n  globalThis.IMask = IMask;\n} catch {}\n\nexport { IMask as default };\n","import IMask, { pipe } from 'imask';\nexport { default as IMask, PIPE_TYPE, pipe } from 'imask';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, inject, forwardRef, ElementRef, Renderer2, PLATFORM_ID, EventEmitter, Directive, Input, Output, Pipe, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE } from '@angular/forms';\n\nclass DefaultImaskFactory {\n    create(el, opts) {\n        return IMask(el, opts);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: DefaultImaskFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: DefaultImaskFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: DefaultImaskFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst IMASK_FACTORY = new InjectionToken('IMASK_FACTORY', { providedIn: 'root', factory: () => inject(DefaultImaskFactory) });\n\nconst MASKEDINPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => IMaskDirective),\n    multi: true,\n};\nconst DEFAULT_IMASK_ELEMENT = (elementRef) => elementRef.nativeElement;\nclass IMaskDirective {\n    constructor() {\n        this.onTouched = () => { };\n        this.onChange = () => { };\n        this._viewInitialized = false;\n        this._composing = false;\n        this._writing = false;\n        this._elementRef = inject(ElementRef);\n        this._renderer = inject(Renderer2);\n        this._factory = inject(IMASK_FACTORY);\n        this._platformId = inject(PLATFORM_ID);\n        this._compositionMode = inject(COMPOSITION_BUFFER_MODE, { optional: true }) ?? !this._isAndroid();\n        this.imaskElement = DEFAULT_IMASK_ELEMENT;\n        this.accept = new EventEmitter();\n        this.complete = new EventEmitter();\n    }\n    get element() {\n        return this.imaskElement(this._elementRef, this);\n    }\n    get maskValue() {\n        if (!this.maskRef)\n            return (this.element?.value || '');\n        if (this.unmask === 'typed')\n            return this.maskRef.typedValue;\n        if (this.unmask)\n            return this.maskRef.unmaskedValue;\n        return this.maskRef.value;\n    }\n    set maskValue(value) {\n        if (this.maskRef) {\n            if (this.unmask === 'typed')\n                this.maskRef.typedValue = value;\n            else if (this.unmask)\n                this.maskRef.unmaskedValue = value;\n            else\n                this.maskRef.value = value;\n        }\n        else {\n            this._renderer.setProperty(this.element, 'value', value);\n        }\n    }\n    ngAfterViewInit() {\n        if (this.imask)\n            this.initMask();\n        this._viewInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (changes['elementRef'] && !this.imaskElement)\n            this.imaskElement = DEFAULT_IMASK_ELEMENT;\n        if (!changes['imask'] || !this._viewInitialized)\n            return;\n        if (this.imask) {\n            if (this.maskRef)\n                this.maskRef.updateOptions(this.imask);\n            else {\n                this.initMask();\n                this.onChange(this.maskValue);\n            }\n        }\n        else {\n            this.destroyMask();\n        }\n    }\n    destroyMask() {\n        if (this.maskRef) {\n            this.maskRef.destroy();\n            delete this.maskRef;\n        }\n    }\n    ngOnDestroy() {\n        this.destroyMask();\n        this.accept.complete();\n        this.complete.complete();\n    }\n    beginWrite(value) {\n        this._writing = true;\n        this._writingValue = value;\n    }\n    endWrite() {\n        this._writing = false;\n        return this._writingValue;\n    }\n    writeValue(value) {\n        value = (value == null && this.unmask !== 'typed' ? '' : value);\n        if (this.maskRef) {\n            this.beginWrite(value);\n            this.maskValue = value;\n            this.endWrite();\n        }\n        else {\n            this._renderer.setProperty(this.element, 'value', value);\n            this._initialValue = value;\n        }\n    }\n    _onAccept() {\n        const value = this.maskValue;\n        // if value was not changed during writing don't fire events\n        // for details see https://github.com/uNmAnNeR/imaskjs/issues/136\n        if (this._writing && value === this.endWrite())\n            return;\n        this.onChange(value);\n        this.accept.emit(value);\n    }\n    _onComplete() {\n        this.complete.emit(this.maskValue);\n    }\n    initMask() {\n        this.maskRef = this._factory.create(this.element, this.imask)\n            .on('accept', this._onAccept.bind(this))\n            .on('complete', this._onComplete.bind(this));\n        if (this._initialValue != null)\n            this.writeValue(this._initialValue);\n        delete this._initialValue;\n    }\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this.element, 'disabled', isDisabled);\n    }\n    registerOnChange(fn) { this.onChange = fn; }\n    registerOnTouched(fn) { this.onTouched = fn; }\n    _handleInput(value) {\n        // if mask is attached all input goes throw mask\n        if (this.maskRef)\n            return;\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    _compositionStart() { this._composing = true; }\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this._handleInput(value);\n    }\n    _isAndroid() {\n        return isPlatformBrowser(this._platformId) && /android (\\d+)/.test(navigator.userAgent.toLowerCase());\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IMaskDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IMaskDirective, isStandalone: true, selector: \"[imask]\", inputs: { imask: \"imask\", unmask: \"unmask\", imaskElement: \"imaskElement\" }, outputs: { accept: \"accept\", complete: \"complete\" }, host: { listeners: { \"input\": \"_handleInput($event.target.value)\", \"blur\": \"onTouched()\", \"compositionstart\": \"_compositionStart()\", \"compositionend\": \"_compositionEnd($event.target.value)\" } }, providers: [MASKEDINPUT_VALUE_ACCESSOR], exportAs: [\"imask\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IMaskDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[imask]',\n                    standalone: true,\n                    exportAs: 'imask',\n                    host: {\n                        '(input)': '_handleInput($event.target.value)',\n                        '(blur)': 'onTouched()',\n                        '(compositionstart)': '_compositionStart()',\n                        '(compositionend)': '_compositionEnd($event.target.value)'\n                    },\n                    providers: [MASKEDINPUT_VALUE_ACCESSOR],\n                }]\n        }], propDecorators: { imask: [{\n                type: Input\n            }], unmask: [{\n                type: Input\n            }], imaskElement: [{\n                type: Input\n            }], accept: [{\n                type: Output\n            }], complete: [{\n                type: Output\n            }] } });\n\n/*\n * Transforms value through mask\n * Takes mask and optionally `from` and `to` pipe types.\n * Usage:\n *   value | imask:MASK_OR_MASKED:opt_from:opt_to\n * Example:\n *   {{ 2 | imask:mask }}\n*/\nclass IMaskPipe {\n    transform(...args) {\n        return pipe(...args);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IMaskPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: IMaskPipe, isStandalone: true, name: \"imask\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IMaskPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: 'imask', standalone: true }]\n        }] });\n\nclass IMaskModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IMaskModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: IMaskModule, imports: [IMaskDirective, IMaskPipe], exports: [IMaskDirective, IMaskPipe] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IMaskModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IMaskModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [IMaskDirective, IMaskPipe],\n                    exports: [IMaskDirective, IMaskPipe]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_IMASK_ELEMENT, DefaultImaskFactory, IMASK_FACTORY, IMaskDirective, IMaskModule, IMaskPipe, MASKEDINPUT_VALUE_ACCESSOR };\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { transpose } from \"../../transpose.mjs\";\nimport { constructFrom } from \"../../constructFrom.mjs\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateToSystemTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, Date));\n  }\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(fromDate, constructor) {\n  const date =\n    constructor instanceof Date\n      ? constructFrom(constructor, 0)\n      : new constructor(0);\n  date.setFullYear(\n    fromDate.getFullYear(),\n    fromDate.getMonth(),\n    fromDate.getDate(),\n  );\n  date.setHours(\n    fromDate.getHours(),\n    fromDate.getMinutes(),\n    fromDate.getSeconds(),\n    fromDate.getMilliseconds(),\n  );\n  return date;\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { ValueSetter } from \"./Setter.mjs\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.mjs\";\nimport { numericPatterns } from \"./constants.mjs\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { addDays } from \"./addDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const currentDay = _date.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { EraParser } from \"./parsers/EraParser.mjs\";\nimport { YearParser } from \"./parsers/YearParser.mjs\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.mjs\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.mjs\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.mjs\";\nimport { QuarterParser } from \"./parsers/QuarterParser.mjs\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.mjs\";\nimport { MonthParser } from \"./parsers/MonthParser.mjs\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.mjs\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.mjs\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.mjs\";\nimport { DateParser } from \"./parsers/DateParser.mjs\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.mjs\";\nimport { DayParser } from \"./parsers/DayParser.mjs\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.mjs\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.mjs\";\nimport { ISODayParser } from \"./parsers/ISODayParser.mjs\";\nimport { AMPMParser } from \"./parsers/AMPMParser.mjs\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.mjs\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.mjs\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.mjs\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.mjs\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.mjs\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.mjs\";\nimport { MinuteParser } from \"./parsers/MinuteParser.mjs\";\nimport { SecondParser } from \"./parsers/SecondParser.mjs\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.mjs\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.mjs\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.mjs\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.mjs\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- It's ok, we want any here\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.mjs\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const _date = toDate(date);\n  const diff = getWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week) {\n  const _date = toDate(date);\n  const diff = getISOWeek(_date) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setISODay } from \"../../../setISODay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { addDays } from \"./addDays.mjs\";\nimport { getISODay } from \"./getISODay.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day) {\n  const _date = toDate(date);\n  const currentDay = getISODay(_date);\n  const diff = day - currentDay;\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date) {\n  const _date = toDate(date);\n  let day = _date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getDefaultOptions } from \"./getDefaultOptions.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { parsers } from \"./parse/_lib/parsers.mjs\";\nimport { DateToSystemTimezoneSetter } from \"./parse/_lib/Setter.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (formatStr === \"\") {\n    if (dateStr === \"\") {\n      return toDate(referenceDate);\n    } else {\n      return constructFrom(referenceDate, NaN);\n    }\n  }\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  const setters = [new DateToSystemTimezoneSetter()];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return constructFrom(referenceDate, NaN);\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return constructFrom(referenceDate, NaN);\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate);\n\n  if (isNaN(date.getTime())) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return constructFrom(referenceDate, NaN);\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return constructFrom(referenceDate, date);\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","import * as IMask from 'imask';\r\nimport { isDefined } from '@tylertech/forge-core';\r\n\r\nexport class NullableNumberMask extends IMask.MaskedNumber {\r\n  constructor(options: any) {\r\n    options.format = (value: any) => isDefined(value) ? value.toString() : '';\r\n    super(options);\r\n  }\r\n\r\n  public override append(str: string, flags?: IMask.AppendFlags, tail?: string | string | IMask.TailDetails): IMask.ChangeDetails {\r\n    return super.append(isDefined(str) ? str.toString() : '', flags, tail);\r\n  }\r\n\r\n  // @ts-expect-error override\r\n  public override get typedValue() {\r\n    return this.unmaskedValue !== '' ? super.typedValue : null;\r\n  }\r\n\r\n  // @ts-expect-error override\r\n  public override set typedValue(value) {\r\n    super.typedValue = value ?? '' as any;\r\n  }\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--title\">IMask</h2>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <form novalidate autocomplete=\"off\" [formGroup]=\"formGroup\">\r\n    <forge-text-field>\r\n      <input #input id=\"imask-form--input\" type=\"text\" [imask]=\"mask\" [unmask]=\"unmask\" #imaskRef=\"imask\" formControlName=\"input\" />\r\n      <label for=\"imask-form--input\" slot=\"label\">Input</label>\r\n      <span slot=\"helper-text\">{{helpText}}</span>\r\n    </forge-text-field>\r\n    <div style=\"width: 600px;\">\r\n      <div>\r\n        <b>string mask</b>: (0) any digit, (a) any letter, (*) any char\r\n      </div>\r\n      <div>\r\n        <b>number mask</b>: (#) required digit, (&) optional digit, (-) sign, (.) decimal, (,) separator\r\n      </div>\r\n    </div>\r\n    <forge-text-field>\r\n      <input #input id=\"imask-form--format\" type=\"text\" formControlName=\"format\" />\r\n      <label for=\"imask-form--format\" slot=\"label\">Format</label>\r\n    </forge-text-field>\r\n    <div style=\"display: flex; column-gap: 8px; align-items: center;\">\r\n      <forge-select style=\"flex-grow: 1;\" formControlName=\"maskType\" label=\"Mask type\">\r\n        @for (option of maskOptions; track i; let i = $index) {\r\n        <forge-option [value]=\"option.value\">{{option.label}}</forge-option>\r\n        }\r\n      </forge-select>\r\n      <forge-button type=\"outlined\">\r\n        <button type=\"button\" (click)=\"onApply()\">\r\n          Apply\r\n        </button>\r\n      </forge-button>\r\n    </div>\r\n  </form>\r\n  <p>{{formGroup.getRawValue() | json}}</p>\r\n</div>","// https://github.com/uNmAnNeR/imaskjs/issues/876\r\n\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { IMaskDirective } from 'angular-imask';\r\nimport * as IMask from 'imask';\r\nimport { IOption } from '@tylertech/forge';\r\nimport { ForgeButtonModule, ForgeOptionModule, ForgeSelectModule, ForgeTextFieldModule, ForgeToolbarModule } from '@tylertech/forge-angular';\r\nimport { parse as dateParse, format as dateFormat, isValid as dateIsValid } from 'date-fns';\r\n\r\nimport { NullableNumberMask } from './nullable-number-mask';\r\n@Component({\r\n  selector: 'app-imask',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    IMaskDirective,\r\n    ForgeButtonModule,\r\n    ForgeOptionModule,\r\n    ForgeSelectModule,\r\n    ForgeTextFieldModule,\r\n    ForgeToolbarModule\r\n  ],\r\n  templateUrl: './imask.component.html',\r\n  styleUrls: ['./imask.component.scss']\r\n})\r\nexport class ImaskComponent implements AfterViewInit {\r\n  @ViewChild('imaskRef')\r\n  public imaskRef?: IMaskDirective<any>;\r\n\r\n  public formGroup = new FormGroup({\r\n    format: new FormControl<string | null>('000-aa-****'),\r\n    input: new FormControl<string | null>(null),\r\n    maskType: new FormControl<string>('string')\r\n  });\r\n  public unmask: 'typed' | boolean = false;\r\n  public mask?: IMask.FactoryArg;\r\n  public maskOptions: IOption[] = [\r\n    { value: 'string', label: 'String' },\r\n    { value: 'number', label: 'Number' },\r\n    { value: 'number-search', label: 'Number search' },\r\n    { value: 'date', label: 'Date' },\r\n    { value: 'date-search', label: 'Date search' },\r\n    { value: 'datetime', label: 'Date time' }\r\n  ];\r\n  public helpText = '';\r\n\r\n  constructor() {\r\n    this.mask = this.buildStringMask(this.formGroup.value.format as string);\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    console.log(this.imaskRef);\r\n  }\r\n\r\n  public onApply() {\r\n    this.imaskRef?.destroyMask();\r\n    this.formGroup.controls.input.setValue(null);\r\n\r\n    requestAnimationFrame(() => {\r\n      this.helpText = '';\r\n      this.unmask = false;\r\n\r\n      switch (this.formGroup.value.maskType) {\r\n        case 'string':\r\n          this.mask = this.buildStringMask(this.formGroup.value.format as string);\r\n          break;\r\n        case 'number':\r\n          this.mask = this.buildNumberMask(this.formGroup.value.format as string);\r\n          break;\r\n        case 'number-search':\r\n          this.mask = this.buildNumberSearchMask();\r\n          break;\r\n        case 'date':\r\n          this.mask = this.buildDateMask();\r\n          break;\r\n        case 'date-search':\r\n          this.mask = this.buildDateSearchMask();\r\n          break;\r\n        case 'datetime':\r\n          this.mask = this.buildDateTimeMask();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildStringMask(format?: string): IMask.MaskedPattern | IMask.MaskedRegExp {\r\n    if (!format?.length) {\r\n      return {\r\n        mask: /./\r\n      } as IMask.MaskedRegExp\r\n    }\r\n\r\n    const mask = format.replace(/([0a*]*)/g, value => {\r\n      // adds ` to prevent symbols shift back\r\n      return value.length ? `\\`${value}` : '';\r\n    });\r\n\r\n    return new IMask.MaskedPattern({\r\n      mask,\r\n      lazy: false,\r\n      placeholderChar: ' '\r\n    });\r\n  }\r\n\r\n  private buildNumberMask(format?: string): IMask.MaskedNumber {\r\n    this.unmask = 'typed';\r\n\r\n    if (!format?.length) {\r\n      return new NullableNumberMask({\r\n        mask: Number,\r\n        scale: 0,\r\n        signed: true\r\n      }) as IMask.MaskedNumber\r\n    }\r\n\r\n    const max = parseFloat(format.replace(/[#&-]/g, '9').replace(/,/g, ''));\r\n    const min = format.includes('&') ? format.includes('-') ? max * -1 : 0 : NaN;\r\n    return new NullableNumberMask({\r\n      mask: Number,\r\n      thousandsSeparator: format!.includes(',') ? ',' : '',\r\n      radix: '.',\r\n      padFractionalZeros: format!.includes('.') ? true : false,\r\n      scale: format!.split('.')[1]?.length || 0,\r\n      signed: format!.includes('-') ? true : false,\r\n      max: isFinite(max) ? max : undefined,\r\n      min: isFinite(min) ? min : undefined\r\n    }) as IMask.MaskedNumber;\r\n  }\r\n\r\n  private buildNumberSearchMask(): IMask.MaskedRegExp {\r\n    return {\r\n      mask: /^\\s*[!\\-.\\d:<>=|\\s+]*\\s*$/\r\n    } as IMask.MaskedRegExp\r\n  }\r\n\r\n  private buildDateMask(): IMask.MaskedDate {\r\n    this.unmask = 'typed';\r\n    this.helpText = 'MM/dd/yyyy';\r\n\r\n    return new IMask.MaskedDate({\r\n      mask: Date,\r\n      pattern: 'MM/`dd/`yyyy',\r\n      placeholderChar: ' ',\r\n      blocks: {\r\n        MM: {\r\n          mask: IMask.MaskedRange,\r\n          from: 1,\r\n          to: 12,\r\n          maxLength: 2\r\n        } as IMask.FactoryArg,\r\n        dd: {\r\n          mask: IMask.MaskedRange,\r\n          from: 1,\r\n          to: 31,\r\n          maxLength: 2\r\n        } as IMask.FactoryArg,\r\n        yyyy: {\r\n          mask: IMask.MaskedRange,\r\n          from: 1900,\r\n          to: 9999,\r\n          maxLength: 4\r\n        } as IMask.FactoryArg\r\n      },\r\n      autofix: false,\r\n      lazy: false,\r\n      overwrite: false,\r\n      format: (value: any): string => {\r\n        return dateIsValid(value) ? dateFormat(value, 'MM/dd/yyyy') : '';\r\n      },\r\n      parse: (value: string): Date => {\r\n        return dateParse(value, 'MM/dd/yyyy', new Date());\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildDateTimeMask(): IMask.MaskedDate {\r\n    this.unmask = 'typed';\r\n    this.helpText = 'MM/dd/yyyy hh:mm:ss aa';\r\n\r\n    return new IMask.MaskedDate({\r\n      mask: Date,\r\n      pattern: 'MM/`dd/`yyyy `hh:`mm:`ss `aa',\r\n      placeholderChar: ' ',\r\n      blocks: {\r\n        MM: {\r\n          mask: IMask.MaskedRange,\r\n          from: 1,\r\n          to: 12,\r\n          maxLength: 2\r\n        } as IMask.FactoryArg,\r\n        dd: {\r\n          mask: IMask.MaskedRange,\r\n          from: 1,\r\n          to: 31,\r\n          maxLength: 2\r\n        } as IMask.FactoryArg,\r\n        yyyy: {\r\n          mask: IMask.MaskedRange,\r\n          from: 1900,\r\n          to: 9999,\r\n          maxLength: 4\r\n        } as IMask.FactoryArg,\r\n        hh: {\r\n          mask: IMask.MaskedRange,\r\n          from: 1,\r\n          to: 12,\r\n          maxLength: 2\r\n        } as IMask.FactoryArg,\r\n        mm: {\r\n          mask: IMask.MaskedRange,\r\n          from: 0,\r\n          to: 59,\r\n          maxLength: 2\r\n        } as IMask.FactoryArg,\r\n        ss: {\r\n          mask: IMask.MaskedRange,\r\n          from: 0,\r\n          to: 59,\r\n          maxLength: 2\r\n        } as IMask.FactoryArg,\r\n        aa: {\r\n          mask: IMask.MaskedEnum,\r\n          enum: ['am', 'pm']\r\n        } as IMask.FactoryArg\r\n      },\r\n      autofix: false,\r\n      lazy: false,\r\n      overwrite: false,\r\n      format: (value: any): string => {\r\n        return dateIsValid(value) ? dateFormat(value, 'MM/dd/yyyy hh:mm:ss aaa') : '';\r\n      },\r\n      parse: (value: string): Date => {\r\n        return dateParse(value, 'MM/dd/yyyy hh:mm:ss aaa', new Date());\r\n      }\r\n    })\r\n  }\r\n\r\n  private buildDateSearchMask(): IMask.MaskedRegExp {\r\n    return {\r\n      mask: /^\\s*[!\\-.\\d:<>=|\\s/]*\\s*$/\r\n    } as IMask.MaskedRegExp\r\n  }\r\n}\r\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105]}