{"version":3,"file":"common.4abf7ca149f132c4.js","mappings":"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","names":["CardComponent","raisedClass","this","border","outlinedClass","constructor","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","Xpm","selectors","hostVars","hostBindings","rf","ctx","i0","CommonModule","styles","AutoFocusDirective","element","ngAfterViewInit","window","requestAnimationFrame","nativeElement","focus","lG2","standalone","FormControlInvalidPipe","transform","value","args","some","v","Yjl","pure","TextFieldComponentDelegate","FormFieldComponentDelegate","config","super","_build","_a","_b","textField","document","createElement","TEXT_FIELD_CONSTANTS","elementName","_inputElement","_buildInputElement","_config","options","leadingElement","slot","appendChild","trailingElement","_configure","helperText","setHelperText","label","_createLabel","disabled","invalid","_element","inputElement","labelElement","_labelElement","onChange","listener","addEventListener","evt","target","onFocus","onBlur","setLabel","text","textContent","removeChild","undefined","_helperTextElement","floatLabel","id","setAttribute","_c","_d","_e","type","placeholder","requiredArgs","required","length","TypeError","isValid","dirtyDate","arguments","isDate","Date","_typeof","Object","prototype","toString","call","date","toDate","isNaN","Number","argument","argStr","getTime","console","warn","Error","stack","NaN","lastValueFrom","source","hasConfig","Promise","resolve","reject","_value","_hasValue","subscribe","next","error","complete","defaultValue","EmptyError","obj","Symbol","iterator"],"sourceRoot":"webpack:///","sources":["./src/app/shared/components/card/card.component.ts","./src/app/shared/components/card/card.component.html","./src/app/shared/directives/auto-focus/auto-focus.directive.ts","./src/app/shared/pipes/form-control-invalid.pipe.ts","./node_modules/@tylertech/forge/esm/text-field/text-field-component-delegate.js","./node_modules/date-fns/esm/_lib/requiredArgs/index.js","./node_modules/date-fns/esm/isValid/index.js","./node_modules/date-fns/esm/isDate/index.js","./node_modules/date-fns/esm/toDate/index.js","./node_modules/rxjs/dist/esm/internal/lastValueFrom.js","./node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, HostBinding, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class CardComponent {\r\n  @HostBinding('class.app-card--raised')\r\n  public get raisedClass() { return this.border === 'raised'; }\r\n  @HostBinding('class.app-card--outlined')\r\n  public get outlinedClass() { return this.border === 'outlined'; }\r\n\r\n  @Input()\r\n  public border: 'raised' | 'outlined' = 'raised';\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","<forge-toolbar class=\"header\" slot=\"header\">\r\n  <ng-content select=\"[app-card-header]\"></ng-content>\r\n</forge-toolbar>\r\n<div class=\"body\">\r\n  <ng-content></ng-content>\r\n</div>\r\n<forge-toolbar class=\"footer\" slot=\"footer\" inverted=\"true\">\r\n  <ng-content select=\"[app-card-footer]\"></ng-content>\r\n</forge-toolbar>","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAutoFocus]',\r\n  standalone: true\r\n})\r\nexport class AutoFocusDirective implements AfterViewInit {\r\n  constructor(private element: ElementRef) { }\r\n\r\n  public ngAfterViewInit() {\r\n    window.requestAnimationFrame(() => {\r\n      this.element.nativeElement.focus();\r\n    });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'appFormControlInvalid',\r\n  standalone: true\r\n})\r\nexport class FormControlInvalidPipe implements PipeTransform {\r\n  transform(value: boolean[], ...args: any[]) {\r\n    return value.some(v => v === false) ? false : true;\r\n  }\r\n}","/**\n * @license\n * Copyright 2023 Tyler Technologies, Inc. \n * License: Apache-2.0\n */\nimport { FormFieldComponentDelegate } from '../core/delegates/form-field-component-delegate';\nimport { TEXT_FIELD_CONSTANTS } from './text-field-constants';\nexport class TextFieldComponentDelegate extends FormFieldComponentDelegate {\n    constructor(config) {\n        super(config);\n    }\n    _build() {\n        var _a, _b;\n        const textField = document.createElement(TEXT_FIELD_CONSTANTS.elementName);\n        this._inputElement = this._buildInputElement(textField);\n        if ((_a = this._config.options) === null || _a === void 0 ? void 0 : _a.leadingElement) {\n            this._config.options.leadingElement.slot = 'leading';\n            textField.appendChild(this._config.options.leadingElement);\n        }\n        if ((_b = this._config.options) === null || _b === void 0 ? void 0 : _b.trailingElement) {\n            this._config.options.trailingElement.slot = 'trailing';\n            textField.appendChild(this._config.options.trailingElement);\n        }\n        textField.appendChild(this._inputElement);\n        return textField;\n    }\n    _configure() {\n        var _a, _b;\n        if ((_a = this._config.options) === null || _a === void 0 ? void 0 : _a.helperText) {\n            this.setHelperText(this._config.options.helperText);\n        }\n        if (typeof ((_b = this._config.options) === null || _b === void 0 ? void 0 : _b.label) === 'string') {\n            this._createLabel(this._config.options.label);\n        }\n    }\n    get value() {\n        return this._inputElement.value;\n    }\n    set value(value) {\n        this._inputElement.value = value;\n    }\n    get disabled() {\n        return this._inputElement.disabled;\n    }\n    set disabled(value) {\n        this._inputElement.disabled = value;\n    }\n    get invalid() {\n        return this._element.invalid || false;\n    }\n    set invalid(value) {\n        this._element.invalid = value;\n    }\n    get inputElement() {\n        return this._inputElement;\n    }\n    get labelElement() {\n        return this._labelElement;\n    }\n    onChange(listener) {\n        this._inputElement.addEventListener('input', evt => listener(evt.target.value));\n    }\n    onFocus(listener) {\n        this._inputElement.addEventListener('focus', evt => listener(evt));\n    }\n    onBlur(listener) {\n        this._inputElement.addEventListener('blur', evt => listener(evt));\n    }\n    setLabel(text) {\n        if (text) {\n            if (this._labelElement) {\n                this._labelElement.textContent = text;\n            }\n            else {\n                this._createLabel(text);\n            }\n        }\n        else if (this._labelElement) {\n            this._element.removeChild(this._labelElement);\n            this._labelElement = undefined;\n        }\n    }\n    setHelperText(text) {\n        if (text) {\n            if (!this._helperTextElement) {\n                this._helperTextElement = document.createElement('span');\n                this._helperTextElement.slot = 'helper-text';\n                this._element.appendChild(this._helperTextElement);\n            }\n            this._helperTextElement.textContent = text;\n        }\n        else if (this._helperTextElement) {\n            this._element.removeChild(this._helperTextElement);\n            this._helperTextElement = undefined;\n        }\n    }\n    floatLabel(value) {\n        this._element.floatLabel(value);\n    }\n    _createLabel(text) {\n        var _a;\n        this._labelElement = document.createElement('label');\n        this._labelElement.textContent = text;\n        if ((_a = this._config.options) === null || _a === void 0 ? void 0 : _a.id) {\n            this._labelElement.setAttribute('for', this._config.options.id);\n        }\n        this._element.appendChild(this._labelElement);\n    }\n    _buildInputElement(textField) {\n        var _a, _b, _c, _d, _e;\n        const inputElement = document.createElement('input');\n        inputElement.type = ((_a = this._config.options) === null || _a === void 0 ? void 0 : _a.type) || 'text';\n        if (((_b = this._config.options) === null || _b === void 0 ? void 0 : _b.value) !== undefined) {\n            inputElement.value = this._config.options.value;\n        }\n        if ((_c = this._config.options) === null || _c === void 0 ? void 0 : _c.id) {\n            inputElement.id = this._config.options.id;\n        }\n        if (typeof ((_d = this._config.options) === null || _d === void 0 ? void 0 : _d.placeholder) === 'string') {\n            inputElement.placeholder = (_e = this._config.options) === null || _e === void 0 ? void 0 : _e.placeholder;\n        }\n        textField.appendChild(inputElement);\n        return inputElement;\n    }\n}\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || _typeof(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","import { EmptyError } from './util/EmptyError';\nexport function lastValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        let _hasValue = false;\n        let _value;\n        source.subscribe({\n            next: (value) => {\n                _value = value;\n                _hasValue = true;\n            },\n            error: reject,\n            complete: () => {\n                if (_hasValue) {\n                    resolve(_value);\n                }\n                else if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n    });\n}\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}"],"x_google_ignoreList":[4,5,6,7,8,9,10]}