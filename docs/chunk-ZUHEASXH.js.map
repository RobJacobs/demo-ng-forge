{
  "version": 3,
  "sources": ["src/app/test/test.component.ts", "src/app/test/test.component.html", "src/app/test/parent/parent.component.ts", "src/app/test/parent/parent.component.html", "src/app/test/child/child.component.ts", "src/app/test/child/child.component.html", "src/app/test/routes.ts"],
  "sourcesContent": ["import { AfterViewInit, Component, ContentChildren, ElementRef, inject, QueryList, ViewChildren } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { CardComponent } from '../shared/components/card/card.component';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  standalone: true,\r\n  imports: [RouterOutlet],\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent implements AfterViewInit {\r\n  private elementRef = inject(ElementRef);\r\n  @ViewChildren(CardComponent)\r\n  public cardComponentViewChildren: QueryList<CardComponent>;\r\n\r\n  @ContentChildren(CardComponent, { descendants: true })\r\n  public cardComponentContentChildren: QueryList<CardComponent>;\r\n\r\n  public ngAfterViewInit(): void {\r\n    console.log(this.cardComponentContentChildren);\r\n    console.log(this.cardComponentViewChildren);\r\n  }\r\n\r\n  public onClick() {\r\n    console.log(this.cardComponentContentChildren);\r\n    console.log(this.cardComponentViewChildren);\r\n    const cardComponents = this.elementRef.nativeElement.querySelectorAll('app-card');\r\n  }\r\n}\r\n", "<button type=\"button\" (click)=\"onClick()\">Click</button>\r\n<router-outlet></router-outlet>\r\n", "import { CommonModule } from '@angular/common';\r\nimport { Component, DestroyRef, ElementRef, inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, tap, takeUntil, Subject, of, fromEvent } from 'rxjs';\r\nimport { ForgeButtonModule, ForgeDialogModule, ForgeTextFieldModule, ForgeToolbarModule } from '@tylertech/forge-angular';\r\nimport { isObject } from '@tylertech/forge-core';\r\n\r\nimport { AppCacheService } from 'src/app/app-cache.service';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { AbstractControl, AsyncValidatorFn, FormControl, FormGroup, ReactiveFormsModule, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\n\r\n@Component({\r\n  selector: 'app-test-parent',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, ForgeTextFieldModule, ForgeToolbarModule, ForgeButtonModule, ForgeDialogModule],\r\n  templateUrl: './parent.component.html',\r\n  styleUrls: ['./parent.component.scss']\r\n})\r\nexport class ParentComponent {\r\n  private router = inject(Router);\r\n  private appDataService = inject(AppDataService);\r\n  private appCache = inject(AppCacheService);\r\n  private asyncValidators = new Map<string, { value: any; control: AbstractControl; response: Subject<ValidationErrors | null> }>();\r\n  private keydownBuffer: KeyboardEvent[] = [];\r\n\r\n  public formGroup = new FormGroup({\r\n    name: new FormControl('', { asyncValidators: [this.asyncValidator('name')] }),\r\n    age: new FormControl('', { asyncValidators: [this.asyncValidator('age')] }),\r\n    location: new FormControl('', { asyncValidators: [this.asyncValidator('location')] })\r\n  });\r\n\r\n  public testObject = {\r\n    name: 'name',\r\n    age: 20,\r\n    location: {\r\n      street: 'street',\r\n      city: 'city',\r\n      zip: {\r\n        code: 'code'\r\n      }\r\n    },\r\n    pets: ['dog', 'cat', 'rock'],\r\n    friends: [{ name: 'Bart' }, { name: 'Lisa' }, { name: 'Maggie' }]\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  public onNavigate(route: string) {\r\n    this.router.navigate([route]);\r\n  }\r\n\r\n  public onMakeRequest() {\r\n    this.getLongRequest().subscribe();\r\n  }\r\n\r\n  public onValidate() {\r\n    if (this.asyncValidators.size) {\r\n      const key = this.asyncValidators.keys().next().value;\r\n      const validator = this.asyncValidators.get(key);\r\n      // validator.response.next({ wrongFormat: true });\r\n      validator.response.next(null);\r\n      validator.response.complete();\r\n      validator.control.markAsPristine();\r\n      validator.control.markAsUntouched();\r\n      this.asyncValidators.delete(key);\r\n    }\r\n\r\n    console.log(this.objectPaths(this.testObject));\r\n\r\n    this.formGroup.controls.name.disable();\r\n  }\r\n\r\n  public onResetForm() {\r\n    this.formGroup.markAsPristine();\r\n    this.formGroup.markAsUntouched();\r\n  }\r\n\r\n  private getLongRequest(): Observable<any> {\r\n    return this.appDataService.getLongRequest().pipe(\r\n      tap({\r\n        next: (result) => console.log(result),\r\n        error: (error) => console.log(error)\r\n      }),\r\n      takeUntil(this.appCache.cancelHttpRequests)\r\n    );\r\n  }\r\n\r\n  private asyncValidator(name: string): AsyncValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!control.dirty) {\r\n        return of(null);\r\n      }\r\n\r\n      if (!this.asyncValidators.has(name)) {\r\n        this.asyncValidators.set(name, { value: control.value, control, response: new Subject<ValidationErrors | null>() });\r\n      }\r\n\r\n      return this.asyncValidators.get(name).response;\r\n    };\r\n  }\r\n\r\n  private objectPaths(obj: any, parentKey = ''): Map<string, string> {\r\n    const result = new Map<string, string>();\r\n    Object.keys(obj).forEach((key) => {\r\n      const path = parentKey.length ? `${parentKey}.${key}` : key;\r\n      const value = obj[key];\r\n      if (isObject(value)) {\r\n        Object.assign(result, this.objectPaths(obj[key], path));\r\n      } else {\r\n        result[path] = value;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n}\r\n", "<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--subheading4\">Parent</h2>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <p>Parent content</p>\r\n  <form novalidate autocomplete=\"off\" [formGroup]=\"formGroup\" class=\"form\">\r\n    <forge-text-field>\r\n      <input type=\"text\" id=\"test--parent--name\" formControlName=\"name\" />\r\n      <label for=\"test--parent--name\" slot=\"label\">Name</label>\r\n      <span slot=\"support-text\">{{ formGroup.controls.name.status }} | {{ formGroup.controls.name.touched }} | {{ formGroup.controls.name.dirty }}</span>\r\n    </forge-text-field>\r\n    <forge-text-field>\r\n      <input type=\"text\" id=\"test--parent--age\" formControlName=\"age\" />\r\n      <label for=\"test--parent--age\" slot=\"label\">Age</label>\r\n      <span slot=\"support-text\">{{ formGroup.controls.age.status }} | {{ formGroup.controls.age.touched }} | {{ formGroup.controls.age.dirty }}</span>\r\n    </forge-text-field>\r\n    <forge-text-field>\r\n      <input type=\"text\" id=\"test--parent--location\" formControlName=\"location\" />\r\n      <label for=\"test--parent--location\" slot=\"label\">Location</label>\r\n      <span slot=\"support-text\">{{ formGroup.controls.location.status }} | {{ formGroup.controls.location.touched }} | {{ formGroup.controls.location.dirty }}</span>\r\n    </forge-text-field>\r\n    <p>{{ formGroup.status }} | {{ formGroup.touched }} | {{ formGroup.dirty }}</p>\r\n  </form>\r\n  <div style=\"display: flex; column-gap: 16px\">\r\n    <forge-button variant=\"raised\" (click)=\"onNavigate('test/child')\">View child</forge-button>\r\n    <forge-button variant=\"raised\" (click)=\"onMakeRequest()\">Make request</forge-button>\r\n    <forge-button variant=\"raised\" (click)=\"onValidate()\">Validate</forge-button>\r\n    <forge-button variant=\"raised\" (click)=\"onResetForm()\">Reset form</forge-button>\r\n  </div>\r\n</div>\r\n", "import { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, Component, ContentChildren, inject, QueryList, ViewChildren } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ForgeButtonModule, ForgeCheckboxModule, ForgeIconButtonModule, ForgeIconModule, ForgeOptionModule, ForgeSelectModule, ForgeTextFieldModule, ForgeToolbarModule } from '@tylertech/forge-angular';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { AutoFocusDirective } from 'src/app/shared/directives/auto-focus/auto-focus.directive';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { CardComponent } from 'src/app/shared/components/card/card.component';\r\n\r\n@Component({\r\n  selector: 'app-test-child',\r\n  standalone: true,\r\n  imports: [CommonModule, A11yModule, ForgeButtonModule, ForgeIconButtonModule, ForgeIconModule, ForgeToolbarModule, ForgeTextFieldModule, ForgeSelectModule, ForgeOptionModule, ForgeCheckboxModule, AutoFocusDirective, CardComponent],\r\n  templateUrl: './child.component.html',\r\n  styleUrls: ['./child.component.scss']\r\n})\r\nexport class ChildComponent implements AfterViewInit {\r\n  private router = inject(Router);\r\n\r\n  @ViewChildren(CardComponent)\r\n  public cardComponentViewChildren: QueryList<CardComponent>;\r\n\r\n  @ContentChildren(CardComponent, { descendants: true })\r\n  public cardComponentContentChildren: QueryList<CardComponent>;\r\n\r\n  public ngAfterViewInit(): void {\r\n    // console.log(this.cardComponentContentChildren);\r\n    // console.log(this.cardComponentViewChildren);\r\n  }\r\n\r\n  public onNavigate(route: string) {\r\n    this.router.navigate([route]);\r\n  }\r\n}\r\n", "<forge-toolbar class=\"header\">\r\n  <div slot=\"start\">\r\n    <forge-icon-button (click)=\"onNavigate('test/parent')\" aria-label=\"Go back\">\r\n      <forge-icon name=\"arrow_back\"></forge-icon>\r\n    </forge-icon-button>\r\n    <h2 class=\"forge-typography--subheading4\">Child</h2>\r\n  </div>\r\n</forge-toolbar>\r\n<div class=\"body\" cdkTrapFocus>\r\n  <forge-button variant=\"raised\" appAutoFocus>Focus</forge-button>\r\n  <forge-text-field>\r\n    <input type=\"text\" id=\"test--child--name\" />\r\n    <label for=\"test--child--name\" slot=\"label\">Name</label>\r\n  </forge-text-field>\r\n  <forge-select label=\"Pet\">\r\n    <forge-option value=\"cat\">Cat</forge-option>\r\n    <forge-option value=\"dog\">Dog</forge-option>\r\n    <forge-option value=\"rock\">Rock</forge-option>\r\n  </forge-select>\r\n  <forge-checkbox>Include</forge-checkbox>\r\n  <input type=\"text\" />\r\n  <input type=\"text\" />\r\n\r\n  <app-card border=\"raised\">\r\n    <div app-card-header>Outer card</div>\r\n    <div style=\"display: flex; flex-direction: row; gap: 16px\">\r\n      <app-card border=\"outlined\">\r\n        <div app-card-header>Card A - 01</div>\r\n        <div style=\"display: flex; flex-direction: column; gap: 16px\">\r\n          <app-card border=\"outlined\">\r\n            <div app-card-header>Card A - 01 - 01</div>\r\n          </app-card>\r\n          <app-card border=\"outlined\">\r\n            <div app-card-header>Card B - 01 - 02</div>\r\n          </app-card>\r\n        </div>\r\n      </app-card>\r\n      <app-card border=\"outlined\">\r\n        <div app-card-header>Card B - 01</div>\r\n        <div style=\"display: flex; flex-direction: column; gap: 16px\">\r\n          <app-card border=\"outlined\">\r\n            <div app-card-header>Card B - 01 - 01</div>\r\n          </app-card>\r\n          <app-card border=\"outlined\">\r\n            <div app-card-header>Card B - 01 - 02</div>\r\n          </app-card>\r\n        </div>\r\n      </app-card>\r\n    </div>\r\n  </app-card>\r\n</div>\r\n", "import { Routes } from '@angular/router';\r\n\r\nimport { TestComponent } from './test.component';\r\nimport { ParentComponent } from './parent/parent.component';\r\nimport { ChildComponent } from './child/child.component';\r\n\r\nexport const TEST_ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: TestComponent,\r\n    children: [\r\n      { path: 'parent', component: ParentComponent },\r\n      { path: 'child', component: ChildComponent },\r\n      { path: '', redirectTo: 'parent', pathMatch: 'full' }\r\n    ]\r\n  }\r\n];\r\n"],
  "mappings": "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",
  "names": ["TestComponent", "constructor", "elementRef", "inject", "ElementRef", "ngAfterViewInit", "console", "log", "cardComponentContentChildren", "cardComponentViewChildren", "onClick", "cardComponents", "nativeElement", "querySelectorAll", "selectors", "contentQueries", "rf", "ctx", "dirIndex", "CardComponent", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275element", "RouterOutlet", "styles", "ParentComponent", "constructor", "router", "inject", "Router", "appDataService", "AppDataService", "appCache", "AppCacheService", "asyncValidators", "Map", "keydownBuffer", "formGroup", "FormGroup", "name", "FormControl", "asyncValidator", "age", "location", "testObject", "street", "city", "zip", "code", "pets", "friends", "onNavigate", "route", "navigate", "onMakeRequest", "getLongRequest", "subscribe", "onValidate", "size", "key", "keys", "next", "value", "validator", "get", "response", "complete", "control", "markAsPristine", "markAsUntouched", "delete", "console", "log", "objectPaths", "controls", "disable", "onResetForm", "pipe", "tap", "result", "error", "takeUntil", "cancelHttpRequests", "dirty", "has", "set", "Subject", "of", "obj", "parentKey", "Object", "forEach", "path", "length", "isObject", "assign", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275listener", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275textInterpolate3", "status", "touched", "CommonModule", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormGroupDirective", "FormControlName", "ForgeTextFieldModule", "TextFieldComponent", "ForgeToolbarModule", "ToolbarComponent", "ForgeButtonModule", "ButtonComponent", "ForgeDialogModule", "styles", "ChildComponent", "constructor", "router", "inject", "Router", "ngAfterViewInit", "onNavigate", "route", "navigate", "selectors", "contentQueries", "rf", "ctx", "dirIndex", "CardComponent", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275text", "CommonModule", "A11yModule", "CdkTrapFocus", "ForgeButtonModule", "ButtonComponent", "ForgeIconButtonModule", "IconButtonComponent", "IconComponent", "ForgeIconModule", "ForgeToolbarModule", "ToolbarComponent", "ForgeTextFieldModule", "TextFieldComponent", "ForgeSelectModule", "SelectComponent", "OptionComponent", "ForgeOptionModule", "ForgeCheckboxModule", "CheckboxComponent", "AutoFocusDirective", "styles", "TEST_ROUTES", "path", "component", "TestComponent", "children", "ParentComponent", "ChildComponent", "redirectTo", "pathMatch"]
}
