{"version":3,"file":"360.106b71a2cf817c69.js","mappings":"uNAoBO,IAAMA,EAAqB,MAA5B,MAAOA,EAbbC,cAcUC,KAAAC,mBAAwD,GACzDD,KAAAE,UAAYF,KAAKC,mBACjBD,KAAAG,aAAuC,CAC5C,CAAEC,SAAU,OAAQC,OAAQ,QAC5B,CACEA,OAAQ,QAASC,MAAO,GAAIC,MAAOC,KAAUC,OAC7CC,SAAUA,CAACC,EAAkBC,EAA0BC,KACrD,GAAKA,EAAKC,MAAMC,WAAW,MAA8B,IAAtBF,EAAKC,MAAME,QAAiBH,EAAKC,MAAMC,WAAW,QAAS,CAC5F,MAAME,EAAaC,SAASC,cAAc,OAC1CF,EAAWG,MAAMC,OAAS,OAC1BJ,EAAWG,MAAMd,MAAQ,OACzBW,EAAWG,MAAME,gBAAkBT,EAAKC,MACxCF,EAAYW,YAAYN,EAC1B,CACA,MAAO,KAGX,CAAEb,SAAU,QAASC,OAAQ,UAGxBL,KAAAwB,eAAyB,GAgBzBxB,KAAAyB,YAAWC,MAAS,KACzB1B,KAAKE,UAAYF,KAAKC,mBAAmB0B,OAAOC,GAAKA,EAAEC,KAAKC,SAAS9B,KAAKwB,gBAAe,EACxF,KAhBIO,WACLC,MAAMC,KAAKf,SAASgB,aAAaC,QAAQC,IACvC,IACEJ,MAAMC,KAAKG,EAAGC,UAAUV,OAAQW,GAAWA,EAAOC,QAAQxB,WAAW,UAAUoB,QAAQG,IACrFtC,KAAKC,mBAAmBuC,QAAQF,EAAOC,QAAQE,MAAM,KAAK,GAAGC,QAAQ,IAAK,IAAID,MAAM,KAAKE,IAAIC,GAAKA,EAAEC,QAAQlB,OAAOiB,GAAKA,EAAE7B,WAAW,YAAY4B,IAAIC,IACnJ,MAAME,EAAOF,EAAEH,MAAM,KACrB,MAAO,CAAEZ,KAAMiB,EAAK,GAAGD,OAAQ/B,MAAOgC,EAAK,GAAGD,OAAM,GACpD,EAEN,OAAU,IAEZ7C,KAAKE,UAAYF,KAAKC,kBACxB,CAAC8C,SAAA/C,KAAA,mBAAAgD,iBAnCUlD,EAAqB,EAAAiD,SAAA/C,KAAA,UAAAiD,EAAAC,IAAA,MAArBpD,EAAqBqD,UAAA,wBAAAC,YAAA,EAAAC,SAAA,CAAAC,OAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,6PAAA/C,SAAA,SAAAgD,EAAAC,GAAA,EAAAD,ICnBhCJ,MADF,oBACEA,CAD4B,UAC2BA,MAAA,yBAAmBA,QAExEA,MADF,uBACEA,CAD6B,aACVA,MAAA,yBAAAM,GAAAN,aAAAK,EAAAnC,eAAAoC,KAAAD,EAAAnC,eAAAoC,IAAA,GAA6BN,MAAA,0BAASK,EAAAlC,UAAU,GAEvE6B,YAGEA,MADF,UACEA,CADgB,WAEdA,MAAA,mBAEJA,iBARuBA,MAAA,GAAAA,MAAA,UAAAK,EAAAnC,gBAMN8B,MAAA,GAAsCA,MAAtC,uBAAAK,EAAAxD,aAAsCmD,CAAD,OAAAK,EAAAzD,2BDElD2D,KACAC,KAAWC,eACXC,MAAgBC,MAChBC,MAAoBD,MACpBE,MAAkBF,OAAAG,OAAA,4iBAKTtE,CAAqB","names":["CssVariablesComponent","constructor","this","globalCssVariables","recordset","tableColumns","property","header","width","align","CellAlign","Center","template","rowIndex","cellElement","data","value","startsWith","length","divElement","document","createElement","style","height","backgroundColor","appendChild","variableFilter","onFilter","debounce","filter","v","name","includes","ngOnInit","Array","from","styleSheets","forEach","ss","cssRules","ssRule","cssText","push","split","replace","map","r","trim","rule","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_2__","VBU","selectors","standalone","features","i0","decls","vars","consts","rf","ctx","$event","CommonModule","FormsModule","i1","ForgeTableModule","i2","ForgeTextFieldModule","ForgeToolbarModule","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/css-variables/css-variables.component.ts","./src/app/css-variables/css-variables.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { debounce } from '@tylertech/forge-core';\r\nimport { CellAlign, IColumnConfiguration } from '@tylertech/forge';\r\nimport { ForgeTableModule, ForgeTextFieldModule, ForgeToolbarModule } from '@tylertech/forge-angular';\r\n\r\n@Component({\r\n  selector: 'app-css-variables',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ForgeTableModule,\r\n    ForgeTextFieldModule,\r\n    ForgeToolbarModule\r\n  ],\r\n  templateUrl: './css-variables.component.html',\r\n  styleUrl: './css-variables.component.scss'\r\n})\r\nexport class CssVariablesComponent implements OnInit {\r\n  private globalCssVariables: { name: string; value: string }[] = [];\r\n  public recordset = this.globalCssVariables;\r\n  public tableColumns: IColumnConfiguration[] = [\r\n    { property: 'name', header: 'Name' },\r\n    {\r\n      header: 'Color', width: 48, align: CellAlign.Center,\r\n      template: (rowIndex: number, cellElement: HTMLElement, data: { name: string; value: string; }) => {\r\n        if ((data.value.startsWith('#') && data.value.length === 7) || data.value.startsWith('rgba')) {\r\n          const divElement = document.createElement('div');\r\n          divElement.style.height = '32px';\r\n          divElement.style.width = '32px';\r\n          divElement.style.backgroundColor = data.value;\r\n          cellElement.appendChild(divElement);\r\n        }\r\n        return '';\r\n      }\r\n    },\r\n    { property: 'value', header: 'Value' },\r\n\r\n  ];\r\n  public variableFilter: string = '';\r\n\r\n  public ngOnInit() {\r\n    Array.from(document.styleSheets).forEach(ss => {\r\n      try {\r\n        Array.from(ss.cssRules).filter((ssRule) => ssRule.cssText.startsWith(':root')).forEach(ssRule => {\r\n          this.globalCssVariables.push(...ssRule.cssText.split('{')[1].replace('}', '').split(';').map(r => r.trim()).filter(r => r.startsWith('--forge')).map(r => {\r\n            const rule = r.split(':');\r\n            return { name: rule[0].trim(), value: rule[1].trim() }\r\n          }));\r\n        });\r\n      } catch { }\r\n    });\r\n    this.recordset = this.globalCssVariables;\r\n  }\r\n\r\n  public onFilter = debounce(() => {\r\n    this.recordset = this.globalCssVariables.filter(v => v.name.includes(this.variableFilter));\r\n  }, 500);\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--subheading4\">Forge CSS Variables</h2>\r\n  <forge-text-field slot=\"start\">\r\n    <input type=\"text\" [(ngModel)]=\"variableFilter\" (input)=\"onFilter()\" placeholder=\"Filter\" aria-label=\"Filter variables\" />\r\n  </forge-text-field>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <div class=\"body__table\">\r\n    <forge-table [columnConfigurations]=\"tableColumns\" [data]=\"recordset\"></forge-table>\r\n  </div>\r\n</div>"],"x_google_ignoreList":[]}