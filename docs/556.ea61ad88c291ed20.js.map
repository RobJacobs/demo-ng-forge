{"version":3,"file":"556.ea61ad88c291ed20.js","mappings":"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","names":["i0","QueryBuilderComponent_For_3_ng_container_1_Template","filterFormTemplate_r4","_c0","filterGroup_r2","filterIndex_r3","QueryBuilderComponent_ng_template_11_Conditional_0_ng_container_0_Template","filterHeaderTemplate_r7","_c1","formGroup_r6","operator_r8","value","label","controls","minValue","index_r10","maxValue","errors","required","range","QueryBuilderComponent_ng_template_11_Conditional_26_For_2_ng_container_0_Template","QueryBuilderComponent_ng_template_11_Conditional_26_For_2_ng_container_2_Template","filter_r12","filterIndex_r13","QueryBuilderComponent_ng_template_11_Conditional_26_For_2_Template","filters","QueryBuilderComponent_ng_template_11_Conditional_0_Template","QueryBuilderComponent_ng_template_11_For_13_Template","QueryBuilderComponent_ng_template_11_Conditional_16_Template","QueryBuilderComponent_ng_template_11_Conditional_17_Template","$event","_r5","formGroup","ctx_r10","onAddFilter","detail","onDeleteFilter","QueryBuilderComponent_ng_template_11_Conditional_26_Template","propertyFilter","property","operator","operatorOptions","filterOptions","length","condition_r14","QueryBuilderComponent_ng_template_13_For_3_Template","formGroup_r15","get","conditionOptions","QueryBuilderComponent","constructor","this","FormGroup","FormArray","buildFilterFormGroup","propertyOptions","Utils","filterData","key","type","push","index","parent","indexOf","insert","formArray","removeAt","filter","FormControl","validators","Validators","condition","validateFilterValue","controlName","control","isDefined","toString","localeCompare","navigator","language","numeric","ignorePunctuation","setErrors","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","QueryBuilderComponent_For_3_Template","_r1","QueryBuilderComponent_ng_template_11_Template","QueryBuilderComponent_ng_template_13_Template","getRawValue","CommonModule","i1","ReactiveFormsModule","i2","ForgeAutocompleteModule","i3","ForgeButtonModule","ForgeIconButtonModule","ForgeIconModule","ForgeMenuModule","ForgeOptionModule","ForgeSelectModule","ForgeTextFieldModule","FormControlInvalidDirective","styles","sortData","data","direction","slice","sort","a","b","getPropertyValue","comparator","groupData","isArray","reduce","previousValue","currentValue","map","f","isString","substring","Object","defineProperty","toLowerCase","rec","every","strict","Date","getTime","isNaN","parseFloat","navigateBack","location","router","fallbackRoute","getState","navigationId","navigate","back","elementId","prefix","Math","random","replace","formatDate","format","formatNumber","uniqueId","parseQueryStringParameters","params","queryIndex","window","href","httpParams","HttpParams","fromString","keys","forEach","k","getAll","enumerable","writable","reduceObject","object","reduced","trim","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","target","eventName","options","resultSelector","isFunction","undefined","pipe","mapOneOrManyArgs","add","remove","isEventTarget","addEventListener","removeEventListener","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","mergeMap","subTarget","innerFrom","TypeError","Observable","subscriber","args","next","timer","dueTime","intervalOrScheduler","scheduler","asyncScheduler","intervalDuration","isScheduler","due","isValidDate","now","n","schedule","closed","complete","distinctUntilChanged","keySelector","identity","defaultCompare","operate","source","previousKey","first","subscribe","createOperatorSubscriber","currentKey","Action","Subscription","work","super","state","delay","intervalProvider","setInterval","timeout","delegate","clearInterval","handle","AsyncAction","pending","_a","id","recycleAsyncId","requestAsyncId","_id","flush","bind","_scheduler","execute","Error","error","_execute","_delay","errorValue","errored","e","unsubscribe","actions","arrRemove","Scheduler","schedulerActionCtor","dateTimestampProvider","AsyncScheduler","SchedulerAction","_active","action","shift","async"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/query-builder/query-builder.component.html","./src/app/query-builder/query-builder.component.ts","./src/utils.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./node_modules/rxjs/dist/esm/internal/observable/timer.js","./node_modules/rxjs/dist/esm/internal/util/isDate.js","./node_modules/rxjs/dist/esm/internal/operators/distinctUntilChanged.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js"],"sourcesContent":["<form [formGroup]=\"formGroup\" novalidate autocomplete=\"off\">\r\n  <div formArrayName=\"filters\">\r\n    @for (filterGroup of formGroup.controls.filters.controls; track filterIndex; let filterIndex = $index) {\r\n    <div class=\"filter__group\">\r\n      <ng-container *ngTemplateOutlet=\"filterFormTemplate, context: { formGroup: filterGroup, index: filterIndex }\"></ng-container>\r\n    </div>\r\n    }\r\n  </div>\r\n\r\n  <forge-button class=\"filter__group__add\">\r\n    <button type=\"button\" (click)=\"onAddFilter(formGroup, 'condition')\">\r\n      <forge-icon name=\"add_circle\"></forge-icon> Add a new condition\r\n    </button>\r\n  </forge-button>\r\n\r\n  <p>{{formGroup.getRawValue() | json}}</p>\r\n</form>\r\n\r\n<ng-template #filterFormTemplate let-formGroup=\"formGroup\" let-index=\"index\">\r\n  @if (index > 0) {\r\n  <ng-container *ngTemplateOutlet=\"filterHeaderTemplate, context: { formGroup: formGroup }\"></ng-container>\r\n  }\r\n\r\n  <ng-container [formGroup]=\"formGroup\">\r\n    <div class=\"filter__form\">\r\n      <forge-autocomplete formControlName=\"property\" [filter]=\"propertyFilter\">\r\n        <forge-text-field required [appFormControlInvalid]=\"formGroup.controls.property\">\r\n          <input type=\"text\" id=\"{{'app--query-builder--filter-property' + index}}\" />\r\n          <label for=\"{{'app--query-builder--filter-property' + index}}\">Property</label>\r\n          <forge-icon slot=\"trailing\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\r\n          <span slot=\"helper-text\" class=\"app-form-control-invalid\">A property is required</span>\r\n        </forge-text-field>\r\n      </forge-autocomplete>\r\n\r\n      <forge-select formControlName=\"operator\" label=\"Operator\" required [appFormControlInvalid]=\"formGroup.controls.operator\">\r\n        @for (operator of operatorOptions; track i; let i = $index) {\r\n        <forge-option [value]=\"operator.value\">{{operator.label}}</forge-option>\r\n        }\r\n        <span slot=\"helper-text\" class=\"app-form-control-invalid\">An operator is required</span>\r\n      </forge-select>\r\n\r\n      @if (formGroup.controls.operator.value === 6) {\r\n      <div class=\"filter__form__range\">\r\n        <forge-text-field required [appFormControlInvalid]=\"formGroup.controls.minValue\">\r\n          <input type=\"text\" id=\"{{'app--query-builder--filter-min-' + index}}\" formControlName=\"minValue\">\r\n          <label for=\"{{'app--query-builder--filter-min-' + index}}\" slot=\"label\">Minimum</label>\r\n          <span slot=\"helper-text\" class=\"app-form-control-invalid\">A minimum value is required</span>\r\n        </forge-text-field>\r\n        <forge-text-field required [appFormControlInvalid]=\"formGroup.controls.maxValue\">\r\n          <input type=\"text\" id=\"{{'app--query-builder--filter-max-' + index}}\" formControlName=\"maxValue\">\r\n          <label for=\"{{'app--query-builder--filter-max-' + index}}\" slot=\"label\">Maximum</label>\r\n          <span slot=\"helper-text\" class=\"app-form-control-invalid\">\r\n            {{formGroup.controls.maxValue.errors.required ? 'A maximum value is required' : formGroup.controls.maxValue.errors.range ? 'Max value must be greater or equal to min value' : ''}}\r\n          </span>\r\n        </forge-text-field>\r\n      </div>\r\n      } @else {\r\n      <forge-text-field required [appFormControlInvalid]=\"formGroup.controls.value\">\r\n        <input type=\"text\" id=\"{{'app--query-builder--filter-value-' + index}}\" formControlName=\"value\">\r\n        <label for=\"{{'app--query-builder--filter-value-' + index}}\" slot=\"label\">Value</label>\r\n        <span slot=\"helper-text\" class=\"app-form-control-invalid\">A value is required</span>\r\n      </forge-text-field>\r\n      }\r\n\r\n      <div class=\"filter__form__action\">\r\n        <forge-menu [options]=\"filterOptions\" (forge-menu-select)=\"onAddFilter(formGroup, $event.detail.value)\">\r\n          <forge-icon-button>\r\n            <button type=\"button\" aria-label=\"Add filter\">\r\n              <forge-icon name=\"add_circle\"></forge-icon>\r\n            </button>\r\n          </forge-icon-button>\r\n        </forge-menu>\r\n        <forge-icon-button>\r\n          <button type=\"button\" (click)=\"onDeleteFilter(formGroup)\" aria-label=\"Delete filter\">\r\n            <forge-icon name=\"delete\"></forge-icon>\r\n          </button>\r\n        </forge-icon-button>\r\n      </div>\r\n    </div>\r\n\r\n    @if (formGroup.controls.filters.controls?.length) {\r\n    <ng-container formArrayName=\"filters\">\r\n      @for (filter of formGroup.controls.filters.controls; track filterIndex; let filterIndex = $index) {\r\n      <ng-container *ngTemplateOutlet=\"filterHeaderTemplate, context: { formGroup: filter }\"></ng-container>\r\n      <div class=\"filter__group\">\r\n        <ng-container *ngTemplateOutlet=\"filterFormTemplate, context: { formGroup: filter, index: filterIndex }\"></ng-container>\r\n      </div>\r\n      }\r\n    </ng-container>\r\n    }\r\n  </ng-container>\r\n\r\n</ng-template>\r\n\r\n<ng-template #filterHeaderTemplate let-formGroup=\"formGroup\">\r\n  <div class=\"filter__header\">\r\n    <forge-select [formControl]=\"formGroup.get('condition')\" class=\"filter__header__condition\">\r\n      @for (condition of conditionOptions; track i; let i = $index) {\r\n      <forge-option [value]=\"condition.value\">{{condition.label}}</forge-option>\r\n      }\r\n    </forge-select>\r\n  </div>\r\n</ng-template>","import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AbstractControl, FormArray, FormControl, FormGroup, ReactiveFormsModule, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { ForgeAutocompleteModule, ForgeButtonModule, ForgeIconButtonModule, ForgeIconModule, ForgeMenuModule, ForgeOptionModule, ForgeSelectModule, ForgeTextFieldModule } from '@tylertech/forge-angular';\r\n\r\nimport { Utils } from 'src/utils';\r\nimport { IFilter } from 'src/app/shared/interfaces/filter.interface';\r\nimport { FormControlInvalidDirective } from 'src/app/shared/directives/form-control-invalid/form-control-invalid.directive';\r\n\r\n@Component({\r\n  selector: 'app-query-builder',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ForgeAutocompleteModule,\r\n    ForgeButtonModule,\r\n    ForgeIconButtonModule,\r\n    ForgeIconModule,\r\n    ForgeMenuModule,\r\n    ForgeOptionModule,\r\n    ForgeSelectModule,\r\n    ForgeTextFieldModule,\r\n    FormControlInvalidDirective\r\n  ],\r\n  templateUrl: './query-builder.component.html',\r\n  styleUrls: ['./query-builder.component.scss']\r\n})\r\nexport class QueryBuilderComponent {\r\n  public formGroup = new FormGroup({\r\n    filters: new FormArray([this.buildFilterFormGroup()])\r\n  });\r\n\r\n  public conditionOptions = [\r\n    { value: 'and', label: 'And' },\r\n    { value: 'or', label: 'Or' }\r\n  ];\r\n\r\n  public propertyOptions = [\r\n    { value: 'firstName', label: 'First name' },\r\n    { value: 'lastName', label: 'Last name' },\r\n    { value: 'dateOfBirth', label: 'Date of birth' },\r\n    { value: 'gender', label: 'Gender' },\r\n    { value: 'occupation', label: 'Occupation' }\r\n  ];\r\n\r\n  public operatorOptions = [\r\n    { value: 0, label: 'Equal' },\r\n    { value: 1, label: 'Not equal' },\r\n    { value: 2, label: 'Greater than' },\r\n    { value: 3, label: 'Less than' },\r\n    { value: 4, label: 'Greater than equal to' },\r\n    { value: 5, label: 'Less than equal to' },\r\n    { value: 6, label: 'Range' },\r\n    { value: 7, label: 'Contains' },\r\n    { value: 8, label: 'Not contains' },\r\n    { value: 9, label: 'Empty' }\r\n  ];\r\n\r\n  public filterOptions = [\r\n    { value: 'condition', label: 'Add condition' },\r\n    { value: 'group', label: 'Add group' }\r\n  ];\r\n\r\n  public propertyFilter = (value: string) => Utils.filterData(this.propertyOptions, [{ key: 'label', value }]);\r\n\r\n  public onAddFilter(formGroup: FormGroup, type: 'condition' | 'group') {\r\n    if (formGroup === this.formGroup) {\r\n      this.formGroup.controls.filters.push(this.buildFilterFormGroup());\r\n    } else {\r\n      switch (type) {\r\n        case 'condition': {\r\n          const index = (formGroup.parent as FormArray).controls.indexOf(formGroup) + 1;\r\n          (formGroup.parent as FormArray).insert(index, this.buildFilterFormGroup());\r\n          break;\r\n        }\r\n        case 'group':\r\n          (formGroup.get('filters') as FormArray).push(this.buildFilterFormGroup());\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onDeleteFilter(formGroup: FormGroup) {\r\n    const formArray = formGroup.parent as FormArray;\r\n    const index = formArray.controls.indexOf(formGroup);\r\n    if (index !== -1) {\r\n      formArray.removeAt(index);\r\n    }\r\n  }\r\n\r\n  private buildFilterFormGroup(filter?: IFilter): FormGroup {\r\n    return new FormGroup({\r\n      property: new FormControl(filter?.property, { validators: [Validators.required] }),\r\n      condition: new FormControl(filter?.condition || 'and', { validators: [Validators.required] }),\r\n      operator: new FormControl(filter?.operator, { validators: [Validators.required] }),\r\n      value: new FormControl(filter?.value, { validators: [this.validateFilterValue('value')] }),\r\n      minValue: new FormControl(filter?.minValue, { validators: [this.validateFilterValue('minValue')] }),\r\n      maxValue: new FormControl(filter?.minValue, { validators: [this.validateFilterValue('maxValue')] }),\r\n      filters: new FormArray([])\r\n    });\r\n  }\r\n\r\n  private validateFilterValue(controlName: string): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const formGroup = control.parent;\r\n      if (!formGroup) {\r\n        return null;\r\n      }\r\n\r\n      const operator = formGroup.value.operator;\r\n      if (!isDefined(operator)) {\r\n        return null;\r\n      }\r\n\r\n      switch (operator) {\r\n        case 6: {\r\n          if (controlName === 'value') {\r\n            return null;\r\n          }\r\n\r\n          if (!isDefined(control.value) || !control.value.toString().length) {\r\n            return { required: true };\r\n          }\r\n\r\n          const minValue = formGroup.value.minValue;\r\n          const maxValue = formGroup.value.maxValue;\r\n\r\n          if (controlName === 'minValue') {\r\n            if (isDefined(maxValue) && minValue.localeCompare(maxValue, navigator.language, { numeric: true, ignorePunctuation: true }) < 1) {\r\n              formGroup.get('maxValue')?.setErrors(null);\r\n            }\r\n          }\r\n\r\n          if (controlName === 'maxValue') {\r\n            if (!isDefined(minValue)) {\r\n              return null;\r\n            }\r\n\r\n            if (minValue.localeCompare(maxValue, navigator.language, { numeric: true, ignorePunctuation: true }) > 0) {\r\n              return { range: true };\r\n            }\r\n          }\r\n\r\n          return null;\r\n        }\r\n        default:\r\n          if (controlName === 'minValue' || controlName === 'maxValue') {\r\n            return null;\r\n          }\r\n\r\n          if (!isDefined(control.value) || !control.value.toString().length) {\r\n            return { required: true };\r\n          }\r\n\r\n          return null;\r\n      }\r\n    };\r\n  }\r\n}\r\n","import { formatDate, formatNumber, Location } from '@angular/common';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { isArray, getPropertyValue, isDefined, isString } from '@tylertech/forge-core';\r\nimport { SortDirection } from '@tylertech/forge';\r\n\r\nexport class Utils {\r\n  public static sortData(data: any[], key: string, type: 'string' | 'number' | 'boolean' | 'date', direction: 'ASC' | 'DESC' | SortDirection): any[] {\r\n    if (!data || !data.length) {\r\n      return data;\r\n    }\r\n\r\n    type = type || 'string';\r\n\r\n    if (direction !== 'DESC') {\r\n      direction = 'ASC';\r\n    }\r\n\r\n    return data.slice().sort((a, b): number => {\r\n      a = getPropertyValue(a, key);\r\n      b = getPropertyValue(b, key);\r\n\r\n      if (direction === 'DESC') {\r\n        return this.comparator(b, a, type);\r\n      } else {\r\n        return this.comparator(a, b, type);\r\n      }\r\n    });\r\n  }\r\n\r\n  public static groupData(data: any[], property: string): any[] {\r\n    if (!isArray(data) || !data.length || !property?.length) {\r\n      return data;\r\n    }\r\n\r\n    return data.reduce((previousValue, currentValue) => {\r\n      const key = currentValue[property];\r\n      if (!previousValue[key]) {\r\n        previousValue[key] = [];\r\n      }\r\n      previousValue[key].push(currentValue);\r\n      return previousValue;\r\n    }, {});\r\n  }\r\n\r\n  public static filterData(data: any[], filters: { key: string; value: string; type?: 'string' | 'number' | 'boolean' | 'date'; strict?: boolean }[]): any[] {\r\n    if (!isArray(data) || !data.length || !isArray(filters) || !filters.length) {\r\n      return data;\r\n    }\r\n\r\n    filters = filters.map((f) => {\r\n      if (isString(f.value) && f.value.length) {\r\n        let operator;\r\n        if (f.value.substring(0, 2) === '<>') {\r\n          if (f.value.length === 2) {\r\n            f.value = '';\r\n            return f;\r\n          }\r\n          operator = f.value.substring(0, 2);\r\n          f.value = f.value.substring(2);\r\n        } else if (f.value.substring(0, 1) === '<' || f.value.substring(0, 1) === '>') {\r\n          if (f.value.length === 1) {\r\n            f.value = '';\r\n            return f;\r\n          }\r\n          operator = f.value.substring(0, 1);\r\n          f.value = f.value.substring(1);\r\n        }\r\n\r\n        if (operator) {\r\n          Object.defineProperty(f, 'operator', { value: operator });\r\n        }\r\n      }\r\n\r\n      f.value = ('' + f.value).toLowerCase();\r\n      return f;\r\n    });\r\n\r\n    const filter = (rec: any) =>\r\n      filters.every((f) => {\r\n        if (!f.value.length) {\r\n          return true;\r\n        }\r\n\r\n        const value = ('' + getPropertyValue(rec, f.key)).toLowerCase();\r\n        if (!value.length) {\r\n          return false;\r\n        }\r\n\r\n        if (f.strict) {\r\n          return value === f.value;\r\n        }\r\n\r\n        switch ((f as any).operator) {\r\n          case '<>':\r\n            return this.comparator(value, f.value, f.type) !== 0;\r\n          case '>':\r\n            return this.comparator(value, f.value, f.type) > 0;\r\n          case '<':\r\n            return this.comparator(value, f.value, f.type) < 0;\r\n          default:\r\n            return value.indexOf(f.value) > -1;\r\n        }\r\n      });\r\n\r\n    return data.filter((rec) => filter(rec));\r\n  }\r\n\r\n  public static comparator(a: any, b: any, type: 'string' | 'number' | 'boolean' | 'date' = 'string'): number {\r\n    // eslint-disable-next-line\r\n    if (a == b) {\r\n      return 0;\r\n    }\r\n    if (!isDefined(a)) {\r\n      return -1;\r\n    }\r\n    if (!isDefined(b)) {\r\n      return 1;\r\n    }\r\n\r\n    switch (type) {\r\n      case 'boolean':\r\n        return a ? -1 : 1;\r\n      case 'date':\r\n        a = new Date(a).getTime();\r\n        if (isNaN(a)) {\r\n          return -1;\r\n        }\r\n        b = new Date(b).getTime();\r\n        if (isNaN(b)) {\r\n          return 1;\r\n        }\r\n        break;\r\n      case 'number':\r\n        a = parseFloat(a);\r\n        if (isNaN(a)) {\r\n          return -1;\r\n        }\r\n        b = parseFloat(b);\r\n        if (isNaN(b)) {\r\n          return 1;\r\n        }\r\n        break;\r\n      default:\r\n        if (!isNaN(parseFloat(a)) && !isNaN(parseFloat(b))) {\r\n          return ('' + a).localeCompare('' + b, navigator.language, { numeric: true });\r\n        } else {\r\n          return ('' + a).localeCompare('' + b);\r\n        }\r\n    }\r\n\r\n    return a < b ? -1 : a > b ? 1 : 0;\r\n  }\r\n\r\n  public static navigateBack(location: Location, router: Router, fallbackRoute: any[]): void {\r\n    if ((location.getState() as any)?.navigationId === 1) {\r\n      router.navigate(fallbackRoute);\r\n    } else {\r\n      location.back();\r\n    }\r\n  }\r\n\r\n  public static elementId(prefix: string): string {\r\n    return (\r\n      prefix +\r\n      Math.random()\r\n        .toString(36)\r\n        .replace(/[^a-z]+/g, '')\r\n    );\r\n  }\r\n\r\n  public static formatDate(value: Date, format = 'MM/dd/yyyy'): string {\r\n    if (!isDefined(value)) {\r\n      return '';\r\n    }\r\n    return formatDate(value, format, navigator.language);\r\n  }\r\n\r\n  public static formatNumber(value: number, format = '1.2-2'): string {\r\n    return formatNumber(value, navigator.language, format);\r\n  }\r\n\r\n  public static uniqueId(): string {\r\n    return Math.random().toString(36).substring(2);\r\n  }\r\n\r\n  public static parseQueryStringParameters(): any {\r\n    const params = {};\r\n    const queryIndex = window.location.href.indexOf('?');\r\n    if (queryIndex !== -1) {\r\n      const httpParams = new HttpParams({ fromString: window.location.href.substring(queryIndex) });\r\n      httpParams.keys().forEach(k => {\r\n        const value = httpParams.getAll(k) as string[];\r\n        if (value.length) {\r\n          Object.defineProperty(params, k.toLowerCase(), { value: value.length === 1 ? value[0] : value, enumerable: true, writable: true });\r\n        }\r\n      });\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  public static reduceObject(object: any): any {\r\n    const reduced: any = {};\r\n\r\n    Object.keys(object).forEach(key => {\r\n      if (isDefined(object[key])) {\r\n        if (isArray(object[key])) {\r\n          if (object[key].length) {\r\n            reduced[key] = object[key];\r\n          }\r\n        } else if ((object[key] + '').trim().length) {\r\n          reduced[key] = typeof object[key] === 'string' ? object[key].trim() : object[key];\r\n        }\r\n      }\r\n    });\r\n\r\n    return reduced;\r\n  }\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime = 0, intervalOrScheduler, scheduler = asyncScheduler) {\n    let intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable((subscriber) => {\n        let due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        let n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n","export function isValidDate(value) {\n    return value instanceof Date && !isNaN(value);\n}\n","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector = identity) {\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate((source, subscriber) => {\n        let previousKey;\n        let first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n"],"x_google_ignoreList":[3,4,5,6,7,8,9,10,11,12,13]}