{"version":3,"file":"558.bfe1186ebb9c8f38.js","mappings":"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","names":["AppDataService","constructor","httpClient","this","getProfile","get","getPeople","filter","pipe","map","r","count","length","filters","Utils","filterData","f","key","property","value","strict","sort","sortData","direction","isNumber","skip","take","slice","data","getPerson","id","find","p","toString","getSearches","Observable","o","searches","localStorage","getItem","isDefined","JSON","parse","next","complete","saveSearches","setItem","stringify","getLongRequest","t","i0","i1","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Yz7","factory","Éµfac","providedIn","col_r5","sortDirection","_r11","ctx_r10","onColumnHeaderDragStart","$implicit","_r7","ctx_r12","close","onTableSort","$event","ctx_r13","onColumnHeaderRightClick","TableDemoComponent_th_10_forge_icon_5_Template","restoredCtx","i_r6","index","ctx_r14","onColumnHeaderResize","width","ctx_r1","parent","_r3","header","record_r15","col_r17","TableDemoComponent_tr_13_td_1_Template","ctx_r2","tableColumns","visibleColumns","column_r20","hidden","_r22","ctx_r21","onColumnPopupItemSelected","detail","TableDemoComponent_ng_template_17_forge_list_item_1_Template","ctx_r4","routes","path","component","TableDemoComponent","appDataService","tableColumnResize$","Subject","isColumnResizing","isBusy","filterCache","SortDirection","Ascending","recordset","recordset$","BehaviorSubject","recordCount","tableHeaderOffset","columns","c","recordsetTrackBy","person","ngOnInit","getRecords","ngAfterViewInit","virtualScrollViewport","renderedRangeStream","subscribe","start","end","finalize","result","startId","i","ngOnDestroy","scrollToOffset","onColumnHeaderDragDrop","event","moveItemInArray","previousIndex","currentIndex","columnIndex","column","stopPropagation","preventDefault","columnHeaderElement","tableElementRef","nativeElement","querySelectorAll","columnElements","positionX","clientX","querySelector","classList","add","forEach","fromEvent","document","body","takeUntil","tap","offsetWidth","theadElement","merge","requestAnimationFrame","undefined","remove","columnHeaderPopupDirective","popupElement","open","tableColumn","Descending","onTablePaginatorChange","pageIndex","pageSize","core","Xpm","selectors","viewQuery","rf","ctx","PopupDirective","CdkVirtualScrollViewport","TableDemoComponent_th_10_Template","TableDemoComponent_tr_13_Template","TableDemoComponent_ng_template_17_Template","TableDemoModule","oAB","cJS","CommonModule","RouterModule","forChild","DragDropModule","ScrollingModule","ForgeModule"],"sourceRoot":"webpack:///","sources":["./src/app/app-data.service.ts","./src/app/table-demo/table-demo.component.html","./src/app/table-demo/table-demo.module.ts","./src/app/table-demo/table-demo.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, delay } from 'rxjs/operators';\r\nimport { isDefined, isNumber } from '@tylertech/forge-core';\r\nimport { IPerson, IProfile } from 'src/app/shared/interfaces/person.interface';\r\nimport { ISearch } from 'src/app/shared/interfaces/search.interface';\r\nimport { IFilterParameter } from 'src/app/shared/interfaces/filter.interface';\r\nimport { Utils } from 'src/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppDataService {\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getProfile(): Observable<IProfile> {\r\n    return this.httpClient.get<IProfile>('mock-data/profile.json');\r\n  }\r\n\r\n  public getPeople(filter?: IFilterParameter): Observable<{ count: number; data: Array<IPerson> }> {\r\n    return this.httpClient.get<Array<IPerson>>('mock-data/people.json').pipe(\r\n      // delay(2000),\r\n      map((r) => {\r\n        let count = r.length;\r\n        if (filter) {\r\n          if (filter.filters?.length) {\r\n            r = Utils.filterData(\r\n              r,\r\n              filter.filters.map((f) => ({ key: f.property, value: f.value, strict: f.property === 'gender' || f.property === 'id' }))\r\n            );\r\n            count = r.length;\r\n          }\r\n\r\n          if (filter.sort) {\r\n            r = Utils.sortData(r, filter.sort.property, 'string', filter.sort.direction);\r\n          }\r\n\r\n          if (isNumber(filter.skip) && isNumber(filter.take)) {\r\n            r = r.slice(filter.skip, filter.skip + filter.take);\r\n          }\r\n        }\r\n        return { count, data: r };\r\n      })\r\n    );\r\n  }\r\n\r\n  public getPerson(id: number): Observable<IPerson | undefined> {\r\n    return this.httpClient.get('mock-data/people.json').pipe(map((r) => (r as IPerson[]).find((p) => p.id.toString() === id.toString())));\r\n  }\r\n\r\n  public getSearches(key: string): Observable<ISearch[]> {\r\n    return new Observable<ISearch[]>((o) => {\r\n      let searches = localStorage.getItem(key);\r\n      if (isDefined(searches)) {\r\n        searches = JSON.parse(searches as string);\r\n      }\r\n      o.next(searches as any);\r\n      o.complete();\r\n    });\r\n  }\r\n\r\n  public saveSearches(key: string, searches: ISearch[]): Observable<boolean> {\r\n    return new Observable<boolean>((o) => {\r\n      localStorage.setItem(key, JSON.stringify(searches));\r\n      o.next(true);\r\n      o.complete();\r\n    });\r\n  }\r\n\r\n  public getLongRequest(): Observable<string> {\r\n    return this.httpClient.get<string>('http://localhost:5000/long-request');\r\n  }\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--title\">Table demo</h2>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <div class=\"body__table\">\r\n    <cdk-virtual-scroll-viewport itemSize=\"48\">\r\n      <table #table class=\"forge-table forge-table--fixed\">\r\n        <thead [style.--table-header-offset]=\"tableHeaderOffset\" [style.--table-header-translate-y]=\"(tableHeaderOffset * -48) + 'px'\">\r\n          <tr class=\"forge-table-row forge-table-head__row\" cdkDropList (cdkDropListDropped)=\"onColumnHeaderDragDrop($event)\" cdkDropListOrientation=\"horizontal\">\r\n            <th *ngFor=\"let col of tableColumns | appCallback:visibleColumns; index as i\" scope=\"col\" class=\"forge-table-cell forge-table-head__cell forge-table-head__cell--sortable\" cdkDrag cdkDragLockAxis=\"x\" [cdkDragPreviewContainer]=\"parent\" (cdkDragStarted)=\"onColumnHeaderDragStart()\" (click)=\"columnHeaderPopup.close(); onTableSort(col)\" #columnHeaderPopup=\"forgePopup\" [forgePopup]=\"columnHeaderPopupTemplate\" (contextmenu)=\"onColumnHeaderRightClick($event)\" placement=\"right-end\" tabindex=\"-1\" [style.--table-column-width]=\"col.width\">\r\n              <div class=\"forge-table-head__cell-container\">\r\n                <span class=\"forge-table-head__cell-text\">{{col.header}}</span>\r\n                <forge-icon *ngIf=\"col.sortDirection?.length\" [name]=\"col.sortDirection === 'DESC' ? 'arrow_downward' : col.sortDirection === 'ASC' ? 'arrow_upward' : ''\" class=\"forge-table-head__cell-sort-icon\" aria-hidden=\"true\"></forge-icon>\r\n              </div>\r\n              <div class=\"forge-table-head__cell-actions\">\r\n                <div class=\"forge-table-head__cell-dragger\" cdkDragHandle></div>\r\n                <div class=\"forge-table-head__cell-resizer\" (mousedown)=\"onColumnHeaderResize($event, i, col)\"></div>\r\n              </div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *cdkVirtualFor=\"let record of recordset$; trackBy: recordsetTrackBy\" class=\"forge-table-row forge-table-body__row\">\r\n            <td *ngFor=\"let col of tableColumns | appCallback:visibleColumns\" class=\"forge-table-cell forge-table-body__cell\">\r\n              <div class=\"forge-table-cell__container\">\r\n                {{record[col.property]}}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </cdk-virtual-scroll-viewport>\r\n  </div>\r\n\r\n  <forge-toolbar inverted=\"true\">\r\n    <span slot=\"end\" class=\"forge-typography--caption\">Records: {{recordCount}}</span>\r\n    <!-- <forge-paginator slot=\"end\" [pageIndex]=\"filterCache.skip / filterCache.take\" [pageSize]=\"filterCache.take\" [total]=\"recordCount\" (forge-paginator-change)=\"onTablePaginatorChange($event.detail)\"></forge-paginator> -->\r\n  </forge-toolbar>\r\n</div>\r\n\r\n<ng-template #columnHeaderPopupTemplate>\r\n  <forge-list class=\"column-popup\" (forge-list-item-select)=\"onColumnPopupItemSelected($event.detail.value)\">\r\n    <forge-list-item *ngFor=\"let column of tableColumns\" [value]=\"column\">\r\n      <forge-checkbox slot=\"leading\">\r\n        <input type=\"checkbox\" checked aria-label=\"Show/hide table column\" [checked]=\"!column.hidden\" />\r\n      </forge-checkbox>\r\n      <span>{{column.header}}</span>\r\n    </forge-list-item>\r\n    <forge-divider></forge-divider>\r\n    <forge-list-item value=\"reset-column-width\">\r\n      <span>Reset column widths</span>\r\n    </forge-list-item>\r\n    <forge-list-item value=\"freeze-column\">\r\n      <span>Freeze column</span>\r\n    </forge-list-item>\r\n  </forge-list>\r\n</ng-template>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { TableDemoComponent } from './table-demo.component';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { ForgeModule } from '@tylertech/forge-angular';\r\nimport { AutoFocusDirective } from '../shared/directives/auto-focus/auto-focus.directive';\r\nimport { CallbackPipe } from '../shared/pipes/callback.pipe';\r\n\r\nconst routes: Routes = [\r\n  { path: '**', component: TableDemoComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TableDemoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    DragDropModule,\r\n    ScrollingModule,\r\n    ForgeModule,\r\n    AutoFocusDirective,\r\n    CallbackPipe\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class TableDemoModule { }","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { finalize, fromEvent, tap, Subject, takeUntil, merge, delay, BehaviorSubject } from 'rxjs';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\r\nimport { IColumnConfiguration, SortDirection } from '@tylertech/forge';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { PopupDirective } from '@tylertech/forge-angular';\r\n\r\nimport { IPerson } from 'src/app/shared/interfaces/person.interface';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\n\r\n@Component({\r\n  selector: 'app-table-demo',\r\n  templateUrl: './table-demo.component.html',\r\n  styleUrls: ['./table-demo.component.scss']\r\n})\r\nexport class TableDemoComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('table', { static: true })\r\n  private tableElementRef: ElementRef;\r\n  @ViewChild('columnHeaderPopup', { read: PopupDirective })\r\n  private columnHeaderPopupDirective: PopupDirective;\r\n  @ViewChild(CdkVirtualScrollViewport)\r\n  public virtualScrollViewport: CdkVirtualScrollViewport;\r\n  private tableColumnResize$ = new Subject<void>();\r\n  private isColumnResizing = false;\r\n\r\n  public isBusy = false;\r\n  public filterCache = {\r\n    sort: {\r\n      property: 'lastName',\r\n      direction: SortDirection.Ascending\r\n    },\r\n    filters: [] as any[],\r\n    skip: 0,\r\n    take: 25\r\n  }\r\n  public recordset: IPerson[] = [];\r\n  public recordset$ = new BehaviorSubject<IPerson[]>([]);\r\n  public recordCount = 0;\r\n  public tableColumns: IColumnConfiguration[] = [\r\n    { header: 'Id', property: 'id' },\r\n    { header: 'First', property: 'firstName', width: 400 },\r\n    { header: 'Last', property: 'lastName' },\r\n    { header: 'Gender', property: 'gender' },\r\n    { header: 'Occupation', property: 'occupation' }\r\n  ];\r\n  public tableHeaderOffset = 0;\r\n\r\n  public visibleColumns = (columns: IColumnConfiguration[]) => {\r\n    return columns.filter(c => c.hidden !== true);\r\n  }\r\n\r\n  public recordsetTrackBy = (index: number, person: IPerson) => {\r\n    return person.id;\r\n  }\r\n\r\n  constructor(\r\n    private appDataService: AppDataService\r\n  ) { }\r\n\r\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method\r\n  public ngOnInit() {\r\n    this.getRecords();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.virtualScrollViewport.renderedRangeStream.subscribe(o => {\r\n      this.tableHeaderOffset = o.start;\r\n      if (!this.isBusy && o.start > 0 && o.end + 67 > this.recordCount) {\r\n        this.isBusy = true;\r\n        this.appDataService\r\n          .getPeople({\r\n            sort: this.filterCache.sort\r\n          }).pipe(\r\n            // delay(1000),\r\n            finalize(() => this.isBusy = false)\r\n          )\r\n          .subscribe((result) => {\r\n            const startId = this.recordset.length + 1;\r\n            this.recordset = [...this.recordset, ...result.data.map((p, i) => {\r\n              p.id = startId + p.id;\r\n              return p;\r\n            })];\r\n            this.recordCount = this.recordset.length;\r\n            this.recordset$.next(this.recordset);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.tableColumnResize$.next();\r\n    this.tableColumnResize$.complete();\r\n  }\r\n\r\n  public onColumnHeaderDragStart() {\r\n    this.virtualScrollViewport.scrollToOffset(0);\r\n  }\r\n\r\n  public onColumnHeaderDragDrop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.tableColumns, event.previousIndex, event.currentIndex);\r\n    this.tableColumns = [...this.tableColumns];\r\n  }\r\n\r\n  public onColumnHeaderResize(event: MouseEvent, columnIndex: number, column: IColumnConfiguration) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    this.tableColumnResize$.next();\r\n\r\n    let columnHeaderElement = (this.tableElementRef.nativeElement as HTMLTableElement).querySelectorAll('thead tr th')[columnIndex] as HTMLTableCellElement;\r\n    let columnElements = (this.tableElementRef.nativeElement as HTMLTableElement).querySelectorAll(`tbody tr td:nth-child(${columnIndex + 1})`);\r\n\r\n    let positionX = event.clientX;\r\n    if (columnHeaderElement) {\r\n      this.isColumnResizing = true;\r\n      this.tableElementRef.nativeElement.querySelector('.forge-table-head__row')?.classList.add('forge-table-head__row--resizing');\r\n      columnHeaderElement.classList.add('forge-table-head__cell--resizing');\r\n      columnElements.forEach(c => c.classList.add('forge-table-body__cell--resizing'));\r\n\r\n      fromEvent(document.body, 'mousemove')\r\n        .pipe(\r\n          takeUntil(this.tableColumnResize$),\r\n          tap((event: MouseEvent) => {\r\n            column.width = columnHeaderElement.offsetWidth + (event.clientX - positionX);\r\n            positionX = event.clientX;\r\n          })\r\n        ).subscribe();\r\n\r\n      const theadElement = this.tableElementRef.nativeElement.querySelector('thead');\r\n      merge(\r\n        fromEvent(theadElement, 'mouseup'),\r\n        fromEvent(theadElement, 'mouseleave')\r\n      )\r\n        .pipe(\r\n          finalize(() =>\r\n            requestAnimationFrame(() => {\r\n              this.isColumnResizing = false;\r\n              columnHeaderElement = undefined;\r\n              columnElements = undefined;\r\n            })\r\n          ),\r\n          takeUntil(this.tableColumnResize$),\r\n          tap((event: MouseEvent) => {\r\n            this.tableColumnResize$.next();\r\n            this.tableElementRef.nativeElement.querySelector('.forge-table-head__row')?.classList.remove('forge-table-head__row--resizing');\r\n            columnHeaderElement.classList.remove('forge-table-head__cell--resizing');\r\n            columnElements.forEach(c => c.classList.remove('forge-table-body__cell--resizing'));\r\n          })\r\n        ).subscribe();\r\n    }\r\n  }\r\n\r\n  public onColumnHeaderRightClick(event: PointerEvent) {\r\n    event.preventDefault();\r\n    if (this.columnHeaderPopupDirective.popupElement) {\r\n      this.columnHeaderPopupDirective.close();\r\n    } else {\r\n      this.columnHeaderPopupDirective.open();\r\n    }\r\n  }\r\n\r\n  public onColumnPopupItemSelected(value: any) {\r\n    switch (value) {\r\n      case 'reset-column-width':\r\n        this.tableColumns.forEach(c => c.width = undefined);\r\n        break;\r\n      case 'freeze-column': {\r\n        let columnHeaderElement = (this.tableElementRef.nativeElement as HTMLTableElement).querySelectorAll('thead tr th')[0];\r\n        let columnElements = (this.tableElementRef.nativeElement as HTMLTableElement).querySelectorAll(`tbody tr td:nth-child(${1})`);\r\n        columnHeaderElement.classList.add('forge-table-head__cell--frozen');\r\n        columnElements.forEach(c => c.classList.add('forge-table-body__cell--frozen'));\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        const tableColumn = this.tableColumns.find(c => c.property === value.property);\r\n        if (tableColumn) {\r\n          // prevent hiding all columns\r\n          if (this.tableColumns.filter(c => !c.hidden).length) {\r\n            tableColumn.hidden = isDefined(tableColumn.hidden) ? !tableColumn.hidden : true;\r\n            tableColumn.sortDirection = undefined;\r\n            this.tableColumns = [...this.tableColumns];\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.columnHeaderPopupDirective.close();\r\n  }\r\n\r\n  public onTableSort(column: IColumnConfiguration) {\r\n    if (!this.isColumnResizing) {\r\n      this.tableColumns.filter(c => c.property !== column.property).forEach(c => c.sortDirection = undefined);\r\n      if (column.sortDirection === SortDirection.Ascending) {\r\n        column.sortDirection = SortDirection.Descending;\r\n      } else if (column.sortDirection === SortDirection.Descending) {\r\n        column.sortDirection = undefined;\r\n      } else {\r\n        column.sortDirection = SortDirection.Ascending;\r\n      }\r\n\r\n      this.filterCache.sort = column.sortDirection ? { property: column.property, direction: column.sortDirection } : undefined;\r\n      this.filterCache.skip = 0;\r\n      this.virtualScrollViewport.scrollToOffset(0);\r\n      this.getRecords();\r\n    }\r\n  }\r\n\r\n  public onTablePaginatorChange(detail: { pageIndex: number; pageSize: number }) {\r\n    this.filterCache.skip = detail.pageIndex * detail.pageSize;\r\n    this.filterCache.take = detail.pageSize;\r\n    this.getRecords();\r\n  }\r\n\r\n  private getRecords() {\r\n    this.isBusy = true;\r\n    this.appDataService\r\n      .getPeople({\r\n        sort: this.filterCache.sort\r\n      }).pipe(\r\n        finalize(() => this.isBusy = false)\r\n      )\r\n      .subscribe((result) => {\r\n        this.recordset = result.data;\r\n        this.recordCount = result.count;\r\n        this.recordset$.next(this.recordset);\r\n      });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}