{"version":3,"sources":["node_modules/ag-grid-community/dist/package/main.esm.mjs","node_modules/ag-grid-angular/fesm2022/ag-grid-angular.mjs","src/app/ag-grid-demo/ag-grid-demo.component.ts","src/app/ag-grid-demo/ag-grid-demo.component.html"],"sourcesContent":["// community-modules/core/src/localEventService.ts\nvar LocalEventService = class {\n  constructor() {\n    this.allSyncListeners = /* @__PURE__ */new Map();\n    this.allAsyncListeners = /* @__PURE__ */new Map();\n    this.globalSyncListeners = /* @__PURE__ */new Set();\n    this.globalAsyncListeners = /* @__PURE__ */new Set();\n    this.asyncFunctionsQueue = [];\n    this.scheduled = false;\n    // using an object performs better than a Set for the number of different events we have\n    this.firedEvents = {};\n  }\n  setFrameworkOverrides(frameworkOverrides) {\n    this.frameworkOverrides = frameworkOverrides;\n  }\n  getListeners(eventType, async, autoCreateListenerCollection) {\n    const listenerMap = async ? this.allAsyncListeners : this.allSyncListeners;\n    let listeners = listenerMap.get(eventType);\n    if (!listeners && autoCreateListenerCollection) {\n      listeners = /* @__PURE__ */new Set();\n      listenerMap.set(eventType, listeners);\n    }\n    return listeners;\n  }\n  noRegisteredListenersExist() {\n    return this.allSyncListeners.size === 0 && this.allAsyncListeners.size === 0 && this.globalSyncListeners.size === 0 && this.globalAsyncListeners.size === 0;\n  }\n  addEventListener(eventType, listener, async = false) {\n    this.getListeners(eventType, async, true).add(listener);\n  }\n  removeEventListener(eventType, listener, async = false) {\n    const listeners = this.getListeners(eventType, async, false);\n    if (!listeners) {\n      return;\n    }\n    listeners.delete(listener);\n    if (listeners.size === 0) {\n      const listenerMap = async ? this.allAsyncListeners : this.allSyncListeners;\n      listenerMap.delete(eventType);\n    }\n  }\n  addGlobalListener(listener, async = false) {\n    (async ? this.globalAsyncListeners : this.globalSyncListeners).add(listener);\n  }\n  removeGlobalListener(listener, async = false) {\n    (async ? this.globalAsyncListeners : this.globalSyncListeners).delete(listener);\n  }\n  dispatchEvent(event) {\n    const agEvent = event;\n    this.dispatchToListeners(agEvent, true);\n    this.dispatchToListeners(agEvent, false);\n    this.firedEvents[agEvent.type] = true;\n  }\n  dispatchEventOnce(event) {\n    if (!this.firedEvents[event.type]) {\n      this.dispatchEvent(event);\n    }\n  }\n  dispatchToListeners(event, async) {\n    const eventType = event.type;\n    if (async && \"event\" in event) {\n      const browserEvent = event.event;\n      if (browserEvent instanceof Event) {\n        event.eventPath = browserEvent.composedPath();\n      }\n    }\n    const processEventListeners = (listeners2, originalListeners2) => listeners2.forEach(listener => {\n      if (!originalListeners2.has(listener)) {\n        return;\n      }\n      const callback = this.frameworkOverrides ? () => this.frameworkOverrides.wrapIncoming(() => listener(event)) : () => listener(event);\n      if (async) {\n        this.dispatchAsync(callback);\n      } else {\n        callback();\n      }\n    });\n    const originalListeners = this.getListeners(eventType, async, false) ?? /* @__PURE__ */new Set();\n    const listeners = new Set(originalListeners);\n    if (listeners.size > 0) {\n      processEventListeners(listeners, originalListeners);\n    }\n    const globalListeners = new Set(async ? this.globalAsyncListeners : this.globalSyncListeners);\n    globalListeners.forEach(listener => {\n      const callback = this.frameworkOverrides ? () => this.frameworkOverrides.wrapIncoming(() => listener(eventType, event)) : () => listener(eventType, event);\n      if (async) {\n        this.dispatchAsync(callback);\n      } else {\n        callback();\n      }\n    });\n  }\n  // this gets called inside the grid's thread, for each event that it\n  // wants to set async. the grid then batches the events into one setTimeout()\n  // because setTimeout() is an expensive operation. ideally we would have\n  // each event in it's own setTimeout(), but we batch for performance.\n  dispatchAsync(func) {\n    this.asyncFunctionsQueue.push(func);\n    if (!this.scheduled) {\n      const flush = () => {\n        window.setTimeout(this.flushAsyncQueue.bind(this), 0);\n      };\n      this.frameworkOverrides ? this.frameworkOverrides.wrapIncoming(flush) : flush();\n      this.scheduled = true;\n    }\n  }\n  // this happens in the next VM turn only, and empties the queue of events\n  flushAsyncQueue() {\n    this.scheduled = false;\n    const queueCopy = this.asyncFunctionsQueue.slice();\n    this.asyncFunctionsQueue = [];\n    queueCopy.forEach(func => func());\n  }\n};\n\n// community-modules/core/src/utils/array.ts\nfunction _existsAndNotEmpty(value) {\n  return value != null && value.length > 0;\n}\nfunction _last(arr) {\n  if (!arr || !arr.length) {\n    return;\n  }\n  return arr[arr.length - 1];\n}\nfunction _areEqual(a, b, comparator) {\n  if (a == null && b == null) {\n    return true;\n  }\n  return a != null && b != null && a.length === b.length && a.every((value, index) => comparator ? comparator(value, b[index]) : b[index] === value);\n}\nfunction _shallowCompare(arr1, arr2) {\n  return _areEqual(arr1, arr2);\n}\nfunction _sortNumerically(array) {\n  return array.sort((a, b) => a - b);\n}\nfunction _removeRepeatsFromArray(array, object) {\n  if (!array) {\n    return;\n  }\n  for (let index = array.length - 2; index >= 0; index--) {\n    const thisOneMatches = array[index] === object;\n    const nextOneMatches = array[index + 1] === object;\n    if (thisOneMatches && nextOneMatches) {\n      array.splice(index + 1, 1);\n    }\n  }\n}\nfunction _removeFromUnorderedArray(array, object) {\n  const index = array.indexOf(object);\n  if (index >= 0) {\n    array[index] = array[array.length - 1];\n    array.pop();\n  }\n}\nfunction _removeFromArray(array, object) {\n  const index = array.indexOf(object);\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction _removeAllFromUnorderedArray(array, toRemove) {\n  for (let i = 0; i < toRemove.length; i++) {\n    _removeFromUnorderedArray(array, toRemove[i]);\n  }\n}\nfunction _removeAllFromArray(array, toRemove) {\n  for (let i = 0; i < toRemove.length; i++) {\n    _removeFromArray(array, toRemove[i]);\n  }\n}\nfunction _insertIntoArray(array, object, toIndex) {\n  array.splice(toIndex, 0, object);\n}\nfunction _insertArrayIntoArray(dest, src, toIndex) {\n  if (dest == null || src == null) {\n    return;\n  }\n  for (let i = src.length - 1; i >= 0; i--) {\n    const item = src[i];\n    _insertIntoArray(dest, item, toIndex);\n  }\n}\nfunction _moveInArray(array, objectsToMove, toIndex) {\n  _removeAllFromArray(array, objectsToMove);\n  objectsToMove.slice().reverse().forEach(obj => _insertIntoArray(array, obj, toIndex));\n}\nfunction _includes(array, value) {\n  return array.indexOf(value) > -1;\n}\nfunction _flatten(arrayOfArrays) {\n  return [].concat.apply([], arrayOfArrays);\n}\nfunction _pushAll(target, source) {\n  if (source == null || target == null) {\n    return;\n  }\n  source.forEach(value => target.push(value));\n}\nfunction _forEachReverse(list, action) {\n  if (list == null) {\n    return;\n  }\n  for (let i = list.length - 1; i >= 0; i--) {\n    action(list[i], i);\n  }\n}\n\n// community-modules/core/src/utils/event.ts\nvar AG_GRID_STOP_PROPAGATION = \"__ag_Grid_Stop_Propagation\";\nvar PASSIVE_EVENTS = [\"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\", \"scroll\"];\nvar supports = {};\nfunction _stopPropagationForAgGrid(event) {\n  event[AG_GRID_STOP_PROPAGATION] = true;\n}\nfunction _isStopPropagationForAgGrid(event) {\n  return event[AG_GRID_STOP_PROPAGATION] === true;\n}\nvar _isEventSupported = /* @__PURE__ */(() => {\n  const tags = {\n    select: \"input\",\n    change: \"input\",\n    submit: \"form\",\n    reset: \"form\",\n    error: \"img\",\n    load: \"img\",\n    abort: \"img\"\n  };\n  const eventChecker = eventName => {\n    if (typeof supports[eventName] === \"boolean\") {\n      return supports[eventName];\n    }\n    const el = document.createElement(tags[eventName] || \"div\");\n    eventName = \"on\" + eventName;\n    return supports[eventName] = eventName in el;\n  };\n  return eventChecker;\n})();\nfunction _getCtrlForEventTarget(gos, eventTarget, type) {\n  let sourceElement = eventTarget;\n  while (sourceElement) {\n    const renderedComp = gos.getDomData(sourceElement, type);\n    if (renderedComp) {\n      return renderedComp;\n    }\n    sourceElement = sourceElement.parentElement;\n  }\n  return null;\n}\nfunction _isElementInEventPath(element, event) {\n  if (!event || !element) {\n    return false;\n  }\n  return _getEventPath(event).indexOf(element) >= 0;\n}\nfunction _createEventPath(event) {\n  const res = [];\n  let pointer = event.target;\n  while (pointer) {\n    res.push(pointer);\n    pointer = pointer.parentElement;\n  }\n  return res;\n}\nfunction _getEventPath(event) {\n  const eventNoType = event;\n  if (eventNoType.path) {\n    return eventNoType.path;\n  }\n  if (eventNoType.composedPath) {\n    return eventNoType.composedPath();\n  }\n  return _createEventPath(eventNoType);\n}\nfunction _addSafePassiveEventListener(frameworkOverrides, eElement, event, listener) {\n  const isPassive = _includes(PASSIVE_EVENTS, event);\n  const options = isPassive ? {\n    passive: true\n  } : void 0;\n  if (frameworkOverrides && frameworkOverrides.addEventListener) {\n    frameworkOverrides.addEventListener(eElement, event, listener, options);\n  }\n}\n\n// community-modules/core/src/context/beanStub.ts\nvar BeanStub = class {\n  constructor() {\n    // not named context to allow children to use 'context' as a variable name\n    this.destroyFunctions = [];\n    this.destroyed = false;\n    // for vue 3 - prevents Vue from trying to make this (and obviously any sub classes) from being reactive\n    // prevents vue from creating proxies for created objects and prevents identity related issues\n    this.__v_skip = true;\n    this.propertyListenerId = 0;\n    // Enable multiple grid properties to be updated together by the user but only trigger shared logic once.\n    // Closely related to logic in ComponentUtil.ts\n    this.lastChangeSetIdLookup = {};\n    this.isAlive = () => !this.destroyed;\n  }\n  preWireBeans(beans) {\n    this.gridId = beans.context.getGridId();\n    this.frameworkOverrides = beans.frameworkOverrides;\n    this.stubContext = beans.context;\n    this.eventService = beans.eventService;\n    this.gos = beans.gos;\n    this.localeService = beans.localeService;\n  }\n  // this was a test constructor niall built, when active, it prints after 5 seconds all beans/components that are\n  // not destroyed. to use, create a new grid, then api.destroy() before 5 seconds. then anything that gets printed\n  // points to a bean or component that was not properly disposed of.\n  // constructor() {\n  //     setTimeout(()=> {\n  //         if (this.isAlive()) {\n  //             let prototype: any = Object.getPrototypeOf(this);\n  //             const constructor: any = prototype.constructor;\n  //             const constructorString = constructor.toString();\n  //             const beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n  //             console.log('is alive ' + beanName);\n  //         }\n  //     }, 5000);\n  // }\n  // CellComp and GridComp and override this because they get the FrameworkOverrides from the Beans bean\n  getFrameworkOverrides() {\n    return this.frameworkOverrides;\n  }\n  destroy() {\n    for (let i = 0; i < this.destroyFunctions.length; i++) {\n      this.destroyFunctions[i]();\n    }\n    this.destroyFunctions.length = 0;\n    this.destroyed = true;\n    this.dispatchLocalEvent({\n      type: \"destroyed\"\n    });\n  }\n  // The typing of AgEventListener<any, any, any> is not ideal, but it's the best we can do at the moment to enable\n  // eventService to have the best typing at the expense of BeanStub local events\n  /** Add a local event listener against this BeanStub */\n  addEventListener(eventType, listener) {\n    if (!this.localEventService) {\n      this.localEventService = new LocalEventService();\n    }\n    this.localEventService.addEventListener(eventType, listener);\n  }\n  /** Remove a local event listener from this BeanStub */\n  removeEventListener(eventType, listener) {\n    if (this.localEventService) {\n      this.localEventService.removeEventListener(eventType, listener);\n    }\n  }\n  dispatchLocalEvent(event) {\n    if (this.localEventService) {\n      this.localEventService.dispatchEvent(event);\n    }\n  }\n  addManagedElementListeners(object, handlers) {\n    return this._setupListeners(object, handlers);\n  }\n  addManagedEventListeners(handlers) {\n    return this._setupListeners(this.eventService, handlers);\n  }\n  addManagedListeners(object, handlers) {\n    return this._setupListeners(object, handlers);\n  }\n  _setupListeners(object, handlers) {\n    const destroyFuncs = [];\n    for (const k in handlers) {\n      const handler = handlers[k];\n      if (handler) {\n        destroyFuncs.push(this._setupListener(object, k, handler));\n      }\n    }\n    return destroyFuncs;\n  }\n  _setupListener(object, event, listener) {\n    if (this.destroyed) {\n      return () => null;\n    }\n    if (object instanceof HTMLElement) {\n      _addSafePassiveEventListener(this.getFrameworkOverrides(), object, event, listener);\n    } else {\n      object.addEventListener(event, listener);\n    }\n    const destroyFunc = () => {\n      object.removeEventListener(event, listener);\n      return null;\n    };\n    this.destroyFunctions.push(destroyFunc);\n    return () => {\n      destroyFunc();\n      this.destroyFunctions = this.destroyFunctions.filter(fn => fn !== destroyFunc);\n      return null;\n    };\n  }\n  /**\n   * Setup a managed property listener for the given GridOption property.\n   * However, stores the destroy function in the beanStub so that if this bean\n   * is a component the destroy function will be called when the component is destroyed\n   * as opposed to being cleaned up only when the GridOptionsService is destroyed.\n   */\n  setupGridOptionListener(event, listener) {\n    this.gos.addPropertyEventListener(event, listener);\n    const destroyFunc = () => {\n      this.gos.removePropertyEventListener(event, listener);\n      return null;\n    };\n    this.destroyFunctions.push(destroyFunc);\n    return () => {\n      destroyFunc();\n      this.destroyFunctions = this.destroyFunctions.filter(fn => fn !== destroyFunc);\n      return null;\n    };\n  }\n  /**\n   * Setup a managed property listener for the given GridOption property.\n   * @param event GridOption property to listen to changes for.\n   * @param listener Listener to run when property value changes\n   */\n  addManagedPropertyListener(event, listener) {\n    if (this.destroyed) {\n      return () => null;\n    }\n    return this.setupGridOptionListener(event, listener);\n  }\n  /**\n   * Setup managed property listeners for the given set of GridOption properties.\n   * The listener will be run if any of the property changes but will only run once if\n   * multiple of the properties change within the same framework lifecycle event.\n   * Works on the basis that GridOptionsService updates all properties *before* any property change events are fired.\n   * @param events Array of GridOption properties to listen for changes too.\n   * @param listener Shared listener to run if any of the properties change\n   */\n  addManagedPropertyListeners(events, listener) {\n    if (this.destroyed) {\n      return;\n    }\n    const eventsKey = events.join(\"-\") + this.propertyListenerId++;\n    const wrappedListener = event => {\n      if (event.changeSet) {\n        if (event.changeSet && event.changeSet.id === this.lastChangeSetIdLookup[eventsKey]) {\n          return;\n        }\n        this.lastChangeSetIdLookup[eventsKey] = event.changeSet.id;\n      }\n      const propertiesChangeEvent = {\n        type: \"gridPropertyChanged\",\n        changeSet: event.changeSet,\n        source: event.source\n      };\n      listener(propertiesChangeEvent);\n    };\n    events.forEach(event => this.setupGridOptionListener(event, wrappedListener));\n  }\n  addDestroyFunc(func) {\n    if (this.isAlive()) {\n      this.destroyFunctions.push(func);\n    } else {\n      func();\n    }\n  }\n  createManagedBean(bean, context) {\n    const res = this.createBean(bean, context);\n    this.addDestroyFunc(this.destroyBean.bind(this, bean, context));\n    return res;\n  }\n  createBean(bean, context, afterPreCreateCallback) {\n    return (context || this.stubContext).createBean(bean, afterPreCreateCallback);\n  }\n  /**\n   * Destroys a bean and returns undefined to support destruction and clean up in a single line.\n   * this.dateComp = this.context.destroyBean(this.dateComp);\n   */\n  destroyBean(bean, context) {\n    return (context || this.stubContext).destroyBean(bean);\n  }\n  /**\n   * Destroys an array of beans and returns an empty array to support destruction and clean up in a single line.\n   * this.dateComps = this.context.destroyBeans(this.dateComps);\n   */\n  destroyBeans(beans, context) {\n    return (context || this.stubContext).destroyBeans(beans);\n  }\n};\n\n// community-modules/core/src/misc/frameworkEventListenerService.ts\nvar FrameworkEventListenerService = class {\n  constructor(frameworkOverrides) {\n    this.frameworkOverrides = frameworkOverrides;\n    // Map from user listener to wrapped listener so we can remove listener provided by user\n    this.wrappedListeners = /* @__PURE__ */new Map();\n    this.wrappedGlobalListeners = /* @__PURE__ */new Map();\n  }\n  wrap(userListener) {\n    let listener = userListener;\n    if (this.frameworkOverrides.shouldWrapOutgoing) {\n      listener = event => {\n        this.frameworkOverrides.wrapOutgoing(() => userListener(event));\n      };\n      this.wrappedListeners.set(userListener, listener);\n    }\n    return listener;\n  }\n  wrapGlobal(userListener) {\n    let listener = userListener;\n    if (this.frameworkOverrides.shouldWrapOutgoing) {\n      listener = (eventType, event) => {\n        this.frameworkOverrides.wrapOutgoing(() => userListener(eventType, event));\n      };\n      this.wrappedGlobalListeners.set(userListener, listener);\n    }\n    return listener;\n  }\n  unwrap(userListener) {\n    return this.wrappedListeners.get(userListener) ?? userListener;\n  }\n  unwrapGlobal(userListener) {\n    return this.wrappedGlobalListeners.get(userListener) ?? userListener;\n  }\n};\n\n// community-modules/core/src/utils/generic.ts\nfunction _makeNull(value) {\n  if (value == null || value === \"\") {\n    return null;\n  }\n  return value;\n}\nfunction _exists(value, allowEmptyString = false) {\n  return value != null && (value !== \"\" || allowEmptyString);\n}\nfunction _missing(value) {\n  return !_exists(value);\n}\nfunction _missingOrEmpty(value) {\n  return value == null || value.length === 0;\n}\nfunction _toStringOrNull(value) {\n  return value != null && typeof value.toString === \"function\" ? value.toString() : null;\n}\nfunction _attrToNumber(value) {\n  if (value === void 0) {\n    return;\n  }\n  if (value === null || value === \"\") {\n    return null;\n  }\n  if (typeof value === \"number\") {\n    return isNaN(value) ? void 0 : value;\n  }\n  const valueParsed = parseInt(value, 10);\n  return isNaN(valueParsed) ? void 0 : valueParsed;\n}\nfunction _attrToBoolean(value) {\n  if (value === void 0) {\n    return;\n  }\n  if (value === null || value === \"\") {\n    return false;\n  }\n  return toBoolean(value);\n}\nfunction toBoolean(value) {\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    return value.toUpperCase() === \"TRUE\" || value == \"\";\n  }\n  return false;\n}\nfunction _jsonEquals(val1, val2) {\n  const val1Json = val1 ? JSON.stringify(val1) : null;\n  const val2Json = val2 ? JSON.stringify(val2) : null;\n  return val1Json === val2Json;\n}\nfunction _defaultComparator(valueA, valueB, accentedCompare = false) {\n  const valueAMissing = valueA == null;\n  const valueBMissing = valueB == null;\n  if (valueA && valueA.toNumber) {\n    valueA = valueA.toNumber();\n  }\n  if (valueB && valueB.toNumber) {\n    valueB = valueB.toNumber();\n  }\n  if (valueAMissing && valueBMissing) {\n    return 0;\n  }\n  if (valueAMissing) {\n    return -1;\n  }\n  if (valueBMissing) {\n    return 1;\n  }\n  function doQuickCompare(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n  if (typeof valueA !== \"string\") {\n    return doQuickCompare(valueA, valueB);\n  }\n  if (!accentedCompare) {\n    return doQuickCompare(valueA, valueB);\n  }\n  try {\n    return valueA.localeCompare(valueB);\n  } catch (e) {\n    return doQuickCompare(valueA, valueB);\n  }\n}\nfunction _values(object) {\n  if (object instanceof Set || object instanceof Map) {\n    const arr = [];\n    object.forEach(value => arr.push(value));\n    return arr;\n  }\n  return Object.values(object);\n}\n\n// community-modules/core/src/utils/object.ts\nvar SKIP_JS_BUILTINS = /* @__PURE__ */new Set([\"__proto__\", \"constructor\", \"prototype\"]);\nfunction _iterateObject(object, callback) {\n  if (object == null) {\n    return;\n  }\n  if (Array.isArray(object)) {\n    for (let i = 0; i < object.length; i++) {\n      callback(i.toString(), object[i]);\n    }\n    return;\n  }\n  for (const [key, value] of Object.entries(object)) {\n    callback(key, value);\n  }\n}\nfunction _cloneObject(object) {\n  const copy = {};\n  const keys = Object.keys(object);\n  for (let i = 0; i < keys.length; i++) {\n    if (SKIP_JS_BUILTINS.has(keys[i])) {\n      continue;\n    }\n    const key = keys[i];\n    const value = object[key];\n    copy[key] = value;\n  }\n  return copy;\n}\nfunction _deepCloneDefinition(object, keysToSkip) {\n  if (!object) {\n    return;\n  }\n  const obj = object;\n  const res = {};\n  Object.keys(obj).forEach(key => {\n    if (keysToSkip && keysToSkip.indexOf(key) >= 0 || SKIP_JS_BUILTINS.has(key)) {\n      return;\n    }\n    const value = obj[key];\n    const sourceIsSimpleObject = _isNonNullObject(value) && value.constructor === Object;\n    if (sourceIsSimpleObject) {\n      res[key] = _deepCloneDefinition(value);\n    } else {\n      res[key] = value;\n    }\n  });\n  return res;\n}\nfunction _getAllValuesInObject(obj) {\n  if (!obj) {\n    return [];\n  }\n  const anyObject = Object;\n  if (typeof anyObject.values === \"function\") {\n    return anyObject.values(obj);\n  }\n  const ret = [];\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && obj.propertyIsEnumerable(key)) {\n      ret.push(obj[key]);\n    }\n  }\n  return ret;\n}\nfunction _mergeDeep(dest, source, copyUndefined = true, makeCopyOfSimpleObjects = false) {\n  if (!_exists(source)) {\n    return;\n  }\n  _iterateObject(source, (key, sourceValue) => {\n    if (SKIP_JS_BUILTINS.has(key)) {\n      return;\n    }\n    let destValue = dest[key];\n    if (destValue === sourceValue) {\n      return;\n    }\n    if (makeCopyOfSimpleObjects) {\n      const objectIsDueToBeCopied = destValue == null && sourceValue != null;\n      if (objectIsDueToBeCopied) {\n        const sourceIsSimpleObject = typeof sourceValue === \"object\" && sourceValue.constructor === Object;\n        const dontCopy = sourceIsSimpleObject;\n        if (dontCopy) {\n          destValue = {};\n          dest[key] = destValue;\n        }\n      }\n    }\n    if (_isNonNullObject(sourceValue) && _isNonNullObject(destValue) && !Array.isArray(destValue)) {\n      _mergeDeep(destValue, sourceValue, copyUndefined, makeCopyOfSimpleObjects);\n    } else if (copyUndefined || sourceValue !== void 0) {\n      dest[key] = sourceValue;\n    }\n  });\n}\nfunction _getValueUsingField(data, field, fieldContainsDots) {\n  if (!field || !data) {\n    return;\n  }\n  if (!fieldContainsDots) {\n    return data[field];\n  }\n  const fields = field.split(\".\");\n  let currentObject = data;\n  for (let i = 0; i < fields.length; i++) {\n    if (currentObject == null) {\n      return void 0;\n    }\n    currentObject = currentObject[fields[i]];\n  }\n  return currentObject;\n}\nfunction _isNonNullObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\n\n// community-modules/core/src/entities/agColumn.ts\nvar COL_DEF_DEFAULTS = {\n  resizable: true,\n  sortable: true\n};\nvar instanceIdSequence = 0;\nfunction getNextColInstanceId() {\n  return instanceIdSequence++;\n}\nfunction isColumn(col) {\n  return col instanceof AgColumn;\n}\nvar DEFAULT_COLUMN_MIN_WIDTH = 20;\nvar AgColumn = class extends BeanStub {\n  constructor(colDef, userProvidedColDef, colId, primary) {\n    super();\n    this.isColumn = true;\n    // used by React (and possibly other frameworks) as key for rendering. also used to\n    // identify old vs new columns for destroying cols when no longer used.\n    this.instanceId = getNextColInstanceId();\n    // The measured height of this column's header when autoHeaderHeight is enabled\n    this.autoHeaderHeight = null;\n    this.moving = false;\n    this.menuVisible = false;\n    this.lastLeftPinned = false;\n    this.firstRightPinned = false;\n    this.filterActive = false;\n    this.columnEventService = new LocalEventService();\n    this.tooltipEnabled = false;\n    this.rowGroupActive = false;\n    this.pivotActive = false;\n    this.aggregationActive = false;\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.colId = colId;\n    this.primary = primary;\n    this.setState(colDef);\n  }\n  wireBeans(beans) {\n    this.columnHoverService = beans.columnHoverService;\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  setState(colDef) {\n    if (colDef.sort !== void 0) {\n      if (colDef.sort === \"asc\" || colDef.sort === \"desc\") {\n        this.sort = colDef.sort;\n      }\n    } else {\n      if (colDef.initialSort === \"asc\" || colDef.initialSort === \"desc\") {\n        this.sort = colDef.initialSort;\n      }\n    }\n    const sortIndex = colDef.sortIndex;\n    const initialSortIndex = colDef.initialSortIndex;\n    if (sortIndex !== void 0) {\n      if (sortIndex !== null) {\n        this.sortIndex = sortIndex;\n      }\n    } else {\n      if (initialSortIndex !== null) {\n        this.sortIndex = initialSortIndex;\n      }\n    }\n    const hide = colDef.hide;\n    const initialHide = colDef.initialHide;\n    if (hide !== void 0) {\n      this.visible = !hide;\n    } else {\n      this.visible = !initialHide;\n    }\n    if (colDef.pinned !== void 0) {\n      this.setPinned(colDef.pinned);\n    } else {\n      this.setPinned(colDef.initialPinned);\n    }\n    const flex = colDef.flex;\n    const initialFlex = colDef.initialFlex;\n    if (flex !== void 0) {\n      this.flex = flex;\n    } else if (initialFlex !== void 0) {\n      this.flex = initialFlex;\n    }\n  }\n  // gets called when user provides an alternative colDef, eg\n  setColDef(colDef, userProvidedColDef, source) {\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.initMinAndMaxWidths();\n    this.initDotNotation();\n    this.initTooltip();\n    this.columnEventService.dispatchEvent(this.createColumnEvent(\"colDefChanged\", source));\n  }\n  getUserProvidedColDef() {\n    return this.userProvidedColDef;\n  }\n  setParent(parent) {\n    this.parent = parent;\n  }\n  getParent() {\n    return this.parent;\n  }\n  setOriginalParent(originalParent) {\n    this.originalParent = originalParent;\n  }\n  getOriginalParent() {\n    return this.originalParent;\n  }\n  // this is done after constructor as it uses gridOptionsService\n  postConstruct() {\n    this.initMinAndMaxWidths();\n    this.resetActualWidth(\"gridInitializing\");\n    this.initDotNotation();\n    this.initTooltip();\n  }\n  initDotNotation() {\n    const suppressDotNotation = this.gos.get(\"suppressFieldDotNotation\");\n    this.fieldContainsDots = _exists(this.colDef.field) && this.colDef.field.indexOf(\".\") >= 0 && !suppressDotNotation;\n    this.tooltipFieldContainsDots = _exists(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf(\".\") >= 0 && !suppressDotNotation;\n  }\n  initMinAndMaxWidths() {\n    const colDef = this.colDef;\n    this.minWidth = colDef.minWidth ?? DEFAULT_COLUMN_MIN_WIDTH;\n    this.maxWidth = colDef.maxWidth ?? Number.MAX_SAFE_INTEGER;\n  }\n  initTooltip() {\n    this.tooltipEnabled = _exists(this.colDef.tooltipField) || _exists(this.colDef.tooltipValueGetter) || _exists(this.colDef.tooltipComponent);\n  }\n  resetActualWidth(source) {\n    const initialWidth = this.calculateColInitialWidth(this.colDef);\n    this.setActualWidth(initialWidth, source, true);\n  }\n  calculateColInitialWidth(colDef) {\n    let width;\n    const colDefWidth = _attrToNumber(colDef.width);\n    const colDefInitialWidth = _attrToNumber(colDef.initialWidth);\n    if (colDefWidth != null) {\n      width = colDefWidth;\n    } else if (colDefInitialWidth != null) {\n      width = colDefInitialWidth;\n    } else {\n      width = 200;\n    }\n    return Math.max(Math.min(width, this.maxWidth), this.minWidth);\n  }\n  isEmptyGroup() {\n    return false;\n  }\n  isRowGroupDisplayed(colId) {\n    if (_missing(this.colDef) || _missing(this.colDef.showRowGroup)) {\n      return false;\n    }\n    const showingAllGroups = this.colDef.showRowGroup === true;\n    const showingThisGroup = this.colDef.showRowGroup === colId;\n    return showingAllGroups || showingThisGroup;\n  }\n  isPrimary() {\n    return this.primary;\n  }\n  isFilterAllowed() {\n    const filterDefined = !!this.colDef.filter;\n    return filterDefined;\n  }\n  isFieldContainsDots() {\n    return this.fieldContainsDots;\n  }\n  isTooltipEnabled() {\n    return this.tooltipEnabled;\n  }\n  isTooltipFieldContainsDots() {\n    return this.tooltipFieldContainsDots;\n  }\n  addEventListener(eventType, userListener) {\n    if (this.frameworkOverrides.shouldWrapOutgoing && !this.frameworkEventListenerService) {\n      this.columnEventService.setFrameworkOverrides(this.frameworkOverrides);\n      this.frameworkEventListenerService = new FrameworkEventListenerService(this.frameworkOverrides);\n    }\n    const listener = this.frameworkEventListenerService?.wrap(userListener) ?? userListener;\n    this.columnEventService.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, userListener) {\n    const listener = this.frameworkEventListenerService?.unwrap(userListener) ?? userListener;\n    this.columnEventService.removeEventListener(eventType, listener);\n  }\n  createColumnFunctionCallbackParams(rowNode) {\n    return this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode.data,\n      column: this,\n      colDef: this.colDef\n    });\n  }\n  isSuppressNavigable(rowNode) {\n    if (typeof this.colDef.suppressNavigable === \"boolean\") {\n      return this.colDef.suppressNavigable;\n    }\n    if (typeof this.colDef.suppressNavigable === \"function\") {\n      const params = this.createColumnFunctionCallbackParams(rowNode);\n      const userFunc = this.colDef.suppressNavigable;\n      return userFunc(params);\n    }\n    return false;\n  }\n  isCellEditable(rowNode) {\n    if (rowNode.group && !this.gos.get(\"enableGroupEdit\")) {\n      return false;\n    }\n    return this.isColumnFunc(rowNode, this.colDef.editable);\n  }\n  isSuppressFillHandle() {\n    return !!this.colDef.suppressFillHandle;\n  }\n  isAutoHeight() {\n    return !!this.colDef.autoHeight;\n  }\n  isAutoHeaderHeight() {\n    return !!this.colDef.autoHeaderHeight;\n  }\n  isRowDrag(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n  }\n  isDndSource(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.dndSource);\n  }\n  isCellCheckboxSelection(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.checkboxSelection);\n  }\n  isSuppressPaste(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef ? this.colDef.suppressPaste : null);\n  }\n  isResizable() {\n    return !!this.getColDefValue(\"resizable\");\n  }\n  /** Get value from ColDef or default if it exists. */\n  getColDefValue(key) {\n    return this.colDef[key] ?? COL_DEF_DEFAULTS[key];\n  }\n  isColumnFunc(rowNode, value) {\n    if (typeof value === \"boolean\") {\n      return value;\n    }\n    if (typeof value === \"function\") {\n      const params = this.createColumnFunctionCallbackParams(rowNode);\n      const editableFunc = value;\n      return editableFunc(params);\n    }\n    return false;\n  }\n  setMoving(moving, source) {\n    this.moving = moving;\n    this.columnEventService.dispatchEvent(this.createColumnEvent(\"movingChanged\", source));\n  }\n  createColumnEvent(type, source) {\n    return this.gos.addGridCommonParams({\n      type,\n      column: this,\n      columns: [this],\n      source\n    });\n  }\n  isMoving() {\n    return this.moving;\n  }\n  getSort() {\n    return this.sort;\n  }\n  setSort(sort, source) {\n    if (this.sort !== sort) {\n      this.sort = sort;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"sortChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"sort\");\n  }\n  isSortable() {\n    return !!this.getColDefValue(\"sortable\");\n  }\n  /** @deprecated v32 use col.getSort() === 'asc */\n  isSortAscending() {\n    return this.sort === \"asc\";\n  }\n  /** @deprecated v32 use col.getSort() === 'desc */\n  isSortDescending() {\n    return this.sort === \"desc\";\n  }\n  /** @deprecated v32 use col.getSort() === undefined */\n  isSortNone() {\n    return _missing(this.sort);\n  }\n  /** @deprecated v32 use col.getSort() !== undefined */\n  isSorting() {\n    return _exists(this.sort);\n  }\n  getSortIndex() {\n    return this.sortIndex;\n  }\n  setSortIndex(sortOrder) {\n    this.sortIndex = sortOrder;\n    this.dispatchStateUpdatedEvent(\"sortIndex\");\n  }\n  setMenuVisible(visible, source) {\n    if (this.menuVisible !== visible) {\n      this.menuVisible = visible;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"menuVisibleChanged\", source));\n    }\n  }\n  isMenuVisible() {\n    return this.menuVisible;\n  }\n  setAggFunc(aggFunc) {\n    this.aggFunc = aggFunc;\n    this.dispatchStateUpdatedEvent(\"aggFunc\");\n  }\n  getAggFunc() {\n    return this.aggFunc;\n  }\n  getLeft() {\n    return this.left;\n  }\n  getOldLeft() {\n    return this.oldLeft;\n  }\n  getRight() {\n    return this.left + this.actualWidth;\n  }\n  setLeft(left, source) {\n    this.oldLeft = this.left;\n    if (this.left !== left) {\n      this.left = left;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"leftChanged\", source));\n    }\n  }\n  isFilterActive() {\n    return this.filterActive;\n  }\n  // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n  setFilterActive(active, source, additionalEventAttributes) {\n    if (this.filterActive !== active) {\n      this.filterActive = active;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"filterActiveChanged\", source));\n    }\n    const filterChangedEvent = this.createColumnEvent(\"filterChanged\", source);\n    if (additionalEventAttributes) {\n      _mergeDeep(filterChangedEvent, additionalEventAttributes);\n    }\n    this.columnEventService.dispatchEvent(filterChangedEvent);\n  }\n  isHovered() {\n    return this.columnHoverService.isHovered(this);\n  }\n  setPinned(pinned) {\n    if (pinned === true || pinned === \"left\") {\n      this.pinned = \"left\";\n    } else if (pinned === \"right\") {\n      this.pinned = \"right\";\n    } else {\n      this.pinned = null;\n    }\n    this.dispatchStateUpdatedEvent(\"pinned\");\n  }\n  setFirstRightPinned(firstRightPinned, source) {\n    if (this.firstRightPinned !== firstRightPinned) {\n      this.firstRightPinned = firstRightPinned;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"firstRightPinnedChanged\", source));\n    }\n  }\n  setLastLeftPinned(lastLeftPinned, source) {\n    if (this.lastLeftPinned !== lastLeftPinned) {\n      this.lastLeftPinned = lastLeftPinned;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"lastLeftPinnedChanged\", source));\n    }\n  }\n  isFirstRightPinned() {\n    return this.firstRightPinned;\n  }\n  isLastLeftPinned() {\n    return this.lastLeftPinned;\n  }\n  isPinned() {\n    return this.pinned === \"left\" || this.pinned === \"right\";\n  }\n  isPinnedLeft() {\n    return this.pinned === \"left\";\n  }\n  isPinnedRight() {\n    return this.pinned === \"right\";\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  setVisible(visible, source) {\n    const newValue = visible === true;\n    if (this.visible !== newValue) {\n      this.visible = newValue;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"visibleChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"hide\");\n  }\n  isVisible() {\n    return this.visible;\n  }\n  isSpanHeaderHeight() {\n    const colDef = this.getColDef();\n    return !colDef.suppressSpanHeaderHeight && !colDef.autoHeaderHeight;\n  }\n  getColumnGroupPaddingInfo() {\n    let parent = this.getParent();\n    if (!parent || !parent.isPadding()) {\n      return {\n        numberOfParents: 0,\n        isSpanningTotal: false\n      };\n    }\n    const numberOfParents = parent.getPaddingLevel() + 1;\n    let isSpanningTotal = true;\n    while (parent) {\n      if (!parent.isPadding()) {\n        isSpanningTotal = false;\n        break;\n      }\n      parent = parent.getParent();\n    }\n    return {\n      numberOfParents,\n      isSpanningTotal\n    };\n  }\n  getColDef() {\n    return this.colDef;\n  }\n  getDefinition() {\n    return this.colDef;\n  }\n  getColumnGroupShow() {\n    return this.colDef.columnGroupShow;\n  }\n  getColId() {\n    return this.colId;\n  }\n  getId() {\n    return this.colId;\n  }\n  getUniqueId() {\n    return this.colId;\n  }\n  getActualWidth() {\n    return this.actualWidth;\n  }\n  getAutoHeaderHeight() {\n    return this.autoHeaderHeight;\n  }\n  /** Returns true if the header height has changed */\n  setAutoHeaderHeight(height) {\n    const changed = height !== this.autoHeaderHeight;\n    this.autoHeaderHeight = height;\n    return changed;\n  }\n  createBaseColDefParams(rowNode) {\n    const params = this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode.data,\n      colDef: this.colDef,\n      column: this\n    });\n    return params;\n  }\n  getColSpan(rowNode) {\n    if (_missing(this.colDef.colSpan)) {\n      return 1;\n    }\n    const params = this.createBaseColDefParams(rowNode);\n    const colSpan = this.colDef.colSpan(params);\n    return Math.max(colSpan, 1);\n  }\n  getRowSpan(rowNode) {\n    if (_missing(this.colDef.rowSpan)) {\n      return 1;\n    }\n    const params = this.createBaseColDefParams(rowNode);\n    const rowSpan = this.colDef.rowSpan(params);\n    return Math.max(rowSpan, 1);\n  }\n  setActualWidth(actualWidth, source, silent = false) {\n    actualWidth = Math.max(actualWidth, this.minWidth);\n    actualWidth = Math.min(actualWidth, this.maxWidth);\n    if (this.actualWidth !== actualWidth) {\n      this.actualWidth = actualWidth;\n      if (this.flex && source !== \"flex\" && source !== \"gridInitializing\") {\n        this.flex = null;\n      }\n      if (!silent) {\n        this.fireColumnWidthChangedEvent(source);\n      }\n    }\n    this.dispatchStateUpdatedEvent(\"width\");\n  }\n  fireColumnWidthChangedEvent(source) {\n    this.columnEventService.dispatchEvent(this.createColumnEvent(\"widthChanged\", source));\n  }\n  isGreaterThanMax(width) {\n    return width > this.maxWidth;\n  }\n  getMinWidth() {\n    return this.minWidth;\n  }\n  getMaxWidth() {\n    return this.maxWidth;\n  }\n  getFlex() {\n    return this.flex || 0;\n  }\n  // this method should only be used by the columnModel to\n  // change flex when required by the applyColumnState method.\n  setFlex(flex) {\n    if (this.flex !== flex) {\n      this.flex = flex;\n    }\n    this.dispatchStateUpdatedEvent(\"flex\");\n  }\n  setMinimum(source) {\n    this.setActualWidth(this.minWidth, source);\n  }\n  setRowGroupActive(rowGroup, source) {\n    if (this.rowGroupActive !== rowGroup) {\n      this.rowGroupActive = rowGroup;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"columnRowGroupChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"rowGroup\");\n  }\n  isRowGroupActive() {\n    return this.rowGroupActive;\n  }\n  setPivotActive(pivot, source) {\n    if (this.pivotActive !== pivot) {\n      this.pivotActive = pivot;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"columnPivotChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"pivot\");\n  }\n  isPivotActive() {\n    return this.pivotActive;\n  }\n  isAnyFunctionActive() {\n    return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n  }\n  isAnyFunctionAllowed() {\n    return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n  }\n  setValueActive(value, source) {\n    if (this.aggregationActive !== value) {\n      this.aggregationActive = value;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"columnValueChanged\", source));\n    }\n  }\n  isValueActive() {\n    return this.aggregationActive;\n  }\n  isAllowPivot() {\n    return this.colDef.enablePivot === true;\n  }\n  isAllowValue() {\n    return this.colDef.enableValue === true;\n  }\n  isAllowRowGroup() {\n    return this.colDef.enableRowGroup === true;\n  }\n  dispatchStateUpdatedEvent(key) {\n    this.columnEventService.dispatchEvent({\n      type: \"columnStateUpdated\",\n      key\n    });\n  }\n};\n\n// community-modules/core/src/entities/agProvidedColumnGroup.ts\nfunction isProvidedColumnGroup(col) {\n  return col instanceof AgProvidedColumnGroup;\n}\nvar AgProvidedColumnGroup = class extends BeanStub {\n  constructor(colGroupDef, groupId, padding, level) {\n    super();\n    this.isColumn = false;\n    this.expandable = false;\n    // used by React (and possibly other frameworks) as key for rendering. also used to\n    // identify old vs new columns for destroying cols when no longer used.\n    this.instanceId = getNextColInstanceId();\n    this.expandableListenerRemoveCallback = null;\n    this.colGroupDef = colGroupDef;\n    this.groupId = groupId;\n    this.expanded = !!colGroupDef && !!colGroupDef.openByDefault;\n    this.padding = padding;\n    this.level = level;\n  }\n  destroy() {\n    if (this.expandableListenerRemoveCallback) {\n      this.reset(null, void 0);\n    }\n    super.destroy();\n  }\n  reset(colGroupDef, level) {\n    this.colGroupDef = colGroupDef;\n    this.level = level;\n    this.originalParent = null;\n    if (this.expandableListenerRemoveCallback) {\n      this.expandableListenerRemoveCallback();\n    }\n    this.children = void 0;\n    this.expandable = void 0;\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  setOriginalParent(originalParent) {\n    this.originalParent = originalParent;\n  }\n  getOriginalParent() {\n    return this.originalParent;\n  }\n  getLevel() {\n    return this.level;\n  }\n  isVisible() {\n    if (this.children) {\n      return this.children.some(child => child.isVisible());\n    }\n    return false;\n  }\n  isPadding() {\n    return this.padding;\n  }\n  setExpanded(expanded) {\n    this.expanded = expanded === void 0 ? false : expanded;\n    this.dispatchLocalEvent({\n      type: \"expandedChanged\"\n    });\n  }\n  isExpandable() {\n    return this.expandable;\n  }\n  isExpanded() {\n    return this.expanded;\n  }\n  getGroupId() {\n    return this.groupId;\n  }\n  getId() {\n    return this.getGroupId();\n  }\n  setChildren(children) {\n    this.children = children;\n  }\n  getChildren() {\n    return this.children;\n  }\n  getColGroupDef() {\n    return this.colGroupDef;\n  }\n  getLeafColumns() {\n    const result = [];\n    this.addLeafColumns(result);\n    return result;\n  }\n  addLeafColumns(leafColumns) {\n    if (!this.children) {\n      return;\n    }\n    this.children.forEach(child => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isProvidedColumnGroup(child)) {\n        child.addLeafColumns(leafColumns);\n      }\n    });\n  }\n  getColumnGroupShow() {\n    const colGroupDef = this.colGroupDef;\n    if (!colGroupDef) {\n      return;\n    }\n    return colGroupDef.columnGroupShow;\n  }\n  // need to check that this group has at least one col showing when both expanded and contracted.\n  // if not, then we don't allow expanding and contracting on this group\n  setupExpandable() {\n    this.setExpandable();\n    if (this.expandableListenerRemoveCallback) {\n      this.expandableListenerRemoveCallback();\n    }\n    const listener = this.onColumnVisibilityChanged.bind(this);\n    this.getLeafColumns().forEach(col => col.addEventListener(\"visibleChanged\", listener));\n    this.expandableListenerRemoveCallback = () => {\n      this.getLeafColumns().forEach(col => col.removeEventListener(\"visibleChanged\", listener));\n      this.expandableListenerRemoveCallback = null;\n    };\n  }\n  setExpandable() {\n    if (this.isPadding()) {\n      return;\n    }\n    let atLeastOneShowingWhenOpen = false;\n    let atLeastOneShowingWhenClosed = false;\n    let atLeastOneChangeable = false;\n    const children = this.findChildrenRemovingPadding();\n    for (let i = 0, j = children.length; i < j; i++) {\n      const abstractColumn = children[i];\n      if (!abstractColumn.isVisible()) {\n        continue;\n      }\n      const headerGroupShow = abstractColumn.getColumnGroupShow();\n      if (headerGroupShow === \"open\") {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneChangeable = true;\n      } else if (headerGroupShow === \"closed\") {\n        atLeastOneShowingWhenClosed = true;\n        atLeastOneChangeable = true;\n      } else {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneShowingWhenClosed = true;\n      }\n    }\n    const expandable = atLeastOneShowingWhenOpen && atLeastOneShowingWhenClosed && atLeastOneChangeable;\n    if (this.expandable !== expandable) {\n      this.expandable = expandable;\n      this.dispatchLocalEvent({\n        type: \"expandableChanged\"\n      });\n    }\n  }\n  findChildrenRemovingPadding() {\n    const res = [];\n    const process = items => {\n      items.forEach(item => {\n        const skipBecausePadding = isProvidedColumnGroup(item) && item.isPadding();\n        if (skipBecausePadding) {\n          process(item.children);\n        } else {\n          res.push(item);\n        }\n      });\n    };\n    process(this.children);\n    return res;\n  }\n  onColumnVisibilityChanged() {\n    this.setExpandable();\n  }\n};\n\n// community-modules/core/src/entities/defaultColumnTypes.ts\nvar DefaultColumnTypes = {\n  numericColumn: {\n    headerClass: \"ag-right-aligned-header\",\n    cellClass: \"ag-right-aligned-cell\"\n  },\n  rightAligned: {\n    headerClass: \"ag-right-aligned-header\",\n    cellClass: \"ag-right-aligned-cell\"\n  }\n};\n\n// community-modules/core/src/utils/function.ts\nvar doOnceFlags = {};\nfunction _doOnce(func, key) {\n  if (doOnceFlags[key]) {\n    return;\n  }\n  func();\n  doOnceFlags[key] = true;\n}\nfunction _log(message, ...args) {\n  console.log(\"AG Grid: \" + message, ...args);\n}\nfunction _warnOnce(msg, ...args) {\n  _doOnce(() => console.warn(\"AG Grid: \" + msg, ...args), msg + args?.join(\"\"));\n}\nfunction _errorOnce(msg, ...args) {\n  _doOnce(() => console.error(\"AG Grid: \" + msg, ...args), msg + args?.join(\"\"));\n}\nfunction _isFunction(val) {\n  return !!(val && val.constructor && val.call && val.apply);\n}\nfunction _executeInAWhile(funcs) {\n  _executeAfter(funcs, 400);\n}\nvar executeNextVMTurnFuncs = [];\nvar executeNextVMTurnPending = false;\nfunction _executeNextVMTurn(func) {\n  executeNextVMTurnFuncs.push(func);\n  if (executeNextVMTurnPending) {\n    return;\n  }\n  executeNextVMTurnPending = true;\n  window.setTimeout(() => {\n    const funcsCopy = executeNextVMTurnFuncs.slice();\n    executeNextVMTurnFuncs.length = 0;\n    executeNextVMTurnPending = false;\n    funcsCopy.forEach(func2 => func2());\n  }, 0);\n}\nfunction _executeAfter(funcs, milliseconds = 0) {\n  if (funcs.length > 0) {\n    window.setTimeout(() => funcs.forEach(func => func()), milliseconds);\n  }\n}\nfunction _debounce(func, delay) {\n  let timeout;\n  return function (...args) {\n    const context = this;\n    window.clearTimeout(timeout);\n    timeout = window.setTimeout(function () {\n      func.apply(context, args);\n    }, delay);\n  };\n}\nfunction _throttle(func, wait) {\n  let previousCall = 0;\n  return function (...args) {\n    const context = this;\n    const currentCall = ( /* @__PURE__ */new Date()).getTime();\n    if (currentCall - previousCall < wait) {\n      return;\n    }\n    previousCall = currentCall;\n    func.apply(context, args);\n  };\n}\nfunction _waitUntil(condition, callback, timeout = 100, timeoutMessage) {\n  const timeStamp = ( /* @__PURE__ */new Date()).getTime();\n  let interval = null;\n  let executed = false;\n  const internalCallback = () => {\n    const reachedTimeout = ( /* @__PURE__ */new Date()).getTime() - timeStamp > timeout;\n    if (condition() || reachedTimeout) {\n      callback();\n      executed = true;\n      if (interval != null) {\n        window.clearInterval(interval);\n        interval = null;\n      }\n      if (reachedTimeout && timeoutMessage) {\n        _warnOnce(timeoutMessage);\n      }\n    }\n  };\n  internalCallback();\n  if (!executed) {\n    interval = window.setInterval(internalCallback, 10);\n  }\n}\nfunction _compose(...fns) {\n  return arg => fns.reduce((composed, f) => f(composed), arg);\n}\n\n// community-modules/core/src/columns/columnKeyCreator.ts\nvar ColumnKeyCreator = class {\n  constructor() {\n    this.existingKeys = {};\n  }\n  addExistingKeys(keys) {\n    for (let i = 0; i < keys.length; i++) {\n      this.existingKeys[keys[i]] = true;\n    }\n  }\n  getUniqueKey(colId, colField) {\n    colId = _toStringOrNull(colId);\n    let count = 0;\n    while (true) {\n      let idToTry;\n      if (colId) {\n        idToTry = colId;\n        if (count !== 0) {\n          idToTry += \"_\" + count;\n        }\n      } else if (colField) {\n        idToTry = colField;\n        if (count !== 0) {\n          idToTry += \"_\" + count;\n        }\n      } else {\n        idToTry = count;\n      }\n      if (!this.existingKeys[idToTry]) {\n        this.existingKeys[idToTry] = true;\n        return String(idToTry);\n      }\n      count++;\n    }\n  }\n};\n\n// community-modules/core/src/columns/columnUtils.ts\nvar GROUP_AUTO_COLUMN_ID = \"ag-Grid-AutoColumn\";\nfunction getColumnsFromTree(rootColumns) {\n  const result = [];\n  const recursiveFindColumns = childColumns => {\n    for (let i = 0; i < childColumns.length; i++) {\n      const child = childColumns[i];\n      if (isColumn(child)) {\n        result.push(child);\n      } else if (isProvidedColumnGroup(child)) {\n        recursiveFindColumns(child.getChildren());\n      }\n    }\n  };\n  recursiveFindColumns(rootColumns);\n  return result;\n}\nfunction getWidthOfColsInList(columnList) {\n  return columnList.reduce((width, col) => width + col.getActualWidth(), 0);\n}\nfunction destroyColumnTree(context, oldTree, newTree) {\n  const oldObjectsById = {};\n  if (!oldTree) {\n    return;\n  }\n  depthFirstOriginalTreeSearch(null, oldTree, child => {\n    oldObjectsById[child.getInstanceId()] = child;\n  });\n  if (newTree) {\n    depthFirstOriginalTreeSearch(null, newTree, child => {\n      oldObjectsById[child.getInstanceId()] = null;\n    });\n  }\n  const colsToDestroy = Object.values(oldObjectsById).filter(item => item != null);\n  context.destroyBeans(colsToDestroy);\n}\nfunction isColumnGroupAutoCol(col) {\n  const colId = col.getId();\n  return colId.startsWith(GROUP_AUTO_COLUMN_ID);\n}\nfunction convertColumnTypes(type) {\n  let typeKeys = [];\n  if (type instanceof Array) {\n    const invalidArray = type.some(a => typeof a !== \"string\");\n    if (invalidArray) {\n      _warnOnce(\"if colDef.type is supplied an array it should be of type 'string[]'\");\n    } else {\n      typeKeys = type;\n    }\n  } else if (typeof type === \"string\") {\n    typeKeys = type.split(\",\");\n  } else {\n    _warnOnce(\"colDef.type should be of type 'string' | 'string[]'\");\n  }\n  return typeKeys;\n}\n\n// community-modules/core/src/columns/columnFactory.ts\nvar ColumnFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnFactory\";\n  }\n  wireBeans(beans) {\n    this.dataTypeService = beans.dataTypeService;\n  }\n  createColumnTree(defs, primaryColumns, existingTree, source) {\n    const columnKeyCreator = new ColumnKeyCreator();\n    const {\n      existingCols,\n      existingGroups,\n      existingColKeys\n    } = this.extractExistingTreeData(existingTree);\n    columnKeyCreator.addExistingKeys(existingColKeys);\n    const unbalancedTree = this.recursivelyCreateColumns(defs, 0, primaryColumns, existingCols, columnKeyCreator, existingGroups, source);\n    const treeDept = this.findMaxDept(unbalancedTree, 0);\n    const columnTree = this.balanceColumnTree(unbalancedTree, 0, treeDept, columnKeyCreator);\n    const deptFirstCallback = (child, parent) => {\n      if (isProvidedColumnGroup(child)) {\n        child.setupExpandable();\n      }\n      child.setOriginalParent(parent);\n    };\n    depthFirstOriginalTreeSearch(null, columnTree, deptFirstCallback);\n    return {\n      columnTree,\n      treeDept\n    };\n  }\n  extractExistingTreeData(existingTree) {\n    const existingCols = [];\n    const existingGroups = [];\n    const existingColKeys = [];\n    if (existingTree) {\n      depthFirstOriginalTreeSearch(null, existingTree, item => {\n        if (isProvidedColumnGroup(item)) {\n          const group = item;\n          existingGroups.push(group);\n        } else {\n          const col = item;\n          existingColKeys.push(col.getId());\n          existingCols.push(col);\n        }\n      });\n    }\n    return {\n      existingCols,\n      existingGroups,\n      existingColKeys\n    };\n  }\n  createForAutoGroups(autoGroupCols, liveTree) {\n    const tree = [];\n    const dept = this.findDepth(liveTree);\n    autoGroupCols.forEach(col => {\n      let nextChild = col;\n      for (let i = dept - 1; i >= 0; i--) {\n        const autoGroup = new AgProvidedColumnGroup(null, `FAKE_PATH_${col.getId()}}_${i}`, true, i);\n        this.createBean(autoGroup);\n        autoGroup.setChildren([nextChild]);\n        nextChild.setOriginalParent(autoGroup);\n        nextChild = autoGroup;\n      }\n      if (dept === 0) {\n        col.setOriginalParent(null);\n      }\n      tree.push(nextChild);\n    });\n    return [tree, dept];\n  }\n  findDepth(balancedColumnTree) {\n    let dept = 0;\n    let pointer = balancedColumnTree;\n    while (pointer && pointer[0] && isProvidedColumnGroup(pointer[0])) {\n      dept++;\n      pointer = pointer[0].getChildren();\n    }\n    return dept;\n  }\n  balanceColumnTree(unbalancedTree, currentDept, columnDept, columnKeyCreator) {\n    const result = [];\n    for (let i = 0; i < unbalancedTree.length; i++) {\n      const child = unbalancedTree[i];\n      if (isProvidedColumnGroup(child)) {\n        const originalGroup = child;\n        const newChildren = this.balanceColumnTree(originalGroup.getChildren(), currentDept + 1, columnDept, columnKeyCreator);\n        originalGroup.setChildren(newChildren);\n        result.push(originalGroup);\n      } else {\n        let firstPaddedGroup;\n        let currentPaddedGroup;\n        for (let j = columnDept - 1; j >= currentDept; j--) {\n          const newColId = columnKeyCreator.getUniqueKey(null, null);\n          const colGroupDefMerged = this.createMergedColGroupDef(null);\n          const paddedGroup = new AgProvidedColumnGroup(colGroupDefMerged, newColId, true, currentDept);\n          this.createBean(paddedGroup);\n          if (currentPaddedGroup) {\n            currentPaddedGroup.setChildren([paddedGroup]);\n          }\n          currentPaddedGroup = paddedGroup;\n          if (!firstPaddedGroup) {\n            firstPaddedGroup = currentPaddedGroup;\n          }\n        }\n        if (firstPaddedGroup && currentPaddedGroup) {\n          result.push(firstPaddedGroup);\n          const hasGroups = unbalancedTree.some(leaf => isProvidedColumnGroup(leaf));\n          if (hasGroups) {\n            currentPaddedGroup.setChildren([child]);\n            continue;\n          } else {\n            currentPaddedGroup.setChildren(unbalancedTree);\n            break;\n          }\n        }\n        result.push(child);\n      }\n    }\n    return result;\n  }\n  findMaxDept(treeChildren, dept) {\n    let maxDeptThisLevel = dept;\n    for (let i = 0; i < treeChildren.length; i++) {\n      const abstractColumn = treeChildren[i];\n      if (isProvidedColumnGroup(abstractColumn)) {\n        const originalGroup = abstractColumn;\n        const newDept = this.findMaxDept(originalGroup.getChildren(), dept + 1);\n        if (maxDeptThisLevel < newDept) {\n          maxDeptThisLevel = newDept;\n        }\n      }\n    }\n    return maxDeptThisLevel;\n  }\n  recursivelyCreateColumns(defs, level, primaryColumns, existingColsCopy, columnKeyCreator, existingGroups, source) {\n    if (!defs) return [];\n    const result = new Array(defs.length);\n    for (let i = 0; i < result.length; i++) {\n      const def = defs[i];\n      if (this.isColumnGroup(def)) {\n        result[i] = this.createColumnGroup(primaryColumns, def, level, existingColsCopy, columnKeyCreator, existingGroups, source);\n      } else {\n        result[i] = this.createColumn(primaryColumns, def, existingColsCopy, columnKeyCreator, source);\n      }\n    }\n    return result;\n  }\n  createColumnGroup(primaryColumns, colGroupDef, level, existingColumns, columnKeyCreator, existingGroups, source) {\n    const colGroupDefMerged = this.createMergedColGroupDef(colGroupDef);\n    const groupId = columnKeyCreator.getUniqueKey(colGroupDefMerged.groupId || null, null);\n    const providedGroup = new AgProvidedColumnGroup(colGroupDefMerged, groupId, false, level);\n    this.createBean(providedGroup);\n    const existingGroupAndIndex = this.findExistingGroup(colGroupDef, existingGroups);\n    if (existingGroupAndIndex) {\n      existingGroups.splice(existingGroupAndIndex.idx, 1);\n    }\n    const existingGroup = existingGroupAndIndex?.group;\n    if (existingGroup) {\n      providedGroup.setExpanded(existingGroup.isExpanded());\n    }\n    const children = this.recursivelyCreateColumns(colGroupDefMerged.children, level + 1, primaryColumns, existingColumns, columnKeyCreator, existingGroups, source);\n    providedGroup.setChildren(children);\n    return providedGroup;\n  }\n  createMergedColGroupDef(colGroupDef) {\n    const colGroupDefMerged = {};\n    Object.assign(colGroupDefMerged, this.gos.get(\"defaultColGroupDef\"));\n    Object.assign(colGroupDefMerged, colGroupDef);\n    return colGroupDefMerged;\n  }\n  createColumn(primaryColumns, colDef, existingColsCopy, columnKeyCreator, source) {\n    const existingColAndIndex = this.findExistingColumn(colDef, existingColsCopy);\n    if (existingColAndIndex) {\n      existingColsCopy?.splice(existingColAndIndex.idx, 1);\n    }\n    let column = existingColAndIndex?.column;\n    if (!column) {\n      const colId = columnKeyCreator.getUniqueKey(colDef.colId, colDef.field);\n      const colDefMerged = this.addColumnDefaultAndTypes(colDef, colId);\n      column = new AgColumn(colDefMerged, colDef, colId, primaryColumns);\n      this.createBean(column);\n    } else {\n      const colDefMerged = this.addColumnDefaultAndTypes(colDef, column.getColId());\n      column.setColDef(colDefMerged, colDef, source);\n      this.applyColumnState(column, colDefMerged, source);\n    }\n    this.dataTypeService?.addColumnListeners(column);\n    return column;\n  }\n  applyColumnState(column, colDef, source) {\n    const flex = _attrToNumber(colDef.flex);\n    if (flex !== void 0) {\n      column.setFlex(flex);\n    }\n    const noFlexThisCol = column.getFlex() <= 0;\n    if (noFlexThisCol) {\n      const width = _attrToNumber(colDef.width);\n      if (width != null) {\n        column.setActualWidth(width, source);\n      } else {\n        const widthBeforeUpdate = column.getActualWidth();\n        column.setActualWidth(widthBeforeUpdate, source);\n      }\n    }\n    if (colDef.sort !== void 0) {\n      if (colDef.sort == \"asc\" || colDef.sort == \"desc\") {\n        column.setSort(colDef.sort, source);\n      } else {\n        column.setSort(void 0, source);\n      }\n    }\n    const sortIndex = _attrToNumber(colDef.sortIndex);\n    if (sortIndex !== void 0) {\n      column.setSortIndex(sortIndex);\n    }\n    const hide = _attrToBoolean(colDef.hide);\n    if (hide !== void 0) {\n      column.setVisible(!hide, source);\n    }\n    if (colDef.pinned !== void 0) {\n      column.setPinned(colDef.pinned);\n    }\n  }\n  findExistingColumn(newColDef, existingColsCopy) {\n    if (!existingColsCopy) return void 0;\n    for (let i = 0; i < existingColsCopy.length; i++) {\n      const def = existingColsCopy[i].getUserProvidedColDef();\n      if (!def) continue;\n      const newHasId = newColDef.colId != null;\n      if (newHasId) {\n        if (existingColsCopy[i].getId() === newColDef.colId) {\n          return {\n            idx: i,\n            column: existingColsCopy[i]\n          };\n        }\n        continue;\n      }\n      const newHasField = newColDef.field != null;\n      if (newHasField) {\n        if (def.field === newColDef.field) {\n          return {\n            idx: i,\n            column: existingColsCopy[i]\n          };\n        }\n        continue;\n      }\n      if (def === newColDef) {\n        return {\n          idx: i,\n          column: existingColsCopy[i]\n        };\n      }\n    }\n    return void 0;\n  }\n  findExistingGroup(newGroupDef, existingGroups) {\n    const newHasId = newGroupDef.groupId != null;\n    if (!newHasId) {\n      return void 0;\n    }\n    for (let i = 0; i < existingGroups.length; i++) {\n      const existingGroup = existingGroups[i];\n      const existingDef = existingGroup.getColGroupDef();\n      if (!existingDef) {\n        continue;\n      }\n      if (existingGroup.getId() === newGroupDef.groupId) {\n        return {\n          idx: i,\n          group: existingGroup\n        };\n      }\n    }\n    return void 0;\n  }\n  addColumnDefaultAndTypes(colDef, colId) {\n    const res = {};\n    const defaultColDef = this.gos.get(\"defaultColDef\");\n    _mergeDeep(res, defaultColDef, false, true);\n    const columnType = this.updateColDefAndGetColumnType(res, colDef, colId);\n    if (columnType) {\n      this.assignColumnTypes(columnType, res);\n    }\n    _mergeDeep(res, colDef, false, true);\n    const autoGroupColDef = this.gos.get(\"autoGroupColumnDef\");\n    const isSortingCoupled = this.gos.isColumnsSortingCoupledToGroup();\n    if (colDef.rowGroup && autoGroupColDef && isSortingCoupled) {\n      _mergeDeep(res, {\n        sort: autoGroupColDef.sort,\n        initialSort: autoGroupColDef.initialSort\n      }, false, true);\n    }\n    this.dataTypeService?.validateColDef(res);\n    return res;\n  }\n  updateColDefAndGetColumnType(colDef, userColDef, colId) {\n    const dataTypeDefinitionColumnType = this.dataTypeService?.updateColDefAndGetColumnType(colDef, userColDef, colId);\n    const columnTypes = userColDef.type ?? dataTypeDefinitionColumnType ?? colDef.type;\n    colDef.type = columnTypes;\n    return columnTypes ? convertColumnTypes(columnTypes) : void 0;\n  }\n  assignColumnTypes(typeKeys, colDefMerged) {\n    if (!typeKeys.length) {\n      return;\n    }\n    const allColumnTypes = Object.assign({}, DefaultColumnTypes);\n    const userTypes = this.gos.get(\"columnTypes\") || {};\n    _iterateObject(userTypes, (key, value) => {\n      if (key in allColumnTypes) {\n        _warnOnce(`the column type '${key}' is a default column type and cannot be overridden.`);\n      } else {\n        const colType = value;\n        if (colType.type) {\n          _warnOnce(`Column type definitions 'columnTypes' with a 'type' attribute are not supported because a column type cannot refer to another column type. Only column definitions 'columnDefs' can use the 'type' attribute to refer to a column type.`);\n        }\n        allColumnTypes[key] = value;\n      }\n    });\n    typeKeys.forEach(t => {\n      const typeColDef = allColumnTypes[t.trim()];\n      if (typeColDef) {\n        _mergeDeep(colDefMerged, typeColDef, false, true);\n      } else {\n        _warnOnce(\"colDef.type '\" + t + \"' does not correspond to defined gridOptions.columnTypes\");\n      }\n    });\n  }\n  // if object has children, we assume it's a group\n  isColumnGroup(abstractColDef) {\n    return abstractColDef.children !== void 0;\n  }\n};\nfunction depthFirstOriginalTreeSearch(parent, tree, callback) {\n  if (!tree) {\n    return;\n  }\n  for (let i = 0; i < tree.length; i++) {\n    const child = tree[i];\n    if (isProvidedColumnGroup(child)) {\n      depthFirstOriginalTreeSearch(child, child.getChildren(), callback);\n    }\n    callback(child, parent);\n  }\n}\n\n// community-modules/core/src/columns/columnModel.ts\nvar ColumnModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnModel\";\n    // if pivotMode is on, however pivot results are NOT shown if no pivot columns are set\n    this.pivotMode = false;\n    this.autoHeightActiveAtLeastOnce = false;\n    this.ready = false;\n    this.changeEventsDispatching = false;\n    // when we're waiting for cell data types to be inferred, we need to defer column resizing\n    this.shouldQueueResizeOperations = false;\n    this.resizeOperationQueue = [];\n  }\n  wireBeans(beans) {\n    this.context = beans.context;\n    this.columnFactory = beans.columnFactory;\n    this.columnSizeService = beans.columnSizeService;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnViewportService = beans.columnViewportService;\n    this.pivotResultColsService = beans.pivotResultColsService;\n    this.columnAnimationService = beans.columnAnimationService;\n    this.autoColService = beans.autoColService;\n    this.valueCache = beans.valueCache;\n    this.columnDefFactory = beans.columnDefFactory;\n    this.columnApplyStateService = beans.columnApplyStateService;\n    this.columnGroupStateService = beans.columnGroupStateService;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.columnMoveService = beans.columnMoveService;\n    this.columnAutosizeService = beans.columnAutosizeService;\n    this.funcColsService = beans.funcColsService;\n    this.quickFilterService = beans.quickFilterService;\n    this.showRowGroupColsService = beans.showRowGroupColsService;\n    this.environment = beans.environment;\n  }\n  postConstruct() {\n    const pivotMode = this.gos.get(\"pivotMode\");\n    if (this.isPivotSettingAllowed(pivotMode)) {\n      this.pivotMode = pivotMode;\n    }\n    this.addManagedPropertyListeners([\"groupDisplayType\", \"treeData\", \"treeDataDisplayType\", \"groupHideOpenParents\"], event => this.refreshAll(convertSourceType(event.source)));\n    this.addManagedPropertyListener(\"autoGroupColumnDef\", event => this.onAutoGroupColumnDefChanged(convertSourceType(event.source)));\n    this.addManagedPropertyListeners([\"defaultColDef\", \"columnTypes\", \"suppressFieldDotNotation\"], event => this.recreateColumnDefs(convertSourceType(event.source)));\n    this.addManagedPropertyListener(\"pivotMode\", event => this.setPivotMode(this.gos.get(\"pivotMode\"), convertSourceType(event.source)));\n    this.addManagedEventListeners({\n      firstDataRendered: () => this.onFirstDataRendered()\n    });\n  }\n  // called from SyncService, when grid has finished initialising\n  createColsFromColDefs(colsPreviouslyExisted, source) {\n    const dispatchEventsFunc = colsPreviouslyExisted ? this.columnApplyStateService.compareColumnStatesAndDispatchEvents(source) : void 0;\n    this.valueCache.expire();\n    const oldCols = this.colDefCols && this.colDefCols.list;\n    const oldTree = this.colDefCols && this.colDefCols.tree;\n    const newTree = this.columnFactory.createColumnTree(this.colDefs, true, oldTree, source);\n    destroyColumnTree(this.context, this.colDefCols?.tree, newTree.columnTree);\n    const tree = newTree.columnTree;\n    const treeDepth = newTree.treeDept;\n    const list = getColumnsFromTree(tree);\n    const map = {};\n    list.forEach(col => map[col.getId()] = col);\n    this.colDefCols = {\n      tree,\n      treeDepth,\n      list,\n      map\n    };\n    this.funcColsService.extractCols(source, oldCols);\n    this.ready = true;\n    this.refreshCols();\n    const maintainColOrder = colsPreviouslyExisted && !this.showingPivotResult && !this.gos.get(\"maintainColumnOrder\");\n    if (maintainColOrder) {\n      this.orderColsLikeColDefCols();\n    }\n    this.visibleColsService.refresh(source);\n    this.columnViewportService.checkViewportColumns();\n    this.eventDispatcher.everythingChanged(source);\n    if (dispatchEventsFunc) {\n      this.changeEventsDispatching = true;\n      dispatchEventsFunc();\n      this.changeEventsDispatching = false;\n    }\n    this.eventDispatcher.newColumnsLoaded(source);\n    if (source === \"gridInitializing\") {\n      this.columnSizeService.applyAutosizeStrategy();\n    }\n  }\n  // called from: buildAutoGroupColumns (events 'groupDisplayType', 'treeData', 'treeDataDisplayType', 'groupHideOpenParents')\n  // createColsFromColDefs (recreateColumnDefs, setColumnsDefs),\n  // setPivotMode, applyColumnState,\n  // functionColsService.setPrimaryColList, functionColsService.updatePrimaryColList,\n  // pivotResultColsService.setPivotResultCols\n  refreshCols() {\n    if (!this.colDefCols) {\n      return;\n    }\n    const prevColTree = this.cols?.tree;\n    this.saveColOrder();\n    this.selectCols();\n    this.createAutoCols();\n    this.addAutoCols();\n    this.restoreColOrder();\n    this.positionLockedCols();\n    this.showRowGroupColsService?.refresh();\n    this.quickFilterService?.refreshQuickFilterCols();\n    this.setColSpanActive();\n    this.setAutoHeightActive();\n    this.visibleColsService.clear();\n    this.columnViewportService.clear();\n    const dispatchChangedEvent = !_areEqual(prevColTree, this.cols.tree);\n    if (dispatchChangedEvent) {\n      this.eventDispatcher.gridColumns();\n    }\n  }\n  selectCols() {\n    const pivotResultCols = this.pivotResultColsService.getPivotResultCols();\n    this.showingPivotResult = pivotResultCols != null;\n    if (pivotResultCols) {\n      const {\n        map,\n        list,\n        tree,\n        treeDepth\n      } = pivotResultCols;\n      this.cols = {\n        list: list.slice(),\n        map: {\n          ...map\n        },\n        tree: tree.slice(),\n        treeDepth\n      };\n      const hasSameColumns = pivotResultCols.list.some(col => this.cols?.map[col.getColId()] !== void 0);\n      if (!hasSameColumns) {\n        this.lastPivotOrder = null;\n      }\n    } else {\n      const {\n        map,\n        list,\n        tree,\n        treeDepth\n      } = this.colDefCols;\n      this.cols = {\n        list: list.slice(),\n        map: {\n          ...map\n        },\n        tree: tree.slice(),\n        treeDepth\n      };\n    }\n  }\n  getColsToShow() {\n    const showAutoGroupAndValuesOnly = this.isPivotMode() && !this.isShowingPivotResult();\n    const valueColumns = this.funcColsService.getValueColumns();\n    const res = this.cols.list.filter(col => {\n      const isAutoGroupCol = isColumnGroupAutoCol(col);\n      if (showAutoGroupAndValuesOnly) {\n        const isValueCol = valueColumns && _includes(valueColumns, col);\n        return isAutoGroupCol || isValueCol;\n      } else {\n        return isAutoGroupCol || col.isVisible();\n      }\n    });\n    return res;\n  }\n  addAutoCols() {\n    if (this.autoCols == null) {\n      return;\n    }\n    this.cols.list = this.autoCols.list.concat(this.cols.list);\n    this.cols.tree = this.autoCols.tree.concat(this.cols.tree);\n    updateColsMap(this.cols);\n  }\n  createAutoCols() {\n    const groupFullWidthRow = this.gos.isGroupUseEntireRow(this.pivotMode);\n    const suppressAutoColumn = this.pivotMode ? this.gos.get(\"pivotSuppressAutoColumn\") : this.isSuppressAutoCol();\n    const rowGroupCols = this.funcColsService.getRowGroupColumns();\n    const groupingActive = rowGroupCols.length > 0 || this.gos.get(\"treeData\");\n    const noAutoCols = !groupingActive || suppressAutoColumn || groupFullWidthRow;\n    const destroyPrevious = () => {\n      if (this.autoCols) {\n        destroyColumnTree(this.context, this.autoCols.tree);\n        this.autoCols = null;\n      }\n    };\n    if (noAutoCols || !this.autoColService) {\n      destroyPrevious();\n      return;\n    }\n    const list = this.autoColService.createAutoCols(rowGroupCols) ?? [];\n    const autoColsSame = areColIdsEqual(list, this.autoCols?.list || null);\n    const newTreeDepth = this.cols.treeDepth;\n    const oldTreeDepth = this.autoCols ? this.autoCols.treeDepth : -1;\n    const treeDeptSame = oldTreeDepth == newTreeDepth;\n    if (autoColsSame && treeDeptSame) {\n      return;\n    }\n    destroyPrevious();\n    const [tree, treeDepth] = this.columnFactory.createForAutoGroups(list, this.cols?.tree);\n    this.autoCols = {\n      list,\n      tree,\n      treeDepth,\n      map: {}\n    };\n    const putAutocolsFirstInList = cols => {\n      if (!cols) {\n        return null;\n      }\n      const colsFiltered = cols.filter(col => !isColumnGroupAutoCol(col));\n      return [...list, ...colsFiltered];\n    };\n    this.lastOrder = putAutocolsFirstInList(this.lastOrder);\n    this.lastPivotOrder = putAutocolsFirstInList(this.lastPivotOrder);\n  }\n  // on events 'groupDisplayType', 'treeData', 'treeDataDisplayType', 'groupHideOpenParents'\n  refreshAll(source) {\n    if (!this.isReady()) {\n      return;\n    }\n    this.refreshCols();\n    this.visibleColsService.refresh(source);\n  }\n  setColsVisible(keys, visible = false, source) {\n    this.columnApplyStateService.applyColumnState({\n      state: keys.map(key => ({\n        colId: typeof key === \"string\" ? key : key.getColId(),\n        hide: !visible\n      }))\n    }, source);\n  }\n  setColsPinned(keys, pinned, source) {\n    if (!this.cols) {\n      return;\n    }\n    if (_missingOrEmpty(keys)) {\n      return;\n    }\n    if (this.gos.isDomLayout(\"print\")) {\n      _warnOnce(`Changing the column pinning status is not allowed with domLayout='print'`);\n      return;\n    }\n    this.columnAnimationService.start();\n    let actualPinned;\n    if (pinned === true || pinned === \"left\") {\n      actualPinned = \"left\";\n    } else if (pinned === \"right\") {\n      actualPinned = \"right\";\n    } else {\n      actualPinned = null;\n    }\n    const updatedCols = [];\n    keys.forEach(key => {\n      if (!key) {\n        return;\n      }\n      const column = this.getCol(key);\n      if (!column) {\n        return;\n      }\n      if (column.getPinned() !== actualPinned) {\n        column.setPinned(actualPinned);\n        updatedCols.push(column);\n      }\n    });\n    if (updatedCols.length) {\n      this.visibleColsService.refresh(source);\n      this.eventDispatcher.columnPinned(updatedCols, source);\n    }\n    this.columnAnimationService.finish();\n  }\n  // called by headerRenderer - when a header is opened or closed\n  setColumnGroupOpened(key, newValue, source) {\n    let keyAsString;\n    if (isProvidedColumnGroup(key)) {\n      keyAsString = key.getId();\n    } else {\n      keyAsString = key || \"\";\n    }\n    this.columnGroupStateService.setColumnGroupState([{\n      groupId: keyAsString,\n      open: newValue\n    }], source);\n  }\n  getProvidedColGroup(key) {\n    let res = null;\n    depthFirstOriginalTreeSearch(null, this.cols?.tree, node => {\n      if (isProvidedColumnGroup(node)) {\n        if (node.getId() === key) {\n          res = node;\n        }\n      }\n    });\n    return res;\n  }\n  isColGroupLocked(column) {\n    const groupLockGroupColumns = this.gos.get(\"groupLockGroupColumns\");\n    if (!column.isRowGroupActive() || groupLockGroupColumns === 0) {\n      return false;\n    }\n    if (groupLockGroupColumns === -1) {\n      return true;\n    }\n    const rowGroupCols = this.funcColsService.getRowGroupColumns();\n    const colIndex = rowGroupCols.findIndex(groupCol => groupCol.getColId() === column.getColId());\n    return groupLockGroupColumns > colIndex;\n  }\n  isSuppressAutoCol() {\n    const groupDisplayType = this.gos.get(\"groupDisplayType\");\n    const isCustomRowGroups = groupDisplayType === \"custom\";\n    if (isCustomRowGroups) {\n      return true;\n    }\n    const treeDataDisplayType = this.gos.get(\"treeDataDisplayType\");\n    return treeDataDisplayType === \"custom\";\n  }\n  setAutoHeightActive() {\n    this.autoHeightActive = this.cols.list.some(col => col.isAutoHeight());\n    if (this.autoHeightActive) {\n      this.autoHeightActiveAtLeastOnce = true;\n      const supportedRowModel = this.gos.isRowModelType(\"clientSide\") || this.gos.isRowModelType(\"serverSide\");\n      if (!supportedRowModel) {\n        _warnOnce(\"autoHeight columns only work with Client Side Row Model and Server Side Row Model.\");\n      }\n    }\n  }\n  restoreColOrder() {\n    const lastOrder = this.showingPivotResult ? this.lastPivotOrder : this.lastOrder;\n    if (!lastOrder) {\n      return;\n    }\n    const lastOrderMapped = new Map(lastOrder.map((col, index) => [col, index]));\n    const noColsFound = !this.cols.list.some(col => lastOrderMapped.has(col));\n    if (noColsFound) {\n      return;\n    }\n    const colsMap = new Map(this.cols.list.map(col => [col, true]));\n    const lastOrderFiltered = lastOrder.filter(col => colsMap.has(col));\n    const lastOrderFilteredMap = new Map(lastOrderFiltered.map(col => [col, true]));\n    const missingFromLastOrder = this.cols.list.filter(col => !lastOrderFilteredMap.has(col));\n    const res = lastOrderFiltered.slice();\n    missingFromLastOrder.forEach(newCol => {\n      let parent = newCol.getOriginalParent();\n      if (!parent) {\n        res.push(newCol);\n        return;\n      }\n      const siblings = [];\n      while (!siblings.length && parent) {\n        const leafCols = parent.getLeafColumns();\n        leafCols.forEach(leafCol => {\n          const presentInNewCols = res.indexOf(leafCol) >= 0;\n          const notYetInSiblings = siblings.indexOf(leafCol) < 0;\n          if (presentInNewCols && notYetInSiblings) {\n            siblings.push(leafCol);\n          }\n        });\n        parent = parent.getOriginalParent();\n      }\n      if (!siblings.length) {\n        res.push(newCol);\n        return;\n      }\n      const indexes = siblings.map(col => res.indexOf(col));\n      const lastIndex = Math.max(...indexes);\n      _insertIntoArray(res, newCol, lastIndex + 1);\n    });\n    this.cols.list = res;\n  }\n  orderColsLikeColDefCols() {\n    if (!this.colDefCols || !this.cols) {\n      return;\n    }\n    const colsOrdered = this.colDefCols.list.filter(col => this.cols.list.indexOf(col) >= 0);\n    const otherCols = this.cols.list.filter(col => colsOrdered.indexOf(col) < 0);\n    this.cols.list = [...otherCols, ...colsOrdered];\n    this.cols.list = this.columnMoveService.placeLockedColumns(this.cols.list);\n  }\n  sortColsLikeKeys(colIds) {\n    if (this.cols == null) {\n      return;\n    }\n    let newOrder = [];\n    const processedColIds = {};\n    colIds.forEach(colId => {\n      if (processedColIds[colId]) {\n        return;\n      }\n      const col = this.cols.map[colId];\n      if (col) {\n        newOrder.push(col);\n        processedColIds[colId] = true;\n      }\n    });\n    let autoGroupInsertIndex = 0;\n    this.cols.list.forEach(col => {\n      const colId = col.getColId();\n      const alreadyProcessed = processedColIds[colId] != null;\n      if (alreadyProcessed) {\n        return;\n      }\n      const isAutoGroupCol = colId.startsWith(GROUP_AUTO_COLUMN_ID);\n      if (isAutoGroupCol) {\n        _insertIntoArray(newOrder, col, autoGroupInsertIndex++);\n      } else {\n        newOrder.push(col);\n      }\n    });\n    newOrder = this.columnMoveService.placeLockedColumns(newOrder);\n    if (!this.columnMoveService.doesMovePassMarryChildren(newOrder)) {\n      _warnOnce(\"Applying column order broke a group where columns should be married together. Applying new order has been discarded.\");\n      return;\n    }\n    this.cols.list = newOrder;\n  }\n  // returns the provided cols sorted in same order as they appear in this.cols, eg if this.cols\n  // contains [a,b,c,d,e] and col passed is [e,a] then the passed cols are sorted into [a,e]\n  sortColsLikeCols(cols) {\n    if (!cols || cols.length <= 1) {\n      return;\n    }\n    const notAllColsPresent = cols.filter(c => this.cols.list.indexOf(c) < 0).length > 0;\n    if (notAllColsPresent) {\n      return;\n    }\n    cols.sort((a, b) => {\n      const indexA = this.cols.list.indexOf(a);\n      const indexB = this.cols.list.indexOf(b);\n      return indexA - indexB;\n    });\n  }\n  resetColDefIntoCol(column, source) {\n    const userColDef = column.getUserProvidedColDef();\n    if (!userColDef) {\n      return false;\n    }\n    const newColDef = this.columnFactory.addColumnDefaultAndTypes(userColDef, column.getColId());\n    column.setColDef(newColDef, userColDef, source);\n    return true;\n  }\n  queueResizeOperations() {\n    this.shouldQueueResizeOperations = true;\n  }\n  isShouldQueueResizeOperations() {\n    return this.shouldQueueResizeOperations;\n  }\n  processResizeOperations() {\n    this.shouldQueueResizeOperations = false;\n    this.resizeOperationQueue.forEach(resizeOperation => resizeOperation());\n    this.resizeOperationQueue = [];\n  }\n  pushResizeOperation(func) {\n    this.resizeOperationQueue.push(func);\n  }\n  moveInCols(movedColumns, toIndex, source) {\n    _moveInArray(this.cols?.list, movedColumns, toIndex);\n    this.visibleColsService.refresh(source);\n  }\n  positionLockedCols() {\n    this.cols.list = this.columnMoveService.placeLockedColumns(this.cols.list);\n  }\n  saveColOrder() {\n    if (this.showingPivotResult) {\n      this.lastPivotOrder = this.cols?.list;\n    } else {\n      this.lastOrder = this.cols?.list;\n    }\n  }\n  getColumnDefs() {\n    if (!this.colDefCols) {\n      return;\n    }\n    const cols = this.colDefCols.list.slice();\n    if (this.showingPivotResult) {\n      cols.sort((a, b) => this.lastOrder.indexOf(a) - this.lastOrder.indexOf(b));\n    } else if (this.lastOrder) {\n      cols.sort((a, b) => this.cols.list.indexOf(a) - this.cols.list.indexOf(b));\n    }\n    const rowGroupColumns = this.funcColsService.getRowGroupColumns();\n    const pivotColumns = this.funcColsService.getPivotColumns();\n    return this.columnDefFactory.buildColumnDefs(cols, rowGroupColumns, pivotColumns);\n  }\n  isShowingPivotResult() {\n    return this.showingPivotResult;\n  }\n  // called by clientSideRowModel.refreshModel\n  isChangeEventsDispatching() {\n    return this.changeEventsDispatching;\n  }\n  isColSpanActive() {\n    return this.colSpanActive;\n  }\n  // used by Column Tool Panel\n  isProvidedColGroupsPresent() {\n    return this.colDefCols?.treeDepth > 0;\n  }\n  setColSpanActive() {\n    this.colSpanActive = this.cols.list.some(col => col.getColDef().colSpan != null);\n  }\n  isAutoRowHeightActive() {\n    return this.autoHeightActive;\n  }\n  wasAutoRowHeightEverActive() {\n    return this.autoHeightActiveAtLeastOnce;\n  }\n  // + gridPanel -> for resizing the body and setting top margin\n  getHeaderRowCount() {\n    return this.cols ? this.cols.treeDepth + 1 : -1;\n  }\n  isReady() {\n    return this.ready;\n  }\n  isPivotMode() {\n    return this.pivotMode;\n  }\n  setPivotMode(pivotMode, source) {\n    if (pivotMode === this.pivotMode || !this.isPivotSettingAllowed(this.pivotMode)) {\n      return;\n    }\n    this.pivotMode = pivotMode;\n    if (!this.ready) {\n      return;\n    }\n    this.refreshCols();\n    this.visibleColsService.refresh(source);\n    this.eventDispatcher.pivotModeChanged();\n  }\n  isPivotSettingAllowed(pivot) {\n    if (pivot && this.gos.get(\"treeData\")) {\n      _warnOnce(\"Pivot mode not available with treeData.\");\n      return false;\n    }\n    return true;\n  }\n  // + clientSideRowModel\n  isPivotActive() {\n    const pivotColumns = this.funcColsService.getPivotColumns();\n    return this.pivotMode && !_missingOrEmpty(pivotColumns);\n  }\n  // called when dataTypes change\n  recreateColumnDefs(source) {\n    if (!this.cols) {\n      return;\n    }\n    if (this.autoCols) {\n      this.autoColService.updateAutoCols(this.autoCols.list, source);\n    }\n    this.createColsFromColDefs(true, source);\n  }\n  setColumnDefs(columnDefs, source) {\n    const colsPreviouslyExisted = !!this.colDefs;\n    this.colDefs = columnDefs;\n    this.createColsFromColDefs(colsPreviouslyExisted, source);\n  }\n  destroy() {\n    destroyColumnTree(this.context, this.colDefCols?.tree);\n    destroyColumnTree(this.context, this.autoCols?.tree);\n    super.destroy();\n  }\n  getColTree() {\n    return this.cols.tree;\n  }\n  // + columnSelectPanel\n  getColDefColTree() {\n    return this.colDefCols.tree;\n  }\n  // + clientSideRowController -> sorting, building quick filter text\n  // + headerRenderer -> sorting (clearing icon)\n  getColDefCols() {\n    return this.colDefCols?.list ? this.colDefCols.list : null;\n  }\n  // + moveColumnController\n  getCols() {\n    return this.cols?.list ?? [];\n  }\n  // returns colDefCols, pivotResultCols and autoCols\n  getAllCols() {\n    const pivotResultCols = this.pivotResultColsService.getPivotResultCols();\n    const pivotResultColsList = pivotResultCols?.list;\n    return [].concat(...[this.colDefCols?.list || [], this.autoCols?.list || [], pivotResultColsList || []]);\n  }\n  getColsForKeys(keys) {\n    if (!keys) {\n      return [];\n    }\n    const res = keys.map(key => this.getCol(key)).filter(col => col != null);\n    return res;\n  }\n  getColDefCol(key) {\n    if (!this.colDefCols?.list) {\n      return null;\n    }\n    return this.getColFromCollection(key, this.colDefCols);\n  }\n  getCol(key) {\n    if (key == null) {\n      return null;\n    }\n    return this.getColFromCollection(key, this.cols);\n  }\n  getColFromCollection(key, cols) {\n    if (cols == null) {\n      return null;\n    }\n    const {\n      map,\n      list\n    } = cols;\n    if (typeof key == \"string\" && map[key]) {\n      return map[key];\n    }\n    for (let i = 0; i < list.length; i++) {\n      if (columnsMatch(list[i], key)) {\n        return list[i];\n      }\n    }\n    return this.getAutoCol(key);\n  }\n  getAutoCol(key) {\n    if (this.autoCols == null) return null;\n    return this.autoCols.list.find(groupCol => columnsMatch(groupCol, key)) || null;\n  }\n  getAutoCols() {\n    return this.autoCols?.list || null;\n  }\n  setColHeaderHeight(col, height) {\n    const changed = col.setAutoHeaderHeight(height);\n    if (changed) {\n      this.eventDispatcher.headerHeight(col);\n    }\n  }\n  getColumnGroupHeaderRowHeight() {\n    if (this.isPivotMode()) {\n      return this.getPivotGroupHeaderHeight();\n    }\n    return this.getGroupHeaderHeight();\n  }\n  getColumnHeaderRowHeight() {\n    const defaultHeight = this.isPivotMode() ? this.getPivotHeaderHeight() : this.getHeaderHeight();\n    const allDisplayedCols = this.visibleColsService.getAllCols();\n    const displayedHeights = allDisplayedCols.filter(col => col.isAutoHeaderHeight()).map(col => col.getAutoHeaderHeight() || 0);\n    return Math.max(defaultHeight, ...displayedHeights);\n  }\n  getHeaderHeight() {\n    return this.gos.get(\"headerHeight\") ?? this.environment.getDefaultHeaderHeight();\n  }\n  getFloatingFiltersHeight() {\n    return this.gos.get(\"floatingFiltersHeight\") ?? this.getHeaderHeight();\n  }\n  getGroupHeaderHeight() {\n    return this.gos.get(\"groupHeaderHeight\") ?? this.getHeaderHeight();\n  }\n  getPivotHeaderHeight() {\n    return this.gos.get(\"pivotHeaderHeight\") ?? this.getHeaderHeight();\n  }\n  getPivotGroupHeaderHeight() {\n    return this.gos.get(\"pivotGroupHeaderHeight\") ?? this.getGroupHeaderHeight();\n  }\n  onFirstDataRendered() {\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\n    if (autoSizeStrategy?.type !== \"fitCellContents\") {\n      return;\n    }\n    const {\n      colIds: columns,\n      skipHeader\n    } = autoSizeStrategy;\n    setTimeout(() => {\n      if (columns) {\n        this.columnAutosizeService.autoSizeCols({\n          colKeys: columns,\n          skipHeader,\n          source: \"autosizeColumns\"\n        });\n      } else {\n        this.columnAutosizeService.autoSizeAllColumns(\"autosizeColumns\", skipHeader);\n      }\n    });\n  }\n  onAutoGroupColumnDefChanged(source) {\n    if (this.autoCols) {\n      this.autoColService.updateAutoCols(this.autoCols.list, source);\n    }\n  }\n};\nfunction convertSourceType(source) {\n  return source === \"gridOptionsUpdated\" ? \"gridOptionsChanged\" : source;\n}\nfunction updateColsMap(cols) {\n  cols.map = {};\n  cols.list.forEach(col => cols.map[col.getId()] = col);\n}\nfunction columnsMatch(column, key) {\n  const columnMatches = column === key;\n  const colDefMatches = column.getColDef() === key;\n  const idMatches = column.getColId() == key;\n  return columnMatches || colDefMatches || idMatches;\n}\nfunction areColIdsEqual(colsA, colsB) {\n  return _areEqual(colsA, colsB, (a, b) => a.getColId() === b.getColId());\n}\n\n// community-modules/core/src/columns/columnAutosizeService.ts\nvar ColumnAutosizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnAutosizeService\";\n    this.timesDelayed = 0;\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.animationFrameService = beans.animationFrameService;\n    this.autoWidthCalculator = beans.autoWidthCalculator;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.ctrlsService = beans.ctrlsService;\n    this.renderStatusService = beans.renderStatusService;\n  }\n  autoSizeCols(params) {\n    if (this.columnModel.isShouldQueueResizeOperations()) {\n      this.columnModel.pushResizeOperation(() => this.autoSizeCols(params));\n      return;\n    }\n    const {\n      colKeys,\n      skipHeader,\n      skipHeaderGroups,\n      stopAtGroup,\n      source = \"api\"\n    } = params;\n    this.animationFrameService.flushAllFrames();\n    if (this.timesDelayed < 5 && this.renderStatusService && !this.renderStatusService.areHeaderCellsRendered()) {\n      this.timesDelayed++;\n      setTimeout(() => this.autoSizeCols(params));\n      return;\n    }\n    this.timesDelayed = 0;\n    const columnsAutosized = [];\n    let changesThisTimeAround = -1;\n    const shouldSkipHeader = skipHeader != null ? skipHeader : this.gos.get(\"skipHeaderOnAutoSize\");\n    const shouldSkipHeaderGroups = skipHeaderGroups != null ? skipHeaderGroups : shouldSkipHeader;\n    while (changesThisTimeAround !== 0) {\n      changesThisTimeAround = 0;\n      const updatedColumns = [];\n      colKeys.forEach(key => {\n        if (!key) {\n          return;\n        }\n        const column = this.columnModel.getCol(key);\n        if (!column) {\n          return;\n        }\n        if (columnsAutosized.indexOf(column) >= 0) {\n          return;\n        }\n        const preferredWidth = this.autoWidthCalculator.getPreferredWidthForColumn(column, shouldSkipHeader);\n        if (preferredWidth > 0) {\n          const newWidth = this.normaliseColumnWidth(column, preferredWidth);\n          column.setActualWidth(newWidth, source);\n          columnsAutosized.push(column);\n          changesThisTimeAround++;\n        }\n        updatedColumns.push(column);\n      });\n      if (!updatedColumns.length) {\n        continue;\n      }\n      this.visibleColsService.refresh(source);\n    }\n    if (!shouldSkipHeaderGroups) {\n      this.autoSizeColumnGroupsByColumns(colKeys, source, stopAtGroup);\n    }\n    this.eventDispatcher.columnResized(columnsAutosized, true, \"autosizeColumns\");\n  }\n  autoSizeColumn(key, source, skipHeader) {\n    if (key) {\n      this.autoSizeCols({\n        colKeys: [key],\n        skipHeader,\n        skipHeaderGroups: true,\n        source\n      });\n    }\n  }\n  autoSizeColumnGroupsByColumns(keys, source, stopAtGroup) {\n    const columnGroups = /* @__PURE__ */new Set();\n    const columns = this.columnModel.getColsForKeys(keys);\n    columns.forEach(col => {\n      let parent = col.getParent();\n      while (parent && parent != stopAtGroup) {\n        if (!parent.isPadding()) {\n          columnGroups.add(parent);\n        }\n        parent = parent.getParent();\n      }\n    });\n    let headerGroupCtrl;\n    const resizedColumns = [];\n    for (const columnGroup of columnGroups) {\n      for (const headerContainerCtrl of this.ctrlsService.getHeaderRowContainerCtrls()) {\n        headerGroupCtrl = headerContainerCtrl.getHeaderCtrlForColumn(columnGroup);\n        if (headerGroupCtrl) {\n          break;\n        }\n      }\n      if (headerGroupCtrl) {\n        headerGroupCtrl.resizeLeafColumnsToFit(source);\n      }\n    }\n    return resizedColumns;\n  }\n  autoSizeAllColumns(source, skipHeader) {\n    if (this.columnModel.isShouldQueueResizeOperations()) {\n      this.columnModel.pushResizeOperation(() => this.autoSizeAllColumns(source, skipHeader));\n      return;\n    }\n    const allDisplayedColumns = this.visibleColsService.getAllCols();\n    this.autoSizeCols({\n      colKeys: allDisplayedColumns,\n      skipHeader,\n      source\n    });\n  }\n  // returns the width we can set to this col, taking into consideration min and max widths\n  normaliseColumnWidth(column, newWidth) {\n    const minWidth = column.getMinWidth();\n    if (newWidth < minWidth) {\n      newWidth = minWidth;\n    }\n    const maxWidth = column.getMaxWidth();\n    if (column.isGreaterThanMax(newWidth)) {\n      newWidth = maxWidth;\n    }\n    return newWidth;\n  }\n};\n\n// community-modules/core/src/columns/funcColsService.ts\nvar FuncColsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"funcColsService\";\n    this.rowGroupCols = [];\n    this.valueCols = [];\n    this.pivotCols = [];\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.aggFuncService = beans.aggFuncService;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  getModifyColumnsNoEventsCallbacks() {\n    return {\n      addGroupCol: column => this.rowGroupCols.push(column),\n      removeGroupCol: column => _removeFromArray(this.rowGroupCols, column),\n      addPivotCol: column => this.pivotCols.push(column),\n      removePivotCol: column => _removeFromArray(this.pivotCols, column),\n      addValueCol: column => this.valueCols.push(column),\n      removeValueCol: column => _removeFromArray(this.valueCols, column)\n    };\n  }\n  getSourceColumnsForGroupColumn(groupCol) {\n    const sourceColumnId = groupCol.getColDef().showRowGroup;\n    if (!sourceColumnId) {\n      return null;\n    }\n    if (sourceColumnId === true) {\n      return this.rowGroupCols.slice(0);\n    }\n    const column = this.columnModel.getColDefCol(sourceColumnId);\n    return column ? [column] : null;\n  }\n  sortRowGroupColumns(compareFn) {\n    this.rowGroupCols.sort(compareFn);\n  }\n  sortPivotColumns(compareFn) {\n    this.pivotCols.sort(compareFn);\n  }\n  // + rowController\n  getValueColumns() {\n    return this.valueCols ? this.valueCols : [];\n  }\n  // + rowController\n  getPivotColumns() {\n    return this.pivotCols ? this.pivotCols : [];\n  }\n  // + toolPanel\n  getRowGroupColumns() {\n    return this.rowGroupCols ? this.rowGroupCols : [];\n  }\n  isRowGroupEmpty() {\n    return _missingOrEmpty(this.rowGroupCols);\n  }\n  setColumnAggFunc(key, aggFunc, source) {\n    if (!key) {\n      return;\n    }\n    const column = this.columnModel.getColDefCol(key);\n    if (!column) {\n      return;\n    }\n    column.setAggFunc(aggFunc);\n    this.eventDispatcher.columnChanged(\"columnValueChanged\", [column], source);\n  }\n  setRowGroupColumns(colKeys, source) {\n    this.setColList(colKeys, this.rowGroupCols, \"columnRowGroupChanged\", true, true, (added, column) => this.setRowGroupActive(added, column, source), source);\n  }\n  setRowGroupActive(active, column, source) {\n    if (active === column.isRowGroupActive()) {\n      return;\n    }\n    column.setRowGroupActive(active, source);\n    if (active && !this.gos.get(\"suppressRowGroupHidesColumns\")) {\n      this.columnModel.setColsVisible([column], false, source);\n    }\n    if (!active && !this.gos.get(\"suppressMakeColumnVisibleAfterUnGroup\")) {\n      this.columnModel.setColsVisible([column], true, source);\n    }\n  }\n  addRowGroupColumns(keys, source) {\n    this.updateColList(keys, this.rowGroupCols, true, true, column => this.setRowGroupActive(true, column, source), \"columnRowGroupChanged\", source);\n  }\n  removeRowGroupColumns(keys, source) {\n    this.updateColList(keys, this.rowGroupCols, false, true, column => this.setRowGroupActive(false, column, source), \"columnRowGroupChanged\", source);\n  }\n  addPivotColumns(keys, source) {\n    this.updateColList(keys, this.pivotCols, true, false, column => column.setPivotActive(true, source), \"columnPivotChanged\", source);\n  }\n  setPivotColumns(colKeys, source) {\n    this.setColList(colKeys, this.pivotCols, \"columnPivotChanged\", true, false, (added, column) => {\n      column.setPivotActive(added, source);\n    }, source);\n  }\n  removePivotColumns(keys, source) {\n    this.updateColList(keys, this.pivotCols, false, false, column => column.setPivotActive(false, source), \"columnPivotChanged\", source);\n  }\n  setValueColumns(colKeys, source) {\n    this.setColList(colKeys, this.valueCols, \"columnValueChanged\", false, false, (added, column) => this.setValueActive(added, column, source), source);\n  }\n  setValueActive(active, column, source) {\n    if (active === column.isValueActive()) {\n      return;\n    }\n    column.setValueActive(active, source);\n    if (active && !column.getAggFunc() && this.aggFuncService) {\n      const initialAggFunc = this.aggFuncService.getDefaultAggFunc(column);\n      column.setAggFunc(initialAggFunc);\n    }\n  }\n  addValueColumns(keys, source) {\n    this.updateColList(keys, this.valueCols, true, false, column => this.setValueActive(true, column, source), \"columnValueChanged\", source);\n  }\n  removeValueColumns(keys, source) {\n    this.updateColList(keys, this.valueCols, false, false, column => this.setValueActive(false, column, source), \"columnValueChanged\", source);\n  }\n  moveRowGroupColumn(fromIndex, toIndex, source) {\n    if (this.isRowGroupEmpty()) {\n      return;\n    }\n    const column = this.rowGroupCols[fromIndex];\n    const impactedColumns = this.rowGroupCols.slice(fromIndex, toIndex);\n    this.rowGroupCols.splice(fromIndex, 1);\n    this.rowGroupCols.splice(toIndex, 0, column);\n    this.eventDispatcher.rowGroupChanged(impactedColumns, source);\n  }\n  setColList(colKeys, masterList, eventName, detectOrderChange, autoGroupsNeedBuilding, columnCallback, source) {\n    const gridColumns = this.columnModel.getCols();\n    if (_missingOrEmpty(gridColumns)) {\n      return;\n    }\n    const changes = /* @__PURE__ */new Map();\n    masterList.forEach((col, idx) => changes.set(col, idx));\n    masterList.length = 0;\n    if (_exists(colKeys)) {\n      colKeys.forEach(key => {\n        const column = this.columnModel.getColDefCol(key);\n        if (column) {\n          masterList.push(column);\n        }\n      });\n    }\n    masterList.forEach((col, idx) => {\n      const oldIndex = changes.get(col);\n      if (oldIndex === void 0) {\n        changes.set(col, 0);\n        return;\n      }\n      if (detectOrderChange && oldIndex !== idx) {\n        return;\n      }\n      changes.delete(col);\n    });\n    const primaryCols = this.columnModel.getColDefCols();\n    (primaryCols || []).forEach(column => {\n      const added = masterList.indexOf(column) >= 0;\n      columnCallback(added, column);\n    });\n    autoGroupsNeedBuilding && this.columnModel.refreshCols();\n    this.visibleColsService.refresh(source);\n    this.eventDispatcher.columnChanged(eventName, [...changes.keys()], source);\n  }\n  updateColList(keys, masterList, actionIsAdd, autoGroupsNeedBuilding, columnCallback, eventType, source) {\n    if (!keys || _missingOrEmpty(keys)) {\n      return;\n    }\n    let atLeastOne = false;\n    keys.forEach(key => {\n      if (!key) {\n        return;\n      }\n      const columnToAdd = this.columnModel.getColDefCol(key);\n      if (!columnToAdd) {\n        return;\n      }\n      if (actionIsAdd) {\n        if (masterList.indexOf(columnToAdd) >= 0) {\n          return;\n        }\n        masterList.push(columnToAdd);\n      } else {\n        if (masterList.indexOf(columnToAdd) < 0) {\n          return;\n        }\n        _removeFromArray(masterList, columnToAdd);\n      }\n      columnCallback(columnToAdd);\n      atLeastOne = true;\n    });\n    if (!atLeastOne) {\n      return;\n    }\n    if (autoGroupsNeedBuilding) {\n      this.columnModel.refreshCols();\n    }\n    this.visibleColsService.refresh(source);\n    this.eventDispatcher.genericColumnEvent(eventType, masterList, source);\n  }\n  extractCols(source, oldProvidedCols) {\n    this.extractRowGroupCols(source, oldProvidedCols);\n    this.extractPivotCols(source, oldProvidedCols);\n    this.extractValueCols(source, oldProvidedCols);\n  }\n  extractValueCols(source, oldProvidedCols) {\n    this.valueCols = this.extractColsCommon(oldProvidedCols, this.valueCols, (col, flag) => col.setValueActive(flag, source),\n    // aggFunc doesn't have index variant, cos order of value cols doesn't matter, so always return null\n    () => void 0, () => void 0,\n    // aggFunc is a string, so return it's existence\n    colDef => {\n      const aggFunc = colDef.aggFunc;\n      if (aggFunc === null || aggFunc === \"\") {\n        return null;\n      }\n      if (aggFunc === void 0) {\n        return;\n      }\n      return !!aggFunc;\n    }, colDef => {\n      return colDef.initialAggFunc != null && colDef.initialAggFunc != \"\";\n    });\n    this.valueCols.forEach(col => {\n      const colDef = col.getColDef();\n      if (colDef.aggFunc != null && colDef.aggFunc != \"\") {\n        col.setAggFunc(colDef.aggFunc);\n      } else {\n        if (!col.getAggFunc()) {\n          col.setAggFunc(colDef.initialAggFunc);\n        }\n      }\n    });\n  }\n  extractRowGroupCols(source, oldProvidedCols) {\n    this.rowGroupCols = this.extractColsCommon(oldProvidedCols, this.rowGroupCols, (col, flag) => col.setRowGroupActive(flag, source), colDef => colDef.rowGroupIndex, colDef => colDef.initialRowGroupIndex, colDef => colDef.rowGroup, colDef => colDef.initialRowGroup);\n  }\n  extractPivotCols(source, oldProvidedCols) {\n    this.pivotCols = this.extractColsCommon(oldProvidedCols, this.pivotCols, (col, flag) => col.setPivotActive(flag, source), colDef => colDef.pivotIndex, colDef => colDef.initialPivotIndex, colDef => colDef.pivot, colDef => colDef.initialPivot);\n  }\n  extractColsCommon(oldProvidedCols = [], previousCols = [], setFlagFunc, getIndexFunc, getInitialIndexFunc, getValueFunc, getInitialValueFunc) {\n    const colsWithIndex = [];\n    const colsWithValue = [];\n    const primaryCols = this.columnModel.getColDefCols() || [];\n    primaryCols.forEach(col => {\n      const colIsNew = oldProvidedCols.indexOf(col) < 0;\n      const colDef = col.getColDef();\n      const value = _attrToBoolean(getValueFunc(colDef));\n      const initialValue = _attrToBoolean(getInitialValueFunc(colDef));\n      const index = _attrToNumber(getIndexFunc(colDef));\n      const initialIndex = _attrToNumber(getInitialIndexFunc(colDef));\n      let include;\n      const valuePresent = value !== void 0;\n      const indexPresent = index !== void 0;\n      const initialValuePresent = initialValue !== void 0;\n      const initialIndexPresent = initialIndex !== void 0;\n      if (valuePresent) {\n        include = value;\n      } else if (indexPresent) {\n        if (index === null) {\n          include = false;\n        } else {\n          include = index >= 0;\n        }\n      } else {\n        if (colIsNew) {\n          if (initialValuePresent) {\n            include = initialValue;\n          } else if (initialIndexPresent) {\n            include = initialIndex != null && initialIndex >= 0;\n          } else {\n            include = false;\n          }\n        } else {\n          include = previousCols.indexOf(col) >= 0;\n        }\n      }\n      if (include) {\n        const useIndex = colIsNew ? index != null || initialIndex != null : index != null;\n        useIndex ? colsWithIndex.push(col) : colsWithValue.push(col);\n      }\n    });\n    const getIndexForCol = col => {\n      const index = getIndexFunc(col.getColDef());\n      const defaultIndex = getInitialIndexFunc(col.getColDef());\n      return index != null ? index : defaultIndex;\n    };\n    colsWithIndex.sort((colA, colB) => {\n      const indexA = getIndexForCol(colA);\n      const indexB = getIndexForCol(colB);\n      if (indexA === indexB) {\n        return 0;\n      }\n      if (indexA < indexB) {\n        return -1;\n      }\n      return 1;\n    });\n    const res = [].concat(colsWithIndex);\n    previousCols.forEach(col => {\n      if (colsWithValue.indexOf(col) >= 0) {\n        res.push(col);\n      }\n    });\n    colsWithValue.forEach(col => {\n      if (res.indexOf(col) < 0) {\n        res.push(col);\n      }\n    });\n    previousCols.forEach(col => {\n      if (res.indexOf(col) < 0) {\n        setFlagFunc(col, false);\n      }\n    });\n    res.forEach(col => {\n      if (previousCols.indexOf(col) < 0) {\n        setFlagFunc(col, true);\n      }\n    });\n    return res;\n  }\n  generateColumnStateForRowGroupAndPivotIndexes(updatedRowGroupColumnState, updatedPivotColumnState) {\n    const existingColumnStateUpdates = {};\n    const orderColumns = (updatedColumnState, colList, enableProp, initialEnableProp, indexProp, initialIndexProp) => {\n      const primaryCols = this.columnModel.getColDefCols();\n      if (!colList.length || !primaryCols) {\n        return [];\n      }\n      const updatedColIdArray = Object.keys(updatedColumnState);\n      const updatedColIds = new Set(updatedColIdArray);\n      const newColIds = new Set(updatedColIdArray);\n      const allColIds = new Set(colList.map(column => {\n        const colId = column.getColId();\n        newColIds.delete(colId);\n        return colId;\n      }).concat(updatedColIdArray));\n      const colIdsInOriginalOrder = [];\n      const originalOrderMap = {};\n      let orderIndex = 0;\n      for (let i = 0; i < primaryCols.length; i++) {\n        const colId = primaryCols[i].getColId();\n        if (allColIds.has(colId)) {\n          colIdsInOriginalOrder.push(colId);\n          originalOrderMap[colId] = orderIndex++;\n        }\n      }\n      let index = 1e3;\n      let hasAddedNewCols = false;\n      let lastIndex = 0;\n      const processPrecedingNewCols = colId => {\n        const originalOrderIndex = originalOrderMap[colId];\n        for (let i = lastIndex; i < originalOrderIndex; i++) {\n          const newColId = colIdsInOriginalOrder[i];\n          if (newColIds.has(newColId)) {\n            updatedColumnState[newColId][indexProp] = index++;\n            newColIds.delete(newColId);\n          }\n        }\n        lastIndex = originalOrderIndex;\n      };\n      colList.forEach(column => {\n        const colId = column.getColId();\n        if (updatedColIds.has(colId)) {\n          processPrecedingNewCols(colId);\n          updatedColumnState[colId][indexProp] = index++;\n        } else {\n          const colDef = column.getColDef();\n          const missingIndex = colDef[indexProp] === null || colDef[indexProp] === void 0 && colDef[initialIndexProp] == null;\n          if (missingIndex) {\n            if (!hasAddedNewCols) {\n              const propEnabled = colDef[enableProp] || colDef[enableProp] === void 0 && colDef[initialEnableProp];\n              if (propEnabled) {\n                processPrecedingNewCols(colId);\n              } else {\n                newColIds.forEach(newColId => {\n                  updatedColumnState[newColId][indexProp] = index + originalOrderMap[newColId];\n                });\n                index += colIdsInOriginalOrder.length;\n                hasAddedNewCols = true;\n              }\n            }\n            if (!existingColumnStateUpdates[colId]) {\n              existingColumnStateUpdates[colId] = {\n                colId\n              };\n            }\n            existingColumnStateUpdates[colId][indexProp] = index++;\n          }\n        }\n      });\n    };\n    orderColumns(updatedRowGroupColumnState, this.rowGroupCols, \"rowGroup\", \"initialRowGroup\", \"rowGroupIndex\", \"initialRowGroupIndex\");\n    orderColumns(updatedPivotColumnState, this.pivotCols, \"pivot\", \"initialPivot\", \"pivotIndex\", \"initialPivotIndex\");\n    return Object.values(existingColumnStateUpdates);\n  }\n};\n\n// community-modules/core/src/columns/columnApplyStateService.ts\nvar ColumnApplyStateService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnApplyStateService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.sortController = beans.sortController;\n    this.columnGetStateService = beans.columnGetStateService;\n    this.funcColsService = beans.funcColsService;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnAnimationService = beans.columnAnimationService;\n    this.pivotResultColsService = beans.pivotResultColsService;\n  }\n  applyColumnState(params, source) {\n    const providedCols = this.columnModel.getColDefCols() || [];\n    if (_missingOrEmpty(providedCols)) {\n      return false;\n    }\n    if (params && params.state && !params.state.forEach) {\n      _warnOnce(\"applyColumnState() - the state attribute should be an array, however an array was not found. Please provide an array of items (one for each col you want to change) for state.\");\n      return false;\n    }\n    const callbacks = this.funcColsService.getModifyColumnsNoEventsCallbacks();\n    const applyStates = (states, existingColumns, getById) => {\n      const dispatchEventsFunc = this.compareColumnStatesAndDispatchEvents(source);\n      const columnsWithNoState = existingColumns.slice();\n      const rowGroupIndexes = {};\n      const pivotIndexes = {};\n      const autoColStates = [];\n      const unmatchedAndAutoStates2 = [];\n      let unmatchedCount2 = 0;\n      const previousRowGroupCols = this.funcColsService.getRowGroupColumns().slice();\n      const previousPivotCols = this.funcColsService.getPivotColumns().slice();\n      states.forEach(state => {\n        const colId = state.colId || \"\";\n        const isAutoGroupColumn = colId.startsWith(GROUP_AUTO_COLUMN_ID);\n        if (isAutoGroupColumn) {\n          autoColStates.push(state);\n          unmatchedAndAutoStates2.push(state);\n          return;\n        }\n        const column = getById(colId);\n        if (!column) {\n          unmatchedAndAutoStates2.push(state);\n          unmatchedCount2 += 1;\n        } else {\n          this.syncColumnWithStateItem(column, state, params.defaultState, rowGroupIndexes, pivotIndexes, false, source, callbacks);\n          _removeFromArray(columnsWithNoState, column);\n        }\n      });\n      const applyDefaultsFunc = col => this.syncColumnWithStateItem(col, null, params.defaultState, rowGroupIndexes, pivotIndexes, false, source, callbacks);\n      columnsWithNoState.forEach(applyDefaultsFunc);\n      this.funcColsService.sortRowGroupColumns(comparatorByIndex.bind(this, rowGroupIndexes, previousRowGroupCols));\n      this.funcColsService.sortPivotColumns(comparatorByIndex.bind(this, pivotIndexes, previousPivotCols));\n      this.columnModel.refreshCols();\n      const autoCols = this.columnModel.getAutoCols() || [];\n      const autoColsCopy = autoCols.slice();\n      autoColStates.forEach(stateItem => {\n        const autoCol = this.columnModel.getAutoCol(stateItem.colId);\n        _removeFromArray(autoColsCopy, autoCol);\n        this.syncColumnWithStateItem(autoCol, stateItem, params.defaultState, null, null, true, source, callbacks);\n      });\n      autoColsCopy.forEach(applyDefaultsFunc);\n      this.orderLiveColsLikeState(params);\n      this.visibleColsService.refresh(source);\n      this.eventDispatcher.everythingChanged(source);\n      dispatchEventsFunc();\n      return {\n        unmatchedAndAutoStates: unmatchedAndAutoStates2,\n        unmatchedCount: unmatchedCount2\n      };\n    };\n    this.columnAnimationService.start();\n    let {\n      unmatchedAndAutoStates,\n      unmatchedCount\n    } = applyStates(params.state || [], providedCols, id => this.columnModel.getColDefCol(id));\n    if (unmatchedAndAutoStates.length > 0 || _exists(params.defaultState)) {\n      const pivotResultCols = this.pivotResultColsService.getPivotResultCols();\n      const pivotResultColsList = pivotResultCols?.list;\n      unmatchedCount = applyStates(unmatchedAndAutoStates, pivotResultColsList || [], id => this.pivotResultColsService.getPivotResultCol(id)).unmatchedCount;\n    }\n    this.columnAnimationService.finish();\n    return unmatchedCount === 0;\n  }\n  resetColumnState(source) {\n    const primaryCols = this.columnModel.getColDefCols();\n    if (_missingOrEmpty(primaryCols)) {\n      return;\n    }\n    const primaryColumnTree = this.columnModel.getColDefColTree();\n    const primaryColumns = getColumnsFromTree(primaryColumnTree);\n    const columnStates = [];\n    let letRowGroupIndex = 1e3;\n    let letPivotIndex = 1e3;\n    let colsToProcess = [];\n    const groupAutoCols = this.columnModel.getAutoCols();\n    if (groupAutoCols) {\n      colsToProcess = colsToProcess.concat(groupAutoCols);\n    }\n    if (primaryColumns) {\n      colsToProcess = colsToProcess.concat(primaryColumns);\n    }\n    colsToProcess.forEach(column => {\n      const stateItem = this.getColumnStateFromColDef(column);\n      if (_missing(stateItem.rowGroupIndex) && stateItem.rowGroup) {\n        stateItem.rowGroupIndex = letRowGroupIndex++;\n      }\n      if (_missing(stateItem.pivotIndex) && stateItem.pivot) {\n        stateItem.pivotIndex = letPivotIndex++;\n      }\n      columnStates.push(stateItem);\n    });\n    this.applyColumnState({\n      state: columnStates,\n      applyOrder: true\n    }, source);\n  }\n  getColumnStateFromColDef(column) {\n    const getValueOrNull = (a, b) => a != null ? a : b != null ? b : null;\n    const colDef = column.getColDef();\n    const sort = getValueOrNull(colDef.sort, colDef.initialSort);\n    const sortIndex = getValueOrNull(colDef.sortIndex, colDef.initialSortIndex);\n    const hide = getValueOrNull(colDef.hide, colDef.initialHide);\n    const pinned = getValueOrNull(colDef.pinned, colDef.initialPinned);\n    const width = getValueOrNull(colDef.width, colDef.initialWidth);\n    const flex = getValueOrNull(colDef.flex, colDef.initialFlex);\n    let rowGroupIndex = getValueOrNull(colDef.rowGroupIndex, colDef.initialRowGroupIndex);\n    let rowGroup = getValueOrNull(colDef.rowGroup, colDef.initialRowGroup);\n    if (rowGroupIndex == null && (rowGroup == null || rowGroup == false)) {\n      rowGroupIndex = null;\n      rowGroup = null;\n    }\n    let pivotIndex = getValueOrNull(colDef.pivotIndex, colDef.initialPivotIndex);\n    let pivot = getValueOrNull(colDef.pivot, colDef.initialPivot);\n    if (pivotIndex == null && (pivot == null || pivot == false)) {\n      pivotIndex = null;\n      pivot = null;\n    }\n    const aggFunc = getValueOrNull(colDef.aggFunc, colDef.initialAggFunc);\n    return {\n      colId: column.getColId(),\n      sort,\n      sortIndex,\n      hide,\n      pinned,\n      width,\n      flex,\n      rowGroup,\n      rowGroupIndex,\n      pivot,\n      pivotIndex,\n      aggFunc\n    };\n  }\n  syncColumnWithStateItem(column, stateItem, defaultState, rowGroupIndexes, pivotIndexes, autoCol, source, callbacks) {\n    if (!column) {\n      return;\n    }\n    const getValue2 = (key1, key2) => {\n      const obj = {\n        value1: void 0,\n        value2: void 0\n      };\n      let calculated = false;\n      if (stateItem) {\n        if (stateItem[key1] !== void 0) {\n          obj.value1 = stateItem[key1];\n          calculated = true;\n        }\n        if (_exists(key2) && stateItem[key2] !== void 0) {\n          obj.value2 = stateItem[key2];\n          calculated = true;\n        }\n      }\n      if (!calculated && defaultState) {\n        if (defaultState[key1] !== void 0) {\n          obj.value1 = defaultState[key1];\n        }\n        if (_exists(key2) && defaultState[key2] !== void 0) {\n          obj.value2 = defaultState[key2];\n        }\n      }\n      return obj;\n    };\n    const hide = getValue2(\"hide\").value1;\n    if (hide !== void 0) {\n      column.setVisible(!hide, source);\n    }\n    const pinned = getValue2(\"pinned\").value1;\n    if (pinned !== void 0) {\n      column.setPinned(pinned);\n    }\n    const minColWidth = column.getColDef().minWidth ?? DEFAULT_COLUMN_MIN_WIDTH;\n    const flex = getValue2(\"flex\").value1;\n    if (flex !== void 0) {\n      column.setFlex(flex);\n    }\n    if (flex == null) {\n      const width = getValue2(\"width\").value1;\n      if (width != null) {\n        if (minColWidth != null && width >= minColWidth) {\n          column.setActualWidth(width, source);\n        }\n      }\n    }\n    const sort = getValue2(\"sort\").value1;\n    if (sort !== void 0) {\n      if (sort === \"desc\" || sort === \"asc\") {\n        column.setSort(sort, source);\n      } else {\n        column.setSort(void 0, source);\n      }\n    }\n    const sortIndex = getValue2(\"sortIndex\").value1;\n    if (sortIndex !== void 0) {\n      column.setSortIndex(sortIndex);\n    }\n    if (autoCol || !column.isPrimary()) {\n      return;\n    }\n    const aggFunc = getValue2(\"aggFunc\").value1;\n    if (aggFunc !== void 0) {\n      if (typeof aggFunc === \"string\") {\n        column.setAggFunc(aggFunc);\n        if (!column.isValueActive()) {\n          column.setValueActive(true, source);\n          callbacks.addValueCol(column);\n        }\n      } else {\n        if (_exists(aggFunc)) {\n          _warnOnce(\"stateItem.aggFunc must be a string. if using your own aggregation functions, register the functions first before using them in get/set state. This is because it is intended for the column state to be stored and retrieved as simple JSON.\");\n        }\n        if (column.isValueActive()) {\n          column.setValueActive(false, source);\n          callbacks.removeValueCol(column);\n        }\n      }\n    }\n    const {\n      value1: rowGroup,\n      value2: rowGroupIndex\n    } = getValue2(\"rowGroup\", \"rowGroupIndex\");\n    if (rowGroup !== void 0 || rowGroupIndex !== void 0) {\n      if (typeof rowGroupIndex === \"number\" || rowGroup) {\n        if (!column.isRowGroupActive()) {\n          column.setRowGroupActive(true, source);\n          callbacks.addGroupCol(column);\n        }\n        if (rowGroupIndexes && typeof rowGroupIndex === \"number\") {\n          rowGroupIndexes[column.getId()] = rowGroupIndex;\n        }\n      } else {\n        if (column.isRowGroupActive()) {\n          column.setRowGroupActive(false, source);\n          callbacks.removeGroupCol(column);\n        }\n      }\n    }\n    const {\n      value1: pivot,\n      value2: pivotIndex\n    } = getValue2(\"pivot\", \"pivotIndex\");\n    if (pivot !== void 0 || pivotIndex !== void 0) {\n      if (typeof pivotIndex === \"number\" || pivot) {\n        if (!column.isPivotActive()) {\n          column.setPivotActive(true, source);\n          callbacks.addPivotCol(column);\n        }\n        if (pivotIndexes && typeof pivotIndex === \"number\") {\n          pivotIndexes[column.getId()] = pivotIndex;\n        }\n      } else {\n        if (column.isPivotActive()) {\n          column.setPivotActive(false, source);\n          callbacks.removePivotCol(column);\n        }\n      }\n    }\n  }\n  orderLiveColsLikeState(params) {\n    if (!params.applyOrder || !params.state) {\n      return;\n    }\n    const colIds = [];\n    params.state.forEach(item => {\n      if (item.colId != null) {\n        colIds.push(item.colId);\n      }\n    });\n    this.columnModel.sortColsLikeKeys(colIds);\n  }\n  // calculates what events to fire between column state changes. gets used when:\n  // a) apply column state\n  // b) apply new column definitions (so changes from old cols)\n  compareColumnStatesAndDispatchEvents(source) {\n    const startState = {\n      rowGroupColumns: this.funcColsService.getRowGroupColumns().slice(),\n      pivotColumns: this.funcColsService.getPivotColumns().slice(),\n      valueColumns: this.funcColsService.getValueColumns().slice()\n    };\n    const columnStateBefore = this.columnGetStateService.getColumnState();\n    const columnStateBeforeMap = {};\n    columnStateBefore.forEach(col => {\n      columnStateBeforeMap[col.colId] = col;\n    });\n    return () => {\n      const colsForState = this.columnModel.getAllCols();\n      const dispatchWhenListsDifferent = (eventType, colsBefore, colsAfter, idMapper) => {\n        const beforeList = colsBefore.map(idMapper);\n        const afterList = colsAfter.map(idMapper);\n        const unchanged = _areEqual(beforeList, afterList);\n        if (unchanged) {\n          return;\n        }\n        const changes = new Set(colsBefore);\n        colsAfter.forEach(id => {\n          if (!changes.delete(id)) {\n            changes.add(id);\n          }\n        });\n        const changesArr = [...changes];\n        const event = {\n          type: eventType,\n          columns: changesArr,\n          column: changesArr.length === 1 ? changesArr[0] : null,\n          source\n        };\n        this.eventService.dispatchEvent(event);\n      };\n      const getChangedColumns = changedPredicate => {\n        const changedColumns2 = [];\n        colsForState.forEach(column => {\n          const colStateBefore = columnStateBeforeMap[column.getColId()];\n          if (colStateBefore && changedPredicate(colStateBefore, column)) {\n            changedColumns2.push(column);\n          }\n        });\n        return changedColumns2;\n      };\n      const columnIdMapper = c => c.getColId();\n      dispatchWhenListsDifferent(\"columnRowGroupChanged\", startState.rowGroupColumns, this.funcColsService.getRowGroupColumns(), columnIdMapper);\n      dispatchWhenListsDifferent(\"columnPivotChanged\", startState.pivotColumns, this.funcColsService.getPivotColumns(), columnIdMapper);\n      const valueChangePredicate = (cs, c) => {\n        const oldActive = cs.aggFunc != null;\n        const activeChanged = oldActive != c.isValueActive();\n        const aggFuncChanged = oldActive && cs.aggFunc != c.getAggFunc();\n        return activeChanged || aggFuncChanged;\n      };\n      const changedValues = getChangedColumns(valueChangePredicate);\n      if (changedValues.length > 0) {\n        this.eventDispatcher.columnChanged(\"columnValueChanged\", changedValues, source);\n      }\n      const resizeChangePredicate = (cs, c) => cs.width != c.getActualWidth();\n      this.eventDispatcher.columnResized(getChangedColumns(resizeChangePredicate), true, source);\n      const pinnedChangePredicate = (cs, c) => cs.pinned != c.getPinned();\n      this.eventDispatcher.columnPinned(getChangedColumns(pinnedChangePredicate), source);\n      const visibilityChangePredicate = (cs, c) => cs.hide == c.isVisible();\n      this.eventDispatcher.columnVisible(getChangedColumns(visibilityChangePredicate), source);\n      const sortChangePredicate = (cs, c) => cs.sort != c.getSort() || cs.sortIndex != c.getSortIndex();\n      const changedColumns = getChangedColumns(sortChangePredicate);\n      if (changedColumns.length > 0) {\n        this.sortController.dispatchSortChangedEvents(source, changedColumns);\n      }\n      this.normaliseColumnMovedEventForColumnState(columnStateBefore, source);\n    };\n  }\n  normaliseColumnMovedEventForColumnState(colStateBefore, source) {\n    const colStateAfter = this.columnGetStateService.getColumnState();\n    const colStateAfterMapped = {};\n    colStateAfter.forEach(s => colStateAfterMapped[s.colId] = s);\n    const colsIntersectIds = {};\n    colStateBefore.forEach(s => {\n      if (colStateAfterMapped[s.colId]) {\n        colsIntersectIds[s.colId] = true;\n      }\n    });\n    const beforeFiltered = colStateBefore.filter(c => colsIntersectIds[c.colId]);\n    const afterFiltered = colStateAfter.filter(c => colsIntersectIds[c.colId]);\n    const movedColumns = [];\n    afterFiltered.forEach((csAfter, index) => {\n      const csBefore = beforeFiltered && beforeFiltered[index];\n      if (csBefore && csBefore.colId !== csAfter.colId) {\n        const gridCol = this.columnModel.getCol(csBefore.colId);\n        if (gridCol) {\n          movedColumns.push(gridCol);\n        }\n      }\n    });\n    if (!movedColumns.length) {\n      return;\n    }\n    this.eventDispatcher.columnMoved({\n      movedColumns,\n      source,\n      finished: true\n    });\n  }\n};\nvar comparatorByIndex = (indexes, oldList, colA, colB) => {\n  const indexA = indexes[colA.getId()];\n  const indexB = indexes[colB.getId()];\n  const aHasIndex = indexA != null;\n  const bHasIndex = indexB != null;\n  if (aHasIndex && bHasIndex) {\n    return indexA - indexB;\n  }\n  if (aHasIndex) {\n    return -1;\n  }\n  if (bHasIndex) {\n    return 1;\n  }\n  const oldIndexA = oldList.indexOf(colA);\n  const oldIndexB = oldList.indexOf(colB);\n  const aHasOldIndex = oldIndexA >= 0;\n  const bHasOldIndex = oldIndexB >= 0;\n  if (aHasOldIndex && bHasOldIndex) {\n    return oldIndexA - oldIndexB;\n  }\n  if (aHasOldIndex) {\n    return -1;\n  }\n  return 1;\n};\n\n// community-modules/core/src/columns/columnMoveService.ts\nvar ColumnMoveService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnMoveService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnAnimationService = beans.columnAnimationService;\n    this.eventDispatcher = beans.columnEventDispatcher;\n  }\n  moveColumnByIndex(fromIndex, toIndex, source) {\n    const gridColumns = this.columnModel.getCols();\n    if (!gridColumns) {\n      return;\n    }\n    const column = gridColumns[fromIndex];\n    this.moveColumns([column], toIndex, source);\n  }\n  moveColumns(columnsToMoveKeys, toIndex, source, finished = true) {\n    const gridColumns = this.columnModel.getCols();\n    if (!gridColumns) {\n      return;\n    }\n    this.columnAnimationService.start();\n    if (toIndex > gridColumns.length - columnsToMoveKeys.length) {\n      _warnOnce(\"tried to insert columns in invalid location, toIndex = \", toIndex);\n      _warnOnce(\"remember that you should not count the moving columns when calculating the new index\");\n      return;\n    }\n    const movedColumns = this.columnModel.getColsForKeys(columnsToMoveKeys);\n    const failedRules = !this.doesMovePassRules(movedColumns, toIndex);\n    if (failedRules) {\n      return;\n    }\n    this.columnModel.moveInCols(movedColumns, toIndex, source);\n    this.eventDispatcher.columnMoved({\n      movedColumns,\n      source,\n      toIndex,\n      finished\n    });\n    this.columnAnimationService.finish();\n  }\n  doesMovePassRules(columnsToMove, toIndex) {\n    const proposedColumnOrder = this.getProposedColumnOrder(columnsToMove, toIndex);\n    return this.doesOrderPassRules(proposedColumnOrder);\n  }\n  doesOrderPassRules(gridOrder) {\n    if (!this.doesMovePassMarryChildren(gridOrder)) {\n      return false;\n    }\n    if (!this.doesMovePassLockedPositions(gridOrder)) {\n      return false;\n    }\n    return true;\n  }\n  getProposedColumnOrder(columnsToMove, toIndex) {\n    const gridColumns = this.columnModel.getCols();\n    const proposedColumnOrder = gridColumns.slice();\n    _moveInArray(proposedColumnOrder, columnsToMove, toIndex);\n    return proposedColumnOrder;\n  }\n  doesMovePassLockedPositions(proposedColumnOrder) {\n    const lockPositionToPlacement = position => {\n      if (!position) {\n        return 0 /* NONE */;\n      }\n      return position === \"left\" || position === true ? -1 /* LEFT */ : 1 /* RIGHT */;\n    };\n    const isRtl = this.gos.get(\"enableRtl\");\n    let lastPlacement = isRtl ? 1 /* RIGHT */ : -1 /* LEFT */;\n    let rulePassed = true;\n    proposedColumnOrder.forEach(col => {\n      const placement = lockPositionToPlacement(col.getColDef().lockPosition);\n      if (isRtl) {\n        if (placement > lastPlacement) {\n          rulePassed = false;\n        }\n      } else {\n        if (placement < lastPlacement) {\n          rulePassed = false;\n        }\n      }\n      lastPlacement = placement;\n    });\n    return rulePassed;\n  }\n  doesMovePassMarryChildren(allColumnsCopy) {\n    let rulePassed = true;\n    const gridBalancedTree = this.columnModel.getColTree();\n    depthFirstOriginalTreeSearch(null, gridBalancedTree, child => {\n      if (!isProvidedColumnGroup(child)) {\n        return;\n      }\n      const columnGroup = child;\n      const colGroupDef = columnGroup.getColGroupDef();\n      const marryChildren = colGroupDef && colGroupDef.marryChildren;\n      if (!marryChildren) {\n        return;\n      }\n      const newIndexes = [];\n      columnGroup.getLeafColumns().forEach(col => {\n        const newColIndex = allColumnsCopy.indexOf(col);\n        newIndexes.push(newColIndex);\n      });\n      const maxIndex = Math.max.apply(Math, newIndexes);\n      const minIndex = Math.min.apply(Math, newIndexes);\n      const spread = maxIndex - minIndex;\n      const maxSpread = columnGroup.getLeafColumns().length - 1;\n      if (spread > maxSpread) {\n        rulePassed = false;\n      }\n    });\n    return rulePassed;\n  }\n  placeLockedColumns(cols) {\n    const left = [];\n    const normal = [];\n    const right = [];\n    cols.forEach(col => {\n      const position = col.getColDef().lockPosition;\n      if (position === \"right\") {\n        right.push(col);\n      } else if (position === \"left\" || position === true) {\n        left.push(col);\n      } else {\n        normal.push(col);\n      }\n    });\n    const isRtl = this.gos.get(\"enableRtl\");\n    if (isRtl) {\n      return [...right, ...normal, ...left];\n    }\n    return [...left, ...normal, ...right];\n  }\n};\n\n// community-modules/core/src/utils/string.ts\nvar reUnescapedHtml = /[&<>\"']/g;\nvar HTML_ESCAPES = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\"\n};\nfunction _utf8_encode(s) {\n  const stringFromCharCode = String.fromCharCode;\n  function ucs2decode(string) {\n    const output = [];\n    if (!string) {\n      return [];\n    }\n    const len = string.length;\n    let counter = 0;\n    let value;\n    let extra;\n    while (counter < len) {\n      value = string.charCodeAt(counter++);\n      if (value >= 55296 && value <= 56319 && counter < len) {\n        extra = string.charCodeAt(counter++);\n        if ((extra & 64512) == 56320) {\n          output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n        } else {\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n    return output;\n  }\n  function checkScalarValue(point) {\n    if (point >= 55296 && point <= 57343) {\n      throw Error(\"Lone surrogate U+\" + point.toString(16).toUpperCase() + \" is not a scalar value\");\n    }\n  }\n  function createByte(point, shift) {\n    return stringFromCharCode(point >> shift & 63 | 128);\n  }\n  function encodeCodePoint(point) {\n    if ((point & 4294967168) == 0) {\n      return stringFromCharCode(point);\n    }\n    let symbol = \"\";\n    if ((point & 4294965248) == 0) {\n      symbol = stringFromCharCode(point >> 6 & 31 | 192);\n    } else if ((point & 4294901760) == 0) {\n      checkScalarValue(point);\n      symbol = stringFromCharCode(point >> 12 & 15 | 224);\n      symbol += createByte(point, 6);\n    } else if ((point & 4292870144) == 0) {\n      symbol = stringFromCharCode(point >> 18 & 7 | 240);\n      symbol += createByte(point, 12);\n      symbol += createByte(point, 6);\n    }\n    symbol += stringFromCharCode(point & 63 | 128);\n    return symbol;\n  }\n  const codePoints = ucs2decode(s);\n  const length = codePoints.length;\n  let index = -1;\n  let codePoint;\n  let byteString = \"\";\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint);\n  }\n  return byteString;\n}\nfunction _capitalise(str) {\n  return str[0].toUpperCase() + str.substring(1).toLowerCase();\n}\nfunction _escapeString(toEscape, skipEscapingHtmlChars) {\n  if (toEscape == null) {\n    return null;\n  }\n  const stringResult = toEscape.toString().toString();\n  if (skipEscapingHtmlChars) {\n    return stringResult;\n  }\n  return stringResult.replace(reUnescapedHtml, chr => HTML_ESCAPES[chr]);\n}\nfunction _camelCaseToHumanText(camelCase) {\n  if (!camelCase || camelCase == null) {\n    return null;\n  }\n  const rex = /([a-z])([A-Z])/g;\n  const rexCaps = /([A-Z]+)([A-Z])([a-z])/g;\n  const words = camelCase.replace(rex, \"$1 $2\").replace(rexCaps, \"$1 $2$3\").replace(/\\./g, \" \").split(\" \");\n  return words.map(word => word.substring(0, 1).toUpperCase() + (word.length > 1 ? word.substring(1, word.length) : \"\")).join(\" \");\n}\nfunction _camelCaseToHyphenated(camelCase) {\n  return camelCase.replace(/[A-Z]/g, s => `-${s.toLocaleLowerCase()}`);\n}\n\n// community-modules/core/src/columns/columnNameService.ts\nvar ColumnNameService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnNameService\";\n  }\n  wireBeans(beans) {\n    this.expressionService = beans.expressionService;\n    this.funcColsService = beans.funcColsService;\n    this.columnModel = beans.columnModel;\n  }\n  getDisplayNameForColumn(column, location, includeAggFunc = false) {\n    if (!column) {\n      return null;\n    }\n    const headerName = this.getHeaderName(column.getColDef(), column, null, null, location);\n    if (includeAggFunc) {\n      return this.wrapHeaderNameWithAggFunc(column, headerName);\n    }\n    return headerName;\n  }\n  getDisplayNameForProvidedColumnGroup(columnGroup, providedColumnGroup, location) {\n    const colGroupDef = providedColumnGroup ? providedColumnGroup.getColGroupDef() : null;\n    if (colGroupDef) {\n      return this.getHeaderName(colGroupDef, null, columnGroup, providedColumnGroup, location);\n    }\n    return null;\n  }\n  getDisplayNameForColumnGroup(columnGroup, location) {\n    return this.getDisplayNameForProvidedColumnGroup(columnGroup, columnGroup.getProvidedColumnGroup(), location);\n  }\n  // location is where the column is going to appear, ie who is calling us\n  getHeaderName(colDef, column, columnGroup, providedColumnGroup, location) {\n    const headerValueGetter = colDef.headerValueGetter;\n    if (headerValueGetter) {\n      const params = this.gos.addGridCommonParams({\n        colDef,\n        column,\n        columnGroup,\n        providedColumnGroup,\n        location\n      });\n      if (typeof headerValueGetter === \"function\") {\n        return headerValueGetter(params);\n      } else if (typeof headerValueGetter === \"string\") {\n        return this.expressionService.evaluate(headerValueGetter, params);\n      }\n      _warnOnce(\"headerValueGetter must be a function or a string\");\n      return \"\";\n    } else if (colDef.headerName != null) {\n      return colDef.headerName;\n    } else if (colDef.field) {\n      return _camelCaseToHumanText(colDef.field);\n    }\n    return \"\";\n  }\n  wrapHeaderNameWithAggFunc(column, headerName) {\n    if (this.gos.get(\"suppressAggFuncInHeader\")) {\n      return headerName;\n    }\n    const pivotValueColumn = column.getColDef().pivotValueColumn;\n    const pivotActiveOnThisColumn = _exists(pivotValueColumn);\n    let aggFunc = null;\n    let aggFuncFound;\n    if (pivotActiveOnThisColumn) {\n      const valueColumns = this.funcColsService.getValueColumns();\n      const isCollapsedHeaderEnabled = this.gos.get(\"removePivotHeaderRowWhenSingleValueColumn\") && valueColumns.length === 1;\n      const isTotalColumn = column.getColDef().pivotTotalColumnIds !== void 0;\n      if (isCollapsedHeaderEnabled && !isTotalColumn) {\n        return headerName;\n      }\n      aggFunc = pivotValueColumn ? pivotValueColumn.getAggFunc() : null;\n      aggFuncFound = true;\n    } else {\n      const measureActive = column.isValueActive();\n      const aggregationPresent = this.columnModel.isPivotMode() || !this.funcColsService.isRowGroupEmpty();\n      if (measureActive && aggregationPresent) {\n        aggFunc = column.getAggFunc();\n        aggFuncFound = true;\n      } else {\n        aggFuncFound = false;\n      }\n    }\n    if (aggFuncFound) {\n      const aggFuncString = typeof aggFunc === \"string\" ? aggFunc : \"func\";\n      const localeTextFunc = this.localeService.getLocaleTextFunc();\n      const aggFuncStringTranslated = localeTextFunc(aggFuncString, aggFuncString);\n      return `${aggFuncStringTranslated}(${headerName})`;\n    }\n    return headerName;\n  }\n};\n\n// community-modules/core/src/columns/pivotResultColsService.ts\nvar PivotResultColsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pivotResultColsService\";\n  }\n  wireBeans(beans) {\n    this.context = beans.context;\n    this.columnModel = beans.columnModel;\n    this.columnFactory = beans.columnFactory;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  destroy() {\n    destroyColumnTree(this.context, this.pivotResultCols?.tree);\n    super.destroy();\n  }\n  isPivotResultColsPresent() {\n    return this.pivotResultCols != null;\n  }\n  lookupPivotResultCol(pivotKeys, valueColKey) {\n    if (this.pivotResultCols == null) {\n      return null;\n    }\n    const valueColumnToFind = this.columnModel.getColDefCol(valueColKey);\n    let foundColumn = null;\n    this.pivotResultCols.list.forEach(column => {\n      const thisPivotKeys = column.getColDef().pivotKeys;\n      const pivotValueColumn = column.getColDef().pivotValueColumn;\n      const pivotKeyMatches = _areEqual(thisPivotKeys, pivotKeys);\n      const pivotValueMatches = pivotValueColumn === valueColumnToFind;\n      if (pivotKeyMatches && pivotValueMatches) {\n        foundColumn = column;\n      }\n    });\n    return foundColumn;\n  }\n  getPivotResultCols() {\n    return this.pivotResultCols;\n  }\n  getPivotResultCol(key) {\n    if (!this.pivotResultCols) {\n      return null;\n    }\n    return this.columnModel.getColFromCollection(key, this.pivotResultCols);\n  }\n  setPivotResultCols(colDefs, source) {\n    if (!this.columnModel.isReady()) {\n      return;\n    }\n    if (colDefs == null && this.pivotResultCols == null) {\n      return;\n    }\n    if (colDefs) {\n      this.processPivotResultColDef(colDefs);\n      const balancedTreeResult = this.columnFactory.createColumnTree(colDefs, false, this.pivotResultCols?.tree || this.previousPivotResultCols || void 0, source);\n      destroyColumnTree(this.context, this.pivotResultCols?.tree, balancedTreeResult.columnTree);\n      const tree = balancedTreeResult.columnTree;\n      const treeDepth = balancedTreeResult.treeDept;\n      const list = getColumnsFromTree(tree);\n      const map = {};\n      this.pivotResultCols = {\n        tree,\n        treeDepth,\n        list,\n        map\n      };\n      this.pivotResultCols.list.forEach(col => this.pivotResultCols.map[col.getId()] = col);\n      this.previousPivotResultCols = null;\n    } else {\n      this.previousPivotResultCols = this.pivotResultCols ? this.pivotResultCols.tree : null;\n      this.pivotResultCols = null;\n    }\n    this.columnModel.refreshCols();\n    this.visibleColsService.refresh(source);\n  }\n  processPivotResultColDef(colDefs) {\n    const columnCallback = this.gos.get(\"processPivotResultColDef\");\n    const groupCallback = this.gos.get(\"processPivotResultColGroupDef\");\n    if (!columnCallback && !groupCallback) {\n      return void 0;\n    }\n    const searchForColDefs = colDefs2 => {\n      colDefs2.forEach(abstractColDef => {\n        const isGroup = _exists(abstractColDef.children);\n        if (isGroup) {\n          const colGroupDef = abstractColDef;\n          if (groupCallback) {\n            groupCallback(colGroupDef);\n          }\n          searchForColDefs(colGroupDef.children);\n        } else {\n          const colDef = abstractColDef;\n          if (columnCallback) {\n            columnCallback(colDef);\n          }\n        }\n      });\n    };\n    if (colDefs) {\n      searchForColDefs(colDefs);\n    }\n  }\n};\n\n// community-modules/core/src/columns/columnSizeService.ts\nvar ColumnSizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnSizeService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnViewportService = beans.columnViewportService;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.visibleColsService = beans.visibleColsService;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  setColumnWidths(columnWidths, shiftKey, finished, source) {\n    const sets = [];\n    columnWidths.forEach(columnWidth => {\n      const col = this.columnModel.getColDefCol(columnWidth.key) || this.columnModel.getCol(columnWidth.key);\n      if (!col) {\n        return;\n      }\n      sets.push({\n        width: columnWidth.newWidth,\n        ratios: [1],\n        columns: [col]\n      });\n      const defaultIsShift = this.gos.get(\"colResizeDefault\") === \"shift\";\n      if (defaultIsShift) {\n        shiftKey = !shiftKey;\n      }\n      if (shiftKey) {\n        const otherCol = this.visibleColsService.getColAfter(col);\n        if (!otherCol) {\n          return;\n        }\n        const widthDiff = col.getActualWidth() - columnWidth.newWidth;\n        const otherColWidth = otherCol.getActualWidth() + widthDiff;\n        sets.push({\n          width: otherColWidth,\n          ratios: [1],\n          columns: [otherCol]\n        });\n      }\n    });\n    if (sets.length === 0) {\n      return;\n    }\n    this.resizeColumnSets({\n      resizeSets: sets,\n      finished,\n      source\n    });\n  }\n  // method takes sets of columns and resizes them. either all sets will be resized, or nothing\n  // be resized. this is used for example when user tries to resize a group and holds shift key,\n  // then both the current group (grows), and the adjacent group (shrinks), will get resized,\n  // so that's two sets for this method.\n  resizeColumnSets(params) {\n    const {\n      resizeSets,\n      finished,\n      source\n    } = params;\n    const passMinMaxCheck = !resizeSets || resizeSets.every(columnResizeSet => this.checkMinAndMaxWidthsForSet(columnResizeSet));\n    if (!passMinMaxCheck) {\n      if (finished) {\n        const columns = resizeSets && resizeSets.length > 0 ? resizeSets[0].columns : null;\n        this.eventDispatcher.columnResized(columns, finished, source);\n      }\n      return;\n    }\n    const changedCols = [];\n    const allResizedCols = [];\n    resizeSets.forEach(set => {\n      const {\n        width,\n        columns,\n        ratios\n      } = set;\n      const newWidths = {};\n      const finishedCols = {};\n      columns.forEach(col => allResizedCols.push(col));\n      let finishedColsGrew = true;\n      let loopCount = 0;\n      while (finishedColsGrew) {\n        loopCount++;\n        if (loopCount > 1e3) {\n          _errorOnce(\"infinite loop in resizeColumnSets\");\n          break;\n        }\n        finishedColsGrew = false;\n        const subsetCols = [];\n        let subsetRatioTotal = 0;\n        let pixelsToDistribute = width;\n        columns.forEach((col, index) => {\n          const thisColFinished = finishedCols[col.getId()];\n          if (thisColFinished) {\n            pixelsToDistribute -= newWidths[col.getId()];\n          } else {\n            subsetCols.push(col);\n            const ratioThisCol = ratios[index];\n            subsetRatioTotal += ratioThisCol;\n          }\n        });\n        const ratioScale = 1 / subsetRatioTotal;\n        subsetCols.forEach((col, index) => {\n          const lastCol = index === subsetCols.length - 1;\n          let colNewWidth;\n          if (lastCol) {\n            colNewWidth = pixelsToDistribute;\n          } else {\n            colNewWidth = Math.round(ratios[index] * width * ratioScale);\n            pixelsToDistribute -= colNewWidth;\n          }\n          const minWidth = col.getMinWidth();\n          const maxWidth = col.getMaxWidth();\n          if (colNewWidth < minWidth) {\n            colNewWidth = minWidth;\n            finishedCols[col.getId()] = true;\n            finishedColsGrew = true;\n          } else if (maxWidth > 0 && colNewWidth > maxWidth) {\n            colNewWidth = maxWidth;\n            finishedCols[col.getId()] = true;\n            finishedColsGrew = true;\n          }\n          newWidths[col.getId()] = colNewWidth;\n        });\n      }\n      columns.forEach(col => {\n        const newWidth = newWidths[col.getId()];\n        const actualWidth = col.getActualWidth();\n        if (actualWidth !== newWidth) {\n          col.setActualWidth(newWidth, source);\n          changedCols.push(col);\n        }\n      });\n    });\n    const atLeastOneColChanged = changedCols.length > 0;\n    let flexedCols = [];\n    if (atLeastOneColChanged) {\n      flexedCols = this.refreshFlexedColumns({\n        resizingCols: allResizedCols,\n        skipSetLeft: true\n      });\n      this.visibleColsService.setLeftValues(source);\n      this.visibleColsService.updateBodyWidths();\n      this.columnViewportService.checkViewportColumns();\n    }\n    const colsForEvent = allResizedCols.concat(flexedCols);\n    if (atLeastOneColChanged || finished) {\n      this.eventDispatcher.columnResized(colsForEvent, finished, source, flexedCols);\n    }\n  }\n  checkMinAndMaxWidthsForSet(columnResizeSet) {\n    const {\n      columns,\n      width\n    } = columnResizeSet;\n    let minWidthAccumulated = 0;\n    let maxWidthAccumulated = 0;\n    let maxWidthActive = true;\n    columns.forEach(col => {\n      const minWidth = col.getMinWidth();\n      minWidthAccumulated += minWidth || 0;\n      const maxWidth = col.getMaxWidth();\n      if (maxWidth > 0) {\n        maxWidthAccumulated += maxWidth;\n      } else {\n        maxWidthActive = false;\n      }\n    });\n    const minWidthPasses = width >= minWidthAccumulated;\n    const maxWidthPasses = !maxWidthActive || width <= maxWidthAccumulated;\n    return minWidthPasses && maxWidthPasses;\n  }\n  refreshFlexedColumns(params = {}) {\n    const source = params.source ? params.source : \"flex\";\n    if (params.viewportWidth != null) {\n      this.flexViewportWidth = params.viewportWidth;\n    }\n    if (!this.flexViewportWidth) {\n      return [];\n    }\n    const displayedCenterCols = this.visibleColsService.getCenterCols();\n    let flexAfterDisplayIndex = -1;\n    if (params.resizingCols) {\n      const allResizingCols = new Set(params.resizingCols);\n      for (let i = displayedCenterCols.length - 1; i >= 0; i--) {\n        if (allResizingCols.has(displayedCenterCols[i])) {\n          flexAfterDisplayIndex = i;\n          break;\n        }\n      }\n    }\n    let knownColumnsWidth = 0;\n    let flexingColumns = [];\n    let minimumFlexedWidth = 0;\n    let totalFlex = 0;\n    for (let i = 0; i < displayedCenterCols.length; i++) {\n      const isFlex = displayedCenterCols[i].getFlex() && i > flexAfterDisplayIndex;\n      if (isFlex) {\n        flexingColumns.push(displayedCenterCols[i]);\n        totalFlex += displayedCenterCols[i].getFlex();\n        minimumFlexedWidth += displayedCenterCols[i].getMinWidth();\n      } else {\n        knownColumnsWidth += displayedCenterCols[i].getActualWidth();\n      }\n    }\n    if (!flexingColumns.length) {\n      return [];\n    }\n    let changedColumns = [];\n    if (knownColumnsWidth + minimumFlexedWidth > this.flexViewportWidth) {\n      flexingColumns.forEach(col => col.setActualWidth(col.getMinWidth(), source));\n      changedColumns = flexingColumns;\n      flexingColumns = [];\n    }\n    const flexingColumnSizes = [];\n    let spaceForFlexingColumns;\n    outer: while (true) {\n      spaceForFlexingColumns = this.flexViewportWidth - knownColumnsWidth;\n      const spacePerFlex = spaceForFlexingColumns / totalFlex;\n      for (let i = 0; i < flexingColumns.length; i++) {\n        const col = flexingColumns[i];\n        const widthByFlexRule = spacePerFlex * col.getFlex();\n        let constrainedWidth = 0;\n        const minWidth = col.getMinWidth();\n        const maxWidth = col.getMaxWidth();\n        if (widthByFlexRule < minWidth) {\n          constrainedWidth = minWidth;\n        } else if (widthByFlexRule > maxWidth) {\n          constrainedWidth = maxWidth;\n        }\n        if (constrainedWidth) {\n          col.setActualWidth(constrainedWidth, source);\n          _removeFromUnorderedArray(flexingColumns, col);\n          totalFlex -= col.getFlex();\n          changedColumns.push(col);\n          knownColumnsWidth += col.getActualWidth();\n          continue outer;\n        }\n        flexingColumnSizes[i] = Math.round(widthByFlexRule);\n      }\n      break;\n    }\n    let remainingSpace = spaceForFlexingColumns;\n    flexingColumns.forEach((col, i) => {\n      col.setActualWidth(Math.min(flexingColumnSizes[i], remainingSpace), source);\n      changedColumns.push(col);\n      remainingSpace -= flexingColumnSizes[i];\n    });\n    if (!params.skipSetLeft) {\n      this.visibleColsService.setLeftValues(source);\n    }\n    if (params.updateBodyWidths) {\n      this.visibleColsService.updateBodyWidths();\n    }\n    if (params.fireResizedEvent) {\n      this.eventDispatcher.columnResized(changedColumns, true, source, flexingColumns);\n    }\n    return flexingColumns;\n  }\n  // called from api\n  sizeColumnsToFit(gridWidth, source = \"sizeColumnsToFit\", silent, params) {\n    if (this.columnModel.isShouldQueueResizeOperations()) {\n      this.columnModel.pushResizeOperation(() => this.sizeColumnsToFit(gridWidth, source, silent, params));\n      return;\n    }\n    const limitsMap = {};\n    if (params) {\n      params?.columnLimits?.forEach(({\n        key,\n        ...dimensions\n      }) => {\n        limitsMap[typeof key === \"string\" ? key : key.getColId()] = dimensions;\n      });\n    }\n    const allDisplayedColumns = this.visibleColsService.getAllCols();\n    const doColumnsAlreadyFit = gridWidth === getWidthOfColsInList(allDisplayedColumns);\n    if (gridWidth <= 0 || !allDisplayedColumns.length || doColumnsAlreadyFit) {\n      return;\n    }\n    const colsToSpread = [];\n    const colsToNotSpread = [];\n    allDisplayedColumns.forEach(column => {\n      if (column.getColDef().suppressSizeToFit === true) {\n        colsToNotSpread.push(column);\n      } else {\n        colsToSpread.push(column);\n      }\n    });\n    const colsToDispatchEventFor = colsToSpread.slice(0);\n    let finishedResizing = false;\n    const moveToNotSpread = column => {\n      _removeFromArray(colsToSpread, column);\n      colsToNotSpread.push(column);\n    };\n    colsToSpread.forEach(column => {\n      column.resetActualWidth(source);\n      const widthOverride = limitsMap?.[column.getId()];\n      const minOverride = widthOverride?.minWidth ?? params?.defaultMinWidth;\n      const maxOverride = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\n      const colWidth = column.getActualWidth();\n      if (typeof minOverride === \"number\" && colWidth < minOverride) {\n        column.setActualWidth(minOverride, source, true);\n      } else if (typeof maxOverride === \"number\" && colWidth > maxOverride) {\n        column.setActualWidth(maxOverride, source, true);\n      }\n    });\n    while (!finishedResizing) {\n      finishedResizing = true;\n      const availablePixels = gridWidth - getWidthOfColsInList(colsToNotSpread);\n      if (availablePixels <= 0) {\n        colsToSpread.forEach(column => {\n          const widthOverride = limitsMap?.[column.getId()]?.minWidth ?? params?.defaultMinWidth;\n          if (typeof widthOverride === \"number\") {\n            column.setActualWidth(widthOverride, source, true);\n            return;\n          }\n          column.setMinimum(source);\n        });\n      } else {\n        const scale = availablePixels / getWidthOfColsInList(colsToSpread);\n        let pixelsForLastCol = availablePixels;\n        for (let i = colsToSpread.length - 1; i >= 0; i--) {\n          const column = colsToSpread[i];\n          const widthOverride = limitsMap?.[column.getId()];\n          const minOverride = widthOverride?.minWidth ?? params?.defaultMinWidth;\n          const maxOverride = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\n          const colMinWidth = column.getMinWidth();\n          const colMaxWidth = column.getMaxWidth();\n          const minWidth = typeof minOverride === \"number\" && minOverride > colMinWidth ? minOverride : colMinWidth;\n          const maxWidth = typeof maxOverride === \"number\" && maxOverride < colMaxWidth ? maxOverride : colMaxWidth;\n          let newWidth = Math.round(column.getActualWidth() * scale);\n          if (newWidth < minWidth) {\n            newWidth = minWidth;\n            moveToNotSpread(column);\n            finishedResizing = false;\n          } else if (newWidth > maxWidth) {\n            newWidth = maxWidth;\n            moveToNotSpread(column);\n            finishedResizing = false;\n          } else if (i === 0) {\n            newWidth = pixelsForLastCol;\n          }\n          column.setActualWidth(newWidth, source, true);\n          pixelsForLastCol -= newWidth;\n        }\n      }\n    }\n    colsToDispatchEventFor.forEach(col => {\n      col.fireColumnWidthChangedEvent(source);\n    });\n    this.visibleColsService.setLeftValues(source);\n    this.visibleColsService.updateBodyWidths();\n    if (silent) {\n      return;\n    }\n    this.eventDispatcher.columnResized(colsToDispatchEventFor, true, source);\n  }\n  applyAutosizeStrategy() {\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\n    if (!autoSizeStrategy) {\n      return;\n    }\n    const {\n      type\n    } = autoSizeStrategy;\n    setTimeout(() => {\n      if (type === \"fitGridWidth\") {\n        const {\n          columnLimits: propColumnLimits,\n          defaultMinWidth,\n          defaultMaxWidth\n        } = autoSizeStrategy;\n        const columnLimits = propColumnLimits?.map(({\n          colId: key,\n          minWidth,\n          maxWidth\n        }) => ({\n          key,\n          minWidth,\n          maxWidth\n        }));\n        this.ctrlsService.getGridBodyCtrl().sizeColumnsToFit({\n          defaultMinWidth,\n          defaultMaxWidth,\n          columnLimits\n        });\n      } else if (type === \"fitProvidedWidth\") {\n        this.sizeColumnsToFit(autoSizeStrategy.width, \"sizeColumnsToFit\");\n      }\n    });\n  }\n};\n\n// community-modules/core/src/entities/agColumnGroup.ts\nfunction createUniqueColumnGroupId(groupId, instanceId) {\n  return groupId + \"_\" + instanceId;\n}\nfunction isColumnGroup(col) {\n  return col instanceof AgColumnGroup;\n}\nvar AgColumnGroup = class extends BeanStub {\n  constructor(providedColumnGroup, groupId, partId, pinned) {\n    super();\n    this.isColumn = false;\n    // depends on the open/closed state of the group, only displaying columns are stored here\n    this.displayedChildren = [];\n    this.parent = null;\n    this.groupId = groupId;\n    this.partId = partId;\n    this.providedColumnGroup = providedColumnGroup;\n    this.pinned = pinned;\n  }\n  // as the user is adding and removing columns, the groups are recalculated.\n  // this reset clears out all children, ready for children to be added again\n  reset() {\n    this.parent = null;\n    this.children = null;\n    this.displayedChildren = null;\n  }\n  getParent() {\n    return this.parent;\n  }\n  setParent(parent) {\n    this.parent = parent;\n  }\n  getUniqueId() {\n    return createUniqueColumnGroupId(this.groupId, this.partId);\n  }\n  isEmptyGroup() {\n    return this.displayedChildren.length === 0;\n  }\n  isMoving() {\n    const allLeafColumns = this.getProvidedColumnGroup().getLeafColumns();\n    if (!allLeafColumns || allLeafColumns.length === 0) {\n      return false;\n    }\n    return allLeafColumns.every(col => col.isMoving());\n  }\n  checkLeft() {\n    this.displayedChildren.forEach(child => {\n      if (isColumnGroup(child)) {\n        child.checkLeft();\n      }\n    });\n    if (this.displayedChildren.length > 0) {\n      if (this.gos.get(\"enableRtl\")) {\n        const lastChild = _last(this.displayedChildren);\n        const lastChildLeft = lastChild.getLeft();\n        this.setLeft(lastChildLeft);\n      } else {\n        const firstChildLeft = this.displayedChildren[0].getLeft();\n        this.setLeft(firstChildLeft);\n      }\n    } else {\n      this.setLeft(null);\n    }\n  }\n  getLeft() {\n    return this.left;\n  }\n  getOldLeft() {\n    return this.oldLeft;\n  }\n  setLeft(left) {\n    this.oldLeft = this.left;\n    if (this.left !== left) {\n      this.left = left;\n      this.dispatchLocalEvent({\n        type: \"leftChanged\"\n      });\n    }\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  getGroupId() {\n    return this.groupId;\n  }\n  getPartId() {\n    return this.partId;\n  }\n  getActualWidth() {\n    let groupActualWidth = 0;\n    if (this.displayedChildren) {\n      this.displayedChildren.forEach(child => {\n        groupActualWidth += child.getActualWidth();\n      });\n    }\n    return groupActualWidth;\n  }\n  isResizable() {\n    if (!this.displayedChildren) {\n      return false;\n    }\n    let result = false;\n    this.displayedChildren.forEach(child => {\n      if (child.isResizable()) {\n        result = true;\n      }\n    });\n    return result;\n  }\n  getMinWidth() {\n    let result = 0;\n    this.displayedChildren.forEach(groupChild => {\n      result += groupChild.getMinWidth();\n    });\n    return result;\n  }\n  addChild(child) {\n    if (!this.children) {\n      this.children = [];\n    }\n    this.children.push(child);\n  }\n  getDisplayedChildren() {\n    return this.displayedChildren;\n  }\n  getLeafColumns() {\n    const result = [];\n    this.addLeafColumns(result);\n    return result;\n  }\n  getDisplayedLeafColumns() {\n    const result = [];\n    this.addDisplayedLeafColumns(result);\n    return result;\n  }\n  getDefinition() {\n    return this.providedColumnGroup.getColGroupDef();\n  }\n  getColGroupDef() {\n    return this.providedColumnGroup.getColGroupDef();\n  }\n  isPadding() {\n    return this.providedColumnGroup.isPadding();\n  }\n  isExpandable() {\n    return this.providedColumnGroup.isExpandable();\n  }\n  isExpanded() {\n    return this.providedColumnGroup.isExpanded();\n  }\n  setExpanded(expanded) {\n    this.providedColumnGroup.setExpanded(expanded);\n  }\n  addDisplayedLeafColumns(leafColumns) {\n    this.displayedChildren.forEach(child => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isColumnGroup(child)) {\n        child.addDisplayedLeafColumns(leafColumns);\n      }\n    });\n  }\n  addLeafColumns(leafColumns) {\n    this.children.forEach(child => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isColumnGroup(child)) {\n        child.addLeafColumns(leafColumns);\n      }\n    });\n  }\n  getChildren() {\n    return this.children;\n  }\n  getColumnGroupShow() {\n    return this.providedColumnGroup.getColumnGroupShow();\n  }\n  getProvidedColumnGroup() {\n    return this.providedColumnGroup;\n  }\n  getPaddingLevel() {\n    const parent = this.getParent();\n    if (!this.isPadding() || !parent || !parent.isPadding()) {\n      return 0;\n    }\n    return 1 + parent.getPaddingLevel();\n  }\n  calculateDisplayedColumns() {\n    this.displayedChildren = [];\n    let parentWithExpansion = this;\n    while (parentWithExpansion != null && parentWithExpansion.isPadding()) {\n      parentWithExpansion = parentWithExpansion.getParent();\n    }\n    const isExpandable = parentWithExpansion ? parentWithExpansion.getProvidedColumnGroup().isExpandable() : false;\n    if (!isExpandable) {\n      this.displayedChildren = this.children;\n      this.dispatchLocalEvent({\n        type: \"displayedChildrenChanged\"\n      });\n      return;\n    }\n    this.children.forEach(child => {\n      const emptyGroup = isColumnGroup(child) && (!child.displayedChildren || !child.displayedChildren.length);\n      if (emptyGroup) {\n        return;\n      }\n      const headerGroupShow = child.getColumnGroupShow();\n      switch (headerGroupShow) {\n        case \"open\":\n          if (parentWithExpansion.getProvidedColumnGroup().isExpanded()) {\n            this.displayedChildren.push(child);\n          }\n          break;\n        case \"closed\":\n          if (!parentWithExpansion.getProvidedColumnGroup().isExpanded()) {\n            this.displayedChildren.push(child);\n          }\n          break;\n        default:\n          this.displayedChildren.push(child);\n          break;\n      }\n    });\n    this.dispatchLocalEvent({\n      type: \"displayedChildrenChanged\"\n    });\n  }\n};\n\n// community-modules/core/src/columns/groupInstanceIdCreator.ts\nvar GroupInstanceIdCreator = class {\n  constructor() {\n    // this map contains keys to numbers, so we remember what the last call was\n    this.existingIds = {};\n  }\n  getInstanceIdForKey(key) {\n    const lastResult = this.existingIds[key];\n    let result;\n    if (typeof lastResult !== \"number\") {\n      result = 0;\n    } else {\n      result = lastResult + 1;\n    }\n    this.existingIds[key] = result;\n    return result;\n  }\n};\n\n// community-modules/core/src/columns/visibleColsService.ts\nvar VisibleColsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"visibleColsService\";\n    // for fast lookup, to see if a column or group is still visible\n    this.colsAndGroupsMap = {};\n    // leave level columns of the displayed trees\n    this.columnsLeft = [];\n    this.columnsRight = [];\n    this.columnsCenter = [];\n    // all three lists above combined\n    this.columns = [];\n    this.bodyWidth = 0;\n    this.leftWidth = 0;\n    this.rightWidth = 0;\n    this.bodyWidthDirty = true;\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnSizeService = beans.columnSizeService;\n    this.columnViewportService = beans.columnViewportService;\n    this.eventDispatcher = beans.columnEventDispatcher;\n  }\n  refresh(source, skipTreeBuild = false) {\n    if (!skipTreeBuild) {\n      this.buildTrees();\n    }\n    this.updateOpenClosedVisibilityInColumnGroups();\n    this.columnsLeft = pickDisplayedCols(this.treeLeft);\n    this.columnsCenter = pickDisplayedCols(this.treeCenter);\n    this.columnsRight = pickDisplayedCols(this.treeRight);\n    this.joinColsAriaOrder();\n    this.joinCols();\n    this.setLeftValues(source);\n    this.autoHeightCols = this.columns.filter(col => col.isAutoHeight());\n    this.columnSizeService.refreshFlexedColumns();\n    this.updateBodyWidths();\n    this.columnViewportService.checkViewportColumns(false);\n    this.setFirstRightAndLastLeftPinned(source);\n    this.eventDispatcher.visibleCols();\n  }\n  // after setColumnWidth or updateGroupsAndPresentedCols\n  updateBodyWidths() {\n    const newBodyWidth = getWidthOfColsInList(this.columnsCenter);\n    const newLeftWidth = getWidthOfColsInList(this.columnsLeft);\n    const newRightWidth = getWidthOfColsInList(this.columnsRight);\n    this.bodyWidthDirty = this.bodyWidth !== newBodyWidth;\n    const atLeastOneChanged = this.bodyWidth !== newBodyWidth || this.leftWidth !== newLeftWidth || this.rightWidth !== newRightWidth;\n    if (atLeastOneChanged) {\n      this.bodyWidth = newBodyWidth;\n      this.leftWidth = newLeftWidth;\n      this.rightWidth = newRightWidth;\n      const evt = {\n        type: \"columnContainerWidthChanged\"\n      };\n      this.eventService.dispatchEvent(evt);\n      const event = {\n        type: \"displayedColumnsWidthChanged\"\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  // sets the left pixel position of each column\n  setLeftValues(source) {\n    this.setLeftValuesOfCols(source);\n    this.setLeftValuesOfGroups();\n  }\n  setFirstRightAndLastLeftPinned(source) {\n    let lastLeft;\n    let firstRight;\n    if (this.gos.get(\"enableRtl\")) {\n      lastLeft = this.columnsLeft ? this.columnsLeft[0] : null;\n      firstRight = this.columnsRight ? _last(this.columnsRight) : null;\n    } else {\n      lastLeft = this.columnsLeft ? _last(this.columnsLeft) : null;\n      firstRight = this.columnsRight ? this.columnsRight[0] : null;\n    }\n    this.columnModel.getCols().forEach(col => {\n      col.setLastLeftPinned(col === lastLeft, source);\n      col.setFirstRightPinned(col === firstRight, source);\n    });\n  }\n  buildTrees() {\n    const cols = this.columnModel.getColsToShow();\n    const leftCols = cols.filter(col => col.getPinned() == \"left\");\n    const rightCols = cols.filter(col => col.getPinned() == \"right\");\n    const centerCols = cols.filter(col => col.getPinned() != \"left\" && col.getPinned() != \"right\");\n    const idCreator = new GroupInstanceIdCreator();\n    this.treeLeft = this.createGroups({\n      columns: leftCols,\n      idCreator,\n      pinned: \"left\",\n      oldDisplayedGroups: this.treeLeft\n    });\n    this.treeRight = this.createGroups({\n      columns: rightCols,\n      idCreator,\n      pinned: \"right\",\n      oldDisplayedGroups: this.treeRight\n    });\n    this.treeCenter = this.createGroups({\n      columns: centerCols,\n      idCreator,\n      pinned: null,\n      oldDisplayedGroups: this.treeCenter\n    });\n    this.updateColsAndGroupsMap();\n  }\n  clear() {\n    this.columnsLeft = [];\n    this.columnsRight = [];\n    this.columnsCenter = [];\n    this.columns = [];\n    this.ariaOrderColumns = [];\n  }\n  joinColsAriaOrder() {\n    const allColumns = this.columnModel.getCols();\n    const pinnedLeft = [];\n    const center = [];\n    const pinnedRight = [];\n    for (const col of allColumns) {\n      const pinned = col.getPinned();\n      if (!pinned) {\n        center.push(col);\n      } else if (pinned === true || pinned === \"left\") {\n        pinnedLeft.push(col);\n      } else {\n        pinnedRight.push(col);\n      }\n    }\n    this.ariaOrderColumns = pinnedLeft.concat(center).concat(pinnedRight);\n  }\n  getAriaColIndex(colOrGroup) {\n    let col;\n    if (isColumnGroup(colOrGroup)) {\n      col = colOrGroup.getLeafColumns()[0];\n    } else {\n      col = colOrGroup;\n    }\n    return this.ariaOrderColumns.indexOf(col) + 1;\n  }\n  getAllAutoHeightCols() {\n    return this.autoHeightCols;\n  }\n  setLeftValuesOfGroups() {\n    [this.treeLeft, this.treeRight, this.treeCenter].forEach(columns => {\n      columns.forEach(column => {\n        if (isColumnGroup(column)) {\n          const columnGroup = column;\n          columnGroup.checkLeft();\n        }\n      });\n    });\n  }\n  setLeftValuesOfCols(source) {\n    const primaryCols = this.columnModel.getColDefCols();\n    if (!primaryCols) {\n      return;\n    }\n    const allColumns = this.columnModel.getCols().slice(0);\n    const doingRtl = this.gos.get(\"enableRtl\");\n    [this.columnsLeft, this.columnsRight, this.columnsCenter].forEach(columns => {\n      if (doingRtl) {\n        let left = getWidthOfColsInList(columns);\n        columns.forEach(column => {\n          left -= column.getActualWidth();\n          column.setLeft(left, source);\n        });\n      } else {\n        let left = 0;\n        columns.forEach(column => {\n          column.setLeft(left, source);\n          left += column.getActualWidth();\n        });\n      }\n      _removeAllFromUnorderedArray(allColumns, columns);\n    });\n    allColumns.forEach(column => {\n      column.setLeft(null, source);\n    });\n  }\n  joinCols() {\n    if (this.gos.get(\"enableRtl\")) {\n      this.columns = this.columnsRight.concat(this.columnsCenter).concat(this.columnsLeft);\n    } else {\n      this.columns = this.columnsLeft.concat(this.columnsCenter).concat(this.columnsRight);\n    }\n  }\n  getColsCenter() {\n    return this.columnsCenter;\n  }\n  getAllTrees() {\n    if (this.treeLeft && this.treeRight && this.treeCenter) {\n      return this.treeLeft.concat(this.treeCenter).concat(this.treeRight);\n    }\n    return null;\n  }\n  // + headerRenderer -> setting pinned body width\n  getTreeLeft() {\n    return this.treeLeft;\n  }\n  // + headerRenderer -> setting pinned body width\n  getTreeRight() {\n    return this.treeRight;\n  }\n  // + headerRenderer -> setting pinned body width\n  getTreeCenter() {\n    return this.treeCenter;\n  }\n  // + csvCreator\n  getAllCols() {\n    return this.columns;\n  }\n  // gridPanel -> ensureColumnVisible\n  isColDisplayed(column) {\n    return this.getAllCols().indexOf(column) >= 0;\n  }\n  getLeftColsForRow(rowNode) {\n    const colSpanActive = this.columnModel.isColSpanActive();\n    if (!colSpanActive) {\n      return this.columnsLeft;\n    }\n    return this.getColsForRow(rowNode, this.columnsLeft);\n  }\n  getRightColsForRow(rowNode) {\n    const colSpanActive = this.columnModel.isColSpanActive();\n    if (!colSpanActive) {\n      return this.columnsRight;\n    }\n    return this.getColsForRow(rowNode, this.columnsRight);\n  }\n  getColsForRow(rowNode, displayedColumns, filterCallback, emptySpaceBeforeColumn) {\n    const result = [];\n    let lastConsideredCol = null;\n    for (let i = 0; i < displayedColumns.length; i++) {\n      const col = displayedColumns[i];\n      const maxAllowedColSpan = displayedColumns.length - i;\n      const colSpan = Math.min(col.getColSpan(rowNode), maxAllowedColSpan);\n      const columnsToCheckFilter = [col];\n      if (colSpan > 1) {\n        const colsToRemove = colSpan - 1;\n        for (let j = 1; j <= colsToRemove; j++) {\n          columnsToCheckFilter.push(displayedColumns[i + j]);\n        }\n        i += colsToRemove;\n      }\n      let filterPasses;\n      if (filterCallback) {\n        filterPasses = false;\n        columnsToCheckFilter.forEach(colForFilter => {\n          if (filterCallback(colForFilter)) {\n            filterPasses = true;\n          }\n        });\n      } else {\n        filterPasses = true;\n      }\n      if (filterPasses) {\n        if (result.length === 0 && lastConsideredCol) {\n          const gapBeforeColumn = emptySpaceBeforeColumn ? emptySpaceBeforeColumn(col) : false;\n          if (gapBeforeColumn) {\n            result.push(lastConsideredCol);\n          }\n        }\n        result.push(col);\n      }\n      lastConsideredCol = col;\n    }\n    return result;\n  }\n  // used by:\n  // + angularGrid -> for setting body width\n  // + rowController -> setting main row widths (when inserting and resizing)\n  // need to cache this\n  getBodyContainerWidth() {\n    return this.bodyWidth;\n  }\n  getContainerWidth(pinned) {\n    switch (pinned) {\n      case \"left\":\n        return this.leftWidth;\n      case \"right\":\n        return this.rightWidth;\n      default:\n        return this.bodyWidth;\n    }\n  }\n  // + rowController -> while inserting rows\n  getCenterCols() {\n    return this.columnsCenter;\n  }\n  // + rowController -> while inserting rows\n  getLeftCols() {\n    return this.columnsLeft;\n  }\n  getRightCols() {\n    return this.columnsRight;\n  }\n  getColBefore(col) {\n    const allDisplayedColumns = this.getAllCols();\n    const oldIndex = allDisplayedColumns.indexOf(col);\n    if (oldIndex > 0) {\n      return allDisplayedColumns[oldIndex - 1];\n    }\n    return null;\n  }\n  getGroupAtDirection(columnGroup, direction) {\n    const requiredLevel = columnGroup.getProvidedColumnGroup().getLevel() + columnGroup.getPaddingLevel();\n    const colGroupLeafColumns = columnGroup.getDisplayedLeafColumns();\n    const col = direction === \"After\" ? _last(colGroupLeafColumns) : colGroupLeafColumns[0];\n    const getDisplayColMethod = `getCol${direction}`;\n    while (true) {\n      const column = this[getDisplayColMethod](col);\n      if (!column) {\n        return null;\n      }\n      const groupPointer = this.getColGroupAtLevel(column, requiredLevel);\n      if (groupPointer !== columnGroup) {\n        return groupPointer;\n      }\n    }\n  }\n  getColGroupAtLevel(column, level) {\n    let groupPointer = column.getParent();\n    let originalGroupLevel;\n    let groupPointerLevel;\n    while (true) {\n      const groupPointerProvidedColumnGroup = groupPointer.getProvidedColumnGroup();\n      originalGroupLevel = groupPointerProvidedColumnGroup.getLevel();\n      groupPointerLevel = groupPointer.getPaddingLevel();\n      if (originalGroupLevel + groupPointerLevel <= level) {\n        break;\n      }\n      groupPointer = groupPointer.getParent();\n    }\n    return groupPointer;\n  }\n  isPinningLeft() {\n    return this.columnsLeft.length > 0;\n  }\n  isPinningRight() {\n    return this.columnsRight.length > 0;\n  }\n  updateColsAndGroupsMap() {\n    this.colsAndGroupsMap = {};\n    const func = child => {\n      this.colsAndGroupsMap[child.getUniqueId()] = child;\n    };\n    depthFirstAllColumnTreeSearch(this.treeCenter, false, func);\n    depthFirstAllColumnTreeSearch(this.treeLeft, false, func);\n    depthFirstAllColumnTreeSearch(this.treeRight, false, func);\n  }\n  isVisible(item) {\n    const fromMap = this.colsAndGroupsMap[item.getUniqueId()];\n    return fromMap === item;\n  }\n  updateOpenClosedVisibilityInColumnGroups() {\n    const allColumnGroups = this.getAllTrees();\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, child => {\n      if (isColumnGroup(child)) {\n        child.calculateDisplayedColumns();\n      }\n    });\n  }\n  getFirstColumn() {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const queryOrder = [\"getLeftCols\", \"getCenterCols\", \"getRightCols\"];\n    if (isRtl) {\n      queryOrder.reverse();\n    }\n    for (let i = 0; i < queryOrder.length; i++) {\n      const container = this[queryOrder[i]]();\n      if (container.length) {\n        return isRtl ? _last(container) : container[0];\n      }\n    }\n    return null;\n  }\n  // returns the group with matching colId and instanceId. If instanceId is missing,\n  // matches only on the colId.\n  getColumnGroup(colId, partId) {\n    if (!colId) {\n      return null;\n    }\n    if (isColumnGroup(colId)) {\n      return colId;\n    }\n    const allColumnGroups = this.getAllTrees();\n    const checkPartId = typeof partId === \"number\";\n    let result = null;\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, child => {\n      if (isColumnGroup(child)) {\n        const columnGroup = child;\n        let matched;\n        if (checkPartId) {\n          matched = colId === columnGroup.getGroupId() && partId === columnGroup.getPartId();\n        } else {\n          matched = colId === columnGroup.getGroupId();\n        }\n        if (matched) {\n          result = columnGroup;\n        }\n      }\n    });\n    return result;\n  }\n  // used by:\n  // + rowRenderer -> for navigation\n  getColAfter(col) {\n    const allDisplayedColumns = this.getAllCols();\n    const oldIndex = allDisplayedColumns.indexOf(col);\n    if (oldIndex < allDisplayedColumns.length - 1) {\n      return allDisplayedColumns[oldIndex + 1];\n    }\n    return null;\n  }\n  isBodyWidthDirty() {\n    return this.bodyWidthDirty;\n  }\n  setBodyWidthDirty() {\n    this.bodyWidthDirty = true;\n  }\n  // used by:\n  // + angularGrid -> setting pinned body width\n  // note: this should be cached\n  getColsLeftWidth() {\n    return getWidthOfColsInList(this.columnsLeft);\n  }\n  // note: this should be cached\n  getDisplayedColumnsRightWidth() {\n    return getWidthOfColsInList(this.columnsRight);\n  }\n  isColAtEdge(col, edge) {\n    const allColumns = this.getAllCols();\n    if (!allColumns.length) {\n      return false;\n    }\n    const isFirst = edge === \"first\";\n    let columnToCompare;\n    if (isColumnGroup(col)) {\n      const leafColumns = col.getDisplayedLeafColumns();\n      if (!leafColumns.length) {\n        return false;\n      }\n      columnToCompare = isFirst ? leafColumns[0] : _last(leafColumns);\n    } else {\n      columnToCompare = col;\n    }\n    return (isFirst ? allColumns[0] : _last(allColumns)) === columnToCompare;\n  }\n  createGroups(params) {\n    const {\n      columns,\n      idCreator,\n      pinned,\n      oldDisplayedGroups,\n      isStandaloneStructure\n    } = params;\n    const oldColumnsMapped = this.mapOldGroupsById(oldDisplayedGroups);\n    const topLevelResultCols = [];\n    let groupsOrColsAtCurrentLevel = columns;\n    while (groupsOrColsAtCurrentLevel.length) {\n      const currentlyIterating = groupsOrColsAtCurrentLevel;\n      groupsOrColsAtCurrentLevel = [];\n      let lastGroupedColIdx = 0;\n      const createGroupToIndex = to => {\n        const from = lastGroupedColIdx;\n        lastGroupedColIdx = to;\n        const previousNode = currentlyIterating[from];\n        const previousNodeProvided = isColumnGroup(previousNode) ? previousNode.getProvidedColumnGroup() : previousNode;\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\n        if (previousNodeParent == null) {\n          for (let i = from; i < to; i++) {\n            topLevelResultCols.push(currentlyIterating[i]);\n          }\n          return;\n        }\n        const newGroup = this.createColGroup(previousNodeParent, idCreator, oldColumnsMapped, pinned, isStandaloneStructure);\n        for (let i = from; i < to; i++) {\n          newGroup.addChild(currentlyIterating[i]);\n        }\n        groupsOrColsAtCurrentLevel.push(newGroup);\n      };\n      for (let i = 1; i < currentlyIterating.length; i++) {\n        const thisNode = currentlyIterating[i];\n        const thisNodeProvided = isColumnGroup(thisNode) ? thisNode.getProvidedColumnGroup() : thisNode;\n        const thisNodeParent = thisNodeProvided.getOriginalParent();\n        const previousNode = currentlyIterating[lastGroupedColIdx];\n        const previousNodeProvided = isColumnGroup(previousNode) ? previousNode.getProvidedColumnGroup() : previousNode;\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\n        if (thisNodeParent !== previousNodeParent) {\n          createGroupToIndex(i);\n        }\n      }\n      if (lastGroupedColIdx < currentlyIterating.length) {\n        createGroupToIndex(currentlyIterating.length);\n      }\n    }\n    if (!isStandaloneStructure) {\n      this.setupParentsIntoCols(topLevelResultCols, null);\n    }\n    return topLevelResultCols;\n  }\n  createColGroup(providedGroup, groupInstanceIdCreator, oldColumnsMapped, pinned, isStandaloneStructure) {\n    const groupId = providedGroup.getGroupId();\n    const instanceId = groupInstanceIdCreator.getInstanceIdForKey(groupId);\n    const uniqueId = createUniqueColumnGroupId(groupId, instanceId);\n    let columnGroup = oldColumnsMapped[uniqueId];\n    if (columnGroup && columnGroup.getProvidedColumnGroup() !== providedGroup) {\n      columnGroup = null;\n    }\n    if (_exists(columnGroup)) {\n      columnGroup.reset();\n    } else {\n      columnGroup = new AgColumnGroup(providedGroup, groupId, instanceId, pinned);\n      if (!isStandaloneStructure) {\n        this.createBean(columnGroup);\n      }\n    }\n    return columnGroup;\n  }\n  // returns back a 2d map of ColumnGroup as follows: groupId -> instanceId -> ColumnGroup\n  mapOldGroupsById(displayedGroups) {\n    const result = {};\n    const recursive = columnsOrGroups => {\n      columnsOrGroups.forEach(columnOrGroup => {\n        if (isColumnGroup(columnOrGroup)) {\n          const columnGroup = columnOrGroup;\n          result[columnOrGroup.getUniqueId()] = columnGroup;\n          recursive(columnGroup.getChildren());\n        }\n      });\n    };\n    if (displayedGroups) {\n      recursive(displayedGroups);\n    }\n    return result;\n  }\n  setupParentsIntoCols(columnsOrGroups, parent) {\n    columnsOrGroups.forEach(columnsOrGroup => {\n      columnsOrGroup.setParent(parent);\n      if (isColumnGroup(columnsOrGroup)) {\n        const columnGroup = columnsOrGroup;\n        this.setupParentsIntoCols(columnGroup.getChildren(), columnGroup);\n      }\n    });\n  }\n};\nfunction depthFirstAllColumnTreeSearch(tree, useDisplayedChildren, callback) {\n  if (!tree) {\n    return;\n  }\n  for (let i = 0; i < tree.length; i++) {\n    const child = tree[i];\n    if (isColumnGroup(child)) {\n      const childTree = useDisplayedChildren ? child.getDisplayedChildren() : child.getChildren();\n      depthFirstAllColumnTreeSearch(childTree, useDisplayedChildren, callback);\n    }\n    callback(child);\n  }\n}\nfunction pickDisplayedCols(tree) {\n  const res = [];\n  depthFirstAllColumnTreeSearch(tree, true, child => {\n    if (isColumn(child)) {\n      res.push(child);\n    }\n  });\n  return res;\n}\n\n// community-modules/core/src/eventTypes.ts\nvar PUBLIC_EVENTS = [\"columnEverythingChanged\", \"newColumnsLoaded\", \"columnPivotModeChanged\", \"pivotMaxColumnsExceeded\", \"columnRowGroupChanged\", \"expandOrCollapseAll\", \"columnPivotChanged\", \"gridColumnsChanged\", \"columnValueChanged\", \"columnMoved\", \"columnVisible\", \"columnPinned\", \"columnGroupOpened\", \"columnResized\", \"displayedColumnsChanged\", \"virtualColumnsChanged\", \"columnHeaderMouseOver\", \"columnHeaderMouseLeave\", \"columnHeaderClicked\", \"columnHeaderContextMenu\", \"asyncTransactionsFlushed\", \"rowGroupOpened\", \"rowDataUpdated\", \"pinnedRowDataChanged\", \"rangeSelectionChanged\", \"chartCreated\", \"chartRangeSelectionChanged\", \"chartOptionsChanged\", \"chartDestroyed\", \"toolPanelVisibleChanged\", \"toolPanelSizeChanged\", \"modelUpdated\", \"cutStart\", \"cutEnd\", \"pasteStart\", \"pasteEnd\", \"fillStart\", \"fillEnd\", \"rangeDeleteStart\", \"rangeDeleteEnd\", \"undoStarted\", \"undoEnded\", \"redoStarted\", \"redoEnded\", \"cellClicked\", \"cellDoubleClicked\", \"cellMouseDown\", \"cellContextMenu\", \"cellValueChanged\", \"cellEditRequest\", \"rowValueChanged\", \"headerFocused\", \"cellFocused\", \"rowSelected\", \"selectionChanged\", \"tooltipShow\", \"tooltipHide\", \"cellKeyDown\", \"cellMouseOver\", \"cellMouseOut\", \"filterChanged\", \"filterModified\", \"filterOpened\", \"advancedFilterBuilderVisibleChanged\", \"sortChanged\", \"virtualRowRemoved\", \"rowClicked\", \"rowDoubleClicked\", \"gridReady\", \"gridPreDestroyed\", \"gridSizeChanged\", \"viewportChanged\", \"firstDataRendered\", \"dragStarted\", \"dragStopped\", \"rowEditingStarted\", \"rowEditingStopped\", \"cellEditingStarted\", \"cellEditingStopped\", \"bodyScroll\", \"bodyScrollEnd\", \"paginationChanged\", \"componentStateChanged\", \"storeRefreshed\", \"stateUpdated\", \"columnMenuVisibleChanged\", \"contextMenuVisibleChanged\", \"rowDragEnter\", \"rowDragMove\", \"rowDragLeave\", \"rowDragEnd\"];\nvar INTERNAL_EVENTS = [\"scrollbarWidthChanged\", \"keyShortcutChangedCellStart\", \"keyShortcutChangedCellEnd\", \"pinnedHeightChanged\", \"cellFocusCleared\", \"fullWidthRowFocused\", \"checkboxChanged\", \"heightScaleChanged\", \"suppressMovableColumns\", \"suppressMenuHide\", \"suppressFieldDotNotation\", \"columnPanelItemDragStart\", \"columnPanelItemDragEnd\", \"bodyHeightChanged\", \"columnContainerWidthChanged\", \"displayedColumnsWidthChanged\", \"scrollVisibilityChanged\", \"columnHoverChanged\", \"flashCells\", \"paginationPixelOffsetChanged\", \"displayedRowsChanged\", \"leftPinnedWidthChanged\", \"rightPinnedWidthChanged\", \"rowContainerHeightChanged\", \"headerHeightChanged\", \"columnHeaderHeightChanged\", \"gridStylesChanged\", \"storeUpdated\", \"filterDestroyed\", \"rowDataUpdateStarted\", \"rowCountReady\", \"advancedFilterEnabledChanged\", \"dataTypesInferred\", \"fieldValueChanged\", \"fieldPickerValueSelected\", \"richSelectListRowSelected\", \"sideBarUpdated\", \"alignedGridScroll\", \"alignedGridColumn\", \"gridOptionsChanged\", \"chartTitleEdit\", \"recalculateRowBounds\", \"stickyTopOffsetChanged\"];\nvar ALL_EVENTS = [...PUBLIC_EVENTS, ...INTERNAL_EVENTS];\n\n// community-modules/core/src/propertyKeys.ts\nvar INITIAL_GRID_OPTION_KEYS = {\n  enableBrowserTooltips: true,\n  tooltipTrigger: true,\n  tooltipMouseTrack: true,\n  tooltipShowMode: true,\n  tooltipInteraction: true,\n  defaultColGroupDef: true,\n  suppressAutoSize: true,\n  skipHeaderOnAutoSize: true,\n  autoSizeStrategy: true,\n  components: true,\n  stopEditingWhenCellsLoseFocus: true,\n  undoRedoCellEditing: true,\n  undoRedoCellEditingLimit: true,\n  excelStyles: true,\n  cacheQuickFilter: true,\n  advancedFilterModel: true,\n  customChartThemes: true,\n  chartThemeOverrides: true,\n  chartToolPanelsDef: true,\n  loadingCellRendererSelector: true,\n  localeText: true,\n  keepDetailRows: true,\n  keepDetailRowsCount: true,\n  detailRowHeight: true,\n  detailRowAutoHeight: true,\n  tabIndex: true,\n  valueCache: true,\n  valueCacheNeverExpires: true,\n  enableCellExpressions: true,\n  suppressTouch: true,\n  suppressAsyncEvents: true,\n  suppressBrowserResizeObserver: true,\n  suppressPropertyNamesCheck: true,\n  debug: true,\n  loadingOverlayComponent: true,\n  suppressLoadingOverlay: true,\n  noRowsOverlayComponent: true,\n  paginationPageSizeSelector: true,\n  paginateChildRows: true,\n  pivotPanelShow: true,\n  pivotSuppressAutoColumn: true,\n  suppressExpandablePivotGroups: true,\n  aggFuncs: true,\n  suppressAggFuncInHeader: true,\n  removePivotHeaderRowWhenSingleValueColumn: true,\n  allowShowChangeAfterFilter: true,\n  ensureDomOrder: true,\n  enableRtl: true,\n  suppressColumnVirtualisation: true,\n  suppressMaxRenderedRowRestriction: true,\n  suppressRowVirtualisation: true,\n  rowDragText: true,\n  suppressGroupMaintainValueType: true,\n  groupLockGroupColumns: true,\n  rowGroupPanelSuppressSort: true,\n  suppressGroupRowsSticky: true,\n  rowModelType: true,\n  cacheOverflowSize: true,\n  infiniteInitialRowCount: true,\n  serverSideInitialRowCount: true,\n  suppressServerSideInfiniteScroll: true,\n  maxBlocksInCache: true,\n  maxConcurrentDatasourceRequests: true,\n  blockLoadDebounceMillis: true,\n  serverSideOnlyRefreshFilteredGroups: true,\n  serverSidePivotResultFieldSeparator: true,\n  viewportRowModelPageSize: true,\n  viewportRowModelBufferSize: true,\n  debounceVerticalScrollbar: true,\n  suppressAnimationFrame: true,\n  suppressPreventDefaultOnMouseWheel: true,\n  scrollbarWidth: true,\n  icons: true,\n  suppressRowTransform: true,\n  gridId: true,\n  enableGroupEdit: true,\n  initialState: true,\n  processUnpinnedColumns: true,\n  createChartContainer: true,\n  getLocaleText: true,\n  getRowId: true,\n  reactiveCustomComponents: true,\n  columnMenu: true\n};\nvar _PropertyKeys = class _PropertyKeys {};\n_PropertyKeys.STRING_PROPERTIES = [\"rowSelection\", \"overlayLoadingTemplate\", \"overlayNoRowsTemplate\", \"gridId\", \"quickFilterText\", \"rowModelType\", \"editType\", \"domLayout\", \"clipboardDelimiter\", \"rowGroupPanelShow\", \"multiSortKey\", \"pivotColumnGroupTotals\", \"pivotRowTotals\", \"pivotPanelShow\", \"fillHandleDirection\", \"groupDisplayType\", \"treeDataDisplayType\", \"colResizeDefault\", \"tooltipTrigger\", \"serverSidePivotResultFieldSeparator\", \"columnMenu\", \"tooltipShowMode\", \"grandTotalRow\"];\n_PropertyKeys.OBJECT_PROPERTIES = [\"components\", \"rowStyle\", \"context\", \"autoGroupColumnDef\", \"localeText\", \"icons\", \"datasource\", \"serverSideDatasource\", \"viewportDatasource\", \"groupRowRendererParams\", \"aggFuncs\", \"fullWidthCellRendererParams\", \"defaultColGroupDef\", \"defaultColDef\", \"defaultCsvExportParams\", \"defaultExcelExportParams\", \"columnTypes\", \"rowClassRules\", \"detailCellRendererParams\", \"loadingCellRendererParams\", \"loadingOverlayComponentParams\", \"noRowsOverlayComponentParams\", \"popupParent\", \"statusBar\", \"sideBar\", \"chartThemeOverrides\", \"customChartThemes\", \"chartToolPanelsDef\", \"dataTypeDefinitions\", \"advancedFilterModel\", \"advancedFilterParent\", \"advancedFilterBuilderParams\", \"initialState\", \"autoSizeStrategy\"];\n_PropertyKeys.ARRAY_PROPERTIES = [\"sortingOrder\", \"alignedGrids\", \"rowData\", \"columnDefs\", \"excelStyles\", \"pinnedTopRowData\", \"pinnedBottomRowData\", \"chartThemes\", \"rowClass\", \"paginationPageSizeSelector\"];\n// These properties are coerced at runtime, do not do union types\n_PropertyKeys.NUMBER_PROPERTIES = [\"rowHeight\", \"detailRowHeight\", \"rowBuffer\", \"headerHeight\", \"groupHeaderHeight\", \"groupLockGroupColumns\", \"floatingFiltersHeight\", \"pivotHeaderHeight\", \"pivotGroupHeaderHeight\", \"groupDefaultExpanded\", \"pivotDefaultExpanded\", \"viewportRowModelPageSize\", \"viewportRowModelBufferSize\", \"autoSizePadding\", \"maxBlocksInCache\", \"maxConcurrentDatasourceRequests\", \"tooltipShowDelay\", \"tooltipHideDelay\", \"cacheOverflowSize\", \"paginationPageSize\", \"cacheBlockSize\", \"infiniteInitialRowCount\", \"serverSideInitialRowCount\", \"scrollbarWidth\", \"asyncTransactionWaitMillis\", \"blockLoadDebounceMillis\", \"keepDetailRowsCount\", \"undoRedoCellEditingLimit\", \"cellFlashDelay\", \"cellFadeDelay\", \"cellFlashDuration\", \"cellFadeDuration\", \"tabIndex\", \"pivotMaxGeneratedColumns\"];\n// These properties are coerced at runtime, do not do union types\n_PropertyKeys.BOOLEAN_PROPERTIES = [\"suppressMakeColumnVisibleAfterUnGroup\", \"suppressRowClickSelection\", \"suppressCellFocus\", \"suppressHeaderFocus\", \"suppressHorizontalScroll\", \"groupSelectsChildren\", \"alwaysShowHorizontalScroll\", \"alwaysShowVerticalScroll\", \"debug\", \"enableBrowserTooltips\", \"enableCellExpressions\", \"groupIncludeTotalFooter\", \"groupSuppressBlankHeader\", \"suppressMenuHide\", \"suppressRowDeselection\", \"unSortIcon\", \"suppressMultiSort\", \"alwaysMultiSort\", \"singleClickEdit\", \"suppressLoadingOverlay\", \"suppressNoRowsOverlay\", \"suppressAutoSize\", \"skipHeaderOnAutoSize\", \"suppressColumnMoveAnimation\", \"suppressMovableColumns\", \"suppressFieldDotNotation\", \"enableRangeSelection\", \"enableRangeHandle\", \"enableFillHandle\", \"suppressClearOnFillReduction\", \"deltaSort\", \"suppressTouch\", \"suppressAsyncEvents\", \"allowContextMenuWithControlKey\", \"suppressContextMenu\", \"enableCellChangeFlash\", \"suppressDragLeaveHidesColumns\", \"suppressRowGroupHidesColumns\", \"suppressMiddleClickScrolls\", \"suppressPreventDefaultOnMouseWheel\", \"suppressCopyRowsToClipboard\", \"copyHeadersToClipboard\", \"copyGroupHeadersToClipboard\", \"pivotMode\", \"suppressAggFuncInHeader\", \"suppressColumnVirtualisation\", \"alwaysAggregateAtRootLevel\", \"suppressFocusAfterRefresh\", \"functionsReadOnly\", \"animateRows\", \"groupSelectsFiltered\", \"groupRemoveSingleChildren\", \"groupRemoveLowestSingleChildren\", \"enableRtl\", \"suppressClickEdit\", \"rowDragEntireRow\", \"rowDragManaged\", \"suppressRowDrag\", \"suppressMoveWhenRowDragging\", \"rowDragMultiRow\", \"enableGroupEdit\", \"embedFullWidthRows\", \"suppressPaginationPanel\", \"groupHideOpenParents\", \"groupAllowUnbalanced\", \"pagination\", \"paginationAutoPageSize\", \"suppressScrollOnNewData\", \"suppressScrollWhenPopupsAreOpen\", \"purgeClosedRowNodes\", \"cacheQuickFilter\", \"includeHiddenColumnsInQuickFilter\", \"ensureDomOrder\", \"accentedSort\", \"suppressChangeDetection\", \"valueCache\", \"valueCacheNeverExpires\", \"aggregateOnlyChangedColumns\", \"suppressAnimationFrame\", \"suppressExcelExport\", \"suppressCsvExport\", \"includeHiddenColumnsInAdvancedFilter\", \"suppressMultiRangeSelection\", \"enterNavigatesVerticallyAfterEdit\", \"enterNavigatesVertically\", \"suppressPropertyNamesCheck\", \"rowMultiSelectWithClick\", \"suppressRowHoverHighlight\", \"suppressRowTransform\", \"suppressClipboardPaste\", \"suppressLastEmptyLineOnPaste\", \"enableCharts\", \"suppressMaintainUnsortedOrder\", \"enableCellTextSelection\", \"suppressBrowserResizeObserver\", \"suppressMaxRenderedRowRestriction\", \"excludeChildrenWhenTreeDataFiltering\", \"tooltipMouseTrack\", \"tooltipInteraction\", \"keepDetailRows\", \"paginateChildRows\", \"preventDefaultOnContextMenu\", \"undoRedoCellEditing\", \"allowDragFromColumnsToolPanel\", \"pivotSuppressAutoColumn\", \"suppressExpandablePivotGroups\", \"debounceVerticalScrollbar\", \"detailRowAutoHeight\", \"serverSideSortAllLevels\", \"serverSideEnableClientSideSort\", \"serverSideOnlyRefreshFilteredGroups\", \"serverSideSortOnServer\", \"serverSideFilterOnServer\", \"suppressAggFilteredOnly\", \"showOpenedGroup\", \"suppressClipboardApi\", \"suppressModelUpdateAfterUpdateTransaction\", \"stopEditingWhenCellsLoseFocus\", \"maintainColumnOrder\", \"groupMaintainOrder\", \"columnHoverHighlight\", \"readOnlyEdit\", \"suppressRowVirtualisation\", \"enableCellEditingOnBackspace\", \"resetRowDataOnUpdate\", \"removePivotHeaderRowWhenSingleValueColumn\", \"suppressCopySingleCellRanges\", \"suppressGroupRowsSticky\", \"suppressCutToClipboard\", \"suppressServerSideInfiniteScroll\", \"rowGroupPanelSuppressSort\", \"allowShowChangeAfterFilter\", \"enableAdvancedFilter\", \"masterDetail\", \"treeData\", \"suppressGroupMaintainValueType\", \"reactiveCustomComponents\", \"applyQuickFilterBeforePivotOrAgg\", \"suppressServerSideFullWidthLoadingRow\", \"suppressAdvancedFilterEval\", \"loading\"];\n// If property does not fit above, i.e union that should not be coerced.\n_PropertyKeys.OTHER_PROPERTIES = [\"suppressStickyTotalRow\"];\n_PropertyKeys.FUNCTION_PROPERTIES = [\"doesExternalFilterPass\", \"processPivotResultColDef\", \"processPivotResultColGroupDef\", \"getBusinessKeyForNode\", \"isRowSelectable\", \"rowDragText\", \"groupRowRenderer\", \"fullWidthCellRenderer\", \"loadingCellRenderer\", \"loadingOverlayComponent\", \"noRowsOverlayComponent\", \"detailCellRenderer\", \"quickFilterParser\", \"quickFilterMatcher\", \"getLocaleText\", \"isExternalFilterPresent\", \"getRowHeight\", \"getRowClass\", \"getRowStyle\", \"getContextMenuItems\", \"getMainMenuItems\", \"processRowPostCreate\", \"processCellForClipboard\", \"getGroupRowAgg\", \"isFullWidthRow\", \"sendToClipboard\", \"focusGridInnerElement\", \"navigateToNextHeader\", \"tabToNextHeader\", \"navigateToNextCell\", \"tabToNextCell\", \"processCellFromClipboard\", \"getDocument\", \"postProcessPopup\", \"getChildCount\", \"getDataPath\", \"isRowMaster\", \"postSortRows\", \"processHeaderForClipboard\", \"processUnpinnedColumns\", \"processGroupHeaderForClipboard\", \"paginationNumberFormatter\", \"processDataFromClipboard\", \"getServerSideGroupKey\", \"isServerSideGroup\", \"createChartContainer\", \"getChartToolbarItems\", \"fillOperation\", \"isApplyServerSideTransaction\", \"getServerSideGroupLevelParams\", \"isServerSideGroupOpenByDefault\", \"isGroupOpenByDefault\", \"initialGroupOrderComparator\", \"groupIncludeFooter\", \"loadingCellRendererSelector\", \"getRowId\", \"groupAggFiltering\", \"chartMenuItems\", \"groupTotalRow\"];\n_PropertyKeys.ALL_PROPERTIES = [..._PropertyKeys.ARRAY_PROPERTIES, ..._PropertyKeys.OBJECT_PROPERTIES, ..._PropertyKeys.STRING_PROPERTIES, ..._PropertyKeys.NUMBER_PROPERTIES, ..._PropertyKeys.FUNCTION_PROPERTIES, ..._PropertyKeys.BOOLEAN_PROPERTIES, ..._PropertyKeys.OTHER_PROPERTIES];\nvar PropertyKeys = _PropertyKeys;\n\n// community-modules/core/src/components/componentUtil.ts\nvar _ComponentUtil = class _ComponentUtil {\n  static getCallbackForEvent(eventName) {\n    if (!eventName || eventName.length < 2) {\n      return eventName;\n    }\n    return \"on\" + eventName[0].toUpperCase() + eventName.substring(1);\n  }\n};\n_ComponentUtil.VUE_OMITTED_PROPERTY = \"AG-VUE-OMITTED-PROPERTY\";\n_ComponentUtil.PUBLIC_EVENTS = PUBLIC_EVENTS;\n// onXXX methods, based on the above events\n_ComponentUtil.EVENT_CALLBACKS = ALL_EVENTS.map(event => _ComponentUtil.getCallbackForEvent(event));\n_ComponentUtil.BOOLEAN_PROPERTIES = PropertyKeys.BOOLEAN_PROPERTIES;\n_ComponentUtil.ALL_PROPERTIES = PropertyKeys.ALL_PROPERTIES;\n_ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS = [..._ComponentUtil.ALL_PROPERTIES, ..._ComponentUtil.EVENT_CALLBACKS];\n_ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS_SET = new Set(_ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS);\nvar ComponentUtil = _ComponentUtil;\nfunction _combineAttributesAndGridOptions(gridOptions, component) {\n  if (typeof gridOptions !== \"object\") {\n    gridOptions = {};\n  }\n  const mergedOptions = {\n    ...gridOptions\n  };\n  const keys = ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS;\n  keys.forEach(key => {\n    const value = component[key];\n    if (typeof value !== \"undefined\" && value !== ComponentUtil.VUE_OMITTED_PROPERTY) {\n      mergedOptions[key] = value;\n    }\n  });\n  return mergedOptions;\n}\nfunction _processOnChange(changes, api) {\n  if (!changes) {\n    return;\n  }\n  const gridChanges = {};\n  let hasChanges = false;\n  Object.keys(changes).filter(key => ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS_SET.has(key)).forEach(key => {\n    gridChanges[key] = changes[key];\n    hasChanges = true;\n  });\n  if (!hasChanges) {\n    return;\n  }\n  const internalUpdateEvent = {\n    type: \"gridOptionsChanged\",\n    options: gridChanges\n  };\n  api.dispatchEvent(internalUpdateEvent);\n  const event = {\n    type: \"componentStateChanged\"\n  };\n  _iterateObject(gridChanges, (key, value) => {\n    event[key] = value;\n  });\n  api.dispatchEvent(event);\n}\n\n// community-modules/core/src/rendering/cssClassManager.ts\nvar CssClassManager = class {\n  constructor(getGui) {\n    // to minimise DOM hits, we only apply CSS classes if they have changed. as adding a CSS class that is already\n    // there, or removing one that wasn't present, all takes CPU.\n    this.cssClassStates = {};\n    this.getGui = getGui;\n  }\n  addCssClass(className) {\n    const list = (className || \"\").split(\" \");\n    if (list.length > 1) {\n      list.forEach(cls => this.addCssClass(cls));\n      return;\n    }\n    const updateNeeded = this.cssClassStates[className] !== true;\n    if (updateNeeded && className.length) {\n      const eGui = this.getGui();\n      if (eGui) {\n        eGui.classList.add(className);\n      }\n      this.cssClassStates[className] = true;\n    }\n  }\n  removeCssClass(className) {\n    const list = (className || \"\").split(\" \");\n    if (list.length > 1) {\n      list.forEach(cls => this.removeCssClass(cls));\n      return;\n    }\n    const updateNeeded = this.cssClassStates[className] !== false;\n    if (updateNeeded && className.length) {\n      const eGui = this.getGui();\n      if (eGui) {\n        eGui.classList.remove(className);\n      }\n      this.cssClassStates[className] = false;\n    }\n  }\n  containsCssClass(className) {\n    const eGui = this.getGui();\n    if (!eGui) {\n      return false;\n    }\n    return eGui.classList.contains(className);\n  }\n  addOrRemoveCssClass(className, addOrRemove) {\n    if (!className) {\n      return;\n    }\n    if (className.indexOf(\" \") >= 0) {\n      const list = (className || \"\").split(\" \");\n      if (list.length > 1) {\n        list.forEach(cls => this.addOrRemoveCssClass(cls, addOrRemove));\n        return;\n      }\n    }\n    const updateNeeded = this.cssClassStates[className] !== addOrRemove;\n    if (updateNeeded && className.length) {\n      const eGui = this.getGui();\n      if (eGui) {\n        eGui.classList.toggle(className, addOrRemove);\n      }\n      this.cssClassStates[className] = addOrRemove;\n    }\n  }\n};\n\n// community-modules/core/src/utils/aria.ts\nfunction _toggleAriaAttribute(element, attribute, value) {\n  if (value == null || typeof value === \"string\" && value == \"\") {\n    _removeAriaAttribute(element, attribute);\n  } else {\n    _setAriaAttribute(element, attribute, value);\n  }\n}\nfunction _setAriaAttribute(element, attribute, value) {\n  element.setAttribute(_ariaAttributeName(attribute), value.toString());\n}\nfunction _removeAriaAttribute(element, attribute) {\n  element.removeAttribute(_ariaAttributeName(attribute));\n}\nfunction _ariaAttributeName(attribute) {\n  return `aria-${attribute}`;\n}\nfunction _setAriaRole(element, role) {\n  if (role) {\n    element.setAttribute(\"role\", role);\n  } else {\n    element.removeAttribute(\"role\");\n  }\n}\nfunction _getAriaSortState(sortDirection) {\n  let sort;\n  if (sortDirection === \"asc\") {\n    sort = \"ascending\";\n  } else if (sortDirection === \"desc\") {\n    sort = \"descending\";\n  } else if (sortDirection === \"mixed\") {\n    sort = \"other\";\n  } else {\n    sort = \"none\";\n  }\n  return sort;\n}\nfunction _getAriaPosInSet(element) {\n  return parseInt(element.getAttribute(\"aria-posinset\"), 10);\n}\nfunction _getAriaLabel(element) {\n  return element.getAttribute(\"aria-label\");\n}\nfunction _setAriaLabel(element, label) {\n  _toggleAriaAttribute(element, \"label\", label);\n}\nfunction _setAriaLabelledBy(element, labelledBy) {\n  _toggleAriaAttribute(element, \"labelledby\", labelledBy);\n}\nfunction _setAriaDescribedBy(element, describedby) {\n  _toggleAriaAttribute(element, \"describedby\", describedby);\n}\nfunction _setAriaLive(element, live) {\n  _toggleAriaAttribute(element, \"live\", live);\n}\nfunction _setAriaAtomic(element, atomic) {\n  _toggleAriaAttribute(element, \"atomic\", atomic);\n}\nfunction _setAriaRelevant(element, relevant) {\n  _toggleAriaAttribute(element, \"relevant\", relevant);\n}\nfunction _setAriaLevel(element, level) {\n  _toggleAriaAttribute(element, \"level\", level);\n}\nfunction _setAriaDisabled(element, disabled) {\n  _toggleAriaAttribute(element, \"disabled\", disabled);\n}\nfunction _setAriaHidden(element, hidden) {\n  _toggleAriaAttribute(element, \"hidden\", hidden);\n}\nfunction _setAriaActiveDescendant(element, descendantId) {\n  _toggleAriaAttribute(element, \"activedescendant\", descendantId);\n}\nfunction _setAriaExpanded(element, expanded) {\n  _setAriaAttribute(element, \"expanded\", expanded);\n}\nfunction _removeAriaExpanded(element) {\n  _removeAriaAttribute(element, \"expanded\");\n}\nfunction _setAriaSetSize(element, setsize) {\n  _setAriaAttribute(element, \"setsize\", setsize);\n}\nfunction _setAriaPosInSet(element, position) {\n  _setAriaAttribute(element, \"posinset\", position);\n}\nfunction _setAriaMultiSelectable(element, multiSelectable) {\n  _setAriaAttribute(element, \"multiselectable\", multiSelectable);\n}\nfunction _setAriaRowCount(element, rowCount) {\n  _setAriaAttribute(element, \"rowcount\", rowCount);\n}\nfunction _setAriaRowIndex(element, rowIndex) {\n  _setAriaAttribute(element, \"rowindex\", rowIndex);\n}\nfunction _setAriaColCount(element, colCount) {\n  _setAriaAttribute(element, \"colcount\", colCount);\n}\nfunction _setAriaColIndex(element, colIndex) {\n  _setAriaAttribute(element, \"colindex\", colIndex);\n}\nfunction _setAriaColSpan(element, colSpan) {\n  _setAriaAttribute(element, \"colspan\", colSpan);\n}\nfunction _setAriaSort(element, sort) {\n  _setAriaAttribute(element, \"sort\", sort);\n}\nfunction _removeAriaSort(element) {\n  _removeAriaAttribute(element, \"sort\");\n}\nfunction _setAriaSelected(element, selected) {\n  _toggleAriaAttribute(element, \"selected\", selected);\n}\nfunction _setAriaChecked(element, checked) {\n  _setAriaAttribute(element, \"checked\", checked === void 0 ? \"mixed\" : checked);\n}\nfunction _setAriaControls(controllerElement, controlledElement) {\n  _toggleAriaAttribute(controllerElement, \"controls\", controlledElement.id);\n  _setAriaLabelledBy(controlledElement, controllerElement.id);\n}\nfunction _getAriaCheckboxStateName(translate, state) {\n  return state === void 0 ? translate(\"ariaIndeterminate\", \"indeterminate\") : state === true ? translate(\"ariaChecked\", \"checked\") : translate(\"ariaUnchecked\", \"unchecked\");\n}\n\n// community-modules/core/src/utils/browser.ts\nvar isSafari;\nvar safariVersion;\nvar isChrome;\nvar isFirefox;\nvar isMacOs;\nvar isIOS;\nvar invisibleScrollbar;\nvar browserScrollbarWidth;\nfunction _isBrowserSafari() {\n  if (isSafari === void 0) {\n    isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  }\n  return isSafari;\n}\nfunction _getSafariVersion() {\n  if (safariVersion === void 0) {\n    if (_isBrowserSafari()) {\n      const versionMatch = navigator.userAgent.match(/version\\/(\\d+)/i);\n      if (versionMatch) {\n        safariVersion = versionMatch[1] != null ? parseFloat(versionMatch[1]) : 0;\n      }\n    } else {\n      safariVersion = 0;\n    }\n  }\n  return safariVersion;\n}\nfunction _isBrowserChrome() {\n  if (isChrome === void 0) {\n    const win = window;\n    isChrome = !!win.chrome && (!!win.chrome.webstore || !!win.chrome.runtime) || /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n  }\n  return isChrome;\n}\nfunction _isBrowserFirefox() {\n  if (isFirefox === void 0) {\n    isFirefox = /(firefox)/i.test(navigator.userAgent);\n  }\n  return isFirefox;\n}\nfunction _isMacOsUserAgent() {\n  if (isMacOs === void 0) {\n    isMacOs = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n  }\n  return isMacOs;\n}\nfunction _isIOSUserAgent() {\n  if (isIOS === void 0) {\n    isIOS = /iPad|iPhone|iPod/.test(navigator.platform) || navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\n  }\n  return isIOS;\n}\nfunction _browserSupportsPreventScroll() {\n  return !_isBrowserSafari() || _getSafariVersion() >= 15;\n}\nfunction _getTabIndex(el) {\n  if (!el) {\n    return null;\n  }\n  const numberTabIndex = el.tabIndex;\n  const tabIndex = el.getAttribute(\"tabIndex\");\n  if (numberTabIndex === -1 && (tabIndex === null || tabIndex === \"\" && !_isBrowserFirefox())) {\n    return null;\n  }\n  return numberTabIndex.toString();\n}\nfunction _getMaxDivHeight() {\n  if (!document.body) {\n    return -1;\n  }\n  let res = 1e6;\n  const testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6e6 : 1e9;\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  while (true) {\n    const test = res * 2;\n    div.style.height = test + \"px\";\n    if (test > testUpTo || div.clientHeight !== test) {\n      break;\n    } else {\n      res = test;\n    }\n  }\n  document.body.removeChild(div);\n  return res;\n}\nfunction _getBodyWidth() {\n  return document.body?.clientWidth ?? (window.innerHeight || document.documentElement?.clientWidth || -1);\n}\nfunction _getBodyHeight() {\n  return document.body?.clientHeight ?? (window.innerHeight || document.documentElement?.clientHeight || -1);\n}\nfunction _getScrollbarWidth() {\n  if (browserScrollbarWidth == null) {\n    initScrollbarWidthAndVisibility();\n  }\n  return browserScrollbarWidth;\n}\nfunction initScrollbarWidthAndVisibility() {\n  const body = document.body;\n  const div = document.createElement(\"div\");\n  div.style.width = div.style.height = \"100px\";\n  div.style.opacity = \"0\";\n  div.style.overflow = \"scroll\";\n  div.style.msOverflowStyle = \"scrollbar\";\n  div.style.position = \"absolute\";\n  body.appendChild(div);\n  let width = div.offsetWidth - div.clientWidth;\n  if (width === 0 && div.clientWidth === 0) {\n    width = null;\n  }\n  if (div.parentNode) {\n    div.parentNode.removeChild(div);\n  }\n  if (width != null) {\n    browserScrollbarWidth = width;\n    invisibleScrollbar = width === 0;\n  }\n}\nfunction _isInvisibleScrollbar() {\n  if (invisibleScrollbar == null) {\n    initScrollbarWidthAndVisibility();\n  }\n  return invisibleScrollbar;\n}\n\n// community-modules/core/src/utils/dom.ts\nvar rtlNegativeScroll;\nfunction _radioCssClass(element, elementClass, otherElementClass) {\n  const parent = element.parentElement;\n  let sibling = parent && parent.firstChild;\n  while (sibling) {\n    if (elementClass) {\n      sibling.classList.toggle(elementClass, sibling === element);\n    }\n    if (otherElementClass) {\n      sibling.classList.toggle(otherElementClass, sibling !== element);\n    }\n    sibling = sibling.nextSibling;\n  }\n}\nvar FOCUSABLE_SELECTOR = \"[tabindex], input, select, button, textarea, [href]\";\nvar FOCUSABLE_EXCLUDE = \"[disabled], .ag-disabled:not(.ag-button), .ag-disabled *\";\nfunction _isFocusableFormField(element) {\n  const matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n  const inputSelector = \"input, select, button, textarea\";\n  const isFocusable = matches.call(element, inputSelector);\n  const isNotFocusable = matches.call(element, FOCUSABLE_EXCLUDE);\n  const isElementVisible = _isVisible(element);\n  const focusable = isFocusable && !isNotFocusable && isElementVisible;\n  return focusable;\n}\nfunction _setDisplayed(element, displayed, options = {}) {\n  const {\n    skipAriaHidden\n  } = options;\n  element.classList.toggle(\"ag-hidden\", !displayed);\n  if (!skipAriaHidden) {\n    _setAriaHidden(element, !displayed);\n  }\n}\nfunction _setVisible(element, visible, options = {}) {\n  const {\n    skipAriaHidden\n  } = options;\n  element.classList.toggle(\"ag-invisible\", !visible);\n  if (!skipAriaHidden) {\n    _setAriaHidden(element, !visible);\n  }\n}\nfunction _setDisabled(element, disabled) {\n  const attributeName = \"disabled\";\n  const addOrRemoveDisabledAttribute = disabled ? e => e.setAttribute(attributeName, \"\") : e => e.removeAttribute(attributeName);\n  addOrRemoveDisabledAttribute(element);\n  _nodeListForEach(element.querySelectorAll(\"input\"), input => addOrRemoveDisabledAttribute(input));\n}\nfunction _isElementChildOfClass(element, cls, maxNest) {\n  let counter = 0;\n  while (element) {\n    if (element.classList.contains(cls)) {\n      return true;\n    }\n    element = element.parentElement;\n    if (typeof maxNest == \"number\") {\n      if (++counter > maxNest) {\n        break;\n      }\n    } else if (element === maxNest) {\n      break;\n    }\n  }\n  return false;\n}\nfunction _getElementSize(el) {\n  const {\n    height,\n    width,\n    borderTopWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderLeftWidth,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    boxSizing\n  } = window.getComputedStyle(el);\n  return {\n    height: parseFloat(height || \"0\"),\n    width: parseFloat(width || \"0\"),\n    borderTopWidth: parseFloat(borderTopWidth || \"0\"),\n    borderRightWidth: parseFloat(borderRightWidth || \"0\"),\n    borderBottomWidth: parseFloat(borderBottomWidth || \"0\"),\n    borderLeftWidth: parseFloat(borderLeftWidth || \"0\"),\n    paddingTop: parseFloat(paddingTop || \"0\"),\n    paddingRight: parseFloat(paddingRight || \"0\"),\n    paddingBottom: parseFloat(paddingBottom || \"0\"),\n    paddingLeft: parseFloat(paddingLeft || \"0\"),\n    marginTop: parseFloat(marginTop || \"0\"),\n    marginRight: parseFloat(marginRight || \"0\"),\n    marginBottom: parseFloat(marginBottom || \"0\"),\n    marginLeft: parseFloat(marginLeft || \"0\"),\n    boxSizing\n  };\n}\nfunction _getInnerHeight(el) {\n  const size = _getElementSize(el);\n  if (size.boxSizing === \"border-box\") {\n    return size.height - size.paddingTop - size.paddingBottom;\n  }\n  return size.height;\n}\nfunction _getInnerWidth(el) {\n  const size = _getElementSize(el);\n  if (size.boxSizing === \"border-box\") {\n    return size.width - size.paddingLeft - size.paddingRight;\n  }\n  return size.width;\n}\nfunction _getAbsoluteHeight(el) {\n  const {\n    height,\n    marginBottom,\n    marginTop\n  } = _getElementSize(el);\n  return Math.floor(height + marginBottom + marginTop);\n}\nfunction _getAbsoluteWidth(el) {\n  const {\n    width,\n    marginLeft,\n    marginRight\n  } = _getElementSize(el);\n  return Math.floor(width + marginLeft + marginRight);\n}\nfunction _getElementRectWithOffset(el) {\n  const offsetElementRect = el.getBoundingClientRect();\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth\n  } = _getElementSize(el);\n  return {\n    top: offsetElementRect.top + (borderTopWidth || 0),\n    left: offsetElementRect.left + (borderLeftWidth || 0),\n    right: offsetElementRect.right + (borderRightWidth || 0),\n    bottom: offsetElementRect.bottom + (borderBottomWidth || 0)\n  };\n}\nfunction _isRtlNegativeScroll() {\n  if (typeof rtlNegativeScroll === \"boolean\") {\n    return rtlNegativeScroll;\n  }\n  const template = document.createElement(\"div\");\n  template.style.direction = \"rtl\";\n  template.style.width = \"1px\";\n  template.style.height = \"1px\";\n  template.style.position = \"fixed\";\n  template.style.top = \"0px\";\n  template.style.overflow = \"hidden\";\n  template.dir = \"rtl\";\n  template.innerHTML = /* html */\n  `<div style=\"width: 2px\">\n            <span style=\"display: inline-block; width: 1px\"></span>\n            <span style=\"display: inline-block; width: 1px\"></span>\n        </div>`;\n  document.body.appendChild(template);\n  template.scrollLeft = 1;\n  rtlNegativeScroll = Math.floor(template.scrollLeft) === 0;\n  document.body.removeChild(template);\n  return rtlNegativeScroll;\n}\nfunction _getScrollLeft(element, rtl) {\n  let scrollLeft = element.scrollLeft;\n  if (rtl) {\n    scrollLeft = Math.abs(scrollLeft);\n    if (_isBrowserChrome() && !_isRtlNegativeScroll()) {\n      scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\n    }\n  }\n  return scrollLeft;\n}\nfunction _setScrollLeft(element, value, rtl) {\n  if (rtl) {\n    if (_isRtlNegativeScroll()) {\n      value *= -1;\n    } else if (_isBrowserSafari() || _isBrowserChrome()) {\n      value = element.scrollWidth - element.clientWidth - value;\n    }\n  }\n  element.scrollLeft = value;\n}\nfunction _clearElement(el) {\n  while (el && el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n}\nfunction _removeFromParent(node) {\n  if (node && node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n}\nfunction _isInDOM(element) {\n  return !!element.offsetParent;\n}\nfunction _isVisible(element) {\n  const el = element;\n  if (el.checkVisibility) {\n    return el.checkVisibility({\n      checkVisibilityCSS: true\n    });\n  }\n  const isHidden = !_isInDOM(element) || window.getComputedStyle(element).visibility !== \"visible\";\n  return !isHidden;\n}\nfunction _loadTemplate(template) {\n  const tempDiv = document.createElement(\"div\");\n  tempDiv.innerHTML = (template || \"\").trim();\n  return tempDiv.firstChild;\n}\nfunction _ensureDomOrder(eContainer, eChild, eChildBefore) {\n  if (eChildBefore && eChildBefore.nextSibling === eChild) {\n    return;\n  }\n  if (eChildBefore) {\n    if (eChildBefore.nextSibling) {\n      eContainer.insertBefore(eChild, eChildBefore.nextSibling);\n    } else {\n      eContainer.appendChild(eChild);\n    }\n  } else {\n    if (eContainer.firstChild && eContainer.firstChild !== eChild) {\n      eContainer.insertAdjacentElement(\"afterbegin\", eChild);\n    }\n  }\n}\nfunction _setDomChildOrder(eContainer, orderedChildren) {\n  for (let i = 0; i < orderedChildren.length; i++) {\n    const correctCellAtIndex = orderedChildren[i];\n    const actualCellAtIndex = eContainer.children[i];\n    if (actualCellAtIndex !== correctCellAtIndex) {\n      eContainer.insertBefore(correctCellAtIndex, actualCellAtIndex);\n    }\n  }\n}\nfunction _insertWithDomOrder(eContainer, eToInsert, eChildBefore) {\n  if (eChildBefore) {\n    eChildBefore.insertAdjacentElement(\"afterend\", eToInsert);\n  } else {\n    if (eContainer.firstChild) {\n      eContainer.insertAdjacentElement(\"afterbegin\", eToInsert);\n    } else {\n      eContainer.appendChild(eToInsert);\n    }\n  }\n}\nfunction _addStylesToElement(eElement, styles) {\n  if (!styles) {\n    return;\n  }\n  for (const [key, value] of Object.entries(styles)) {\n    if (!key || !key.length || value == null) {\n      continue;\n    }\n    const parsedKey = _camelCaseToHyphenated(key);\n    const valueAsString = value.toString();\n    const parsedValue = valueAsString.replace(/\\s*!important/g, \"\");\n    const priority = parsedValue.length != valueAsString.length ? \"important\" : void 0;\n    eElement.style.setProperty(parsedKey, parsedValue, priority);\n  }\n}\nfunction _isHorizontalScrollShowing(element) {\n  return element.clientWidth < element.scrollWidth;\n}\nfunction _isVerticalScrollShowing(element) {\n  return element.clientHeight < element.scrollHeight;\n}\nfunction _setElementWidth(element, width) {\n  if (width === \"flex\") {\n    element.style.removeProperty(\"width\");\n    element.style.removeProperty(\"minWidth\");\n    element.style.removeProperty(\"maxWidth\");\n    element.style.flex = \"1 1 auto\";\n  } else {\n    _setFixedWidth(element, width);\n  }\n}\nfunction _setFixedWidth(element, width) {\n  width = _formatSize(width);\n  element.style.width = width.toString();\n  element.style.maxWidth = width.toString();\n  element.style.minWidth = width.toString();\n}\nfunction _setFixedHeight(element, height) {\n  height = _formatSize(height);\n  element.style.height = height.toString();\n  element.style.maxHeight = height.toString();\n  element.style.minHeight = height.toString();\n}\nfunction _formatSize(size) {\n  if (typeof size === \"number\") {\n    return `${size}px`;\n  }\n  return size;\n}\nfunction _isNodeOrElement(o) {\n  return o instanceof Node || o instanceof HTMLElement;\n}\nfunction _copyNodeList(nodeList) {\n  if (nodeList == null) {\n    return [];\n  }\n  const result = [];\n  _nodeListForEach(nodeList, node => result.push(node));\n  return result;\n}\nfunction _iterateNamedNodeMap(map, callback) {\n  if (!map) {\n    return;\n  }\n  for (let i = 0; i < map.length; i++) {\n    const attr = map[i];\n    callback(attr.name, attr.value);\n  }\n}\nfunction _addOrRemoveAttribute(element, name, value) {\n  if (value == null) {\n    element.removeAttribute(name);\n  } else {\n    element.setAttribute(name, value.toString());\n  }\n}\nfunction _nodeListForEach(nodeList, action) {\n  if (nodeList == null) {\n    return;\n  }\n  for (let i = 0; i < nodeList.length; i++) {\n    action(nodeList[i]);\n  }\n}\nfunction _bindCellRendererToHtmlElement(cellRendererPromise, eTarget) {\n  cellRendererPromise.then(cellRenderer => {\n    const gui = cellRenderer.getGui();\n    if (gui != null) {\n      if (typeof gui === \"object\") {\n        eTarget.appendChild(gui);\n      } else {\n        eTarget.innerHTML = gui;\n      }\n    }\n  });\n}\n\n// community-modules/core/src/utils/numberSequence.ts\nvar NumberSequence = class {\n  constructor(initValue = 0, step = 1) {\n    this.nextValue = initValue;\n    this.step = step;\n  }\n  next() {\n    const valToReturn = this.nextValue;\n    this.nextValue += this.step;\n    return valToReturn;\n  }\n  peek() {\n    return this.nextValue;\n  }\n  skip(count) {\n    this.nextValue += count;\n  }\n};\n\n// community-modules/core/src/widgets/tooltipStateManager.ts\nvar SHOW_QUICK_TOOLTIP_DIFF = 1e3;\nvar FADE_OUT_TOOLTIP_TIMEOUT = 1e3;\nvar INTERACTIVE_HIDE_DELAY = 100;\nvar _TooltipStateManager = /*#__PURE__*/(() => {\n  let _TooltipStateManager = class _TooltipStateManager extends BeanStub {\n    constructor(parentComp, tooltipShowDelayOverride, tooltipHideDelayOverride, shouldDisplayTooltip) {\n      super();\n      this.parentComp = parentComp;\n      this.tooltipShowDelayOverride = tooltipShowDelayOverride;\n      this.tooltipHideDelayOverride = tooltipHideDelayOverride;\n      this.shouldDisplayTooltip = shouldDisplayTooltip;\n      this.interactionEnabled = false;\n      this.isInteractingWithTooltip = false;\n      this.state = 0 /* NOTHING */;\n      // when showing the tooltip, we need to make sure it's the most recent instance we request, as due to\n      // async we could request two tooltips before the first instance returns, in which case we should\n      // disregard the second instance.\n      this.tooltipInstanceCount = 0;\n      this.tooltipMouseTrack = false;\n    }\n    wireBeans(beans) {\n      this.popupService = beans.popupService;\n      this.userComponentFactory = beans.userComponentFactory;\n    }\n    postConstruct() {\n      if (this.gos.get(\"tooltipInteraction\")) {\n        this.interactionEnabled = true;\n      }\n      this.tooltipTrigger = this.getTooltipTrigger();\n      this.tooltipMouseTrack = this.gos.get(\"tooltipMouseTrack\");\n      const el = this.parentComp.getGui();\n      if (this.tooltipTrigger === 0 /* HOVER */) {\n        this.addManagedListeners(el, {\n          mouseenter: this.onMouseEnter.bind(this),\n          mouseleave: this.onMouseLeave.bind(this)\n        });\n      }\n      if (this.tooltipTrigger === 1 /* FOCUS */) {\n        this.addManagedListeners(el, {\n          focusin: this.onFocusIn.bind(this),\n          focusout: this.onFocusOut.bind(this)\n        });\n      }\n      this.addManagedListeners(el, {\n        mousemove: this.onMouseMove.bind(this)\n      });\n      if (!this.interactionEnabled) {\n        this.addManagedListeners(el, {\n          mousedown: this.onMouseDown.bind(this),\n          keydown: this.onKeyDown.bind(this)\n        });\n      }\n    }\n    getGridOptionsTooltipDelay(delayOption) {\n      const delay = this.gos.get(delayOption);\n      if (delay < 0) {\n        _warnOnce(`${delayOption} should not be lower than 0`);\n      }\n      return Math.max(200, delay);\n    }\n    getTooltipDelay(type) {\n      if (type === \"show\") {\n        return this.tooltipShowDelayOverride ?? this.getGridOptionsTooltipDelay(\"tooltipShowDelay\");\n      }\n      return this.tooltipHideDelayOverride ?? this.getGridOptionsTooltipDelay(\"tooltipHideDelay\");\n    }\n    destroy() {\n      this.setToDoNothing();\n      super.destroy();\n    }\n    getTooltipTrigger() {\n      const trigger = this.gos.get(\"tooltipTrigger\");\n      if (!trigger || trigger === \"hover\") {\n        return 0 /* HOVER */;\n      }\n      return 1 /* FOCUS */;\n    }\n    onMouseEnter(e) {\n      if (this.interactionEnabled && this.interactiveTooltipTimeoutId) {\n        this.unlockService();\n        this.startHideTimeout();\n      }\n      if (_isIOSUserAgent()) {\n        return;\n      }\n      if (_TooltipStateManager.isLocked) {\n        this.showTooltipTimeoutId = window.setTimeout(() => {\n          this.prepareToShowTooltip(e);\n        }, INTERACTIVE_HIDE_DELAY);\n      } else {\n        this.prepareToShowTooltip(e);\n      }\n    }\n    onMouseMove(e) {\n      if (this.lastMouseEvent) {\n        this.lastMouseEvent = e;\n      }\n      if (this.tooltipMouseTrack && this.state === 2 /* SHOWING */ && this.tooltipComp) {\n        this.positionTooltip();\n      }\n    }\n    onMouseDown() {\n      this.setToDoNothing();\n    }\n    onMouseLeave() {\n      if (this.interactionEnabled) {\n        this.lockService();\n      } else {\n        this.setToDoNothing();\n      }\n    }\n    onFocusIn() {\n      this.prepareToShowTooltip();\n    }\n    onFocusOut(e) {\n      const relatedTarget = e.relatedTarget;\n      const parentCompGui = this.parentComp.getGui();\n      const tooltipGui = this.tooltipComp?.getGui();\n      if (this.isInteractingWithTooltip || parentCompGui.contains(relatedTarget) || this.interactionEnabled && tooltipGui?.contains(relatedTarget)) {\n        return;\n      }\n      this.setToDoNothing();\n    }\n    onKeyDown() {\n      this.setToDoNothing();\n    }\n    prepareToShowTooltip(mouseEvent) {\n      if (this.state != 0 /* NOTHING */ || _TooltipStateManager.isLocked) {\n        return;\n      }\n      let delay = 0;\n      if (mouseEvent) {\n        delay = this.isLastTooltipHiddenRecently() ? 200 : this.getTooltipDelay(\"show\");\n      }\n      this.lastMouseEvent = mouseEvent || null;\n      this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), delay);\n      this.state = 1 /* WAITING_TO_SHOW */;\n    }\n    isLastTooltipHiddenRecently() {\n      const now = ( /* @__PURE__ */new Date()).getTime();\n      const then = _TooltipStateManager.lastTooltipHideTime;\n      return now - then < SHOW_QUICK_TOOLTIP_DIFF;\n    }\n    setToDoNothing() {\n      if (this.state === 2 /* SHOWING */) {\n        this.hideTooltip();\n      }\n      if (this.onBodyScrollEventCallback) {\n        this.onBodyScrollEventCallback();\n        this.onBodyScrollEventCallback = void 0;\n      }\n      if (this.onColumnMovedEventCallback) {\n        this.onColumnMovedEventCallback();\n        this.onColumnMovedEventCallback = void 0;\n      }\n      this.clearTimeouts();\n      this.state = 0 /* NOTHING */;\n      this.lastMouseEvent = null;\n    }\n    showTooltip() {\n      const params = {\n        ...this.parentComp.getTooltipParams()\n      };\n      if (!_exists(params.value) || this.shouldDisplayTooltip && !this.shouldDisplayTooltip()) {\n        this.setToDoNothing();\n        return;\n      }\n      this.state = 2 /* SHOWING */;\n      this.tooltipInstanceCount++;\n      const callback = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount);\n      const userDetails = this.userComponentFactory.getTooltipCompDetails(params);\n      userDetails.newAgStackInstance().then(callback);\n    }\n    hideTooltip(forceHide) {\n      if (!forceHide && this.isInteractingWithTooltip) {\n        return;\n      }\n      if (this.tooltipComp) {\n        this.destroyTooltipComp();\n        _TooltipStateManager.lastTooltipHideTime = ( /* @__PURE__ */new Date()).getTime();\n      }\n      const event = {\n        type: \"tooltipHide\",\n        parentGui: this.parentComp.getGui()\n      };\n      this.eventService.dispatchEvent(event);\n      if (forceHide) {\n        this.isInteractingWithTooltip = false;\n      }\n      this.state = 0 /* NOTHING */;\n    }\n    newTooltipComponentCallback(tooltipInstanceCopy, tooltipComp) {\n      const compNoLongerNeeded = this.state !== 2 /* SHOWING */ || this.tooltipInstanceCount !== tooltipInstanceCopy;\n      if (compNoLongerNeeded) {\n        this.destroyBean(tooltipComp);\n        return;\n      }\n      const eGui = tooltipComp.getGui();\n      this.tooltipComp = tooltipComp;\n      if (!eGui.classList.contains(\"ag-tooltip\")) {\n        eGui.classList.add(\"ag-tooltip-custom\");\n      }\n      if (this.tooltipTrigger === 0 /* HOVER */) {\n        eGui.classList.add(\"ag-tooltip-animate\");\n      }\n      if (this.interactionEnabled) {\n        eGui.classList.add(\"ag-tooltip-interactive\");\n      }\n      const translate = this.localeService.getLocaleTextFunc();\n      const addPopupRes = this.popupService.addPopup({\n        eChild: eGui,\n        ariaLabel: translate(\"ariaLabelTooltip\", \"Tooltip\")\n      });\n      if (addPopupRes) {\n        this.tooltipPopupDestroyFunc = addPopupRes.hideFunc;\n      }\n      this.positionTooltip();\n      if (this.tooltipTrigger === 1 /* FOCUS */) {\n        const listener = this.setToDoNothing.bind(this);\n        [this.onBodyScrollEventCallback, this.onColumnMovedEventCallback] = this.addManagedEventListeners({\n          bodyScroll: listener,\n          columnMoved: listener\n        });\n      }\n      if (this.interactionEnabled) {\n        if (this.tooltipTrigger === 0 /* HOVER */) {\n          [this.tooltipMouseEnterListener, this.tooltipMouseLeaveListener] = this.addManagedElementListeners(eGui, {\n            mouseenter: this.onTooltipMouseEnter.bind(this),\n            mouseleave: this.onTooltipMouseLeave.bind(this)\n          });\n        } else {\n          [this.tooltipFocusInListener, this.tooltipFocusOutListener] = this.addManagedElementListeners(eGui, {\n            focusin: this.onTooltipFocusIn.bind(this),\n            focusout: this.onTooltipFocusOut.bind(this)\n          });\n        }\n      }\n      const event = {\n        type: \"tooltipShow\",\n        tooltipGui: eGui,\n        parentGui: this.parentComp.getGui()\n      };\n      this.eventService.dispatchEvent(event);\n      this.startHideTimeout();\n    }\n    onTooltipMouseEnter() {\n      this.isInteractingWithTooltip = true;\n      this.unlockService();\n    }\n    onTooltipMouseLeave() {\n      this.isInteractingWithTooltip = false;\n      this.lockService();\n    }\n    onTooltipFocusIn() {\n      this.isInteractingWithTooltip = true;\n    }\n    onTooltipFocusOut(e) {\n      const parentGui = this.parentComp.getGui();\n      const tooltipGui = this.tooltipComp?.getGui();\n      const relatedTarget = e.relatedTarget;\n      if (tooltipGui?.contains(relatedTarget)) {\n        return;\n      }\n      this.isInteractingWithTooltip = false;\n      if (parentGui.contains(relatedTarget)) {\n        this.startHideTimeout();\n      } else {\n        this.hideTooltip();\n      }\n    }\n    positionTooltip() {\n      const params = {\n        type: \"tooltip\",\n        ePopup: this.tooltipComp.getGui(),\n        nudgeY: 18,\n        skipObserver: this.tooltipMouseTrack\n      };\n      if (this.lastMouseEvent) {\n        this.popupService.positionPopupUnderMouseEvent({\n          ...params,\n          mouseEvent: this.lastMouseEvent\n        });\n      } else {\n        this.popupService.positionPopupByComponent({\n          ...params,\n          eventSource: this.parentComp.getGui(),\n          position: \"under\",\n          keepWithinBounds: true,\n          nudgeY: 5\n        });\n      }\n    }\n    destroyTooltipComp() {\n      this.tooltipComp.getGui().classList.add(\"ag-tooltip-hiding\");\n      const tooltipPopupDestroyFunc = this.tooltipPopupDestroyFunc;\n      const tooltipComp = this.tooltipComp;\n      const delay = this.tooltipTrigger === 0 /* HOVER */ ? FADE_OUT_TOOLTIP_TIMEOUT : 0;\n      window.setTimeout(() => {\n        tooltipPopupDestroyFunc();\n        this.destroyBean(tooltipComp);\n      }, delay);\n      this.clearTooltipListeners();\n      this.tooltipPopupDestroyFunc = void 0;\n      this.tooltipComp = void 0;\n    }\n    clearTooltipListeners() {\n      [this.tooltipMouseEnterListener, this.tooltipMouseLeaveListener, this.tooltipFocusInListener, this.tooltipFocusOutListener].forEach(listener => {\n        if (listener) {\n          listener();\n        }\n      });\n      this.tooltipMouseEnterListener = this.tooltipMouseLeaveListener = this.tooltipFocusInListener = this.tooltipFocusOutListener = null;\n    }\n    lockService() {\n      _TooltipStateManager.isLocked = true;\n      this.interactiveTooltipTimeoutId = window.setTimeout(() => {\n        this.unlockService();\n        this.setToDoNothing();\n      }, INTERACTIVE_HIDE_DELAY);\n    }\n    unlockService() {\n      _TooltipStateManager.isLocked = false;\n      this.clearInteractiveTimeout();\n    }\n    startHideTimeout() {\n      this.clearHideTimeout();\n      this.hideTooltipTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.getTooltipDelay(\"hide\"));\n    }\n    clearShowTimeout() {\n      if (!this.showTooltipTimeoutId) {\n        return;\n      }\n      window.clearTimeout(this.showTooltipTimeoutId);\n      this.showTooltipTimeoutId = void 0;\n    }\n    clearHideTimeout() {\n      if (!this.hideTooltipTimeoutId) {\n        return;\n      }\n      window.clearTimeout(this.hideTooltipTimeoutId);\n      this.hideTooltipTimeoutId = void 0;\n    }\n    clearInteractiveTimeout() {\n      if (!this.interactiveTooltipTimeoutId) {\n        return;\n      }\n      window.clearTimeout(this.interactiveTooltipTimeoutId);\n      this.interactiveTooltipTimeoutId = void 0;\n    }\n    clearTimeouts() {\n      this.clearShowTimeout();\n      this.clearHideTimeout();\n      this.clearInteractiveTimeout();\n    }\n  };\n  _TooltipStateManager.isLocked = false;\n  return _TooltipStateManager;\n})();\nvar TooltipStateManager = _TooltipStateManager;\n\n// community-modules/core/src/widgets/tooltipFeature.ts\nvar TooltipFeature = class extends BeanStub {\n  constructor(ctrl, beans) {\n    super();\n    this.ctrl = ctrl;\n    if (beans) {\n      this.beans = beans;\n    }\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.refreshToolTip();\n  }\n  setBrowserTooltip(tooltip) {\n    const name = \"title\";\n    const eGui = this.ctrl.getGui();\n    if (!eGui) {\n      return;\n    }\n    if (tooltip != null && tooltip != \"\") {\n      eGui.setAttribute(name, tooltip);\n    } else {\n      eGui.removeAttribute(name);\n    }\n  }\n  updateTooltipText() {\n    this.tooltip = this.ctrl.getTooltipValue();\n  }\n  createTooltipFeatureIfNeeded() {\n    if (this.tooltipManager != null) {\n      return;\n    }\n    const parent = {\n      getTooltipParams: () => this.getTooltipParams(),\n      getGui: () => this.ctrl.getGui()\n    };\n    this.tooltipManager = this.createBean(new TooltipStateManager(parent, this.ctrl.getTooltipShowDelayOverride?.(), this.ctrl.getTooltipHideDelayOverride?.(), this.ctrl.shouldDisplayTooltip), this.beans.context);\n  }\n  refreshToolTip() {\n    this.browserTooltips = this.beans.gos.get(\"enableBrowserTooltips\");\n    this.updateTooltipText();\n    if (this.browserTooltips) {\n      this.setBrowserTooltip(this.tooltip);\n      if (this.tooltipManager) {\n        this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\n      }\n    } else {\n      this.setBrowserTooltip(null);\n      this.createTooltipFeatureIfNeeded();\n    }\n  }\n  getTooltipParams() {\n    const ctrl = this.ctrl;\n    const column = ctrl.getColumn ? ctrl.getColumn() : void 0;\n    const colDef = ctrl.getColDef ? ctrl.getColDef() : void 0;\n    const rowNode = ctrl.getRowNode ? ctrl.getRowNode() : void 0;\n    return {\n      location: ctrl.getLocation(),\n      //'cell',\n      colDef,\n      column,\n      rowIndex: ctrl.getRowIndex ? ctrl.getRowIndex() : void 0,\n      node: rowNode,\n      data: rowNode ? rowNode.data : void 0,\n      value: this.getTooltipText(),\n      valueFormatted: ctrl.getValueFormatted ? ctrl.getValueFormatted() : void 0,\n      hideTooltipCallback: () => this.tooltipManager?.hideTooltip(true)\n    };\n  }\n  getTooltipText() {\n    return this.tooltip;\n  }\n  // overriding to make public, as we don't dispose this bean via context\n  destroy() {\n    if (this.tooltipManager) {\n      this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\n    }\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/widgets/component.ts\nvar compIdSequence = new NumberSequence();\nvar RefPlaceholder = null;\nvar Component = class _Component extends BeanStub {\n  constructor(template, componentSelectors) {\n    super();\n    this.suppressDataRefValidation = false;\n    // if false, then CSS class \"ag-hidden\" is applied, which sets \"display: none\"\n    this.displayed = true;\n    // if false, then CSS class \"ag-invisible\" is applied, which sets \"visibility: hidden\"\n    this.visible = true;\n    // unique id for this row component. this is used for getting a reference to the HTML dom.\n    // we cannot use the RowNode id as this is not unique (due to animation, old rows can be lying\n    // around as we create a new rowComp instance for the same row node).\n    this.compId = compIdSequence.next();\n    this.cssClassManager = new CssClassManager(() => this.eGui);\n    this.componentSelectors = new Map((componentSelectors ?? []).map(comp => [comp.selector, comp]));\n    if (template) {\n      this.setTemplate(template);\n    }\n  }\n  preWireBeans(beans) {\n    super.preWireBeans(beans);\n  }\n  preConstruct() {\n    this.usingBrowserTooltips = this.gos.get(\"enableBrowserTooltips\");\n    this.wireTemplate(this.getGui());\n  }\n  wireTemplate(element, paramsMap) {\n    if (element && this.gos) {\n      this.applyElementsToComponent(element);\n      this.createChildComponentsFromTags(element, paramsMap);\n    }\n  }\n  getCompId() {\n    return this.compId;\n  }\n  getTooltipParams() {\n    return {\n      value: this.tooltipText,\n      location: \"UNKNOWN\"\n    };\n  }\n  setTooltip(params) {\n    const {\n      newTooltipText,\n      showDelayOverride,\n      hideDelayOverride,\n      location,\n      shouldDisplayTooltip\n    } = params || {};\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    if (this.tooltipText !== newTooltipText) {\n      this.tooltipText = newTooltipText;\n    }\n    const getTooltipValue = () => this.tooltipText;\n    if (newTooltipText != null) {\n      this.tooltipFeature = this.createBean(new TooltipFeature({\n        getTooltipValue,\n        getGui: () => this.getGui(),\n        getLocation: () => location ?? \"UNKNOWN\",\n        getColDef: params?.getColDef,\n        getColumn: params?.getColumn,\n        getTooltipShowDelayOverride: showDelayOverride != null ? () => showDelayOverride : void 0,\n        getTooltipHideDelayOverride: hideDelayOverride != null ? () => hideDelayOverride : void 0,\n        shouldDisplayTooltip\n      }));\n    }\n  }\n  getDataRefAttribute(element) {\n    if (element.getAttribute) {\n      return element.getAttribute(\"data-ref\");\n    }\n    return null;\n  }\n  applyElementsToComponent(element, elementRef, paramsMap, newComponent = null) {\n    if (elementRef === void 0) {\n      elementRef = this.getDataRefAttribute(element);\n    }\n    if (elementRef) {\n      const current = this[elementRef];\n      if (current === RefPlaceholder) {\n        this[elementRef] = newComponent ?? element;\n      } else {\n        const usedAsParamRef = paramsMap && paramsMap[elementRef];\n        if (!this.suppressDataRefValidation && !usedAsParamRef) {\n          _warnOnce(`Issue with data-ref: ${elementRef} on ${this.constructor.name} with ${current}`);\n        }\n      }\n    }\n  }\n  // for registered components only, eg creates AgCheckbox instance from ag-checkbox HTML tag\n  createChildComponentsFromTags(parentNode, paramsMap) {\n    const childNodeList = _copyNodeList(parentNode.childNodes);\n    childNodeList.forEach(childNode => {\n      if (!(childNode instanceof HTMLElement)) {\n        return;\n      }\n      const childComp = this.createComponentFromElement(childNode, childComp2 => {\n        const childGui = childComp2.getGui();\n        if (childGui) {\n          this.copyAttributesFromNode(childNode, childComp2.getGui());\n        }\n      }, paramsMap);\n      if (childComp) {\n        if (childComp.addItems && childNode.children.length) {\n          this.createChildComponentsFromTags(childNode, paramsMap);\n          const items = Array.prototype.slice.call(childNode.children);\n          childComp.addItems(items);\n        }\n        this.swapComponentForNode(childComp, parentNode, childNode);\n      } else if (childNode.childNodes) {\n        this.createChildComponentsFromTags(childNode, paramsMap);\n      }\n    });\n  }\n  createComponentFromElement(element, afterPreCreateCallback, paramsMap) {\n    const key = element.nodeName;\n    const elementRef = this.getDataRefAttribute(element);\n    const isAgGridComponent = key.indexOf(\"AG-\") === 0;\n    const componentSelector = isAgGridComponent ? this.componentSelectors.get(key) : null;\n    let newComponent = null;\n    if (componentSelector) {\n      _Component.elementGettingCreated = element;\n      const componentParams = paramsMap && elementRef ? paramsMap[elementRef] : void 0;\n      newComponent = new componentSelector.component(componentParams);\n      newComponent.setParentComponent(this);\n      this.createBean(newComponent, null, afterPreCreateCallback);\n    } else if (isAgGridComponent) {\n      _warnOnce(`Missing selector: ${key}`);\n    }\n    this.applyElementsToComponent(element, elementRef, paramsMap, newComponent);\n    return newComponent;\n  }\n  copyAttributesFromNode(source, dest) {\n    _iterateNamedNodeMap(source.attributes, (name, value) => dest.setAttribute(name, value));\n  }\n  swapComponentForNode(newComponent, parentNode, childNode) {\n    const eComponent = newComponent.getGui();\n    parentNode.replaceChild(eComponent, childNode);\n    parentNode.insertBefore(document.createComment(childNode.nodeName), eComponent);\n    this.addDestroyFunc(this.destroyBean.bind(this, newComponent));\n  }\n  activateTabIndex(elements) {\n    const tabIndex = this.gos.get(\"tabIndex\");\n    if (!elements) {\n      elements = [];\n    }\n    if (!elements.length) {\n      elements.push(this.getGui());\n    }\n    elements.forEach(el => el.setAttribute(\"tabindex\", tabIndex.toString()));\n  }\n  setTemplate(template, componentSelectors, paramsMap) {\n    const eGui = _loadTemplate(template);\n    this.setTemplateFromElement(eGui, componentSelectors, paramsMap);\n  }\n  setTemplateFromElement(element, components, paramsMap, suppressDataRefValidation = false) {\n    this.eGui = element;\n    this.suppressDataRefValidation = suppressDataRefValidation;\n    if (components) {\n      for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n        this.componentSelectors.set(component.selector, component);\n      }\n    }\n    this.wireTemplate(element, paramsMap);\n  }\n  getGui() {\n    return this.eGui;\n  }\n  getFocusableElement() {\n    return this.eGui;\n  }\n  getAriaElement() {\n    return this.getFocusableElement();\n  }\n  setParentComponent(component) {\n    this.parentComponent = component;\n  }\n  getParentComponent() {\n    return this.parentComponent;\n  }\n  // this method is for older code, that wants to provide the gui element,\n  // it is not intended for this to be in ag-Stack\n  setGui(eGui) {\n    this.eGui = eGui;\n  }\n  queryForHtmlElement(cssSelector) {\n    return this.eGui.querySelector(cssSelector);\n  }\n  getContainerAndElement(newChild, container) {\n    let parent = container;\n    if (newChild == null) {\n      return null;\n    }\n    if (!parent) {\n      parent = this.eGui;\n    }\n    if (_isNodeOrElement(newChild)) {\n      return {\n        element: newChild,\n        parent\n      };\n    }\n    return {\n      element: newChild.getGui(),\n      parent\n    };\n  }\n  prependChild(newChild, container) {\n    const {\n      element,\n      parent\n    } = this.getContainerAndElement(newChild, container) || {};\n    if (!element || !parent) {\n      return;\n    }\n    parent.insertAdjacentElement(\"afterbegin\", element);\n  }\n  appendChild(newChild, container) {\n    const {\n      element,\n      parent\n    } = this.getContainerAndElement(newChild, container) || {};\n    if (!element || !parent) {\n      return;\n    }\n    parent.appendChild(element);\n  }\n  isDisplayed() {\n    return this.displayed;\n  }\n  setVisible(visible, options = {}) {\n    if (visible !== this.visible) {\n      this.visible = visible;\n      const {\n        skipAriaHidden\n      } = options;\n      _setVisible(this.eGui, visible, {\n        skipAriaHidden\n      });\n    }\n  }\n  setDisplayed(displayed, options = {}) {\n    if (displayed !== this.displayed) {\n      this.displayed = displayed;\n      const {\n        skipAriaHidden\n      } = options;\n      _setDisplayed(this.eGui, displayed, {\n        skipAriaHidden\n      });\n      const event = {\n        type: \"displayChanged\",\n        visible: this.displayed\n      };\n      this.dispatchLocalEvent(event);\n    }\n  }\n  destroy() {\n    if (this.parentComponent) {\n      this.parentComponent = void 0;\n    }\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    super.destroy();\n  }\n  addGuiEventListener(event, listener, options) {\n    this.eGui.addEventListener(event, listener, options);\n    this.addDestroyFunc(() => this.eGui.removeEventListener(event, listener));\n  }\n  addCssClass(className) {\n    this.cssClassManager.addCssClass(className);\n  }\n  removeCssClass(className) {\n    this.cssClassManager.removeCssClass(className);\n  }\n  containsCssClass(className) {\n    return this.cssClassManager.containsCssClass(className);\n  }\n  addOrRemoveCssClass(className, addOrRemove) {\n    this.cssClassManager.addOrRemoveCssClass(className, addOrRemove);\n  }\n};\n\n// community-modules/core/src/utils/icon.ts\nvar iconNameClassMap = {\n  // header column group shown when expanded (click to contract)\n  columnGroupOpened: \"expanded\",\n  // header column group shown when contracted (click to expand)\n  columnGroupClosed: \"contracted\",\n  // tool panel column group contracted (click to expand)\n  columnSelectClosed: \"tree-closed\",\n  // tool panel column group expanded (click to contract)\n  columnSelectOpen: \"tree-open\",\n  // column tool panel header expand/collapse all button, shown when some children are expanded and\n  //     others are collapsed\n  columnSelectIndeterminate: \"tree-indeterminate\",\n  // shown on ghost icon while dragging column to the side of the grid to pin\n  columnMovePin: \"pin\",\n  // shown on ghost icon while dragging over part of the page that is not a drop zone\n  columnMoveHide: \"eye-slash\",\n  // shown on ghost icon while dragging columns to reorder\n  columnMoveMove: \"arrows\",\n  // animating icon shown when dragging a column to the right of the grid causes horizontal scrolling\n  columnMoveLeft: \"left\",\n  // animating icon shown when dragging a column to the left of the grid causes horizontal scrolling\n  columnMoveRight: \"right\",\n  // shown on ghost icon while dragging over Row Groups drop zone\n  columnMoveGroup: \"group\",\n  // shown on ghost icon while dragging over Values drop zone\n  columnMoveValue: \"aggregation\",\n  // shown on ghost icon while dragging over pivot drop zone\n  columnMovePivot: \"pivot\",\n  // shown on ghost icon while dragging over drop zone that doesn't support it, e.g.\n  //     string column over aggregation drop zone\n  dropNotAllowed: \"not-allowed\",\n  // shown on row group when contracted (click to expand)\n  groupContracted: \"tree-closed\",\n  // shown on row group when expanded (click to contract)\n  groupExpanded: \"tree-open\",\n  // set filter tree list group contracted (click to expand)\n  setFilterGroupClosed: \"tree-closed\",\n  // set filter tree list group expanded (click to contract)\n  setFilterGroupOpen: \"tree-open\",\n  // set filter tree list expand/collapse all button, shown when some children are expanded and\n  //     others are collapsed\n  setFilterGroupIndeterminate: \"tree-indeterminate\",\n  // context menu chart item\n  chart: \"chart\",\n  // chart window title bar\n  close: \"cross\",\n  // X (remove) on column 'pill' after adding it to a drop zone list\n  cancel: \"cancel\",\n  // indicates the currently active pin state in the \"Pin column\" sub-menu of the column menu\n  check: \"tick\",\n  // \"go to first\" button in pagination controls\n  first: \"first\",\n  // \"go to previous\" button in pagination controls\n  previous: \"previous\",\n  // \"go to next\" button in pagination controls\n  next: \"next\",\n  // \"go to last\" button in pagination controls\n  last: \"last\",\n  // shown on top right of chart when chart is linked to range data (click to unlink)\n  linked: \"linked\",\n  // shown on top right of chart when chart is not linked to range data (click to link)\n  unlinked: \"unlinked\",\n  // \"Choose colour\" button on chart settings tab\n  colorPicker: \"color-picker\",\n  // rotating spinner shown by the loading cell renderer\n  groupLoading: \"loading\",\n  // button to launch enterprise column menu\n  menu: \"menu\",\n  menuAlt: \"menu-alt\",\n  // filter tool panel tab\n  filter: \"filter\",\n  // column tool panel tab\n  columns: \"columns\",\n  // button in chart regular size window title bar (click to maximise)\n  maximize: \"maximize\",\n  // button in chart maximised window title bar (click to make regular size)\n  minimize: \"minimize\",\n  // \"Pin column\" item in column header menu\n  menuPin: \"pin\",\n  // \"Value aggregation\" column menu item (shown on numeric columns when grouping is active)\"\n  menuValue: \"aggregation\",\n  // \"Group by {column-name}\" item in column header menu\n  menuAddRowGroup: \"group\",\n  // \"Un-Group by {column-name}\" item in column header menu\n  menuRemoveRowGroup: \"group\",\n  // context menu copy item\n  clipboardCopy: \"copy\",\n  // context menu cut item\n  clipboardCut: \"cut\",\n  // context menu paste item\n  clipboardPaste: \"paste\",\n  // identifies the pivot drop zone\n  pivotPanel: \"pivot\",\n  // \"Row groups\" drop zone in column tool panel\n  rowGroupPanel: \"group\",\n  // columns tool panel Values drop zone\n  valuePanel: \"aggregation\",\n  // drag handle used to pick up draggable columns\n  columnDrag: \"grip\",\n  // drag handle used to pick up draggable rows\n  rowDrag: \"grip\",\n  // context menu export item\n  save: \"save\",\n  // csv export\n  csvExport: \"csv\",\n  // excel export,\n  excelExport: \"excel\",\n  // icon on dropdown editors\n  smallDown: \"small-down\",\n  // version of small-right used in RTL mode\n  smallLeft: \"small-left\",\n  // separater between column 'pills' when you add multiple columns to the header drop zone\n  smallRight: \"small-right\",\n  smallUp: \"small-up\",\n  // show on column header when column is sorted ascending\n  sortAscending: \"asc\",\n  // show on column header when column is sorted descending\n  sortDescending: \"desc\",\n  // show on column header when column has no sort, only when enabled with gridOptions.unSortIcon=true\n  sortUnSort: \"none\",\n  // Builder button in Advanced Filter\n  advancedFilterBuilder: \"group\",\n  // drag handle used to pick up Advanced Filter Builder rows\n  advancedFilterBuilderDrag: \"grip\",\n  // Advanced Filter Builder row validation error\n  advancedFilterBuilderInvalid: \"not-allowed\",\n  // shown on Advanced Filter Builder rows to move them up\n  advancedFilterBuilderMoveUp: \"up\",\n  // shown on Advanced Filter Builder rows to move them down\n  advancedFilterBuilderMoveDown: \"down\",\n  // shown on Advanced Filter Builder rows to add new rows\n  advancedFilterBuilderAdd: \"plus\",\n  // shown on Advanced Filter Builder rows to remove row\n  advancedFilterBuilderRemove: \"minus\",\n  // Edit Chart menu item shown in Integrated Charts menu\n  chartsMenuEdit: \"chart\",\n  // Advanced Settings menu item shown in Integrated Charts menu\n  chartsMenuAdvancedSettings: \"settings\",\n  // shown in Integrated Charts menu add fields\n  chartsMenuAdd: \"plus\",\n  // checked checkbox\n  checkboxChecked: \"checkbox-checked\",\n  // indeterminate checkbox\n  checkboxIndeterminate: \"checkbox-indeterminate\",\n  // unchecked checkbox\n  checkboxUnchecked: \"checkbox-unchecked\",\n  // radio button on\n  radioButtonOn: \"radio-button-on\",\n  // radio button off\n  radioButtonOff: \"radio-button-off\"\n};\nfunction _createIcon(iconName, gos, column) {\n  const iconContents = _createIconNoSpan(iconName, gos, column);\n  if (iconContents) {\n    const {\n      className\n    } = iconContents;\n    if (typeof className === \"string\" && className.indexOf(\"ag-icon\") > -1 || typeof className === \"object\" && className[\"ag-icon\"]) {\n      return iconContents;\n    }\n  }\n  const eResult = document.createElement(\"span\");\n  eResult.appendChild(iconContents);\n  return eResult;\n}\nfunction _createIconNoSpan(iconName, gos, column, forceCreate) {\n  let userProvidedIcon = null;\n  const icons = column && column.getColDef().icons;\n  if (icons) {\n    userProvidedIcon = icons[iconName];\n  }\n  if (gos && !userProvidedIcon) {\n    const optionsIcons = gos.get(\"icons\");\n    if (optionsIcons) {\n      userProvidedIcon = optionsIcons[iconName];\n    }\n  }\n  if (userProvidedIcon) {\n    let rendererResult;\n    if (typeof userProvidedIcon === \"function\") {\n      rendererResult = userProvidedIcon();\n    } else if (typeof userProvidedIcon === \"string\") {\n      rendererResult = userProvidedIcon;\n    } else {\n      throw new Error(\"icon from grid options needs to be a string or a function\");\n    }\n    if (typeof rendererResult === \"string\") {\n      return _loadTemplate(rendererResult);\n    }\n    if (_isNodeOrElement(rendererResult)) {\n      return rendererResult;\n    }\n    _warnOnce(\"iconRenderer should return back a string or a dom object\");\n  } else {\n    const span = document.createElement(\"span\");\n    let cssClass = iconNameClassMap[iconName];\n    if (!cssClass) {\n      if (!forceCreate) {\n        _warnOnce(`Did not find icon ${iconName}`);\n        cssClass = \"\";\n      } else {\n        cssClass = iconName;\n      }\n    }\n    span.setAttribute(\"class\", `ag-icon ag-icon-${cssClass}`);\n    span.setAttribute(\"unselectable\", \"on\");\n    _setAriaRole(span, \"presentation\");\n    return span;\n  }\n}\n\n// community-modules/core/src/utils/mouse.ts\nfunction _areEventsNear(e1, e2, pixelCount) {\n  if (pixelCount === 0) {\n    return false;\n  }\n  const diffX = Math.abs(e1.clientX - e2.clientX);\n  const diffY = Math.abs(e1.clientY - e2.clientY);\n  return Math.max(diffX, diffY) <= pixelCount;\n}\n\n// community-modules/core/src/widgets/touchListener.ts\nvar TouchListener = class {\n  constructor(eElement, preventMouseClick = false) {\n    this.DOUBLE_TAP_MILLIS = 500;\n    this.destroyFuncs = [];\n    this.touching = false;\n    this.localEventService = new LocalEventService();\n    this.eElement = eElement;\n    this.preventMouseClick = preventMouseClick;\n    const startListener = this.onTouchStart.bind(this);\n    const moveListener = this.onTouchMove.bind(this);\n    const endListener = this.onTouchEnd.bind(this);\n    this.eElement.addEventListener(\"touchstart\", startListener, {\n      passive: true\n    });\n    this.eElement.addEventListener(\"touchmove\", moveListener, {\n      passive: true\n    });\n    this.eElement.addEventListener(\"touchend\", endListener, {\n      passive: false\n    });\n    this.destroyFuncs.push(() => {\n      this.eElement.removeEventListener(\"touchstart\", startListener, {\n        passive: true\n      });\n      this.eElement.removeEventListener(\"touchmove\", moveListener, {\n        passive: true\n      });\n      this.eElement.removeEventListener(\"touchend\", endListener, {\n        passive: false\n      });\n    });\n  }\n  getActiveTouch(touchList) {\n    for (let i = 0; i < touchList.length; i++) {\n      const matches = touchList[i].identifier === this.touchStart.identifier;\n      if (matches) {\n        return touchList[i];\n      }\n    }\n    return null;\n  }\n  addEventListener(eventType, listener) {\n    this.localEventService.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    this.localEventService.removeEventListener(eventType, listener);\n  }\n  onTouchStart(touchEvent) {\n    if (this.touching) {\n      return;\n    }\n    this.touchStart = touchEvent.touches[0];\n    this.touching = true;\n    this.moved = false;\n    const touchStartCopy = this.touchStart;\n    window.setTimeout(() => {\n      const touchesMatch = this.touchStart === touchStartCopy;\n      if (this.touching && touchesMatch && !this.moved) {\n        this.moved = true;\n        const event = {\n          type: \"longTap\",\n          touchStart: this.touchStart,\n          touchEvent\n        };\n        this.localEventService.dispatchEvent(event);\n      }\n    }, 500);\n  }\n  onTouchMove(touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n    const touch = this.getActiveTouch(touchEvent.touches);\n    if (!touch) {\n      return;\n    }\n    const eventIsFarAway = !_areEventsNear(touch, this.touchStart, 4);\n    if (eventIsFarAway) {\n      this.moved = true;\n    }\n  }\n  onTouchEnd(touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n    if (!this.moved) {\n      const event = {\n        type: \"tap\",\n        touchStart: this.touchStart\n      };\n      this.localEventService.dispatchEvent(event);\n      this.checkForDoubleTap();\n    }\n    if (this.preventMouseClick && touchEvent.cancelable) {\n      touchEvent.preventDefault();\n    }\n    this.touching = false;\n  }\n  checkForDoubleTap() {\n    const now = ( /* @__PURE__ */new Date()).getTime();\n    if (this.lastTapTime && this.lastTapTime > 0) {\n      const interval = now - this.lastTapTime;\n      if (interval > this.DOUBLE_TAP_MILLIS) {\n        const event = {\n          type: \"doubleTap\",\n          touchStart: this.touchStart\n        };\n        this.localEventService.dispatchEvent(event);\n        this.lastTapTime = null;\n      } else {\n        this.lastTapTime = now;\n      }\n    } else {\n      this.lastTapTime = now;\n    }\n  }\n  destroy() {\n    this.destroyFuncs.forEach(func => func());\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/sortIndicatorComp.ts\nvar SortIndicatorTemplate = /* html */\n`<span class=\"ag-sort-indicator-container\">\n        <span data-ref=\"eSortOrder\" class=\"ag-sort-indicator-icon ag-sort-order ag-hidden\" aria-hidden=\"true\"></span>\n        <span data-ref=\"eSortAsc\" class=\"ag-sort-indicator-icon ag-sort-ascending-icon ag-hidden\" aria-hidden=\"true\"></span>\n        <span data-ref=\"eSortDesc\" class=\"ag-sort-indicator-icon ag-sort-descending-icon ag-hidden\" aria-hidden=\"true\"></span>\n        <span data-ref=\"eSortMixed\" class=\"ag-sort-indicator-icon ag-sort-mixed-icon ag-hidden\" aria-hidden=\"true\"></span>\n        <span data-ref=\"eSortNone\" class=\"ag-sort-indicator-icon ag-sort-none-icon ag-hidden\" aria-hidden=\"true\"></span>\n    </span>`;\nvar SortIndicatorComp = class extends Component {\n  constructor(skipTemplate) {\n    super();\n    this.eSortOrder = RefPlaceholder;\n    this.eSortAsc = RefPlaceholder;\n    this.eSortDesc = RefPlaceholder;\n    this.eSortMixed = RefPlaceholder;\n    this.eSortNone = RefPlaceholder;\n    if (!skipTemplate) {\n      this.setTemplate(SortIndicatorTemplate);\n    }\n  }\n  wireBeans(beans) {\n    this.sortController = beans.sortController;\n  }\n  attachCustomElements(eSortOrder, eSortAsc, eSortDesc, eSortMixed, eSortNone) {\n    this.eSortOrder = eSortOrder;\n    this.eSortAsc = eSortAsc;\n    this.eSortDesc = eSortDesc;\n    this.eSortMixed = eSortMixed;\n    this.eSortNone = eSortNone;\n  }\n  setupSort(column, suppressOrder = false) {\n    this.column = column;\n    this.suppressOrder = suppressOrder;\n    this.setupMultiSortIndicator();\n    if (!this.column.isSortable() && !this.column.getColDef().showRowGroup) {\n      return;\n    }\n    this.addInIcon(\"sortAscending\", this.eSortAsc, column);\n    this.addInIcon(\"sortDescending\", this.eSortDesc, column);\n    this.addInIcon(\"sortUnSort\", this.eSortNone, column);\n    this.addManagedPropertyListener(\"unSortIcon\", () => this.updateIcons());\n    this.addManagedEventListeners({\n      newColumnsLoaded: this.updateIcons.bind(this),\n      // Watch global events, as row group columns can effect their display column.\n      sortChanged: this.onSortChanged.bind(this),\n      // when grouping changes so can sort indexes and icons\n      columnRowGroupChanged: this.onSortChanged.bind(this)\n    });\n    this.onSortChanged();\n  }\n  addInIcon(iconName, eParent, column) {\n    if (eParent == null) {\n      return;\n    }\n    const eIcon = _createIconNoSpan(iconName, this.gos, column);\n    if (eIcon) {\n      eParent.appendChild(eIcon);\n    }\n  }\n  onSortChanged() {\n    this.updateIcons();\n    if (!this.suppressOrder) {\n      this.updateSortOrder();\n    }\n  }\n  updateIcons() {\n    const sortDirection = this.sortController.getDisplaySortForColumn(this.column);\n    if (this.eSortAsc) {\n      const isAscending = sortDirection === \"asc\";\n      _setDisplayed(this.eSortAsc, isAscending, {\n        skipAriaHidden: true\n      });\n    }\n    if (this.eSortDesc) {\n      const isDescending = sortDirection === \"desc\";\n      _setDisplayed(this.eSortDesc, isDescending, {\n        skipAriaHidden: true\n      });\n    }\n    if (this.eSortNone) {\n      const alwaysHideNoSort = !this.column.getColDef().unSortIcon && !this.gos.get(\"unSortIcon\");\n      const isNone = sortDirection === null || sortDirection === void 0;\n      _setDisplayed(this.eSortNone, !alwaysHideNoSort && isNone, {\n        skipAriaHidden: true\n      });\n    }\n  }\n  setupMultiSortIndicator() {\n    this.addInIcon(\"sortUnSort\", this.eSortMixed, this.column);\n    const isColumnShowingRowGroup = this.column.getColDef().showRowGroup;\n    const areGroupsCoupled = this.gos.isColumnsSortingCoupledToGroup();\n    if (areGroupsCoupled && isColumnShowingRowGroup) {\n      this.addManagedEventListeners({\n        // Watch global events, as row group columns can effect their display column.\n        sortChanged: this.updateMultiSortIndicator.bind(this),\n        // when grouping changes so can sort indexes and icons\n        columnRowGroupChanged: this.updateMultiSortIndicator.bind(this)\n      });\n      this.updateMultiSortIndicator();\n    }\n  }\n  updateMultiSortIndicator() {\n    if (this.eSortMixed) {\n      const isMixedSort = this.sortController.getDisplaySortForColumn(this.column) === \"mixed\";\n      _setDisplayed(this.eSortMixed, isMixedSort, {\n        skipAriaHidden: true\n      });\n    }\n  }\n  // we listen here for global sort events, NOT column sort events, as we want to do this\n  // when sorting has been set on all column (if we listened just for our col (where we\n  // set the asc / desc icons) then it's possible other cols are yet to get their sorting state.\n  updateSortOrder() {\n    if (!this.eSortOrder) {\n      return;\n    }\n    const allColumnsWithSorting = this.sortController.getColumnsWithSortingOrdered();\n    const indexThisCol = this.sortController.getDisplaySortIndexForColumn(this.column) ?? -1;\n    const moreThanOneColSorting = allColumnsWithSorting.some(col => this.sortController.getDisplaySortIndexForColumn(col) ?? -1 >= 1);\n    const showIndex = indexThisCol >= 0 && moreThanOneColSorting;\n    _setDisplayed(this.eSortOrder, showIndex, {\n      skipAriaHidden: true\n    });\n    if (indexThisCol >= 0) {\n      this.eSortOrder.textContent = (indexThisCol + 1).toString();\n    } else {\n      _clearElement(this.eSortOrder);\n    }\n  }\n};\nvar SortIndicatorSelector = {\n  selector: \"AG-SORT-INDICATOR\",\n  component: SortIndicatorComp\n};\n\n// community-modules/core/src/headerRendering/cells/column/headerComp.ts\nvar HeaderCompTemplate = /* html */\n`<div class=\"ag-cell-label-container\" role=\"presentation\">\n        <span data-ref=\"eMenu\" class=\"ag-header-icon ag-header-cell-menu-button\" aria-hidden=\"true\"></span>\n        <span data-ref=\"eFilterButton\" class=\"ag-header-icon ag-header-cell-filter-button\" aria-hidden=\"true\"></span>\n        <div data-ref=\"eLabel\" class=\"ag-header-cell-label\" role=\"presentation\">\n            <span data-ref=\"eText\" class=\"ag-header-cell-text\"></span>\n            <span data-ref=\"eFilter\" class=\"ag-header-icon ag-header-label-icon ag-filter-icon\" aria-hidden=\"true\"></span>\n            <ag-sort-indicator data-ref=\"eSortIndicator\"></ag-sort-indicator>\n        </div>\n    </div>`;\nvar HeaderComp = class extends Component {\n  constructor() {\n    super(...arguments);\n    this.eFilter = RefPlaceholder;\n    this.eFilterButton = RefPlaceholder;\n    this.eSortIndicator = RefPlaceholder;\n    this.eMenu = RefPlaceholder;\n    this.eLabel = RefPlaceholder;\n    this.eText = RefPlaceholder;\n    /**\n     * Selectors for custom headers templates\n     */\n    this.eSortOrder = RefPlaceholder;\n    this.eSortAsc = RefPlaceholder;\n    this.eSortDesc = RefPlaceholder;\n    this.eSortMixed = RefPlaceholder;\n    this.eSortNone = RefPlaceholder;\n    this.lastMovingChanged = 0;\n  }\n  wireBeans(beans) {\n    this.sortController = beans.sortController;\n    this.menuService = beans.menuService;\n    this.funcColsService = beans.funcColsService;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  refresh(params) {\n    const oldParams = this.params;\n    this.params = params;\n    if (this.workOutTemplate() != this.currentTemplate || this.workOutShowMenu() != this.currentShowMenu || this.workOutSort() != this.currentSort || this.shouldSuppressMenuHide() != this.currentSuppressMenuHide || oldParams.enableFilterButton != params.enableFilterButton || oldParams.enableFilterIcon != params.enableFilterIcon) {\n      return false;\n    }\n    this.setDisplayName(params);\n    return true;\n  }\n  workOutTemplate() {\n    let template = this.params.template ?? HeaderCompTemplate;\n    template = template && template.trim ? template.trim() : template;\n    return template;\n  }\n  init(params) {\n    this.params = params;\n    this.currentTemplate = this.workOutTemplate();\n    this.setTemplate(this.currentTemplate, [SortIndicatorSelector]);\n    this.setupTap();\n    this.setMenu();\n    this.setupSort();\n    this.setupFilterIcon();\n    this.setupFilterButton();\n    this.setDisplayName(params);\n  }\n  setDisplayName(params) {\n    if (this.currentDisplayName != params.displayName) {\n      this.currentDisplayName = params.displayName;\n      const displayNameSanitised = _escapeString(this.currentDisplayName, true);\n      if (this.eText) {\n        this.eText.textContent = displayNameSanitised;\n      }\n    }\n  }\n  addInIcon(iconName, eParent, column) {\n    if (eParent == null) {\n      return;\n    }\n    const eIcon = _createIconNoSpan(iconName, this.gos, column);\n    if (eIcon) {\n      eParent.appendChild(eIcon);\n    }\n  }\n  setupTap() {\n    const {\n      gos\n    } = this;\n    if (gos.get(\"suppressTouch\")) {\n      return;\n    }\n    const touchListener = new TouchListener(this.getGui(), true);\n    const suppressMenuHide = this.shouldSuppressMenuHide();\n    const tapMenuButton = suppressMenuHide && _exists(this.eMenu);\n    const menuTouchListener = tapMenuButton ? new TouchListener(this.eMenu, true) : touchListener;\n    if (this.params.enableMenu) {\n      const eventType = tapMenuButton ? \"tap\" : \"longTap\";\n      const showMenuFn = event => this.params.showColumnMenuAfterMouseClick(event.touchStart);\n      this.addManagedListeners(menuTouchListener, {\n        [eventType]: showMenuFn\n      });\n    }\n    if (this.params.enableSorting) {\n      const tapListener = event => {\n        const target = event.touchStart.target;\n        if (suppressMenuHide && (this.eMenu?.contains(target) || this.eFilterButton?.contains(target))) {\n          return;\n        }\n        this.sortController.progressSort(this.params.column, false, \"uiColumnSorted\");\n      };\n      this.addManagedListeners(touchListener, {\n        tap: tapListener\n      });\n    }\n    if (this.params.enableFilterButton) {\n      const filterButtonTouchListener = new TouchListener(this.eFilterButton, true);\n      this.addManagedListeners(filterButtonTouchListener, {\n        tap: () => this.params.showFilter(this.eFilterButton)\n      });\n      this.addDestroyFunc(() => filterButtonTouchListener.destroy());\n    }\n    this.addDestroyFunc(() => touchListener.destroy());\n    if (tapMenuButton) {\n      this.addDestroyFunc(() => menuTouchListener.destroy());\n    }\n  }\n  workOutShowMenu() {\n    return this.params.enableMenu && this.menuService.isHeaderMenuButtonEnabled();\n  }\n  shouldSuppressMenuHide() {\n    return this.menuService.isHeaderMenuButtonAlwaysShowEnabled();\n  }\n  setMenu() {\n    if (!this.eMenu) {\n      return;\n    }\n    this.currentShowMenu = this.workOutShowMenu();\n    if (!this.currentShowMenu) {\n      _removeFromParent(this.eMenu);\n      this.eMenu = void 0;\n      return;\n    }\n    const isLegacyMenu = this.menuService.isLegacyMenuEnabled();\n    this.addInIcon(isLegacyMenu ? \"menu\" : \"menuAlt\", this.eMenu, this.params.column);\n    this.eMenu.classList.toggle(\"ag-header-menu-icon\", !isLegacyMenu);\n    this.currentSuppressMenuHide = this.shouldSuppressMenuHide();\n    this.addManagedElementListeners(this.eMenu, {\n      click: () => this.params.showColumnMenu(this.eMenu)\n    });\n    this.eMenu.classList.toggle(\"ag-header-menu-always-show\", this.currentSuppressMenuHide);\n  }\n  onMenuKeyboardShortcut(isFilterShortcut) {\n    const column = this.params.column;\n    const isLegacyMenuEnabled = this.menuService.isLegacyMenuEnabled();\n    if (isFilterShortcut && !isLegacyMenuEnabled) {\n      if (this.menuService.isFilterMenuInHeaderEnabled(column)) {\n        this.params.showFilter(this.eFilterButton ?? this.eMenu ?? this.getGui());\n        return true;\n      }\n    } else if (this.params.enableMenu) {\n      this.params.showColumnMenu(this.eMenu ?? this.eFilterButton ?? this.getGui());\n      return true;\n    }\n    return false;\n  }\n  workOutSort() {\n    return this.params.enableSorting;\n  }\n  setupSort() {\n    this.currentSort = this.params.enableSorting;\n    if (!this.eSortIndicator) {\n      this.eSortIndicator = this.createBean(new SortIndicatorComp(true));\n      this.eSortIndicator.attachCustomElements(this.eSortOrder, this.eSortAsc, this.eSortDesc, this.eSortMixed, this.eSortNone);\n    }\n    this.eSortIndicator.setupSort(this.params.column);\n    if (!this.currentSort) {\n      return;\n    }\n    this.addManagedListeners(this.params.column, {\n      movingChanged: () => {\n        this.lastMovingChanged = ( /* @__PURE__ */new Date()).getTime();\n      }\n    });\n    if (this.eLabel) {\n      this.addManagedElementListeners(this.eLabel, {\n        click: event => {\n          const moving = this.params.column.isMoving();\n          const nowTime = ( /* @__PURE__ */new Date()).getTime();\n          const movedRecently = nowTime - this.lastMovingChanged < 50;\n          const columnMoving = moving || movedRecently;\n          if (!columnMoving) {\n            const sortUsingCtrl = this.gos.get(\"multiSortKey\") === \"ctrl\";\n            const multiSort = sortUsingCtrl ? event.ctrlKey || event.metaKey : event.shiftKey;\n            this.params.progressSort(multiSort);\n          }\n        }\n      });\n    }\n    const onSortingChanged = () => {\n      const sort = this.params.column.getSort();\n      this.addOrRemoveCssClass(\"ag-header-cell-sorted-asc\", sort === \"asc\");\n      this.addOrRemoveCssClass(\"ag-header-cell-sorted-desc\", sort === \"desc\");\n      this.addOrRemoveCssClass(\"ag-header-cell-sorted-none\", !sort);\n      if (this.params.column.getColDef().showRowGroup) {\n        const sourceColumns = this.funcColsService.getSourceColumnsForGroupColumn(this.params.column);\n        const sortDirectionsMatch = sourceColumns?.every(sourceCol => this.params.column.getSort() == sourceCol.getSort());\n        const isMultiSorting = !sortDirectionsMatch;\n        this.addOrRemoveCssClass(\"ag-header-cell-sorted-mixed\", isMultiSorting);\n      }\n    };\n    this.addManagedEventListeners({\n      sortChanged: onSortingChanged,\n      columnRowGroupChanged: onSortingChanged\n    });\n  }\n  setupFilterIcon() {\n    if (!this.eFilter) {\n      return;\n    }\n    this.configureFilter(this.params.enableFilterIcon, this.eFilter, this.onFilterChangedIcon.bind(this));\n  }\n  setupFilterButton() {\n    if (!this.eFilterButton) {\n      return;\n    }\n    const configured = this.configureFilter(this.params.enableFilterButton, this.eFilterButton, this.onFilterChangedButton.bind(this));\n    if (configured) {\n      this.addManagedElementListeners(this.eFilterButton, {\n        click: () => this.params.showFilter(this.eFilterButton)\n      });\n    } else {\n      this.eFilterButton = void 0;\n    }\n  }\n  configureFilter(enabled, element, filterChangedCallback) {\n    if (!enabled) {\n      _removeFromParent(element);\n      return false;\n    }\n    const column = this.params.column;\n    this.addInIcon(\"filter\", element, column);\n    this.addManagedListeners(column, {\n      filterChanged: filterChangedCallback\n    });\n    filterChangedCallback();\n    return true;\n  }\n  onFilterChangedIcon() {\n    const filterPresent = this.params.column.isFilterActive();\n    _setDisplayed(this.eFilter, filterPresent, {\n      skipAriaHidden: true\n    });\n  }\n  onFilterChangedButton() {\n    const filterPresent = this.params.column.isFilterActive();\n    this.eFilterButton.classList.toggle(\"ag-filter-active\", filterPresent);\n  }\n  getAnchorElementForMenu(isFilter) {\n    if (isFilter) {\n      return this.eFilterButton ?? this.eMenu ?? this.getGui();\n    }\n    return this.eMenu ?? this.eFilterButton ?? this.getGui();\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/columnGroup/headerGroupComp.ts\nvar HeaderGroupComp = class extends Component {\n  constructor() {\n    super( /* html */\n    `<div class=\"ag-header-group-cell-label\" role=\"presentation\">\n            <span data-ref=\"agLabel\" class=\"ag-header-group-text\" role=\"presentation\"></span>\n            <span data-ref=\"agOpened\" class=\"ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded\"></span>\n            <span data-ref=\"agClosed\" class=\"ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed\"></span>\n        </div>`);\n    this.agOpened = RefPlaceholder;\n    this.agClosed = RefPlaceholder;\n    this.agLabel = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  init(params) {\n    this.params = params;\n    this.checkWarnings();\n    this.setupLabel();\n    this.addGroupExpandIcon();\n    this.setupExpandIcons();\n  }\n  checkWarnings() {\n    const paramsAny = this.params;\n    if (paramsAny.template) {\n      _warnOnce(`A template was provided for Header Group Comp - templates are only supported for Header Comps (not groups)`);\n    }\n  }\n  setupExpandIcons() {\n    this.addInIcon(\"columnGroupOpened\", this.agOpened);\n    this.addInIcon(\"columnGroupClosed\", this.agClosed);\n    const expandAction = event => {\n      if (_isStopPropagationForAgGrid(event)) {\n        return;\n      }\n      const newExpandedValue = !this.params.columnGroup.isExpanded();\n      this.columnModel.setColumnGroupOpened(this.params.columnGroup.getProvidedColumnGroup(), newExpandedValue, \"uiColumnExpanded\");\n    };\n    this.addTouchAndClickListeners(this.agClosed, expandAction);\n    this.addTouchAndClickListeners(this.agOpened, expandAction);\n    const stopPropagationAction = event => {\n      _stopPropagationForAgGrid(event);\n    };\n    this.addManagedElementListeners(this.agClosed, {\n      dblclick: stopPropagationAction\n    });\n    this.addManagedElementListeners(this.agOpened, {\n      dblclick: stopPropagationAction\n    });\n    this.addManagedElementListeners(this.getGui(), {\n      dblclick: expandAction\n    });\n    this.updateIconVisibility();\n    const providedColumnGroup = this.params.columnGroup.getProvidedColumnGroup();\n    const updateIcon = this.updateIconVisibility.bind(this);\n    this.addManagedListeners(providedColumnGroup, {\n      expandedChanged: updateIcon,\n      expandableChanged: updateIcon\n    });\n  }\n  addTouchAndClickListeners(eElement, action) {\n    const touchListener = new TouchListener(eElement, true);\n    this.addManagedListeners(touchListener, {\n      tap: action\n    });\n    this.addDestroyFunc(() => touchListener.destroy());\n    this.addManagedElementListeners(eElement, {\n      click: action\n    });\n  }\n  updateIconVisibility() {\n    const columnGroup = this.params.columnGroup;\n    if (columnGroup.isExpandable()) {\n      const expanded = this.params.columnGroup.isExpanded();\n      _setDisplayed(this.agOpened, expanded);\n      _setDisplayed(this.agClosed, !expanded);\n    } else {\n      _setDisplayed(this.agOpened, false);\n      _setDisplayed(this.agClosed, false);\n    }\n  }\n  addInIcon(iconName, element) {\n    const eIcon = _createIconNoSpan(iconName, this.gos, null);\n    if (eIcon) {\n      element.appendChild(eIcon);\n    }\n  }\n  addGroupExpandIcon() {\n    if (!this.params.columnGroup.isExpandable()) {\n      _setDisplayed(this.agOpened, false);\n      _setDisplayed(this.agClosed, false);\n      return;\n    }\n  }\n  setupLabel() {\n    const {\n      displayName,\n      columnGroup\n    } = this.params;\n    if (_exists(displayName)) {\n      const displayNameSanitised = _escapeString(displayName, true);\n      this.agLabel.textContent = displayNameSanitised;\n    }\n    this.addOrRemoveCssClass(\"ag-sticky-label\", !columnGroup.getColGroupDef()?.suppressStickyLabel);\n  }\n};\n\n// community-modules/core/src/modules/moduleNames.ts\nvar ModuleNames = /* @__PURE__ */(ModuleNames2 => {\n  ModuleNames2[\"CommunityCoreModule\"] = \"@ag-grid-community/core\";\n  ModuleNames2[\"InfiniteRowModelModule\"] = \"@ag-grid-community/infinite-row-model\";\n  ModuleNames2[\"ClientSideRowModelModule\"] = \"@ag-grid-community/client-side-row-model\";\n  ModuleNames2[\"CsvExportModule\"] = \"@ag-grid-community/csv-export\";\n  ModuleNames2[\"EnterpriseCoreModule\"] = \"@ag-grid-enterprise/core\";\n  ModuleNames2[\"RowGroupingModule\"] = \"@ag-grid-enterprise/row-grouping\";\n  ModuleNames2[\"ColumnsToolPanelModule\"] = \"@ag-grid-enterprise/column-tool-panel\";\n  ModuleNames2[\"FiltersToolPanelModule\"] = \"@ag-grid-enterprise/filter-tool-panel\";\n  ModuleNames2[\"MenuModule\"] = \"@ag-grid-enterprise/menu\";\n  ModuleNames2[\"SetFilterModule\"] = \"@ag-grid-enterprise/set-filter\";\n  ModuleNames2[\"MultiFilterModule\"] = \"@ag-grid-enterprise/multi-filter\";\n  ModuleNames2[\"StatusBarModule\"] = \"@ag-grid-enterprise/status-bar\";\n  ModuleNames2[\"SideBarModule\"] = \"@ag-grid-enterprise/side-bar\";\n  ModuleNames2[\"RangeSelectionModule\"] = \"@ag-grid-enterprise/range-selection\";\n  ModuleNames2[\"MasterDetailModule\"] = \"@ag-grid-enterprise/master-detail\";\n  ModuleNames2[\"RichSelectModule\"] = \"@ag-grid-enterprise/rich-select\";\n  ModuleNames2[\"GridChartsModule\"] = \"@ag-grid-enterprise/charts\";\n  ModuleNames2[\"ViewportRowModelModule\"] = \"@ag-grid-enterprise/viewport-row-model\";\n  ModuleNames2[\"ServerSideRowModelModule\"] = \"@ag-grid-enterprise/server-side-row-model\";\n  ModuleNames2[\"ExcelExportModule\"] = \"@ag-grid-enterprise/excel-export\";\n  ModuleNames2[\"ClipboardModule\"] = \"@ag-grid-enterprise/clipboard\";\n  ModuleNames2[\"SparklinesModule\"] = \"@ag-grid-enterprise/sparklines\";\n  ModuleNames2[\"AdvancedFilterModule\"] = \"@ag-grid-enterprise/advanced-filter\";\n  ModuleNames2[\"AngularModule\"] = \"@ag-grid-community/angular\";\n  ModuleNames2[\"ReactModule\"] = \"@ag-grid-community/react\";\n  ModuleNames2[\"VueModule\"] = \"@ag-grid-community/vue\";\n  return ModuleNames2;\n})(ModuleNames || {});\n\n// community-modules/core/src/modules/moduleRegistry.ts\nvar _ModuleRegistry = /*#__PURE__*/(() => {\n  let _ModuleRegistry = class _ModuleRegistry {\n    /**\n     * Globally register the given module for all grids.\n     * @param module - module to register\n     */\n    static register(module) {\n      _ModuleRegistry.__register(module, true, void 0);\n    }\n    /**\n     * Globally register the given modules for all grids.\n     * @param modules - modules to register\n     */\n    static registerModules(modules) {\n      _ModuleRegistry.__registerModules(modules, true, void 0);\n    }\n    /** AG GRID INTERNAL - Module registration helper. */\n    static __register(module, moduleBased, gridId) {\n      _ModuleRegistry.runVersionChecks(module);\n      if (gridId !== void 0) {\n        _ModuleRegistry.areGridScopedModules = true;\n        if (_ModuleRegistry.gridModulesMap[gridId] === void 0) {\n          _ModuleRegistry.gridModulesMap[gridId] = {};\n        }\n        _ModuleRegistry.gridModulesMap[gridId][module.moduleName] = module;\n      } else {\n        _ModuleRegistry.globalModulesMap[module.moduleName] = module;\n      }\n      _ModuleRegistry.setModuleBased(moduleBased);\n    }\n    /** AG GRID INTERNAL - Unregister grid scoped module. */\n    static __unRegisterGridModules(gridId) {\n      delete _ModuleRegistry.gridModulesMap[gridId];\n    }\n    /** AG GRID INTERNAL - Module registration helper. */\n    static __registerModules(modules, moduleBased, gridId) {\n      _ModuleRegistry.setModuleBased(moduleBased);\n      if (!modules) {\n        return;\n      }\n      modules.forEach(module => _ModuleRegistry.__register(module, moduleBased, gridId));\n    }\n    static isValidModuleVersion(module) {\n      const [moduleMajor, moduleMinor] = module.version.split(\".\") || [];\n      const [currentModuleMajor, currentModuleMinor] = _ModuleRegistry.currentModuleVersion.split(\".\") || [];\n      return moduleMajor === currentModuleMajor && moduleMinor === currentModuleMinor;\n    }\n    static runVersionChecks(module) {\n      if (!_ModuleRegistry.currentModuleVersion) {\n        _ModuleRegistry.currentModuleVersion = module.version;\n      }\n      const errorMsg = details => `You are using incompatible versions of AG Grid modules. Major and minor versions should always match across modules. ${details} Please update all modules to the same version.`;\n      if (!module.version) {\n        _errorOnce(errorMsg(`'${module.moduleName}' is incompatible.`));\n      } else if (!_ModuleRegistry.isValidModuleVersion(module)) {\n        _errorOnce(errorMsg(`'${module.moduleName}' is version ${module.version} but the other modules are version ${_ModuleRegistry.currentModuleVersion}.`));\n      }\n      if (module.validate) {\n        const result = module.validate();\n        if (!result.isValid) {\n          const errorResult = result;\n          _errorOnce(`${errorResult.message}`);\n        }\n      }\n    }\n    static setModuleBased(moduleBased) {\n      if (_ModuleRegistry.moduleBased === void 0) {\n        _ModuleRegistry.moduleBased = moduleBased;\n      } else {\n        if (_ModuleRegistry.moduleBased !== moduleBased) {\n          _errorOnce(`AG Grid: You are mixing modules (i.e. @ag-grid-community/core) and packages (ag-grid-community) - you can only use one or the other of these mechanisms.`);\n          _errorOnce(\"Please see https://www.ag-grid.com/javascript-grid/modules/ for more information.\");\n        }\n      }\n    }\n    /**\n     * AG GRID INTERNAL - Set if files are being served from a single UMD bundle to provide accurate enterprise upgrade steps.\n     */\n    static __setIsBundled() {\n      _ModuleRegistry.isBundled = true;\n    }\n    /** AG GRID INTERNAL - Assert a given module has been register, globally or individually with this grid. */\n    static __assertRegistered(moduleName, reason, gridId) {\n      if (this.__isRegistered(moduleName, gridId)) {\n        return true;\n      }\n      let warningMessage;\n      if (_ModuleRegistry.isBundled) {\n        {\n          warningMessage = `AG Grid: unable to use ${reason} as 'ag-grid-enterprise' has not been loaded. Check you are using the Enterprise bundle:\n        \n        <script src=\"https://cdn.jsdelivr.net/npm/ag-grid-enterprise@AG_GRID_VERSION/dist/ag-grid-enterprise.min.js\"><\\/script>\n        \nFor more info see: https://ag-grid.com/javascript-data-grid/getting-started/#getting-started-with-ag-grid-enterprise`;\n        }\n      } else if (_ModuleRegistry.moduleBased || _ModuleRegistry.moduleBased === void 0) {\n        const modName = Object.entries(ModuleNames).find(([k, v]) => v === moduleName)?.[0];\n        warningMessage = `AG Grid: unable to use ${reason} as the ${modName} is not registered${_ModuleRegistry.areGridScopedModules ? ` for gridId: ${gridId}` : \"\"}. Check if you have registered the module:\n           \n    import { ModuleRegistry } from '@ag-grid-community/core';\n    import { ${modName} } from '${moduleName}';\n    \n    ModuleRegistry.registerModules([ ${modName} ]);\n\nFor more info see: https://www.ag-grid.com/javascript-grid/modules/`;\n      } else {\n        warningMessage = `AG Grid: unable to use ${reason} as package 'ag-grid-enterprise' has not been imported. Check that you have imported the package:\n            \n    import 'ag-grid-enterprise';`;\n      }\n      _errorOnce(warningMessage);\n      return false;\n    }\n    /** AG GRID INTERNAL - Is the given module registered, globally or individually with this grid. */\n    static __isRegistered(moduleName, gridId) {\n      return !!_ModuleRegistry.globalModulesMap[moduleName] || !!_ModuleRegistry.gridModulesMap[gridId]?.[moduleName];\n    }\n    /** AG GRID INTERNAL - Get all registered modules globally / individually for this grid. */\n    static __getRegisteredModules(gridId) {\n      return [..._values(_ModuleRegistry.globalModulesMap), ..._values(_ModuleRegistry.gridModulesMap[gridId] || {})];\n    }\n    /** AG GRID INTERNAL - Get the list of modules registered individually for this grid. */\n    static __getGridRegisteredModules(gridId) {\n      return _values(_ModuleRegistry.gridModulesMap[gridId] ?? {}) || [];\n    }\n    /** INTERNAL */\n    static __isPackageBased() {\n      return !_ModuleRegistry.moduleBased;\n    }\n  };\n  // having in a map a) removes duplicates and b) allows fast lookup\n  _ModuleRegistry.globalModulesMap = {};\n  _ModuleRegistry.gridModulesMap = {};\n  _ModuleRegistry.areGridScopedModules = false;\n  return _ModuleRegistry;\n})();\nvar ModuleRegistry = _ModuleRegistry;\n\n// community-modules/core/src/rendering/cellRenderers/animateShowChangeCellRenderer.ts\nvar ARROW_UP = \"\\u2191\";\nvar ARROW_DOWN = \"\\u2193\";\nvar AnimateShowChangeCellRenderer = class extends Component {\n  constructor() {\n    super();\n    this.refreshCount = 0;\n    const template = document.createElement(\"span\");\n    const delta = document.createElement(\"span\");\n    delta.setAttribute(\"class\", \"ag-value-change-delta\");\n    const value = document.createElement(\"span\");\n    value.setAttribute(\"class\", \"ag-value-change-value\");\n    template.appendChild(delta);\n    template.appendChild(value);\n    this.setTemplateFromElement(template);\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n  }\n  init(params) {\n    this.eValue = this.queryForHtmlElement(\".ag-value-change-value\");\n    this.eDelta = this.queryForHtmlElement(\".ag-value-change-delta\");\n    this.refresh(params, true);\n  }\n  showDelta(params, delta) {\n    const absDelta = Math.abs(delta);\n    const valueFormatted = params.formatValue(absDelta);\n    const valueToUse = _exists(valueFormatted) ? valueFormatted : absDelta;\n    const deltaUp = delta >= 0;\n    if (deltaUp) {\n      this.eDelta.textContent = ARROW_UP + valueToUse;\n    } else {\n      this.eDelta.textContent = ARROW_DOWN + valueToUse;\n    }\n    this.eDelta.classList.toggle(\"ag-value-change-delta-up\", deltaUp);\n    this.eDelta.classList.toggle(\"ag-value-change-delta-down\", !deltaUp);\n  }\n  setTimerToRemoveDelta() {\n    this.refreshCount++;\n    const refreshCountCopy = this.refreshCount;\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (refreshCountCopy === this.refreshCount) {\n          this.hideDeltaValue();\n        }\n      }, 2e3);\n    });\n  }\n  hideDeltaValue() {\n    this.eValue.classList.remove(\"ag-value-change-value-highlight\");\n    _clearElement(this.eDelta);\n  }\n  refresh(params, isInitialRender = false) {\n    const value = params.value;\n    if (value === this.lastValue) {\n      return false;\n    }\n    if (_exists(params.valueFormatted)) {\n      this.eValue.textContent = params.valueFormatted;\n    } else if (_exists(params.value)) {\n      this.eValue.textContent = value;\n    } else {\n      _clearElement(this.eValue);\n    }\n    if (this.filterManager?.isSuppressFlashingCellsBecauseFiltering()) {\n      return false;\n    }\n    if (typeof value === \"number\" && typeof this.lastValue === \"number\") {\n      const delta = value - this.lastValue;\n      this.showDelta(params, delta);\n    }\n    if (this.lastValue) {\n      this.eValue.classList.add(\"ag-value-change-value-highlight\");\n    }\n    if (!isInitialRender) {\n      this.setTimerToRemoveDelta();\n    }\n    this.lastValue = value;\n    return true;\n  }\n};\n\n// community-modules/core/src/rendering/cellRenderers/animateSlideCellRenderer.ts\nvar AnimateSlideCellRenderer = class extends Component {\n  constructor() {\n    super();\n    this.refreshCount = 0;\n    const template = document.createElement(\"span\");\n    const slide = document.createElement(\"span\");\n    slide.setAttribute(\"class\", \"ag-value-slide-current\");\n    template.appendChild(slide);\n    this.setTemplateFromElement(template);\n    this.eCurrent = this.queryForHtmlElement(\".ag-value-slide-current\");\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n  }\n  init(params) {\n    this.refresh(params, true);\n  }\n  addSlideAnimation() {\n    this.refreshCount++;\n    const refreshCountCopy = this.refreshCount;\n    if (this.ePrevious) {\n      this.getGui().removeChild(this.ePrevious);\n    }\n    const prevElement = document.createElement(\"span\");\n    prevElement.setAttribute(\"class\", \"ag-value-slide-previous ag-value-slide-out\");\n    this.ePrevious = prevElement;\n    this.ePrevious.textContent = this.eCurrent.textContent;\n    this.getGui().insertBefore(this.ePrevious, this.eCurrent);\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (refreshCountCopy !== this.refreshCount) {\n          return;\n        }\n        this.ePrevious.classList.add(\"ag-value-slide-out-end\");\n      }, 50);\n      window.setTimeout(() => {\n        if (refreshCountCopy !== this.refreshCount) {\n          return;\n        }\n        this.getGui().removeChild(this.ePrevious);\n        this.ePrevious = null;\n      }, 3e3);\n    });\n  }\n  refresh(params, isInitialRender = false) {\n    let value = params.value;\n    if (_missing(value)) {\n      value = \"\";\n    }\n    if (value === this.lastValue) {\n      return false;\n    }\n    if (this.filterManager?.isSuppressFlashingCellsBecauseFiltering()) {\n      return false;\n    }\n    if (!isInitialRender) {\n      this.addSlideAnimation();\n    }\n    this.lastValue = value;\n    if (_exists(params.valueFormatted)) {\n      this.eCurrent.textContent = params.valueFormatted;\n    } else if (_exists(params.value)) {\n      this.eCurrent.textContent = value;\n    } else {\n      _clearElement(this.eCurrent);\n    }\n    return true;\n  }\n};\n\n// community-modules/core/src/constants/keyCode.ts\nvar KeyCode = /*#__PURE__*/(() => {\n  let KeyCode = class {};\n  KeyCode.BACKSPACE = \"Backspace\";\n  KeyCode.TAB = \"Tab\";\n  KeyCode.ENTER = \"Enter\";\n  KeyCode.ESCAPE = \"Escape\";\n  KeyCode.SPACE = \" \";\n  KeyCode.LEFT = \"ArrowLeft\";\n  KeyCode.UP = \"ArrowUp\";\n  KeyCode.RIGHT = \"ArrowRight\";\n  KeyCode.DOWN = \"ArrowDown\";\n  KeyCode.DELETE = \"Delete\";\n  KeyCode.F2 = \"F2\";\n  KeyCode.PAGE_UP = \"PageUp\";\n  KeyCode.PAGE_DOWN = \"PageDown\";\n  KeyCode.PAGE_HOME = \"Home\";\n  KeyCode.PAGE_END = \"End\";\n  // these should be used with `event.code` instead of `event.key`\n  // as `event.key` changes when non-latin keyboards are used\n  KeyCode.A = \"KeyA\";\n  KeyCode.C = \"KeyC\";\n  KeyCode.D = \"KeyD\";\n  KeyCode.V = \"KeyV\";\n  KeyCode.X = \"KeyX\";\n  KeyCode.Y = \"KeyY\";\n  KeyCode.Z = \"KeyZ\";\n\n  // community-modules/core/src/widgets/agAbstractLabel.ts\n  return KeyCode;\n})();\nvar AgAbstractLabel = class extends Component {\n  constructor(config, template, components) {\n    super(template, components);\n    this.labelSeparator = \"\";\n    this.labelAlignment = \"left\";\n    this.disabled = false;\n    this.label = \"\";\n    this.config = config || {};\n  }\n  postConstruct() {\n    this.addCssClass(\"ag-labeled\");\n    this.eLabel.classList.add(\"ag-label\");\n    const {\n      labelSeparator,\n      label,\n      labelWidth,\n      labelAlignment,\n      disabled\n    } = this.config;\n    if (disabled != null) {\n      this.setDisabled(disabled);\n    }\n    if (labelSeparator != null) {\n      this.setLabelSeparator(labelSeparator);\n    }\n    if (label != null) {\n      this.setLabel(label);\n    }\n    if (labelWidth != null) {\n      this.setLabelWidth(labelWidth);\n    }\n    this.setLabelAlignment(labelAlignment || this.labelAlignment);\n    this.refreshLabel();\n  }\n  refreshLabel() {\n    _clearElement(this.eLabel);\n    if (typeof this.label === \"string\") {\n      this.eLabel.innerText = this.label + this.labelSeparator;\n    } else if (this.label) {\n      this.eLabel.appendChild(this.label);\n    }\n    if (this.label === \"\") {\n      _setDisplayed(this.eLabel, false);\n      _setAriaRole(this.eLabel, \"presentation\");\n    } else {\n      _setDisplayed(this.eLabel, true);\n      _setAriaRole(this.eLabel, null);\n    }\n  }\n  setLabelSeparator(labelSeparator) {\n    if (this.labelSeparator === labelSeparator) {\n      return this;\n    }\n    this.labelSeparator = labelSeparator;\n    if (this.label != null) {\n      this.refreshLabel();\n    }\n    return this;\n  }\n  getLabelId() {\n    this.eLabel.id = this.eLabel.id || `ag-${this.getCompId()}-label`;\n    return this.eLabel.id;\n  }\n  getLabel() {\n    return this.label;\n  }\n  setLabel(label) {\n    if (this.label === label) {\n      return this;\n    }\n    this.label = label;\n    this.refreshLabel();\n    return this;\n  }\n  setLabelAlignment(alignment) {\n    const eGui = this.getGui();\n    const eGuiClassList = eGui.classList;\n    eGuiClassList.toggle(\"ag-label-align-left\", alignment === \"left\");\n    eGuiClassList.toggle(\"ag-label-align-right\", alignment === \"right\");\n    eGuiClassList.toggle(\"ag-label-align-top\", alignment === \"top\");\n    return this;\n  }\n  setLabelEllipsis(hasEllipsis) {\n    this.eLabel.classList.toggle(\"ag-label-ellipsis\", hasEllipsis);\n    return this;\n  }\n  setLabelWidth(width) {\n    if (this.label == null) {\n      return this;\n    }\n    _setElementWidth(this.eLabel, width);\n    return this;\n  }\n  setDisabled(disabled) {\n    disabled = !!disabled;\n    const element = this.getGui();\n    _setDisabled(element, disabled);\n    element.classList.toggle(\"ag-disabled\", disabled);\n    this.disabled = disabled;\n    return this;\n  }\n  isDisabled() {\n    return !!this.disabled;\n  }\n};\n\n// community-modules/core/src/widgets/agAbstractField.ts\nvar AgAbstractField = class extends AgAbstractLabel {\n  constructor(config, template, components, className) {\n    super(config, template, components);\n    this.className = className;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const {\n      width,\n      value,\n      onValueChange\n    } = this.config;\n    if (width != null) {\n      this.setWidth(width);\n    }\n    if (value != null) {\n      this.setValue(value);\n    }\n    if (onValueChange != null) {\n      this.onValueChange(onValueChange);\n    }\n    if (this.className) {\n      this.addCssClass(this.className);\n    }\n    this.refreshAriaLabelledBy();\n  }\n  setLabel(label) {\n    super.setLabel(label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  refreshAriaLabelledBy() {\n    const ariaEl = this.getAriaElement();\n    const labelId = this.getLabelId();\n    const label = this.getLabel();\n    if (label == null || label == \"\" || _getAriaLabel(ariaEl) !== null) {\n      _setAriaLabelledBy(ariaEl, \"\");\n    } else {\n      _setAriaLabelledBy(ariaEl, labelId ?? \"\");\n    }\n  }\n  setAriaLabel(label) {\n    _setAriaLabel(this.getAriaElement(), label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  onValueChange(callbackFn) {\n    this.addManagedListeners(this, {\n      fieldValueChanged: () => callbackFn(this.getValue())\n    });\n    return this;\n  }\n  getWidth() {\n    return this.getGui().clientWidth;\n  }\n  setWidth(width) {\n    _setFixedWidth(this.getGui(), width);\n    return this;\n  }\n  getPreviousValue() {\n    return this.previousValue;\n  }\n  getValue() {\n    return this.value;\n  }\n  setValue(value, silent) {\n    if (this.value === value) {\n      return this;\n    }\n    this.previousValue = this.value;\n    this.value = value;\n    if (!silent) {\n      this.dispatchLocalEvent({\n        type: \"fieldValueChanged\"\n      });\n    }\n    return this;\n  }\n};\n\n// community-modules/core/src/widgets/agAbstractInputField.ts\nvar AgAbstractInputField = class extends AgAbstractField {\n  constructor(config, className, inputType = \"text\", displayFieldTag = \"input\") {\n    super(config, config?.template ?? /* html */\n    `\n            <div role=\"presentation\">\n                <div data-ref=\"eLabel\" class=\"ag-input-field-label\"></div>\n                <div data-ref=\"eWrapper\" class=\"ag-wrapper ag-input-wrapper\" role=\"presentation\">\n                    <${displayFieldTag} data-ref=\"eInput\" class=\"ag-input-field-input\"></${displayFieldTag}>\n                </div>\n            </div>`, [], className);\n    this.inputType = inputType;\n    this.displayFieldTag = displayFieldTag;\n    this.eLabel = RefPlaceholder;\n    this.eWrapper = RefPlaceholder;\n    this.eInput = RefPlaceholder;\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.setInputType();\n    this.eLabel.classList.add(`${this.className}-label`);\n    this.eWrapper.classList.add(`${this.className}-input-wrapper`);\n    this.eInput.classList.add(`${this.className}-input`);\n    this.addCssClass(\"ag-input-field\");\n    this.eInput.id = this.eInput.id || `ag-${this.getCompId()}-input`;\n    const {\n      inputName,\n      inputWidth\n    } = this.config;\n    if (inputName != null) {\n      this.setInputName(inputName);\n    }\n    if (inputWidth != null) {\n      this.setInputWidth(inputWidth);\n    }\n    this.addInputListeners();\n    this.activateTabIndex([this.eInput]);\n  }\n  addInputListeners() {\n    this.addManagedElementListeners(this.eInput, {\n      input: e => this.setValue(e.target.value)\n    });\n  }\n  setInputType() {\n    if (this.displayFieldTag === \"input\") {\n      this.eInput.setAttribute(\"type\", this.inputType);\n    }\n  }\n  getInputElement() {\n    return this.eInput;\n  }\n  setInputWidth(width) {\n    _setElementWidth(this.eWrapper, width);\n    return this;\n  }\n  setInputName(name) {\n    this.getInputElement().setAttribute(\"name\", name);\n    return this;\n  }\n  getFocusableElement() {\n    return this.eInput;\n  }\n  setMaxLength(length) {\n    const eInput = this.eInput;\n    eInput.maxLength = length;\n    return this;\n  }\n  setInputPlaceholder(placeholder) {\n    _addOrRemoveAttribute(this.eInput, \"placeholder\", placeholder);\n    return this;\n  }\n  setInputAriaLabel(label) {\n    _setAriaLabel(this.eInput, label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  setDisabled(disabled) {\n    _setDisabled(this.eInput, disabled);\n    return super.setDisabled(disabled);\n  }\n  setAutoComplete(value) {\n    if (value === true) {\n      _addOrRemoveAttribute(this.eInput, \"autocomplete\", null);\n    } else {\n      const autoCompleteValue = typeof value === \"string\" ? value : \"off\";\n      _addOrRemoveAttribute(this.eInput, \"autocomplete\", autoCompleteValue);\n    }\n    return this;\n  }\n};\n\n// community-modules/core/src/widgets/agCheckbox.ts\nvar AgCheckbox = class extends AgAbstractInputField {\n  constructor(config, className = \"ag-checkbox\", inputType = \"checkbox\") {\n    super(config, className, inputType);\n    this.labelAlignment = \"right\";\n    this.selected = false;\n    this.readOnly = false;\n    this.passive = false;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const {\n      readOnly,\n      passive\n    } = this.config;\n    if (typeof readOnly === \"boolean\") this.setReadOnly(readOnly);\n    if (typeof passive === \"boolean\") this.setPassive(passive);\n  }\n  addInputListeners() {\n    this.addManagedElementListeners(this.eInput, {\n      click: this.onCheckboxClick.bind(this)\n    });\n    this.addManagedElementListeners(this.eLabel, {\n      click: this.toggle.bind(this)\n    });\n  }\n  getNextValue() {\n    return this.selected === void 0 ? true : !this.selected;\n  }\n  setPassive(passive) {\n    this.passive = passive;\n  }\n  isReadOnly() {\n    return this.readOnly;\n  }\n  setReadOnly(readOnly) {\n    this.eWrapper.classList.toggle(\"ag-disabled\", readOnly);\n    this.eInput.disabled = readOnly;\n    this.readOnly = readOnly;\n  }\n  setDisabled(disabled) {\n    this.eWrapper.classList.toggle(\"ag-disabled\", disabled);\n    return super.setDisabled(disabled);\n  }\n  toggle() {\n    if (this.eInput.disabled) {\n      return;\n    }\n    const previousValue = this.isSelected();\n    const nextValue = this.getNextValue();\n    if (this.passive) {\n      this.dispatchChange(nextValue, previousValue);\n    } else {\n      this.setValue(nextValue);\n    }\n  }\n  getValue() {\n    return this.isSelected();\n  }\n  setValue(value, silent) {\n    this.refreshSelectedClass(value);\n    this.setSelected(value, silent);\n    return this;\n  }\n  setName(name) {\n    const input = this.getInputElement();\n    input.name = name;\n    return this;\n  }\n  isSelected() {\n    return this.selected;\n  }\n  setSelected(selected, silent) {\n    if (this.isSelected() === selected) {\n      return;\n    }\n    this.previousValue = this.isSelected();\n    selected = this.selected = typeof selected === \"boolean\" ? selected : void 0;\n    this.eInput.checked = selected;\n    this.eInput.indeterminate = selected === void 0;\n    if (!silent) {\n      this.dispatchChange(this.selected, this.previousValue);\n    }\n  }\n  dispatchChange(selected, previousValue, event) {\n    this.dispatchLocalEvent({\n      type: \"fieldValueChanged\",\n      selected,\n      previousValue,\n      event\n    });\n    const input = this.getInputElement();\n    const checkboxChangedEvent = {\n      type: \"checkboxChanged\",\n      id: input.id,\n      name: input.name,\n      selected,\n      previousValue\n    };\n    this.eventService.dispatchEvent(checkboxChangedEvent);\n  }\n  onCheckboxClick(e) {\n    if (this.passive || this.eInput.disabled) {\n      return;\n    }\n    const previousValue = this.isSelected();\n    const selected = this.selected = e.target.checked;\n    this.refreshSelectedClass(selected);\n    this.dispatchChange(selected, previousValue, e);\n  }\n  refreshSelectedClass(value) {\n    this.eWrapper.classList.toggle(\"ag-checked\", value === true);\n    this.eWrapper.classList.toggle(\"ag-indeterminate\", value == null);\n  }\n};\nvar AgCheckboxSelector = {\n  selector: \"AG-CHECKBOX\",\n  component: AgCheckbox\n};\n\n// community-modules/core/src/rendering/cellRenderers/checkboxCellRenderer.ts\nvar CheckboxCellRenderer = class extends Component {\n  constructor() {\n    super( /* html*/\n    `\n            <div class=\"ag-cell-wrapper ag-checkbox-cell\" role=\"presentation\">\n                <ag-checkbox role=\"presentation\" data-ref=\"eCheckbox\"></ag-checkbox>\n            </div>`, [AgCheckboxSelector]);\n    this.eCheckbox = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    this.updateCheckbox(params);\n    const inputEl = this.eCheckbox.getInputElement();\n    inputEl.setAttribute(\"tabindex\", \"-1\");\n    _setAriaLive(inputEl, \"polite\");\n    this.addManagedListeners(inputEl, {\n      click: event => {\n        _stopPropagationForAgGrid(event);\n        if (this.eCheckbox.isDisabled()) {\n          return;\n        }\n        const isSelected = this.eCheckbox.getValue();\n        this.onCheckboxChanged(isSelected);\n      },\n      dblclick: event => {\n        _stopPropagationForAgGrid(event);\n      }\n    });\n    this.addManagedElementListeners(this.params.eGridCell, {\n      keydown: event => {\n        if (event.key === KeyCode.SPACE && !this.eCheckbox.isDisabled()) {\n          if (this.params.eGridCell === this.gos.getActiveDomElement()) {\n            this.eCheckbox.toggle();\n          }\n          const isSelected = this.eCheckbox.getValue();\n          this.onCheckboxChanged(isSelected);\n          event.preventDefault();\n        }\n      }\n    });\n  }\n  refresh(params) {\n    this.params = params;\n    this.updateCheckbox(params);\n    return true;\n  }\n  updateCheckbox(params) {\n    let isSelected;\n    let displayed = true;\n    if (params.node.group && params.column) {\n      const colId = params.column.getColId();\n      if (colId.startsWith(GROUP_AUTO_COLUMN_ID)) {\n        isSelected = params.value == null || params.value === \"\" ? void 0 : params.value === \"true\";\n      } else if (params.node.aggData && params.node.aggData[colId] !== void 0) {\n        isSelected = params.value ?? void 0;\n      } else {\n        displayed = false;\n      }\n    } else {\n      isSelected = params.value ?? void 0;\n    }\n    if (!displayed) {\n      this.eCheckbox.setDisplayed(false);\n      return;\n    }\n    this.eCheckbox.setValue(isSelected);\n    const disabled = params.disabled != null ? params.disabled : !params.column?.isCellEditable(params.node);\n    this.eCheckbox.setDisabled(disabled);\n    const translate = this.localeService.getLocaleTextFunc();\n    const stateName = _getAriaCheckboxStateName(translate, isSelected);\n    const ariaLabel = disabled ? stateName : `${translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\")} (${stateName})`;\n    this.eCheckbox.setInputAriaLabel(ariaLabel);\n  }\n  onCheckboxChanged(isSelected) {\n    const {\n      column,\n      node,\n      value\n    } = this.params;\n    const eventStarted = {\n      type: \"cellEditingStarted\",\n      column,\n      colDef: column?.getColDef(),\n      data: node.data,\n      node,\n      rowIndex: node.rowIndex,\n      rowPinned: node.rowPinned,\n      value\n    };\n    this.eventService.dispatchEvent(eventStarted);\n    const valueChanged = this.params.node.setDataValue(this.params.column, isSelected, \"edit\");\n    const eventStopped = {\n      type: \"cellEditingStopped\",\n      column,\n      colDef: column?.getColDef(),\n      data: node.data,\n      node,\n      rowIndex: node.rowIndex,\n      rowPinned: node.rowPinned,\n      value,\n      oldValue: value,\n      newValue: isSelected,\n      valueChanged\n    };\n    this.eventService.dispatchEvent(eventStopped);\n  }\n};\n\n// community-modules/core/src/rendering/cellRenderers/loadingCellRenderer.ts\nvar LoadingCellRenderer = class extends Component {\n  constructor() {\n    super( /* html */\n    `<div class=\"ag-loading\">\n            <span class=\"ag-loading-icon\" data-ref=\"eLoadingIcon\"></span>\n            <span class=\"ag-loading-text\" data-ref=\"eLoadingText\"></span>\n        </div>`);\n    this.eLoadingIcon = RefPlaceholder;\n    this.eLoadingText = RefPlaceholder;\n  }\n  init(params) {\n    params.node.failedLoad ? this.setupFailed() : this.setupLoading();\n  }\n  setupFailed() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.eLoadingText.innerText = localeTextFunc(\"loadingError\", \"ERR\");\n  }\n  setupLoading() {\n    const eLoadingIcon = _createIconNoSpan(\"groupLoading\", this.gos, null);\n    if (eLoadingIcon) {\n      this.eLoadingIcon.appendChild(eLoadingIcon);\n    }\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.eLoadingText.innerText = localeTextFunc(\"loadingOoo\", \"Loading\");\n  }\n  refresh(params) {\n    return false;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/cellRenderers/skeletonCellRenderer.ts\nvar SkeletonCellRenderer = class extends Component {\n  constructor() {\n    super( /* html */\n    `<div class=\"ag-skeleton-container\"></div>`);\n  }\n  init(params) {\n    const id = `ag-cell-skeleton-renderer-${this.getCompId()}`;\n    this.getGui().setAttribute(\"id\", id);\n    this.addDestroyFunc(() => _setAriaLabelledBy(params.eParentOfValue));\n    _setAriaLabelledBy(params.eParentOfValue, id);\n    params.node.failedLoad ? this.setupFailed() : this.setupLoading(params);\n  }\n  setupFailed() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.getGui().innerText = localeTextFunc(\"loadingError\", \"ERR\");\n    const ariaFailed = localeTextFunc(\"ariaSkeletonCellLoadingFailed\", \"Row failed to load\");\n    _setAriaLabel(this.getGui(), ariaFailed);\n  }\n  setupLoading(params) {\n    const eDocument = this.gos.getDocument();\n    const skeletonEffect = eDocument.createElement(\"div\");\n    skeletonEffect.classList.add(\"ag-skeleton-effect\");\n    const rowIndex = params.node.rowIndex;\n    if (rowIndex != null) {\n      const width = 75 + 25 * (rowIndex % 2 === 0 ? Math.sin(rowIndex) : Math.cos(rowIndex));\n      skeletonEffect.style.width = `${width}%`;\n    }\n    this.getGui().appendChild(skeletonEffect);\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const ariaLoading = localeTextFunc(\"ariaSkeletonCellLoading\", \"Row data is loading\");\n    _setAriaLabel(this.getGui(), ariaLoading);\n  }\n  refresh(params) {\n    return false;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/overlays/overlayComponent.ts\nvar OverlayComponent = class extends Component {\n  constructor() {\n    super();\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/overlays/loadingOverlayComponent.ts\nvar LoadingOverlayComponent = class extends OverlayComponent {\n  init() {\n    const customTemplate = this.gos.get(\"overlayLoadingTemplate\");\n    this.setTemplate(customTemplate ?? /* html */\n    `<span aria-live=\"polite\" aria-atomic=\"true\" class=\"ag-overlay-loading-center\"></span>`);\n    if (!customTemplate) {\n      const localeTextFunc = this.localeService.getLocaleTextFunc();\n      setTimeout(() => {\n        this.getGui().textContent = localeTextFunc(\"loadingOoo\", \"Loading...\");\n      });\n    }\n  }\n};\n\n// community-modules/core/src/rendering/overlays/noRowsOverlayComponent.ts\nvar NoRowsOverlayComponent = class extends OverlayComponent {\n  init() {\n    const customTemplate = this.gos.get(\"overlayNoRowsTemplate\");\n    this.setTemplate(customTemplate ?? /* html */\n    `<span class=\"ag-overlay-no-rows-center\"></span>`);\n    if (!customTemplate) {\n      const localeTextFunc = this.localeService.getLocaleTextFunc();\n      setTimeout(() => {\n        this.getGui().textContent = localeTextFunc(\"noRowsToShow\", \"No Rows To Show\");\n      });\n    }\n  }\n};\n\n// community-modules/core/src/widgets/popupComponent.ts\nvar PopupComponent = class extends Component {\n  isPopup() {\n    return true;\n  }\n  setParentComponent(container) {\n    container.addCssClass(\"ag-has-popup\");\n    super.setParentComponent(container);\n  }\n  destroy() {\n    const parentComp = this.parentComponent;\n    const hasParent = parentComp && parentComp.isAlive();\n    if (hasParent) {\n      parentComp.getGui().classList.remove(\"ag-has-popup\");\n    }\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/tooltipComponent.ts\nvar TooltipComponent = class extends PopupComponent {\n  constructor() {\n    super( /* html */\n    `<div class=\"ag-tooltip\"></div>`);\n  }\n  // will need to type params\n  init(params) {\n    const {\n      value\n    } = params;\n    this.getGui().textContent = _escapeString(value, true);\n  }\n};\n\n// community-modules/core/src/utils/fuzzyMatch.ts\nfunction _fuzzyCheckStrings(inputValues, validValues, allSuggestions) {\n  const fuzzyMatches = {};\n  const invalidInputs = inputValues.filter(inputValue => !validValues.some(validValue => validValue === inputValue));\n  if (invalidInputs.length > 0) {\n    invalidInputs.forEach(invalidInput => fuzzyMatches[invalidInput] = _fuzzySuggestions(invalidInput, allSuggestions).values);\n  }\n  return fuzzyMatches;\n}\nfunction _fuzzySuggestions(inputValue, allSuggestions, hideIrrelevant, filterByPercentageOfBestMatch) {\n  let thisSuggestions = allSuggestions.map((text, idx) => ({\n    value: text,\n    relevance: stringWeightedDistances(inputValue.toLowerCase(), text.toLocaleLowerCase()),\n    idx\n  }));\n  thisSuggestions.sort((a, b) => b.relevance - a.relevance);\n  if (hideIrrelevant) {\n    thisSuggestions = thisSuggestions.filter(suggestion => suggestion.relevance !== 0);\n  }\n  if (thisSuggestions.length > 0 && filterByPercentageOfBestMatch && filterByPercentageOfBestMatch > 0) {\n    const bestMatch = thisSuggestions[0].relevance;\n    const limit = bestMatch * filterByPercentageOfBestMatch;\n    thisSuggestions = thisSuggestions.filter(suggestion => limit - suggestion.relevance < 0);\n  }\n  const values = [];\n  const indices = [];\n  for (const suggestion of thisSuggestions) {\n    values.push(suggestion.value);\n    indices.push(suggestion.idx);\n  }\n  return {\n    values,\n    indices\n  };\n}\nfunction stringWeightedDistances(str1, str2) {\n  const a = str1.replace(/\\s/g, \"\");\n  const b = str2.replace(/\\s/g, \"\");\n  let weight = 0;\n  let lastIndex = -1;\n  for (let i = 0; i < a.length; i++) {\n    const idx = b.indexOf(a[i], lastIndex + 1);\n    if (idx === -1) {\n      continue;\n    }\n    lastIndex = idx;\n    weight += 100 - lastIndex * 100 / 1e4 * 100;\n  }\n  return weight;\n}\n\n// community-modules/core/src/components/framework/userComponentRegistry.ts\nvar UserComponentRegistry = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"userComponentRegistry\";\n    this.agGridDefaults = {\n      //header\n      agColumnHeader: HeaderComp,\n      agColumnGroupHeader: HeaderGroupComp,\n      agSortIndicator: SortIndicatorComp,\n      // renderers\n      agAnimateShowChangeCellRenderer: AnimateShowChangeCellRenderer,\n      agAnimateSlideCellRenderer: AnimateSlideCellRenderer,\n      agLoadingCellRenderer: LoadingCellRenderer,\n      agSkeletonCellRenderer: SkeletonCellRenderer,\n      agCheckboxCellRenderer: CheckboxCellRenderer,\n      //overlays\n      agLoadingOverlay: LoadingOverlayComponent,\n      agNoRowsOverlay: NoRowsOverlayComponent,\n      // tooltips\n      agTooltipComponent: TooltipComponent\n    };\n    /** Used to provide useful error messages if a user is trying to use an enterprise component without loading the module. */\n    this.enterpriseAgDefaultCompsModule = {\n      agSetColumnFilter: \"@ag-grid-enterprise/set-filter\" /* SetFilterModule */,\n      agSetColumnFloatingFilter: \"@ag-grid-enterprise/set-filter\" /* SetFilterModule */,\n      agMultiColumnFilter: \"@ag-grid-enterprise/multi-filter\" /* MultiFilterModule */,\n      agMultiColumnFloatingFilter: \"@ag-grid-enterprise/multi-filter\" /* MultiFilterModule */,\n      agGroupColumnFilter: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n      agGroupColumnFloatingFilter: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n      agGroupCellRenderer: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n\n      // Actually in enterprise core as used by MasterDetail too but best guess is they are grouping\n      agGroupRowRenderer: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n\n      // Actually in enterprise core as used by MasterDetail but best guess is they are grouping\n      agRichSelect: \"@ag-grid-enterprise/rich-select\" /* RichSelectModule */,\n      agRichSelectCellEditor: \"@ag-grid-enterprise/rich-select\" /* RichSelectModule */,\n      agDetailCellRenderer: \"@ag-grid-enterprise/master-detail\" /* MasterDetailModule */,\n      agSparklineCellRenderer: \"@ag-grid-enterprise/sparklines\" /* SparklinesModule */\n    };\n    this.jsComps = {};\n  }\n  postConstruct() {\n    const comps = this.gos.get(\"components\");\n    if (comps != null) {\n      _iterateObject(comps, (key, component) => this.registerJsComponent(key, component));\n    }\n  }\n  registerDefaultComponent(name, component) {\n    this.agGridDefaults[name] = component;\n  }\n  registerJsComponent(name, component) {\n    this.jsComps[name] = component;\n  }\n  retrieve(propertyName, name) {\n    const createResult = (component, componentFromFramework) => ({\n      componentFromFramework,\n      component\n    });\n    const registeredViaFrameworkComp = this.getFrameworkOverrides().frameworkComponent(name, this.gos.get(\"components\"));\n    if (registeredViaFrameworkComp != null) {\n      return createResult(registeredViaFrameworkComp, true);\n    }\n    const jsComponent = this.jsComps[name];\n    if (jsComponent) {\n      const isFwkComp = this.getFrameworkOverrides().isFrameworkComponent(jsComponent);\n      return createResult(jsComponent, isFwkComp);\n    }\n    const defaultComponent = this.agGridDefaults[name];\n    if (defaultComponent) {\n      return createResult(defaultComponent, false);\n    }\n    const moduleForComponent = this.enterpriseAgDefaultCompsModule[name];\n    if (moduleForComponent) {\n      ModuleRegistry.__assertRegistered(moduleForComponent, `AG Grid '${propertyName}' component: ${name}`, this.gridId);\n    } else {\n      _doOnce(() => {\n        this.warnAboutMissingComponent(propertyName, name);\n      }, \"MissingComp\" + name);\n    }\n    return null;\n  }\n  warnAboutMissingComponent(propertyName, componentName) {\n    const validComponents = [\n    // Don't include the old names / internals in potential suggestions\n    ...Object.keys(this.agGridDefaults).filter(k => ![\"agCellEditor\", \"agGroupRowRenderer\", \"agSortIndicator\"].includes(k)), ...Object.keys(this.jsComps)];\n    const suggestions = _fuzzySuggestions(componentName, validComponents, true, 0.8).values;\n    _warnOnce(`Could not find '${componentName}' component. It was configured as \"${propertyName}: '${componentName}'\" but it wasn't found in the list of registered components.`);\n    if (suggestions.length > 0) {\n      _warnOnce(`         Did you mean: [${suggestions.slice(0, 3)}]?`);\n    }\n    _warnOnce(`If using a custom component check it has been registered as described in: ${this.getFrameworkOverrides().getDocLink(\"components/\")}`);\n  }\n};\n\n// community-modules/core/src/utils/promise.ts\nvar AgPromise = class _AgPromise {\n  constructor(callback) {\n    this.status = 0 /* IN_PROGRESS */;\n    this.resolution = null;\n    this.waiters = [];\n    callback(value => this.onDone(value), params => this.onReject(params));\n  }\n  static all(promises) {\n    return promises.length ? new _AgPromise(resolve => {\n      let remainingToResolve = promises.length;\n      const combinedValues = new Array(remainingToResolve);\n      promises.forEach((promise, index) => {\n        promise.then(value => {\n          combinedValues[index] = value;\n          remainingToResolve--;\n          if (remainingToResolve === 0) {\n            resolve(combinedValues);\n          }\n        });\n      });\n    }) : _AgPromise.resolve();\n  }\n  static resolve(value = null) {\n    return new _AgPromise(resolve => resolve(value));\n  }\n  then(func) {\n    return new _AgPromise(resolve => {\n      if (this.status === 1 /* RESOLVED */) {\n        resolve(func(this.resolution));\n      } else {\n        this.waiters.push(value => resolve(func(value)));\n      }\n    });\n  }\n  onDone(value) {\n    this.status = 1 /* RESOLVED */;\n    this.resolution = value;\n    this.waiters.forEach(waiter => waiter(value));\n  }\n  onReject(params) {}\n};\n\n// community-modules/core/src/components/framework/componentTypes.ts\nvar DateComponent = {\n  propertyName: \"dateComponent\",\n  cellRenderer: false\n};\nvar HeaderComponent = {\n  propertyName: \"headerComponent\",\n  cellRenderer: false\n};\nvar HeaderGroupComponent = {\n  propertyName: \"headerGroupComponent\",\n  cellRenderer: false\n};\nvar CellRendererComponent = {\n  propertyName: \"cellRenderer\",\n  cellRenderer: true\n};\nvar EditorRendererComponent = {\n  propertyName: \"cellRenderer\",\n  cellRenderer: false\n};\nvar LoadingCellRendererComponent = {\n  propertyName: \"loadingCellRenderer\",\n  cellRenderer: true\n};\nvar CellEditorComponent = {\n  propertyName: \"cellEditor\",\n  cellRenderer: false\n};\nvar InnerRendererComponent = {\n  propertyName: \"innerRenderer\",\n  cellRenderer: true\n};\nvar LoadingOverlayComponent2 = {\n  propertyName: \"loadingOverlayComponent\",\n  cellRenderer: false\n};\nvar NoRowsOverlayComponent2 = {\n  propertyName: \"noRowsOverlayComponent\",\n  cellRenderer: false\n};\nvar TooltipComponent2 = {\n  propertyName: \"tooltipComponent\",\n  cellRenderer: false\n};\nvar FilterComponent = {\n  propertyName: \"filter\",\n  cellRenderer: false\n};\nvar FloatingFilterComponent = {\n  propertyName: \"floatingFilterComponent\",\n  cellRenderer: false\n};\nvar ToolPanelComponent = {\n  propertyName: \"toolPanel\",\n  cellRenderer: false\n};\nvar StatusPanelComponent = {\n  propertyName: \"statusPanel\",\n  cellRenderer: false\n};\nvar FullWidth = {\n  propertyName: \"fullWidthCellRenderer\",\n  cellRenderer: true\n};\nvar FullWidthLoading = {\n  propertyName: \"loadingCellRenderer\",\n  cellRenderer: true\n};\nvar FullWidthGroup = {\n  propertyName: \"groupRowRenderer\",\n  cellRenderer: true\n};\nvar FullWidthDetail = {\n  propertyName: \"detailCellRenderer\",\n  cellRenderer: true\n};\nvar MenuItemComponent = {\n  propertyName: \"menuItem\",\n  cellRenderer: false\n};\n\n// community-modules/core/src/components/framework/userComponentFactory.ts\nvar UserComponentFactory = class _UserComponentFactory extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"userComponentFactory\";\n  }\n  wireBeans(beans) {\n    this.agComponentUtils = beans.agComponentUtils;\n    this.componentMetadataProvider = beans.componentMetadataProvider;\n    this.userComponentRegistry = beans.userComponentRegistry;\n    this.frameworkComponentWrapper = beans.frameworkComponentWrapper;\n    this.gridOptions = beans.gridOptions;\n  }\n  getHeaderCompDetails(colDef, params) {\n    return this.getCompDetails(colDef, HeaderComponent, \"agColumnHeader\", params);\n  }\n  getHeaderGroupCompDetails(params) {\n    const colGroupDef = params.columnGroup.getColGroupDef();\n    return this.getCompDetails(colGroupDef, HeaderGroupComponent, \"agColumnGroupHeader\", params);\n  }\n  // this one is unusual, as it can be LoadingCellRenderer, DetailCellRenderer, FullWidthCellRenderer or GroupRowRenderer.\n  // so we have to pass the type in.\n  getFullWidthCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidth, null, params, true);\n  }\n  getFullWidthLoadingCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidthLoading, \"agLoadingCellRenderer\", params, true);\n  }\n  getFullWidthGroupCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidthGroup, \"agGroupRowRenderer\", params, true);\n  }\n  getFullWidthDetailCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidthDetail, \"agDetailCellRenderer\", params, true);\n  }\n  // CELL RENDERER\n  getInnerRendererDetails(def, params) {\n    return this.getCompDetails(def, InnerRendererComponent, null, params);\n  }\n  getFullWidthGroupRowInnerCellRenderer(def, params) {\n    return this.getCompDetails(def, InnerRendererComponent, null, params);\n  }\n  getCellRendererDetails(def, params) {\n    return this.getCompDetails(def, CellRendererComponent, null, params);\n  }\n  getEditorRendererDetails(def, params) {\n    return this.getCompDetails(def, EditorRendererComponent, null, params);\n  }\n  getLoadingCellRendererDetails(def, params) {\n    return this.getCompDetails(def, LoadingCellRendererComponent, \"agSkeletonCellRenderer\", params, true);\n  }\n  // CELL EDITOR\n  getCellEditorDetails(def, params) {\n    return this.getCompDetails(def, CellEditorComponent, \"agCellEditor\", params, true);\n  }\n  // FILTER\n  getFilterDetails(def, params, defaultFilter) {\n    return this.getCompDetails(def, FilterComponent, defaultFilter, params, true);\n  }\n  getDateCompDetails(params) {\n    return this.getCompDetails(this.gridOptions, DateComponent, \"agDateInput\", params, true);\n  }\n  getLoadingOverlayCompDetails(params) {\n    return this.getCompDetails(this.gridOptions, LoadingOverlayComponent2, \"agLoadingOverlay\", params, true);\n  }\n  getNoRowsOverlayCompDetails(params) {\n    return this.getCompDetails(this.gridOptions, NoRowsOverlayComponent2, \"agNoRowsOverlay\", params, true);\n  }\n  getTooltipCompDetails(params) {\n    return this.getCompDetails(params.colDef, TooltipComponent2, \"agTooltipComponent\", params, true);\n  }\n  getSetFilterCellRendererDetails(def, params) {\n    return this.getCompDetails(def, CellRendererComponent, null, params);\n  }\n  getFloatingFilterCompDetails(def, params, defaultFloatingFilter) {\n    return this.getCompDetails(def, FloatingFilterComponent, defaultFloatingFilter, params);\n  }\n  getToolPanelCompDetails(toolPanelDef, params) {\n    return this.getCompDetails(toolPanelDef, ToolPanelComponent, null, params, true);\n  }\n  getStatusPanelCompDetails(def, params) {\n    return this.getCompDetails(def, StatusPanelComponent, null, params, true);\n  }\n  getMenuItemCompDetails(def, params) {\n    return this.getCompDetails(def, MenuItemComponent, \"agMenuItem\", params, true);\n  }\n  getCompDetails(defObject, type, defaultName, params, mandatory = false) {\n    const {\n      propertyName,\n      cellRenderer\n    } = type;\n    let {\n      compName,\n      jsComp,\n      fwComp,\n      paramsFromSelector,\n      popupFromSelector,\n      popupPositionFromSelector\n    } = _UserComponentFactory.getCompKeys(this.frameworkOverrides, defObject, type, params);\n    const lookupFromRegistry = key => {\n      const item = this.userComponentRegistry.retrieve(propertyName, key);\n      if (item) {\n        jsComp = !item.componentFromFramework ? item.component : void 0;\n        fwComp = item.componentFromFramework ? item.component : void 0;\n      }\n    };\n    if (compName != null) {\n      lookupFromRegistry(compName);\n    }\n    if (jsComp == null && fwComp == null && defaultName != null) {\n      lookupFromRegistry(defaultName);\n    }\n    if (jsComp && cellRenderer && !this.agComponentUtils.doesImplementIComponent(jsComp)) {\n      jsComp = this.agComponentUtils.adaptFunction(propertyName, jsComp);\n    }\n    if (!jsComp && !fwComp) {\n      if (mandatory) {\n        _errorOnce(`Could not find component ${compName}, did you forget to configure this component?`);\n      }\n      return;\n    }\n    const paramsMerged = this.mergeParamsWithApplicationProvidedParams(defObject, type, params, paramsFromSelector);\n    const componentFromFramework = jsComp == null;\n    const componentClass = jsComp ? jsComp : fwComp;\n    return {\n      componentFromFramework,\n      componentClass,\n      params: paramsMerged,\n      type,\n      popupFromSelector,\n      popupPositionFromSelector,\n      newAgStackInstance: () => this.newAgStackInstance(componentClass, componentFromFramework, paramsMerged, type)\n    };\n  }\n  static getCompKeys(frameworkOverrides, defObject, type, params) {\n    const {\n      propertyName\n    } = type;\n    let compName;\n    let jsComp;\n    let fwComp;\n    let paramsFromSelector;\n    let popupFromSelector;\n    let popupPositionFromSelector;\n    if (defObject) {\n      const defObjectAny = defObject;\n      const selectorFunc = defObjectAny[propertyName + \"Selector\"];\n      const selectorRes = selectorFunc ? selectorFunc(params) : null;\n      const assignComp = providedJsComp => {\n        if (typeof providedJsComp === \"string\") {\n          compName = providedJsComp;\n        } else if (providedJsComp != null && providedJsComp !== true) {\n          const isFwkComp = frameworkOverrides.isFrameworkComponent(providedJsComp);\n          if (isFwkComp) {\n            fwComp = providedJsComp;\n          } else {\n            jsComp = providedJsComp;\n          }\n        }\n      };\n      if (selectorRes) {\n        assignComp(selectorRes.component);\n        paramsFromSelector = selectorRes.params;\n        popupFromSelector = selectorRes.popup;\n        popupPositionFromSelector = selectorRes.popupPosition;\n      } else {\n        assignComp(defObjectAny[propertyName]);\n      }\n    }\n    return {\n      compName,\n      jsComp,\n      fwComp,\n      paramsFromSelector,\n      popupFromSelector,\n      popupPositionFromSelector\n    };\n  }\n  newAgStackInstance(ComponentClass, componentFromFramework, params, type) {\n    const propertyName = type.propertyName;\n    const jsComponent = !componentFromFramework;\n    let instance;\n    if (jsComponent) {\n      instance = new ComponentClass();\n    } else {\n      const thisComponentConfig = this.componentMetadataProvider.retrieve(propertyName);\n      instance = this.frameworkComponentWrapper.wrap(ComponentClass, thisComponentConfig.mandatoryMethodList, thisComponentConfig.optionalMethodList, type);\n    }\n    const deferredInit = this.initComponent(instance, params);\n    if (deferredInit == null) {\n      return AgPromise.resolve(instance);\n    }\n    return deferredInit.then(() => instance);\n  }\n  // used by Floating Filter\n  mergeParamsWithApplicationProvidedParams(defObject, type, paramsFromGrid, paramsFromSelector = null) {\n    const params = this.gos.getGridCommonParams();\n    _mergeDeep(params, paramsFromGrid);\n    const defObjectAny = defObject;\n    const userParams = defObjectAny && defObjectAny[type.propertyName + \"Params\"];\n    if (typeof userParams === \"function\") {\n      const userParamsFromFunc = userParams(paramsFromGrid);\n      _mergeDeep(params, userParamsFromFunc);\n    } else if (typeof userParams === \"object\") {\n      _mergeDeep(params, userParams);\n    }\n    _mergeDeep(params, paramsFromSelector);\n    return params;\n  }\n  initComponent(component, params) {\n    this.createBean(component);\n    if (component.init == null) {\n      return;\n    }\n    return component.init(params);\n  }\n};\n\n// community-modules/core/src/components/framework/unwrapUserComp.ts\nfunction _unwrapUserComp(comp) {\n  const compAsAny = comp;\n  const isProxy = compAsAny != null && compAsAny.getFrameworkComponentInstance != null;\n  return isProxy ? compAsAny.getFrameworkComponentInstance() : comp;\n}\n\n// community-modules/core/src/context/genericContext.ts\nvar GenericContext = class {\n  constructor(params) {\n    this.beans = {};\n    this.createdBeans = [];\n    this.destroyed = false;\n    if (!params || !params.beanClasses) {\n      return;\n    }\n    this.beanDestroyComparator = params.beanDestroyComparator;\n    this.init(params);\n  }\n  init(params) {\n    Object.entries(params.providedBeanInstances).forEach(([beanName, beanInstance]) => {\n      this.beans[beanName] = beanInstance;\n    });\n    params.beanClasses.forEach(BeanClass => {\n      const instance = new BeanClass();\n      if (instance.beanName) {\n        this.beans[instance.beanName] = instance;\n      } else {\n        console.error(`Bean ${BeanClass.name} is missing beanName`);\n      }\n      this.createdBeans.push(instance);\n    });\n    params.derivedBeans?.forEach(beanFunc => {\n      const {\n        beanName,\n        bean\n      } = beanFunc(this);\n      this.beans[beanName] = bean;\n      this.createdBeans.push(bean);\n    });\n    if (params.beanInitComparator) {\n      this.createdBeans.sort(params.beanInitComparator);\n    }\n    this.initBeans(this.createdBeans);\n  }\n  getBeanInstances() {\n    return Object.values(this.beans);\n  }\n  createBean(bean, afterPreCreateCallback) {\n    if (!bean) {\n      throw Error(`Can't wire to bean since it is null`);\n    }\n    this.initBeans([bean], afterPreCreateCallback);\n    return bean;\n  }\n  initBeans(beanInstances, afterPreCreateCallback) {\n    beanInstances.forEach(instance => {\n      instance.preWireBeans?.(this.beans);\n      instance.wireBeans?.(this.beans);\n    });\n    beanInstances.forEach(instance => instance.preConstruct?.());\n    if (afterPreCreateCallback) {\n      beanInstances.forEach(afterPreCreateCallback);\n    }\n    beanInstances.forEach(instance => instance.postConstruct?.());\n  }\n  getBeans() {\n    return this.beans;\n  }\n  getBean(name) {\n    return this.beans[name];\n  }\n  destroy() {\n    if (this.destroyed) {\n      return;\n    }\n    this.destroyed = true;\n    const beanInstances = this.getBeanInstances();\n    if (this.beanDestroyComparator) {\n      beanInstances.sort(this.beanDestroyComparator);\n    }\n    this.destroyBeans(beanInstances);\n    this.beans = {};\n    this.createdBeans = [];\n  }\n  /**\n   * Destroys a bean and returns undefined to support destruction and clean up in a single line.\n   * this.dateComp = this.context.destroyBean(this.dateComp);\n   */\n  destroyBean(bean) {\n    bean?.destroy?.();\n  }\n  /**\n   * Destroys an array of beans and returns an empty array to support destruction and clean up in a single line.\n   * this.dateComps = this.context.destroyBeans(this.dateComps);\n   */\n  destroyBeans(beans) {\n    if (beans) {\n      for (let i = 0; i < beans.length; i++) {\n        this.destroyBean(beans[i]);\n      }\n    }\n    return [];\n  }\n  isDestroyed() {\n    return this.destroyed;\n  }\n};\n\n// community-modules/core/src/context/context.ts\nvar Context = class extends GenericContext {\n  init(params) {\n    this.gridId = params.gridId;\n    this.beans.context = this;\n    super.init(params);\n  }\n  destroy() {\n    super.destroy();\n    ModuleRegistry.__unRegisterGridModules(this.gridId);\n  }\n  getGridId() {\n    return this.gridId;\n  }\n};\n\n// community-modules/core/src/interfaces/iExcelCreator.ts\nvar ExcelFactoryMode = /* @__PURE__ */(ExcelFactoryMode2 => {\n  ExcelFactoryMode2[ExcelFactoryMode2[\"SINGLE_SHEET\"] = 0] = \"SINGLE_SHEET\";\n  ExcelFactoryMode2[ExcelFactoryMode2[\"MULTI_SHEET\"] = 1] = \"MULTI_SHEET\";\n  return ExcelFactoryMode2;\n})(ExcelFactoryMode || {});\n\n// community-modules/core/src/constants/direction.ts\nvar VerticalDirection = /* @__PURE__ */(VerticalDirection2 => {\n  VerticalDirection2[VerticalDirection2[\"Up\"] = 0] = \"Up\";\n  VerticalDirection2[VerticalDirection2[\"Down\"] = 1] = \"Down\";\n  return VerticalDirection2;\n})(VerticalDirection || {});\nvar HorizontalDirection = /* @__PURE__ */(HorizontalDirection2 => {\n  HorizontalDirection2[HorizontalDirection2[\"Left\"] = 0] = \"Left\";\n  HorizontalDirection2[HorizontalDirection2[\"Right\"] = 1] = \"Right\";\n  return HorizontalDirection2;\n})(HorizontalDirection || {});\n\n// community-modules/core/src/dragAndDrop/dragAndDropService.ts\nvar DragSourceType = /* @__PURE__ */(DragSourceType2 => {\n  DragSourceType2[DragSourceType2[\"ToolPanel\"] = 0] = \"ToolPanel\";\n  DragSourceType2[DragSourceType2[\"HeaderCell\"] = 1] = \"HeaderCell\";\n  DragSourceType2[DragSourceType2[\"RowDrag\"] = 2] = \"RowDrag\";\n  DragSourceType2[DragSourceType2[\"ChartPanel\"] = 3] = \"ChartPanel\";\n  DragSourceType2[DragSourceType2[\"AdvancedFilterBuilder\"] = 4] = \"AdvancedFilterBuilder\";\n  return DragSourceType2;\n})(DragSourceType || {});\nvar GHOST_TEMPLATE = /* html */\n`<div class=\"ag-dnd-ghost ag-unselectable\">\n<span class=\"ag-dnd-ghost-icon ag-shake-left-to-right\"></span>\n<div class=\"ag-dnd-ghost-label\"></div>\n</div>`;\nvar DragAndDropService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dragAndDropService\";\n    this.dragSourceAndParamsList = [];\n    this.dropTargets = [];\n  }\n  wireBeans(beans) {\n    this.dragService = beans.dragService;\n    this.mouseEventService = beans.mouseEventService;\n    this.environment = beans.environment;\n  }\n  postConstruct() {\n    this.dropIconMap = {\n      pinned: _createIcon(\"columnMovePin\", this.gos, null),\n      hide: _createIcon(\"columnMoveHide\", this.gos, null),\n      move: _createIcon(\"columnMoveMove\", this.gos, null),\n      left: _createIcon(\"columnMoveLeft\", this.gos, null),\n      right: _createIcon(\"columnMoveRight\", this.gos, null),\n      group: _createIcon(\"columnMoveGroup\", this.gos, null),\n      aggregate: _createIcon(\"columnMoveValue\", this.gos, null),\n      pivot: _createIcon(\"columnMovePivot\", this.gos, null),\n      notAllowed: _createIcon(\"dropNotAllowed\", this.gos, null)\n    };\n  }\n  addDragSource(dragSource, allowTouch = false) {\n    const params = {\n      eElement: dragSource.eElement,\n      dragStartPixels: dragSource.dragStartPixels,\n      onDragStart: this.onDragStart.bind(this, dragSource),\n      onDragStop: this.onDragStop.bind(this),\n      onDragging: this.onDragging.bind(this),\n      includeTouch: allowTouch\n    };\n    this.dragSourceAndParamsList.push({\n      params,\n      dragSource\n    });\n    this.dragService.addDragSource(params);\n  }\n  removeDragSource(dragSource) {\n    const sourceAndParams = this.dragSourceAndParamsList.find(item => item.dragSource === dragSource);\n    if (sourceAndParams) {\n      this.dragService.removeDragSource(sourceAndParams.params);\n      _removeFromArray(this.dragSourceAndParamsList, sourceAndParams);\n    }\n  }\n  destroy() {\n    this.dragSourceAndParamsList.forEach(sourceAndParams => this.dragService.removeDragSource(sourceAndParams.params));\n    this.dragSourceAndParamsList.length = 0;\n    this.dropTargets.length = 0;\n    super.destroy();\n  }\n  nudge() {\n    if (this.dragging) {\n      this.onDragging(this.eventLastTime, true);\n    }\n  }\n  onDragStart(dragSource, mouseEvent) {\n    this.dragging = true;\n    this.dragSource = dragSource;\n    this.eventLastTime = mouseEvent;\n    this.dragItem = this.dragSource.getDragItem();\n    if (this.dragSource.onDragStarted) {\n      this.dragSource.onDragStarted();\n    }\n    this.createGhost();\n  }\n  onDragStop(mouseEvent) {\n    this.eventLastTime = null;\n    this.dragging = false;\n    if (this.dragSource.onDragStopped) {\n      this.dragSource.onDragStopped();\n    }\n    if (this.lastDropTarget && this.lastDropTarget.onDragStop) {\n      const draggingEvent = this.createDropTargetEvent(this.lastDropTarget, mouseEvent, null, null, false);\n      this.lastDropTarget.onDragStop(draggingEvent);\n    }\n    this.lastDropTarget = void 0;\n    this.dragItem = null;\n    this.removeGhost();\n  }\n  onDragging(mouseEvent, fromNudge) {\n    const hDirection = this.getHorizontalDirection(mouseEvent);\n    const vDirection = this.getVerticalDirection(mouseEvent);\n    this.eventLastTime = mouseEvent;\n    this.positionGhost(mouseEvent);\n    const validDropTargets = this.dropTargets.filter(target => this.isMouseOnDropTarget(mouseEvent, target));\n    const dropTarget = this.findCurrentDropTarget(mouseEvent, validDropTargets);\n    if (dropTarget !== this.lastDropTarget) {\n      this.leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge);\n      if (this.lastDropTarget !== null && dropTarget === null) {\n        this.dragSource.onGridExit?.(this.dragItem);\n      }\n      if (this.lastDropTarget === null && dropTarget !== null) {\n        this.dragSource.onGridEnter?.(this.dragItem);\n      }\n      this.enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      this.lastDropTarget = dropTarget;\n    } else if (dropTarget && dropTarget.onDragging) {\n      const draggingEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      dropTarget.onDragging(draggingEvent);\n    }\n  }\n  getAllContainersFromDropTarget(dropTarget) {\n    const secondaryContainers = dropTarget.getSecondaryContainers ? dropTarget.getSecondaryContainers() : null;\n    const containers = [[dropTarget.getContainer()]];\n    return secondaryContainers ? containers.concat(secondaryContainers) : containers;\n  }\n  allContainersIntersect(mouseEvent, containers) {\n    for (const container of containers) {\n      const rect = container.getBoundingClientRect();\n      if (rect.width === 0 || rect.height === 0) {\n        return false;\n      }\n      const horizontalFit = mouseEvent.clientX >= rect.left && mouseEvent.clientX < rect.right;\n      const verticalFit = mouseEvent.clientY >= rect.top && mouseEvent.clientY < rect.bottom;\n      if (!horizontalFit || !verticalFit) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // checks if the mouse is on the drop target. it checks eContainer and eSecondaryContainers\n  isMouseOnDropTarget(mouseEvent, dropTarget) {\n    const allContainersFromDropTarget = this.getAllContainersFromDropTarget(dropTarget);\n    let mouseOverTarget = false;\n    for (const currentContainers of allContainersFromDropTarget) {\n      if (this.allContainersIntersect(mouseEvent, currentContainers)) {\n        mouseOverTarget = true;\n        break;\n      }\n    }\n    if (dropTarget.targetContainsSource && !dropTarget.getContainer().contains(this.dragSource.eElement)) {\n      return false;\n    }\n    return mouseOverTarget && dropTarget.isInterestedIn(this.dragSource.type, this.dragSource.eElement);\n  }\n  findCurrentDropTarget(mouseEvent, validDropTargets) {\n    const len = validDropTargets.length;\n    if (len === 0) {\n      return null;\n    }\n    if (len === 1) {\n      return validDropTargets[0];\n    }\n    const rootNode = this.gos.getRootNode();\n    const elementStack = rootNode.elementsFromPoint(mouseEvent.clientX, mouseEvent.clientY);\n    for (const el of elementStack) {\n      for (const dropTarget of validDropTargets) {\n        const containers = _flatten(this.getAllContainersFromDropTarget(dropTarget));\n        if (containers.indexOf(el) !== -1) {\n          return dropTarget;\n        }\n      }\n    }\n    return null;\n  }\n  enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge) {\n    if (!dropTarget) {\n      return;\n    }\n    if (dropTarget.onDragEnter) {\n      const dragEnterEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      dropTarget.onDragEnter(dragEnterEvent);\n    }\n    this.setGhostIcon(dropTarget.getIconName ? dropTarget.getIconName() : null);\n  }\n  leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge) {\n    if (!this.lastDropTarget) {\n      return;\n    }\n    if (this.lastDropTarget.onDragLeave) {\n      const dragLeaveEvent = this.createDropTargetEvent(this.lastDropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      this.lastDropTarget.onDragLeave(dragLeaveEvent);\n    }\n    this.setGhostIcon(null);\n  }\n  addDropTarget(dropTarget) {\n    this.dropTargets.push(dropTarget);\n  }\n  removeDropTarget(dropTarget) {\n    this.dropTargets = this.dropTargets.filter(target => target.getContainer() !== dropTarget.getContainer());\n  }\n  hasExternalDropZones() {\n    return this.dropTargets.some(zones => zones.external);\n  }\n  findExternalZone(params) {\n    const externalTargets = this.dropTargets.filter(target => target.external);\n    return externalTargets.find(zone => zone.getContainer() === params.getContainer()) || null;\n  }\n  getHorizontalDirection(event) {\n    const clientX = this.eventLastTime && this.eventLastTime.clientX;\n    const eClientX = event.clientX;\n    if (clientX === eClientX) {\n      return null;\n    }\n    return clientX > eClientX ? 0 /* Left */ : 1 /* Right */;\n  }\n  getVerticalDirection(event) {\n    const clientY = this.eventLastTime && this.eventLastTime.clientY;\n    const eClientY = event.clientY;\n    if (clientY === eClientY) {\n      return null;\n    }\n    return clientY > eClientY ? 0 /* Up */ : 1 /* Down */;\n  }\n  createDropTargetEvent(dropTarget, event, hDirection, vDirection, fromNudge) {\n    const dropZoneTarget = dropTarget.getContainer();\n    const rect = dropZoneTarget.getBoundingClientRect();\n    const {\n      dragItem,\n      dragSource\n    } = this;\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    return this.gos.addGridCommonParams({\n      event,\n      x,\n      y,\n      vDirection,\n      hDirection,\n      dragSource,\n      fromNudge,\n      dragItem,\n      dropZoneTarget\n    });\n  }\n  positionGhost(event) {\n    const ghost = this.eGhost;\n    if (!ghost) {\n      return;\n    }\n    const ghostRect = ghost.getBoundingClientRect();\n    const ghostHeight = ghostRect.height;\n    const browserWidth = _getBodyWidth() - 2;\n    const browserHeight = _getBodyHeight() - 2;\n    const offsetParentSize = _getElementRectWithOffset(ghost.offsetParent);\n    const {\n      clientY,\n      clientX\n    } = event;\n    let top = clientY - offsetParentSize.top - ghostHeight / 2;\n    let left = clientX - offsetParentSize.left - 10;\n    const eDocument = this.gos.getDocument();\n    const win = eDocument.defaultView || window;\n    const windowScrollY = win.pageYOffset || eDocument.documentElement.scrollTop;\n    const windowScrollX = win.pageXOffset || eDocument.documentElement.scrollLeft;\n    if (browserWidth > 0 && left + ghost.clientWidth > browserWidth + windowScrollX) {\n      left = browserWidth + windowScrollX - ghost.clientWidth;\n    }\n    if (left < 0) {\n      left = 0;\n    }\n    if (browserHeight > 0 && top + ghost.clientHeight > browserHeight + windowScrollY) {\n      top = browserHeight + windowScrollY - ghost.clientHeight;\n    }\n    if (top < 0) {\n      top = 0;\n    }\n    ghost.style.left = `${left}px`;\n    ghost.style.top = `${top}px`;\n  }\n  removeGhost() {\n    if (this.eGhost && this.eGhostParent) {\n      this.eGhostParent.removeChild(this.eGhost);\n    }\n    this.eGhost = null;\n  }\n  createGhost() {\n    this.eGhost = _loadTemplate(GHOST_TEMPLATE);\n    this.mouseEventService.stampTopLevelGridCompWithGridInstance(this.eGhost);\n    this.environment.applyThemeClasses(this.eGhost);\n    this.eGhostIcon = this.eGhost.querySelector(\".ag-dnd-ghost-icon\");\n    this.setGhostIcon(null);\n    const eText = this.eGhost.querySelector(\".ag-dnd-ghost-label\");\n    let dragItemName = this.dragSource.dragItemName;\n    if (_isFunction(dragItemName)) {\n      dragItemName = dragItemName();\n    }\n    eText.innerHTML = _escapeString(dragItemName) || \"\";\n    this.eGhost.style.height = \"25px\";\n    this.eGhost.style.top = \"20px\";\n    this.eGhost.style.left = \"20px\";\n    const eDocument = this.gos.getDocument();\n    let rootNode = null;\n    let targetEl = null;\n    try {\n      rootNode = eDocument.fullscreenElement;\n    } catch (e) {} finally {\n      if (!rootNode) {\n        rootNode = this.gos.getRootNode();\n      }\n      const body = rootNode.querySelector(\"body\");\n      if (body) {\n        targetEl = body;\n      } else if (rootNode instanceof ShadowRoot) {\n        targetEl = rootNode;\n      } else if (rootNode instanceof Document) {\n        targetEl = rootNode?.documentElement;\n      } else {\n        targetEl = rootNode;\n      }\n    }\n    this.eGhostParent = targetEl;\n    if (!this.eGhostParent) {\n      _warnOnce(\"Could not find document body, it is needed for dragging columns\");\n    } else {\n      this.eGhostParent.appendChild(this.eGhost);\n    }\n  }\n  setGhostIcon(iconName, shake = false) {\n    _clearElement(this.eGhostIcon);\n    let eIcon = null;\n    if (!iconName) {\n      iconName = this.dragSource.getDefaultIconName ? this.dragSource.getDefaultIconName() : \"notAllowed\";\n    }\n    eIcon = this.dropIconMap[iconName];\n    this.eGhostIcon.classList.toggle(\"ag-shake-left-to-right\", shake);\n    if (eIcon === this.dropIconMap[\"hide\"] && this.gos.get(\"suppressDragLeaveHidesColumns\")) {\n      return;\n    }\n    if (eIcon) {\n      this.eGhostIcon.appendChild(eIcon);\n    }\n  }\n};\n\n// community-modules/core/src/autoScrollService.ts\nvar AutoScrollService = class {\n  constructor(params) {\n    this.tickingInterval = null;\n    this.onScrollCallback = null;\n    this.scrollContainer = params.scrollContainer;\n    this.scrollHorizontally = params.scrollAxis.indexOf(\"x\") !== -1;\n    this.scrollVertically = params.scrollAxis.indexOf(\"y\") !== -1;\n    this.scrollByTick = params.scrollByTick != null ? params.scrollByTick : 20;\n    if (params.onScrollCallback) {\n      this.onScrollCallback = params.onScrollCallback;\n    }\n    if (this.scrollVertically) {\n      this.getVerticalPosition = params.getVerticalPosition;\n      this.setVerticalPosition = params.setVerticalPosition;\n    }\n    if (this.scrollHorizontally) {\n      this.getHorizontalPosition = params.getHorizontalPosition;\n      this.setHorizontalPosition = params.setHorizontalPosition;\n    }\n    this.shouldSkipVerticalScroll = params.shouldSkipVerticalScroll || (() => false);\n    this.shouldSkipHorizontalScroll = params.shouldSkipHorizontalScroll || (() => false);\n  }\n  check(mouseEvent, forceSkipVerticalScroll = false) {\n    const skipVerticalScroll = forceSkipVerticalScroll || this.shouldSkipVerticalScroll();\n    if (skipVerticalScroll && this.shouldSkipHorizontalScroll()) {\n      return;\n    }\n    const rect = this.scrollContainer.getBoundingClientRect();\n    const scrollTick = this.scrollByTick;\n    this.tickLeft = mouseEvent.clientX < rect.left + scrollTick;\n    this.tickRight = mouseEvent.clientX > rect.right - scrollTick;\n    this.tickUp = mouseEvent.clientY < rect.top + scrollTick && !skipVerticalScroll;\n    this.tickDown = mouseEvent.clientY > rect.bottom - scrollTick && !skipVerticalScroll;\n    if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\n      this.ensureTickingStarted();\n    } else {\n      this.ensureCleared();\n    }\n  }\n  ensureTickingStarted() {\n    if (this.tickingInterval === null) {\n      this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\n      this.tickCount = 0;\n    }\n  }\n  doTick() {\n    this.tickCount++;\n    const tickAmount = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40;\n    if (this.scrollVertically) {\n      const vScrollPosition = this.getVerticalPosition();\n      if (this.tickUp) {\n        this.setVerticalPosition(vScrollPosition - tickAmount);\n      }\n      if (this.tickDown) {\n        this.setVerticalPosition(vScrollPosition + tickAmount);\n      }\n    }\n    if (this.scrollHorizontally) {\n      const hScrollPosition = this.getHorizontalPosition();\n      if (this.tickLeft) {\n        this.setHorizontalPosition(hScrollPosition - tickAmount);\n      }\n      if (this.tickRight) {\n        this.setHorizontalPosition(hScrollPosition + tickAmount);\n      }\n    }\n    if (this.onScrollCallback) {\n      this.onScrollCallback();\n    }\n  }\n  ensureCleared() {\n    if (this.tickingInterval) {\n      window.clearInterval(this.tickingInterval);\n      this.tickingInterval = null;\n    }\n  }\n};\n\n// community-modules/core/src/interfaces/iRowNode.ts\nvar RowHighlightPosition = /* @__PURE__ */(RowHighlightPosition2 => {\n  RowHighlightPosition2[RowHighlightPosition2[\"Above\"] = 0] = \"Above\";\n  RowHighlightPosition2[RowHighlightPosition2[\"Below\"] = 1] = \"Below\";\n  return RowHighlightPosition2;\n})(RowHighlightPosition || {});\n\n// community-modules/core/src/gridBodyComp/rowDragFeature.ts\nvar RowDragFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.dragAndDropService = beans.dragAndDropService;\n    this.rowModel = beans.rowModel;\n    this.pageBoundsService = beans.pageBoundsService;\n    this.focusService = beans.focusService;\n    this.sortController = beans.sortController;\n    this.filterManager = beans.filterManager;\n    this.selectionService = beans.selectionService;\n    this.mouseEventService = beans.mouseEventService;\n    this.ctrlsService = beans.ctrlsService;\n    this.funcColsService = beans.funcColsService;\n    this.rangeService = beans.rangeService;\n  }\n  constructor(eContainer) {\n    super();\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    if (this.gos.isRowModelType(\"clientSide\")) {\n      this.clientSideRowModel = this.rowModel;\n    }\n    this.ctrlsService.whenReady(p => {\n      const gridBodyCon = p.gridBodyCtrl;\n      this.autoScrollService = new AutoScrollService({\n        scrollContainer: gridBodyCon.getBodyViewportElement(),\n        scrollAxis: \"y\",\n        getVerticalPosition: () => gridBodyCon.getScrollFeature().getVScrollPosition().top,\n        setVerticalPosition: position => gridBodyCon.getScrollFeature().setVerticalScrollPosition(position),\n        onScrollCallback: () => {\n          this.onDragging(this.lastDraggingEvent);\n        }\n      });\n    });\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  isInterestedIn(type) {\n    return type === 2 /* RowDrag */;\n  }\n  getIconName() {\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    if (managedDrag && this.shouldPreventRowMove()) {\n      return \"notAllowed\";\n    }\n    return \"move\";\n  }\n  shouldPreventRowMove() {\n    const rowGroupCols = this.funcColsService.getRowGroupColumns();\n    if (rowGroupCols.length) {\n      return true;\n    }\n    const isFilterPresent = this.filterManager?.isAnyFilterPresent();\n    if (isFilterPresent) {\n      return true;\n    }\n    const isSortActive = this.sortController.isSortActive();\n    if (isSortActive) {\n      return true;\n    }\n    return false;\n  }\n  getRowNodes(draggingEvent) {\n    if (!this.isFromThisGrid(draggingEvent)) {\n      return draggingEvent.dragItem.rowNodes || [];\n    }\n    const currentNode = draggingEvent.dragItem.rowNode;\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\n    if (isRowDragMultiRow) {\n      const selectedNodes = [...this.selectionService.getSelectedNodes()].sort((a, b) => {\n        if (a.rowIndex == null || b.rowIndex == null) {\n          return 0;\n        }\n        return this.getRowIndexNumber(a) - this.getRowIndexNumber(b);\n      });\n      if (selectedNodes.indexOf(currentNode) !== -1) {\n        return selectedNodes;\n      }\n    }\n    return [currentNode];\n  }\n  onDragEnter(draggingEvent) {\n    draggingEvent.dragItem.rowNodes = this.getRowNodes(draggingEvent);\n    this.dispatchGridEvent(\"rowDragEnter\", draggingEvent);\n    this.getRowNodes(draggingEvent).forEach(rowNode => {\n      rowNode.setDragging(true);\n    });\n    this.onEnterOrDragging(draggingEvent);\n  }\n  onDragging(draggingEvent) {\n    this.onEnterOrDragging(draggingEvent);\n  }\n  isFromThisGrid(draggingEvent) {\n    const {\n      dragSourceDomDataKey\n    } = draggingEvent.dragSource;\n    return dragSourceDomDataKey === this.gos.getDomDataKey();\n  }\n  isDropZoneWithinThisGrid(draggingEvent) {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const gridGui = gridBodyCon.getGui();\n    const {\n      dropZoneTarget\n    } = draggingEvent;\n    return !gridGui.contains(dropZoneTarget);\n  }\n  onEnterOrDragging(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragMove\", draggingEvent);\n    this.lastDraggingEvent = draggingEvent;\n    const pixel = this.mouseEventService.getNormalisedPosition(draggingEvent).y;\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    if (managedDrag) {\n      this.doManagedDrag(draggingEvent, pixel);\n    }\n    this.autoScrollService.check(draggingEvent.event);\n  }\n  doManagedDrag(draggingEvent, pixel) {\n    const isFromThisGrid = this.isFromThisGrid(draggingEvent);\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    const rowNodes = draggingEvent.dragItem.rowNodes;\n    if (managedDrag && this.shouldPreventRowMove()) {\n      return;\n    }\n    if (this.gos.get(\"suppressMoveWhenRowDragging\") || !isFromThisGrid) {\n      if (!this.isDropZoneWithinThisGrid(draggingEvent)) {\n        this.clientSideRowModel.highlightRowAtPixel(rowNodes[0], pixel);\n      }\n    } else {\n      this.moveRows(rowNodes, pixel);\n    }\n  }\n  getRowIndexNumber(rowNode) {\n    const rowIndexStr = rowNode.getRowIndexString();\n    return parseInt(_last(rowIndexStr.split(\"-\")), 10);\n  }\n  moveRowAndClearHighlight(draggingEvent) {\n    const lastHighlightedRowNode = this.clientSideRowModel.getLastHighlightedRowNode();\n    const isBelow = lastHighlightedRowNode && lastHighlightedRowNode.highlighted === 1 /* Below */;\n    const pixel = this.mouseEventService.getNormalisedPosition(draggingEvent).y;\n    const rowNodes = draggingEvent.dragItem.rowNodes;\n    let increment = isBelow ? 1 : 0;\n    if (this.isFromThisGrid(draggingEvent)) {\n      rowNodes.forEach(rowNode => {\n        if (rowNode.rowTop < pixel) {\n          increment -= 1;\n        }\n      });\n      this.moveRows(rowNodes, pixel, increment);\n    } else {\n      const getRowIdFunc = this.gos.getRowIdCallback();\n      let addIndex = this.clientSideRowModel.getRowIndexAtPixel(pixel) + 1;\n      if (this.clientSideRowModel.getHighlightPosition(pixel) === 0 /* Above */) {\n        addIndex--;\n      }\n      this.clientSideRowModel.updateRowData({\n        add: rowNodes.filter(node => !this.clientSideRowModel.getRowNode(getRowIdFunc?.({\n          data: node.data,\n          level: 0,\n          rowPinned: node.rowPinned\n        }) ?? node.data.id)).map(node => node.data),\n        addIndex\n      });\n    }\n    this.clearRowHighlight();\n  }\n  clearRowHighlight() {\n    this.clientSideRowModel.highlightRowAtPixel(null);\n  }\n  moveRows(rowNodes, pixel, increment = 0) {\n    const rowWasMoved = this.clientSideRowModel.ensureRowsAtPixel(rowNodes, pixel, increment);\n    if (rowWasMoved) {\n      this.focusService.clearFocusedCell();\n      this.rangeService?.removeAllCellRanges();\n    }\n  }\n  addRowDropZone(params) {\n    if (!params.getContainer()) {\n      _warnOnce(\"addRowDropZone - A container target needs to be provided\");\n      return;\n    }\n    if (this.dragAndDropService.findExternalZone(params)) {\n      _warnOnce(\"addRowDropZone - target already exists in the list of DropZones. Use `removeRowDropZone` before adding it again.\");\n      return;\n    }\n    let processedParams = {\n      getContainer: params.getContainer\n    };\n    if (params.fromGrid) {\n      processedParams = params;\n    } else {\n      if (params.onDragEnter) {\n        processedParams.onDragEnter = e => {\n          params.onDragEnter(this.draggingToRowDragEvent(\"rowDragEnter\", e));\n        };\n      }\n      if (params.onDragLeave) {\n        processedParams.onDragLeave = e => {\n          params.onDragLeave(this.draggingToRowDragEvent(\"rowDragLeave\", e));\n        };\n      }\n      if (params.onDragging) {\n        processedParams.onDragging = e => {\n          params.onDragging(this.draggingToRowDragEvent(\"rowDragMove\", e));\n        };\n      }\n      if (params.onDragStop) {\n        processedParams.onDragStop = e => {\n          params.onDragStop(this.draggingToRowDragEvent(\"rowDragEnd\", e));\n        };\n      }\n    }\n    this.dragAndDropService.addDropTarget({\n      isInterestedIn: type => type === 2 /* RowDrag */,\n      getIconName: () => \"move\",\n      external: true,\n      ...processedParams\n    });\n  }\n  getRowDropZone(events) {\n    const getContainer = this.getContainer.bind(this);\n    const onDragEnter = this.onDragEnter.bind(this);\n    const onDragLeave = this.onDragLeave.bind(this);\n    const onDragging = this.onDragging.bind(this);\n    const onDragStop = this.onDragStop.bind(this);\n    if (!events) {\n      return {\n        getContainer,\n        onDragEnter,\n        onDragLeave,\n        onDragging,\n        onDragStop,\n        /* @private */\n        fromGrid: true\n      };\n    }\n    return {\n      getContainer,\n      onDragEnter: events.onDragEnter ? e => {\n        onDragEnter(e);\n        events.onDragEnter(this.draggingToRowDragEvent(\"rowDragEnter\", e));\n      } : onDragEnter,\n      onDragLeave: events.onDragLeave ? e => {\n        onDragLeave(e);\n        events.onDragLeave(this.draggingToRowDragEvent(\"rowDragLeave\", e));\n      } : onDragLeave,\n      onDragging: events.onDragging ? e => {\n        onDragging(e);\n        events.onDragging(this.draggingToRowDragEvent(\"rowDragMove\", e));\n      } : onDragging,\n      onDragStop: events.onDragStop ? e => {\n        onDragStop(e);\n        events.onDragStop(this.draggingToRowDragEvent(\"rowDragEnd\", e));\n      } : onDragStop,\n      fromGrid: true\n    };\n  }\n  draggingToRowDragEvent(type, draggingEvent) {\n    const yNormalised = this.mouseEventService.getNormalisedPosition(draggingEvent).y;\n    const mouseIsPastLastRow = yNormalised > this.pageBoundsService.getCurrentPageHeight();\n    let overIndex = -1;\n    let overNode;\n    if (!mouseIsPastLastRow) {\n      overIndex = this.rowModel.getRowIndexAtPixel(yNormalised);\n      overNode = this.rowModel.getRow(overIndex);\n    }\n    let vDirectionString;\n    switch (draggingEvent.vDirection) {\n      case 1 /* Down */:\n        vDirectionString = \"down\";\n        break;\n      case 0 /* Up */:\n        vDirectionString = \"up\";\n        break;\n      default:\n        vDirectionString = null;\n        break;\n    }\n    const event = this.gos.addGridCommonParams({\n      type,\n      event: draggingEvent.event,\n      node: draggingEvent.dragItem.rowNode,\n      nodes: draggingEvent.dragItem.rowNodes,\n      overIndex,\n      overNode,\n      y: yNormalised,\n      vDirection: vDirectionString\n    });\n    return event;\n  }\n  dispatchGridEvent(type, draggingEvent) {\n    const event = this.draggingToRowDragEvent(type, draggingEvent);\n    this.eventService.dispatchEvent(event);\n  }\n  onDragLeave(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragLeave\", draggingEvent);\n    this.stopDragging(draggingEvent);\n    if (this.gos.get(\"rowDragManaged\")) {\n      this.clearRowHighlight();\n    }\n  }\n  onDragStop(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragEnd\", draggingEvent);\n    this.stopDragging(draggingEvent);\n    if (this.gos.get(\"rowDragManaged\") && (this.gos.get(\"suppressMoveWhenRowDragging\") || !this.isFromThisGrid(draggingEvent)) && !this.isDropZoneWithinThisGrid(draggingEvent)) {\n      this.moveRowAndClearHighlight(draggingEvent);\n    }\n  }\n  stopDragging(draggingEvent) {\n    this.autoScrollService.ensureCleared();\n    this.getRowNodes(draggingEvent).forEach(rowNode => {\n      rowNode.setDragging(false);\n    });\n  }\n};\n\n// community-modules/core/src/dragAndDrop/dragService.ts\nvar DragService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dragService\";\n    this.dragEndFunctions = [];\n    this.dragSources = [];\n  }\n  wireBeans(beans) {\n    this.mouseEventService = beans.mouseEventService;\n  }\n  destroy() {\n    this.dragSources.forEach(this.removeListener.bind(this));\n    this.dragSources.length = 0;\n    super.destroy();\n  }\n  removeListener(dragSourceAndListener) {\n    const element = dragSourceAndListener.dragSource.eElement;\n    const mouseDownListener = dragSourceAndListener.mouseDownListener;\n    element.removeEventListener(\"mousedown\", mouseDownListener);\n    if (dragSourceAndListener.touchEnabled) {\n      const touchStartListener = dragSourceAndListener.touchStartListener;\n      element.removeEventListener(\"touchstart\", touchStartListener, {\n        passive: true\n      });\n    }\n  }\n  removeDragSource(params) {\n    const dragSourceAndListener = this.dragSources.find(item => item.dragSource === params);\n    if (!dragSourceAndListener) {\n      return;\n    }\n    this.removeListener(dragSourceAndListener);\n    _removeFromArray(this.dragSources, dragSourceAndListener);\n  }\n  isDragging() {\n    return this.dragging;\n  }\n  addDragSource(params) {\n    const mouseListener = this.onMouseDown.bind(this, params);\n    const {\n      eElement,\n      includeTouch,\n      stopPropagationForTouch\n    } = params;\n    eElement.addEventListener(\"mousedown\", mouseListener);\n    let touchListener = null;\n    const suppressTouch = this.gos.get(\"suppressTouch\");\n    if (includeTouch && !suppressTouch) {\n      touchListener = touchEvent => {\n        if (_isFocusableFormField(touchEvent.target)) {\n          return;\n        }\n        if (touchEvent.cancelable) {\n          touchEvent.preventDefault();\n          if (stopPropagationForTouch) {\n            touchEvent.stopPropagation();\n          }\n        }\n        this.onTouchStart(params, touchEvent);\n      };\n      eElement.addEventListener(\"touchstart\", touchListener, {\n        passive: false\n      });\n    }\n    this.dragSources.push({\n      dragSource: params,\n      mouseDownListener: mouseListener,\n      touchStartListener: touchListener,\n      touchEnabled: !!includeTouch\n    });\n  }\n  getStartTarget() {\n    return this.startTarget;\n  }\n  // gets called whenever mouse down on any drag source\n  onTouchStart(params, touchEvent) {\n    this.currentDragParams = params;\n    this.dragging = false;\n    const touch = touchEvent.touches[0];\n    this.touchLastTime = touch;\n    this.touchStart = touch;\n    const touchMoveEvent = e => this.onTouchMove(e, params.eElement);\n    const touchEndEvent = e => this.onTouchUp(e, params.eElement);\n    const documentTouchMove = e => {\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n    };\n    const target = touchEvent.target;\n    const events = [\n    // Prevents the page document from moving while we are dragging items around.\n    // preventDefault needs to be called in the touchmove listener and never inside the\n    // touchstart, because using touchstart causes the click event to be cancelled on touch devices.\n    {\n      target: this.gos.getRootNode(),\n      type: \"touchmove\",\n      listener: documentTouchMove,\n      options: {\n        passive: false\n      }\n    }, {\n      target,\n      type: \"touchmove\",\n      listener: touchMoveEvent,\n      options: {\n        passive: true\n      }\n    }, {\n      target,\n      type: \"touchend\",\n      listener: touchEndEvent,\n      options: {\n        passive: true\n      }\n    }, {\n      target,\n      type: \"touchcancel\",\n      listener: touchEndEvent,\n      options: {\n        passive: true\n      }\n    }];\n    this.addTemporaryEvents(events);\n    if (params.dragStartPixels === 0) {\n      this.onCommonMove(touch, this.touchStart, params.eElement);\n    }\n  }\n  // gets called whenever mouse down on any drag source\n  onMouseDown(params, mouseEvent) {\n    const e = mouseEvent;\n    if (params.skipMouseEvent && params.skipMouseEvent(mouseEvent)) {\n      return;\n    }\n    if (e._alreadyProcessedByDragService) {\n      return;\n    }\n    e._alreadyProcessedByDragService = true;\n    if (mouseEvent.button !== 0) {\n      return;\n    }\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\n      mouseEvent.preventDefault();\n    }\n    this.currentDragParams = params;\n    this.dragging = false;\n    this.mouseStartEvent = mouseEvent;\n    this.startTarget = mouseEvent.target;\n    const mouseMoveEvent = event => this.onMouseMove(event, params.eElement);\n    const mouseUpEvent = event => this.onMouseUp(event, params.eElement);\n    const contextEvent = event => event.preventDefault();\n    const target = this.gos.getRootNode();\n    const events = [{\n      target,\n      type: \"mousemove\",\n      listener: mouseMoveEvent\n    }, {\n      target,\n      type: \"mouseup\",\n      listener: mouseUpEvent\n    }, {\n      target,\n      type: \"contextmenu\",\n      listener: contextEvent\n    }];\n    this.addTemporaryEvents(events);\n    if (params.dragStartPixels === 0) {\n      this.onMouseMove(mouseEvent, params.eElement);\n    }\n  }\n  addTemporaryEvents(events) {\n    events.forEach(currentEvent => {\n      const {\n        target,\n        type,\n        listener,\n        options\n      } = currentEvent;\n      target.addEventListener(type, listener, options);\n    });\n    this.dragEndFunctions.push(() => {\n      events.forEach(currentEvent => {\n        const {\n          target,\n          type,\n          listener,\n          options\n        } = currentEvent;\n        target.removeEventListener(type, listener, options);\n      });\n    });\n  }\n  // returns true if the event is close to the original event by X pixels either vertically or horizontally.\n  // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n  isEventNearStartEvent(currentEvent, startEvent) {\n    const {\n      dragStartPixels\n    } = this.currentDragParams;\n    const requiredPixelDiff = _exists(dragStartPixels) ? dragStartPixels : 4;\n    return _areEventsNear(currentEvent, startEvent, requiredPixelDiff);\n  }\n  getFirstActiveTouch(touchList) {\n    for (let i = 0; i < touchList.length; i++) {\n      if (touchList[i].identifier === this.touchStart.identifier) {\n        return touchList[i];\n      }\n    }\n    return null;\n  }\n  onCommonMove(currentEvent, startEvent, el) {\n    if (!this.dragging) {\n      if (!this.dragging && this.isEventNearStartEvent(currentEvent, startEvent)) {\n        return;\n      }\n      this.dragging = true;\n      const event = {\n        type: \"dragStarted\",\n        target: el\n      };\n      this.eventService.dispatchEvent(event);\n      this.currentDragParams.onDragStart(startEvent);\n      this.currentDragParams.onDragging(startEvent);\n    }\n    this.currentDragParams.onDragging(currentEvent);\n  }\n  onTouchMove(touchEvent, el) {\n    const touch = this.getFirstActiveTouch(touchEvent.touches);\n    if (!touch) {\n      return;\n    }\n    this.onCommonMove(touch, this.touchStart, el);\n  }\n  // only gets called after a mouse down - as this is only added after mouseDown\n  // and is removed when mouseUp happens\n  onMouseMove(mouseEvent, el) {\n    if (_isBrowserSafari()) {\n      const eDocument = this.gos.getDocument();\n      eDocument.getSelection()?.removeAllRanges();\n    }\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\n      mouseEvent.preventDefault();\n    }\n    this.onCommonMove(mouseEvent, this.mouseStartEvent, el);\n  }\n  shouldPreventMouseEvent(mouseEvent) {\n    const isEnableCellTextSelect = this.gos.get(\"enableCellTextSelection\");\n    const isMouseMove = mouseEvent.type === \"mousemove\";\n    return (\n      // when `isEnableCellTextSelect` is `true`, we need to preventDefault on mouseMove\n      // to avoid the grid text being selected while dragging components.\n      isEnableCellTextSelect && isMouseMove && mouseEvent.cancelable && this.mouseEventService.isEventFromThisGrid(mouseEvent) && !this.isOverFormFieldElement(mouseEvent)\n    );\n  }\n  isOverFormFieldElement(mouseEvent) {\n    const el = mouseEvent.target;\n    const tagName = el?.tagName.toLocaleLowerCase();\n    return !!tagName?.match(\"^a$|textarea|input|select|button\");\n  }\n  onTouchUp(touchEvent, el) {\n    let touch = this.getFirstActiveTouch(touchEvent.changedTouches);\n    if (!touch) {\n      touch = this.touchLastTime;\n    }\n    this.onUpCommon(touch, el);\n  }\n  onMouseUp(mouseEvent, el) {\n    this.onUpCommon(mouseEvent, el);\n  }\n  onUpCommon(eventOrTouch, el) {\n    if (this.dragging) {\n      this.dragging = false;\n      this.currentDragParams.onDragStop(eventOrTouch);\n      const event = {\n        type: \"dragStopped\",\n        target: el\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    this.mouseStartEvent = null;\n    this.startTarget = null;\n    this.touchStart = null;\n    this.touchLastTime = null;\n    this.currentDragParams = null;\n    this.dragEndFunctions.forEach(func => func());\n    this.dragEndFunctions.length = 0;\n  }\n};\n\n// community-modules/core/src/rendering/row/rowDragComp.ts\nvar RowDragComp = class extends Component {\n  constructor(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange) {\n    super();\n    this.cellValueFn = cellValueFn;\n    this.rowNode = rowNode;\n    this.column = column;\n    this.customGui = customGui;\n    this.dragStartPixels = dragStartPixels;\n    this.suppressVisibilityChange = suppressVisibilityChange;\n    this.dragSource = null;\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  isCustomGui() {\n    return this.customGui != null;\n  }\n  postConstruct() {\n    if (!this.customGui) {\n      this.setTemplate( /* html */\n      `<div class=\"ag-drag-handle ag-row-drag\" aria-hidden=\"true\"></div>`);\n      this.getGui().appendChild(_createIconNoSpan(\"rowDrag\", this.gos, null));\n      this.addDragSource();\n    } else {\n      this.setDragElement(this.customGui, this.dragStartPixels);\n    }\n    this.checkCompatibility();\n    if (!this.suppressVisibilityChange) {\n      const strategy = this.gos.get(\"rowDragManaged\") ? new ManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column) : new NonManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column);\n      this.createManagedBean(strategy, this.beans.context);\n    }\n  }\n  setDragElement(dragElement, dragStartPixels) {\n    this.setTemplateFromElement(dragElement);\n    this.addDragSource(dragStartPixels);\n  }\n  getSelectedNodes() {\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\n    if (!isRowDragMultiRow) {\n      return [this.rowNode];\n    }\n    const selection = this.beans.selectionService.getSelectedNodes();\n    return selection.indexOf(this.rowNode) !== -1 ? selection : [this.rowNode];\n  }\n  // returns true if all compatibility items work out\n  checkCompatibility() {\n    const managed = this.gos.get(\"rowDragManaged\");\n    const treeData = this.gos.get(\"treeData\");\n    if (treeData && managed) {\n      _warnOnce(\"If using row drag with tree data, you cannot have rowDragManaged=true\");\n    }\n  }\n  getDragItem() {\n    return {\n      rowNode: this.rowNode,\n      rowNodes: this.getSelectedNodes(),\n      columns: this.column ? [this.column] : void 0,\n      defaultTextValue: this.cellValueFn()\n    };\n  }\n  getRowDragText(column) {\n    if (column) {\n      const colDef = column.getColDef();\n      if (colDef.rowDragText) {\n        return colDef.rowDragText;\n      }\n    }\n    return this.gos.get(\"rowDragText\");\n  }\n  addDragSource(dragStartPixels = 4) {\n    if (this.dragSource) {\n      this.removeDragSource();\n    }\n    const eGui = this.getGui();\n    if (this.gos.get(\"enableCellTextSelection\")) {\n      this.removeMouseDownListener();\n      this.mouseDownListener = this.addManagedElementListeners(eGui, {\n        mousedown: e => {\n          e?.preventDefault();\n        }\n      })[0];\n    }\n    const translate = this.localeService.getLocaleTextFunc();\n    this.dragSource = {\n      type: 2 /* RowDrag */,\n      eElement: eGui,\n      dragItemName: () => {\n        const dragItem = this.getDragItem();\n        const dragItemCount = dragItem.rowNodes?.length || 1;\n        const rowDragText = this.getRowDragText(this.column);\n        if (rowDragText) {\n          return rowDragText(dragItem, dragItemCount);\n        }\n        return dragItemCount === 1 ? this.cellValueFn() : `${dragItemCount} ${translate(\"rowDragRows\", \"rows\")}`;\n      },\n      getDragItem: () => this.getDragItem(),\n      dragStartPixels,\n      dragSourceDomDataKey: this.gos.getDomDataKey()\n    };\n    this.beans.dragAndDropService.addDragSource(this.dragSource, true);\n  }\n  destroy() {\n    this.removeDragSource();\n    this.removeMouseDownListener();\n    super.destroy();\n  }\n  removeDragSource() {\n    if (!this.dragSource) {\n      return;\n    }\n    this.beans.dragAndDropService.removeDragSource(this.dragSource);\n    this.dragSource = null;\n  }\n  removeMouseDownListener() {\n    if (!this.mouseDownListener) {\n      return;\n    }\n    this.mouseDownListener();\n    this.mouseDownListener = void 0;\n  }\n};\nvar VisibilityStrategy = class extends BeanStub {\n  constructor(parent, rowNode, column) {\n    super();\n    this.parent = parent;\n    this.rowNode = rowNode;\n    this.column = column;\n  }\n  setDisplayedOrVisible(neverDisplayed) {\n    const displayedOptions = {\n      skipAriaHidden: true\n    };\n    if (neverDisplayed) {\n      this.parent.setDisplayed(false, displayedOptions);\n    } else {\n      let shown = true;\n      let isShownSometimes = false;\n      if (this.column) {\n        shown = this.column.isRowDrag(this.rowNode) || this.parent.isCustomGui();\n        isShownSometimes = _isFunction(this.column.getColDef().rowDrag);\n      }\n      if (isShownSometimes) {\n        this.parent.setDisplayed(true, displayedOptions);\n        this.parent.setVisible(shown, displayedOptions);\n      } else {\n        this.parent.setDisplayed(shown, displayedOptions);\n        this.parent.setVisible(true, displayedOptions);\n      }\n    }\n  }\n};\nvar NonManagedVisibilityStrategy = class extends VisibilityStrategy {\n  constructor(parent, beans, rowNode, column) {\n    super(parent, rowNode, column);\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\n    const listener = this.workOutVisibility.bind(this);\n    this.addManagedListeners(this.rowNode, {\n      dataChanged: listener,\n      cellChanged: listener\n    });\n    this.addManagedListeners(this.beans.eventService, {\n      newColumnsLoaded: listener\n    });\n    this.workOutVisibility();\n  }\n  onSuppressRowDrag() {\n    this.workOutVisibility();\n  }\n  workOutVisibility() {\n    const neverDisplayed = this.gos.get(\"suppressRowDrag\");\n    this.setDisplayedOrVisible(neverDisplayed);\n  }\n};\nvar ManagedVisibilityStrategy = class extends VisibilityStrategy {\n  constructor(parent, beans, rowNode, column) {\n    super(parent, rowNode, column);\n    this.beans = beans;\n  }\n  postConstruct() {\n    const listener = this.workOutVisibility.bind(this);\n    this.addManagedListeners(this.beans.eventService, {\n      sortChanged: listener,\n      filterChanged: listener,\n      columnRowGroupChanged: listener,\n      newColumnsLoaded: listener\n    });\n    this.addManagedListeners(this.rowNode, {\n      dataChanged: listener,\n      cellChanged: listener\n    });\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\n    this.workOutVisibility();\n  }\n  onSuppressRowDrag() {\n    this.workOutVisibility();\n  }\n  workOutVisibility() {\n    const gridBodyCon = this.beans.ctrlsService.getGridBodyCtrl();\n    const rowDragFeature = gridBodyCon.getRowDragFeature();\n    const shouldPreventRowMove = rowDragFeature && rowDragFeature.shouldPreventRowMove();\n    const suppressRowDrag = this.gos.get(\"suppressRowDrag\");\n    const hasExternalDropZones = this.beans.dragAndDropService.hasExternalDropZones();\n    const neverDisplayed = shouldPreventRowMove && !hasExternalDropZones || suppressRowDrag;\n    this.setDisplayedOrVisible(neverDisplayed);\n  }\n};\n\n// community-modules/core/src/entities/rowNode.ts\nvar _RowNode = /*#__PURE__*/(() => {\n  let _RowNode = class _RowNode {\n    constructor(beans) {\n      /** The current row index. If the row is filtered out or in a collapsed group, this value will be `null`. */\n      this.rowIndex = null;\n      /** The key for the group eg Ireland, UK, USA */\n      this.key = null;\n      /** Children mapped by the pivot columns. */\n      this.childrenMapped = {};\n      /**\n       * This will be `true` if it has a rowIndex assigned, otherwise `false`.\n       */\n      this.displayed = false;\n      /** The row top position in pixels. */\n      this.rowTop = null;\n      /** The top pixel for this row last time, makes sense if data set was ordered or filtered,\n       * it is used so new rows can animate in from their old position. */\n      this.oldRowTop = null;\n      /** `true` by default - can be overridden via gridOptions.isRowSelectable(rowNode) */\n      this.selectable = true;\n      /** Used by sorting service - to give deterministic sort to groups. Previously we\n       * just id for this, however id is a string and had slower sorting compared to numbers. */\n      this.__objectId = _RowNode.OBJECT_ID_SEQUENCE++;\n      /** When one or more Columns are using autoHeight, this keeps track of height of each autoHeight Cell,\n       * indexed by the Column ID. */\n      this.__autoHeights = {};\n      /** `true` when nodes with the same id are being removed and added as part of the same batch transaction */\n      this.alreadyRendered = false;\n      this.highlighted = null;\n      this.hovered = false;\n      this.selected = false;\n      this.beans = beans;\n    }\n    /**\n     * Replaces the data on the `rowNode`. When this method is called, the grid will refresh the entire rendered row if it is displayed.\n     */\n    setData(data) {\n      this.setDataCommon(data, false);\n    }\n    // similar to setRowData, however it is expected that the data is the same data item. this\n    // is intended to be used with Redux type stores, where the whole data can be changed. we are\n    // guaranteed that the data is the same entity (so grid doesn't need to worry about the id of the\n    // underlying data changing, hence doesn't need to worry about selection). the grid, upon receiving\n    // dataChanged event, will refresh the cells rather than rip them all out (so user can show transitions).\n    /**\n     * Updates the data on the `rowNode`. When this method is called, the grid will refresh the entire rendered row if it is displayed.\n     */\n    updateData(data) {\n      this.setDataCommon(data, true);\n    }\n    setDataCommon(data, update) {\n      const oldData = this.data;\n      this.data = data;\n      this.beans.valueCache.onDataChanged();\n      this.updateDataOnDetailNode();\n      this.checkRowSelectable();\n      this.resetQuickFilterAggregateText();\n      const event = this.createDataChangedEvent(data, oldData, update);\n      this.localEventService?.dispatchEvent(event);\n    }\n    // when we are doing master / detail, the detail node is lazy created, but then kept around.\n    // so if we show / hide the detail, the same detail rowNode is used. so we need to keep the data\n    // in sync, otherwise expand/collapse of the detail would still show the old values.\n    updateDataOnDetailNode() {\n      if (this.detailNode) {\n        this.detailNode.data = this.data;\n      }\n    }\n    createDataChangedEvent(newData, oldData, update) {\n      return {\n        type: \"dataChanged\",\n        node: this,\n        oldData,\n        newData,\n        update\n      };\n    }\n    getRowIndexString() {\n      if (this.rowIndex == null) {\n        _errorOnce(\"Could not find rowIndex, this means tasks are being executed on a rowNode that has been removed from the grid.\");\n        return null;\n      }\n      if (this.rowPinned === \"top\") {\n        return \"t-\" + this.rowIndex;\n      }\n      if (this.rowPinned === \"bottom\") {\n        return \"b-\" + this.rowIndex;\n      }\n      return this.rowIndex.toString();\n    }\n    createDaemonNode() {\n      const oldNode = new _RowNode(this.beans);\n      oldNode.id = this.id;\n      oldNode.data = this.data;\n      oldNode.__daemon = true;\n      oldNode.selected = this.selected;\n      oldNode.level = this.level;\n      return oldNode;\n    }\n    setDataAndId(data, id) {\n      const oldNode = _exists(this.id) ? this.createDaemonNode() : null;\n      const oldData = this.data;\n      this.data = data;\n      this.updateDataOnDetailNode();\n      this.setId(id);\n      this.checkRowSelectable();\n      this.beans.selectionService.syncInRowNode(this, oldNode);\n      const event = this.createDataChangedEvent(data, oldData, false);\n      this.localEventService?.dispatchEvent(event);\n    }\n    checkRowSelectable() {\n      const isRowSelectableFunc = this.beans.gos.get(\"isRowSelectable\");\n      this.setRowSelectable(isRowSelectableFunc ? isRowSelectableFunc(this) : true);\n    }\n    setRowSelectable(newVal, suppressSelectionUpdate) {\n      if (this.selectable !== newVal) {\n        this.selectable = newVal;\n        this.dispatchRowEvent(\"selectableChanged\");\n        if (suppressSelectionUpdate) {\n          return;\n        }\n        const isGroupSelectsChildren = this.beans.gos.get(\"groupSelectsChildren\");\n        if (isGroupSelectsChildren) {\n          const selected = this.calculateSelectedFromChildren();\n          this.setSelectedParams({\n            newValue: selected ?? false,\n            source: \"selectableChanged\"\n          });\n          return;\n        }\n        if (this.isSelected() && !this.selectable) {\n          this.setSelectedParams({\n            newValue: false,\n            source: \"selectableChanged\"\n          });\n        }\n      }\n    }\n    setId(id) {\n      const getRowIdFunc = this.beans.gos.getRowIdCallback();\n      if (getRowIdFunc) {\n        if (this.data) {\n          const parentKeys = this.getGroupKeys(true);\n          this.id = getRowIdFunc({\n            data: this.data,\n            parentKeys: parentKeys.length > 0 ? parentKeys : void 0,\n            level: this.level,\n            rowPinned: this.rowPinned\n          });\n          if (this.id.startsWith(_RowNode.ID_PREFIX_ROW_GROUP)) {\n            _errorOnce(`Row IDs cannot start with ${_RowNode.ID_PREFIX_ROW_GROUP}, this is a reserved prefix for AG Grid's row grouping feature.`);\n          }\n        } else {\n          this.id = void 0;\n        }\n      } else {\n        this.id = id;\n      }\n    }\n    getGroupKeys(excludeSelf = false) {\n      const keys = [];\n      let pointer = this;\n      if (excludeSelf) {\n        pointer = pointer.parent;\n      }\n      while (pointer && pointer.level >= 0) {\n        keys.push(pointer.key);\n        pointer = pointer.parent;\n      }\n      keys.reverse();\n      return keys;\n    }\n    isPixelInRange(pixel) {\n      if (!_exists(this.rowTop) || !_exists(this.rowHeight)) {\n        return false;\n      }\n      return pixel >= this.rowTop && pixel < this.rowTop + this.rowHeight;\n    }\n    updateIfDifferent(key, value, eventName) {\n      if (this[key] === value) {\n        return;\n      }\n      this[key] = value;\n      this.dispatchRowEvent(eventName);\n    }\n    setFirstChild(firstChild) {\n      this.updateIfDifferent(\"firstChild\", firstChild, \"firstChildChanged\");\n    }\n    setLastChild(lastChild) {\n      this.updateIfDifferent(\"lastChild\", lastChild, \"lastChildChanged\");\n    }\n    setChildIndex(childIndex) {\n      this.updateIfDifferent(\"childIndex\", childIndex, \"childIndexChanged\");\n    }\n    setRowTop(rowTop) {\n      this.oldRowTop = this.rowTop;\n      if (this.rowTop === rowTop) {\n        return;\n      }\n      this.rowTop = rowTop;\n      this.dispatchRowEvent(\"topChanged\");\n      this.setDisplayed(rowTop !== null);\n    }\n    clearRowTopAndRowIndex() {\n      this.oldRowTop = null;\n      this.setRowTop(null);\n      this.setRowIndex(null);\n    }\n    setDisplayed(displayed) {\n      this.updateIfDifferent(\"displayed\", displayed, \"displayedChanged\");\n    }\n    setDragging(dragging) {\n      this.updateIfDifferent(\"dragging\", dragging, \"draggingChanged\");\n    }\n    setHighlighted(highlighted) {\n      this.updateIfDifferent(\"highlighted\", highlighted, \"rowHighlightChanged\");\n    }\n    setHovered(hovered) {\n      if (this.hovered === hovered) {\n        return;\n      }\n      this.hovered = hovered;\n    }\n    isHovered() {\n      return this.hovered;\n    }\n    setAllChildrenCount(allChildrenCount) {\n      this.updateIfDifferent(\"allChildrenCount\", allChildrenCount, \"allChildrenCountChanged\");\n    }\n    setMaster(master) {\n      if (this.master === master) {\n        return;\n      }\n      if (this.master && !master) {\n        this.expanded = false;\n      }\n      this.master = master;\n      this.dispatchRowEvent(\"masterChanged\");\n    }\n    setGroup(group) {\n      if (this.group === group) {\n        return;\n      }\n      if (this.group && !group) {\n        this.expanded = false;\n      }\n      this.group = group;\n      this.updateHasChildren();\n      this.checkRowSelectable();\n      this.dispatchRowEvent(\"groupChanged\");\n    }\n    /**\n     * Sets the row height.\n     * Call if you want to change the height initially assigned to the row.\n     * After calling, you must call `api.onRowHeightChanged()` so the grid knows it needs to work out the placement of the rows. */\n    setRowHeight(rowHeight, estimated = false) {\n      this.rowHeight = rowHeight;\n      this.rowHeightEstimated = estimated;\n      this.dispatchRowEvent(\"heightChanged\");\n    }\n    setRowAutoHeight(cellHeight, column) {\n      if (!this.__autoHeights) {\n        this.__autoHeights = {};\n      }\n      this.__autoHeights[column.getId()] = cellHeight;\n      if (cellHeight != null) {\n        if (this.checkAutoHeightsDebounced == null) {\n          this.checkAutoHeightsDebounced = _debounce(this.checkAutoHeights.bind(this), 1);\n        }\n        this.checkAutoHeightsDebounced();\n      }\n    }\n    checkAutoHeights() {\n      let notAllPresent = false;\n      let nonePresent = true;\n      let newRowHeight = 0;\n      const autoHeights = this.__autoHeights;\n      if (autoHeights == null) {\n        return;\n      }\n      const displayedAutoHeightCols = this.beans.visibleColsService.getAllAutoHeightCols();\n      displayedAutoHeightCols.forEach(col => {\n        let cellHeight = autoHeights[col.getId()];\n        if (cellHeight == null) {\n          if (this.beans.columnModel.isColSpanActive()) {\n            let activeColsForRow = [];\n            switch (col.getPinned()) {\n              case \"left\":\n                activeColsForRow = this.beans.visibleColsService.getLeftColsForRow(this);\n                break;\n              case \"right\":\n                activeColsForRow = this.beans.visibleColsService.getRightColsForRow(this);\n                break;\n              case null:\n                activeColsForRow = this.beans.columnViewportService.getColsWithinViewport(this);\n                break;\n            }\n            if (activeColsForRow.includes(col)) {\n              notAllPresent = true;\n              return;\n            }\n            cellHeight = -1;\n          } else {\n            notAllPresent = true;\n            return;\n          }\n        } else {\n          nonePresent = false;\n        }\n        if (cellHeight > newRowHeight) {\n          newRowHeight = cellHeight;\n        }\n      });\n      if (notAllPresent) {\n        return;\n      }\n      if (nonePresent || newRowHeight < 10) {\n        newRowHeight = this.beans.gos.getRowHeightForNode(this).height;\n      }\n      if (newRowHeight == this.rowHeight) {\n        return;\n      }\n      this.setRowHeight(newRowHeight);\n      const rowModel = this.beans.rowModel;\n      if (rowModel.onRowHeightChangedDebounced) {\n        rowModel.onRowHeightChangedDebounced();\n      }\n    }\n    setRowIndex(rowIndex) {\n      this.updateIfDifferent(\"rowIndex\", rowIndex, \"rowIndexChanged\");\n    }\n    setUiLevel(uiLevel) {\n      this.updateIfDifferent(\"uiLevel\", uiLevel, \"uiLevelChanged\");\n    }\n    /**\n     * Set the expanded state of this rowNode. Pass `true` to expand and `false` to collapse.\n     */\n    setExpanded(expanded, e, forceSync) {\n      if (this.expanded === expanded) {\n        return;\n      }\n      this.expanded = expanded;\n      this.dispatchRowEvent(\"expandedChanged\");\n      const event = {\n        ...this.createGlobalRowEvent(\"rowGroupOpened\"),\n        expanded,\n        event: e || null\n      };\n      this.beans.rowNodeEventThrottle.dispatchExpanded(event, forceSync);\n      this.beans.rowRenderer.refreshCells({\n        rowNodes: [this]\n      });\n    }\n    createGlobalRowEvent(type) {\n      return this.beans.gos.addGridCommonParams({\n        type,\n        node: this,\n        data: this.data,\n        rowIndex: this.rowIndex,\n        rowPinned: this.rowPinned\n      });\n    }\n    /**\n     * Replaces the value on the `rowNode` for the specified column. When complete,\n     * the grid will refresh the rendered cell on the required row only.\n     * **Note**: This method only fires `onCellEditRequest` when the Grid is in **Read Only** mode.\n     *\n     * @param colKey The column where the value should be updated\n     * @param newValue The new value\n     * @param eventSource The source of the event\n     * @returns `true` if the value was changed, otherwise `false`.\n     */\n    setDataValue(colKey, newValue, eventSource) {\n      const getColumnFromKey = () => {\n        if (typeof colKey !== \"string\") {\n          return colKey;\n        }\n        return this.beans.columnModel.getCol(colKey) ?? this.beans.columnModel.getColDefCol(colKey);\n      };\n      const column = getColumnFromKey();\n      const oldValue = this.getValueFromValueService(column);\n      if (this.beans.gos.get(\"readOnlyEdit\")) {\n        this.dispatchEventForSaveValueReadOnly(column, oldValue, newValue, eventSource);\n        return false;\n      }\n      const valueChanged = this.beans.valueService.setValue(this, column, newValue, eventSource);\n      this.dispatchCellChangedEvent(column, newValue, oldValue);\n      this.checkRowSelectable();\n      return valueChanged;\n    }\n    getValueFromValueService(column) {\n      const lockedClosedGroup = this.leafGroup && this.beans.columnModel.isPivotMode();\n      const isOpenGroup = this.group && this.expanded && !this.footer && !lockedClosedGroup;\n      let includeFooter = false;\n      const groupIncludeFooterOpt = this.beans.gos.get(\"groupTotalRow\") ?? this.beans.gos.get(\"groupIncludeFooter\");\n      if (typeof groupIncludeFooterOpt !== \"function\") {\n        includeFooter = !!groupIncludeFooterOpt;\n      } else {\n        const groupIncludeFooterCb = this.beans.gos.getCallback(\"groupTotalRow\") ?? this.beans.gos.getCallback(\"groupIncludeFooter\");\n        includeFooter = !!groupIncludeFooterCb({\n          node: this\n        });\n      }\n      const groupAlwaysShowAggData = this.beans.gos.get(\"groupSuppressBlankHeader\");\n      const ignoreAggData = isOpenGroup && includeFooter && !groupAlwaysShowAggData;\n      const value = this.beans.valueService.getValue(column, this, false, ignoreAggData);\n      return value;\n    }\n    dispatchEventForSaveValueReadOnly(column, oldValue, newValue, eventSource) {\n      const event = this.beans.gos.addGridCommonParams({\n        type: \"cellEditRequest\",\n        event: null,\n        rowIndex: this.rowIndex,\n        rowPinned: this.rowPinned,\n        column,\n        colDef: column.getColDef(),\n        data: this.data,\n        node: this,\n        oldValue,\n        newValue,\n        value: newValue,\n        source: eventSource\n      });\n      this.beans.eventService.dispatchEvent(event);\n    }\n    setGroupValue(colKey, newValue) {\n      const column = this.beans.columnModel.getCol(colKey);\n      if (_missing(this.groupData)) {\n        this.groupData = {};\n      }\n      const columnId = column.getColId();\n      const oldValue = this.groupData[columnId];\n      if (oldValue === newValue) {\n        return;\n      }\n      this.groupData[columnId] = newValue;\n      this.dispatchCellChangedEvent(column, newValue, oldValue);\n    }\n    // sets the data for an aggregation\n    setAggData(newAggData) {\n      const oldAggData = this.aggData;\n      this.aggData = newAggData;\n      if (this.localEventService) {\n        const eventFunc = colId => {\n          const value = this.aggData ? this.aggData[colId] : void 0;\n          const oldValue = oldAggData ? oldAggData[colId] : void 0;\n          if (value === oldValue) {\n            return;\n          }\n          const column = this.beans.columnModel.getCol(colId);\n          if (!column) {\n            return;\n          }\n          this.dispatchCellChangedEvent(column, value, oldValue);\n        };\n        for (const key in this.aggData) {\n          eventFunc(key);\n        }\n        for (const key in newAggData) {\n          if (key in this.aggData) {\n            continue;\n          }\n          eventFunc(key);\n        }\n      }\n    }\n    updateHasChildren() {\n      let newValue = this.group && !this.footer || this.childrenAfterGroup && this.childrenAfterGroup.length > 0;\n      const isSsrm = this.beans.gos.isRowModelType(\"serverSide\");\n      if (isSsrm) {\n        const isTreeData = this.beans.gos.get(\"treeData\");\n        const isGroupFunc = this.beans.gos.get(\"isServerSideGroup\");\n        newValue = !this.stub && !this.footer && (isTreeData ? !!isGroupFunc && isGroupFunc(this.data) : !!this.group);\n      }\n      if (newValue !== this.__hasChildren) {\n        this.__hasChildren = !!newValue;\n        this.dispatchRowEvent(\"hasChildrenChanged\");\n      }\n    }\n    hasChildren() {\n      if (this.__hasChildren == null) {\n        this.updateHasChildren();\n      }\n      return this.__hasChildren;\n    }\n    isEmptyRowGroupNode() {\n      return (this.group && _missingOrEmpty(this.childrenAfterGroup)) ?? false;\n    }\n    dispatchCellChangedEvent(column, newValue, oldValue) {\n      const cellChangedEvent = {\n        type: \"cellChanged\",\n        node: this,\n        column,\n        newValue,\n        oldValue\n      };\n      this.localEventService?.dispatchEvent(cellChangedEvent);\n    }\n    /**\n     * The first time `quickFilter` runs, the grid creates a one-off string representation of the row.\n     * This string is then used for the quick filter instead of hitting each column separately.\n     * When you edit, using grid editing, this string gets cleared down.\n     * However if you edit without using grid editing, you will need to clear this string down for the row to be updated with the new values.\n     * Otherwise new values will not work with the `quickFilter`. */\n    resetQuickFilterAggregateText() {\n      this.quickFilterAggregateText = null;\n    }\n    /** Returns:\n     * - `true` if the node can be expanded, i.e it is a group or master row.\n     * - `false` if the node cannot be expanded\n     */\n    isExpandable() {\n      if (this.footer) {\n        return false;\n      }\n      if (this.beans.columnModel.isPivotMode()) {\n        return this.hasChildren() && !this.leafGroup;\n      }\n      return this.hasChildren() || !!this.master;\n    }\n    /** Returns:\n     * - `true` if node is selected,\n     * - `false` if the node isn't selected\n     * - `undefined` if it's partially selected (group where not all children are selected). */\n    isSelected() {\n      if (this.footer) {\n        return this.sibling.isSelected();\n      }\n      return this.selected;\n    }\n    /** Perform a depth-first search of this node and its children. */\n    depthFirstSearch(callback) {\n      if (this.childrenAfterGroup) {\n        this.childrenAfterGroup.forEach(child => child.depthFirstSearch(callback));\n      }\n      callback(this);\n    }\n    // + selectionController.calculatedSelectedForAllGroupNodes()\n    calculateSelectedFromChildren() {\n      let atLeastOneSelected = false;\n      let atLeastOneDeSelected = false;\n      let atLeastOneMixed = false;\n      if (!this.childrenAfterGroup?.length) {\n        return this.selectable ? this.selected : null;\n      }\n      for (let i = 0; i < this.childrenAfterGroup.length; i++) {\n        const child = this.childrenAfterGroup[i];\n        let childState = child.isSelected();\n        if (!child.selectable) {\n          const selectable = child.calculateSelectedFromChildren();\n          if (selectable === null) {\n            continue;\n          }\n          childState = selectable;\n        }\n        switch (childState) {\n          case true:\n            atLeastOneSelected = true;\n            break;\n          case false:\n            atLeastOneDeSelected = true;\n            break;\n          default:\n            atLeastOneMixed = true;\n            break;\n        }\n      }\n      if (atLeastOneMixed || atLeastOneSelected && atLeastOneDeSelected) {\n        return void 0;\n      }\n      if (atLeastOneSelected) {\n        return true;\n      }\n      if (atLeastOneDeSelected) {\n        return false;\n      }\n      if (!this.selectable) {\n        return null;\n      }\n      return this.selected;\n    }\n    setSelectedInitialValue(selected) {\n      this.selected = selected;\n    }\n    dispatchRowEvent(type) {\n      const event = {\n        type,\n        node: this\n      };\n      this.localEventService?.dispatchEvent(event);\n    }\n    selectThisNode(newValue, e, source = \"api\") {\n      const selectionNotAllowed = !this.selectable && newValue;\n      const selectionNotChanged = this.selected === newValue;\n      if (selectionNotAllowed || selectionNotChanged) {\n        return false;\n      }\n      this.selected = newValue;\n      this.dispatchRowEvent(\"rowSelected\");\n      const sibling = this.sibling;\n      if (sibling && sibling.footer && sibling.localEventService) {\n        sibling.dispatchRowEvent(\"rowSelected\");\n      }\n      const event = {\n        ...this.createGlobalRowEvent(\"rowSelected\"),\n        event: e || null,\n        source\n      };\n      this.beans.eventService.dispatchEvent(event);\n      return true;\n    }\n    /**\n     * Select (or deselect) the node.\n     * @param newValue -`true` for selection, `false` for deselection.\n     * @param clearSelection - If selecting, then passing `true` will select the node exclusively (i.e. NOT do multi select). If doing deselection, `clearSelection` has no impact.\n     * @param source - Source property that will appear in the `selectionChanged` event.\n     */\n    setSelected(newValue, clearSelection = false, source = \"api\") {\n      if (typeof source === \"boolean\") {\n        _warnOnce(\"since version v30, rowNode.setSelected() property `suppressFinishActions` has been removed, please use `gridApi.setNodesSelected()` for bulk actions, and the event `source` property for ignoring events instead.\");\n        return;\n      }\n      this.setSelectedParams({\n        newValue,\n        clearSelection,\n        rangeSelect: false,\n        source\n      });\n    }\n    // this is for internal use only. To make calling code more readable, this is the same method as setSelected except it takes names parameters\n    setSelectedParams(params) {\n      if (this.rowPinned) {\n        _warnOnce(\"cannot select pinned rows\");\n        return 0;\n      }\n      if (this.id === void 0) {\n        _warnOnce(\"cannot select node until id for node is known\");\n        return 0;\n      }\n      return this.beans.selectionService.setNodesSelected({\n        ...params,\n        nodes: [this.footer ? this.sibling : this]\n      });\n    }\n    /**\n     * Returns:\n     * - `true` if node is either pinned to the `top` or `bottom`\n     * - `false` if the node isn't pinned\n     */\n    isRowPinned() {\n      return this.rowPinned === \"top\" || this.rowPinned === \"bottom\";\n    }\n    isParentOfNode(potentialParent) {\n      let parentNode = this.parent;\n      while (parentNode) {\n        if (parentNode === potentialParent) {\n          return true;\n        }\n        parentNode = parentNode.parent;\n      }\n      return false;\n    }\n    /** Add an event listener. */\n    addEventListener(eventType, userListener) {\n      if (!this.localEventService) {\n        this.localEventService = new LocalEventService();\n      }\n      if (this.beans.frameworkOverrides.shouldWrapOutgoing && !this.frameworkEventListenerService) {\n        this.localEventService.setFrameworkOverrides(this.beans.frameworkOverrides);\n        this.frameworkEventListenerService = new FrameworkEventListenerService(this.beans.frameworkOverrides);\n      }\n      const listener = this.frameworkEventListenerService?.wrap(userListener) ?? userListener;\n      this.localEventService.addEventListener(eventType, listener);\n    }\n    /** Remove event listener. */\n    removeEventListener(eventType, userListener) {\n      if (!this.localEventService) {\n        return;\n      }\n      const listener = this.frameworkEventListenerService?.unwrap(userListener) ?? userListener;\n      this.localEventService.removeEventListener(eventType, listener);\n      if (this.localEventService.noRegisteredListenersExist()) {\n        this.localEventService = null;\n      }\n    }\n    onMouseEnter() {\n      this.dispatchRowEvent(\"mouseEnter\");\n    }\n    onMouseLeave() {\n      this.dispatchRowEvent(\"mouseLeave\");\n    }\n    getFirstChildOfFirstChild(rowGroupColumn) {\n      let currentRowNode = this;\n      let isCandidate = true;\n      let foundFirstChildPath = false;\n      let nodeToSwapIn = null;\n      while (isCandidate && !foundFirstChildPath) {\n        const parentRowNode = currentRowNode.parent;\n        const firstChild = _exists(parentRowNode) && currentRowNode.firstChild;\n        if (firstChild) {\n          if (parentRowNode.rowGroupColumn === rowGroupColumn) {\n            foundFirstChildPath = true;\n            nodeToSwapIn = parentRowNode;\n          }\n        } else {\n          isCandidate = false;\n        }\n        currentRowNode = parentRowNode;\n      }\n      return foundFirstChildPath ? nodeToSwapIn : null;\n    }\n    /**\n     * Returns:\n     * - `true` if the node is a full width cell\n     * - `false` if the node is not a full width cell\n     */\n    isFullWidthCell() {\n      if (this.detail) {\n        return true;\n      }\n      const isFullWidthCellFunc = this.beans.gos.getCallback(\"isFullWidthRow\");\n      return isFullWidthCellFunc ? isFullWidthCellFunc({\n        rowNode: this\n      }) : false;\n    }\n    /**\n     * Returns the route of the row node. If the Row Node is a group, it returns the route to that Row Node.\n     * If the Row Node is not a group, it returns `undefined`.\n     */\n    getRoute() {\n      if (this.key == null) {\n        return;\n      }\n      const res = [];\n      let pointer = this;\n      while (pointer && pointer.key != null) {\n        res.push(pointer.key);\n        pointer = pointer.parent;\n      }\n      return res.reverse();\n    }\n    createFooter() {\n      if (this.sibling) {\n        return;\n      }\n      const ignoredProperties = /* @__PURE__ */new Set([\"eventService\", \"__objectId\", \"sticky\"]);\n      const footerNode = new _RowNode(this.beans);\n      Object.keys(this).forEach(key => {\n        if (ignoredProperties.has(key)) {\n          return;\n        }\n        footerNode[key] = this[key];\n      });\n      footerNode.footer = true;\n      footerNode.setRowTop(null);\n      footerNode.setRowIndex(null);\n      footerNode.oldRowTop = null;\n      footerNode.id = \"rowGroupFooter_\" + this.id;\n      footerNode.sibling = this;\n      this.sibling = footerNode;\n    }\n    // Only used by SSRM. In CSRM this is never used as footers should always be present for\n    // the purpose of exporting collapsed groups. In SSRM it is not possible to export collapsed\n    // groups anyway, so can destroy footers.\n    destroyFooter() {\n      if (!this.sibling) {\n        return;\n      }\n      this.sibling.setRowTop(null);\n      this.sibling.setRowIndex(null);\n      this.sibling = void 0;\n    }\n  };\n  _RowNode.ID_PREFIX_ROW_GROUP = \"row-group-\";\n  _RowNode.ID_PREFIX_TOP_PINNED = \"t-\";\n  _RowNode.ID_PREFIX_BOTTOM_PINNED = \"b-\";\n  _RowNode.OBJECT_ID_SEQUENCE = 0;\n  return _RowNode;\n})();\nvar RowNode = _RowNode;\n\n// community-modules/core/src/filter/filterManager.ts\nvar FilterManager = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterManager\";\n    // when we're waiting for cell data types to be inferred, we need to defer filter model updates\n    this.advancedFilterModelUpdateQueue = [];\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.dataTypeService = beans.dataTypeService;\n    this.quickFilterService = beans.quickFilterService;\n    this.advancedFilterService = beans.advancedFilterService;\n    this.columnFilterService = beans.columnFilterService;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      columnValueChanged: this.refreshFiltersForAggregations.bind(this),\n      columnPivotChanged: this.refreshFiltersForAggregations.bind(this),\n      columnPivotModeChanged: this.refreshFiltersForAggregations.bind(this),\n      newColumnsLoaded: this.updateAdvancedFilterColumns.bind(this),\n      columnVisible: this.updateAdvancedFilterColumns.bind(this),\n      advancedFilterEnabledChanged: ({\n        enabled\n      }) => this.onAdvancedFilterEnabledChanged(enabled),\n      dataTypesInferred: this.processFilterModelUpdateQueue.bind(this)\n    });\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\n    this.addManagedPropertyListeners([\"isExternalFilterPresent\", \"doesExternalFilterPass\"], () => {\n      this.onFilterChanged({\n        source: \"api\"\n      });\n    });\n    this.updateAggFiltering();\n    this.addManagedPropertyListener(\"groupAggFiltering\", () => {\n      this.updateAggFiltering();\n      this.onFilterChanged();\n    });\n    this.addManagedPropertyListener(\"advancedFilterModel\", event => this.setAdvancedFilterModel(event.currentValue));\n    if (this.quickFilterService) {\n      this.addManagedListeners(this.quickFilterService, {\n        quickFilterChanged: () => this.onFilterChanged({\n          source: \"quickFilter\"\n        })\n      });\n    }\n  }\n  isExternalFilterPresentCallback() {\n    const isFilterPresent = this.gos.getCallback(\"isExternalFilterPresent\");\n    if (typeof isFilterPresent === \"function\") {\n      return isFilterPresent({});\n    }\n    return false;\n  }\n  doesExternalFilterPass(node) {\n    const doesFilterPass = this.gos.get(\"doesExternalFilterPass\");\n    if (typeof doesFilterPass === \"function\") {\n      return doesFilterPass(node);\n    }\n    return false;\n  }\n  setFilterModel(model, source = \"api\") {\n    if (this.isAdvancedFilterEnabled()) {\n      this.warnAdvancedFilters();\n      return;\n    }\n    this.columnFilterService?.setFilterModel(model, source);\n  }\n  getFilterModel() {\n    return this.columnFilterService?.getFilterModel() ?? {};\n  }\n  isColumnFilterPresent() {\n    return !!this.columnFilterService?.isColumnFilterPresent();\n  }\n  isAggregateFilterPresent() {\n    return !!this.columnFilterService?.isAggregateFilterPresent();\n  }\n  isExternalFilterPresent() {\n    return this.externalFilterPresent;\n  }\n  isChildFilterPresent() {\n    return this.isColumnFilterPresent() || this.isQuickFilterPresent() || this.isExternalFilterPresent() || this.isAdvancedFilterPresent();\n  }\n  isAdvancedFilterPresent() {\n    return this.isAdvancedFilterEnabled() && this.advancedFilterService.isFilterPresent();\n  }\n  onAdvancedFilterEnabledChanged(enabled) {\n    if (enabled) {\n      if (this.columnFilterService?.disableColumnFilters()) {\n        this.onFilterChanged({\n          source: \"advancedFilter\"\n        });\n      }\n    } else {\n      if (this.advancedFilterService?.isFilterPresent()) {\n        this.advancedFilterService.setModel(null);\n        this.onFilterChanged({\n          source: \"advancedFilter\"\n        });\n      }\n    }\n  }\n  isAdvancedFilterEnabled() {\n    return !!this.advancedFilterService?.isEnabled();\n  }\n  isAdvancedFilterHeaderActive() {\n    return this.isAdvancedFilterEnabled() && this.advancedFilterService.isHeaderActive();\n  }\n  isAnyFilterPresent() {\n    return this.isQuickFilterPresent() || this.isColumnFilterPresent() || this.isAggregateFilterPresent() || this.isExternalFilterPresent() || this.isAdvancedFilterPresent();\n  }\n  resetQuickFilterCache() {\n    this.quickFilterService?.resetQuickFilterCache();\n  }\n  refreshFiltersForAggregations() {\n    const isAggFiltering = this.gos.getGroupAggFiltering();\n    if (isAggFiltering) {\n      this.onFilterChanged();\n    }\n  }\n  onFilterChanged(params = {}) {\n    const {\n      source,\n      additionalEventAttributes,\n      columns = []\n    } = params;\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\n    (this.columnFilterService ? this.columnFilterService.updateBeforeFilterChanged(params) : AgPromise.resolve()).then(() => {\n      const filterChangedEvent = {\n        source,\n        type: \"filterChanged\",\n        columns\n      };\n      if (additionalEventAttributes) {\n        _mergeDeep(filterChangedEvent, additionalEventAttributes);\n      }\n      this.eventService.dispatchEvent(filterChangedEvent);\n      this.columnFilterService?.updateAfterFilterChanged();\n    });\n  }\n  isSuppressFlashingCellsBecauseFiltering() {\n    return !!this.columnFilterService?.isSuppressFlashingCellsBecauseFiltering();\n  }\n  isQuickFilterPresent() {\n    return !!this.quickFilterService?.isQuickFilterPresent();\n  }\n  updateAggFiltering() {\n    this.aggFiltering = !!this.gos.getGroupAggFiltering();\n  }\n  isAggregateQuickFilterPresent() {\n    return this.isQuickFilterPresent() && this.shouldApplyQuickFilterAfterAgg();\n  }\n  isNonAggregateQuickFilterPresent() {\n    return this.isQuickFilterPresent() && !this.shouldApplyQuickFilterAfterAgg();\n  }\n  shouldApplyQuickFilterAfterAgg() {\n    return (this.aggFiltering || this.columnModel.isPivotMode()) && !this.gos.get(\"applyQuickFilterBeforePivotOrAgg\");\n  }\n  doesRowPassOtherFilters(filterToSkip, node) {\n    return this.doesRowPassFilter({\n      rowNode: node,\n      filterInstanceToSkip: filterToSkip\n    });\n  }\n  doesRowPassAggregateFilters(params) {\n    if (this.isAggregateQuickFilterPresent() && !this.quickFilterService.doesRowPassQuickFilter(params.rowNode)) {\n      return false;\n    }\n    if (this.isAggregateFilterPresent() && !this.columnFilterService.doAggregateFiltersPass(params.rowNode, params.filterInstanceToSkip)) {\n      return false;\n    }\n    return true;\n  }\n  doesRowPassFilter(params) {\n    if (this.isNonAggregateQuickFilterPresent() && !this.quickFilterService.doesRowPassQuickFilter(params.rowNode)) {\n      return false;\n    }\n    if (this.isExternalFilterPresent() && !this.doesExternalFilterPass(params.rowNode)) {\n      return false;\n    }\n    if (this.isColumnFilterPresent() && !this.columnFilterService.doColumnFiltersPass(params.rowNode, params.filterInstanceToSkip)) {\n      return false;\n    }\n    if (this.isAdvancedFilterPresent() && !this.advancedFilterService.doesFilterPass(params.rowNode)) {\n      return false;\n    }\n    return true;\n  }\n  isFilterActive(column) {\n    return !!this.columnFilterService?.isFilterActive(column);\n  }\n  getOrCreateFilterWrapper(column) {\n    return this.columnFilterService?.getOrCreateFilterWrapper(column) ?? null;\n  }\n  getDefaultFloatingFilter(column) {\n    return this.columnFilterService.getDefaultFloatingFilter(column);\n  }\n  createFilterParams(column, colDef) {\n    return this.columnFilterService.createFilterParams(column, colDef);\n  }\n  // for group filters, can change dynamically whether they are allowed or not\n  isFilterAllowed(column) {\n    if (this.isAdvancedFilterEnabled()) {\n      return false;\n    }\n    return !!this.columnFilterService?.isFilterAllowed(column);\n  }\n  getFloatingFilterCompDetails(column, showParentFilter) {\n    return this.columnFilterService?.getFloatingFilterCompDetails(column, showParentFilter);\n  }\n  getCurrentFloatingFilterParentModel(column) {\n    return this.columnFilterService?.getCurrentFloatingFilterParentModel(column);\n  }\n  // destroys the filter, so it no longer takes part\n  destroyFilter(column, source = \"api\") {\n    this.columnFilterService?.destroyFilter(column, source);\n  }\n  areFilterCompsDifferent(oldCompDetails, newCompDetails) {\n    return !!this.columnFilterService?.areFilterCompsDifferent(oldCompDetails, newCompDetails);\n  }\n  getAdvancedFilterModel() {\n    return this.isAdvancedFilterEnabled() ? this.advancedFilterService.getModel() : null;\n  }\n  setAdvancedFilterModel(expression) {\n    if (!this.isAdvancedFilterEnabled()) {\n      return;\n    }\n    if (this.dataTypeService?.isPendingInference()) {\n      this.advancedFilterModelUpdateQueue.push(expression);\n      return;\n    }\n    this.advancedFilterService.setModel(expression ?? null);\n    this.onFilterChanged({\n      source: \"advancedFilter\"\n    });\n  }\n  toggleAdvancedFilterBuilder(show, source) {\n    if (!this.isAdvancedFilterEnabled()) {\n      return;\n    }\n    this.advancedFilterService.getCtrl().toggleFilterBuilder(source, show);\n  }\n  updateAdvancedFilterColumns() {\n    if (!this.isAdvancedFilterEnabled()) {\n      return;\n    }\n    if (this.advancedFilterService.updateValidity()) {\n      this.onFilterChanged({\n        source: \"advancedFilter\"\n      });\n    }\n  }\n  hasFloatingFilters() {\n    if (this.isAdvancedFilterEnabled()) {\n      return false;\n    }\n    return !!this.columnFilterService?.hasFloatingFilters();\n  }\n  getFilterInstance(key, callback) {\n    if (this.isAdvancedFilterEnabled()) {\n      this.warnAdvancedFilters();\n      return void 0;\n    }\n    return this.columnFilterService?.getFilterInstance(key, callback);\n  }\n  getColumnFilterInstance(key) {\n    if (this.isAdvancedFilterEnabled()) {\n      this.warnAdvancedFilters();\n      return Promise.resolve(void 0);\n    }\n    return this.columnFilterService?.getColumnFilterInstance(key) ?? Promise.resolve(void 0);\n  }\n  warnAdvancedFilters() {\n    _warnOnce(\"Column Filter API methods have been disabled as Advanced Filters are enabled.\");\n  }\n  setupAdvancedFilterHeaderComp(eCompToInsertBefore) {\n    this.advancedFilterService?.getCtrl().setupHeaderComp(eCompToInsertBefore);\n  }\n  getHeaderRowCount() {\n    return this.isAdvancedFilterHeaderActive() ? 1 : 0;\n  }\n  getHeaderHeight() {\n    return this.isAdvancedFilterHeaderActive() ? this.advancedFilterService.getCtrl().getHeaderHeight() : 0;\n  }\n  processFilterModelUpdateQueue() {\n    this.advancedFilterModelUpdateQueue.forEach(model => this.setAdvancedFilterModel(model));\n    this.advancedFilterModelUpdateQueue = [];\n  }\n  getColumnFilterModel(key) {\n    return this.columnFilterService?.getColumnFilterModel(key);\n  }\n  setColumnFilterModel(key, model) {\n    if (this.isAdvancedFilterEnabled()) {\n      this.warnAdvancedFilters();\n      return Promise.resolve();\n    }\n    return this.columnFilterService?.setColumnFilterModel(key, model) ?? Promise.resolve();\n  }\n};\n\n// community-modules/core/src/filter/filterWrapperComp.ts\nvar FilterWrapperComp = class extends Component {\n  constructor(column, source) {\n    super( /* html */\n    `<div class=\"ag-filter\"></div>`);\n    this.column = column;\n    this.source = source;\n    this.filterWrapper = null;\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n    this.columnModel = beans.columnModel;\n  }\n  postConstruct() {\n    this.createFilter(true);\n    this.addManagedEventListeners({\n      filterDestroyed: this.onFilterDestroyed.bind(this)\n    });\n  }\n  hasFilter() {\n    return !!this.filterWrapper;\n  }\n  getFilter() {\n    return this.filterWrapper?.filterPromise ?? null;\n  }\n  afterInit() {\n    return this.filterWrapper?.filterPromise?.then(() => {}) ?? AgPromise.resolve();\n  }\n  afterGuiAttached(params) {\n    this.filterWrapper?.filterPromise?.then(filter => {\n      filter?.afterGuiAttached?.(params);\n    });\n  }\n  afterGuiDetached() {\n    this.filterWrapper?.filterPromise?.then(filter => {\n      filter?.afterGuiDetached?.();\n    });\n  }\n  createFilter(init) {\n    const {\n      column,\n      source\n    } = this;\n    this.filterWrapper = this.filterManager?.getOrCreateFilterWrapper(column) ?? null;\n    if (!this.filterWrapper?.filterPromise) {\n      return;\n    }\n    this.filterWrapper.filterPromise.then(filter => {\n      const guiFromFilter = filter.getGui();\n      if (!_exists(guiFromFilter)) {\n        _warnOnce(`getGui method from filter returned ${guiFromFilter}; it should be a DOM element.`);\n      }\n      this.appendChild(guiFromFilter);\n      if (init) {\n        const event = {\n          type: \"filterOpened\",\n          column,\n          source,\n          eGui: this.getGui()\n        };\n        this.eventService.dispatchEvent(event);\n      }\n    });\n  }\n  onFilterDestroyed(event) {\n    if ((event.source === \"api\" || event.source === \"paramsUpdated\") && event.column.getId() === this.column.getId() && this.columnModel.getColDefCol(this.column)) {\n      _clearElement(this.getGui());\n      this.createFilter();\n    }\n  }\n  destroy() {\n    this.filterWrapper = null;\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/features/positionableFeature.ts\nvar RESIZE_CONTAINER_STYLE = \"ag-resizer-wrapper\";\nvar RESIZE_TEMPLATE = /* html */\n`<div class=\"${RESIZE_CONTAINER_STYLE}\">\n        <div data-ref=\"eTopLeftResizer\" class=\"ag-resizer ag-resizer-topLeft\"></div>\n        <div data-ref=\"eTopResizer\" class=\"ag-resizer ag-resizer-top\"></div>\n        <div data-ref=\"eTopRightResizer\" class=\"ag-resizer ag-resizer-topRight\"></div>\n        <div data-ref=\"eRightResizer\" class=\"ag-resizer ag-resizer-right\"></div>\n        <div data-ref=\"eBottomRightResizer\" class=\"ag-resizer ag-resizer-bottomRight\"></div>\n        <div data-ref=\"eBottomResizer\" class=\"ag-resizer ag-resizer-bottom\"></div>\n        <div data-ref=\"eBottomLeftResizer\" class=\"ag-resizer ag-resizer-bottomLeft\"></div>\n        <div data-ref=\"eLeftResizer\" class=\"ag-resizer ag-resizer-left\"></div>\n    </div>`;\nvar PositionableFeature = class extends BeanStub {\n  constructor(element, config) {\n    super();\n    this.element = element;\n    this.dragStartPosition = {\n      x: 0,\n      y: 0\n    };\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.lastSize = {\n      width: -1,\n      height: -1\n    };\n    this.positioned = false;\n    this.resizersAdded = false;\n    this.resizeListeners = [];\n    this.boundaryEl = null;\n    this.isResizing = false;\n    this.isMoving = false;\n    this.resizable = {};\n    this.movable = false;\n    this.currentResizer = null;\n    this.config = Object.assign({}, {\n      popup: false\n    }, config);\n  }\n  wireBeans(beans) {\n    this.popupService = beans.popupService;\n    this.resizeObserverService = beans.resizeObserverService;\n    this.dragService = beans.dragService;\n  }\n  center() {\n    const {\n      clientHeight,\n      clientWidth\n    } = this.offsetParent;\n    const x = clientWidth / 2 - this.getWidth() / 2;\n    const y = clientHeight / 2 - this.getHeight() / 2;\n    this.offsetElement(x, y);\n  }\n  initialisePosition() {\n    if (this.positioned) {\n      return;\n    }\n    const {\n      centered,\n      forcePopupParentAsOffsetParent,\n      minWidth,\n      width,\n      minHeight,\n      height,\n      x,\n      y\n    } = this.config;\n    if (!this.offsetParent) {\n      this.setOffsetParent();\n    }\n    let computedMinHeight = 0;\n    let computedMinWidth = 0;\n    const isElementVisible = _isVisible(this.element);\n    if (isElementVisible) {\n      const boundaryEl = this.findBoundaryElement();\n      const offsetParentComputedStyles = window.getComputedStyle(boundaryEl);\n      if (offsetParentComputedStyles.minWidth != null) {\n        const paddingWidth = boundaryEl.offsetWidth - this.element.offsetWidth;\n        computedMinWidth = parseInt(offsetParentComputedStyles.minWidth, 10) - paddingWidth;\n      }\n      if (offsetParentComputedStyles.minHeight != null) {\n        const paddingHeight = boundaryEl.offsetHeight - this.element.offsetHeight;\n        computedMinHeight = parseInt(offsetParentComputedStyles.minHeight, 10) - paddingHeight;\n      }\n    }\n    this.minHeight = minHeight || computedMinHeight;\n    this.minWidth = minWidth || computedMinWidth;\n    if (width) {\n      this.setWidth(width);\n    }\n    if (height) {\n      this.setHeight(height);\n    }\n    if (!width || !height) {\n      this.refreshSize();\n    }\n    if (centered) {\n      this.center();\n    } else if (x || y) {\n      this.offsetElement(x, y);\n    } else if (isElementVisible && forcePopupParentAsOffsetParent) {\n      let boundaryEl = this.boundaryEl;\n      let initialisedDuringPositioning = true;\n      if (!boundaryEl) {\n        boundaryEl = this.findBoundaryElement();\n        initialisedDuringPositioning = false;\n      }\n      if (boundaryEl) {\n        const top = parseFloat(boundaryEl.style.top);\n        const left = parseFloat(boundaryEl.style.left);\n        if (initialisedDuringPositioning) {\n          this.offsetElement(isNaN(left) ? 0 : left, isNaN(top) ? 0 : top);\n        } else {\n          this.setPosition(left, top);\n        }\n      }\n    }\n    this.positioned = !!this.offsetParent;\n  }\n  isPositioned() {\n    return this.positioned;\n  }\n  getPosition() {\n    return this.position;\n  }\n  setMovable(movable, moveElement) {\n    if (!this.config.popup || movable === this.movable) {\n      return;\n    }\n    this.movable = movable;\n    const params = this.moveElementDragListener || {\n      eElement: moveElement,\n      onDragStart: this.onMoveStart.bind(this),\n      onDragging: this.onMove.bind(this),\n      onDragStop: this.onMoveEnd.bind(this)\n    };\n    if (movable) {\n      this.dragService.addDragSource(params);\n      this.moveElementDragListener = params;\n    } else {\n      this.dragService.removeDragSource(params);\n      this.moveElementDragListener = void 0;\n    }\n  }\n  setResizable(resizable) {\n    this.clearResizeListeners();\n    if (resizable) {\n      this.addResizers();\n    } else {\n      this.removeResizers();\n    }\n    if (typeof resizable === \"boolean\") {\n      if (resizable === false) {\n        return;\n      }\n      resizable = {\n        topLeft: resizable,\n        top: resizable,\n        topRight: resizable,\n        right: resizable,\n        bottomRight: resizable,\n        bottom: resizable,\n        bottomLeft: resizable,\n        left: resizable\n      };\n    }\n    Object.keys(resizable).forEach(side => {\n      const resizableStructure = resizable;\n      const isSideResizable = !!resizableStructure[side];\n      const resizerEl = this.getResizerElement(side);\n      const params = {\n        dragStartPixels: 0,\n        eElement: resizerEl,\n        onDragStart: e => this.onResizeStart(e, side),\n        onDragging: this.onResize.bind(this),\n        onDragStop: e => this.onResizeEnd(e, side)\n      };\n      if (isSideResizable || !this.isAlive() && !isSideResizable) {\n        if (isSideResizable) {\n          this.dragService.addDragSource(params);\n          this.resizeListeners.push(params);\n          resizerEl.style.pointerEvents = \"all\";\n        } else {\n          resizerEl.style.pointerEvents = \"none\";\n        }\n        this.resizable[side] = isSideResizable;\n      }\n    });\n  }\n  removeSizeFromEl() {\n    this.element.style.removeProperty(\"height\");\n    this.element.style.removeProperty(\"width\");\n    this.element.style.removeProperty(\"flex\");\n  }\n  restoreLastSize() {\n    this.element.style.flex = \"0 0 auto\";\n    const {\n      height,\n      width\n    } = this.lastSize;\n    if (width !== -1) {\n      this.element.style.width = `${width}px`;\n    }\n    if (height !== -1) {\n      this.element.style.height = `${height}px`;\n    }\n  }\n  getHeight() {\n    return this.element.offsetHeight;\n  }\n  setHeight(height) {\n    const {\n      popup\n    } = this.config;\n    const eGui = this.element;\n    let isPercent = false;\n    if (typeof height === \"string\" && height.indexOf(\"%\") !== -1) {\n      _setFixedHeight(eGui, height);\n      height = _getAbsoluteHeight(eGui);\n      isPercent = true;\n    } else {\n      height = Math.max(this.minHeight, height);\n      if (this.positioned) {\n        const availableHeight = this.getAvailableHeight();\n        if (availableHeight && height > availableHeight) {\n          height = availableHeight;\n        }\n      }\n    }\n    if (this.getHeight() === height) {\n      return;\n    }\n    if (!isPercent) {\n      if (popup) {\n        _setFixedHeight(eGui, height);\n      } else {\n        eGui.style.height = `${height}px`;\n        eGui.style.flex = \"0 0 auto\";\n        this.lastSize.height = typeof height === \"number\" ? height : parseFloat(height);\n      }\n    } else {\n      eGui.style.maxHeight = \"unset\";\n      eGui.style.minHeight = \"unset\";\n    }\n  }\n  getAvailableHeight() {\n    const {\n      popup,\n      forcePopupParentAsOffsetParent\n    } = this.config;\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    const {\n      clientHeight\n    } = this.offsetParent;\n    if (!clientHeight) {\n      return null;\n    }\n    const elRect = this.element.getBoundingClientRect();\n    const offsetParentRect = this.offsetParent.getBoundingClientRect();\n    const yPosition = popup ? this.position.y : elRect.top;\n    const parentTop = popup ? 0 : offsetParentRect.top;\n    let additionalHeight = 0;\n    if (forcePopupParentAsOffsetParent) {\n      const parentEl = this.element.parentElement;\n      if (parentEl) {\n        const {\n          bottom\n        } = parentEl.getBoundingClientRect();\n        additionalHeight = bottom - elRect.bottom;\n      }\n    }\n    const availableHeight = clientHeight + parentTop - yPosition - additionalHeight;\n    return availableHeight;\n  }\n  getWidth() {\n    return this.element.offsetWidth;\n  }\n  setWidth(width) {\n    const eGui = this.element;\n    const {\n      popup\n    } = this.config;\n    let isPercent = false;\n    if (typeof width === \"string\" && width.indexOf(\"%\") !== -1) {\n      _setFixedWidth(eGui, width);\n      width = _getAbsoluteWidth(eGui);\n      isPercent = true;\n    } else if (this.positioned) {\n      width = Math.max(this.minWidth, width);\n      const {\n        clientWidth\n      } = this.offsetParent;\n      const xPosition = popup ? this.position.x : this.element.getBoundingClientRect().left;\n      if (clientWidth && width + xPosition > clientWidth) {\n        width = clientWidth - xPosition;\n      }\n    }\n    if (this.getWidth() === width) {\n      return;\n    }\n    if (!isPercent) {\n      if (this.config.popup) {\n        _setFixedWidth(eGui, width);\n      } else {\n        eGui.style.width = `${width}px`;\n        eGui.style.flex = \" unset\";\n        this.lastSize.width = typeof width === \"number\" ? width : parseFloat(width);\n      }\n    } else {\n      eGui.style.maxWidth = \"unset\";\n      eGui.style.minWidth = \"unset\";\n    }\n  }\n  offsetElement(x = 0, y = 0) {\n    const {\n      forcePopupParentAsOffsetParent\n    } = this.config;\n    const ePopup = forcePopupParentAsOffsetParent ? this.boundaryEl : this.element;\n    if (!ePopup) {\n      return;\n    }\n    this.popupService.positionPopup({\n      ePopup,\n      keepWithinBounds: true,\n      skipObserver: this.movable || this.isResizable(),\n      updatePosition: () => ({\n        x,\n        y\n      })\n    });\n    this.setPosition(parseFloat(ePopup.style.left), parseFloat(ePopup.style.top));\n  }\n  constrainSizeToAvailableHeight(constrain) {\n    if (!this.config.forcePopupParentAsOffsetParent) {\n      return;\n    }\n    const applyMaxHeightToElement = () => {\n      const availableHeight = this.getAvailableHeight();\n      this.element.style.setProperty(\"max-height\", `${availableHeight}px`);\n    };\n    if (constrain) {\n      this.resizeObserverSubscriber = this.resizeObserverService.observeResize(this.popupService.getPopupParent(), applyMaxHeightToElement);\n    } else {\n      this.element.style.removeProperty(\"max-height\");\n      if (this.resizeObserverSubscriber) {\n        this.resizeObserverSubscriber();\n        this.resizeObserverSubscriber = void 0;\n      }\n    }\n  }\n  setPosition(x, y) {\n    this.position.x = x;\n    this.position.y = y;\n  }\n  updateDragStartPosition(x, y) {\n    this.dragStartPosition = {\n      x,\n      y\n    };\n  }\n  calculateMouseMovement(params) {\n    const {\n      e,\n      isLeft,\n      isTop,\n      anywhereWithin,\n      topBuffer\n    } = params;\n    const xDiff = e.clientX - this.dragStartPosition.x;\n    const yDiff = e.clientY - this.dragStartPosition.y;\n    const movementX = this.shouldSkipX(e, !!isLeft, !!anywhereWithin, xDiff) ? 0 : xDiff;\n    const movementY = this.shouldSkipY(e, !!isTop, topBuffer, yDiff) ? 0 : yDiff;\n    return {\n      movementX,\n      movementY\n    };\n  }\n  shouldSkipX(e, isLeft, anywhereWithin, diff) {\n    const elRect = this.element.getBoundingClientRect();\n    const parentRect = this.offsetParent.getBoundingClientRect();\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\n    const xPosition = this.config.popup ? this.position.x : elRect.left;\n    let skipX = xPosition <= 0 && parentRect.left >= e.clientX || parentRect.right <= e.clientX && parentRect.right <= boundaryElRect.right;\n    if (skipX) {\n      return true;\n    }\n    if (isLeft) {\n      skipX =\n      // skip if we are moving to the left and the cursor\n      // is positioned to the right of the left side anchor\n      diff < 0 && e.clientX > xPosition + parentRect.left ||\n      // skip if we are moving to the right and the cursor\n      // is positioned to the left of the dialog\n      diff > 0 && e.clientX < xPosition + parentRect.left;\n    } else {\n      if (anywhereWithin) {\n        skipX = diff < 0 && e.clientX > boundaryElRect.right || diff > 0 && e.clientX < xPosition + parentRect.left;\n      } else {\n        skipX =\n        // if the movement is bound to the right side of the dialog\n        // we skip if we are moving to the left and the cursor\n        // is to the right of the dialog\n        diff < 0 && e.clientX > boundaryElRect.right ||\n        // or skip if we are moving to the right and the cursor\n        // is to the left of the right side anchor\n        diff > 0 && e.clientX < boundaryElRect.right;\n      }\n    }\n    return skipX;\n  }\n  shouldSkipY(e, isTop, topBuffer = 0, diff) {\n    const elRect = this.element.getBoundingClientRect();\n    const parentRect = this.offsetParent.getBoundingClientRect();\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\n    const yPosition = this.config.popup ? this.position.y : elRect.top;\n    let skipY = yPosition <= 0 && parentRect.top >= e.clientY || parentRect.bottom <= e.clientY && parentRect.bottom <= boundaryElRect.bottom;\n    if (skipY) {\n      return true;\n    }\n    if (isTop) {\n      skipY =\n      // skip if we are moving to towards top and the cursor is\n      // below the top anchor + topBuffer\n      // note: topBuffer is used when moving the dialog using the title bar\n      diff < 0 && e.clientY > yPosition + parentRect.top + topBuffer ||\n      // skip if we are moving to the bottom and the cursor is\n      // above the top anchor\n      diff > 0 && e.clientY < yPosition + parentRect.top;\n    } else {\n      skipY =\n      // skip if we are moving towards the top and the cursor\n      // is below the bottom anchor\n      diff < 0 && e.clientY > boundaryElRect.bottom ||\n      // skip if we are moving towards the bottom and the cursor\n      // is above the bottom anchor\n      diff > 0 && e.clientY < boundaryElRect.bottom;\n    }\n    return skipY;\n  }\n  createResizeMap() {\n    const eGui = this.element;\n    this.resizerMap = {\n      topLeft: {\n        element: eGui.querySelector(\"[data-ref=eTopLeftResizer]\")\n      },\n      top: {\n        element: eGui.querySelector(\"[data-ref=eTopResizer]\")\n      },\n      topRight: {\n        element: eGui.querySelector(\"[data-ref=eTopRightResizer]\")\n      },\n      right: {\n        element: eGui.querySelector(\"[data-ref=eRightResizer]\")\n      },\n      bottomRight: {\n        element: eGui.querySelector(\"[data-ref=eBottomRightResizer]\")\n      },\n      bottom: {\n        element: eGui.querySelector(\"[data-ref=eBottomResizer]\")\n      },\n      bottomLeft: {\n        element: eGui.querySelector(\"[data-ref=eBottomLeftResizer]\")\n      },\n      left: {\n        element: eGui.querySelector(\"[data-ref=eLeftResizer]\")\n      }\n    };\n  }\n  addResizers() {\n    if (this.resizersAdded) {\n      return;\n    }\n    const eGui = this.element;\n    if (!eGui) {\n      return;\n    }\n    const parser = new DOMParser();\n    const resizers = parser.parseFromString(RESIZE_TEMPLATE, \"text/html\").body;\n    eGui.appendChild(resizers.firstChild);\n    this.createResizeMap();\n    this.resizersAdded = true;\n  }\n  removeResizers() {\n    this.resizerMap = void 0;\n    const resizerEl = this.element.querySelector(`.${RESIZE_CONTAINER_STYLE}`);\n    if (resizerEl) {\n      this.element.removeChild(resizerEl);\n    }\n    this.resizersAdded = false;\n  }\n  getResizerElement(side) {\n    return this.resizerMap[side].element;\n  }\n  onResizeStart(e, side) {\n    this.boundaryEl = this.findBoundaryElement();\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    this.currentResizer = {\n      isTop: !!side.match(/top/i),\n      isRight: !!side.match(/right/i),\n      isBottom: !!side.match(/bottom/i),\n      isLeft: !!side.match(/left/i)\n    };\n    this.element.classList.add(\"ag-resizing\");\n    this.resizerMap[side].element.classList.add(\"ag-active\");\n    const {\n      popup,\n      forcePopupParentAsOffsetParent\n    } = this.config;\n    if (!popup && !forcePopupParentAsOffsetParent) {\n      this.applySizeToSiblings(this.currentResizer.isBottom || this.currentResizer.isTop);\n    }\n    this.isResizing = true;\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  getSiblings() {\n    const element = this.element;\n    const parent = element.parentElement;\n    if (!parent) {\n      return null;\n    }\n    return Array.prototype.slice.call(parent.children).filter(el => !el.classList.contains(\"ag-hidden\"));\n  }\n  getMinSizeOfSiblings() {\n    const siblings = this.getSiblings() || [];\n    let height = 0;\n    let width = 0;\n    for (let i = 0; i < siblings.length; i++) {\n      const currentEl = siblings[i];\n      const isFlex = !!currentEl.style.flex && currentEl.style.flex !== \"0 0 auto\";\n      if (currentEl === this.element) {\n        continue;\n      }\n      let nextHeight = this.minHeight || 0;\n      let nextWidth = this.minWidth || 0;\n      if (isFlex) {\n        const computedStyle = window.getComputedStyle(currentEl);\n        if (computedStyle.minHeight) {\n          nextHeight = parseInt(computedStyle.minHeight, 10);\n        }\n        if (computedStyle.minWidth) {\n          nextWidth = parseInt(computedStyle.minWidth, 10);\n        }\n      } else {\n        nextHeight = currentEl.offsetHeight;\n        nextWidth = currentEl.offsetWidth;\n      }\n      height += nextHeight;\n      width += nextWidth;\n    }\n    return {\n      height,\n      width\n    };\n  }\n  applySizeToSiblings(vertical) {\n    let containerToFlex = null;\n    const siblings = this.getSiblings();\n    if (!siblings) {\n      return;\n    }\n    for (let i = 0; i < siblings.length; i++) {\n      const el = siblings[i];\n      if (el === containerToFlex) {\n        continue;\n      }\n      if (vertical) {\n        el.style.height = `${el.offsetHeight}px`;\n      } else {\n        el.style.width = `${el.offsetWidth}px`;\n      }\n      el.style.flex = \"0 0 auto\";\n      if (el === this.element) {\n        containerToFlex = siblings[i + 1];\n      }\n    }\n    if (containerToFlex) {\n      containerToFlex.style.removeProperty(\"height\");\n      containerToFlex.style.removeProperty(\"min-height\");\n      containerToFlex.style.removeProperty(\"max-height\");\n      containerToFlex.style.flex = \"1 1 auto\";\n    }\n  }\n  isResizable() {\n    return Object.values(this.resizable).some(value => value);\n  }\n  onResize(e) {\n    if (!this.isResizing || !this.currentResizer) {\n      return;\n    }\n    const {\n      popup,\n      forcePopupParentAsOffsetParent\n    } = this.config;\n    const {\n      isTop,\n      isRight,\n      isBottom,\n      isLeft\n    } = this.currentResizer;\n    const isHorizontal = isRight || isLeft;\n    const isVertical = isBottom || isTop;\n    const {\n      movementX,\n      movementY\n    } = this.calculateMouseMovement({\n      e,\n      isLeft,\n      isTop\n    });\n    const xPosition = this.position.x;\n    const yPosition = this.position.y;\n    let offsetLeft = 0;\n    let offsetTop = 0;\n    if (isHorizontal && movementX) {\n      const direction = isLeft ? -1 : 1;\n      const oldWidth = this.getWidth();\n      const newWidth = oldWidth + movementX * direction;\n      let skipWidth = false;\n      if (isLeft) {\n        offsetLeft = oldWidth - newWidth;\n        if (xPosition + offsetLeft <= 0 || newWidth <= this.minWidth) {\n          skipWidth = true;\n          offsetLeft = 0;\n        }\n      }\n      if (!skipWidth) {\n        this.setWidth(newWidth);\n      }\n    }\n    if (isVertical && movementY) {\n      const direction = isTop ? -1 : 1;\n      const oldHeight = this.getHeight();\n      const newHeight = oldHeight + movementY * direction;\n      let skipHeight = false;\n      if (isTop) {\n        offsetTop = oldHeight - newHeight;\n        if (yPosition + offsetTop <= 0 || newHeight <= this.minHeight) {\n          skipHeight = true;\n          offsetTop = 0;\n        }\n      } else {\n        if (!this.config.popup && !this.config.forcePopupParentAsOffsetParent && oldHeight < newHeight && this.getMinSizeOfSiblings().height + newHeight > this.element.parentElement.offsetHeight) {\n          skipHeight = true;\n        }\n      }\n      if (!skipHeight) {\n        this.setHeight(newHeight);\n      }\n    }\n    this.updateDragStartPosition(e.clientX, e.clientY);\n    if ((popup || forcePopupParentAsOffsetParent) && offsetLeft || offsetTop) {\n      this.offsetElement(xPosition + offsetLeft, yPosition + offsetTop);\n    }\n  }\n  onResizeEnd(e, side) {\n    this.isResizing = false;\n    this.currentResizer = null;\n    this.boundaryEl = null;\n    this.element.classList.remove(\"ag-resizing\");\n    this.resizerMap[side].element.classList.remove(\"ag-active\");\n    this.dispatchLocalEvent({\n      type: \"resize\"\n    });\n  }\n  refreshSize() {\n    const eGui = this.element;\n    if (this.config.popup) {\n      if (!this.config.width) {\n        this.setWidth(eGui.offsetWidth);\n      }\n      if (!this.config.height) {\n        this.setHeight(eGui.offsetHeight);\n      }\n    }\n  }\n  onMoveStart(e) {\n    this.boundaryEl = this.findBoundaryElement();\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    this.isMoving = true;\n    this.element.classList.add(\"ag-moving\");\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  onMove(e) {\n    if (!this.isMoving) {\n      return;\n    }\n    const {\n      x,\n      y\n    } = this.position;\n    let topBuffer;\n    if (this.config.calculateTopBuffer) {\n      topBuffer = this.config.calculateTopBuffer();\n    }\n    const {\n      movementX,\n      movementY\n    } = this.calculateMouseMovement({\n      e,\n      isTop: true,\n      anywhereWithin: true,\n      topBuffer\n    });\n    this.offsetElement(x + movementX, y + movementY);\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  onMoveEnd() {\n    this.isMoving = false;\n    this.boundaryEl = null;\n    this.element.classList.remove(\"ag-moving\");\n  }\n  setOffsetParent() {\n    if (this.config.forcePopupParentAsOffsetParent) {\n      this.offsetParent = this.popupService.getPopupParent();\n    } else {\n      this.offsetParent = this.element.offsetParent;\n    }\n  }\n  findBoundaryElement() {\n    let el = this.element;\n    while (el) {\n      if (window.getComputedStyle(el).position !== \"static\") {\n        return el;\n      }\n      el = el.parentElement;\n    }\n    return this.element;\n  }\n  clearResizeListeners() {\n    while (this.resizeListeners.length) {\n      const params = this.resizeListeners.pop();\n      this.dragService.removeDragSource(params);\n    }\n  }\n  destroy() {\n    super.destroy();\n    if (this.moveElementDragListener) {\n      this.dragService.removeDragSource(this.moveElementDragListener);\n    }\n    this.constrainSizeToAvailableHeight(false);\n    this.clearResizeListeners();\n    this.removeResizers();\n  }\n};\n\n// community-modules/core/src/widgets/managedFocusFeature.ts\nvar _ManagedFocusFeature = /*#__PURE__*/(() => {\n  let _ManagedFocusFeature = class _ManagedFocusFeature extends BeanStub {\n    constructor(eFocusableElement, callbacks = {}) {\n      super();\n      this.eFocusableElement = eFocusableElement;\n      this.callbacks = callbacks;\n      this.callbacks = {\n        shouldStopEventPropagation: () => false,\n        onTabKeyDown: e => {\n          if (e.defaultPrevented) {\n            return;\n          }\n          const nextRoot = this.focusService.findNextFocusableElement(this.eFocusableElement, false, e.shiftKey);\n          if (!nextRoot) {\n            return;\n          }\n          nextRoot.focus();\n          e.preventDefault();\n        },\n        ...callbacks\n      };\n    }\n    wireBeans(beans) {\n      this.focusService = beans.focusService;\n    }\n    postConstruct() {\n      this.eFocusableElement.classList.add(_ManagedFocusFeature.FOCUS_MANAGED_CLASS);\n      this.addKeyDownListeners(this.eFocusableElement);\n      if (this.callbacks.onFocusIn) {\n        this.addManagedElementListeners(this.eFocusableElement, {\n          focusin: this.callbacks.onFocusIn\n        });\n      }\n      if (this.callbacks.onFocusOut) {\n        this.addManagedElementListeners(this.eFocusableElement, {\n          focusout: this.callbacks.onFocusOut\n        });\n      }\n    }\n    addKeyDownListeners(eGui) {\n      this.addManagedElementListeners(eGui, {\n        keydown: e => {\n          if (e.defaultPrevented || _isStopPropagationForAgGrid(e)) {\n            return;\n          }\n          if (this.callbacks.shouldStopEventPropagation(e)) {\n            _stopPropagationForAgGrid(e);\n            return;\n          }\n          if (e.key === KeyCode.TAB) {\n            this.callbacks.onTabKeyDown(e);\n          } else if (this.callbacks.handleKeyDown) {\n            this.callbacks.handleKeyDown(e);\n          }\n        }\n      });\n    }\n  };\n  _ManagedFocusFeature.FOCUS_MANAGED_CLASS = \"ag-focus-managed\";\n  return _ManagedFocusFeature;\n})();\nvar ManagedFocusFeature = _ManagedFocusFeature;\n\n// community-modules/core/src/filter/filterLocaleText.ts\nvar FILTER_LOCALE_TEXT = {\n  applyFilter: \"Apply\",\n  clearFilter: \"Clear\",\n  resetFilter: \"Reset\",\n  cancelFilter: \"Cancel\",\n  textFilter: \"Text Filter\",\n  numberFilter: \"Number Filter\",\n  dateFilter: \"Date Filter\",\n  setFilter: \"Set Filter\",\n  filterOoo: \"Filter...\",\n  empty: \"Choose one\",\n  equals: \"Equals\",\n  notEqual: \"Does not equal\",\n  lessThan: \"Less than\",\n  greaterThan: \"Greater than\",\n  inRange: \"Between\",\n  inRangeStart: \"From\",\n  inRangeEnd: \"To\",\n  lessThanOrEqual: \"Less than or equal to\",\n  greaterThanOrEqual: \"Greater than or equal to\",\n  contains: \"Contains\",\n  notContains: \"Does not contain\",\n  startsWith: \"Begins with\",\n  endsWith: \"Ends with\",\n  blank: \"Blank\",\n  notBlank: \"Not blank\",\n  before: \"Before\",\n  after: \"After\",\n  andCondition: \"AND\",\n  orCondition: \"OR\",\n  dateFormatOoo: \"yyyy-mm-dd\"\n};\n\n// community-modules/core/src/filter/floating/provided/providedFilterUtils.ts\nfunction getDebounceMs(params, debounceDefault) {\n  if (isUseApplyButton(params)) {\n    if (params.debounceMs != null) {\n      _warnOnce(\"debounceMs is ignored when apply button is present\");\n    }\n    return 0;\n  }\n  return params.debounceMs != null ? params.debounceMs : debounceDefault;\n}\nfunction isUseApplyButton(params) {\n  return !!params.buttons && params.buttons.indexOf(\"apply\") >= 0;\n}\n\n// community-modules/core/src/filter/provided/providedFilter.ts\nvar ProvidedFilter = class extends Component {\n  constructor(filterNameKey) {\n    super();\n    this.filterNameKey = filterNameKey;\n    this.applyActive = false;\n    this.hidePopup = null;\n    this.debouncePending = false;\n    // after the user hits 'apply' the model gets copied to here. this is then the model that we use for\n    // all filtering. so if user changes UI but doesn't hit apply, then the UI will be out of sync with this model.\n    // this is what we want, as the UI should only become the 'active' filter once it's applied. when apply is\n    // inactive, this model will be in sync (following the debounce ms). if the UI is not a valid filter\n    // (eg the value is missing so nothing to filter on, or for set filter all checkboxes are checked so filter\n    // not active) then this appliedModel will be null/undefined.\n    this.appliedModel = null;\n    this.eFilterBody = RefPlaceholder;\n    this.buttonListeners = [];\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    this.resetTemplate();\n    this.createManagedBean(new ManagedFocusFeature(this.getFocusableElement(), {\n      handleKeyDown: this.handleKeyDown.bind(this)\n    }));\n    this.positionableFeature = new PositionableFeature(this.getPositionableElement(), {\n      forcePopupParentAsOffsetParent: true\n    });\n    this.createBean(this.positionableFeature);\n  }\n  // override\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  handleKeyDown(e) {}\n  getFilterTitle() {\n    return this.translate(this.filterNameKey);\n  }\n  isFilterActive() {\n    return !!this.appliedModel;\n  }\n  resetTemplate(paramsMap) {\n    let eGui = this.getGui();\n    if (eGui) {\n      eGui.removeEventListener(\"submit\", this.onFormSubmit);\n    }\n    const templateString = /* html */\n    `\n            <form class=\"ag-filter-wrapper\">\n                <div class=\"ag-filter-body-wrapper ag-${this.getCssIdentifier()}-body-wrapper\" data-ref=\"eFilterBody\">\n                    ${this.createBodyTemplate()}\n                </div>\n            </form>`;\n    this.setTemplate(templateString, this.getAgComponents(), paramsMap);\n    eGui = this.getGui();\n    if (eGui) {\n      eGui.addEventListener(\"submit\", this.onFormSubmit);\n    }\n  }\n  isReadOnly() {\n    return !!this.providedFilterParams.readOnly;\n  }\n  init(params) {\n    this.setParams(params);\n    this.resetUiToDefaults(true).then(() => {\n      this.updateUiVisibility();\n      this.setupOnBtApplyDebounce();\n    });\n  }\n  setParams(params) {\n    this.providedFilterParams = params;\n    this.applyActive = isUseApplyButton(params);\n    this.resetButtonsPanel();\n  }\n  updateParams(params) {\n    this.providedFilterParams = params;\n    this.applyActive = isUseApplyButton(params);\n    this.resetUiToActiveModel(this.getModel(), () => {\n      this.updateUiVisibility();\n      this.setupOnBtApplyDebounce();\n    });\n  }\n  resetButtonsPanel() {\n    const {\n      buttons\n    } = this.providedFilterParams;\n    const hasButtons = buttons && buttons.length > 0 && !this.isReadOnly();\n    if (!this.eButtonsPanel) {\n      if (hasButtons) {\n        this.eButtonsPanel = document.createElement(\"div\");\n        this.eButtonsPanel.classList.add(\"ag-filter-apply-panel\");\n      }\n    } else {\n      _clearElement(this.eButtonsPanel);\n      this.buttonListeners.forEach(destroyFunc => destroyFunc());\n      this.buttonListeners = [];\n    }\n    if (!hasButtons) {\n      if (this.eButtonsPanel) {\n        _removeFromParent(this.eButtonsPanel);\n      }\n      return;\n    }\n    const fragment = document.createDocumentFragment();\n    const addButton = type => {\n      let text;\n      let clickListener;\n      switch (type) {\n        case \"apply\":\n          text = this.translate(\"applyFilter\");\n          clickListener = e => this.onBtApply(false, false, e);\n          break;\n        case \"clear\":\n          text = this.translate(\"clearFilter\");\n          clickListener = () => this.onBtClear();\n          break;\n        case \"reset\":\n          text = this.translate(\"resetFilter\");\n          clickListener = () => this.onBtReset();\n          break;\n        case \"cancel\":\n          text = this.translate(\"cancelFilter\");\n          clickListener = e => {\n            this.onBtCancel(e);\n          };\n          break;\n        default:\n          _warnOnce(\"Unknown button type specified\");\n          return;\n      }\n      const buttonType = type === \"apply\" ? \"submit\" : \"button\";\n      const button = _loadTemplate( /* html */\n      `<button\n                    type=\"${buttonType}\"\n                    data-ref=\"${type}FilterButton\"\n                    class=\"ag-button ag-standard-button ag-filter-apply-panel-button\"\n                >${text}\n                </button>`);\n      this.buttonListeners.push(...this.addManagedElementListeners(button, {\n        click: clickListener\n      }));\n      fragment.append(button);\n    };\n    buttons.forEach(type => addButton(type));\n    this.eButtonsPanel.append(fragment);\n    this.getGui().appendChild(this.eButtonsPanel);\n  }\n  // subclasses can override this to provide alternative debounce defaults\n  getDefaultDebounceMs() {\n    return 0;\n  }\n  setupOnBtApplyDebounce() {\n    const debounceMs = getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs());\n    const debounceFunc = _debounce(this.checkApplyDebounce.bind(this), debounceMs);\n    this.onBtApplyDebounce = () => {\n      this.debouncePending = true;\n      debounceFunc();\n    };\n  }\n  checkApplyDebounce() {\n    if (this.debouncePending) {\n      this.debouncePending = false;\n      this.onBtApply();\n    }\n  }\n  getModel() {\n    return this.appliedModel ? this.appliedModel : null;\n  }\n  setModel(model) {\n    const promise = model != null ? this.setModelIntoUi(model) : this.resetUiToDefaults();\n    return promise.then(() => {\n      this.updateUiVisibility();\n      this.applyModel(\"api\");\n    });\n  }\n  onBtCancel(e) {\n    this.resetUiToActiveModel(this.getModel(), () => {\n      this.handleCancelEnd(e);\n    });\n  }\n  handleCancelEnd(e) {\n    if (this.providedFilterParams.closeOnApply) {\n      this.close(e);\n    }\n  }\n  resetUiToActiveModel(currentModel, afterUiUpdatedFunc) {\n    const afterAppliedFunc = () => {\n      this.onUiChanged(false, \"prevent\");\n      afterUiUpdatedFunc?.();\n    };\n    if (currentModel != null) {\n      this.setModelIntoUi(currentModel).then(afterAppliedFunc);\n    } else {\n      this.resetUiToDefaults().then(afterAppliedFunc);\n    }\n  }\n  onBtClear() {\n    this.resetUiToDefaults().then(() => this.onUiChanged());\n  }\n  onBtReset() {\n    this.onBtClear();\n    this.onBtApply();\n  }\n  /**\n   * Applies changes made in the UI to the filter, and returns true if the model has changed.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  applyModel(source = \"api\") {\n    const newModel = this.getModelFromUi();\n    if (!this.isModelValid(newModel)) {\n      return false;\n    }\n    const previousModel = this.appliedModel;\n    this.appliedModel = newModel;\n    return !this.areModelsEqual(previousModel, newModel);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isModelValid(model) {\n    return true;\n  }\n  onFormSubmit(e) {\n    e.preventDefault();\n  }\n  onBtApply(afterFloatingFilter = false, afterDataChange = false, e) {\n    if (e) {\n      e.preventDefault();\n    }\n    if (this.applyModel(afterDataChange ? \"rowDataUpdated\" : \"ui\")) {\n      const source = \"columnFilter\";\n      this.providedFilterParams.filterChangedCallback({\n        afterFloatingFilter,\n        afterDataChange,\n        source\n      });\n    }\n    const {\n      closeOnApply\n    } = this.providedFilterParams;\n    if (closeOnApply && this.applyActive && !afterFloatingFilter && !afterDataChange) {\n      this.close(e);\n    }\n  }\n  onNewRowsLoaded() {}\n  close(e) {\n    if (!this.hidePopup) {\n      return;\n    }\n    const keyboardEvent = e;\n    const key = keyboardEvent && keyboardEvent.key;\n    let params;\n    if (key === \"Enter\" || key === \"Space\") {\n      params = {\n        keyboardEvent\n      };\n    }\n    this.hidePopup(params);\n    this.hidePopup = null;\n  }\n  /**\n   * By default, if the change came from a floating filter it will be applied immediately, otherwise if there is no\n   * apply button it will be applied after a debounce, otherwise it will not be applied at all. This behaviour can\n   * be adjusted by using the apply parameter.\n   */\n  onUiChanged(fromFloatingFilter = false, apply) {\n    this.updateUiVisibility();\n    this.providedFilterParams.filterModifiedCallback();\n    if (this.applyActive && !this.isReadOnly()) {\n      const isValid = this.isModelValid(this.getModelFromUi());\n      const applyFilterButton = this.queryForHtmlElement(`[data-ref=\"applyFilterButton\"]`);\n      if (applyFilterButton) {\n        _setDisabled(applyFilterButton, !isValid);\n      }\n    }\n    if (fromFloatingFilter && !apply || apply === \"immediately\") {\n      this.onBtApply(fromFloatingFilter);\n    } else if (!this.applyActive && !apply || apply === \"debounce\") {\n      this.onBtApplyDebounce();\n    }\n  }\n  afterGuiAttached(params) {\n    if (params) {\n      this.hidePopup = params.hidePopup;\n    }\n    this.refreshFilterResizer(params?.container);\n  }\n  refreshFilterResizer(containerType) {\n    if (!this.positionableFeature || containerType === \"toolPanel\") {\n      return;\n    }\n    const isResizable = containerType === \"floatingFilter\" || containerType === \"columnFilter\";\n    const {\n      positionableFeature,\n      gos\n    } = this;\n    if (isResizable) {\n      positionableFeature.restoreLastSize();\n      positionableFeature.setResizable(gos.get(\"enableRtl\") ? {\n        bottom: true,\n        bottomLeft: true,\n        left: true\n      } : {\n        bottom: true,\n        bottomRight: true,\n        right: true\n      });\n    } else {\n      this.positionableFeature.removeSizeFromEl();\n      this.positionableFeature.setResizable(false);\n    }\n    this.positionableFeature.constrainSizeToAvailableHeight(true);\n  }\n  afterGuiDetached() {\n    this.checkApplyDebounce();\n    if (this.positionableFeature) {\n      this.positionableFeature.constrainSizeToAvailableHeight(false);\n    }\n  }\n  refresh(newParams) {\n    this.providedFilterParams = newParams;\n    return true;\n  }\n  destroy() {\n    const eGui = this.getGui();\n    if (eGui) {\n      eGui.removeEventListener(\"submit\", this.onFormSubmit);\n    }\n    this.hidePopup = null;\n    if (this.positionableFeature) {\n      this.positionableFeature = this.destroyBean(this.positionableFeature);\n    }\n    this.appliedModel = null;\n    super.destroy();\n  }\n  translate(key) {\n    const translate = this.localeService.getLocaleTextFunc();\n    return translate(key, FILTER_LOCALE_TEXT[key]);\n  }\n  getCellValue(rowNode) {\n    return this.providedFilterParams.getValue(rowNode);\n  }\n  // override to control positionable feature\n  getPositionableElement() {\n    return this.eFilterBody;\n  }\n};\n\n// community-modules/core/src/widgets/agRadioButton.ts\nvar AgRadioButton = class extends AgCheckbox {\n  constructor(config) {\n    super(config, \"ag-radio-button\", \"radio\");\n  }\n  isSelected() {\n    return this.eInput.checked;\n  }\n  toggle() {\n    if (this.eInput.disabled) {\n      return;\n    }\n    if (!this.isSelected()) {\n      this.setValue(true);\n    }\n  }\n  addInputListeners() {\n    super.addInputListeners();\n    this.addManagedEventListeners({\n      checkboxChanged: this.onChange.bind(this)\n    });\n  }\n  /**\n   * This ensures that if another radio button in the same named group is selected, we deselect this radio button.\n   * By default the browser does this for you, but we are managing classes ourselves in order to ensure input\n   * elements are styled correctly in IE11, and the DOM 'changed' event is only fired when a button is selected,\n   * not deselected, so we need to use our own event.\n   */\n  onChange(event) {\n    if (event.selected && event.name && this.eInput.name && this.eInput.name === event.name && event.id && this.eInput.id !== event.id) {\n      this.setValue(false, true);\n    }\n  }\n};\n\n// community-modules/core/src/widgets/agList.ts\nvar AgList = class extends Component {\n  constructor(cssIdentifier = \"default\", unFocusable = false) {\n    super( /* html */\n    `<div class=\"ag-list ag-${cssIdentifier}-list\" role=\"listbox\"></div>`);\n    this.cssIdentifier = cssIdentifier;\n    this.unFocusable = unFocusable;\n    this.activeClass = \"ag-active-item\";\n    this.options = [];\n    this.itemEls = [];\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    this.addManagedElementListeners(eGui, {\n      mouseleave: () => this.clearHighlighted()\n    });\n    if (this.unFocusable) {\n      return;\n    }\n    this.addManagedElementListeners(eGui, {\n      keydown: this.handleKeyDown.bind(this)\n    });\n  }\n  handleKeyDown(e) {\n    const key = e.key;\n    switch (key) {\n      case KeyCode.ENTER:\n        if (!this.highlightedEl) {\n          this.setValue(this.getValue());\n        } else {\n          const pos = this.itemEls.indexOf(this.highlightedEl);\n          this.setValueByIndex(pos);\n        }\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n        e.preventDefault();\n        this.navigate(key);\n        break;\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        e.preventDefault();\n        this.navigateToPage(key);\n        break;\n    }\n  }\n  navigate(key) {\n    const isDown = key === KeyCode.DOWN;\n    let itemToHighlight;\n    if (!this.highlightedEl) {\n      itemToHighlight = this.itemEls[isDown ? 0 : this.itemEls.length - 1];\n    } else {\n      const currentIdx = this.itemEls.indexOf(this.highlightedEl);\n      let nextPos = currentIdx + (isDown ? 1 : -1);\n      nextPos = Math.min(Math.max(nextPos, 0), this.itemEls.length - 1);\n      itemToHighlight = this.itemEls[nextPos];\n    }\n    this.highlightItem(itemToHighlight);\n  }\n  navigateToPage(key) {\n    if (!this.highlightedEl || this.itemEls.length === 0) {\n      return;\n    }\n    const currentIdx = this.itemEls.indexOf(this.highlightedEl);\n    const rowCount = this.options.length - 1;\n    const itemHeight = this.itemEls[0].clientHeight;\n    const pageSize = Math.floor(this.getGui().clientHeight / itemHeight);\n    let newIndex = -1;\n    if (key === KeyCode.PAGE_HOME) {\n      newIndex = 0;\n    } else if (key === KeyCode.PAGE_END) {\n      newIndex = rowCount;\n    } else if (key === KeyCode.PAGE_DOWN) {\n      newIndex = Math.min(currentIdx + pageSize, rowCount);\n    } else if (key === KeyCode.PAGE_UP) {\n      newIndex = Math.max(currentIdx - pageSize, 0);\n    }\n    if (newIndex === -1) {\n      return;\n    }\n    this.highlightItem(this.itemEls[newIndex]);\n  }\n  addOptions(listOptions) {\n    listOptions.forEach(listOption => this.addOption(listOption));\n    return this;\n  }\n  addOption(listOption) {\n    const {\n      value,\n      text\n    } = listOption;\n    const valueToRender = text || value;\n    this.options.push({\n      value,\n      text: valueToRender\n    });\n    this.renderOption(value, valueToRender);\n    this.updateIndices();\n    return this;\n  }\n  clearOptions() {\n    this.options = [];\n    this.reset(true);\n    this.itemEls.forEach(itemEl => {\n      _removeFromParent(itemEl);\n    });\n    this.itemEls = [];\n  }\n  updateIndices() {\n    const options = this.getGui().querySelectorAll(\".ag-list-item\");\n    options.forEach((option, idx) => {\n      _setAriaPosInSet(option, idx + 1);\n      _setAriaSetSize(option, options.length);\n    });\n  }\n  renderOption(value, text) {\n    const eDocument = this.gos.getDocument();\n    const itemEl = eDocument.createElement(\"div\");\n    _setAriaRole(itemEl, \"option\");\n    itemEl.classList.add(\"ag-list-item\", `ag-${this.cssIdentifier}-list-item`);\n    const span = eDocument.createElement(\"span\");\n    itemEl.appendChild(span);\n    span.textContent = text;\n    if (!this.unFocusable) {\n      itemEl.tabIndex = -1;\n    }\n    this.itemEls.push(itemEl);\n    this.addManagedListeners(itemEl, {\n      mouseover: () => this.highlightItem(itemEl),\n      mousedown: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setValue(value);\n      }\n    });\n    this.createManagedBean(new TooltipFeature({\n      getTooltipValue: () => text,\n      getGui: () => itemEl,\n      getLocation: () => \"UNKNOWN\",\n      // only show tooltips for items where the text cannot be fully displayed\n      shouldDisplayTooltip: () => span.scrollWidth > span.clientWidth\n    }));\n    this.getGui().appendChild(itemEl);\n  }\n  setValue(value, silent) {\n    if (this.value === value) {\n      this.fireItemSelected();\n      return this;\n    }\n    if (value == null) {\n      this.reset(silent);\n      return this;\n    }\n    const idx = this.options.findIndex(option => option.value === value);\n    if (idx !== -1) {\n      const option = this.options[idx];\n      this.value = option.value;\n      this.displayValue = option.text;\n      this.highlightItem(this.itemEls[idx]);\n      if (!silent) {\n        this.fireChangeEvent();\n      }\n    }\n    return this;\n  }\n  setValueByIndex(idx) {\n    return this.setValue(this.options[idx].value);\n  }\n  getValue() {\n    return this.value;\n  }\n  getDisplayValue() {\n    return this.displayValue;\n  }\n  refreshHighlighted() {\n    this.clearHighlighted();\n    const idx = this.options.findIndex(option => option.value === this.value);\n    if (idx !== -1) {\n      this.highlightItem(this.itemEls[idx]);\n    }\n  }\n  reset(silent) {\n    this.value = null;\n    this.displayValue = null;\n    this.clearHighlighted();\n    if (!silent) {\n      this.fireChangeEvent();\n    }\n  }\n  highlightItem(el) {\n    if (!_isVisible(el)) {\n      return;\n    }\n    this.clearHighlighted();\n    this.highlightedEl = el;\n    this.highlightedEl.classList.add(this.activeClass);\n    _setAriaSelected(this.highlightedEl, true);\n    const eGui = this.getGui();\n    const {\n      scrollTop,\n      clientHeight\n    } = eGui;\n    const {\n      offsetTop,\n      offsetHeight\n    } = el;\n    if (offsetTop + offsetHeight > scrollTop + clientHeight || offsetTop < scrollTop) {\n      this.highlightedEl.scrollIntoView({\n        block: \"nearest\"\n      });\n    }\n    if (!this.unFocusable) {\n      this.highlightedEl.focus();\n    }\n  }\n  clearHighlighted() {\n    if (!this.highlightedEl || !_isVisible(this.highlightedEl)) {\n      return;\n    }\n    this.highlightedEl.classList.remove(this.activeClass);\n    _setAriaSelected(this.highlightedEl, false);\n    this.highlightedEl = null;\n  }\n  fireChangeEvent() {\n    this.dispatchLocalEvent({\n      type: \"fieldValueChanged\"\n    });\n    this.fireItemSelected();\n  }\n  fireItemSelected() {\n    this.dispatchLocalEvent({\n      type: \"selectedItem\"\n    });\n  }\n};\n\n// community-modules/core/src/widgets/agPickerField.ts\nvar AgPickerField = class extends AgAbstractField {\n  constructor(config) {\n    super(config, config?.template || /* html */\n    `\n            <div class=\"ag-picker-field\" role=\"presentation\">\n                <div data-ref=\"eLabel\"></div>\n                    <div data-ref=\"eWrapper\" class=\"ag-wrapper ag-picker-field-wrapper ag-picker-collapsed\">\n                    <div data-ref=\"eDisplayField\" class=\"ag-picker-field-display\"></div>\n                    <div data-ref=\"eIcon\" class=\"ag-picker-field-icon\" aria-hidden=\"true\"></div>\n                </div>\n            </div>`, config?.agComponents || [], config?.className);\n    this.isPickerDisplayed = false;\n    this.skipClick = false;\n    this.pickerGap = 4;\n    this.hideCurrentPicker = null;\n    this.eLabel = RefPlaceholder;\n    this.eWrapper = RefPlaceholder;\n    this.eDisplayField = RefPlaceholder;\n    this.eIcon = RefPlaceholder;\n    this.ariaRole = config?.ariaRole;\n    this.onPickerFocusIn = this.onPickerFocusIn.bind(this);\n    this.onPickerFocusOut = this.onPickerFocusOut.bind(this);\n    if (!config) {\n      return;\n    }\n    const {\n      pickerGap,\n      maxPickerHeight,\n      variableWidth,\n      minPickerWidth,\n      maxPickerWidth\n    } = config;\n    if (pickerGap != null) {\n      this.pickerGap = pickerGap;\n    }\n    this.variableWidth = !!variableWidth;\n    if (maxPickerHeight != null) {\n      this.setPickerMaxHeight(maxPickerHeight);\n    }\n    if (minPickerWidth != null) {\n      this.setPickerMinWidth(minPickerWidth);\n    }\n    if (maxPickerWidth != null) {\n      this.setPickerMaxWidth(maxPickerWidth);\n    }\n  }\n  wireBeans(beans) {\n    this.popupService = beans.popupService;\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.setupAria();\n    const displayId = `ag-${this.getCompId()}-display`;\n    this.eDisplayField.setAttribute(\"id\", displayId);\n    const ariaEl = this.getAriaElement();\n    this.addManagedElementListeners(ariaEl, {\n      keydown: this.onKeyDown.bind(this)\n    });\n    this.addManagedElementListeners(this.eLabel, {\n      mousedown: this.onLabelOrWrapperMouseDown.bind(this)\n    });\n    this.addManagedElementListeners(this.eWrapper, {\n      mousedown: this.onLabelOrWrapperMouseDown.bind(this)\n    });\n    const {\n      pickerIcon,\n      inputWidth\n    } = this.config;\n    if (pickerIcon) {\n      const icon = _createIconNoSpan(pickerIcon, this.gos);\n      if (icon) {\n        this.eIcon.appendChild(icon);\n      }\n    }\n    if (inputWidth != null) {\n      this.setInputWidth(inputWidth);\n    }\n  }\n  setupAria() {\n    const ariaEl = this.getAriaElement();\n    ariaEl.setAttribute(\"tabindex\", this.gos.get(\"tabIndex\").toString());\n    _setAriaExpanded(ariaEl, false);\n    if (this.ariaRole) {\n      _setAriaRole(ariaEl, this.ariaRole);\n    }\n  }\n  onLabelOrWrapperMouseDown(e) {\n    if (e) {\n      const focusableEl = this.getFocusableElement();\n      if (focusableEl !== this.eWrapper && e?.target === focusableEl) {\n        return;\n      }\n      e.preventDefault();\n      this.getFocusableElement().focus();\n    }\n    if (this.skipClick) {\n      this.skipClick = false;\n      return;\n    }\n    if (this.isDisabled()) {\n      return;\n    }\n    if (this.isPickerDisplayed) {\n      this.hidePicker();\n    } else {\n      this.showPicker();\n    }\n  }\n  onKeyDown(e) {\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n      case KeyCode.ENTER:\n      case KeyCode.SPACE:\n        e.preventDefault();\n        this.onLabelOrWrapperMouseDown();\n        break;\n      case KeyCode.ESCAPE:\n        if (this.isPickerDisplayed) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (this.hideCurrentPicker) {\n            this.hideCurrentPicker();\n          }\n        }\n        break;\n    }\n  }\n  showPicker() {\n    this.isPickerDisplayed = true;\n    if (!this.pickerComponent) {\n      this.pickerComponent = this.createPickerComponent();\n    }\n    const pickerGui = this.pickerComponent.getGui();\n    pickerGui.addEventListener(\"focusin\", this.onPickerFocusIn);\n    pickerGui.addEventListener(\"focusout\", this.onPickerFocusOut);\n    this.hideCurrentPicker = this.renderAndPositionPicker();\n    this.toggleExpandedStyles(true);\n  }\n  renderAndPositionPicker() {\n    const eDocument = this.gos.getDocument();\n    const ePicker = this.pickerComponent.getGui();\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\n      [this.destroyMouseWheelFunc] = this.addManagedEventListeners({\n        bodyScroll: () => {\n          this.hidePicker();\n        }\n      });\n    }\n    const translate = this.localeService.getLocaleTextFunc();\n    const {\n      pickerAriaLabelKey,\n      pickerAriaLabelValue,\n      modalPicker = true\n    } = this.config;\n    const popupParams = {\n      modal: modalPicker,\n      eChild: ePicker,\n      closeOnEsc: true,\n      closedCallback: () => {\n        const activeEl = this.gos.getActiveDomElement();\n        const shouldRestoreFocus = !activeEl || activeEl === eDocument.body;\n        this.beforeHidePicker();\n        if (shouldRestoreFocus && this.isAlive()) {\n          this.getFocusableElement().focus();\n        }\n      },\n      ariaLabel: translate(pickerAriaLabelKey, pickerAriaLabelValue)\n    };\n    const addPopupRes = this.popupService.addPopup(popupParams);\n    const {\n      maxPickerHeight,\n      minPickerWidth,\n      maxPickerWidth,\n      variableWidth\n    } = this;\n    if (variableWidth) {\n      if (minPickerWidth) {\n        ePicker.style.minWidth = minPickerWidth;\n      }\n      ePicker.style.width = _formatSize(_getAbsoluteWidth(this.eWrapper));\n      if (maxPickerWidth) {\n        ePicker.style.maxWidth = maxPickerWidth;\n      }\n    } else {\n      _setElementWidth(ePicker, maxPickerWidth ?? _getAbsoluteWidth(this.eWrapper));\n    }\n    const maxHeight = maxPickerHeight ?? `${_getInnerHeight(this.popupService.getPopupParent())}px`;\n    ePicker.style.setProperty(\"max-height\", maxHeight);\n    ePicker.style.position = \"absolute\";\n    this.alignPickerToComponent();\n    return addPopupRes.hideFunc;\n  }\n  alignPickerToComponent() {\n    if (!this.pickerComponent) {\n      return;\n    }\n    const {\n      pickerType\n    } = this.config;\n    const {\n      pickerGap\n    } = this;\n    const alignSide = this.gos.get(\"enableRtl\") ? \"right\" : \"left\";\n    this.popupService.positionPopupByComponent({\n      type: pickerType,\n      eventSource: this.eWrapper,\n      ePopup: this.pickerComponent.getGui(),\n      position: \"under\",\n      alignSide,\n      keepWithinBounds: true,\n      nudgeY: pickerGap\n    });\n  }\n  beforeHidePicker() {\n    if (this.destroyMouseWheelFunc) {\n      this.destroyMouseWheelFunc();\n      this.destroyMouseWheelFunc = void 0;\n    }\n    this.toggleExpandedStyles(false);\n    const pickerGui = this.pickerComponent.getGui();\n    pickerGui.removeEventListener(\"focusin\", this.onPickerFocusIn);\n    pickerGui.removeEventListener(\"focusout\", this.onPickerFocusOut);\n    this.isPickerDisplayed = false;\n    this.pickerComponent = void 0;\n    this.hideCurrentPicker = null;\n  }\n  toggleExpandedStyles(expanded) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const ariaEl = this.getAriaElement();\n    _setAriaExpanded(ariaEl, expanded);\n    this.eWrapper.classList.toggle(\"ag-picker-expanded\", expanded);\n    this.eWrapper.classList.toggle(\"ag-picker-collapsed\", !expanded);\n  }\n  onPickerFocusIn() {\n    this.togglePickerHasFocus(true);\n  }\n  onPickerFocusOut(e) {\n    if (!this.pickerComponent?.getGui().contains(e.relatedTarget)) {\n      this.togglePickerHasFocus(false);\n    }\n  }\n  togglePickerHasFocus(focused) {\n    if (!this.pickerComponent) {\n      return;\n    }\n    this.eWrapper.classList.toggle(\"ag-picker-has-focus\", focused);\n  }\n  hidePicker() {\n    if (this.hideCurrentPicker) {\n      this.hideCurrentPicker();\n    }\n  }\n  setInputWidth(width) {\n    _setElementWidth(this.eWrapper, width);\n    return this;\n  }\n  getFocusableElement() {\n    return this.eWrapper;\n  }\n  setPickerGap(gap) {\n    this.pickerGap = gap;\n    return this;\n  }\n  setPickerMinWidth(width) {\n    if (typeof width === \"number\") {\n      width = `${width}px`;\n    }\n    this.minPickerWidth = width == null ? void 0 : width;\n    return this;\n  }\n  setPickerMaxWidth(width) {\n    if (typeof width === \"number\") {\n      width = `${width}px`;\n    }\n    this.maxPickerWidth = width == null ? void 0 : width;\n    return this;\n  }\n  setPickerMaxHeight(height) {\n    if (typeof height === \"number\") {\n      height = `${height}px`;\n    }\n    this.maxPickerHeight = height == null ? void 0 : height;\n    return this;\n  }\n  destroy() {\n    this.hidePicker();\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/widgets/agSelect.ts\nvar AgSelect = class extends AgPickerField {\n  constructor(config) {\n    super({\n      pickerAriaLabelKey: \"ariaLabelSelectField\",\n      pickerAriaLabelValue: \"Select Field\",\n      pickerType: \"ag-list\",\n      className: \"ag-select\",\n      pickerIcon: \"smallDown\",\n      ariaRole: \"combobox\",\n      ...config\n    });\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.createListComponent();\n    this.eWrapper.tabIndex = this.gos.get(\"tabIndex\");\n    const {\n      options,\n      value,\n      placeholder\n    } = this.config;\n    if (options != null) {\n      this.addOptions(options);\n    }\n    if (value != null) {\n      this.setValue(value, true);\n    }\n    if (placeholder && value == null) {\n      this.eDisplayField.textContent = placeholder;\n    }\n    this.addManagedElementListeners(this.eWrapper, {\n      focusout: this.onWrapperFocusOut.bind(this)\n    });\n  }\n  onWrapperFocusOut(e) {\n    if (!this.eWrapper.contains(e.relatedTarget)) {\n      this.hidePicker();\n    }\n  }\n  createListComponent() {\n    this.listComponent = this.createBean(new AgList(\"select\", true));\n    this.listComponent.setParentComponent(this);\n    const eListAriaEl = this.listComponent.getAriaElement();\n    const listId = `ag-select-list-${this.listComponent.getCompId()}`;\n    eListAriaEl.setAttribute(\"id\", listId);\n    _setAriaControls(this.getAriaElement(), eListAriaEl);\n    this.listComponent.addManagedListeners(this.listComponent, {\n      selectedItem: () => {\n        this.hidePicker();\n        this.dispatchLocalEvent({\n          type: \"selectedItem\"\n        });\n      }\n    });\n    this.listComponent.addManagedListeners(this.listComponent, {\n      fieldValueChanged: () => {\n        if (!this.listComponent) {\n          return;\n        }\n        this.setValue(this.listComponent.getValue(), false, true);\n        this.hidePicker();\n      }\n    });\n  }\n  createPickerComponent() {\n    return this.listComponent;\n  }\n  onKeyDown(e) {\n    const {\n      key\n    } = e;\n    if (key === KeyCode.TAB) {\n      this.hidePicker();\n    }\n    switch (key) {\n      case KeyCode.ENTER:\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        e.preventDefault();\n        if (this.isPickerDisplayed) {\n          this.listComponent?.handleKeyDown(e);\n        } else {\n          super.onKeyDown(e);\n        }\n        break;\n      case KeyCode.ESCAPE:\n        super.onKeyDown(e);\n        break;\n    }\n  }\n  showPicker() {\n    if (!this.listComponent) {\n      return;\n    }\n    super.showPicker();\n    this.listComponent.refreshHighlighted();\n  }\n  addOptions(options) {\n    options.forEach(option => this.addOption(option));\n    return this;\n  }\n  addOption(option) {\n    this.listComponent.addOption(option);\n    return this;\n  }\n  clearOptions() {\n    this.listComponent?.clearOptions();\n    return this;\n  }\n  setValue(value, silent, fromPicker) {\n    if (this.value === value || !this.listComponent) {\n      return this;\n    }\n    if (!fromPicker) {\n      this.listComponent.setValue(value, true);\n    }\n    const newValue = this.listComponent.getValue();\n    if (newValue === this.getValue()) {\n      return this;\n    }\n    let displayValue = this.listComponent.getDisplayValue();\n    if (displayValue == null && this.config.placeholder) {\n      displayValue = this.config.placeholder;\n    }\n    this.eDisplayField.textContent = displayValue;\n    this.setTooltip({\n      newTooltipText: displayValue ?? null,\n      shouldDisplayTooltip: () => this.eDisplayField.scrollWidth > this.eDisplayField.clientWidth\n    });\n    return super.setValue(value, silent);\n  }\n  destroy() {\n    if (this.listComponent) {\n      this.listComponent = this.destroyBean(this.listComponent);\n    }\n    super.destroy();\n  }\n};\nvar AgSelectSelector = {\n  selector: \"AG-SELECT\",\n  component: AgSelect\n};\n\n// community-modules/core/src/filter/provided/optionsFactory.ts\nvar OptionsFactory = class {\n  constructor() {\n    this.customFilterOptions = {};\n  }\n  init(params, defaultOptions) {\n    this.filterOptions = params.filterOptions || defaultOptions;\n    this.mapCustomOptions();\n    this.selectDefaultItem(params);\n  }\n  getFilterOptions() {\n    return this.filterOptions;\n  }\n  mapCustomOptions() {\n    if (!this.filterOptions) {\n      return;\n    }\n    this.filterOptions.forEach(filterOption => {\n      if (typeof filterOption === \"string\") {\n        return;\n      }\n      const requiredProperties = [[\"displayKey\"], [\"displayName\"], [\"predicate\", \"test\"]];\n      const propertyCheck = keys => {\n        if (!keys.some(key => filterOption[key] != null)) {\n          _warnOnce(`ignoring FilterOptionDef as it doesn't contain one of '${keys}'`);\n          return false;\n        }\n        return true;\n      };\n      if (!requiredProperties.every(propertyCheck)) {\n        this.filterOptions = this.filterOptions.filter(v => v === filterOption) || [];\n        return;\n      }\n      this.customFilterOptions[filterOption.displayKey] = filterOption;\n    });\n  }\n  selectDefaultItem(params) {\n    if (params.defaultOption) {\n      this.defaultOption = params.defaultOption;\n    } else if (this.filterOptions.length >= 1) {\n      const firstFilterOption = this.filterOptions[0];\n      if (typeof firstFilterOption === \"string\") {\n        this.defaultOption = firstFilterOption;\n      } else if (firstFilterOption.displayKey) {\n        this.defaultOption = firstFilterOption.displayKey;\n      } else {\n        _warnOnce(`invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'`);\n      }\n    } else {\n      _warnOnce(\"no filter options for filter\");\n    }\n  }\n  getDefaultOption() {\n    return this.defaultOption;\n  }\n  getCustomOption(name) {\n    return this.customFilterOptions[name];\n  }\n};\n\n// community-modules/core/src/filter/provided/simpleFilter.ts\nvar SimpleFilter = class extends ProvidedFilter {\n  constructor() {\n    super(...arguments);\n    this.eTypes = [];\n    this.eJoinOperatorPanels = [];\n    this.eJoinOperatorsAnd = [];\n    this.eJoinOperatorsOr = [];\n    this.eConditionBodies = [];\n    this.listener = () => this.onUiChanged();\n    this.lastUiCompletePosition = null;\n    this.joinOperatorId = 0;\n  }\n  getNumberOfInputs(type) {\n    const customOpts = this.optionsFactory.getCustomOption(type);\n    if (customOpts) {\n      const {\n        numberOfInputs\n      } = customOpts;\n      return numberOfInputs != null ? numberOfInputs : 1;\n    }\n    const zeroInputTypes = [\"empty\", \"notBlank\", \"blank\"];\n    if (type && zeroInputTypes.indexOf(type) >= 0) {\n      return 0;\n    } else if (type === \"inRange\") {\n      return 2;\n    }\n    return 1;\n  }\n  // floating filter calls this when user applies filter from floating filter\n  onFloatingFilterChanged(type, value) {\n    this.setTypeFromFloatingFilter(type);\n    this.setValueFromFloatingFilter(value);\n    this.onUiChanged(true);\n  }\n  setTypeFromFloatingFilter(type) {\n    this.eTypes.forEach((eType, position) => {\n      if (position === 0) {\n        eType.setValue(type, true);\n      } else {\n        eType.setValue(this.optionsFactory.getDefaultOption(), true);\n      }\n    });\n  }\n  getModelFromUi() {\n    const conditions = this.getUiCompleteConditions();\n    if (conditions.length === 0) {\n      return null;\n    }\n    if (this.maxNumConditions > 1 && conditions.length > 1) {\n      return {\n        filterType: this.getFilterType(),\n        operator: this.getJoinOperator(),\n        conditions\n      };\n    }\n    return conditions[0];\n  }\n  getConditionTypes() {\n    return this.eTypes.map(eType => eType.getValue());\n  }\n  getConditionType(position) {\n    return this.eTypes[position].getValue();\n  }\n  getJoinOperator() {\n    if (this.eJoinOperatorsOr.length === 0) {\n      return this.defaultJoinOperator;\n    }\n    return this.eJoinOperatorsOr[0].getValue() === true ? \"OR\" : \"AND\";\n  }\n  areModelsEqual(a, b) {\n    if (!a && !b) {\n      return true;\n    }\n    if (!a && b || a && !b) {\n      return false;\n    }\n    const aIsSimple = !a.operator;\n    const bIsSimple = !b.operator;\n    const oneSimpleOneCombined = !aIsSimple && bIsSimple || aIsSimple && !bIsSimple;\n    if (oneSimpleOneCombined) {\n      return false;\n    }\n    let res;\n    if (aIsSimple) {\n      const aSimple = a;\n      const bSimple = b;\n      res = this.areSimpleModelsEqual(aSimple, bSimple);\n    } else {\n      const aCombined = a;\n      const bCombined = b;\n      res = aCombined.operator === bCombined.operator && _areEqual(aCombined.conditions, bCombined.conditions, (aModel, bModel) => this.areSimpleModelsEqual(aModel, bModel));\n    }\n    return res;\n  }\n  shouldRefresh(newParams) {\n    const model = this.getModel();\n    const conditions = model ? model.conditions ?? [model] : null;\n    const newOptionsList = newParams.filterOptions?.map(option => typeof option === \"string\" ? option : option.displayKey) ?? this.getDefaultFilterOptions();\n    const allConditionsExistInNewOptionsList = !conditions || conditions.every(condition => newOptionsList.find(option => option === condition.type) !== void 0);\n    if (!allConditionsExistInNewOptionsList) {\n      return false;\n    }\n    if (typeof newParams.maxNumConditions === \"number\" && conditions && conditions.length > newParams.maxNumConditions) {\n      return false;\n    }\n    return true;\n  }\n  refresh(newParams) {\n    if (!this.shouldRefresh(newParams)) {\n      return false;\n    }\n    const parentRefreshed = super.refresh(newParams);\n    if (!parentRefreshed) {\n      return false;\n    }\n    this.setParams(newParams);\n    this.removeConditionsAndOperators(0);\n    this.createOption();\n    this.setModel(this.getModel());\n    return true;\n  }\n  setModelIntoUi(model) {\n    const isCombined = model.operator;\n    if (isCombined) {\n      const combinedModel = model;\n      let conditions = combinedModel.conditions;\n      if (conditions == null) {\n        conditions = [];\n        _warnOnce(`Filter model is missing 'conditions'`);\n      }\n      const numConditions = this.validateAndUpdateConditions(conditions);\n      const numPrevConditions = this.getNumConditions();\n      if (numConditions < numPrevConditions) {\n        this.removeConditionsAndOperators(numConditions);\n      } else if (numConditions > numPrevConditions) {\n        for (let i = numPrevConditions; i < numConditions; i++) {\n          this.createJoinOperatorPanel();\n          this.createOption();\n        }\n      }\n      const orChecked = combinedModel.operator === \"OR\";\n      this.eJoinOperatorsAnd.forEach(eJoinOperatorAnd => eJoinOperatorAnd.setValue(!orChecked, true));\n      this.eJoinOperatorsOr.forEach(eJoinOperatorOr => eJoinOperatorOr.setValue(orChecked, true));\n      conditions.forEach((condition, position) => {\n        this.eTypes[position].setValue(condition.type, true);\n        this.setConditionIntoUi(condition, position);\n      });\n    } else {\n      const simpleModel = model;\n      if (this.getNumConditions() > 1) {\n        this.removeConditionsAndOperators(1);\n      }\n      this.eTypes[0].setValue(simpleModel.type, true);\n      this.setConditionIntoUi(simpleModel, 0);\n    }\n    this.lastUiCompletePosition = this.getNumConditions() - 1;\n    this.createMissingConditionsAndOperators();\n    this.onUiChanged();\n    return AgPromise.resolve();\n  }\n  validateAndUpdateConditions(conditions) {\n    let numConditions = conditions.length;\n    if (numConditions > this.maxNumConditions) {\n      conditions.splice(this.maxNumConditions);\n      _warnOnce('Filter Model contains more conditions than \"filterParams.maxNumConditions\". Additional conditions have been ignored.');\n      numConditions = this.maxNumConditions;\n    }\n    return numConditions;\n  }\n  doesFilterPass(params) {\n    const model = this.getModel();\n    if (model == null) {\n      return true;\n    }\n    const {\n      operator\n    } = model;\n    const models = [];\n    if (operator) {\n      const combinedModel = model;\n      models.push(...(combinedModel.conditions ?? []));\n    } else {\n      models.push(model);\n    }\n    const combineFunction = operator && operator === \"OR\" ? \"some\" : \"every\";\n    return models[combineFunction](m => this.individualConditionPasses(params, m));\n  }\n  setParams(params) {\n    super.setParams(params);\n    this.setNumConditions(params);\n    this.defaultJoinOperator = this.getDefaultJoinOperator(params.defaultJoinOperator);\n    this.filterPlaceholder = params.filterPlaceholder;\n    this.optionsFactory = new OptionsFactory();\n    this.optionsFactory.init(params, this.getDefaultFilterOptions());\n    this.createFilterListOptions();\n    this.createOption();\n    this.createMissingConditionsAndOperators();\n    if (this.isReadOnly()) {\n      this.eFilterBody.setAttribute(\"tabindex\", \"-1\");\n    }\n  }\n  setNumConditions(params) {\n    this.maxNumConditions = params.maxNumConditions ?? 2;\n    if (this.maxNumConditions < 1) {\n      _warnOnce('\"filterParams.maxNumConditions\" must be greater than or equal to zero.');\n      this.maxNumConditions = 1;\n    }\n    this.numAlwaysVisibleConditions = params.numAlwaysVisibleConditions ?? 1;\n    if (this.numAlwaysVisibleConditions < 1) {\n      _warnOnce('\"filterParams.numAlwaysVisibleConditions\" must be greater than or equal to zero.');\n      this.numAlwaysVisibleConditions = 1;\n    }\n    if (this.numAlwaysVisibleConditions > this.maxNumConditions) {\n      _warnOnce('\"filterParams.numAlwaysVisibleConditions\" cannot be greater than \"filterParams.maxNumConditions\".');\n      this.numAlwaysVisibleConditions = this.maxNumConditions;\n    }\n  }\n  createOption() {\n    const eType = this.createManagedBean(new AgSelect());\n    this.eTypes.push(eType);\n    eType.addCssClass(\"ag-filter-select\");\n    this.eFilterBody.appendChild(eType.getGui());\n    const eConditionBody = this.createValueElement();\n    this.eConditionBodies.push(eConditionBody);\n    this.eFilterBody.appendChild(eConditionBody);\n    this.putOptionsIntoDropdown(eType);\n    this.resetType(eType);\n    const position = this.getNumConditions() - 1;\n    this.forEachPositionInput(position, element => this.resetInput(element));\n    this.addChangedListeners(eType, position);\n  }\n  createJoinOperatorPanel() {\n    const eJoinOperatorPanel = document.createElement(\"div\");\n    this.eJoinOperatorPanels.push(eJoinOperatorPanel);\n    eJoinOperatorPanel.classList.add(\"ag-filter-condition\");\n    const eJoinOperatorAnd = this.createJoinOperator(this.eJoinOperatorsAnd, eJoinOperatorPanel, \"and\");\n    const eJoinOperatorOr = this.createJoinOperator(this.eJoinOperatorsOr, eJoinOperatorPanel, \"or\");\n    this.eFilterBody.appendChild(eJoinOperatorPanel);\n    const index = this.eJoinOperatorPanels.length - 1;\n    const uniqueGroupId = this.joinOperatorId++;\n    this.resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId);\n    this.resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId);\n    if (!this.isReadOnly()) {\n      eJoinOperatorAnd.onValueChange(this.listener);\n      eJoinOperatorOr.onValueChange(this.listener);\n    }\n  }\n  createJoinOperator(eJoinOperators, eJoinOperatorPanel, andOr) {\n    const eJoinOperator = this.createManagedBean(new AgRadioButton());\n    eJoinOperators.push(eJoinOperator);\n    eJoinOperator.addCssClass(\"ag-filter-condition-operator\");\n    eJoinOperator.addCssClass(`ag-filter-condition-operator-${andOr}`);\n    eJoinOperatorPanel.appendChild(eJoinOperator.getGui());\n    return eJoinOperator;\n  }\n  getDefaultJoinOperator(defaultJoinOperator) {\n    return defaultJoinOperator === \"AND\" || defaultJoinOperator === \"OR\" ? defaultJoinOperator : \"AND\";\n  }\n  createFilterListOptions() {\n    const filterOptions = this.optionsFactory.getFilterOptions();\n    this.filterListOptions = filterOptions.map(option => typeof option === \"string\" ? this.createBoilerplateListOption(option) : this.createCustomListOption(option));\n  }\n  putOptionsIntoDropdown(eType) {\n    this.filterListOptions.forEach(listOption => {\n      eType.addOption(listOption);\n    });\n    eType.setDisabled(this.filterListOptions.length <= 1);\n  }\n  createBoilerplateListOption(option) {\n    return {\n      value: option,\n      text: this.translate(option)\n    };\n  }\n  createCustomListOption(option) {\n    const {\n      displayKey\n    } = option;\n    const customOption = this.optionsFactory.getCustomOption(option.displayKey);\n    return {\n      value: displayKey,\n      text: customOption ? this.localeService.getLocaleTextFunc()(customOption.displayKey, customOption.displayName) : this.translate(displayKey)\n    };\n  }\n  createBodyTemplate() {\n    return \"\";\n  }\n  getAgComponents() {\n    return [];\n  }\n  getCssIdentifier() {\n    return \"simple-filter\";\n  }\n  updateUiVisibility() {\n    const joinOperator = this.getJoinOperator();\n    this.updateNumConditions();\n    this.updateConditionStatusesAndValues(this.lastUiCompletePosition, joinOperator);\n  }\n  updateNumConditions() {\n    let lastUiCompletePosition = -1;\n    let areAllConditionsUiComplete = true;\n    for (let position = 0; position < this.getNumConditions(); position++) {\n      if (this.isConditionUiComplete(position)) {\n        lastUiCompletePosition = position;\n      } else {\n        areAllConditionsUiComplete = false;\n      }\n    }\n    if (this.shouldAddNewConditionAtEnd(areAllConditionsUiComplete)) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n    } else {\n      const activePosition = this.lastUiCompletePosition ?? this.getNumConditions() - 2;\n      if (lastUiCompletePosition < activePosition) {\n        this.removeConditionsAndOperators(activePosition + 1);\n        const removeStartPosition = lastUiCompletePosition + 1;\n        const numConditionsToRemove = activePosition - removeStartPosition;\n        if (numConditionsToRemove > 0) {\n          this.removeConditionsAndOperators(removeStartPosition, numConditionsToRemove);\n        }\n        this.createMissingConditionsAndOperators();\n      }\n    }\n    this.lastUiCompletePosition = lastUiCompletePosition;\n  }\n  updateConditionStatusesAndValues(lastUiCompletePosition, joinOperator) {\n    this.eTypes.forEach((eType, position) => {\n      const disabled = this.isConditionDisabled(position, lastUiCompletePosition);\n      eType.setDisabled(disabled || this.filterListOptions.length <= 1);\n      if (position === 1) {\n        _setDisabled(this.eJoinOperatorPanels[0], disabled);\n        this.eJoinOperatorsAnd[0].setDisabled(disabled);\n        this.eJoinOperatorsOr[0].setDisabled(disabled);\n      }\n    });\n    this.eConditionBodies.forEach((element, index) => {\n      _setDisplayed(element, this.isConditionBodyVisible(index));\n    });\n    const orChecked = (joinOperator ?? this.getJoinOperator()) === \"OR\";\n    this.eJoinOperatorsAnd.forEach(eJoinOperatorAnd => {\n      eJoinOperatorAnd.setValue(!orChecked, true);\n    });\n    this.eJoinOperatorsOr.forEach(eJoinOperatorOr => {\n      eJoinOperatorOr.setValue(orChecked, true);\n    });\n    this.forEachInput((element, index, position, numberOfInputs) => {\n      this.setElementDisplayed(element, index < numberOfInputs);\n      this.setElementDisabled(element, this.isConditionDisabled(position, lastUiCompletePosition));\n    });\n    this.resetPlaceholder();\n  }\n  shouldAddNewConditionAtEnd(areAllConditionsUiComplete) {\n    return areAllConditionsUiComplete && this.getNumConditions() < this.maxNumConditions && !this.isReadOnly();\n  }\n  removeConditionsAndOperators(startPosition, deleteCount) {\n    if (startPosition >= this.getNumConditions()) {\n      return;\n    }\n    this.removeComponents(this.eTypes, startPosition, deleteCount);\n    this.removeElements(this.eConditionBodies, startPosition, deleteCount);\n    this.removeValueElements(startPosition, deleteCount);\n    const joinOperatorIndex = Math.max(startPosition - 1, 0);\n    this.removeElements(this.eJoinOperatorPanels, joinOperatorIndex, deleteCount);\n    this.removeComponents(this.eJoinOperatorsAnd, joinOperatorIndex, deleteCount);\n    this.removeComponents(this.eJoinOperatorsOr, joinOperatorIndex, deleteCount);\n  }\n  removeElements(elements, startPosition, deleteCount) {\n    const removedElements = this.removeItems(elements, startPosition, deleteCount);\n    removedElements.forEach(element => _removeFromParent(element));\n  }\n  removeComponents(components, startPosition, deleteCount) {\n    const removedComponents = this.removeItems(components, startPosition, deleteCount);\n    removedComponents.forEach(comp => {\n      _removeFromParent(comp.getGui());\n      this.destroyBean(comp);\n    });\n  }\n  removeItems(items, startPosition, deleteCount) {\n    return deleteCount == null ? items.splice(startPosition) : items.splice(startPosition, deleteCount);\n  }\n  afterGuiAttached(params) {\n    super.afterGuiAttached(params);\n    this.resetPlaceholder();\n    if (!params?.suppressFocus) {\n      if (this.isReadOnly()) {\n        this.eFilterBody.focus();\n      } else {\n        const firstInput = this.getInputs(0)[0];\n        if (!firstInput) {\n          return;\n        }\n        if (firstInput instanceof AgAbstractInputField) {\n          firstInput.getInputElement().focus();\n        }\n      }\n    }\n  }\n  afterGuiDetached() {\n    super.afterGuiDetached();\n    const appliedModel = this.getModel();\n    this.resetUiToActiveModel(appliedModel);\n    let lastUiCompletePosition = -1;\n    let updatedLastUiCompletePosition = -1;\n    let conditionsRemoved = false;\n    const joinOperator = this.getJoinOperator();\n    for (let position = this.getNumConditions() - 1; position >= 0; position--) {\n      if (this.isConditionUiComplete(position)) {\n        if (lastUiCompletePosition === -1) {\n          lastUiCompletePosition = position;\n          updatedLastUiCompletePosition = position;\n        }\n      } else {\n        const shouldRemovePositionAtEnd = position >= this.numAlwaysVisibleConditions && !this.isConditionUiComplete(position - 1);\n        const positionBeforeLastUiCompletePosition = position < lastUiCompletePosition;\n        if (shouldRemovePositionAtEnd || positionBeforeLastUiCompletePosition) {\n          this.removeConditionsAndOperators(position, 1);\n          conditionsRemoved = true;\n          if (positionBeforeLastUiCompletePosition) {\n            updatedLastUiCompletePosition--;\n          }\n        }\n      }\n    }\n    let shouldUpdateConditionStatusesAndValues = false;\n    if (this.getNumConditions() < this.numAlwaysVisibleConditions) {\n      this.createMissingConditionsAndOperators();\n      shouldUpdateConditionStatusesAndValues = true;\n    }\n    if (this.shouldAddNewConditionAtEnd(updatedLastUiCompletePosition === this.getNumConditions() - 1)) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n      shouldUpdateConditionStatusesAndValues = true;\n    }\n    if (shouldUpdateConditionStatusesAndValues) {\n      this.updateConditionStatusesAndValues(updatedLastUiCompletePosition, joinOperator);\n    }\n    if (conditionsRemoved) {\n      this.updateJoinOperatorsDisabled();\n    }\n    this.lastUiCompletePosition = updatedLastUiCompletePosition;\n  }\n  getPlaceholderText(defaultPlaceholder, position) {\n    let placeholder = this.translate(defaultPlaceholder);\n    if (_isFunction(this.filterPlaceholder)) {\n      const filterPlaceholderFn = this.filterPlaceholder;\n      const filterOptionKey = this.eTypes[position].getValue();\n      const filterOption = this.translate(filterOptionKey);\n      placeholder = filterPlaceholderFn({\n        filterOptionKey,\n        filterOption,\n        placeholder\n      });\n    } else if (typeof this.filterPlaceholder === \"string\") {\n      placeholder = this.filterPlaceholder;\n    }\n    return placeholder;\n  }\n  // allow sub-classes to reset HTML placeholders after UI update.\n  resetPlaceholder() {\n    const globalTranslate = this.localeService.getLocaleTextFunc();\n    this.forEachInput((element, index, position, numberOfInputs) => {\n      if (!(element instanceof AgAbstractInputField)) {\n        return;\n      }\n      const placeholder = index === 0 && numberOfInputs > 1 ? \"inRangeStart\" : index === 0 ? \"filterOoo\" : \"inRangeEnd\";\n      const ariaLabel = index === 0 && numberOfInputs > 1 ? globalTranslate(\"ariaFilterFromValue\", \"Filter from value\") : index === 0 ? globalTranslate(\"ariaFilterValue\", \"Filter Value\") : globalTranslate(\"ariaFilterToValue\", \"Filter to Value\");\n      element.setInputPlaceholder(this.getPlaceholderText(placeholder, position));\n      element.setInputAriaLabel(ariaLabel);\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setElementValue(element, value, fromFloatingFilter) {\n    if (element instanceof AgAbstractInputField) {\n      element.setValue(value != null ? String(value) : null, true);\n    }\n  }\n  setElementDisplayed(element, displayed) {\n    if (element instanceof Component) {\n      _setDisplayed(element.getGui(), displayed);\n    }\n  }\n  setElementDisabled(element, disabled) {\n    if (element instanceof Component) {\n      _setDisabled(element.getGui(), disabled);\n    }\n  }\n  attachElementOnChange(element, listener) {\n    if (element instanceof AgAbstractInputField) {\n      element.onValueChange(listener);\n    }\n  }\n  forEachInput(cb) {\n    this.getConditionTypes().forEach((type, position) => {\n      this.forEachPositionTypeInput(position, type, cb);\n    });\n  }\n  forEachPositionInput(position, cb) {\n    const type = this.getConditionType(position);\n    this.forEachPositionTypeInput(position, type, cb);\n  }\n  forEachPositionTypeInput(position, type, cb) {\n    const numberOfInputs = this.getNumberOfInputs(type);\n    const inputs = this.getInputs(position);\n    for (let index = 0; index < inputs.length; index++) {\n      const input = inputs[index];\n      if (input != null) {\n        cb(input, index, position, numberOfInputs);\n      }\n    }\n  }\n  isConditionDisabled(position, lastUiCompletePosition) {\n    if (this.isReadOnly()) {\n      return true;\n    }\n    if (position === 0) {\n      return false;\n    }\n    return position > lastUiCompletePosition + 1;\n  }\n  isConditionBodyVisible(position) {\n    const type = this.getConditionType(position);\n    const numberOfInputs = this.getNumberOfInputs(type);\n    return numberOfInputs > 0;\n  }\n  // returns true if the UI represents a working filter, eg all parts are filled out.\n  // eg if text filter and textfield blank then returns false.\n  isConditionUiComplete(position) {\n    if (position >= this.getNumConditions()) {\n      return false;\n    }\n    const type = this.getConditionType(position);\n    if (type === \"empty\") {\n      return false;\n    }\n    if (this.getValues(position).some(v => v == null)) {\n      return false;\n    }\n    return true;\n  }\n  getNumConditions() {\n    return this.eTypes.length;\n  }\n  getUiCompleteConditions() {\n    const conditions = [];\n    for (let position = 0; position < this.getNumConditions(); position++) {\n      if (this.isConditionUiComplete(position)) {\n        conditions.push(this.createCondition(position));\n      }\n    }\n    return conditions;\n  }\n  createMissingConditionsAndOperators() {\n    if (this.isReadOnly()) {\n      return;\n    }\n    for (let i = this.getNumConditions(); i < this.numAlwaysVisibleConditions; i++) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n    }\n  }\n  resetUiToDefaults(silent) {\n    this.removeConditionsAndOperators(this.isReadOnly() ? 1 : this.numAlwaysVisibleConditions);\n    this.eTypes.forEach(eType => this.resetType(eType));\n    this.eJoinOperatorsAnd.forEach((eJoinOperatorAnd, index) => this.resetJoinOperatorAnd(eJoinOperatorAnd, index, this.joinOperatorId + index));\n    this.eJoinOperatorsOr.forEach((eJoinOperatorOr, index) => this.resetJoinOperatorOr(eJoinOperatorOr, index, this.joinOperatorId + index));\n    this.joinOperatorId++;\n    this.forEachInput(element => this.resetInput(element));\n    this.resetPlaceholder();\n    this.createMissingConditionsAndOperators();\n    this.lastUiCompletePosition = null;\n    if (!silent) {\n      this.onUiChanged();\n    }\n    return AgPromise.resolve();\n  }\n  resetType(eType) {\n    const translate = this.localeService.getLocaleTextFunc();\n    const filteringLabel = translate(\"ariaFilteringOperator\", \"Filtering operator\");\n    eType.setValue(this.optionsFactory.getDefaultOption(), true).setAriaLabel(filteringLabel).setDisabled(this.isReadOnly() || this.filterListOptions.length <= 1);\n  }\n  resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId) {\n    this.resetJoinOperator(eJoinOperatorAnd, index, this.isDefaultOperator(\"AND\"), this.translate(\"andCondition\"), uniqueGroupId);\n  }\n  resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId) {\n    this.resetJoinOperator(eJoinOperatorOr, index, this.isDefaultOperator(\"OR\"), this.translate(\"orCondition\"), uniqueGroupId);\n  }\n  resetJoinOperator(eJoinOperator, index, value, label, uniqueGroupId) {\n    this.updateJoinOperatorDisabled(eJoinOperator.setValue(value, true).setName(`ag-simple-filter-and-or-${this.getCompId()}-${uniqueGroupId}`).setLabel(label), index);\n  }\n  updateJoinOperatorsDisabled() {\n    this.eJoinOperatorsAnd.forEach((eJoinOperator, index) => this.updateJoinOperatorDisabled(eJoinOperator, index));\n    this.eJoinOperatorsOr.forEach((eJoinOperator, index) => this.updateJoinOperatorDisabled(eJoinOperator, index));\n  }\n  updateJoinOperatorDisabled(eJoinOperator, index) {\n    eJoinOperator.setDisabled(this.isReadOnly() || index > 0);\n  }\n  resetInput(element) {\n    this.setElementValue(element, null);\n    this.setElementDisabled(element, this.isReadOnly());\n  }\n  // puts model values into the UI\n  setConditionIntoUi(model, position) {\n    const values = this.mapValuesFromModel(model);\n    this.forEachInput((element, index, elPosition) => {\n      if (elPosition !== position) {\n        return;\n      }\n      this.setElementValue(element, values[index] != null ? values[index] : null);\n    });\n  }\n  // after floating filter changes, this sets the 'value' section. this is implemented by the base class\n  // (as that's where value is controlled), the 'type' part from the floating filter is dealt with in this class.\n  setValueFromFloatingFilter(value) {\n    this.forEachInput((element, index, position) => {\n      this.setElementValue(element, index === 0 && position === 0 ? value : null, true);\n    });\n  }\n  isDefaultOperator(operator) {\n    return operator === this.defaultJoinOperator;\n  }\n  addChangedListeners(eType, position) {\n    if (this.isReadOnly()) {\n      return;\n    }\n    eType.onValueChange(this.listener);\n    this.forEachPositionInput(position, element => {\n      this.attachElementOnChange(element, this.listener);\n    });\n  }\n  /** returns true if the row passes the said condition */\n  individualConditionPasses(params, filterModel) {\n    const cellValue = this.getCellValue(params.node);\n    const values = this.mapValuesFromModel(filterModel);\n    const customFilterOption = this.optionsFactory.getCustomOption(filterModel.type);\n    const customFilterResult = this.evaluateCustomFilter(customFilterOption, values, cellValue);\n    if (customFilterResult != null) {\n      return customFilterResult;\n    }\n    if (cellValue == null) {\n      return this.evaluateNullValue(filterModel.type);\n    }\n    return this.evaluateNonNullValue(values, cellValue, filterModel, params);\n  }\n  evaluateCustomFilter(customFilterOption, values, cellValue) {\n    if (customFilterOption == null) {\n      return;\n    }\n    const {\n      predicate\n    } = customFilterOption;\n    if (predicate != null && !values.some(v => v == null)) {\n      return predicate(values, cellValue);\n    }\n    return;\n  }\n  isBlank(cellValue) {\n    return cellValue == null || typeof cellValue === \"string\" && cellValue.trim().length === 0;\n  }\n  hasInvalidInputs() {\n    return false;\n  }\n};\n\n// community-modules/core/src/filter/provided/scalarFilter.ts\nvar ScalarFilter = class extends SimpleFilter {\n  setParams(params) {\n    super.setParams(params);\n    this.scalarFilterParams = params;\n  }\n  evaluateNullValue(filterType) {\n    switch (filterType) {\n      case \"equals\":\n      case \"notEqual\":\n        if (this.scalarFilterParams.includeBlanksInEquals) {\n          return true;\n        }\n        break;\n      case \"greaterThan\":\n      case \"greaterThanOrEqual\":\n        if (this.scalarFilterParams.includeBlanksInGreaterThan) {\n          return true;\n        }\n        break;\n      case \"lessThan\":\n      case \"lessThanOrEqual\":\n        if (this.scalarFilterParams.includeBlanksInLessThan) {\n          return true;\n        }\n        break;\n      case \"inRange\":\n        if (this.scalarFilterParams.includeBlanksInRange) {\n          return true;\n        }\n        break;\n      case \"blank\":\n        return true;\n      case \"notBlank\":\n        return false;\n    }\n    return false;\n  }\n  evaluateNonNullValue(values, cellValue, filterModel) {\n    const comparator = this.comparator();\n    const compareResult = values[0] != null ? comparator(values[0], cellValue) : 0;\n    switch (filterModel.type) {\n      case \"equals\":\n        return compareResult === 0;\n      case \"notEqual\":\n        return compareResult !== 0;\n      case \"greaterThan\":\n        return compareResult > 0;\n      case \"greaterThanOrEqual\":\n        return compareResult >= 0;\n      case \"lessThan\":\n        return compareResult < 0;\n      case \"lessThanOrEqual\":\n        return compareResult <= 0;\n      case \"inRange\":\n        {\n          const compareToResult = comparator(values[1], cellValue);\n          return this.scalarFilterParams.inRangeInclusive ? compareResult >= 0 && compareToResult <= 0 : compareResult > 0 && compareToResult < 0;\n        }\n      case \"blank\":\n        return this.isBlank(cellValue);\n      case \"notBlank\":\n        return !this.isBlank(cellValue);\n      default:\n        _warnOnce('Unexpected type of filter \"' + filterModel.type + '\", it looks like the filter was configured with incorrect Filter Options');\n        return true;\n    }\n  }\n};\n\n// community-modules/core/src/utils/keyboard.ts\nvar A_KEYCODE = 65;\nvar C_KEYCODE = 67;\nvar V_KEYCODE = 86;\nvar D_KEYCODE = 68;\nvar Z_KEYCODE = 90;\nvar Y_KEYCODE = 89;\nfunction _isEventFromPrintableCharacter(event) {\n  if (event.altKey || event.ctrlKey || event.metaKey) {\n    return false;\n  }\n  const printableCharacter = event.key.length === 1;\n  return printableCharacter;\n}\nfunction _isUserSuppressingKeyboardEvent(gos, keyboardEvent, rowNode, column, editing) {\n  const colDefFunc = column ? column.getColDef().suppressKeyboardEvent : void 0;\n  if (!colDefFunc) {\n    return false;\n  }\n  const params = gos.addGridCommonParams({\n    event: keyboardEvent,\n    editing,\n    column,\n    node: rowNode,\n    data: rowNode.data,\n    colDef: column.getColDef()\n  });\n  if (colDefFunc) {\n    const colDefFuncResult = colDefFunc(params);\n    if (colDefFuncResult) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction _isUserSuppressingHeaderKeyboardEvent(gos, keyboardEvent, headerRowIndex, column) {\n  const colDef = column.getDefinition();\n  const colDefFunc = colDef && colDef.suppressHeaderKeyboardEvent;\n  if (!_exists(colDefFunc)) {\n    return false;\n  }\n  const params = gos.addGridCommonParams({\n    colDef,\n    column,\n    headerRowIndex,\n    event: keyboardEvent\n  });\n  return !!colDefFunc(params);\n}\nfunction _normaliseQwertyAzerty(keyboardEvent) {\n  const {\n    keyCode\n  } = keyboardEvent;\n  let code;\n  switch (keyCode) {\n    case A_KEYCODE:\n      code = KeyCode.A;\n      break;\n    case C_KEYCODE:\n      code = KeyCode.C;\n      break;\n    case V_KEYCODE:\n      code = KeyCode.V;\n      break;\n    case D_KEYCODE:\n      code = KeyCode.D;\n      break;\n    case Z_KEYCODE:\n      code = KeyCode.Z;\n      break;\n    case Y_KEYCODE:\n      code = KeyCode.Y;\n      break;\n    default:\n      code = keyboardEvent.code;\n  }\n  return code;\n}\nfunction _isDeleteKey(key, alwaysReturnFalseOnBackspace = false) {\n  if (key === KeyCode.DELETE) {\n    return true;\n  }\n  if (!alwaysReturnFalseOnBackspace && key === KeyCode.BACKSPACE) {\n    return _isMacOsUserAgent();\n  }\n  return false;\n}\n\n// community-modules/core/src/widgets/agInputTextField.ts\nvar AgInputTextField = class extends AgAbstractInputField {\n  constructor(config, className = \"ag-text-field\", inputType = \"text\") {\n    super(config, className, inputType);\n  }\n  postConstruct() {\n    super.postConstruct();\n    if (this.config.allowedCharPattern) {\n      this.preventDisallowedCharacters();\n    }\n  }\n  setValue(value, silent) {\n    if (this.eInput.value !== value) {\n      this.eInput.value = _exists(value) ? value : \"\";\n    }\n    return super.setValue(value, silent);\n  }\n  /** Used to set an initial value into the input without necessarily setting `this.value` or triggering events (e.g. to set an invalid value) */\n  setStartValue(value) {\n    this.setValue(value, true);\n  }\n  preventDisallowedCharacters() {\n    const pattern = new RegExp(`[${this.config.allowedCharPattern}]`);\n    const preventCharacters = event => {\n      if (!_isEventFromPrintableCharacter(event)) {\n        return;\n      }\n      if (event.key && !pattern.test(event.key)) {\n        event.preventDefault();\n      }\n    };\n    this.addManagedListeners(this.eInput, {\n      keydown: preventCharacters,\n      paste: e => {\n        const text = e.clipboardData?.getData(\"text\");\n        if (text && text.split(\"\").some(c => !pattern.test(c))) {\n          e.preventDefault();\n        }\n      }\n    });\n  }\n};\nvar AgInputTextFieldSelector = {\n  selector: \"AG-INPUT-TEXT-FIELD\",\n  component: AgInputTextField\n};\n\n// community-modules/core/src/widgets/agInputNumberField.ts\nvar AgInputNumberField = class extends AgInputTextField {\n  constructor(config) {\n    super(config, \"ag-number-field\", \"number\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.addManagedListeners(this.eInput, {\n      blur: () => {\n        const floatedValue = parseFloat(this.eInput.value);\n        const value = isNaN(floatedValue) ? \"\" : this.normalizeValue(floatedValue.toString());\n        if (this.value !== value) {\n          this.setValue(value);\n        }\n      },\n      wheel: this.onWheel.bind(this)\n    });\n    this.eInput.step = \"any\";\n    const {\n      precision,\n      min,\n      max,\n      step\n    } = this.config;\n    if (typeof precision === \"number\") this.setPrecision(precision);\n    if (typeof min === \"number\") this.setMin(min);\n    if (typeof max === \"number\") this.setMax(max);\n    if (typeof step === \"number\") this.setStep(step);\n  }\n  onWheel(e) {\n    if (this.gos.getActiveDomElement() === this.eInput) {\n      e.preventDefault();\n    }\n  }\n  normalizeValue(value) {\n    if (value === \"\") {\n      return \"\";\n    }\n    if (this.precision != null) {\n      value = this.adjustPrecision(value);\n    }\n    const val = parseFloat(value);\n    if (this.min != null && val < this.min) {\n      value = this.min.toString();\n    } else if (this.max != null && val > this.max) {\n      value = this.max.toString();\n    }\n    return value;\n  }\n  adjustPrecision(value, isScientificNotation) {\n    if (this.precision == null) {\n      return value;\n    }\n    if (isScientificNotation) {\n      const floatString = parseFloat(value).toFixed(this.precision);\n      return parseFloat(floatString).toString();\n    }\n    const parts = String(value).split(\".\");\n    if (parts.length > 1) {\n      if (parts[1].length <= this.precision) {\n        return value;\n      } else if (this.precision > 0) {\n        return `${parts[0]}.${parts[1].slice(0, this.precision)}`;\n      }\n    }\n    return parts[0];\n  }\n  setMin(min) {\n    if (this.min === min) {\n      return this;\n    }\n    this.min = min;\n    _addOrRemoveAttribute(this.eInput, \"min\", min);\n    return this;\n  }\n  setMax(max) {\n    if (this.max === max) {\n      return this;\n    }\n    this.max = max;\n    _addOrRemoveAttribute(this.eInput, \"max\", max);\n    return this;\n  }\n  setPrecision(precision) {\n    this.precision = precision;\n    return this;\n  }\n  setStep(step) {\n    if (this.step === step) {\n      return this;\n    }\n    this.step = step;\n    _addOrRemoveAttribute(this.eInput, \"step\", step);\n    return this;\n  }\n  setValue(value, silent) {\n    return this.setValueOrInputValue(v => super.setValue(v, silent), () => this, value);\n  }\n  setStartValue(value) {\n    return this.setValueOrInputValue(v => super.setValue(v, true), v => {\n      this.eInput.value = v;\n    }, value);\n  }\n  setValueOrInputValue(setValueFunc, setInputValueOnlyFunc, value) {\n    if (_exists(value)) {\n      let setInputValueOnly = this.isScientificNotation(value);\n      if (setInputValueOnly && this.eInput.validity.valid) {\n        return setValueFunc(value);\n      }\n      if (!setInputValueOnly) {\n        value = this.adjustPrecision(value);\n        const normalizedValue = this.normalizeValue(value);\n        setInputValueOnly = value != normalizedValue;\n      }\n      if (setInputValueOnly) {\n        return setInputValueOnlyFunc(value);\n      }\n    }\n    return setValueFunc(value);\n  }\n  getValue() {\n    if (!this.eInput.validity.valid) {\n      return void 0;\n    }\n    const inputValue = this.eInput.value;\n    if (this.isScientificNotation(inputValue)) {\n      return this.adjustPrecision(inputValue, true);\n    }\n    return super.getValue();\n  }\n  isScientificNotation(value) {\n    return typeof value === \"string\" && value.includes(\"e\");\n  }\n};\nvar AgInputNumberFieldSelector = {\n  selector: \"AG-INPUT-NUMBER-FIELD\",\n  component: AgInputNumberField\n};\n\n// community-modules/core/src/filter/provided/number/numberFilterConstants.ts\nvar DEFAULT_NUMBER_FILTER_OPTIONS = [\"equals\", \"notEqual\", \"greaterThan\", \"greaterThanOrEqual\", \"lessThan\", \"lessThanOrEqual\", \"inRange\", \"blank\", \"notBlank\"];\n\n// community-modules/core/src/filter/provided/simpleFilterModelFormatter.ts\nvar SimpleFilterModelFormatter = class {\n  constructor(localeService, optionsFactory, valueFormatter) {\n    this.localeService = localeService;\n    this.optionsFactory = optionsFactory;\n    this.valueFormatter = valueFormatter;\n  }\n  // used by:\n  // 1) NumberFloatingFilter & TextFloatingFilter: Always, for both when editable and read only.\n  // 2) DateFloatingFilter: Only when read only (as we show text rather than a date picker when read only)\n  getModelAsString(model) {\n    if (!model) {\n      return null;\n    }\n    const isCombined = model.operator != null;\n    const translate = this.localeService.getLocaleTextFunc();\n    if (isCombined) {\n      const combinedModel = model;\n      const conditions = combinedModel.conditions ?? [];\n      const customOptions = conditions.map(condition => this.getModelAsString(condition));\n      const joinOperatorTranslateKey = combinedModel.operator === \"AND\" ? \"andCondition\" : \"orCondition\";\n      return customOptions.join(` ${translate(joinOperatorTranslateKey, FILTER_LOCALE_TEXT[joinOperatorTranslateKey])} `);\n    } else if (model.type === \"blank\" || model.type === \"notBlank\") {\n      return translate(model.type, model.type);\n    } else {\n      const condition = model;\n      const customOption = this.optionsFactory.getCustomOption(condition.type);\n      const {\n        displayKey,\n        displayName,\n        numberOfInputs\n      } = customOption || {};\n      if (displayKey && displayName && numberOfInputs === 0) {\n        translate(displayKey, displayName);\n        return displayName;\n      }\n      return this.conditionToString(condition, customOption);\n    }\n  }\n  updateParams(params) {\n    this.optionsFactory = params.optionsFactory;\n  }\n  formatValue(value) {\n    return this.valueFormatter ? this.valueFormatter(value ?? null) ?? \"\" : String(value);\n  }\n};\n\n// community-modules/core/src/filter/provided/number/numberFilterModelFormatter.ts\nvar NumberFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  conditionToString(condition, options) {\n    const {\n      numberOfInputs\n    } = options || {};\n    const isRange = condition.type == \"inRange\" || numberOfInputs === 2;\n    if (isRange) {\n      return `${this.formatValue(condition.filter)}-${this.formatValue(condition.filterTo)}`;\n    }\n    if (condition.filter != null) {\n      return this.formatValue(condition.filter);\n    }\n    return `${condition.type}`;\n  }\n};\n\n// community-modules/core/src/filter/provided/number/numberFilterUtils.ts\nfunction getAllowedCharPattern(filterParams) {\n  const {\n    allowedCharPattern\n  } = filterParams ?? {};\n  return allowedCharPattern ?? null;\n}\n\n// community-modules/core/src/filter/provided/number/numberFilter.ts\nvar NumberFilter = class extends ScalarFilter {\n  constructor() {\n    super(\"numberFilter\");\n    this.eValuesFrom = [];\n    this.eValuesTo = [];\n  }\n  refresh(params) {\n    if (this.numberFilterParams.allowedCharPattern !== params.allowedCharPattern) {\n      return false;\n    }\n    return super.refresh(params);\n  }\n  mapValuesFromModel(filterModel) {\n    const {\n      filter,\n      filterTo,\n      type\n    } = filterModel || {};\n    return [this.processValue(filter), this.processValue(filterTo)].slice(0, this.getNumberOfInputs(type));\n  }\n  getDefaultDebounceMs() {\n    return 500;\n  }\n  comparator() {\n    return (left, right) => {\n      if (left === right) {\n        return 0;\n      }\n      return left < right ? 1 : -1;\n    };\n  }\n  setParams(params) {\n    this.numberFilterParams = params;\n    super.setParams(params);\n    this.filterModelFormatter = new NumberFilterModelFormatter(this.localeService, this.optionsFactory, this.numberFilterParams.numberFormatter);\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_NUMBER_FILTER_OPTIONS;\n  }\n  setElementValue(element, value, fromFloatingFilter) {\n    const valueToSet = !fromFloatingFilter && this.numberFilterParams.numberFormatter ? this.numberFilterParams.numberFormatter(value ?? null) : value;\n    super.setElementValue(element, valueToSet);\n  }\n  createValueElement() {\n    const allowedCharPattern = getAllowedCharPattern(this.numberFilterParams);\n    const eCondition = document.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    _setAriaRole(eCondition, \"presentation\");\n    this.createFromToElement(eCondition, this.eValuesFrom, \"from\", allowedCharPattern);\n    this.createFromToElement(eCondition, this.eValuesTo, \"to\", allowedCharPattern);\n    return eCondition;\n  }\n  createFromToElement(eCondition, eValues, fromTo, allowedCharPattern) {\n    const eValue = this.createManagedBean(allowedCharPattern ? new AgInputTextField({\n      allowedCharPattern\n    }) : new AgInputNumberField());\n    eValue.addCssClass(`ag-filter-${fromTo}`);\n    eValue.addCssClass(\"ag-filter-filter\");\n    eValues.push(eValue);\n    eCondition.appendChild(eValue.getGui());\n  }\n  removeValueElements(startPosition, deleteCount) {\n    this.removeComponents(this.eValuesFrom, startPosition, deleteCount);\n    this.removeComponents(this.eValuesTo, startPosition, deleteCount);\n  }\n  getValues(position) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        result.push(this.processValue(this.stringToFloat(element.getValue())));\n      }\n    });\n    return result;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\n  }\n  getFilterType() {\n    return \"number\";\n  }\n  processValue(value) {\n    if (value == null) {\n      return null;\n    }\n    return isNaN(value) ? null : value;\n  }\n  stringToFloat(value) {\n    if (typeof value === \"number\") {\n      return value;\n    }\n    let filterText = _makeNull(value);\n    if (filterText != null && filterText.trim() === \"\") {\n      filterText = null;\n    }\n    if (this.numberFilterParams.numberParser) {\n      return this.numberFilterParams.numberParser(filterText);\n    }\n    return filterText == null || filterText.trim() === \"-\" ? null : parseFloat(filterText);\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {\n      filterType: this.getFilterType(),\n      type\n    };\n    const values = this.getValues(position);\n    if (values.length > 0) {\n      model.filter = values[0];\n    }\n    if (values.length > 1) {\n      model.filterTo = values[1];\n    }\n    return model;\n  }\n  getInputs(position) {\n    if (position >= this.eValuesFrom.length) {\n      return [null, null];\n    }\n    return [this.eValuesFrom[position], this.eValuesTo[position]];\n  }\n  getModelAsString(model) {\n    return this.filterModelFormatter.getModelAsString(model) ?? \"\";\n  }\n  hasInvalidInputs() {\n    let invalidInputs = false;\n    this.forEachInput(element => {\n      if (!element.getInputElement().validity.valid) {\n        invalidInputs = true;\n        return;\n      }\n    });\n    return invalidInputs;\n  }\n};\n\n// community-modules/core/src/filter/provided/text/textFilterConstants.ts\nvar DEFAULT_TEXT_FILTER_OPTIONS = [\"contains\", \"notContains\", \"equals\", \"notEqual\", \"startsWith\", \"endsWith\", \"blank\", \"notBlank\"];\n\n// community-modules/core/src/filter/provided/text/textFilterModelFormatter.ts\nvar TextFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  conditionToString(condition, options) {\n    const {\n      numberOfInputs\n    } = options || {};\n    const isRange = condition.type == \"inRange\" || numberOfInputs === 2;\n    if (isRange) {\n      return `${condition.filter}-${condition.filterTo}`;\n    }\n    if (condition.filter != null) {\n      return `${condition.filter}`;\n    }\n    return `${condition.type}`;\n  }\n};\n\n// community-modules/core/src/filter/provided/text/textFilterUtils.ts\nfunction trimInputForFilter(value) {\n  const trimmedInput = value && value.trim();\n  return trimmedInput === \"\" ? value : trimmedInput;\n}\n\n// community-modules/core/src/filter/provided/text/textFilter.ts\nvar TextFilter = class extends SimpleFilter {\n  constructor() {\n    super(\"textFilter\");\n    this.defaultFormatter = from => from;\n    this.defaultLowercaseFormatter = from => from == null ? null : from.toString().toLowerCase();\n    this.defaultMatcher = ({\n      filterOption,\n      value,\n      filterText\n    }) => {\n      if (filterText == null) {\n        return false;\n      }\n      switch (filterOption) {\n        case \"contains\":\n          return value.indexOf(filterText) >= 0;\n        case \"notContains\":\n          return value.indexOf(filterText) < 0;\n        case \"equals\":\n          return value === filterText;\n        case \"notEqual\":\n          return value != filterText;\n        case \"startsWith\":\n          return value.indexOf(filterText) === 0;\n        case \"endsWith\":\n          {\n            const index = value.lastIndexOf(filterText);\n            return index >= 0 && index === value.length - filterText.length;\n          }\n        default:\n          return false;\n      }\n    };\n    this.eValuesFrom = [];\n    this.eValuesTo = [];\n  }\n  getDefaultDebounceMs() {\n    return 500;\n  }\n  setParams(params) {\n    this.textFilterParams = params;\n    super.setParams(params);\n    this.matcher = this.getTextMatcher();\n    this.formatter = this.textFilterParams.textFormatter || (this.textFilterParams.caseSensitive ? this.defaultFormatter : this.defaultLowercaseFormatter);\n    this.filterModelFormatter = new TextFilterModelFormatter(this.localeService, this.optionsFactory);\n  }\n  getTextMatcher() {\n    const legacyComparator = this.textFilterParams.textCustomComparator;\n    if (legacyComparator) {\n      _warnOnce(\"textCustomComparator is deprecated, use textMatcher instead.\");\n      return ({\n        filterOption,\n        value,\n        filterText\n      }) => legacyComparator(filterOption, value, filterText);\n    }\n    return this.textFilterParams.textMatcher || this.defaultMatcher;\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {\n      filterType: this.getFilterType(),\n      type\n    };\n    const values = this.getValuesWithSideEffects(position, true);\n    if (values.length > 0) {\n      model.filter = values[0];\n    }\n    if (values.length > 1) {\n      model.filterTo = values[1];\n    }\n    return model;\n  }\n  getFilterType() {\n    return \"text\";\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\n  }\n  getInputs(position) {\n    if (position >= this.eValuesFrom.length) {\n      return [null, null];\n    }\n    return [this.eValuesFrom[position], this.eValuesTo[position]];\n  }\n  getValues(position) {\n    return this.getValuesWithSideEffects(position, false);\n  }\n  getValuesWithSideEffects(position, applySideEffects) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        let value = _makeNull(element.getValue());\n        if (applySideEffects && this.textFilterParams.trimInput) {\n          value = trimInputForFilter(value) ?? null;\n          element.setValue(value, true);\n        }\n        result.push(value);\n      }\n    });\n    return result;\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_TEXT_FILTER_OPTIONS;\n  }\n  createValueElement() {\n    const eCondition = document.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    _setAriaRole(eCondition, \"presentation\");\n    this.createFromToElement(eCondition, this.eValuesFrom, \"from\");\n    this.createFromToElement(eCondition, this.eValuesTo, \"to\");\n    return eCondition;\n  }\n  createFromToElement(eCondition, eValues, fromTo) {\n    const eValue = this.createManagedBean(new AgInputTextField());\n    eValue.addCssClass(`ag-filter-${fromTo}`);\n    eValue.addCssClass(\"ag-filter-filter\");\n    eValues.push(eValue);\n    eCondition.appendChild(eValue.getGui());\n  }\n  removeValueElements(startPosition, deleteCount) {\n    this.removeComponents(this.eValuesFrom, startPosition, deleteCount);\n    this.removeComponents(this.eValuesTo, startPosition, deleteCount);\n  }\n  mapValuesFromModel(filterModel) {\n    const {\n      filter,\n      filterTo,\n      type\n    } = filterModel || {};\n    return [filter || null, filterTo || null].slice(0, this.getNumberOfInputs(type));\n  }\n  evaluateNullValue(filterType) {\n    const filterTypesAllowNulls = [\"notEqual\", \"notContains\", \"blank\"];\n    return filterType ? filterTypesAllowNulls.indexOf(filterType) >= 0 : false;\n  }\n  evaluateNonNullValue(values, cellValue, filterModel, params) {\n    const formattedValues = values.map(v => this.formatter(v)) || [];\n    const cellValueFormatted = this.formatter(cellValue);\n    const {\n      api,\n      colDef,\n      column,\n      context,\n      textFormatter\n    } = this.textFilterParams;\n    if (filterModel.type === \"blank\") {\n      return this.isBlank(cellValue);\n    } else if (filterModel.type === \"notBlank\") {\n      return !this.isBlank(cellValue);\n    }\n    const matcherParams = {\n      api,\n      colDef,\n      column,\n      context,\n      node: params.node,\n      data: params.data,\n      filterOption: filterModel.type,\n      value: cellValueFormatted,\n      textFormatter\n    };\n    return formattedValues.some(v => this.matcher({\n      ...matcherParams,\n      filterText: v\n    }));\n  }\n  getModelAsString(model) {\n    return this.filterModelFormatter.getModelAsString(model) ?? \"\";\n  }\n};\n\n// community-modules/core/src/utils/number.ts\nfunction toNumber(value) {\n  if (typeof value === \"number\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    const parsed = parseInt(value);\n    if (isNaN(parsed)) {\n      return void 0;\n    }\n    return parsed;\n  }\n  return void 0;\n}\nfunction toConstrainedNum(min, max = Number.MAX_VALUE) {\n  return value => {\n    const num = toNumber(value);\n    if (num == null || num < min || num > max) {\n      return void 0;\n    }\n    return num;\n  };\n}\nfunction _padStartWidthZeros(value, totalStringSize) {\n  return value.toString().padStart(totalStringSize, \"0\");\n}\nfunction _createArrayOfNumbers(first, last) {\n  const result = [];\n  for (let i = first; i <= last; i++) {\n    result.push(i);\n  }\n  return result;\n}\nfunction _formatNumberTwoDecimalPlacesAndCommas(value, thousandSeparator, decimalSeparator) {\n  if (typeof value !== \"number\") {\n    return \"\";\n  }\n  return _formatNumberCommas(Math.round(value * 100) / 100, thousandSeparator, decimalSeparator);\n}\nfunction _formatNumberCommas(value, thousandSeparator, decimalSeparator) {\n  if (typeof value !== \"number\") {\n    return \"\";\n  }\n  return value.toString().replace(\".\", decimalSeparator).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, `$1${thousandSeparator}`);\n}\n\n// community-modules/core/src/utils/date.ts\nfunction _serialiseDate(date, includeTime = true, separator = \"-\") {\n  if (!date) {\n    return null;\n  }\n  let serialised = [date.getFullYear(), date.getMonth() + 1, date.getDate()].map(part => _padStartWidthZeros(part, 2)).join(separator);\n  if (includeTime) {\n    serialised += \" \" + [date.getHours(), date.getMinutes(), date.getSeconds()].map(part => _padStartWidthZeros(part, 2)).join(\":\");\n  }\n  return serialised;\n}\nvar calculateOrdinal = value => {\n  if (value > 3 && value < 21) {\n    return \"th\";\n  }\n  const remainder = value % 10;\n  switch (remainder) {\n    case 1:\n      return \"st\";\n    case 2:\n      return \"nd\";\n    case 3:\n      return \"rd\";\n  }\n  return \"th\";\n};\nfunction _dateToFormattedString(date, format = \"YYYY-MM-DD\") {\n  const fullYear = _padStartWidthZeros(date.getFullYear(), 4);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const replace = {\n    YYYY: () => fullYear.slice(fullYear.length - 4, fullYear.length),\n    YY: () => fullYear.slice(fullYear.length - 2, fullYear.length),\n    Y: () => `${date.getFullYear()}`,\n    MMMM: () => months[date.getMonth()],\n    MMM: () => months[date.getMonth()].slice(0, 3),\n    MM: () => _padStartWidthZeros(date.getMonth() + 1, 2),\n    Mo: () => `${date.getMonth() + 1}${calculateOrdinal(date.getMonth() + 1)}`,\n    M: () => `${date.getMonth() + 1}`,\n    Do: () => `${date.getDate()}${calculateOrdinal(date.getDate())}`,\n    DD: () => _padStartWidthZeros(date.getDate(), 2),\n    D: () => `${date.getDate()}`,\n    dddd: () => days[date.getDay()],\n    ddd: () => days[date.getDay()].slice(0, 3),\n    dd: () => days[date.getDay()].slice(0, 2),\n    do: () => `${date.getDay()}${calculateOrdinal(date.getDay())}`,\n    d: () => `${date.getDay()}`\n  };\n  const regexp = new RegExp(Object.keys(replace).join(\"|\"), \"g\");\n  return format.replace(regexp, match => {\n    if (match in replace) {\n      return replace[match]();\n    }\n    return match;\n  });\n}\nfunction _parseDateTimeFromString(value) {\n  if (!value) {\n    return null;\n  }\n  const [dateStr, timeStr] = value.split(\" \");\n  if (!dateStr) {\n    return null;\n  }\n  const fields = dateStr.split(\"-\").map(f => parseInt(f, 10));\n  if (fields.filter(f => !isNaN(f)).length !== 3) {\n    return null;\n  }\n  const [year, month, day] = fields;\n  const date = new Date(year, month - 1, day);\n  if (date.getFullYear() !== year || date.getMonth() !== month - 1 || date.getDate() !== day) {\n    return null;\n  }\n  if (!timeStr || timeStr === \"00:00:00\") {\n    return date;\n  }\n  const [hours, minutes, seconds] = timeStr.split(\":\").map(part => parseInt(part, 10));\n  if (hours >= 0 && hours < 24) {\n    date.setHours(hours);\n  }\n  if (minutes >= 0 && minutes < 60) {\n    date.setMinutes(minutes);\n  }\n  if (seconds >= 0 && seconds < 60) {\n    date.setSeconds(seconds);\n  }\n  return date;\n}\n\n// community-modules/core/src/filter/provided/date/dateCompWrapper.ts\nvar DateCompWrapper = class {\n  constructor(context, userComponentFactory, dateComponentParams, eParent, onReady) {\n    this.alive = true;\n    this.context = context;\n    this.eParent = eParent;\n    const compDetails = userComponentFactory.getDateCompDetails(dateComponentParams);\n    const promise = compDetails.newAgStackInstance();\n    promise.then(dateComp => {\n      if (!this.alive) {\n        context.destroyBean(dateComp);\n        return;\n      }\n      this.dateComp = dateComp;\n      if (!dateComp) {\n        return;\n      }\n      eParent.appendChild(dateComp.getGui());\n      if (dateComp.afterGuiAttached) {\n        dateComp.afterGuiAttached();\n      }\n      if (this.tempValue) {\n        dateComp.setDate(this.tempValue);\n      }\n      if (this.disabled != null) {\n        this.setDateCompDisabled(this.disabled);\n      }\n      onReady?.(this);\n    });\n  }\n  destroy() {\n    this.alive = false;\n    this.dateComp = this.context.destroyBean(this.dateComp);\n  }\n  getDate() {\n    return this.dateComp ? this.dateComp.getDate() : this.tempValue;\n  }\n  setDate(value) {\n    if (this.dateComp) {\n      this.dateComp.setDate(value);\n    } else {\n      this.tempValue = value;\n    }\n  }\n  setDisabled(disabled) {\n    if (this.dateComp) {\n      this.setDateCompDisabled(disabled);\n    } else {\n      this.disabled = disabled;\n    }\n  }\n  setDisplayed(displayed) {\n    _setDisplayed(this.eParent, displayed);\n  }\n  setInputPlaceholder(placeholder) {\n    if (this.dateComp && this.dateComp.setInputPlaceholder) {\n      this.dateComp.setInputPlaceholder(placeholder);\n    }\n  }\n  setInputAriaLabel(label) {\n    if (this.dateComp && this.dateComp.setInputAriaLabel) {\n      this.dateComp.setInputAriaLabel(label);\n    }\n  }\n  afterGuiAttached(params) {\n    if (this.dateComp && typeof this.dateComp.afterGuiAttached === \"function\") {\n      this.dateComp.afterGuiAttached(params);\n    }\n  }\n  updateParams(params) {\n    let hasRefreshed = false;\n    if (this.dateComp?.refresh && typeof this.dateComp.refresh === \"function\") {\n      const result = this.dateComp.refresh(params);\n      if (result !== null) {\n        hasRefreshed = true;\n      }\n    }\n    if (!hasRefreshed && this.dateComp?.onParamsUpdated && typeof this.dateComp.onParamsUpdated === \"function\") {\n      const result = this.dateComp.onParamsUpdated(params);\n      if (result !== null) {\n        _warnOnce(`Custom date component method 'onParamsUpdated' is deprecated. Use 'refresh' instead.`);\n      }\n    }\n  }\n  setDateCompDisabled(disabled) {\n    if (this.dateComp == null) {\n      return;\n    }\n    if (this.dateComp.setDisabled == null) {\n      return;\n    }\n    this.dateComp.setDisabled(disabled);\n  }\n};\n\n// community-modules/core/src/filter/provided/date/dateFilterConstants.ts\nvar DEFAULT_DATE_FILTER_OPTIONS = [\"equals\", \"notEqual\", \"lessThan\", \"greaterThan\", \"inRange\", \"blank\", \"notBlank\"];\n\n// community-modules/core/src/filter/provided/date/dateFilterModelFormatter.ts\nvar DateFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  constructor(dateFilterParams, localeService, optionsFactory) {\n    super(localeService, optionsFactory);\n    this.dateFilterParams = dateFilterParams;\n  }\n  conditionToString(condition, options) {\n    const {\n      type\n    } = condition;\n    const {\n      numberOfInputs\n    } = options || {};\n    const isRange = type == \"inRange\" || numberOfInputs === 2;\n    const dateFrom = _parseDateTimeFromString(condition.dateFrom);\n    const dateTo = _parseDateTimeFromString(condition.dateTo);\n    const format = this.dateFilterParams.inRangeFloatingFilterDateFormat;\n    if (isRange) {\n      const formattedFrom = dateFrom !== null ? _dateToFormattedString(dateFrom, format) : \"null\";\n      const formattedTo = dateTo !== null ? _dateToFormattedString(dateTo, format) : \"null\";\n      return `${formattedFrom}-${formattedTo}`;\n    }\n    if (dateFrom != null) {\n      return _dateToFormattedString(dateFrom, format);\n    }\n    return `${type}`;\n  }\n  updateParams(params) {\n    super.updateParams(params);\n    this.dateFilterParams = params.dateFilterParams;\n  }\n};\n\n// community-modules/core/src/filter/provided/date/dateFilter.ts\nvar DEFAULT_MIN_YEAR = 1e3;\nvar DEFAULT_MAX_YEAR = Infinity;\nvar DateFilter = class extends ScalarFilter {\n  constructor() {\n    super(\"dateFilter\");\n    this.eConditionPanelsFrom = [];\n    this.eConditionPanelsTo = [];\n    this.dateConditionFromComps = [];\n    this.dateConditionToComps = [];\n    this.minValidYear = DEFAULT_MIN_YEAR;\n    this.maxValidYear = DEFAULT_MAX_YEAR;\n    this.minValidDate = null;\n    this.maxValidDate = null;\n  }\n  wireBeans(beans) {\n    super.wireBeans(beans);\n    this.context = beans.context;\n    this.userComponentFactory = beans.userComponentFactory;\n  }\n  afterGuiAttached(params) {\n    super.afterGuiAttached(params);\n    this.dateConditionFromComps[0].afterGuiAttached(params);\n  }\n  mapValuesFromModel(filterModel) {\n    const {\n      dateFrom,\n      dateTo,\n      type\n    } = filterModel || {};\n    return [dateFrom && _parseDateTimeFromString(dateFrom) || null, dateTo && _parseDateTimeFromString(dateTo) || null].slice(0, this.getNumberOfInputs(type));\n  }\n  comparator() {\n    return this.dateFilterParams.comparator ? this.dateFilterParams.comparator : this.defaultComparator.bind(this);\n  }\n  defaultComparator(filterDate, cellValue) {\n    const cellAsDate = cellValue;\n    if (cellValue == null || cellAsDate < filterDate) {\n      return -1;\n    }\n    if (cellAsDate > filterDate) {\n      return 1;\n    }\n    return 0;\n  }\n  setParams(params) {\n    this.dateFilterParams = params;\n    super.setParams(params);\n    const yearParser = (param, fallback) => {\n      if (params[param] != null) {\n        if (!isNaN(params[param])) {\n          return params[param] == null ? fallback : Number(params[param]);\n        } else {\n          _warnOnce(`DateFilter ${param} is not a number`);\n        }\n      }\n      return fallback;\n    };\n    this.minValidYear = yearParser(\"minValidYear\", DEFAULT_MIN_YEAR);\n    this.maxValidYear = yearParser(\"maxValidYear\", DEFAULT_MAX_YEAR);\n    if (this.minValidYear > this.maxValidYear) {\n      _warnOnce(`DateFilter minValidYear should be <= maxValidYear`);\n    }\n    if (params.minValidDate) {\n      this.minValidDate = params.minValidDate instanceof Date ? params.minValidDate : _parseDateTimeFromString(params.minValidDate);\n    } else {\n      this.minValidDate = null;\n    }\n    if (params.maxValidDate) {\n      this.maxValidDate = params.maxValidDate instanceof Date ? params.maxValidDate : _parseDateTimeFromString(params.maxValidDate);\n    } else {\n      this.maxValidDate = null;\n    }\n    if (this.minValidDate && this.maxValidDate && this.minValidDate > this.maxValidDate) {\n      _warnOnce(`DateFilter minValidDate should be <= maxValidDate`);\n    }\n    this.filterModelFormatter = new DateFilterModelFormatter(this.dateFilterParams, this.localeService, this.optionsFactory);\n  }\n  createDateCompWrapper(element) {\n    const dateCompWrapper = new DateCompWrapper(this.context, this.userComponentFactory, {\n      onDateChanged: () => this.onUiChanged(),\n      filterParams: this.dateFilterParams\n    }, element);\n    this.addDestroyFunc(() => dateCompWrapper.destroy());\n    return dateCompWrapper;\n  }\n  setElementValue(element, value) {\n    element.setDate(value);\n  }\n  setElementDisplayed(element, displayed) {\n    element.setDisplayed(displayed);\n  }\n  setElementDisabled(element, disabled) {\n    element.setDisabled(disabled);\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_DATE_FILTER_OPTIONS;\n  }\n  createValueElement() {\n    const eDocument = this.gos.getDocument();\n    const eCondition = eDocument.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    this.createFromToElement(eCondition, this.eConditionPanelsFrom, this.dateConditionFromComps, \"from\");\n    this.createFromToElement(eCondition, this.eConditionPanelsTo, this.dateConditionToComps, \"to\");\n    return eCondition;\n  }\n  createFromToElement(eCondition, eConditionPanels, dateConditionComps, fromTo) {\n    const eDocument = this.gos.getDocument();\n    const eConditionPanel = eDocument.createElement(\"div\");\n    eConditionPanel.classList.add(`ag-filter-${fromTo}`);\n    eConditionPanel.classList.add(`ag-filter-date-${fromTo}`);\n    eConditionPanels.push(eConditionPanel);\n    eCondition.appendChild(eConditionPanel);\n    dateConditionComps.push(this.createDateCompWrapper(eConditionPanel));\n  }\n  removeValueElements(startPosition, deleteCount) {\n    this.removeDateComps(this.dateConditionFromComps, startPosition, deleteCount);\n    this.removeDateComps(this.dateConditionToComps, startPosition, deleteCount);\n    this.removeItems(this.eConditionPanelsFrom, startPosition, deleteCount);\n    this.removeItems(this.eConditionPanelsTo, startPosition, deleteCount);\n  }\n  removeDateComps(components, startPosition, deleteCount) {\n    const removedComponents = this.removeItems(components, startPosition, deleteCount);\n    removedComponents.forEach(comp => comp.destroy());\n  }\n  isValidDateValue(value) {\n    if (value === null) {\n      return false;\n    }\n    if (this.minValidDate) {\n      if (value < this.minValidDate) {\n        return false;\n      }\n    } else {\n      if (value.getUTCFullYear() < this.minValidYear) {\n        return false;\n      }\n    }\n    if (this.maxValidDate) {\n      if (value > this.maxValidDate) {\n        return false;\n      }\n    } else {\n      if (value.getUTCFullYear() > this.maxValidYear) {\n        return false;\n      }\n    }\n    return true;\n  }\n  isConditionUiComplete(position) {\n    if (!super.isConditionUiComplete(position)) {\n      return false;\n    }\n    let valid = true;\n    this.forEachInput((element, index, elPosition, numberOfInputs) => {\n      if (elPosition !== position || !valid || index >= numberOfInputs) {\n        return;\n      }\n      valid = valid && this.isValidDateValue(element.getDate());\n    });\n    return valid;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.dateFrom === bSimple.dateFrom && aSimple.dateTo === bSimple.dateTo && aSimple.type === bSimple.type;\n  }\n  getFilterType() {\n    return \"date\";\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {};\n    const values = this.getValues(position);\n    if (values.length > 0) {\n      model.dateFrom = _serialiseDate(values[0]);\n    }\n    if (values.length > 1) {\n      model.dateTo = _serialiseDate(values[1]);\n    }\n    return {\n      dateFrom: null,\n      dateTo: null,\n      filterType: this.getFilterType(),\n      type,\n      ...model\n    };\n  }\n  resetPlaceholder() {\n    const globalTranslate = this.localeService.getLocaleTextFunc();\n    const placeholder = this.translate(\"dateFormatOoo\");\n    const ariaLabel = globalTranslate(\"ariaFilterValue\", \"Filter Value\");\n    this.forEachInput(element => {\n      element.setInputPlaceholder(placeholder);\n      element.setInputAriaLabel(ariaLabel);\n    });\n  }\n  getInputs(position) {\n    if (position >= this.dateConditionFromComps.length) {\n      return [null, null];\n    }\n    return [this.dateConditionFromComps[position], this.dateConditionToComps[position]];\n  }\n  getValues(position) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        result.push(element.getDate());\n      }\n    });\n    return result;\n  }\n  translate(key) {\n    if (key === \"lessThan\") {\n      return super.translate(\"before\");\n    }\n    if (key === \"greaterThan\") {\n      return super.translate(\"after\");\n    }\n    return super.translate(key);\n  }\n  getModelAsString(model) {\n    return this.filterModelFormatter.getModelAsString(model) ?? \"\";\n  }\n};\n\n// community-modules/core/src/rendering/features/setLeftFeature.ts\nvar SetLeftFeature = class extends BeanStub {\n  constructor(columnOrGroup, eCell, beans, colsSpanning) {\n    super();\n    this.columnOrGroup = columnOrGroup;\n    this.columnOrGroup = columnOrGroup;\n    this.eCell = eCell;\n    this.ariaEl = this.eCell.querySelector(\"[role=columnheader]\") || this.eCell;\n    this.colsSpanning = colsSpanning;\n    this.beans = beans;\n  }\n  setColsSpanning(colsSpanning) {\n    this.colsSpanning = colsSpanning;\n    this.onLeftChanged();\n  }\n  getColumnOrGroup() {\n    if (this.beans.gos.get(\"enableRtl\") && this.colsSpanning) {\n      return _last(this.colsSpanning);\n    }\n    return this.columnOrGroup;\n  }\n  postConstruct() {\n    const onLeftChanged = this.onLeftChanged.bind(this);\n    this.addManagedListeners(this.columnOrGroup, {\n      leftChanged: onLeftChanged\n    });\n    this.setLeftFirstTime();\n    this.addManagedEventListeners({\n      displayedColumnsWidthChanged: onLeftChanged\n    });\n    this.addManagedPropertyListener(\"domLayout\", onLeftChanged);\n  }\n  setLeftFirstTime() {\n    const suppressMoveAnimation = this.beans.gos.get(\"suppressColumnMoveAnimation\");\n    const oldLeftExists = _exists(this.columnOrGroup.getOldLeft());\n    const animateColumnMove = this.beans.columnAnimationService.isActive() && oldLeftExists && !suppressMoveAnimation;\n    if (animateColumnMove) {\n      this.animateInLeft();\n    } else {\n      this.onLeftChanged();\n    }\n  }\n  animateInLeft() {\n    const colOrGroup = this.getColumnOrGroup();\n    const left = colOrGroup.getLeft();\n    const oldLeft = colOrGroup.getOldLeft();\n    const oldActualLeft = this.modifyLeftForPrintLayout(colOrGroup, oldLeft);\n    const actualLeft = this.modifyLeftForPrintLayout(colOrGroup, left);\n    this.setLeft(oldActualLeft);\n    this.actualLeft = actualLeft;\n    this.beans.columnAnimationService.executeNextVMTurn(() => {\n      if (this.actualLeft === actualLeft) {\n        this.setLeft(actualLeft);\n      }\n    });\n  }\n  onLeftChanged() {\n    const colOrGroup = this.getColumnOrGroup();\n    const left = colOrGroup.getLeft();\n    this.actualLeft = this.modifyLeftForPrintLayout(colOrGroup, left);\n    this.setLeft(this.actualLeft);\n  }\n  modifyLeftForPrintLayout(colOrGroup, leftPosition) {\n    const printLayout = this.beans.gos.isDomLayout(\"print\");\n    if (!printLayout) {\n      return leftPosition;\n    }\n    if (colOrGroup.getPinned() === \"left\") {\n      return leftPosition;\n    }\n    const leftWidth = this.beans.visibleColsService.getColsLeftWidth();\n    if (colOrGroup.getPinned() === \"right\") {\n      const bodyWidth = this.beans.visibleColsService.getBodyContainerWidth();\n      return leftWidth + bodyWidth + leftPosition;\n    }\n    return leftWidth + leftPosition;\n  }\n  setLeft(value) {\n    if (_exists(value)) {\n      this.eCell.style.left = `${value}px`;\n    }\n    if (isColumnGroup(this.columnOrGroup)) {\n      const children = this.columnOrGroup.getLeafColumns();\n      if (!children.length) {\n        return;\n      }\n      if (children.length > 1) {\n        _setAriaColSpan(this.ariaEl, children.length);\n      }\n    }\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/cssClassApplier.ts\nvar CSS_FIRST_COLUMN = \"ag-column-first\";\nvar CSS_LAST_COLUMN = \"ag-column-last\";\nfunction _getHeaderClassesFromColDef(abstractColDef, gos, column, columnGroup) {\n  if (_missing(abstractColDef)) {\n    return [];\n  }\n  return getColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, gos, column, columnGroup);\n}\nfunction _getToolPanelClassesFromColDef(abstractColDef, gos, column, columnGroup) {\n  if (_missing(abstractColDef)) {\n    return [];\n  }\n  return getColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, gos, column, columnGroup);\n}\nfunction refreshFirstAndLastStyles(comp, column, presentedColsService) {\n  comp.addOrRemoveCssClass(CSS_FIRST_COLUMN, presentedColsService.isColAtEdge(column, \"first\"));\n  comp.addOrRemoveCssClass(CSS_LAST_COLUMN, presentedColsService.isColAtEdge(column, \"last\"));\n}\nfunction getClassParams(abstractColDef, gos, column, columnGroup) {\n  return gos.addGridCommonParams({\n    // bad naming, as colDef here can be a group or a column,\n    // however most people won't appreciate the difference,\n    // so keeping it as colDef to avoid confusion.\n    colDef: abstractColDef,\n    column,\n    columnGroup\n  });\n}\nfunction getColumnClassesFromCollDef(classesOrFunc, abstractColDef, gos, column, columnGroup) {\n  if (_missing(classesOrFunc)) {\n    return [];\n  }\n  let classToUse;\n  if (typeof classesOrFunc === \"function\") {\n    const params = getClassParams(abstractColDef, gos, column, columnGroup);\n    classToUse = classesOrFunc(params);\n  } else {\n    classToUse = classesOrFunc;\n  }\n  if (typeof classToUse === \"string\") {\n    return [classToUse];\n  }\n  if (Array.isArray(classToUse)) {\n    return [...classToUse];\n  }\n  return [];\n}\n\n// community-modules/core/src/headerRendering/cells/abstractCell/abstractHeaderCellCtrl.ts\nvar instanceIdSequence2 = 0;\nvar _AbstractHeaderCellCtrl = /*#__PURE__*/(() => {\n  let _AbstractHeaderCellCtrl = class _AbstractHeaderCellCtrl extends BeanStub {\n    constructor(columnGroupChild, beans, parentRowCtrl) {\n      super();\n      this.resizeToggleTimeout = 0;\n      this.resizeMultiplier = 1;\n      this.resizeFeature = null;\n      this.lastFocusEvent = null;\n      this.dragSource = null;\n      this.columnGroupChild = columnGroupChild;\n      this.parentRowCtrl = parentRowCtrl;\n      this.beans = beans;\n      this.instanceId = columnGroupChild.getUniqueId() + \"-\" + instanceIdSequence2++;\n    }\n    wireBeans(beans) {\n      this.pinnedWidthService = beans.pinnedWidthService;\n      this.focusService = beans.focusService;\n      this.userComponentFactory = beans.userComponentFactory;\n      this.ctrlsService = beans.ctrlsService;\n      this.dragAndDropService = beans.dragAndDropService;\n      this.menuService = beans.menuService;\n    }\n    postConstruct() {\n      this.addManagedPropertyListeners([\"suppressHeaderFocus\"], () => this.refreshTabIndex());\n    }\n    shouldStopEventPropagation(e) {\n      const {\n        headerRowIndex,\n        column\n      } = this.focusService.getFocusedHeader();\n      return _isUserSuppressingHeaderKeyboardEvent(this.gos, e, headerRowIndex, column);\n    }\n    getWrapperHasFocus() {\n      const activeEl = this.gos.getActiveDomElement();\n      return activeEl === this.eGui;\n    }\n    setGui(eGui) {\n      this.eGui = eGui;\n      this.addDomData();\n      this.addManagedListeners(this.beans.eventService, {\n        displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this)\n      });\n      this.addManagedElementListeners(this.eGui, {\n        focus: this.onGuiFocus.bind(this)\n      });\n      this.onDisplayedColumnsChanged();\n      this.refreshTabIndex();\n    }\n    onGuiFocus() {\n      const event = {\n        type: \"headerFocused\",\n        column: this.column\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    onDisplayedColumnsChanged() {\n      if (!this.comp || !this.column) {\n        return;\n      }\n      this.refreshFirstAndLastStyles();\n      this.refreshAriaColIndex();\n    }\n    refreshFirstAndLastStyles() {\n      const {\n        comp,\n        column,\n        beans\n      } = this;\n      refreshFirstAndLastStyles(comp, column, beans.visibleColsService);\n    }\n    refreshAriaColIndex() {\n      const {\n        beans,\n        column\n      } = this;\n      const colIdx = beans.visibleColsService.getAriaColIndex(column);\n      _setAriaColIndex(this.eGui, colIdx);\n    }\n    addResizeAndMoveKeyboardListeners() {\n      if (!this.resizeFeature) {\n        return;\n      }\n      this.addManagedListeners(this.eGui, {\n        keydown: this.onGuiKeyDown.bind(this),\n        keyup: this.onGuiKeyUp.bind(this)\n      });\n    }\n    refreshTabIndex() {\n      const suppressHeaderFocus = this.gos.get(\"suppressHeaderFocus\");\n      if (suppressHeaderFocus) {\n        this.eGui.removeAttribute(\"tabindex\");\n      } else {\n        this.eGui.setAttribute(\"tabindex\", \"-1\");\n      }\n    }\n    onGuiKeyDown(e) {\n      const activeEl = this.gos.getActiveDomElement();\n      const isLeftOrRight = e.key === KeyCode.LEFT || e.key === KeyCode.RIGHT;\n      if (this.isResizing) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n      if (\n      // if elements within the header are focused, we don't process the event\n      activeEl !== this.eGui ||\n      // if shiftKey and altKey are not pressed, it's cell navigation so we don't process the event\n      !e.shiftKey && !e.altKey) {\n        return;\n      }\n      if (this.isResizing || isLeftOrRight) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n      if (!isLeftOrRight) {\n        return;\n      }\n      const isLeft = e.key === KeyCode.LEFT !== this.gos.get(\"enableRtl\");\n      const direction = HorizontalDirection[isLeft ? \"Left\" : \"Right\"];\n      if (e.altKey) {\n        this.isResizing = true;\n        this.resizeMultiplier += 1;\n        const diff = this.getViewportAdjustedResizeDiff(e);\n        this.resizeHeader(diff, e.shiftKey);\n        this.resizeFeature?.toggleColumnResizing(true);\n      } else {\n        this.moveHeader(direction);\n      }\n    }\n    getViewportAdjustedResizeDiff(e) {\n      let diff = this.getResizeDiff(e);\n      const pinned = this.column.getPinned();\n      if (pinned) {\n        const leftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n        const rightWidth = this.pinnedWidthService.getPinnedRightWidth();\n        const bodyWidth = _getInnerWidth(this.ctrlsService.getGridBodyCtrl().getBodyViewportElement()) - 50;\n        if (leftWidth + rightWidth + diff > bodyWidth) {\n          if (bodyWidth > leftWidth + rightWidth) {\n            diff = bodyWidth - leftWidth - rightWidth;\n          } else {\n            return 0;\n          }\n        }\n      }\n      return diff;\n    }\n    getResizeDiff(e) {\n      let isLeft = e.key === KeyCode.LEFT !== this.gos.get(\"enableRtl\");\n      const pinned = this.column.getPinned();\n      const isRtl = this.gos.get(\"enableRtl\");\n      if (pinned) {\n        if (isRtl !== (pinned === \"right\")) {\n          isLeft = !isLeft;\n        }\n      }\n      return (isLeft ? -1 : 1) * this.resizeMultiplier;\n    }\n    onGuiKeyUp() {\n      if (!this.isResizing) {\n        return;\n      }\n      if (this.resizeToggleTimeout) {\n        window.clearTimeout(this.resizeToggleTimeout);\n        this.resizeToggleTimeout = 0;\n      }\n      this.isResizing = false;\n      this.resizeMultiplier = 1;\n      this.resizeToggleTimeout = window.setTimeout(() => {\n        this.resizeFeature?.toggleColumnResizing(false);\n      }, 150);\n    }\n    handleKeyDown(e) {\n      const wrapperHasFocus = this.getWrapperHasFocus();\n      switch (e.key) {\n        case KeyCode.PAGE_DOWN:\n        case KeyCode.PAGE_UP:\n        case KeyCode.PAGE_HOME:\n        case KeyCode.PAGE_END:\n          if (wrapperHasFocus) {\n            e.preventDefault();\n          }\n      }\n    }\n    addDomData() {\n      const key = _AbstractHeaderCellCtrl.DOM_DATA_KEY_HEADER_CTRL;\n      this.gos.setDomData(this.eGui, key, this);\n      this.addDestroyFunc(() => this.gos.setDomData(this.eGui, key, null));\n    }\n    getGui() {\n      return this.eGui;\n    }\n    focus(event) {\n      if (!this.eGui) {\n        return false;\n      }\n      this.lastFocusEvent = event || null;\n      this.eGui.focus();\n      return true;\n    }\n    getRowIndex() {\n      return this.parentRowCtrl.getRowIndex();\n    }\n    getParentRowCtrl() {\n      return this.parentRowCtrl;\n    }\n    getPinned() {\n      return this.parentRowCtrl.getPinned();\n    }\n    getInstanceId() {\n      return this.instanceId;\n    }\n    getColumnGroupChild() {\n      return this.columnGroupChild;\n    }\n    removeDragSource() {\n      if (this.dragSource) {\n        this.dragAndDropService.removeDragSource(this.dragSource);\n        this.dragSource = null;\n      }\n    }\n    handleContextMenuMouseEvent(mouseEvent, touchEvent, column) {\n      const event = mouseEvent ?? touchEvent;\n      if (this.gos.get(\"preventDefaultOnContextMenu\")) {\n        event.preventDefault();\n      }\n      const columnToUse = isColumn(column) ? column : void 0;\n      if (this.menuService.isHeaderContextMenuEnabled(columnToUse)) {\n        this.menuService.showHeaderContextMenu(columnToUse, mouseEvent, touchEvent);\n      }\n      this.dispatchColumnMouseEvent(\"columnHeaderContextMenu\", column);\n    }\n    dispatchColumnMouseEvent(eventType, column) {\n      const event = {\n        type: eventType,\n        column\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    destroy() {\n      super.destroy();\n      this.removeDragSource();\n      this.comp = null;\n      this.column = null;\n      this.resizeFeature = null;\n      this.lastFocusEvent = null;\n      this.columnGroupChild = null;\n      this.parentRowCtrl = null;\n      this.eGui = null;\n    }\n  };\n  _AbstractHeaderCellCtrl.DOM_DATA_KEY_HEADER_CTRL = \"headerCtrl\";\n  return _AbstractHeaderCellCtrl;\n})();\nvar AbstractHeaderCellCtrl = _AbstractHeaderCellCtrl;\n\n// community-modules/core/src/headerRendering/cells/hoverFeature.ts\nvar HoverFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.columnHoverService = beans.columnHoverService;\n  }\n  constructor(columns, element) {\n    super();\n    this.columns = columns;\n    this.element = element;\n  }\n  postConstruct() {\n    if (this.gos.get(\"columnHoverHighlight\")) {\n      this.addMouseHoverListeners();\n    }\n  }\n  addMouseHoverListeners() {\n    this.addManagedListeners(this.element, {\n      mouseout: this.onMouseOut.bind(this),\n      mouseover: this.onMouseOver.bind(this)\n    });\n  }\n  onMouseOut() {\n    this.columnHoverService.clearMouseOver();\n  }\n  onMouseOver() {\n    this.columnHoverService.setMouseOver(this.columns);\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/floatingFilter/headerFilterCellCtrl.ts\nvar HeaderFilterCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor(column, beans, parentRowCtrl) {\n    super(column, beans, parentRowCtrl);\n    this.iconCreated = false;\n    this.column = column;\n  }\n  setComp(comp, eGui, eButtonShowMainFilter, eFloatingFilterBody) {\n    this.comp = comp;\n    this.eButtonShowMainFilter = eButtonShowMainFilter;\n    this.eFloatingFilterBody = eFloatingFilterBody;\n    this.setGui(eGui);\n    this.setupActive();\n    this.setupWidth();\n    this.setupLeft();\n    this.setupHover();\n    this.setupFocus();\n    this.setupAria();\n    this.setupFilterButton();\n    this.setupUserComp();\n    this.setupSyncWithFilter();\n    this.setupUi();\n    this.addManagedElementListeners(this.eButtonShowMainFilter, {\n      click: this.showParentFilter.bind(this)\n    });\n    this.setupFilterChangedListener();\n    this.addManagedListeners(this.column, {\n      colDefChanged: this.onColDefChanged.bind(this)\n    });\n  }\n  // empty abstract method\n  resizeHeader() {}\n  // empty abstract method\n  moveHeader() {}\n  setupActive() {\n    const colDef = this.column.getColDef();\n    const filterExists = !!colDef.filter;\n    const floatingFilterExists = !!colDef.floatingFilter;\n    this.active = filterExists && floatingFilterExists;\n  }\n  setupUi() {\n    this.comp.setButtonWrapperDisplayed(!this.suppressFilterButton && this.active);\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-full-body\", this.suppressFilterButton);\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-body\", !this.suppressFilterButton);\n    if (!this.active || this.iconCreated) {\n      return;\n    }\n    const eMenuIcon = _createIconNoSpan(\"filter\", this.gos, this.column);\n    if (eMenuIcon) {\n      this.iconCreated = true;\n      this.eButtonShowMainFilter.appendChild(eMenuIcon);\n    }\n  }\n  setupFocus() {\n    this.createManagedBean(new ManagedFocusFeature(this.eGui, {\n      shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n      onTabKeyDown: this.onTabKeyDown.bind(this),\n      handleKeyDown: this.handleKeyDown.bind(this),\n      onFocusIn: this.onFocusIn.bind(this)\n    }));\n  }\n  setupAria() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    _setAriaLabel(this.eButtonShowMainFilter, localeTextFunc(\"ariaFilterMenuOpen\", \"Open Filter Menu\"));\n  }\n  onTabKeyDown(e) {\n    const activeEl = this.gos.getActiveDomElement();\n    const wrapperHasFocus = activeEl === this.eGui;\n    if (wrapperHasFocus) {\n      return;\n    }\n    const nextFocusableEl = this.focusService.findNextFocusableElement(this.eGui, null, e.shiftKey);\n    if (nextFocusableEl) {\n      this.beans.headerNavigationService.scrollToColumn(this.column);\n      e.preventDefault();\n      nextFocusableEl.focus();\n      return;\n    }\n    const nextFocusableColumn = this.findNextColumnWithFloatingFilter(e.shiftKey);\n    if (!nextFocusableColumn) {\n      return;\n    }\n    if (this.focusService.focusHeaderPosition({\n      headerPosition: {\n        headerRowIndex: this.getParentRowCtrl().getRowIndex(),\n        column: nextFocusableColumn\n      },\n      event: e\n    })) {\n      e.preventDefault();\n    }\n  }\n  findNextColumnWithFloatingFilter(backwards) {\n    const presentedColsService = this.beans.visibleColsService;\n    let nextCol = this.column;\n    do {\n      nextCol = backwards ? presentedColsService.getColBefore(nextCol) : presentedColsService.getColAfter(nextCol);\n      if (!nextCol) {\n        break;\n      }\n    } while (!nextCol.getColDef().filter || !nextCol.getColDef().floatingFilter);\n    return nextCol;\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        if (!wrapperHasFocus) {\n          e.preventDefault();\n        }\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n        if (wrapperHasFocus) {\n          return;\n        }\n        e.stopPropagation();\n      case KeyCode.ENTER:\n        if (wrapperHasFocus) {\n          if (this.focusService.focusInto(this.eGui)) {\n            e.preventDefault();\n          }\n        }\n        break;\n      case KeyCode.ESCAPE:\n        if (!wrapperHasFocus) {\n          this.eGui.focus();\n        }\n    }\n  }\n  onFocusIn(e) {\n    const isRelatedWithin = this.eGui.contains(e.relatedTarget);\n    if (isRelatedWithin) {\n      return;\n    }\n    const notFromHeaderWrapper = !!e.relatedTarget && !e.relatedTarget.classList.contains(\"ag-floating-filter\");\n    const fromWithinHeader = !!e.relatedTarget && _isElementChildOfClass(e.relatedTarget, \"ag-floating-filter\");\n    if (notFromHeaderWrapper && fromWithinHeader && e.target === this.eGui) {\n      const lastFocusEvent = this.lastFocusEvent;\n      const fromTab = !!(lastFocusEvent && lastFocusEvent.key === KeyCode.TAB);\n      if (lastFocusEvent && fromTab) {\n        const shouldFocusLast = lastFocusEvent.shiftKey;\n        this.focusService.focusInto(this.eGui, shouldFocusLast);\n      }\n    }\n    const rowIndex = this.getRowIndex();\n    this.beans.focusService.setFocusedHeader(rowIndex, this.column);\n  }\n  setupHover() {\n    this.createManagedBean(new HoverFeature([this.column], this.eGui));\n    const listener = () => {\n      if (!this.gos.get(\"columnHoverHighlight\")) {\n        return;\n      }\n      const hovered = this.beans.columnHoverService.isHovered(this.column);\n      this.comp.addOrRemoveCssClass(\"ag-column-hover\", hovered);\n    };\n    this.addManagedEventListeners({\n      columnHoverChanged: listener\n    });\n    listener();\n  }\n  setupLeft() {\n    const setLeftFeature = new SetLeftFeature(this.column, this.eGui, this.beans);\n    this.createManagedBean(setLeftFeature);\n  }\n  setupFilterButton() {\n    this.suppressFilterButton = !this.menuService.isFloatingFilterButtonEnabled(this.column);\n    this.highlightFilterButtonWhenActive = !this.menuService.isLegacyMenuEnabled();\n  }\n  setupUserComp() {\n    if (!this.active) {\n      return;\n    }\n    const compDetails = this.beans.filterManager?.getFloatingFilterCompDetails(this.column, () => this.showParentFilter());\n    if (compDetails) {\n      this.setCompDetails(compDetails);\n    }\n  }\n  setCompDetails(compDetails) {\n    this.userCompDetails = compDetails;\n    this.comp.setCompDetails(compDetails);\n  }\n  showParentFilter() {\n    const eventSource = this.suppressFilterButton ? this.eFloatingFilterBody : this.eButtonShowMainFilter;\n    this.menuService.showFilterMenu({\n      column: this.column,\n      buttonElement: eventSource,\n      containerType: \"floatingFilter\",\n      positionBy: \"button\"\n    });\n  }\n  setupSyncWithFilter() {\n    if (!this.active) {\n      return;\n    }\n    const {\n      filterManager\n    } = this.beans;\n    const syncWithFilter = event => {\n      if (event?.source === \"filterDestroyed\" && !this.isAlive()) {\n        return;\n      }\n      const compPromise = this.comp.getFloatingFilterComp();\n      if (!compPromise) {\n        return;\n      }\n      compPromise.then(comp => {\n        if (comp) {\n          const parentModel = filterManager?.getCurrentFloatingFilterParentModel(this.column);\n          const filterChangedEvent = event ? {\n            // event can have additional params like `afterDataChange` which need to be passed through\n            ...event,\n            columns: event.columns ?? [],\n            source: event.source === \"api\" ? \"api\" : \"columnFilter\"\n          } : null;\n          comp.onParentModelChanged(parentModel, filterChangedEvent);\n        }\n      });\n    };\n    [this.destroySyncListener] = this.addManagedListeners(this.column, {\n      filterChanged: syncWithFilter\n    });\n    if (filterManager?.isFilterActive(this.column)) {\n      syncWithFilter(null);\n    }\n  }\n  setupWidth() {\n    const listener = () => {\n      const width = `${this.column.getActualWidth()}px`;\n      this.comp.setWidth(width);\n    };\n    this.addManagedListeners(this.column, {\n      widthChanged: listener\n    });\n    listener();\n  }\n  setupFilterChangedListener() {\n    if (this.active) {\n      [this.destroyFilterChangedListener] = this.addManagedListeners(this.column, {\n        filterChanged: this.updateFilterButton.bind(this)\n      });\n      this.updateFilterButton();\n    }\n  }\n  updateFilterButton() {\n    if (!this.suppressFilterButton && this.comp) {\n      const isFilterAllowed = !!this.beans.filterManager?.isFilterAllowed(this.column);\n      this.comp.setButtonWrapperDisplayed(isFilterAllowed);\n      if (this.highlightFilterButtonWhenActive && isFilterAllowed) {\n        this.eButtonShowMainFilter.classList.toggle(\"ag-filter-active\", this.column.isFilterActive());\n      }\n    }\n  }\n  onColDefChanged() {\n    const wasActive = this.active;\n    this.setupActive();\n    const becomeActive = !wasActive && this.active;\n    if (wasActive && !this.active) {\n      this.destroySyncListener();\n      this.destroyFilterChangedListener();\n    }\n    const newCompDetails = this.active ? this.beans.filterManager?.getFloatingFilterCompDetails(this.column, () => this.showParentFilter()) : null;\n    const compPromise = this.comp.getFloatingFilterComp();\n    if (!compPromise || !newCompDetails) {\n      this.updateCompDetails(newCompDetails, becomeActive);\n    } else {\n      compPromise.then(compInstance => {\n        if (!compInstance || this.beans.filterManager?.areFilterCompsDifferent(this.userCompDetails ?? null, newCompDetails)) {\n          this.updateCompDetails(newCompDetails, becomeActive);\n        } else {\n          this.updateFloatingFilterParams(newCompDetails);\n        }\n      });\n    }\n  }\n  updateCompDetails(compDetails, becomeActive) {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.setCompDetails(compDetails);\n    this.setupFilterButton();\n    this.setupUi();\n    if (becomeActive) {\n      this.setupSyncWithFilter();\n      this.setupFilterChangedListener();\n    }\n  }\n  updateFloatingFilterParams(userCompDetails) {\n    if (!userCompDetails) {\n      return;\n    }\n    const params = userCompDetails.params;\n    this.comp.getFloatingFilterComp()?.then(floatingFilter => {\n      let hasRefreshed = false;\n      if (floatingFilter?.refresh && typeof floatingFilter.refresh === \"function\") {\n        const result = floatingFilter.refresh(params);\n        if (result !== null) {\n          hasRefreshed = true;\n        }\n      }\n      if (!hasRefreshed && floatingFilter?.onParamsUpdated && typeof floatingFilter.onParamsUpdated === \"function\") {\n        const result = floatingFilter.onParamsUpdated(params);\n        if (result !== null) {\n          _warnOnce(`Custom floating filter method 'onParamsUpdated' is deprecated. Use 'refresh' instead.`);\n        }\n      }\n    });\n  }\n  destroy() {\n    super.destroy();\n    this.eButtonShowMainFilter = null;\n    this.eFloatingFilterBody = null;\n    this.userCompDetails = null;\n    this.destroySyncListener = null;\n    this.destroyFilterChangedListener = null;\n  }\n};\n\n// community-modules/core/src/version.ts\nvar VERSION = \"32.0.1\";\n\n// community-modules/core/src/filter/columnFilterApi.ts\nfunction isColumnFilterPresent(beans) {\n  return !!beans.filterManager?.isColumnFilterPresent() || !!beans.filterManager?.isAggregateFilterPresent();\n}\nfunction getFilterInstance(beans, key, callback) {\n  return beans.filterManager?.getFilterInstance(key, callback);\n}\nfunction getColumnFilterInstance(beans, key) {\n  return beans.filterManager?.getColumnFilterInstance(key) ?? Promise.resolve(void 0);\n}\nfunction destroyFilter(beans, key) {\n  const column = beans.columnModel.getColDefCol(key);\n  if (column) {\n    return beans.filterManager?.destroyFilter(column, \"api\");\n  }\n}\nfunction setFilterModel(beans, model) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.filterManager?.setFilterModel(model));\n}\nfunction getFilterModel(beans) {\n  return beans.filterManager?.getFilterModel() ?? {};\n}\nfunction getColumnFilterModel(beans, column) {\n  return beans.filterManager?.getColumnFilterModel(column) ?? null;\n}\nfunction setColumnFilterModel(beans, column, model) {\n  return beans.filterManager?.setColumnFilterModel(column, model) ?? Promise.resolve();\n}\nfunction showColumnFilter(beans, colKey) {\n  const column = beans.columnModel.getCol(colKey);\n  if (!column) {\n    _errorOnce(`column '${colKey}' not found`);\n    return;\n  }\n  beans.menuService.showFilterMenu({\n    column,\n    containerType: \"columnFilter\",\n    positionBy: \"auto\"\n  });\n}\n\n// community-modules/core/src/filter/floating/floatingFilterMapper.ts\nfunction getDefaultFloatingFilterType(frameworkOverrides, def, getFromDefault) {\n  if (def == null) {\n    return null;\n  }\n  let defaultFloatingFilterType = null;\n  const {\n    compName,\n    jsComp,\n    fwComp\n  } = UserComponentFactory.getCompKeys(frameworkOverrides, def, FilterComponent);\n  if (compName) {\n    const floatingFilterTypeMap = {\n      set: \"agSetColumnFloatingFilter\",\n      agSetColumnFilter: \"agSetColumnFloatingFilter\",\n      multi: \"agMultiColumnFloatingFilter\",\n      agMultiColumnFilter: \"agMultiColumnFloatingFilter\",\n      group: \"agGroupColumnFloatingFilter\",\n      agGroupColumnFilter: \"agGroupColumnFloatingFilter\",\n      number: \"agNumberColumnFloatingFilter\",\n      agNumberColumnFilter: \"agNumberColumnFloatingFilter\",\n      date: \"agDateColumnFloatingFilter\",\n      agDateColumnFilter: \"agDateColumnFloatingFilter\",\n      text: \"agTextColumnFloatingFilter\",\n      agTextColumnFilter: \"agTextColumnFloatingFilter\"\n    };\n    defaultFloatingFilterType = floatingFilterTypeMap[compName];\n  } else {\n    const usingDefaultFilter = jsComp == null && fwComp == null && def.filter === true;\n    if (usingDefaultFilter) {\n      defaultFloatingFilterType = getFromDefault();\n    }\n  }\n  return defaultFloatingFilterType;\n}\n\n// community-modules/core/src/filter/columnFilterService.ts\nvar ColumnFilterService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnFilterService\";\n    this.allColumnFilters = /* @__PURE__ */new Map();\n    this.allColumnListeners = /* @__PURE__ */new Map();\n    this.activeAggregateFilters = [];\n    this.activeColumnFilters = [];\n    // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n    // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n    // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n    // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n    // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n    this.processingFilterChange = false;\n    // when we're waiting for cell data types to be inferred, we need to defer filter model updates\n    this.filterModelUpdateQueue = [];\n    this.columnFilterModelUpdateQueue = [];\n  }\n  wireBeans(beans) {\n    this.valueService = beans.valueService;\n    this.columnModel = beans.columnModel;\n    this.rowModel = beans.rowModel;\n    this.userComponentFactory = beans.userComponentFactory;\n    this.rowRenderer = beans.rowRenderer;\n    this.dataTypeService = beans.dataTypeService;\n    this.filterManager = beans.filterManager;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.onColumnsChanged.bind(this),\n      rowDataUpdated: () => this.onNewRowsLoaded(\"rowDataUpdated\"),\n      dataTypesInferred: this.processFilterModelUpdateQueue.bind(this)\n    });\n    this.initialFilterModel = {\n      ...(this.gos.get(\"initialState\")?.filter?.filterModel ?? {})\n    };\n  }\n  setFilterModel(model, source = \"api\") {\n    if (this.dataTypeService?.isPendingInference()) {\n      this.filterModelUpdateQueue.push({\n        model,\n        source\n      });\n      return;\n    }\n    const allPromises = [];\n    const previousModel = this.getFilterModel();\n    if (model) {\n      const modelKeys = new Set(Object.keys(model));\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\n        const newModel = model[colId];\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper.filterPromise, newModel));\n        modelKeys.delete(colId);\n      });\n      modelKeys.forEach(colId => {\n        const column = this.columnModel.getColDefCol(colId) || this.columnModel.getCol(colId);\n        if (!column) {\n          _warnOnce(\"setFilterModel() - no column found for colId: \" + colId);\n          return;\n        }\n        if (!column.isFilterAllowed()) {\n          _warnOnce(\"setFilterModel() - unable to fully apply model, filtering disabled for colId: \" + colId);\n          return;\n        }\n        const filterWrapper = this.getOrCreateFilterWrapper(column);\n        if (!filterWrapper) {\n          _warnOnce(\"setFilterModel() - unable to fully apply model, unable to create filter for colId: \" + colId);\n          return;\n        }\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper.filterPromise, model[colId]));\n      });\n    } else {\n      this.allColumnFilters.forEach(filterWrapper => {\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper.filterPromise, null));\n      });\n    }\n    AgPromise.all(allPromises).then(() => {\n      const currentModel = this.getFilterModel();\n      const columns = [];\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\n        const before = previousModel ? previousModel[colId] : null;\n        const after = currentModel ? currentModel[colId] : null;\n        if (!_jsonEquals(before, after)) {\n          columns.push(filterWrapper.column);\n        }\n      });\n      if (columns.length > 0) {\n        this.filterManager?.onFilterChanged({\n          columns,\n          source\n        });\n      }\n    });\n  }\n  setModelOnFilterWrapper(filterPromise, newModel) {\n    return new AgPromise(resolve => {\n      filterPromise.then(filter => {\n        if (typeof filter.setModel !== \"function\") {\n          _warnOnce(\"filter missing setModel method, which is needed for setFilterModel\");\n          resolve();\n        }\n        (filter.setModel(newModel) || AgPromise.resolve()).then(() => resolve());\n      });\n    });\n  }\n  getFilterModel() {\n    const result = {};\n    this.allColumnFilters.forEach((filterWrapper, key) => {\n      const model = this.getModelFromFilterWrapper(filterWrapper);\n      if (_exists(model)) {\n        result[key] = model;\n      }\n    });\n    return result;\n  }\n  getModelFromFilterWrapper(filterWrapper) {\n    const {\n      filter\n    } = filterWrapper;\n    if (filter) {\n      if (typeof filter.getModel !== \"function\") {\n        _warnOnce(\"filter API missing getModel method, which is needed for getFilterModel\");\n        return null;\n      }\n      return filter.getModel();\n    } else {\n      return this.getModelFromInitialState(filterWrapper.column);\n    }\n  }\n  getModelFromInitialState(column) {\n    return this.initialFilterModel[column.getColId()] ?? null;\n  }\n  isColumnFilterPresent() {\n    return this.activeColumnFilters.length > 0;\n  }\n  isAggregateFilterPresent() {\n    return !!this.activeAggregateFilters.length;\n  }\n  disableColumnFilters() {\n    if (this.allColumnFilters.size) {\n      this.allColumnFilters.forEach(filterWrapper => this.disposeFilterWrapper(filterWrapper, \"advancedFilterEnabled\"));\n      return true;\n    }\n    return false;\n  }\n  doAggregateFiltersPass(node, filterToSkip) {\n    return this.doColumnFiltersPass(node, filterToSkip, true);\n  }\n  updateActiveFilters() {\n    const isFilterActive = filter => {\n      if (!filter) {\n        return false;\n      }\n      if (!filter.isFilterActive) {\n        _warnOnce(\"Filter is missing isFilterActive() method\");\n        return false;\n      }\n      return filter.isFilterActive();\n    };\n    const groupFilterEnabled = !!this.gos.getGroupAggFiltering();\n    const isAggFilter = column => {\n      const isSecondary = !column.isPrimary();\n      if (isSecondary) {\n        return true;\n      }\n      const isShowingPrimaryColumns = !this.columnModel.isPivotActive();\n      const isValueActive = column.isValueActive();\n      if (!isValueActive || !isShowingPrimaryColumns) {\n        return false;\n      }\n      if (this.columnModel.isPivotMode()) {\n        return true;\n      }\n      return groupFilterEnabled;\n    };\n    const activeAggregateFilters = [];\n    const activeColumnFilters = [];\n    return this.forEachColumnFilter((filter, filterWrapper) => {\n      const filterActive = isFilterActive(filter);\n      if (filterActive) {\n        if (isAggFilter(filterWrapper.column)) {\n          activeAggregateFilters.push(filter);\n        } else {\n          activeColumnFilters.push(filter);\n        }\n      }\n    }).then(() => {\n      this.activeAggregateFilters = activeAggregateFilters;\n      this.activeColumnFilters = activeColumnFilters;\n    });\n  }\n  updateFilterFlagInColumns(source, additionalEventAttributes) {\n    return this.forEachColumnFilter((filter, filterWrapper) => filterWrapper.column.setFilterActive(filter.isFilterActive(), source, additionalEventAttributes));\n  }\n  forEachColumnFilter(callback) {\n    return AgPromise.all(Array.from(this.allColumnFilters.values()).map(filterWrapper => filterWrapper.filterPromise.then(filter => callback(filter, filterWrapper))));\n  }\n  doColumnFiltersPass(node, filterToSkip, targetAggregates) {\n    const {\n      data,\n      aggData\n    } = node;\n    const targetedFilters = targetAggregates ? this.activeAggregateFilters : this.activeColumnFilters;\n    const targetedData = targetAggregates ? aggData : data;\n    for (let i = 0; i < targetedFilters.length; i++) {\n      const filter = targetedFilters[i];\n      if (filter == null || filter === filterToSkip) {\n        continue;\n      }\n      if (typeof filter.doesFilterPass !== \"function\") {\n        throw new Error(\"Filter is missing method doesFilterPass\");\n      }\n      if (!filter.doesFilterPass({\n        node,\n        data: targetedData\n      })) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // sometimes (especially in React) the filter can call onFilterChanged when we are in the middle\n  // of a render cycle. this would be bad, so we wait for render cycle to complete when this happens.\n  // this happens in react when we change React State in the grid (eg setting RowCtrl's in RowContainer)\n  // which results in React State getting applied in the main application, triggering a useEffect() to\n  // be kicked off adn then the application calling the grid's API. in AG-6554, the custom filter was\n  // getting it's useEffect() triggered in this way.\n  callOnFilterChangedOutsideRenderCycle(params) {\n    const action = () => this.filterManager?.onFilterChanged(params);\n    if (this.rowRenderer.isRefreshInProgress()) {\n      setTimeout(action, 0);\n    } else {\n      action();\n    }\n  }\n  updateBeforeFilterChanged(params = {}) {\n    const {\n      filterInstance,\n      additionalEventAttributes\n    } = params;\n    this.updateDependentFilters();\n    return this.updateActiveFilters().then(() => this.updateFilterFlagInColumns(\"filterChanged\", additionalEventAttributes).then(() => {\n      this.allColumnFilters.forEach(filterWrapper => {\n        if (!filterWrapper.filterPromise) {\n          return;\n        }\n        filterWrapper.filterPromise.then(filter => {\n          if (filter && filter !== filterInstance && filter.onAnyFilterChanged) {\n            filter.onAnyFilterChanged();\n          }\n        });\n      });\n      this.processingFilterChange = true;\n    }));\n  }\n  updateAfterFilterChanged() {\n    this.processingFilterChange = false;\n  }\n  isSuppressFlashingCellsBecauseFiltering() {\n    const allowShowChangeAfterFilter = this.gos.get(\"allowShowChangeAfterFilter\") ?? false;\n    return !allowShowChangeAfterFilter && this.processingFilterChange;\n  }\n  onNewRowsLoaded(source) {\n    this.forEachColumnFilter(filter => {\n      if (filter.onNewRowsLoaded) {\n        filter.onNewRowsLoaded();\n      }\n    }).then(() => this.updateFilterFlagInColumns(source, {\n      afterDataChange: true\n    })).then(() => this.updateActiveFilters());\n  }\n  createValueGetter(column) {\n    return ({\n      node\n    }) => this.valueService.getValue(column, node, true);\n  }\n  createGetValue(filterColumn) {\n    return (rowNode, column) => {\n      const columnToUse = column ? this.columnModel.getCol(column) : filterColumn;\n      return columnToUse ? this.valueService.getValue(columnToUse, rowNode, true) : void 0;\n    };\n  }\n  isFilterActive(column) {\n    const {\n      filter\n    } = this.cachedFilter(column) ?? {};\n    if (filter) {\n      return filter.isFilterActive();\n    }\n    return this.getModelFromInitialState(column) != null;\n  }\n  getOrCreateFilterWrapper(column) {\n    if (!column.isFilterAllowed()) {\n      return null;\n    }\n    let filterWrapper = this.cachedFilter(column);\n    if (!filterWrapper) {\n      filterWrapper = this.createFilterWrapper(column);\n      this.setColumnFilterWrapper(column, filterWrapper);\n    }\n    return filterWrapper;\n  }\n  cachedFilter(column) {\n    return this.allColumnFilters.get(column.getColId());\n  }\n  getDefaultFilter(column) {\n    let defaultFilter;\n    if (ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/set-filter\" /* SetFilterModule */, this.gridId)) {\n      defaultFilter = \"agSetColumnFilter\";\n    } else {\n      const cellDataType = this.dataTypeService?.getBaseDataType(column);\n      if (cellDataType === \"number\") {\n        defaultFilter = \"agNumberColumnFilter\";\n      } else if (cellDataType === \"date\" || cellDataType === \"dateString\") {\n        defaultFilter = \"agDateColumnFilter\";\n      } else {\n        defaultFilter = \"agTextColumnFilter\";\n      }\n    }\n    return defaultFilter;\n  }\n  getDefaultFloatingFilter(column) {\n    let defaultFloatingFilterType;\n    if (ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/set-filter\" /* SetFilterModule */, this.gridId)) {\n      defaultFloatingFilterType = \"agSetColumnFloatingFilter\";\n    } else {\n      const cellDataType = this.dataTypeService?.getBaseDataType(column);\n      if (cellDataType === \"number\") {\n        defaultFloatingFilterType = \"agNumberColumnFloatingFilter\";\n      } else if (cellDataType === \"date\" || cellDataType === \"dateString\") {\n        defaultFloatingFilterType = \"agDateColumnFloatingFilter\";\n      } else {\n        defaultFloatingFilterType = \"agTextColumnFloatingFilter\";\n      }\n    }\n    return defaultFloatingFilterType;\n  }\n  createFilterInstance(column, filterWrapper) {\n    const defaultFilter = this.getDefaultFilter(column);\n    const colDef = column.getColDef();\n    let filterInstance;\n    const params = {\n      ...this.createFilterParams(column, colDef),\n      filterModifiedCallback: () => this.filterModifiedCallbackFactory(filterInstance, column)(),\n      filterChangedCallback: additionalEventAttributes => this.filterChangedCallbackFactory(filterInstance, column)(additionalEventAttributes),\n      doesRowPassOtherFilter: node => this.filterManager ? this.filterManager.doesRowPassOtherFilters(filterInstance, node) : true\n    };\n    const compDetails = this.userComponentFactory.getFilterDetails(colDef, params, defaultFilter);\n    if (!compDetails) {\n      return {\n        filterPromise: null,\n        compDetails: null\n      };\n    }\n    return {\n      filterPromise: () => {\n        const filterPromise = compDetails.newAgStackInstance();\n        if (filterPromise != null) {\n          filterPromise.then(r => {\n            filterInstance = r;\n            if (filterWrapper) {\n              filterWrapper.filter = r;\n            }\n          });\n        }\n        return filterPromise;\n      },\n      compDetails\n    };\n  }\n  createFilterParams(column, colDef) {\n    const params = this.gos.addGridCommonParams({\n      column,\n      colDef: _cloneObject(colDef),\n      rowModel: this.rowModel,\n      filterChangedCallback: () => {},\n      filterModifiedCallback: () => {},\n      valueGetter: this.createValueGetter(column),\n      getValue: this.createGetValue(column),\n      doesRowPassOtherFilter: () => true\n    });\n    return params;\n  }\n  createFilterWrapper(column) {\n    const filterWrapper = {\n      column,\n      filterPromise: null,\n      compiledElement: null,\n      compDetails: null\n    };\n    const {\n      filterPromise,\n      compDetails\n    } = this.createFilterInstance(column, filterWrapper);\n    filterWrapper.filterPromise = filterPromise?.() ?? null;\n    filterWrapper.compDetails = compDetails;\n    return filterWrapper;\n  }\n  onColumnsChanged() {\n    const columns = [];\n    this.allColumnFilters.forEach((wrapper, colId) => {\n      let currentColumn;\n      if (wrapper.column.isPrimary()) {\n        currentColumn = this.columnModel.getColDefCol(colId);\n      } else {\n        currentColumn = this.columnModel.getCol(colId);\n      }\n      if (currentColumn && currentColumn === wrapper.column) {\n        return;\n      }\n      columns.push(wrapper.column);\n      this.disposeFilterWrapper(wrapper, \"columnChanged\");\n      this.disposeColumnListener(colId);\n    });\n    if (columns.length > 0) {\n      this.filterManager?.onFilterChanged({\n        columns,\n        source: \"api\"\n      });\n    } else {\n      this.updateDependentFilters();\n    }\n  }\n  updateDependentFilters() {\n    const groupColumns = this.columnModel.getAutoCols();\n    groupColumns?.forEach(groupColumn => {\n      if (groupColumn.getColDef().filter === \"agGroupColumnFilter\") {\n        this.getOrCreateFilterWrapper(groupColumn);\n      }\n    });\n  }\n  // for group filters, can change dynamically whether they are allowed or not\n  isFilterAllowed(column) {\n    const isFilterAllowed = column.isFilterAllowed();\n    if (!isFilterAllowed) {\n      return false;\n    }\n    const {\n      filter\n    } = this.allColumnFilters.get(column.getColId()) ?? {};\n    if (filter) {\n      return typeof filter?.isFilterAllowed === \"function\" ? filter.isFilterAllowed() : true;\n    }\n    return true;\n  }\n  getFloatingFilterCompDetails(column, showParentFilter) {\n    const parentFilterInstance = callback => {\n      const filterComponent = this.getOrCreateFilterWrapper(column)?.filterPromise;\n      if (filterComponent == null) {\n        return;\n      }\n      filterComponent.then(instance => {\n        callback(_unwrapUserComp(instance));\n      });\n    };\n    const colDef = column.getColDef();\n    const filterParams = {\n      ...this.createFilterParams(column, colDef),\n      filterChangedCallback: () => parentFilterInstance(filterInstance => this.filterChangedCallbackFactory(filterInstance, column)())\n    };\n    const finalFilterParams = this.userComponentFactory.mergeParamsWithApplicationProvidedParams(colDef, FilterComponent, filterParams);\n    let defaultFloatingFilterType = getDefaultFloatingFilterType(this.frameworkOverrides, colDef, () => this.getDefaultFloatingFilter(column));\n    if (defaultFloatingFilterType == null) {\n      defaultFloatingFilterType = \"agReadOnlyFloatingFilter\";\n    }\n    const params = {\n      column,\n      filterParams: finalFilterParams,\n      currentParentModel: () => this.getCurrentFloatingFilterParentModel(column),\n      parentFilterInstance,\n      showParentFilter,\n      suppressFilterButton: false\n      // This one might be overridden from the colDef\n    };\n    return this.userComponentFactory.getFloatingFilterCompDetails(colDef, params, defaultFloatingFilterType);\n  }\n  getCurrentFloatingFilterParentModel(column) {\n    return this.getModelFromFilterWrapper(this.cachedFilter(column) ?? {\n      column\n    });\n  }\n  // destroys the filter, so it no longer takes part\n  destroyFilter(column, source = \"api\") {\n    const colId = column.getColId();\n    const filterWrapper = this.allColumnFilters.get(colId);\n    this.disposeColumnListener(colId);\n    delete this.initialFilterModel[colId];\n    if (filterWrapper) {\n      this.disposeFilterWrapper(filterWrapper, source);\n      this.filterManager?.onFilterChanged({\n        columns: [column],\n        source: \"api\"\n      });\n    }\n  }\n  disposeColumnListener(colId) {\n    const columnListener = this.allColumnListeners.get(colId);\n    if (columnListener) {\n      this.allColumnListeners.delete(colId);\n      columnListener();\n    }\n  }\n  disposeFilterWrapper(filterWrapper, source) {\n    filterWrapper.filterPromise.then(filter => {\n      this.destroyBean(filter);\n      filterWrapper.column.setFilterActive(false, \"filterDestroyed\");\n      this.allColumnFilters.delete(filterWrapper.column.getColId());\n      const event = {\n        type: \"filterDestroyed\",\n        source,\n        column: filterWrapper.column\n      };\n      this.eventService.dispatchEvent(event);\n    });\n  }\n  filterModifiedCallbackFactory(filter, column) {\n    return () => {\n      const event = {\n        type: \"filterModified\",\n        column,\n        filterInstance: filter\n      };\n      this.eventService.dispatchEvent(event);\n    };\n  }\n  filterChangedCallbackFactory(filter, column) {\n    return additionalEventAttributes => {\n      const source = additionalEventAttributes?.source ?? \"columnFilter\";\n      const params = {\n        filter,\n        additionalEventAttributes,\n        columns: [column],\n        source\n      };\n      this.callOnFilterChangedOutsideRenderCycle(params);\n    };\n  }\n  checkDestroyFilter(colId) {\n    const filterWrapper = this.allColumnFilters.get(colId);\n    if (!filterWrapper) {\n      return;\n    }\n    const column = filterWrapper.column;\n    const {\n      compDetails\n    } = column.isFilterAllowed() ? this.createFilterInstance(column) : {\n      compDetails: null\n    };\n    if (this.areFilterCompsDifferent(filterWrapper.compDetails, compDetails)) {\n      this.destroyFilter(column, \"paramsUpdated\");\n      return;\n    }\n    const newFilterParams = column.getColDef().filterParams;\n    if (!filterWrapper.filterPromise) {\n      this.destroyFilter(column, \"paramsUpdated\");\n      return;\n    }\n    filterWrapper.filterPromise.then(filter => {\n      const shouldRefreshFilter = filter?.refresh ? filter.refresh({\n        ...this.createFilterParams(column, column.getColDef()),\n        filterModifiedCallback: this.filterModifiedCallbackFactory(filter, column),\n        filterChangedCallback: this.filterChangedCallbackFactory(filter, column),\n        doesRowPassOtherFilter: node => this.filterManager ? this.filterManager.doesRowPassOtherFilters(filter, node) : true,\n        ...newFilterParams\n      }) : true;\n      if (shouldRefreshFilter === false) {\n        this.destroyFilter(column, \"paramsUpdated\");\n      }\n    });\n  }\n  setColumnFilterWrapper(column, filterWrapper) {\n    const colId = column.getColId();\n    this.allColumnFilters.set(colId, filterWrapper);\n    this.allColumnListeners.set(colId, this.addManagedListeners(column, {\n      colDefChanged: () => this.checkDestroyFilter(colId)\n    })[0]);\n  }\n  areFilterCompsDifferent(oldCompDetails, newCompDetails) {\n    if (!newCompDetails || !oldCompDetails) {\n      return true;\n    }\n    const {\n      componentClass: oldComponentClass\n    } = oldCompDetails;\n    const {\n      componentClass: newComponentClass\n    } = newCompDetails;\n    const isSameComponentClass = oldComponentClass === newComponentClass ||\n    // react hooks returns new wrappers, so check nested render method\n    oldComponentClass?.render && newComponentClass?.render && oldComponentClass.render === newComponentClass.render;\n    return !isSameComponentClass;\n  }\n  hasFloatingFilters() {\n    const gridColumns = this.columnModel.getCols();\n    return gridColumns.some(col => col.getColDef().floatingFilter);\n  }\n  getFilterInstance(key, callback) {\n    if (!callback) {\n      return void 0;\n    }\n    this.getFilterInstanceImpl(key).then(filter => {\n      const unwrapped = _unwrapUserComp(filter);\n      callback(unwrapped);\n    });\n    return void 0;\n  }\n  getColumnFilterInstance(key) {\n    return new Promise(resolve => {\n      this.getFilterInstanceImpl(key).then(filter => {\n        resolve(_unwrapUserComp(filter));\n      });\n    });\n  }\n  getFilterInstanceImpl(key) {\n    const column = this.columnModel.getColDefCol(key);\n    if (!column) {\n      return AgPromise.resolve(void 0);\n    }\n    const filterPromise = this.getOrCreateFilterWrapper(column)?.filterPromise;\n    return filterPromise ?? AgPromise.resolve(null);\n  }\n  processFilterModelUpdateQueue() {\n    this.filterModelUpdateQueue.forEach(({\n      model,\n      source\n    }) => this.setFilterModel(model, source));\n    this.filterModelUpdateQueue = [];\n    this.columnFilterModelUpdateQueue.forEach(({\n      key,\n      model,\n      resolve\n    }) => {\n      this.setColumnFilterModel(key, model).then(() => resolve());\n    });\n    this.columnFilterModelUpdateQueue = [];\n  }\n  getColumnFilterModel(key) {\n    const filterWrapper = this.getFilterWrapper(key);\n    return filterWrapper ? this.getModelFromFilterWrapper(filterWrapper) : null;\n  }\n  setColumnFilterModel(key, model) {\n    if (this.dataTypeService?.isPendingInference()) {\n      let resolve = () => {};\n      const promise = new Promise(res => {\n        resolve = res;\n      });\n      this.columnFilterModelUpdateQueue.push({\n        key,\n        model,\n        resolve\n      });\n      return promise;\n    }\n    const column = this.columnModel.getColDefCol(key);\n    const filterWrapper = column ? this.getOrCreateFilterWrapper(column) : null;\n    const convertPromise = promise => {\n      return new Promise(resolve => {\n        promise.then(result => resolve(result));\n      });\n    };\n    return filterWrapper ? convertPromise(this.setModelOnFilterWrapper(filterWrapper.filterPromise, model)) : Promise.resolve();\n  }\n  getFilterWrapper(key) {\n    const column = this.columnModel.getColDefCol(key);\n    return column ? this.cachedFilter(column) ?? null : null;\n  }\n  destroy() {\n    super.destroy();\n    this.allColumnFilters.forEach(filterWrapper => this.disposeFilterWrapper(filterWrapper, \"gridDestroyed\"));\n    this.allColumnListeners.clear();\n  }\n};\n\n// community-modules/core/src/filter/filterApi.ts\nfunction isAnyFilterPresent(beans) {\n  return !!beans.filterManager?.isAnyFilterPresent();\n}\nfunction onFilterChanged(beans, source = \"api\") {\n  beans.filterManager?.onFilterChanged({\n    source\n  });\n}\n\n// community-modules/core/src/filter/floating/provided/readOnlyFloatingFilter.ts\nvar ReadOnlyFloatingFilter = class extends Component {\n  constructor() {\n    super( /* html */\n    `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\">\n                <ag-input-text-field data-ref=\"eFloatingFilterText\"></ag-input-text-field>\n            </div>`, [AgInputTextFieldSelector]);\n    this.eFloatingFilterText = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    this.columnNameService = beans.columnNameService;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  init(params) {\n    this.params = params;\n    const displayName = this.columnNameService.getDisplayNameForColumn(params.column, \"header\", true);\n    const translate = this.localeService.getLocaleTextFunc();\n    this.eFloatingFilterText.setDisabled(true).setInputAriaLabel(`${displayName} ${translate(\"ariaFilterInput\", \"Filter Input\")}`);\n  }\n  onParentModelChanged(parentModel) {\n    if (parentModel == null) {\n      this.eFloatingFilterText.setValue(\"\");\n      return;\n    }\n    this.params.parentFilterInstance(filterInstance => {\n      if (filterInstance.getModelAsString) {\n        const modelAsString = filterInstance.getModelAsString(parentModel);\n        this.eFloatingFilterText.setValue(modelAsString);\n      }\n    });\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    this.init(params);\n  }\n};\n\n// community-modules/core/src/filter/floating/provided/simpleFloatingFilter.ts\nvar SimpleFloatingFilter = class extends Component {\n  wireBeans(beans) {\n    this.columnNameService = beans.columnNameService;\n  }\n  getDefaultDebounceMs() {\n    return 0;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  isEventFromFloatingFilter(event) {\n    return event && event.afterFloatingFilter;\n  }\n  isEventFromDataChange(event) {\n    return event?.afterDataChange;\n  }\n  getLastType() {\n    return this.lastType;\n  }\n  isReadOnly() {\n    return this.readOnly;\n  }\n  setLastTypeFromModel(model) {\n    if (!model) {\n      this.lastType = this.optionsFactory.getDefaultOption();\n      return;\n    }\n    const isCombined = model.operator;\n    let condition;\n    if (isCombined) {\n      const combinedModel = model;\n      condition = combinedModel.conditions[0];\n    } else {\n      condition = model;\n    }\n    this.lastType = condition.type;\n  }\n  canWeEditAfterModelFromParentFilter(model) {\n    if (!model) {\n      return this.isTypeEditable(this.lastType);\n    }\n    const isCombined = model.operator;\n    if (isCombined) {\n      return false;\n    }\n    const simpleModel = model;\n    return this.isTypeEditable(simpleModel.type);\n  }\n  init(params) {\n    this.setSimpleParams(params, false);\n  }\n  setSimpleParams(params, update = true) {\n    this.optionsFactory = new OptionsFactory();\n    this.optionsFactory.init(params.filterParams, this.getDefaultFilterOptions());\n    if (!update) {\n      this.lastType = this.optionsFactory.getDefaultOption();\n    }\n    this.readOnly = !!params.filterParams.readOnly;\n    const editable = this.isTypeEditable(this.optionsFactory.getDefaultOption());\n    this.setEditable(editable);\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    this.setSimpleParams(params);\n  }\n  doesFilterHaveSingleInput(filterType) {\n    const customFilterOption = this.optionsFactory.getCustomOption(filterType);\n    const {\n      numberOfInputs\n    } = customFilterOption || {};\n    return numberOfInputs == null || numberOfInputs == 1;\n  }\n  isTypeEditable(type) {\n    const uneditableTypes = [\"inRange\", \"empty\", \"blank\", \"notBlank\"];\n    return !!type && !this.isReadOnly() && this.doesFilterHaveSingleInput(type) && uneditableTypes.indexOf(type) < 0;\n  }\n  getAriaLabel(params) {\n    const displayName = this.columnNameService.getDisplayNameForColumn(params.column, \"header\", true);\n    const translate = this.localeService.getLocaleTextFunc();\n    return `${displayName} ${translate(\"ariaFilterInput\", \"Filter Input\")}`;\n  }\n};\n\n// community-modules/core/src/filter/provided/date/dateFloatingFilter.ts\nvar DateFloatingFilter = class extends SimpleFloatingFilter {\n  constructor() {\n    super( /* html */\n    `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\">\n                <ag-input-text-field data-ref=\"eReadOnlyText\"></ag-input-text-field>\n                <div data-ref=\"eDateWrapper\" style=\"display: flex;\"></div>\n            </div>`, [AgInputTextFieldSelector]);\n    this.eReadOnlyText = RefPlaceholder;\n    this.eDateWrapper = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    super.wireBeans(beans);\n    this.context = beans.context;\n    this.userComponentFactory = beans.userComponentFactory;\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_DATE_FILTER_OPTIONS;\n  }\n  init(params) {\n    super.init(params);\n    this.params = params;\n    this.filterParams = params.filterParams;\n    this.createDateComponent();\n    this.filterModelFormatter = new DateFilterModelFormatter(this.filterParams, this.localeService, this.optionsFactory);\n    const translate = this.localeService.getLocaleTextFunc();\n    this.eReadOnlyText.setDisabled(true).setInputAriaLabel(translate(\"ariaDateFilterInput\", \"Date Filter Input\"));\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.params = params;\n    this.filterParams = params.filterParams;\n    this.updateDateComponent();\n    this.filterModelFormatter.updateParams({\n      optionsFactory: this.optionsFactory,\n      dateFilterParams: this.filterParams\n    });\n    this.updateCompOnModelChange(params.currentParentModel());\n  }\n  updateCompOnModelChange(model) {\n    const allowEditing = !this.isReadOnly() && this.canWeEditAfterModelFromParentFilter(model);\n    this.setEditable(allowEditing);\n    if (allowEditing) {\n      if (model) {\n        const dateModel = model;\n        this.dateComp.setDate(_parseDateTimeFromString(dateModel.dateFrom));\n      } else {\n        this.dateComp.setDate(null);\n      }\n      this.eReadOnlyText.setValue(\"\");\n    } else {\n      this.eReadOnlyText.setValue(this.filterModelFormatter.getModelAsString(model));\n      this.dateComp.setDate(null);\n    }\n  }\n  setEditable(editable) {\n    _setDisplayed(this.eDateWrapper, editable);\n    _setDisplayed(this.eReadOnlyText.getGui(), !editable);\n  }\n  onParentModelChanged(model, event) {\n    if (this.isEventFromFloatingFilter(event) || this.isEventFromDataChange(event)) {\n      return;\n    }\n    super.setLastTypeFromModel(model);\n    this.updateCompOnModelChange(model);\n  }\n  onDateChanged() {\n    const filterValueDate = this.dateComp.getDate();\n    const filterValueText = _serialiseDate(filterValueDate);\n    this.params.parentFilterInstance(filterInstance => {\n      if (filterInstance) {\n        const date = _parseDateTimeFromString(filterValueText);\n        filterInstance.onFloatingFilterChanged(this.getLastType() || null, date);\n      }\n    });\n  }\n  getDateComponentParams() {\n    const debounceMs = getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());\n    return {\n      onDateChanged: _debounce(this.onDateChanged.bind(this), debounceMs),\n      filterParams: this.params.column.getColDef().filterParams\n    };\n  }\n  createDateComponent() {\n    this.dateComp = new DateCompWrapper(this.context, this.userComponentFactory, this.getDateComponentParams(), this.eDateWrapper, dateComp => {\n      dateComp.setInputAriaLabel(this.getAriaLabel(this.params));\n    });\n    this.addDestroyFunc(() => this.dateComp.destroy());\n  }\n  updateDateComponent() {\n    const params = this.gos.addGridCommonParams(this.getDateComponentParams());\n    this.dateComp.updateParams(params);\n  }\n  getFilterModelFormatter() {\n    return this.filterModelFormatter;\n  }\n};\n\n// community-modules/core/src/filter/provided/date/defaultDateComponent.ts\nvar DefaultDateComponent = class extends Component {\n  constructor() {\n    super( /* html */\n    `\n            <div class=\"ag-filter-filter\">\n                <ag-input-text-field class=\"ag-date-filter\" data-ref=\"eDateInput\"></ag-input-text-field>\n            </div>`, [AgInputTextFieldSelector]);\n    this.eDateInput = RefPlaceholder;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  init(params) {\n    this.params = params;\n    this.setParams(params);\n    const inputElement = this.eDateInput.getInputElement();\n    this.addManagedListeners(inputElement, {\n      // ensures that the input element is focussed when a clear button is clicked,\n      // unless using safari as there is no clear button and focus does not work properly\n      mouseDown: () => {\n        if (this.eDateInput.isDisabled() || this.usingSafariDatePicker) {\n          return;\n        }\n        inputElement.focus();\n      },\n      input: e => {\n        if (e.target !== this.gos.getActiveDomElement()) {\n          return;\n        }\n        if (this.eDateInput.isDisabled()) {\n          return;\n        }\n        this.params.onDateChanged();\n      }\n    });\n  }\n  setParams(params) {\n    const inputElement = this.eDateInput.getInputElement();\n    const shouldUseBrowserDatePicker = this.shouldUseBrowserDatePicker(params);\n    this.usingSafariDatePicker = shouldUseBrowserDatePicker && _isBrowserSafari();\n    inputElement.type = shouldUseBrowserDatePicker ? \"date\" : \"text\";\n    const {\n      minValidYear,\n      maxValidYear,\n      minValidDate,\n      maxValidDate\n    } = params.filterParams || {};\n    if (minValidDate && minValidYear) {\n      _warnOnce(\"DateFilter should not have both minValidDate and minValidYear parameters set at the same time! minValidYear will be ignored.\");\n    }\n    if (maxValidDate && maxValidYear) {\n      _warnOnce(\"DateFilter should not have both maxValidDate and maxValidYear parameters set at the same time! maxValidYear will be ignored.\");\n    }\n    if (minValidDate && maxValidDate) {\n      const [parsedMinValidDate, parsedMaxValidDate] = [minValidDate, maxValidDate].map(v => v instanceof Date ? v : _parseDateTimeFromString(v));\n      if (parsedMinValidDate && parsedMaxValidDate && parsedMinValidDate.getTime() > parsedMaxValidDate.getTime()) {\n        _warnOnce(\"DateFilter parameter minValidDate should always be lower than or equal to parameter maxValidDate.\");\n      }\n    }\n    if (minValidDate) {\n      if (minValidDate instanceof Date) {\n        inputElement.min = _dateToFormattedString(minValidDate);\n      } else {\n        inputElement.min = minValidDate;\n      }\n    } else {\n      if (minValidYear) {\n        inputElement.min = `${minValidYear}-01-01`;\n      }\n    }\n    if (maxValidDate) {\n      if (maxValidDate instanceof Date) {\n        inputElement.max = _dateToFormattedString(maxValidDate);\n      } else {\n        inputElement.max = maxValidDate;\n      }\n    } else {\n      if (maxValidYear) {\n        inputElement.max = `${maxValidYear}-12-31`;\n      }\n    }\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    this.params = params;\n    this.setParams(params);\n  }\n  getDate() {\n    return _parseDateTimeFromString(this.eDateInput.getValue());\n  }\n  setDate(date) {\n    this.eDateInput.setValue(_serialiseDate(date, false));\n  }\n  setInputPlaceholder(placeholder) {\n    this.eDateInput.setInputPlaceholder(placeholder);\n  }\n  setInputAriaLabel(ariaLabel) {\n    this.eDateInput.setAriaLabel(ariaLabel);\n  }\n  setDisabled(disabled) {\n    this.eDateInput.setDisabled(disabled);\n  }\n  afterGuiAttached(params) {\n    if (!params || !params.suppressFocus) {\n      this.eDateInput.getInputElement().focus();\n    }\n  }\n  shouldUseBrowserDatePicker(params) {\n    if (params.filterParams && params.filterParams.browserDatePicker != null) {\n      return params.filterParams.browserDatePicker;\n    }\n    return _isBrowserChrome() || _isBrowserFirefox() || _isBrowserSafari() && _getSafariVersion() >= 14.1;\n  }\n};\n\n// community-modules/core/src/filter/floating/provided/floatingFilterTextInputService.ts\nvar FloatingFilterTextInputService = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.params = params;\n    this.eFloatingFilterTextInput = RefPlaceholder;\n    this.valueChangedListener = () => {};\n  }\n  setupGui(parentElement) {\n    this.eFloatingFilterTextInput = this.createManagedBean(new AgInputTextField(this.params?.config));\n    const eInput = this.eFloatingFilterTextInput.getGui();\n    parentElement.appendChild(eInput);\n    const listener = e => this.valueChangedListener(e);\n    this.addManagedListeners(eInput, {\n      input: listener,\n      keydown: listener\n    });\n  }\n  setEditable(editable) {\n    this.eFloatingFilterTextInput.setDisabled(!editable);\n  }\n  setAutoComplete(autoComplete) {\n    this.eFloatingFilterTextInput.setAutoComplete(autoComplete);\n  }\n  getValue() {\n    return this.eFloatingFilterTextInput.getValue();\n  }\n  setValue(value, silent) {\n    this.eFloatingFilterTextInput.setValue(value, silent);\n  }\n  setValueChangedListener(listener) {\n    this.valueChangedListener = listener;\n  }\n  setParams(params) {\n    this.setAriaLabel(params.ariaLabel);\n    if (params.autoComplete !== void 0) {\n      this.setAutoComplete(params.autoComplete);\n    }\n  }\n  setAriaLabel(ariaLabel) {\n    this.eFloatingFilterTextInput.setInputAriaLabel(ariaLabel);\n  }\n};\n\n// community-modules/core/src/filter/floating/provided/textInputFloatingFilter.ts\nvar TextInputFloatingFilter = class extends SimpleFloatingFilter {\n  constructor() {\n    super(...arguments);\n    this.eFloatingFilterInputContainer = RefPlaceholder;\n  }\n  postConstruct() {\n    this.setTemplate( /* html */\n    `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\" data-ref=\"eFloatingFilterInputContainer\"></div>\n        `);\n  }\n  getDefaultDebounceMs() {\n    return 500;\n  }\n  onParentModelChanged(model, event) {\n    if (this.isEventFromFloatingFilter(event) || this.isEventFromDataChange(event)) {\n      return;\n    }\n    this.setLastTypeFromModel(model);\n    this.setEditable(this.canWeEditAfterModelFromParentFilter(model));\n    this.floatingFilterInputService.setValue(this.getFilterModelFormatter().getModelAsString(model));\n  }\n  init(params) {\n    this.setupFloatingFilterInputService(params);\n    super.init(params);\n    this.setTextInputParams(params);\n  }\n  setupFloatingFilterInputService(params) {\n    this.floatingFilterInputService = this.createFloatingFilterInputService(params);\n    this.floatingFilterInputService.setupGui(this.eFloatingFilterInputContainer);\n  }\n  setTextInputParams(params) {\n    this.params = params;\n    const autoComplete = params.browserAutoComplete ?? false;\n    this.floatingFilterInputService.setParams({\n      ariaLabel: this.getAriaLabel(params),\n      autoComplete\n    });\n    this.applyActive = isUseApplyButton(this.params.filterParams);\n    if (!this.isReadOnly()) {\n      const debounceMs = getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());\n      const toDebounce = _debounce(this.syncUpWithParentFilter.bind(this), debounceMs);\n      this.floatingFilterInputService.setValueChangedListener(toDebounce);\n    }\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.setTextInputParams(params);\n  }\n  recreateFloatingFilterInputService(params) {\n    const value = this.floatingFilterInputService.getValue();\n    _clearElement(this.eFloatingFilterInputContainer);\n    this.destroyBean(this.floatingFilterInputService);\n    this.setupFloatingFilterInputService(params);\n    this.floatingFilterInputService.setValue(value, true);\n  }\n  syncUpWithParentFilter(e) {\n    const isEnterKey = e.key === KeyCode.ENTER;\n    if (this.applyActive && !isEnterKey) {\n      return;\n    }\n    let value = this.floatingFilterInputService.getValue();\n    if (this.params.filterParams.trimInput) {\n      value = trimInputForFilter(value);\n      this.floatingFilterInputService.setValue(value, true);\n    }\n    this.params.parentFilterInstance(filterInstance => {\n      if (filterInstance) {\n        filterInstance.onFloatingFilterChanged(this.getLastType() || null, value || null);\n      }\n    });\n  }\n  setEditable(editable) {\n    this.floatingFilterInputService.setEditable(editable);\n  }\n};\n\n// community-modules/core/src/filter/provided/number/numberFloatingFilter.ts\nvar FloatingFilterNumberInputService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.valueChangedListener = () => {};\n    this.numberInputActive = true;\n  }\n  setupGui(parentElement) {\n    this.eFloatingFilterNumberInput = this.createManagedBean(new AgInputNumberField());\n    this.eFloatingFilterTextInput = this.createManagedBean(new AgInputTextField());\n    this.eFloatingFilterTextInput.setDisabled(true);\n    const eNumberInput = this.eFloatingFilterNumberInput.getGui();\n    const eTextInput = this.eFloatingFilterTextInput.getGui();\n    parentElement.appendChild(eNumberInput);\n    parentElement.appendChild(eTextInput);\n    this.setupListeners(eNumberInput, e => this.valueChangedListener(e));\n    this.setupListeners(eTextInput, e => this.valueChangedListener(e));\n  }\n  setEditable(editable) {\n    this.numberInputActive = editable;\n    this.eFloatingFilterNumberInput.setDisplayed(this.numberInputActive);\n    this.eFloatingFilterTextInput.setDisplayed(!this.numberInputActive);\n  }\n  setAutoComplete(autoComplete) {\n    this.eFloatingFilterNumberInput.setAutoComplete(autoComplete);\n    this.eFloatingFilterTextInput.setAutoComplete(autoComplete);\n  }\n  getValue() {\n    return this.getActiveInputElement().getValue();\n  }\n  setValue(value, silent) {\n    this.getActiveInputElement().setValue(value, silent);\n  }\n  getActiveInputElement() {\n    return this.numberInputActive ? this.eFloatingFilterNumberInput : this.eFloatingFilterTextInput;\n  }\n  setValueChangedListener(listener) {\n    this.valueChangedListener = listener;\n  }\n  setupListeners(element, listener) {\n    this.addManagedListeners(element, {\n      input: listener,\n      keydown: listener\n    });\n  }\n  setParams(params) {\n    this.setAriaLabel(params.ariaLabel);\n    if (params.autoComplete !== void 0) {\n      this.setAutoComplete(params.autoComplete);\n    }\n  }\n  setAriaLabel(ariaLabel) {\n    this.eFloatingFilterNumberInput.setInputAriaLabel(ariaLabel);\n    this.eFloatingFilterTextInput.setInputAriaLabel(ariaLabel);\n  }\n};\nvar NumberFloatingFilter = class extends TextInputFloatingFilter {\n  init(params) {\n    super.init(params);\n    this.filterModelFormatter = new NumberFilterModelFormatter(this.localeService, this.optionsFactory, params.filterParams?.numberFormatter);\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    const allowedCharPattern = getAllowedCharPattern(params.filterParams);\n    if (allowedCharPattern !== this.allowedCharPattern) {\n      this.recreateFloatingFilterInputService(params);\n    }\n    super.refresh(params);\n    this.filterModelFormatter.updateParams({\n      optionsFactory: this.optionsFactory\n    });\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_NUMBER_FILTER_OPTIONS;\n  }\n  getFilterModelFormatter() {\n    return this.filterModelFormatter;\n  }\n  createFloatingFilterInputService(params) {\n    this.allowedCharPattern = getAllowedCharPattern(params.filterParams);\n    if (this.allowedCharPattern) {\n      return this.createManagedBean(new FloatingFilterTextInputService({\n        config: {\n          allowedCharPattern: this.allowedCharPattern\n        }\n      }));\n    }\n    return this.createManagedBean(new FloatingFilterNumberInputService());\n  }\n};\n\n// community-modules/core/src/filter/provided/text/textFloatingFilter.ts\nvar TextFloatingFilter = class extends TextInputFloatingFilter {\n  init(params) {\n    super.init(params);\n    this.filterModelFormatter = new TextFilterModelFormatter(this.localeService, this.optionsFactory);\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.filterModelFormatter.updateParams({\n      optionsFactory: this.optionsFactory\n    });\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_TEXT_FILTER_OPTIONS;\n  }\n  getFilterModelFormatter() {\n    return this.filterModelFormatter;\n  }\n  createFloatingFilterInputService() {\n    return this.createManagedBean(new FloatingFilterTextInputService());\n  }\n};\n\n// community-modules/core/src/filter/quickFilterApi.ts\nfunction isQuickFilterPresent(beans) {\n  return !!beans.filterManager?.isQuickFilterPresent();\n}\nfunction getQuickFilter(beans) {\n  return beans.gos.get(\"quickFilterText\");\n}\nfunction resetQuickFilter(beans) {\n  beans.filterManager?.resetQuickFilterCache();\n}\n\n// community-modules/core/src/filter/quickFilterService.ts\nvar QuickFilterService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"quickFilterService\";\n    this.quickFilter = null;\n    this.quickFilterParts = null;\n  }\n  wireBeans(beans) {\n    this.valueService = beans.valueService;\n    this.columnModel = beans.columnModel;\n    this.rowModel = beans.rowModel;\n    this.pivotResultColsService = beans.pivotResultColsService;\n  }\n  postConstruct() {\n    const resetListener = this.resetQuickFilterCache.bind(this);\n    this.addManagedEventListeners({\n      columnPivotModeChanged: resetListener,\n      newColumnsLoaded: resetListener,\n      columnRowGroupChanged: resetListener,\n      columnVisible: () => {\n        if (!this.gos.get(\"includeHiddenColumnsInQuickFilter\")) {\n          this.resetQuickFilterCache();\n        }\n      }\n    });\n    this.addManagedPropertyListener(\"quickFilterText\", e => this.setQuickFilter(e.currentValue));\n    this.addManagedPropertyListeners([\"includeHiddenColumnsInQuickFilter\", \"applyQuickFilterBeforePivotOrAgg\"], () => this.onQuickFilterColumnConfigChanged());\n    this.quickFilter = this.parseQuickFilter(this.gos.get(\"quickFilterText\"));\n    this.parser = this.gos.get(\"quickFilterParser\");\n    this.matcher = this.gos.get(\"quickFilterMatcher\");\n    this.setQuickFilterParts();\n    this.addManagedPropertyListeners([\"quickFilterMatcher\", \"quickFilterParser\"], () => this.setQuickFilterParserAndMatcher());\n  }\n  // if we are using autoGroupCols, then they should be included for quick filter. this covers the\n  // following scenarios:\n  // a) user provides 'field' into autoGroupCol of normal grid, so now because a valid col to filter leafs on\n  // b) using tree data and user depends on autoGroupCol for first col, and we also want to filter on this\n  //    (tree data is a bit different, as parent rows can be filtered on, unlike row grouping)\n  refreshQuickFilterCols() {\n    const pivotMode = this.columnModel.isPivotMode();\n    const groupAutoCols = this.columnModel.getAutoCols();\n    const providedCols = this.columnModel.getColDefCols();\n    let columnsForQuickFilter = (pivotMode && !this.gos.get(\"applyQuickFilterBeforePivotOrAgg\") ? this.pivotResultColsService.getPivotResultCols()?.list : providedCols) ?? [];\n    if (groupAutoCols) {\n      columnsForQuickFilter = columnsForQuickFilter.concat(groupAutoCols);\n    }\n    this.colsForQuickFilter = this.gos.get(\"includeHiddenColumnsInQuickFilter\") ? columnsForQuickFilter : columnsForQuickFilter.filter(col => col.isVisible() || col.isRowGroupActive());\n  }\n  isQuickFilterPresent() {\n    return this.quickFilter !== null;\n  }\n  doesRowPassQuickFilter(node) {\n    const usingCache = this.gos.get(\"cacheQuickFilter\");\n    if (this.matcher) {\n      return this.doesRowPassQuickFilterMatcher(usingCache, node);\n    }\n    return this.quickFilterParts.every(part => usingCache ? this.doesRowPassQuickFilterCache(node, part) : this.doesRowPassQuickFilterNoCache(node, part));\n  }\n  resetQuickFilterCache() {\n    this.rowModel.forEachNode(node => node.quickFilterAggregateText = null);\n  }\n  setQuickFilterParts() {\n    const {\n      quickFilter,\n      parser\n    } = this;\n    if (quickFilter) {\n      this.quickFilterParts = parser ? parser(quickFilter) : quickFilter.split(\" \");\n    } else {\n      this.quickFilterParts = null;\n    }\n  }\n  parseQuickFilter(newFilter) {\n    if (!_exists(newFilter)) {\n      return null;\n    }\n    if (!this.gos.isRowModelType(\"clientSide\")) {\n      _warnOnce(\"Quick filtering only works with the Client-Side Row Model\");\n      return null;\n    }\n    return newFilter.toUpperCase();\n  }\n  setQuickFilter(newFilter) {\n    if (newFilter != null && typeof newFilter !== \"string\") {\n      _warnOnce(`Grid option quickFilterText only supports string inputs, received: ${typeof newFilter}`);\n      return;\n    }\n    const parsedFilter = this.parseQuickFilter(newFilter);\n    if (this.quickFilter !== parsedFilter) {\n      this.quickFilter = parsedFilter;\n      this.setQuickFilterParts();\n      this.dispatchLocalEvent({\n        type: \"quickFilterChanged\"\n      });\n    }\n  }\n  setQuickFilterParserAndMatcher() {\n    const parser = this.gos.get(\"quickFilterParser\");\n    const matcher = this.gos.get(\"quickFilterMatcher\");\n    const hasChanged = parser !== this.parser || matcher !== this.matcher;\n    this.parser = parser;\n    this.matcher = matcher;\n    if (hasChanged) {\n      this.setQuickFilterParts();\n      this.dispatchLocalEvent({\n        type: \"quickFilterChanged\"\n      });\n    }\n  }\n  onQuickFilterColumnConfigChanged() {\n    this.refreshQuickFilterCols();\n    this.resetQuickFilterCache();\n    if (this.isQuickFilterPresent()) {\n      this.dispatchLocalEvent({\n        type: \"quickFilterChanged\"\n      });\n    }\n  }\n  doesRowPassQuickFilterNoCache(node, filterPart) {\n    return this.colsForQuickFilter.some(column => {\n      const part = this.getQuickFilterTextForColumn(column, node);\n      return _exists(part) && part.indexOf(filterPart) >= 0;\n    });\n  }\n  doesRowPassQuickFilterCache(node, filterPart) {\n    this.checkGenerateQuickFilterAggregateText(node);\n    return node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n  }\n  doesRowPassQuickFilterMatcher(usingCache, node) {\n    let quickFilterAggregateText;\n    if (usingCache) {\n      this.checkGenerateQuickFilterAggregateText(node);\n      quickFilterAggregateText = node.quickFilterAggregateText;\n    } else {\n      quickFilterAggregateText = this.getQuickFilterAggregateText(node);\n    }\n    const {\n      quickFilterParts,\n      matcher\n    } = this;\n    return matcher(quickFilterParts, quickFilterAggregateText);\n  }\n  checkGenerateQuickFilterAggregateText(node) {\n    if (!node.quickFilterAggregateText) {\n      node.quickFilterAggregateText = this.getQuickFilterAggregateText(node);\n    }\n  }\n  getQuickFilterTextForColumn(column, node) {\n    let value = this.valueService.getValue(column, node, true);\n    const colDef = column.getColDef();\n    if (colDef.getQuickFilterText) {\n      const params = this.gos.addGridCommonParams({\n        value,\n        node,\n        data: node.data,\n        column,\n        colDef\n      });\n      value = colDef.getQuickFilterText(params);\n    }\n    return _exists(value) ? value.toString().toUpperCase() : null;\n  }\n  getQuickFilterAggregateText(node) {\n    const stringParts = [];\n    this.colsForQuickFilter.forEach(column => {\n      const part = this.getQuickFilterTextForColumn(column, node);\n      if (_exists(part)) {\n        stringParts.push(part);\n      }\n    });\n    return stringParts.join(\"\\n\");\n  }\n};\n\n// community-modules/core/src/filter/filterModule.ts\nvar FilterCoreModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/filter-core\",\n  beans: [FilterManager]\n};\nvar FilterApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/filter-api\",\n  apiFunctions: {\n    isAnyFilterPresent,\n    onFilterChanged\n  },\n  dependantModules: [FilterCoreModule]\n};\nvar ColumnFilterModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/column-filter\",\n  beans: [ColumnFilterService],\n  dependantModules: [FilterCoreModule]\n};\nvar ColumnFilterApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/column-filter-api\",\n  apiFunctions: {\n    isColumnFilterPresent,\n    getFilterInstance,\n    getColumnFilterInstance,\n    destroyFilter,\n    setFilterModel,\n    getFilterModel,\n    getColumnFilterModel,\n    setColumnFilterModel,\n    showColumnFilter\n  },\n  dependantModules: [ColumnFilterModule, FilterApiModule]\n};\nvar FloatingFilterCoreModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/floating-filter-core\",\n  controllers: [{\n    name: \"headerFilterCell\",\n    classImp: HeaderFilterCellCtrl\n  }],\n  dependantModules: [ColumnFilterModule]\n};\nvar FloatingFilterModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/floating-filter\",\n  dependantModules: [FloatingFilterCoreModule, ColumnFilterModule]\n};\nvar ReadOnlyFloatingFilterModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/read-only-floating-filter\",\n  userComponents: [{\n    name: \"agReadOnlyFloatingFilter\",\n    classImp: ReadOnlyFloatingFilter\n  }],\n  dependantModules: [FloatingFilterCoreModule]\n};\nvar SimpleFilterModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/simple-filter\",\n  dependantModules: [ColumnFilterModule],\n  userComponents: [{\n    name: \"agTextColumnFilter\",\n    classImp: TextFilter\n  }, {\n    name: \"agNumberColumnFilter\",\n    classImp: NumberFilter\n  }, {\n    name: \"agDateColumnFilter\",\n    classImp: DateFilter\n  }, {\n    name: \"agDateInput\",\n    classImp: DefaultDateComponent\n  }]\n};\nvar SimpleFloatingFilterModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/simple-floating-filter\",\n  dependantModules: [SimpleFilterModule, FloatingFilterCoreModule],\n  userComponents: [{\n    name: \"agTextColumnFloatingFilter\",\n    classImp: TextFloatingFilter\n  }, {\n    name: \"agNumberColumnFloatingFilter\",\n    classImp: NumberFloatingFilter\n  }, {\n    name: \"agDateColumnFloatingFilter\",\n    classImp: DateFloatingFilter\n  }]\n};\nvar QuickFilterCoreModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/quick-filter-core\",\n  beans: [QuickFilterService],\n  dependantModules: [FilterCoreModule]\n};\nvar QuickFilterApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/quick-filter-api\",\n  apiFunctions: {\n    isQuickFilterPresent,\n    getQuickFilter,\n    resetQuickFilter\n  },\n  dependantModules: [QuickFilterCoreModule]\n};\nvar QuickFilterModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/quick-filter\",\n  dependantModules: [QuickFilterCoreModule, QuickFilterApiModule]\n};\nvar FilterModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/filter\",\n  dependantModules: [SimpleFloatingFilterModule, ReadOnlyFloatingFilterModule, QuickFilterModule, ColumnFilterApiModule]\n};\n\n// community-modules/core/src/headerRendering/cells/abstractCell/abstractHeaderCellComp.ts\nvar AbstractHeaderCellComp = class extends Component {\n  constructor(template, ctrl) {\n    super(template);\n    this.ctrl = ctrl;\n  }\n  getCtrl() {\n    return this.ctrl;\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/floatingFilter/headerFilterCellComp.ts\nvar HeaderFilterCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super( /* html */\n    `<div class=\"ag-header-cell ag-floating-filter\" role=\"gridcell\">\n            <div data-ref=\"eFloatingFilterBody\" role=\"presentation\"></div>\n            <div class=\"ag-floating-filter-button ag-hidden\" data-ref=\"eButtonWrapper\" role=\"presentation\">\n                <button type=\"button\" class=\"ag-button ag-floating-filter-button-button\" data-ref=\"eButtonShowMainFilter\" tabindex=\"-1\"></button>\n            </div>\n        </div>`, ctrl);\n    this.eFloatingFilterBody = RefPlaceholder;\n    this.eButtonWrapper = RefPlaceholder;\n    this.eButtonShowMainFilter = RefPlaceholder;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      addOrRemoveBodyCssClass: (cssClassName, on) => this.eFloatingFilterBody.classList.toggle(cssClassName, on),\n      setButtonWrapperDisplayed: displayed => _setDisplayed(this.eButtonWrapper, displayed),\n      setCompDetails: compDetails => this.setCompDetails(compDetails),\n      getFloatingFilterComp: () => this.compPromise,\n      setWidth: width => eGui.style.width = width,\n      setMenuIcon: eIcon => this.eButtonShowMainFilter.appendChild(eIcon)\n    };\n    this.ctrl.setComp(compProxy, eGui, this.eButtonShowMainFilter, this.eFloatingFilterBody);\n  }\n  setCompDetails(compDetails) {\n    if (!compDetails) {\n      this.destroyFloatingFilterComp();\n      this.compPromise = null;\n      return;\n    }\n    this.compPromise = compDetails.newAgStackInstance();\n    this.compPromise.then(comp => this.afterCompCreated(comp));\n  }\n  destroy() {\n    this.destroyFloatingFilterComp();\n    super.destroy();\n  }\n  destroyFloatingFilterComp() {\n    if (this.floatingFilterComp) {\n      this.eFloatingFilterBody.removeChild(this.floatingFilterComp.getGui());\n      this.floatingFilterComp = this.destroyBean(this.floatingFilterComp);\n    }\n  }\n  afterCompCreated(comp) {\n    if (!comp) {\n      return;\n    }\n    if (!this.isAlive()) {\n      this.destroyBean(comp);\n      return;\n    }\n    this.destroyFloatingFilterComp();\n    this.floatingFilterComp = comp;\n    this.eFloatingFilterBody.appendChild(comp.getGui());\n    if (comp.afterGuiAttached) {\n      comp.afterGuiAttached();\n    }\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/headerCellComp.ts\nvar HeaderCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super( /* html */\n    `<div class=\"ag-header-cell\" role=\"columnheader\">\n            <div data-ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <div data-ref=\"eHeaderCompWrapper\" class=\"ag-header-cell-comp-wrapper\" role=\"presentation\"></div>\n        </div>`, ctrl);\n    this.eResize = RefPlaceholder;\n    this.eHeaderCompWrapper = RefPlaceholder;\n    this.headerCompVersion = 0;\n    this.column = ctrl.getColumnGroupChild();\n    this.pinned = ctrl.getPinned();\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const setAttribute = (name, value) => {\n      if (value != null && value != \"\") {\n        eGui.setAttribute(name, value);\n      } else {\n        eGui.removeAttribute(name);\n      }\n    };\n    setAttribute(\"col-id\", this.column.getColId());\n    const compProxy = {\n      setWidth: width => eGui.style.width = width,\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setAriaSort: sort => sort ? _setAriaSort(eGui, sort) : _removeAriaSort(eGui),\n      setUserCompDetails: compDetails => this.setUserCompDetails(compDetails),\n      getUserCompInstance: () => this.headerComp\n    };\n    this.ctrl.setComp(compProxy, this.getGui(), this.eResize, this.eHeaderCompWrapper);\n    const selectAllGui = this.ctrl.getSelectAllGui();\n    this.eResize.insertAdjacentElement(\"afterend\", selectAllGui);\n  }\n  destroy() {\n    this.destroyHeaderComp();\n    super.destroy();\n  }\n  destroyHeaderComp() {\n    if (this.headerComp) {\n      this.eHeaderCompWrapper.removeChild(this.headerCompGui);\n      this.headerComp = this.destroyBean(this.headerComp);\n      this.headerCompGui = void 0;\n    }\n  }\n  setUserCompDetails(compDetails) {\n    this.headerCompVersion++;\n    const versionCopy = this.headerCompVersion;\n    compDetails.newAgStackInstance().then(comp => this.afterCompCreated(versionCopy, comp));\n  }\n  afterCompCreated(version, headerComp) {\n    if (version != this.headerCompVersion || !this.isAlive()) {\n      this.destroyBean(headerComp);\n      return;\n    }\n    this.destroyHeaderComp();\n    this.headerComp = headerComp;\n    this.headerCompGui = headerComp.getGui();\n    this.eHeaderCompWrapper.appendChild(this.headerCompGui);\n    this.ctrl.setDragSource(this.getGui());\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/columnGroup/headerGroupCellComp.ts\nvar HeaderGroupCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super( /* html */\n    `<div class=\"ag-header-group-cell\" role=\"columnheader\">\n            <div data-ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n        </div>`, ctrl);\n    this.eResize = RefPlaceholder;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const setAttribute = (key, value) => value != void 0 ? eGui.setAttribute(key, value) : eGui.removeAttribute(key);\n    eGui.setAttribute(\"col-id\", this.ctrl.getColId());\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setResizableDisplayed: displayed => _setDisplayed(this.eResize, displayed),\n      setWidth: width => eGui.style.width = width,\n      setAriaExpanded: expanded => setAttribute(\"aria-expanded\", expanded),\n      setUserCompDetails: details => this.setUserCompDetails(details),\n      getUserCompInstance: () => this.headerGroupComp\n    };\n    this.ctrl.setComp(compProxy, eGui, this.eResize);\n  }\n  setUserCompDetails(details) {\n    details.newAgStackInstance().then(comp => this.afterHeaderCompCreated(comp));\n  }\n  afterHeaderCompCreated(headerGroupComp) {\n    const destroyFunc = () => this.destroyBean(headerGroupComp);\n    if (!this.isAlive()) {\n      destroyFunc();\n      return;\n    }\n    const eGui = this.getGui();\n    const eHeaderGroupGui = headerGroupComp.getGui();\n    eGui.appendChild(eHeaderGroupGui);\n    this.addDestroyFunc(destroyFunc);\n    this.headerGroupComp = headerGroupComp;\n    this.ctrl.setDragSource(eGui);\n  }\n};\n\n// community-modules/core/src/headerRendering/row/headerRowComp.ts\nvar HeaderRowType = /* @__PURE__ */(HeaderRowType2 => {\n  HeaderRowType2[\"COLUMN_GROUP\"] = \"group\";\n  HeaderRowType2[\"COLUMN\"] = \"column\";\n  HeaderRowType2[\"FLOATING_FILTER\"] = \"filter\";\n  return HeaderRowType2;\n})(HeaderRowType || {});\nvar HeaderRowComp = class extends Component {\n  constructor(ctrl) {\n    super();\n    this.headerComps = {};\n    this.ctrl = ctrl;\n    this.setTemplate( /* html */\n    `<div class=\"${this.ctrl.getHeaderRowClass()}\" role=\"row\"></div>`);\n  }\n  postConstruct() {\n    _setAriaRowIndex(this.getGui(), this.ctrl.getAriaRowIndex());\n    const compProxy = {\n      setHeight: height => this.getGui().style.height = height,\n      setTop: top => this.getGui().style.top = top,\n      setHeaderCtrls: (ctrls, forceOrder) => this.setHeaderCtrls(ctrls, forceOrder),\n      setWidth: width => this.getGui().style.width = width\n    };\n    this.ctrl.setComp(compProxy);\n  }\n  destroy() {\n    this.setHeaderCtrls([], false);\n    super.destroy();\n  }\n  setHeaderCtrls(ctrls, forceOrder) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const oldComps = this.headerComps;\n    this.headerComps = {};\n    ctrls.forEach(ctrl => {\n      const id = ctrl.getInstanceId();\n      let comp = oldComps[id];\n      delete oldComps[id];\n      if (comp == null) {\n        comp = this.createHeaderComp(ctrl);\n        this.getGui().appendChild(comp.getGui());\n      }\n      this.headerComps[id] = comp;\n    });\n    _iterateObject(oldComps, (id, comp) => {\n      this.getGui().removeChild(comp.getGui());\n      this.destroyBean(comp);\n    });\n    if (forceOrder) {\n      const comps = _getAllValuesInObject(this.headerComps);\n      comps.sort((a, b) => {\n        const leftA = a.getCtrl().getColumnGroupChild().getLeft();\n        const leftB = b.getCtrl().getColumnGroupChild().getLeft();\n        return leftA - leftB;\n      });\n      const elementsInOrder = comps.map(c => c.getGui());\n      _setDomChildOrder(this.getGui(), elementsInOrder);\n    }\n  }\n  createHeaderComp(headerCtrl) {\n    let result;\n    switch (this.ctrl.getType()) {\n      case \"group\" /* COLUMN_GROUP */:\n        result = new HeaderGroupCellComp(headerCtrl);\n        break;\n      case \"filter\" /* FLOATING_FILTER */:\n        result = new HeaderFilterCellComp(headerCtrl);\n        break;\n      default:\n        result = new HeaderCellComp(headerCtrl);\n        break;\n    }\n    this.createBean(result);\n    result.setParentComponent(this);\n    return result;\n  }\n};\n\n// community-modules/core/src/headerRendering/common/headerNavigationService.ts\nvar HeaderNavigationDirection = /* @__PURE__ */(HeaderNavigationDirection2 => {\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"UP\"] = 0] = \"UP\";\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"DOWN\"] = 1] = \"DOWN\";\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"LEFT\"] = 2] = \"LEFT\";\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"RIGHT\"] = 3] = \"RIGHT\";\n  return HeaderNavigationDirection2;\n})(HeaderNavigationDirection || {});\nvar HeaderNavigationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"headerNavigationService\";\n    this.currentHeaderRowWithoutSpan = -1;\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n    this.headerPositionUtils = beans.headerPositionUtils;\n    this.ctrlsService = beans.ctrlsService;\n    this.columnModel = beans.columnModel;\n    this.visibleColService = beans.visibleColsService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady(p => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n    const eDocument = this.gos.getDocument();\n    this.addManagedElementListeners(eDocument, {\n      mousedown: () => this.setCurrentHeaderRowWithoutSpan(-1)\n    });\n  }\n  getHeaderRowCount() {\n    const centerHeaderContainer = this.ctrlsService.getHeaderRowContainerCtrl();\n    return centerHeaderContainer ? centerHeaderContainer.getRowCount() : 0;\n  }\n  getHeaderPositionForColumn(colKey, floatingFilter) {\n    let column;\n    if (typeof colKey === \"string\") {\n      column = this.columnModel.getCol(colKey);\n      if (!column) {\n        column = this.visibleColService.getColumnGroup(colKey);\n      }\n    } else {\n      column = colKey;\n    }\n    if (!column) {\n      return null;\n    }\n    const centerHeaderContainer = this.ctrlsService.getHeaderRowContainerCtrl();\n    const allCtrls = centerHeaderContainer.getAllCtrls();\n    const isFloatingFilterVisible = _last(allCtrls).getType() === \"filter\" /* FLOATING_FILTER */;\n    const headerRowCount = this.getHeaderRowCount() - 1;\n    let row = -1;\n    let col = column;\n    while (col) {\n      row++;\n      col = col.getParent();\n    }\n    let headerRowIndex = row;\n    if (floatingFilter && isFloatingFilterVisible && headerRowIndex === headerRowCount - 1) {\n      headerRowIndex++;\n    }\n    return headerRowIndex === -1 ? null : {\n      headerRowIndex,\n      column\n    };\n  }\n  /*\n   * This method navigates grid header vertically\n   * @return {boolean} true to preventDefault on the event that caused this navigation.\n   */\n  navigateVertically(direction, fromHeader, event) {\n    if (!fromHeader) {\n      fromHeader = this.focusService.getFocusedHeader();\n    }\n    if (!fromHeader) {\n      return false;\n    }\n    const {\n      headerRowIndex\n    } = fromHeader;\n    const column = fromHeader.column;\n    const rowLen = this.getHeaderRowCount();\n    const isUp = direction === 0 /* UP */;\n    let {\n      headerRowIndex: nextRow,\n      column: nextFocusColumn,\n      // eslint-disable-next-line prefer-const\n      headerRowIndexWithoutSpan\n    } = isUp ? this.headerPositionUtils.getColumnVisibleParent(column, headerRowIndex) : this.headerPositionUtils.getColumnVisibleChild(column, headerRowIndex);\n    let skipColumn = false;\n    if (nextRow < 0) {\n      nextRow = 0;\n      nextFocusColumn = column;\n      skipColumn = true;\n    }\n    if (nextRow >= rowLen) {\n      nextRow = -1;\n      this.setCurrentHeaderRowWithoutSpan(-1);\n    } else if (headerRowIndexWithoutSpan !== void 0) {\n      this.currentHeaderRowWithoutSpan = headerRowIndexWithoutSpan;\n    }\n    if (!skipColumn && !nextFocusColumn) {\n      return false;\n    }\n    return this.focusService.focusHeaderPosition({\n      headerPosition: {\n        headerRowIndex: nextRow,\n        column: nextFocusColumn\n      },\n      allowUserOverride: true,\n      event\n    });\n  }\n  setCurrentHeaderRowWithoutSpan(row) {\n    this.currentHeaderRowWithoutSpan = row;\n  }\n  /*\n   * This method navigates grid header horizontally\n   * @return {boolean} true to preventDefault on the event that caused this navigation.\n   */\n  navigateHorizontally(direction, fromTab = false, event) {\n    const focusedHeader = this.focusService.getFocusedHeader();\n    const isLeft = direction === 2 /* LEFT */;\n    const isRtl = this.gos.get(\"enableRtl\");\n    let nextHeader;\n    let normalisedDirection;\n    if (this.currentHeaderRowWithoutSpan !== -1) {\n      focusedHeader.headerRowIndex = this.currentHeaderRowWithoutSpan;\n    } else {\n      this.currentHeaderRowWithoutSpan = focusedHeader.headerRowIndex;\n    }\n    if (isLeft !== isRtl) {\n      normalisedDirection = \"Before\";\n      nextHeader = this.headerPositionUtils.findHeader(focusedHeader, normalisedDirection);\n    } else {\n      normalisedDirection = \"After\";\n      nextHeader = this.headerPositionUtils.findHeader(focusedHeader, normalisedDirection);\n    }\n    if (nextHeader || !fromTab) {\n      return this.focusService.focusHeaderPosition({\n        headerPosition: nextHeader,\n        direction: normalisedDirection,\n        fromTab,\n        allowUserOverride: true,\n        event\n      });\n    } else if (fromTab) {\n      const userFunc = this.gos.getCallback(\"tabToNextHeader\");\n      if (userFunc) {\n        return this.focusService.focusHeaderPositionFromUserFunc({\n          userFunc,\n          headerPosition: nextHeader,\n          direction: normalisedDirection\n        });\n      }\n    }\n    return this.focusNextHeaderRow(focusedHeader, normalisedDirection, event);\n  }\n  focusNextHeaderRow(focusedHeader, direction, event) {\n    const currentIndex = focusedHeader.headerRowIndex;\n    let nextPosition = null;\n    let nextRowIndex;\n    if (direction === \"Before\") {\n      if (currentIndex > 0) {\n        nextRowIndex = currentIndex - 1;\n        this.currentHeaderRowWithoutSpan -= 1;\n        nextPosition = this.headerPositionUtils.findColAtEdgeForHeaderRow(nextRowIndex, \"end\");\n      }\n    } else {\n      nextRowIndex = currentIndex + 1;\n      if (this.currentHeaderRowWithoutSpan < this.getHeaderRowCount()) {\n        this.currentHeaderRowWithoutSpan += 1;\n      } else {\n        this.setCurrentHeaderRowWithoutSpan(-1);\n      }\n      nextPosition = this.headerPositionUtils.findColAtEdgeForHeaderRow(nextRowIndex, \"start\");\n    }\n    if (!nextPosition) {\n      return false;\n    }\n    const {\n      column,\n      headerRowIndex\n    } = this.headerPositionUtils.getHeaderIndexToFocus(nextPosition.column, nextPosition?.headerRowIndex);\n    return this.focusService.focusHeaderPosition({\n      headerPosition: {\n        column,\n        headerRowIndex\n      },\n      direction,\n      fromTab: true,\n      allowUserOverride: true,\n      event\n    });\n  }\n  scrollToColumn(column, direction = \"After\") {\n    if (column.getPinned()) {\n      return;\n    }\n    let columnToScrollTo;\n    if (isColumnGroup(column)) {\n      const columns = column.getDisplayedLeafColumns();\n      columnToScrollTo = direction === \"Before\" ? _last(columns) : columns[0];\n    } else {\n      columnToScrollTo = column;\n    }\n    this.gridBodyCon.getScrollFeature().ensureColumnVisible(columnToScrollTo);\n  }\n};\n\n// community-modules/core/src/headerRendering/gridHeaderCtrl.ts\nvar GridHeaderCtrl = class extends BeanStub {\n  wireBeans(beans) {\n    this.headerNavigationService = beans.headerNavigationService;\n    this.focusService = beans.focusService;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.ctrlsService = beans.ctrlsService;\n    this.filterManager = beans.filterManager;\n    this.menuService = beans.menuService;\n  }\n  setComp(comp, eGui, eFocusableElement) {\n    this.comp = comp;\n    this.eGui = eGui;\n    this.createManagedBean(new ManagedFocusFeature(eFocusableElement, {\n      onTabKeyDown: this.onTabKeyDown.bind(this),\n      handleKeyDown: this.handleKeyDown.bind(this),\n      onFocusOut: this.onFocusOut.bind(this)\n    }));\n    this.addManagedEventListeners({\n      columnPivotModeChanged: this.onPivotModeChanged.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this)\n    });\n    this.onPivotModeChanged();\n    this.setupHeaderHeight();\n    const listener = this.onHeaderContextMenu.bind(this);\n    this.addManagedElementListeners(this.eGui, {\n      contextmenu: listener\n    });\n    this.mockContextMenuForIPad(listener);\n    this.ctrlsService.register(\"gridHeaderCtrl\", this);\n  }\n  setupHeaderHeight() {\n    const listener = this.setHeaderHeight.bind(this);\n    listener();\n    this.addManagedPropertyListener(\"headerHeight\", listener);\n    this.addManagedPropertyListener(\"pivotHeaderHeight\", listener);\n    this.addManagedPropertyListener(\"groupHeaderHeight\", listener);\n    this.addManagedPropertyListener(\"pivotGroupHeaderHeight\", listener);\n    this.addManagedPropertyListener(\"floatingFiltersHeight\", listener);\n    this.addManagedEventListeners({\n      displayedColumnsChanged: listener,\n      columnHeaderHeightChanged: listener,\n      gridStylesChanged: listener,\n      advancedFilterEnabledChanged: listener\n    });\n  }\n  getHeaderHeight() {\n    return this.headerHeight;\n  }\n  setHeaderHeight() {\n    const {\n      columnModel\n    } = this;\n    let numberOfFloating = 0;\n    let headerRowCount = columnModel.getHeaderRowCount();\n    let totalHeaderHeight;\n    const hasFloatingFilters = this.filterManager?.hasFloatingFilters();\n    if (hasFloatingFilters) {\n      headerRowCount++;\n      numberOfFloating = 1;\n    }\n    const groupHeight = this.columnModel.getColumnGroupHeaderRowHeight();\n    const headerHeight = this.columnModel.getColumnHeaderRowHeight();\n    const numberOfNonGroups = 1 + numberOfFloating;\n    const numberOfGroups = headerRowCount - numberOfNonGroups;\n    totalHeaderHeight = numberOfFloating * columnModel.getFloatingFiltersHeight();\n    totalHeaderHeight += numberOfGroups * groupHeight;\n    totalHeaderHeight += headerHeight;\n    if (this.headerHeight === totalHeaderHeight) {\n      return;\n    }\n    this.headerHeight = totalHeaderHeight;\n    const px = `${totalHeaderHeight + 1}px`;\n    this.comp.setHeightAndMinHeight(px);\n    this.eventService.dispatchEvent({\n      type: \"headerHeightChanged\"\n    });\n  }\n  onPivotModeChanged() {\n    const pivotMode = this.columnModel.isPivotMode();\n    this.comp.addOrRemoveCssClass(\"ag-pivot-on\", pivotMode);\n    this.comp.addOrRemoveCssClass(\"ag-pivot-off\", !pivotMode);\n  }\n  onDisplayedColumnsChanged() {\n    const columns = this.visibleColsService.getAllCols();\n    const shouldAllowOverflow = columns.some(col => col.isSpanHeaderHeight());\n    this.comp.addOrRemoveCssClass(\"ag-header-allow-overflow\", shouldAllowOverflow);\n  }\n  onTabKeyDown(e) {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const direction = e.shiftKey !== isRtl ? 2 /* LEFT */ : 3 /* RIGHT */;\n    if (this.headerNavigationService.navigateHorizontally(direction, true, e) || this.focusService.focusNextGridCoreContainer(e.shiftKey)) {\n      e.preventDefault();\n    }\n  }\n  handleKeyDown(e) {\n    let direction = null;\n    switch (e.key) {\n      case KeyCode.LEFT:\n        direction = 2 /* LEFT */;\n      case KeyCode.RIGHT:\n        {\n          if (!_exists(direction)) {\n            direction = 3 /* RIGHT */;\n          }\n          this.headerNavigationService.navigateHorizontally(direction, false, e);\n          break;\n        }\n      case KeyCode.UP:\n        direction = 0 /* UP */;\n      case KeyCode.DOWN:\n        {\n          if (!_exists(direction)) {\n            direction = 1 /* DOWN */;\n          }\n          if (this.headerNavigationService.navigateVertically(direction, null, e)) {\n            e.preventDefault();\n          }\n          break;\n        }\n      default:\n        return;\n    }\n  }\n  onFocusOut(e) {\n    const {\n      relatedTarget\n    } = e;\n    if (!relatedTarget && this.eGui.contains(this.gos.getActiveDomElement())) {\n      return;\n    }\n    if (!this.eGui.contains(relatedTarget)) {\n      this.focusService.clearFocusedHeader();\n    }\n  }\n  onHeaderContextMenu(mouseEvent, touch, touchEvent) {\n    if (!mouseEvent && !touchEvent || !this.menuService.isHeaderContextMenuEnabled()) {\n      return;\n    }\n    const {\n      target\n    } = mouseEvent ?? touch;\n    if (target === this.eGui || target === this.ctrlsService.getHeaderRowContainerCtrl().getViewport()) {\n      this.menuService.showHeaderContextMenu(void 0, mouseEvent, touchEvent);\n    }\n  }\n  mockContextMenuForIPad(listener) {\n    if (!_isIOSUserAgent()) {\n      return;\n    }\n    const touchListener = new TouchListener(this.eGui);\n    const longTapListener = event => {\n      listener(void 0, event.touchStart, event.touchEvent);\n    };\n    this.addManagedListeners(touchListener, {\n      longTap: longTapListener\n    });\n    this.addDestroyFunc(() => touchListener.destroy());\n  }\n};\n\n// community-modules/core/src/gridBodyComp/centerWidthFeature.ts\nvar CenterWidthFeature = class extends BeanStub {\n  constructor(callback, addSpacer = false) {\n    super();\n    this.callback = callback;\n    this.addSpacer = addSpacer;\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n  }\n  postConstruct() {\n    const listener = this.setWidth.bind(this);\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    this.addManagedEventListeners({\n      columnContainerWidthChanged: listener,\n      displayedColumnsChanged: listener,\n      leftPinnedWidthChanged: listener\n    });\n    if (this.addSpacer) {\n      this.addManagedEventListeners({\n        rightPinnedWidthChanged: listener,\n        scrollVisibilityChanged: listener,\n        scrollbarWidthChanged: listener\n      });\n    }\n    this.setWidth();\n  }\n  setWidth() {\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const centerWidth = this.visibleColsService.getBodyContainerWidth();\n    const leftWidth = this.visibleColsService.getColsLeftWidth();\n    const rightWidth = this.visibleColsService.getDisplayedColumnsRightWidth();\n    let totalWidth;\n    if (printLayout) {\n      totalWidth = centerWidth + leftWidth + rightWidth;\n    } else {\n      totalWidth = centerWidth;\n      if (this.addSpacer) {\n        const relevantWidth = this.gos.get(\"enableRtl\") ? leftWidth : rightWidth;\n        if (relevantWidth === 0 && this.scrollVisibleService.isVerticalScrollShowing()) {\n          totalWidth += this.gos.getScrollbarWidth();\n        }\n      }\n    }\n    this.callback(totalWidth);\n  }\n};\n\n// community-modules/core/src/headerRendering/columnDrag/bodyDropPivotTarget.ts\nvar BodyDropPivotTarget = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.columnsToAggregate = [];\n    this.columnsToGroup = [];\n    this.columnsToPivot = [];\n    this.pinned = pinned;\n  }\n  wireBeans(beans) {\n    this.funcColsService = beans.funcColsService;\n  }\n  /** Callback for when drag enters */\n  onDragEnter(draggingEvent) {\n    this.clearColumnsList();\n    if (this.gos.get(\"functionsReadOnly\")) {\n      return;\n    }\n    const dragColumns = draggingEvent.dragItem.columns;\n    if (!dragColumns) {\n      return;\n    }\n    dragColumns.forEach(column => {\n      if (!column.isPrimary()) {\n        return;\n      }\n      if (column.isAnyFunctionActive()) {\n        return;\n      }\n      if (column.isAllowValue()) {\n        this.columnsToAggregate.push(column);\n      } else if (column.isAllowRowGroup()) {\n        this.columnsToGroup.push(column);\n      } else if (column.isAllowPivot()) {\n        this.columnsToPivot.push(column);\n      }\n    });\n  }\n  getIconName() {\n    const totalColumns = this.columnsToAggregate.length + this.columnsToGroup.length + this.columnsToPivot.length;\n    if (totalColumns > 0) {\n      return this.pinned ? \"pinned\" : \"move\";\n    }\n    return null;\n  }\n  /** Callback for when drag leaves */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragLeave(draggingEvent) {\n    this.clearColumnsList();\n  }\n  clearColumnsList() {\n    this.columnsToAggregate.length = 0;\n    this.columnsToGroup.length = 0;\n    this.columnsToPivot.length = 0;\n  }\n  /** Callback for when dragging */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragging(draggingEvent) {}\n  /** Callback for when drag stops */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragStop(draggingEvent) {\n    if (this.columnsToAggregate.length > 0) {\n      this.funcColsService.addValueColumns(this.columnsToAggregate, \"toolPanelDragAndDrop\");\n    }\n    if (this.columnsToGroup.length > 0) {\n      this.funcColsService.addRowGroupColumns(this.columnsToGroup, \"toolPanelDragAndDrop\");\n    }\n    if (this.columnsToPivot.length > 0) {\n      this.funcColsService.addPivotColumns(this.columnsToPivot, \"toolPanelDragAndDrop\");\n    }\n  }\n};\n\n// community-modules/core/src/headerRendering/columnMoveHelper.ts\nfunction attemptMoveColumns(params) {\n  const {\n    isFromHeader,\n    hDirection,\n    xPosition,\n    fromEnter,\n    fakeEvent,\n    pinned,\n    gos,\n    columnModel,\n    columnMoveService,\n    presentedColsService\n  } = params;\n  const draggingLeft = hDirection === 0 /* Left */;\n  const draggingRight = hDirection === 1 /* Right */;\n  let {\n    allMovingColumns\n  } = params;\n  if (isFromHeader) {\n    const newCols = [];\n    allMovingColumns.forEach(col => {\n      let movingGroup = null;\n      let parent = col.getParent();\n      while (parent != null && parent.getDisplayedLeafColumns().length === 1) {\n        movingGroup = parent;\n        parent = parent.getParent();\n      }\n      if (movingGroup != null) {\n        const isMarryChildren = !!movingGroup.getColGroupDef()?.marryChildren;\n        const columnsToMove = isMarryChildren ?\n        // when marry children is true, we also have to move hidden\n        // columns within the group, so grab them from the `providedColumnGroup`\n        movingGroup.getProvidedColumnGroup().getLeafColumns() : movingGroup.getLeafColumns();\n        columnsToMove.forEach(newCol => {\n          if (!newCols.includes(newCol)) {\n            newCols.push(newCol);\n          }\n        });\n      } else if (!newCols.includes(col)) {\n        newCols.push(col);\n      }\n    });\n    allMovingColumns = newCols;\n  }\n  const allMovingColumnsOrdered = allMovingColumns.slice();\n  columnModel.sortColsLikeCols(allMovingColumnsOrdered);\n  const validMoves = calculateValidMoves({\n    movingCols: allMovingColumnsOrdered,\n    draggingRight,\n    xPosition,\n    pinned,\n    gos,\n    columnModel,\n    presentedColsService\n  });\n  const oldIndex = calculateOldIndex(allMovingColumnsOrdered, columnModel);\n  if (validMoves.length === 0) {\n    return;\n  }\n  const firstValidMove = validMoves[0];\n  let constrainDirection = oldIndex !== null && !fromEnter;\n  if (isFromHeader) {\n    constrainDirection = oldIndex !== null;\n  }\n  if (constrainDirection && !fakeEvent) {\n    if (draggingLeft && firstValidMove >= oldIndex) {\n      return;\n    }\n    if (draggingRight && firstValidMove <= oldIndex) {\n      return;\n    }\n  }\n  const displayedCols = presentedColsService.getAllCols();\n  const potentialMoves = [];\n  let targetOrder = null;\n  for (let i = 0; i < validMoves.length; i++) {\n    const move = validMoves[i];\n    const order = columnMoveService.getProposedColumnOrder(allMovingColumnsOrdered, move);\n    if (!columnMoveService.doesOrderPassRules(order)) {\n      continue;\n    }\n    const displayedOrder = order.filter(col => displayedCols.includes(col));\n    if (targetOrder === null) {\n      targetOrder = displayedOrder;\n    } else if (!_areEqual(displayedOrder, targetOrder)) {\n      break;\n    }\n    const fragCount = groupFragCount(order);\n    potentialMoves.push({\n      move,\n      fragCount\n    });\n  }\n  if (potentialMoves.length === 0) {\n    return;\n  }\n  potentialMoves.sort((a, b) => a.fragCount - b.fragCount);\n  return moveColumns(allMovingColumns, potentialMoves[0].move, \"uiColumnMoved\", false, columnMoveService);\n}\nfunction moveColumns(columns, toIndex, source, finished, columnMoveService) {\n  columnMoveService.moveColumns(columns, toIndex, source, finished);\n  return finished ? null : {\n    columns,\n    toIndex\n  };\n}\nfunction calculateOldIndex(movingCols, columnModel) {\n  const gridCols = columnModel.getCols();\n  const indexes = _sortNumerically(movingCols.map(col => gridCols.indexOf(col)));\n  const firstIndex = indexes[0];\n  const lastIndex = _last(indexes);\n  const spread = lastIndex - firstIndex;\n  const gapsExist = spread !== indexes.length - 1;\n  return gapsExist ? null : firstIndex;\n}\nfunction groupFragCount(columns) {\n  function parents(col) {\n    const result = [];\n    let parent = col.getOriginalParent();\n    while (parent != null) {\n      result.push(parent);\n      parent = parent.getOriginalParent();\n    }\n    return result;\n  }\n  let count = 0;\n  for (let i = 0; i < columns.length - 1; i++) {\n    let a = parents(columns[i]);\n    let b = parents(columns[i + 1]);\n    [a, b] = a.length > b.length ? [a, b] : [b, a];\n    a.forEach(parent => {\n      if (b.indexOf(parent) === -1) {\n        count++;\n      }\n    });\n  }\n  return count;\n}\nfunction getDisplayedColumns(presentedColsService, type) {\n  switch (type) {\n    case \"left\":\n      return presentedColsService.getLeftCols();\n    case \"right\":\n      return presentedColsService.getRightCols();\n    default:\n      return presentedColsService.getCenterCols();\n  }\n}\nfunction calculateValidMoves(params) {\n  const {\n    movingCols,\n    draggingRight,\n    xPosition,\n    pinned,\n    gos,\n    columnModel,\n    presentedColsService\n  } = params;\n  const isMoveBlocked = gos.get(\"suppressMovableColumns\") || movingCols.some(col => col.getColDef().suppressMovable);\n  if (isMoveBlocked) {\n    return [];\n  }\n  const allDisplayedCols = getDisplayedColumns(presentedColsService, pinned);\n  const allGridCols = columnModel.getCols();\n  const movingDisplayedCols = allDisplayedCols.filter(col => _includes(movingCols, col));\n  const otherDisplayedCols = allDisplayedCols.filter(col => !_includes(movingCols, col));\n  const otherGridCols = allGridCols.filter(col => !_includes(movingCols, col));\n  let displayIndex = 0;\n  let availableWidth = xPosition;\n  if (draggingRight) {\n    let widthOfMovingDisplayedCols = 0;\n    movingDisplayedCols.forEach(col => widthOfMovingDisplayedCols += col.getActualWidth());\n    availableWidth -= widthOfMovingDisplayedCols;\n  }\n  if (availableWidth > 0) {\n    for (let i = 0; i < otherDisplayedCols.length; i++) {\n      const col = otherDisplayedCols[i];\n      availableWidth -= col.getActualWidth();\n      if (availableWidth < 0) {\n        break;\n      }\n      displayIndex++;\n    }\n    if (draggingRight) {\n      displayIndex++;\n    }\n  }\n  let firstValidMove;\n  if (displayIndex > 0) {\n    const leftColumn = otherDisplayedCols[displayIndex - 1];\n    firstValidMove = otherGridCols.indexOf(leftColumn) + 1;\n  } else {\n    firstValidMove = otherGridCols.indexOf(otherDisplayedCols[0]);\n    if (firstValidMove === -1) {\n      firstValidMove = 0;\n    }\n  }\n  const validMoves = [firstValidMove];\n  const numberComparator = (a, b) => a - b;\n  if (draggingRight) {\n    let pointer = firstValidMove + 1;\n    const lastIndex = allGridCols.length - 1;\n    while (pointer <= lastIndex) {\n      validMoves.push(pointer);\n      pointer++;\n    }\n    validMoves.sort(numberComparator);\n  } else {\n    let pointer = firstValidMove;\n    const lastIndex = allGridCols.length - 1;\n    let displacedCol = allGridCols[pointer];\n    while (pointer <= lastIndex && allDisplayedCols.indexOf(displacedCol) < 0) {\n      pointer++;\n      validMoves.push(pointer);\n      displacedCol = allGridCols[pointer];\n    }\n    pointer = firstValidMove - 1;\n    const firstDisplayIndex = 0;\n    while (pointer >= firstDisplayIndex) {\n      validMoves.push(pointer);\n      pointer--;\n    }\n    validMoves.sort(numberComparator).reverse();\n  }\n  return validMoves;\n}\nfunction normaliseX(x, pinned, fromKeyboard, gos, ctrlsService) {\n  const eViewport = ctrlsService.getHeaderRowContainerCtrl(pinned).getViewport();\n  if (fromKeyboard) {\n    x -= eViewport.getBoundingClientRect().left;\n  }\n  if (gos.get(\"enableRtl\")) {\n    const clientWidth = eViewport.clientWidth;\n    x = clientWidth - x;\n  }\n  if (pinned == null) {\n    x += ctrlsService.get(\"center\").getCenterViewportScrollLeft();\n  }\n  return x;\n}\n\n// community-modules/core/src/headerRendering/columnDrag/moveColumnFeature.ts\nvar MoveColumnFeature = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.needToMoveLeft = false;\n    this.needToMoveRight = false;\n    this.lastMovedInfo = null;\n    this.pinned = pinned;\n    this.isCenterContainer = !_exists(pinned);\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnMoveService = beans.columnMoveService;\n    this.dragAndDropService = beans.dragAndDropService;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady(p => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n  }\n  getIconName() {\n    return this.pinned ? \"pinned\" : \"move\";\n  }\n  onDragEnter(draggingEvent) {\n    const columns = draggingEvent.dragItem.columns;\n    const dragCameFromToolPanel = draggingEvent.dragSource.type === 0 /* ToolPanel */;\n    if (dragCameFromToolPanel) {\n      this.setColumnsVisible(columns, true, \"uiColumnDragged\");\n    } else {\n      const visibleState = draggingEvent.dragItem.visibleState;\n      const visibleColumns = (columns || []).filter(column => visibleState[column.getId()]);\n      this.setColumnsVisible(visibleColumns, true, \"uiColumnDragged\");\n    }\n    this.setColumnsPinned(columns, this.pinned, \"uiColumnDragged\");\n    this.onDragging(draggingEvent, true, true);\n  }\n  onDragLeave() {\n    this.ensureIntervalCleared();\n    this.lastMovedInfo = null;\n  }\n  setColumnsVisible(columns, visible, source) {\n    if (columns) {\n      const allowedCols = columns.filter(c => !c.getColDef().lockVisible);\n      this.columnModel.setColsVisible(allowedCols, visible, source);\n    }\n  }\n  setColumnsPinned(columns, pinned, source) {\n    if (columns) {\n      const allowedCols = columns.filter(c => !c.getColDef().lockPinned);\n      this.columnModel.setColsPinned(allowedCols, pinned, source);\n    }\n  }\n  onDragStop() {\n    this.onDragging(this.lastDraggingEvent, false, true, true);\n    this.ensureIntervalCleared();\n    this.lastMovedInfo = null;\n  }\n  checkCenterForScrolling(xAdjustedForScroll) {\n    if (this.isCenterContainer) {\n      const centerCtrl = this.ctrlsService.get(\"center\");\n      const firstVisiblePixel = centerCtrl.getCenterViewportScrollLeft();\n      const lastVisiblePixel = firstVisiblePixel + centerCtrl.getCenterWidth();\n      if (this.gos.get(\"enableRtl\")) {\n        this.needToMoveRight = xAdjustedForScroll < firstVisiblePixel + 50;\n        this.needToMoveLeft = xAdjustedForScroll > lastVisiblePixel - 50;\n      } else {\n        this.needToMoveLeft = xAdjustedForScroll < firstVisiblePixel + 50;\n        this.needToMoveRight = xAdjustedForScroll > lastVisiblePixel - 50;\n      }\n      if (this.needToMoveLeft || this.needToMoveRight) {\n        this.ensureIntervalStarted();\n      } else {\n        this.ensureIntervalCleared();\n      }\n    }\n  }\n  onDragging(draggingEvent = this.lastDraggingEvent, fromEnter = false, fakeEvent = false, finished = false) {\n    if (finished) {\n      if (this.lastMovedInfo) {\n        const {\n          columns,\n          toIndex\n        } = this.lastMovedInfo;\n        moveColumns(columns, toIndex, \"uiColumnMoved\", true, this.columnMoveService);\n      }\n      return;\n    }\n    this.lastDraggingEvent = draggingEvent;\n    if (_missing(draggingEvent.hDirection)) {\n      return;\n    }\n    const mouseX = normaliseX(draggingEvent.x, this.pinned, false, this.gos, this.ctrlsService);\n    if (!fromEnter) {\n      this.checkCenterForScrolling(mouseX);\n    }\n    const hDirection = this.normaliseDirection(draggingEvent.hDirection);\n    const dragSourceType = draggingEvent.dragSource.type;\n    const allMovingColumns = draggingEvent.dragSource.getDragItem().columns?.filter(col => {\n      if (col.getColDef().lockPinned) {\n        return col.getPinned() == this.pinned;\n      }\n      return true;\n    }) || [];\n    const lastMovedInfo = attemptMoveColumns({\n      allMovingColumns,\n      isFromHeader: dragSourceType === 1 /* HeaderCell */,\n      hDirection,\n      xPosition: mouseX,\n      pinned: this.pinned,\n      fromEnter,\n      fakeEvent,\n      gos: this.gos,\n      columnModel: this.columnModel,\n      columnMoveService: this.columnMoveService,\n      presentedColsService: this.visibleColsService\n    });\n    if (lastMovedInfo) {\n      this.lastMovedInfo = lastMovedInfo;\n    }\n  }\n  normaliseDirection(hDirection) {\n    if (this.gos.get(\"enableRtl\")) {\n      switch (hDirection) {\n        case 0 /* Left */:\n          return 1 /* Right */;\n        case 1 /* Right */:\n          return 0 /* Left */;\n        default:\n          _errorOnce(`Unknown direction ${hDirection}`);\n      }\n    } else {\n      return hDirection;\n    }\n  }\n  ensureIntervalStarted() {\n    if (!this.movingIntervalId) {\n      this.intervalCount = 0;\n      this.failedMoveAttempts = 0;\n      this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), 100);\n      this.dragAndDropService.setGhostIcon(this.needToMoveLeft ? \"left\" : \"right\", true);\n    }\n  }\n  ensureIntervalCleared() {\n    if (this.movingIntervalId) {\n      window.clearInterval(this.movingIntervalId);\n      this.movingIntervalId = null;\n      this.dragAndDropService.setGhostIcon(\"move\");\n    }\n  }\n  moveInterval() {\n    let pixelsToMove;\n    this.intervalCount++;\n    pixelsToMove = 10 + this.intervalCount * 5;\n    if (pixelsToMove > 100) {\n      pixelsToMove = 100;\n    }\n    let pixelsMoved = null;\n    const scrollFeature = this.gridBodyCon.getScrollFeature();\n    if (this.needToMoveLeft) {\n      pixelsMoved = scrollFeature.scrollHorizontally(-pixelsToMove);\n    } else if (this.needToMoveRight) {\n      pixelsMoved = scrollFeature.scrollHorizontally(pixelsToMove);\n    }\n    if (pixelsMoved !== 0) {\n      this.onDragging(this.lastDraggingEvent);\n      this.failedMoveAttempts = 0;\n    } else {\n      this.failedMoveAttempts++;\n      const columns = this.lastDraggingEvent.dragItem.columns;\n      const columnsThatCanPin = columns.filter(c => !c.getColDef().lockPinned);\n      if (columnsThatCanPin.length > 0) {\n        this.dragAndDropService.setGhostIcon(\"pinned\");\n        if (this.failedMoveAttempts > 7) {\n          const pinType = this.needToMoveLeft ? \"left\" : \"right\";\n          this.setColumnsPinned(columnsThatCanPin, pinType, \"uiColumnDragged\");\n          this.dragAndDropService.nudge();\n        }\n      }\n    }\n  }\n};\n\n// community-modules/core/src/headerRendering/columnDrag/bodyDropTarget.ts\nvar BodyDropTarget = class extends BeanStub {\n  wireBeans(beans) {\n    this.dragAndDropService = beans.dragAndDropService;\n    this.columnModel = beans.columnModel;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  constructor(pinned, eContainer) {\n    super();\n    this.pinned = pinned;\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady(p => {\n      switch (this.pinned) {\n        case \"left\":\n          this.eSecondaryContainers = [[p.gridBodyCtrl.getBodyViewportElement(), p.left.getContainerElement()], [p.bottomLeft.getContainerElement()], [p.topLeft.getContainerElement()]];\n          break;\n        case \"right\":\n          this.eSecondaryContainers = [[p.gridBodyCtrl.getBodyViewportElement(), p.right.getContainerElement()], [p.bottomRight.getContainerElement()], [p.topRight.getContainerElement()]];\n          break;\n        default:\n          this.eSecondaryContainers = [[p.gridBodyCtrl.getBodyViewportElement(), p.center.getViewportElement()], [p.bottomCenter.getViewportElement()], [p.topCenter.getViewportElement()]];\n          break;\n      }\n    });\n    this.moveColumnFeature = this.createManagedBean(new MoveColumnFeature(this.pinned));\n    this.bodyDropPivotTarget = this.createManagedBean(new BodyDropPivotTarget(this.pinned));\n    this.dragAndDropService.addDropTarget(this);\n  }\n  isInterestedIn(type) {\n    return type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */ && this.gos.get(\"allowDragFromColumnsToolPanel\");\n  }\n  getSecondaryContainers() {\n    return this.eSecondaryContainers;\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  getIconName() {\n    return this.currentDropListener.getIconName();\n  }\n  // we want to use the bodyPivotTarget if the user is dragging columns in from the toolPanel\n  // and we are in pivot mode, as it has to logic to set pivot/value/group on the columns when\n  // dropped into the grid's body.\n  isDropColumnInPivotMode(draggingEvent) {\n    return this.columnModel.isPivotMode() && draggingEvent.dragSource.type === 0 /* ToolPanel */;\n  }\n  onDragEnter(draggingEvent) {\n    this.currentDropListener = this.isDropColumnInPivotMode(draggingEvent) ? this.bodyDropPivotTarget : this.moveColumnFeature;\n    this.currentDropListener.onDragEnter(draggingEvent);\n  }\n  onDragLeave(params) {\n    this.currentDropListener.onDragLeave(params);\n  }\n  onDragging(params) {\n    this.currentDropListener.onDragging(params);\n  }\n  onDragStop(params) {\n    this.currentDropListener.onDragStop(params);\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/resizeFeature.ts\nvar ResizeFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.horizontalResizeService = beans.horizontalResizeService;\n    this.pinnedWidthService = beans.pinnedWidthService;\n    this.ctrlsService = beans.ctrlsService;\n    this.columnSizeService = beans.columnSizeService;\n    this.columnAutosizeService = beans.columnAutosizeService;\n  }\n  constructor(pinned, column, eResize, comp, ctrl) {\n    super();\n    this.pinned = pinned;\n    this.column = column;\n    this.eResize = eResize;\n    this.comp = comp;\n    this.ctrl = ctrl;\n  }\n  postConstruct() {\n    const destroyResizeFuncs = [];\n    let canResize;\n    let canAutosize;\n    const addResize = () => {\n      _setDisplayed(this.eResize, canResize);\n      if (!canResize) {\n        return;\n      }\n      const finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n        eResizeBar: this.eResize,\n        onResizeStart: this.onResizeStart.bind(this),\n        onResizing: this.onResizing.bind(this, false),\n        onResizeEnd: this.onResizing.bind(this, true)\n      });\n      destroyResizeFuncs.push(finishedWithResizeFunc);\n      if (canAutosize) {\n        const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\n        const autoSizeColListener = () => {\n          this.columnAutosizeService.autoSizeColumn(this.column, \"uiColumnResized\", skipHeaderOnAutoSize);\n        };\n        this.eResize.addEventListener(\"dblclick\", autoSizeColListener);\n        const touchListener = new TouchListener(this.eResize);\n        touchListener.addEventListener(\"doubleTap\", autoSizeColListener);\n        destroyResizeFuncs.push(() => {\n          this.eResize.removeEventListener(\"dblclick\", autoSizeColListener);\n          touchListener.removeEventListener(\"doubleTap\", autoSizeColListener);\n          touchListener.destroy();\n        });\n      }\n    };\n    const removeResize = () => {\n      destroyResizeFuncs.forEach(f => f());\n      destroyResizeFuncs.length = 0;\n    };\n    const refresh = () => {\n      const resize = this.column.isResizable();\n      const autoSize = !this.gos.get(\"suppressAutoSize\") && !this.column.getColDef().suppressAutoSize;\n      const propertyChange = resize !== canResize || autoSize !== canAutosize;\n      if (propertyChange) {\n        canResize = resize;\n        canAutosize = autoSize;\n        removeResize();\n        addResize();\n      }\n    };\n    refresh();\n    this.addDestroyFunc(removeResize);\n    this.ctrl.addRefreshFunction(refresh);\n  }\n  onResizing(finished, resizeAmount) {\n    const {\n      column: key,\n      lastResizeAmount,\n      resizeStartWidth\n    } = this;\n    const resizeAmountNormalised = this.normaliseResizeAmount(resizeAmount);\n    const newWidth = resizeStartWidth + resizeAmountNormalised;\n    const columnWidths = [{\n      key,\n      newWidth\n    }];\n    if (this.column.getPinned()) {\n      const leftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n      const rightWidth = this.pinnedWidthService.getPinnedRightWidth();\n      const bodyWidth = _getInnerWidth(this.ctrlsService.getGridBodyCtrl().getBodyViewportElement()) - 50;\n      if (leftWidth + rightWidth + (resizeAmountNormalised - lastResizeAmount) > bodyWidth) {\n        return;\n      }\n    }\n    this.lastResizeAmount = resizeAmountNormalised;\n    this.columnSizeService.setColumnWidths(columnWidths, this.resizeWithShiftKey, finished, \"uiColumnResized\");\n    if (finished) {\n      this.toggleColumnResizing(false);\n    }\n  }\n  onResizeStart(shiftKey) {\n    this.resizeStartWidth = this.column.getActualWidth();\n    this.lastResizeAmount = 0;\n    this.resizeWithShiftKey = shiftKey;\n    this.toggleColumnResizing(true);\n  }\n  toggleColumnResizing(resizing) {\n    this.comp.addOrRemoveCssClass(\"ag-column-resizing\", resizing);\n  }\n  // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderGroupCell - should refactor out?\n  normaliseResizeAmount(dragChange) {\n    let result = dragChange;\n    const notPinningLeft = this.pinned !== \"left\";\n    const pinningRight = this.pinned === \"right\";\n    if (this.gos.get(\"enableRtl\")) {\n      if (notPinningLeft) {\n        result *= -1;\n      }\n    } else {\n      if (pinningRight) {\n        result *= -1;\n      }\n    }\n    return result;\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/selectAllFeature.ts\nvar SelectAllFeature = class extends BeanStub {\n  constructor(column) {\n    super();\n    this.cbSelectAllVisible = false;\n    this.processingEventFromCheckbox = false;\n    this.column = column;\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.selectionService = beans.selectionService;\n  }\n  onSpaceKeyDown(e) {\n    const checkbox = this.cbSelectAll;\n    if (checkbox.isDisplayed() && !checkbox.getGui().contains(this.gos.getActiveDomElement())) {\n      e.preventDefault();\n      checkbox.setValue(!checkbox.getValue());\n    }\n  }\n  getCheckboxGui() {\n    return this.cbSelectAll.getGui();\n  }\n  setComp(ctrl) {\n    this.headerCellCtrl = ctrl;\n    this.cbSelectAll = this.createManagedBean(new AgCheckbox());\n    this.cbSelectAll.addCssClass(\"ag-header-select-all\");\n    _setAriaRole(this.cbSelectAll.getGui(), \"presentation\");\n    this.showOrHideSelectAll();\n    this.addManagedEventListeners({\n      newColumnsLoaded: this.onNewColumnsLoaded.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      selectionChanged: this.onSelectionChanged.bind(this),\n      paginationChanged: this.onSelectionChanged.bind(this),\n      modelUpdated: this.onModelChanged.bind(this)\n    });\n    this.addManagedListeners(this.cbSelectAll, {\n      fieldValueChanged: this.onCbSelectAll.bind(this)\n    });\n    _setAriaHidden(this.cbSelectAll.getGui(), true);\n    this.cbSelectAll.getInputElement().setAttribute(\"tabindex\", \"-1\");\n    this.refreshSelectAllLabel();\n  }\n  onNewColumnsLoaded() {\n    this.showOrHideSelectAll();\n  }\n  onDisplayedColumnsChanged() {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.showOrHideSelectAll();\n  }\n  showOrHideSelectAll() {\n    this.cbSelectAllVisible = this.isCheckboxSelection();\n    this.cbSelectAll.setDisplayed(this.cbSelectAllVisible, {\n      skipAriaHidden: true\n    });\n    if (this.cbSelectAllVisible) {\n      this.checkRightRowModelType(\"selectAllCheckbox\");\n      this.checkSelectionType(\"selectAllCheckbox\");\n      this.updateStateOfCheckbox();\n    }\n    this.refreshSelectAllLabel();\n  }\n  onModelChanged() {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    this.updateStateOfCheckbox();\n  }\n  onSelectionChanged() {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    this.updateStateOfCheckbox();\n  }\n  updateStateOfCheckbox() {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n    this.processingEventFromCheckbox = true;\n    const allSelected = this.selectionService.getSelectAllState(this.isFilteredOnly(), this.isCurrentPageOnly());\n    this.cbSelectAll.setValue(allSelected);\n    const hasNodesToSelect = this.selectionService.hasNodesToSelect(this.isFilteredOnly(), this.isCurrentPageOnly());\n    this.cbSelectAll.setDisabled(!hasNodesToSelect);\n    this.refreshSelectAllLabel();\n    this.processingEventFromCheckbox = false;\n  }\n  refreshSelectAllLabel() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const checked = this.cbSelectAll.getValue();\n    const ariaStatus = checked ? translate(\"ariaChecked\", \"checked\") : translate(\"ariaUnchecked\", \"unchecked\");\n    const ariaLabel = translate(\"ariaRowSelectAll\", \"Press Space to toggle all rows selection\");\n    if (!this.cbSelectAllVisible) {\n      this.headerCellCtrl.setAriaDescriptionProperty(\"selectAll\", null);\n    } else {\n      this.headerCellCtrl.setAriaDescriptionProperty(\"selectAll\", `${ariaLabel} (${ariaStatus})`);\n    }\n    this.cbSelectAll.setInputAriaLabel(`${ariaLabel} (${ariaStatus})`);\n    this.headerCellCtrl.announceAriaDescription();\n  }\n  checkSelectionType(feature) {\n    const isMultiSelect = this.gos.get(\"rowSelection\") === \"multiple\";\n    if (!isMultiSelect) {\n      _warnOnce(`${feature} is only available if using 'multiple' rowSelection.`);\n      return false;\n    }\n    return true;\n  }\n  checkRightRowModelType(feature) {\n    const rowModelType = this.rowModel.getType();\n    const rowModelMatches = rowModelType === \"clientSide\" || rowModelType === \"serverSide\";\n    if (!rowModelMatches) {\n      _warnOnce(`${feature} is only available if using 'clientSide' or 'serverSide' rowModelType, you are using ${rowModelType}.`);\n      return false;\n    }\n    return true;\n  }\n  onCbSelectAll() {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    const value = this.cbSelectAll.getValue();\n    const justFiltered = this.isFilteredOnly();\n    const justCurrentPage = this.isCurrentPageOnly();\n    let source = \"uiSelectAll\";\n    if (justCurrentPage) {\n      source = \"uiSelectAllCurrentPage\";\n    } else if (justFiltered) {\n      source = \"uiSelectAllFiltered\";\n    }\n    const params = {\n      source,\n      justFiltered,\n      justCurrentPage\n    };\n    if (value) {\n      this.selectionService.selectAllRowNodes(params);\n    } else {\n      this.selectionService.deselectAllRowNodes(params);\n    }\n  }\n  isCheckboxSelection() {\n    let result = this.column.getColDef().headerCheckboxSelection;\n    if (typeof result === \"function\") {\n      const func = result;\n      const params = this.gos.addGridCommonParams({\n        column: this.column,\n        colDef: this.column.getColDef()\n      });\n      result = func(params);\n    }\n    if (result) {\n      return this.checkRightRowModelType(\"headerCheckboxSelection\") && this.checkSelectionType(\"headerCheckboxSelection\");\n    }\n    return false;\n  }\n  isFilteredOnly() {\n    return !!this.column.getColDef().headerCheckboxSelectionFilteredOnly;\n  }\n  isCurrentPageOnly() {\n    return !!this.column.getColDef().headerCheckboxSelectionCurrentPageOnly;\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/headerCellCtrl.ts\nvar HeaderCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor(column, beans, parentRowCtrl) {\n    super(column, beans, parentRowCtrl);\n    this.refreshFunctions = [];\n    this.userHeaderClasses = /* @__PURE__ */new Set();\n    this.ariaDescriptionProperties = /* @__PURE__ */new Map();\n    this.column = column;\n  }\n  setComp(comp, eGui, eResize, eHeaderCompWrapper) {\n    this.comp = comp;\n    this.setGui(eGui);\n    this.updateState();\n    this.setupWidth();\n    this.setupMovingCss();\n    this.setupMenuClass();\n    this.setupSortableClass();\n    this.setupWrapTextClass();\n    this.refreshSpanHeaderHeight();\n    this.setupAutoHeight(eHeaderCompWrapper);\n    this.addColumnHoverListener();\n    this.setupFilterClass();\n    this.setupClassesFromColDef();\n    this.setupTooltip();\n    this.addActiveHeaderMouseListeners();\n    this.setupSelectAll();\n    this.setupUserComp();\n    this.refreshAria();\n    this.resizeFeature = this.createManagedBean(new ResizeFeature(this.getPinned(), this.column, eResize, comp, this));\n    this.createManagedBean(new HoverFeature([this.column], eGui));\n    this.createManagedBean(new SetLeftFeature(this.column, eGui, this.beans));\n    this.createManagedBean(new ManagedFocusFeature(eGui, {\n      shouldStopEventPropagation: e => this.shouldStopEventPropagation(e),\n      onTabKeyDown: () => null,\n      handleKeyDown: this.handleKeyDown.bind(this),\n      onFocusIn: this.onFocusIn.bind(this),\n      onFocusOut: this.onFocusOut.bind(this)\n    }));\n    this.addResizeAndMoveKeyboardListeners();\n    this.addManagedPropertyListeners([\"suppressMovableColumns\", \"suppressMenuHide\", \"suppressAggFuncInHeader\"], this.refresh.bind(this));\n    this.addManagedListeners(this.column, {\n      colDefChanged: this.refresh.bind(this)\n    });\n    this.addManagedEventListeners({\n      columnValueChanged: this.onColumnValueChanged.bind(this),\n      columnRowGroupChanged: this.onColumnRowGroupChanged.bind(this),\n      columnPivotChanged: this.onColumnPivotChanged.bind(this),\n      headerHeightChanged: this.onHeaderHeightChanged.bind(this)\n    });\n  }\n  resizeHeader(delta, shiftKey) {\n    if (!this.column.isResizable()) {\n      return;\n    }\n    const actualWidth = this.column.getActualWidth();\n    const minWidth = this.column.getMinWidth();\n    const maxWidth = this.column.getMaxWidth();\n    const newWidth = Math.min(Math.max(actualWidth + delta, minWidth), maxWidth);\n    this.beans.columnSizeService.setColumnWidths([{\n      key: this.column,\n      newWidth\n    }], shiftKey, true, \"uiColumnResized\");\n  }\n  moveHeader(hDirection) {\n    const {\n      eGui,\n      column,\n      gos,\n      ctrlsService\n    } = this;\n    const pinned = this.getPinned();\n    const left = eGui.getBoundingClientRect().left;\n    const width = column.getActualWidth();\n    const isRtl = gos.get(\"enableRtl\");\n    const isLeft = hDirection === 0 /* Left */ !== isRtl;\n    const xPosition = normaliseX(isLeft ? left - 20 : left + width + 20, pinned, true, gos, ctrlsService);\n    attemptMoveColumns({\n      allMovingColumns: [column],\n      isFromHeader: true,\n      hDirection,\n      xPosition,\n      pinned,\n      fromEnter: false,\n      fakeEvent: false,\n      gos,\n      columnModel: this.beans.columnModel,\n      columnMoveService: this.beans.columnMoveService,\n      presentedColsService: this.beans.visibleColsService\n    });\n    ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(column, \"auto\");\n  }\n  setupUserComp() {\n    const compDetails = this.lookupUserCompDetails();\n    this.setCompDetails(compDetails);\n  }\n  setCompDetails(compDetails) {\n    this.userCompDetails = compDetails;\n    this.comp.setUserCompDetails(compDetails);\n  }\n  lookupUserCompDetails() {\n    const params = this.createParams();\n    const colDef = this.column.getColDef();\n    return this.userComponentFactory.getHeaderCompDetails(colDef, params);\n  }\n  createParams() {\n    const params = this.gos.addGridCommonParams({\n      column: this.column,\n      displayName: this.displayName,\n      enableSorting: this.column.isSortable(),\n      enableMenu: this.menuEnabled,\n      enableFilterButton: this.openFilterEnabled && this.menuService.isHeaderFilterButtonEnabled(this.column),\n      enableFilterIcon: !this.openFilterEnabled || this.menuService.isLegacyMenuEnabled(),\n      showColumnMenu: buttonElement => {\n        this.menuService.showColumnMenu({\n          column: this.column,\n          buttonElement,\n          positionBy: \"button\"\n        });\n      },\n      showColumnMenuAfterMouseClick: mouseEvent => {\n        this.menuService.showColumnMenu({\n          column: this.column,\n          mouseEvent,\n          positionBy: \"mouse\"\n        });\n      },\n      showFilter: buttonElement => {\n        this.menuService.showFilterMenu({\n          column: this.column,\n          buttonElement,\n          containerType: \"columnFilter\",\n          positionBy: \"button\"\n        });\n      },\n      progressSort: multiSort => {\n        this.beans.sortController.progressSort(this.column, !!multiSort, \"uiColumnSorted\");\n      },\n      setSort: (sort, multiSort) => {\n        this.beans.sortController.setSortForColumn(this.column, sort, !!multiSort, \"uiColumnSorted\");\n      },\n      eGridHeader: this.getGui(),\n      setTooltip: (value, shouldDisplayTooltip) => {\n        this.setupTooltip(value, shouldDisplayTooltip);\n      }\n    });\n    return params;\n  }\n  setupSelectAll() {\n    this.selectAllFeature = this.createManagedBean(new SelectAllFeature(this.column));\n    this.selectAllFeature.setComp(this);\n  }\n  getSelectAllGui() {\n    return this.selectAllFeature.getCheckboxGui();\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    if (e.key === KeyCode.SPACE) {\n      this.selectAllFeature.onSpaceKeyDown(e);\n    }\n    if (e.key === KeyCode.ENTER) {\n      this.onEnterKeyDown(e);\n    }\n    if (e.key === KeyCode.DOWN && e.altKey) {\n      this.showMenuOnKeyPress(e, false);\n    }\n  }\n  onEnterKeyDown(e) {\n    if (e.ctrlKey || e.metaKey) {\n      this.showMenuOnKeyPress(e, true);\n    } else if (this.sortable) {\n      const multiSort = e.shiftKey;\n      this.beans.sortController.progressSort(this.column, multiSort, \"uiColumnSorted\");\n    }\n  }\n  showMenuOnKeyPress(e, isFilterShortcut) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (!headerComp || !(headerComp instanceof HeaderComp)) {\n      return;\n    }\n    if (headerComp.onMenuKeyboardShortcut(isFilterShortcut)) {\n      e.preventDefault();\n    }\n  }\n  onFocusIn(e) {\n    if (!this.getGui().contains(e.relatedTarget)) {\n      const rowIndex = this.getRowIndex();\n      this.focusService.setFocusedHeader(rowIndex, this.column);\n      this.announceAriaDescription();\n    }\n    if (this.focusService.isKeyboardMode()) {\n      this.setActiveHeader(true);\n    }\n  }\n  onFocusOut(e) {\n    if (this.getGui().contains(e.relatedTarget)) {\n      return;\n    }\n    this.setActiveHeader(false);\n  }\n  setupTooltip(value, shouldDisplayTooltip) {\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    const isTooltipWhenTruncated = this.gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n    const eGui = this.eGui;\n    const colDef = this.column.getColDef();\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !colDef.headerComponent) {\n      shouldDisplayTooltip = () => {\n        const textEl = eGui.querySelector(\".ag-header-cell-text\");\n        if (!textEl) {\n          return true;\n        }\n        return textEl.scrollWidth > textEl.clientWidth;\n      };\n    }\n    const tooltipCtrl = {\n      getColumn: () => this.column,\n      getColDef: () => this.column.getColDef(),\n      getGui: () => eGui,\n      getLocation: () => \"header\",\n      getTooltipValue: () => {\n        if (value != null) {\n          return value;\n        }\n        const res = this.column.getColDef().headerTooltip;\n        return res;\n      },\n      shouldDisplayTooltip\n    };\n    const tooltipFeature = this.createManagedBean(new TooltipFeature(tooltipCtrl));\n    this.refreshFunctions.push(() => tooltipFeature.refreshToolTip());\n  }\n  setupClassesFromColDef() {\n    const refreshHeaderClasses = () => {\n      const colDef = this.column.getColDef();\n      const classes = _getHeaderClassesFromColDef(colDef, this.gos, this.column, null);\n      const oldClasses = this.userHeaderClasses;\n      this.userHeaderClasses = new Set(classes);\n      classes.forEach(c => {\n        if (oldClasses.has(c)) {\n          oldClasses.delete(c);\n        } else {\n          this.comp.addOrRemoveCssClass(c, true);\n        }\n      });\n      oldClasses.forEach(c => this.comp.addOrRemoveCssClass(c, false));\n    };\n    this.refreshFunctions.push(refreshHeaderClasses);\n    refreshHeaderClasses();\n  }\n  setDragSource(eSource) {\n    this.dragSourceElement = eSource;\n    this.removeDragSource();\n    if (!eSource || !this.draggable) {\n      return;\n    }\n    const {\n      column,\n      beans,\n      displayName,\n      dragAndDropService,\n      gos\n    } = this;\n    const {\n      columnModel\n    } = beans;\n    let hideColumnOnExit = !this.gos.get(\"suppressDragLeaveHidesColumns\");\n    const dragSource = this.dragSource = {\n      type: 1 /* HeaderCell */,\n      eElement: eSource,\n      getDefaultIconName: () => hideColumnOnExit ? \"hide\" : \"notAllowed\",\n      getDragItem: () => this.createDragItem(column),\n      dragItemName: displayName,\n      onDragStarted: () => {\n        hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n        column.setMoving(true, \"uiColumnMoved\");\n      },\n      onDragStopped: () => column.setMoving(false, \"uiColumnMoved\"),\n      onGridEnter: dragItem => {\n        if (hideColumnOnExit) {\n          const unlockedColumns = dragItem?.columns?.filter(col => !col.getColDef().lockVisible) || [];\n          columnModel.setColsVisible(unlockedColumns, true, \"uiColumnMoved\");\n        }\n      },\n      onGridExit: dragItem => {\n        if (hideColumnOnExit) {\n          const unlockedColumns = dragItem?.columns?.filter(col => !col.getColDef().lockVisible) || [];\n          columnModel.setColsVisible(unlockedColumns, false, \"uiColumnMoved\");\n        }\n      }\n    };\n    dragAndDropService.addDragSource(dragSource, true);\n  }\n  createDragItem(column) {\n    const visibleState = {};\n    visibleState[column.getId()] = column.isVisible();\n    return {\n      columns: [column],\n      visibleState\n    };\n  }\n  updateState() {\n    this.menuEnabled = this.menuService.isColumnMenuInHeaderEnabled(this.column);\n    this.openFilterEnabled = this.menuService.isFilterMenuInHeaderEnabled(this.column);\n    this.sortable = this.column.isSortable();\n    this.displayName = this.calculateDisplayName();\n    this.draggable = this.workOutDraggable();\n  }\n  addRefreshFunction(func) {\n    this.refreshFunctions.push(func);\n  }\n  refresh() {\n    this.updateState();\n    this.refreshHeaderComp();\n    this.refreshAria();\n    this.refreshFunctions.forEach(f => f());\n  }\n  refreshHeaderComp() {\n    const newCompDetails = this.lookupUserCompDetails();\n    const compInstance = this.comp.getUserCompInstance();\n    const attemptRefresh = compInstance != null && this.userCompDetails.componentClass == newCompDetails.componentClass;\n    const headerCompRefreshed = attemptRefresh ? this.attemptHeaderCompRefresh(newCompDetails.params) : false;\n    if (headerCompRefreshed) {\n      this.setDragSource(this.dragSourceElement);\n    } else {\n      this.setCompDetails(newCompDetails);\n    }\n  }\n  attemptHeaderCompRefresh(params) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (!headerComp) {\n      return false;\n    }\n    if (!headerComp.refresh) {\n      return false;\n    }\n    const res = headerComp.refresh(params);\n    return res;\n  }\n  calculateDisplayName() {\n    return this.beans.columnNameService.getDisplayNameForColumn(this.column, \"header\", true);\n  }\n  checkDisplayName() {\n    if (this.displayName !== this.calculateDisplayName()) {\n      this.refresh();\n    }\n  }\n  workOutDraggable() {\n    const colDef = this.column.getColDef();\n    const isSuppressMovableColumns = this.gos.get(\"suppressMovableColumns\");\n    const colCanMove = !isSuppressMovableColumns && !colDef.suppressMovable && !colDef.lockPosition;\n    return !!colCanMove || !!colDef.enableRowGroup || !!colDef.enablePivot;\n  }\n  onColumnRowGroupChanged() {\n    this.checkDisplayName();\n  }\n  onColumnPivotChanged() {\n    this.checkDisplayName();\n  }\n  onColumnValueChanged() {\n    this.checkDisplayName();\n  }\n  setupWidth() {\n    const listener = () => {\n      const columnWidth = this.column.getActualWidth();\n      this.comp.setWidth(`${columnWidth}px`);\n    };\n    this.addManagedListeners(this.column, {\n      widthChanged: listener\n    });\n    listener();\n  }\n  setupMovingCss() {\n    const listener = () => {\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-moving\", this.column.isMoving());\n    };\n    this.addManagedListeners(this.column, {\n      movingChanged: listener\n    });\n    listener();\n  }\n  setupMenuClass() {\n    const listener = () => {\n      this.comp.addOrRemoveCssClass(\"ag-column-menu-visible\", this.column.isMenuVisible());\n    };\n    this.addManagedListeners(this.column, {\n      menuVisibleChanged: listener\n    });\n    listener();\n  }\n  setupSortableClass() {\n    const updateSortableCssClass = () => {\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-sortable\", !!this.sortable);\n    };\n    updateSortableCssClass();\n    this.addRefreshFunction(updateSortableCssClass);\n    this.addManagedEventListeners({\n      sortChanged: this.refreshAriaSort.bind(this)\n    });\n  }\n  setupFilterClass() {\n    const listener = () => {\n      const isFilterActive = this.column.isFilterActive();\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-filtered\", isFilterActive);\n      this.refreshAria();\n    };\n    this.addManagedListeners(this.column, {\n      filterActiveChanged: listener\n    });\n    listener();\n  }\n  setupWrapTextClass() {\n    const listener = () => {\n      const wrapText = !!this.column.getColDef().wrapHeaderText;\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-wrap-text\", wrapText);\n    };\n    listener();\n    this.addRefreshFunction(listener);\n  }\n  onDisplayedColumnsChanged() {\n    super.onDisplayedColumnsChanged();\n    if (!this.isAlive()) {\n      return;\n    }\n    this.onHeaderHeightChanged();\n  }\n  onHeaderHeightChanged() {\n    this.refreshSpanHeaderHeight();\n  }\n  refreshSpanHeaderHeight() {\n    const {\n      eGui,\n      column,\n      comp,\n      beans\n    } = this;\n    if (!column.isSpanHeaderHeight()) {\n      eGui.style.removeProperty(\"top\");\n      eGui.style.removeProperty(\"height\");\n      comp.addOrRemoveCssClass(\"ag-header-span-height\", false);\n      comp.addOrRemoveCssClass(\"ag-header-span-total\", false);\n      return;\n    }\n    const {\n      numberOfParents,\n      isSpanningTotal\n    } = this.column.getColumnGroupPaddingInfo();\n    comp.addOrRemoveCssClass(\"ag-header-span-height\", numberOfParents > 0);\n    const {\n      columnModel\n    } = beans;\n    const headerHeight = columnModel.getColumnHeaderRowHeight();\n    if (numberOfParents === 0) {\n      comp.addOrRemoveCssClass(\"ag-header-span-total\", false);\n      eGui.style.setProperty(\"top\", `0px`);\n      eGui.style.setProperty(\"height\", `${headerHeight}px`);\n      return;\n    }\n    comp.addOrRemoveCssClass(\"ag-header-span-total\", isSpanningTotal);\n    const pivotMode = columnModel.isPivotMode();\n    const groupHeaderHeight = pivotMode ? columnModel.getPivotGroupHeaderHeight() : columnModel.getGroupHeaderHeight();\n    const extraHeight = numberOfParents * groupHeaderHeight;\n    eGui.style.setProperty(\"top\", `${-extraHeight}px`);\n    eGui.style.setProperty(\"height\", `${headerHeight + extraHeight}px`);\n  }\n  setupAutoHeight(wrapperElement) {\n    const {\n      columnModel,\n      resizeObserverService\n    } = this.beans;\n    const measureHeight = timesCalled => {\n      if (!this.isAlive()) {\n        return;\n      }\n      const {\n        paddingTop,\n        paddingBottom,\n        borderBottomWidth,\n        borderTopWidth\n      } = _getElementSize(this.getGui());\n      const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\n      const wrapperHeight = wrapperElement.offsetHeight;\n      const autoHeight = wrapperHeight + extraHeight;\n      if (timesCalled < 5) {\n        const doc = this.beans.gos.getDocument();\n        const notYetInDom = !doc || !doc.contains(wrapperElement);\n        const possiblyNoContentYet = autoHeight == 0;\n        if (notYetInDom || possiblyNoContentYet) {\n          window.setTimeout(() => measureHeight(timesCalled + 1), 0);\n          return;\n        }\n      }\n      columnModel.setColHeaderHeight(this.column, autoHeight);\n    };\n    let isMeasuring = false;\n    let stopResizeObserver;\n    const checkMeasuring = () => {\n      const newValue = this.column.isAutoHeaderHeight();\n      if (newValue && !isMeasuring) {\n        startMeasuring();\n      }\n      if (!newValue && isMeasuring) {\n        stopMeasuring();\n      }\n    };\n    const startMeasuring = () => {\n      isMeasuring = true;\n      measureHeight(0);\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-auto-height\", true);\n      stopResizeObserver = resizeObserverService.observeResize(wrapperElement, () => measureHeight(0));\n    };\n    const stopMeasuring = () => {\n      isMeasuring = false;\n      if (stopResizeObserver) {\n        stopResizeObserver();\n      }\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-auto-height\", false);\n      stopResizeObserver = void 0;\n    };\n    checkMeasuring();\n    this.addDestroyFunc(() => stopMeasuring());\n    this.addManagedListeners(this.column, {\n      widthChanged: () => isMeasuring && measureHeight(0)\n    });\n    this.addManagedEventListeners({\n      sortChanged: () => {\n        if (isMeasuring) {\n          window.setTimeout(() => measureHeight(0));\n        }\n      }\n    });\n    this.addRefreshFunction(checkMeasuring);\n  }\n  refreshAriaSort() {\n    if (this.sortable) {\n      const translate = this.localeService.getLocaleTextFunc();\n      const sort = this.beans.sortController.getDisplaySortForColumn(this.column) || null;\n      this.comp.setAriaSort(_getAriaSortState(sort));\n      this.setAriaDescriptionProperty(\"sort\", translate(\"ariaSortableColumn\", \"Press ENTER to sort\"));\n    } else {\n      this.comp.setAriaSort();\n      this.setAriaDescriptionProperty(\"sort\", null);\n    }\n  }\n  refreshAriaMenu() {\n    if (this.menuEnabled) {\n      const translate = this.localeService.getLocaleTextFunc();\n      this.setAriaDescriptionProperty(\"menu\", translate(\"ariaMenuColumn\", \"Press ALT DOWN to open column menu\"));\n    } else {\n      this.setAriaDescriptionProperty(\"menu\", null);\n    }\n  }\n  refreshAriaFilterButton() {\n    if (this.openFilterEnabled && !this.menuService.isLegacyMenuEnabled()) {\n      const translate = this.localeService.getLocaleTextFunc();\n      this.setAriaDescriptionProperty(\"filterButton\", translate(\"ariaFilterColumn\", \"Press CTRL ENTER to open filter\"));\n    } else {\n      this.setAriaDescriptionProperty(\"filterButton\", null);\n    }\n  }\n  refreshAriaFiltered() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const isFilterActive = this.column.isFilterActive();\n    if (isFilterActive) {\n      this.setAriaDescriptionProperty(\"filter\", translate(\"ariaColumnFiltered\", \"Column Filtered\"));\n    } else {\n      this.setAriaDescriptionProperty(\"filter\", null);\n    }\n  }\n  setAriaDescriptionProperty(property, value) {\n    if (value != null) {\n      this.ariaDescriptionProperties.set(property, value);\n    } else {\n      this.ariaDescriptionProperties.delete(property);\n    }\n  }\n  announceAriaDescription() {\n    if (!this.eGui.contains(this.beans.gos.getActiveDomElement())) {\n      return;\n    }\n    const ariaDescription = Array.from(this.ariaDescriptionProperties.keys()).sort((a, b) => a === \"filter\" ? -1 : b.charCodeAt(0) - a.charCodeAt(0)).map(key => this.ariaDescriptionProperties.get(key)).join(\". \");\n    this.beans.ariaAnnouncementService.announceValue(ariaDescription);\n  }\n  refreshAria() {\n    this.refreshAriaSort();\n    this.refreshAriaMenu();\n    this.refreshAriaFilterButton();\n    this.refreshAriaFiltered();\n  }\n  addColumnHoverListener() {\n    const listener = () => {\n      if (!this.gos.get(\"columnHoverHighlight\")) {\n        return;\n      }\n      const isHovered = this.beans.columnHoverService.isHovered(this.column);\n      this.comp.addOrRemoveCssClass(\"ag-column-hover\", isHovered);\n    };\n    this.addManagedEventListeners({\n      columnHoverChanged: listener\n    });\n    listener();\n  }\n  getColId() {\n    return this.column.getColId();\n  }\n  addActiveHeaderMouseListeners() {\n    const listener = e => this.handleMouseOverChange(e.type === \"mouseenter\");\n    const clickListener = () => this.dispatchColumnMouseEvent(\"columnHeaderClicked\", this.column);\n    const contextMenuListener = event => this.handleContextMenuMouseEvent(event, void 0, this.column);\n    this.addManagedListeners(this.getGui(), {\n      mouseenter: listener,\n      mouseleave: listener,\n      click: clickListener,\n      contextmenu: contextMenuListener\n    });\n  }\n  handleMouseOverChange(isMouseOver) {\n    this.setActiveHeader(isMouseOver);\n    const eventType = isMouseOver ? \"columnHeaderMouseOver\" : \"columnHeaderMouseLeave\";\n    const event = {\n      type: eventType,\n      column: this.column\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  setActiveHeader(active) {\n    this.comp.addOrRemoveCssClass(\"ag-header-active\", active);\n  }\n  getAnchorElementForMenu(isFilter) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (headerComp instanceof HeaderComp) {\n      return headerComp.getAnchorElementForMenu(isFilter);\n    }\n    return this.getGui();\n  }\n  destroy() {\n    super.destroy();\n    this.refreshFunctions = null;\n    this.selectAllFeature = null;\n    this.dragSourceElement = null;\n    this.userCompDetails = null;\n    this.userHeaderClasses = null;\n    this.ariaDescriptionProperties = null;\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/columnGroup/groupResizeFeature.ts\nvar GroupResizeFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.horizontalResizeService = beans.horizontalResizeService;\n    this.autoWidthCalculator = beans.autoWidthCalculator;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnSizeService = beans.columnSizeService;\n    this.columnAutosizeService = beans.columnAutosizeService;\n  }\n  constructor(comp, eResize, pinned, columnGroup) {\n    super();\n    this.eResize = eResize;\n    this.comp = comp;\n    this.pinned = pinned;\n    this.columnGroup = columnGroup;\n  }\n  postConstruct() {\n    if (!this.columnGroup.isResizable()) {\n      this.comp.setResizableDisplayed(false);\n      return;\n    }\n    const finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n      eResizeBar: this.eResize,\n      onResizeStart: this.onResizeStart.bind(this),\n      onResizing: this.onResizing.bind(this, false),\n      onResizeEnd: this.onResizing.bind(this, true)\n    });\n    this.addDestroyFunc(finishedWithResizeFunc);\n    if (!this.gos.get(\"suppressAutoSize\")) {\n      const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\n      this.eResize.addEventListener(\"dblclick\", () => {\n        const keys = [];\n        const leafCols = this.columnGroup.getDisplayedLeafColumns();\n        leafCols.forEach(column => {\n          if (!column.getColDef().suppressAutoSize) {\n            keys.push(column.getColId());\n          }\n        });\n        if (keys.length > 0) {\n          this.columnAutosizeService.autoSizeCols({\n            colKeys: keys,\n            skipHeader: skipHeaderOnAutoSize,\n            stopAtGroup: this.columnGroup,\n            source: \"uiColumnResized\"\n          });\n        }\n        this.resizeLeafColumnsToFit(\"uiColumnResized\");\n      });\n    }\n  }\n  onResizeStart(shiftKey) {\n    const initialValues = this.getInitialValues(shiftKey);\n    this.storeLocalValues(initialValues);\n    this.toggleColumnResizing(true);\n  }\n  onResizing(finished, resizeAmount, source = \"uiColumnResized\") {\n    const resizeAmountNormalised = this.normaliseDragChange(resizeAmount);\n    const width = this.resizeStartWidth + resizeAmountNormalised;\n    this.resizeColumnsFromLocalValues(width, source, finished);\n  }\n  getInitialValues(shiftKey) {\n    const columnsToResize = this.getColumnsToResize();\n    const resizeStartWidth = this.getInitialSizeOfColumns(columnsToResize);\n    const resizeRatios = this.getSizeRatiosOfColumns(columnsToResize, resizeStartWidth);\n    const columnSizeAndRatios = {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios\n    };\n    let groupAfter = null;\n    if (shiftKey) {\n      groupAfter = this.visibleColsService.getGroupAtDirection(this.columnGroup, \"After\");\n    }\n    if (groupAfter) {\n      const takeFromLeafCols = groupAfter.getDisplayedLeafColumns();\n      const groupAfterColumns = columnSizeAndRatios.groupAfterColumns = takeFromLeafCols.filter(col => col.isResizable());\n      const groupAfterStartWidth = columnSizeAndRatios.groupAfterStartWidth = this.getInitialSizeOfColumns(groupAfterColumns);\n      columnSizeAndRatios.groupAfterRatios = this.getSizeRatiosOfColumns(groupAfterColumns, groupAfterStartWidth);\n    } else {\n      columnSizeAndRatios.groupAfterColumns = void 0;\n      columnSizeAndRatios.groupAfterStartWidth = void 0;\n      columnSizeAndRatios.groupAfterRatios = void 0;\n    }\n    return columnSizeAndRatios;\n  }\n  storeLocalValues(initialValues) {\n    const {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios,\n      groupAfterColumns,\n      groupAfterStartWidth,\n      groupAfterRatios\n    } = initialValues;\n    this.resizeCols = columnsToResize;\n    this.resizeStartWidth = resizeStartWidth;\n    this.resizeRatios = resizeRatios;\n    this.resizeTakeFromCols = groupAfterColumns;\n    this.resizeTakeFromStartWidth = groupAfterStartWidth;\n    this.resizeTakeFromRatios = groupAfterRatios;\n  }\n  clearLocalValues() {\n    this.resizeCols = void 0;\n    this.resizeRatios = void 0;\n    this.resizeTakeFromCols = void 0;\n    this.resizeTakeFromRatios = void 0;\n  }\n  resizeLeafColumnsToFit(source) {\n    const preferredSize = this.autoWidthCalculator.getPreferredWidthForColumnGroup(this.columnGroup);\n    const initialValues = this.getInitialValues();\n    if (preferredSize > initialValues.resizeStartWidth) {\n      this.resizeColumns(initialValues, preferredSize, source, true);\n    }\n  }\n  resizeColumnsFromLocalValues(totalWidth, source, finished = true) {\n    if (!this.resizeCols || !this.resizeRatios) {\n      return;\n    }\n    const initialValues = {\n      columnsToResize: this.resizeCols,\n      resizeStartWidth: this.resizeStartWidth,\n      resizeRatios: this.resizeRatios,\n      groupAfterColumns: this.resizeTakeFromCols ?? void 0,\n      groupAfterStartWidth: this.resizeTakeFromStartWidth ?? void 0,\n      groupAfterRatios: this.resizeTakeFromRatios ?? void 0\n    };\n    this.resizeColumns(initialValues, totalWidth, source, finished);\n  }\n  resizeColumns(initialValues, totalWidth, source, finished = true) {\n    const {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios,\n      groupAfterColumns,\n      groupAfterStartWidth,\n      groupAfterRatios\n    } = initialValues;\n    const resizeSets = [];\n    resizeSets.push({\n      columns: columnsToResize,\n      ratios: resizeRatios,\n      width: totalWidth\n    });\n    if (groupAfterColumns) {\n      const diff = totalWidth - resizeStartWidth;\n      resizeSets.push({\n        columns: groupAfterColumns,\n        ratios: groupAfterRatios,\n        width: groupAfterStartWidth - diff\n      });\n    }\n    this.columnSizeService.resizeColumnSets({\n      resizeSets,\n      finished,\n      source\n    });\n    if (finished) {\n      this.toggleColumnResizing(false);\n    }\n  }\n  toggleColumnResizing(resizing) {\n    this.comp.addOrRemoveCssClass(\"ag-column-resizing\", resizing);\n  }\n  getColumnsToResize() {\n    const leafCols = this.columnGroup.getDisplayedLeafColumns();\n    return leafCols.filter(col => col.isResizable());\n  }\n  getInitialSizeOfColumns(columns) {\n    return columns.reduce((totalWidth, column) => totalWidth + column.getActualWidth(), 0);\n  }\n  getSizeRatiosOfColumns(columns, initialSizeOfColumns) {\n    return columns.map(column => column.getActualWidth() / initialSizeOfColumns);\n  }\n  // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderCell - should refactor out?\n  normaliseDragChange(dragChange) {\n    let result = dragChange;\n    if (this.gos.get(\"enableRtl\")) {\n      if (this.pinned !== \"left\") {\n        result *= -1;\n      }\n    } else if (this.pinned === \"right\") {\n      result *= -1;\n    }\n    return result;\n  }\n  destroy() {\n    super.destroy();\n    this.clearLocalValues();\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/columnGroup/groupWidthFeature.ts\nvar GroupWidthFeature = class extends BeanStub {\n  constructor(comp, columnGroup) {\n    super();\n    // the children can change, we keep destroy functions related to listening to the children here\n    this.removeChildListenersFuncs = [];\n    this.columnGroup = columnGroup;\n    this.comp = comp;\n  }\n  postConstruct() {\n    this.addListenersToChildrenColumns();\n    this.addManagedListeners(this.columnGroup, {\n      displayedChildrenChanged: this.onDisplayedChildrenChanged.bind(this)\n    });\n    this.onWidthChanged();\n    this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));\n  }\n  addListenersToChildrenColumns() {\n    this.removeListenersOnChildrenColumns();\n    const widthChangedListener = this.onWidthChanged.bind(this);\n    this.columnGroup.getLeafColumns().forEach(column => {\n      column.addEventListener(\"widthChanged\", widthChangedListener);\n      column.addEventListener(\"visibleChanged\", widthChangedListener);\n      this.removeChildListenersFuncs.push(() => {\n        column.removeEventListener(\"widthChanged\", widthChangedListener);\n        column.removeEventListener(\"visibleChanged\", widthChangedListener);\n      });\n    });\n  }\n  removeListenersOnChildrenColumns() {\n    this.removeChildListenersFuncs.forEach(func => func());\n    this.removeChildListenersFuncs = [];\n  }\n  onDisplayedChildrenChanged() {\n    this.addListenersToChildrenColumns();\n    this.onWidthChanged();\n  }\n  onWidthChanged() {\n    const columnWidth = this.columnGroup.getActualWidth();\n    this.comp.setWidth(`${columnWidth}px`);\n    this.comp.addOrRemoveCssClass(\"ag-hidden\", columnWidth === 0);\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/columnGroup/headerGroupCellCtrl.ts\nvar HeaderGroupCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor(columnGroup, beans, parentRowCtrl) {\n    super(columnGroup, beans, parentRowCtrl);\n    this.onSuppressColMoveChange = () => {\n      if (!this.isAlive() || this.isSuppressMoving()) {\n        this.removeDragSource();\n      } else {\n        if (!this.dragSource) {\n          const eGui = this.getGui();\n          this.setDragSource(eGui);\n        }\n      }\n    };\n    this.column = columnGroup;\n  }\n  setComp(comp, eGui, eResize) {\n    this.comp = comp;\n    this.setGui(eGui);\n    this.displayName = this.beans.columnNameService.getDisplayNameForColumnGroup(this.column, \"header\");\n    this.addClasses();\n    this.setupMovingCss();\n    this.setupExpandable();\n    this.setupTooltip();\n    this.addDestroyFunc(() => {\n      if (this.tooltipFeature) {\n        this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n      }\n    });\n    this.setupUserComp();\n    this.addHeaderMouseListeners();\n    const pinned = this.getParentRowCtrl().getPinned();\n    const leafCols = this.column.getProvidedColumnGroup().getLeafColumns();\n    this.createManagedBean(new HoverFeature(leafCols, eGui));\n    this.createManagedBean(new SetLeftFeature(this.column, eGui, this.beans));\n    this.createManagedBean(new GroupWidthFeature(comp, this.column));\n    this.resizeFeature = this.createManagedBean(new GroupResizeFeature(comp, eResize, pinned, this.column));\n    this.createManagedBean(new ManagedFocusFeature(eGui, {\n      shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n      onTabKeyDown: () => void 0,\n      handleKeyDown: this.handleKeyDown.bind(this),\n      onFocusIn: this.onFocusIn.bind(this)\n    }));\n    this.addManagedPropertyListener(\"suppressMovableColumns\", this.onSuppressColMoveChange);\n    this.addResizeAndMoveKeyboardListeners();\n  }\n  resizeHeader(delta, shiftKey) {\n    if (!this.resizeFeature) {\n      return;\n    }\n    const initialValues = this.resizeFeature.getInitialValues(shiftKey);\n    this.resizeFeature.resizeColumns(initialValues, initialValues.resizeStartWidth + delta, \"uiColumnResized\", true);\n  }\n  moveHeader(hDirection) {\n    const {\n      beans,\n      eGui,\n      column,\n      gos,\n      ctrlsService\n    } = this;\n    const isRtl = gos.get(\"enableRtl\");\n    const isLeft = hDirection === 0 /* Left */;\n    const pinned = this.getPinned();\n    const rect = eGui.getBoundingClientRect();\n    const left = rect.left;\n    const width = rect.width;\n    const xPosition = normaliseX(isLeft !== isRtl ? left - 20 : left + width + 20, pinned, true, gos, ctrlsService);\n    const id = column.getGroupId();\n    const headerPosition = this.focusService.getFocusedHeader();\n    attemptMoveColumns({\n      allMovingColumns: this.column.getLeafColumns(),\n      isFromHeader: true,\n      hDirection,\n      xPosition,\n      pinned,\n      fromEnter: false,\n      fakeEvent: false,\n      gos,\n      columnModel: beans.columnModel,\n      columnMoveService: beans.columnMoveService,\n      presentedColsService: beans.visibleColsService\n    });\n    const displayedLeafColumns = column.getDisplayedLeafColumns();\n    const targetColumn = isLeft ? displayedLeafColumns[0] : _last(displayedLeafColumns);\n    this.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(targetColumn, \"auto\");\n    if (!this.isAlive() && headerPosition) {\n      this.restoreFocus(id, column, headerPosition);\n    }\n  }\n  restoreFocus(groupId, previousColumnGroup, previousPosition) {\n    const leafCols = previousColumnGroup.getLeafColumns();\n    if (!leafCols.length) {\n      return;\n    }\n    const parent = leafCols[0].getParent();\n    if (!parent) {\n      return;\n    }\n    const newColumnGroup = this.findGroupWidthId(parent, groupId);\n    if (newColumnGroup) {\n      this.focusService.focusHeaderPosition({\n        headerPosition: {\n          ...previousPosition,\n          column: newColumnGroup\n        }\n      });\n    }\n  }\n  findGroupWidthId(columnGroup, id) {\n    while (columnGroup) {\n      if (columnGroup.getGroupId() === id) {\n        return columnGroup;\n      }\n      columnGroup = columnGroup.getParent();\n    }\n    return null;\n  }\n  resizeLeafColumnsToFit(source) {\n    if (!this.resizeFeature) {\n      return;\n    }\n    this.resizeFeature.resizeLeafColumnsToFit(source);\n  }\n  setupUserComp() {\n    const params = this.gos.addGridCommonParams({\n      displayName: this.displayName,\n      columnGroup: this.column,\n      setExpanded: expanded => {\n        this.beans.columnModel.setColumnGroupOpened(this.column.getProvidedColumnGroup(), expanded, \"gridInitializing\");\n      },\n      setTooltip: (value, shouldDisplayTooltip) => {\n        this.setupTooltip(value, shouldDisplayTooltip);\n      }\n    });\n    const compDetails = this.userComponentFactory.getHeaderGroupCompDetails(params);\n    this.comp.setUserCompDetails(compDetails);\n  }\n  addHeaderMouseListeners() {\n    const listener = e => this.handleMouseOverChange(e.type === \"mouseenter\");\n    const clickListener = () => this.dispatchColumnMouseEvent(\"columnHeaderClicked\", this.column.getProvidedColumnGroup());\n    const contextMenuListener = event => this.handleContextMenuMouseEvent(event, void 0, this.column.getProvidedColumnGroup());\n    this.addManagedListeners(this.getGui(), {\n      mouseenter: listener,\n      mouseleave: listener,\n      click: clickListener,\n      contextmenu: contextMenuListener\n    });\n  }\n  handleMouseOverChange(isMouseOver) {\n    const eventType = isMouseOver ? \"columnHeaderMouseOver\" : \"columnHeaderMouseLeave\";\n    const event = {\n      type: eventType,\n      column: this.column.getProvidedColumnGroup()\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  setupTooltip(value, shouldDisplayTooltip) {\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    const colGroupDef = this.column.getColGroupDef();\n    const isTooltipWhenTruncated = this.gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n    const eGui = this.eGui;\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !colGroupDef?.headerGroupComponent) {\n      shouldDisplayTooltip = () => {\n        const textEl = eGui.querySelector(\".ag-header-group-text\");\n        if (!textEl) {\n          return true;\n        }\n        return textEl.scrollWidth > textEl.clientWidth;\n      };\n    }\n    const tooltipCtrl = {\n      getColumn: () => this.column,\n      getGui: () => eGui,\n      getLocation: () => \"headerGroup\",\n      getTooltipValue: () => value ?? (colGroupDef && colGroupDef.headerTooltip),\n      shouldDisplayTooltip\n    };\n    if (colGroupDef) {\n      tooltipCtrl.getColDef = () => colGroupDef;\n    }\n    this.createManagedBean(new TooltipFeature(tooltipCtrl));\n  }\n  setupExpandable() {\n    const providedColGroup = this.column.getProvidedColumnGroup();\n    this.refreshExpanded();\n    const listener = this.refreshExpanded.bind(this);\n    this.addManagedListeners(providedColGroup, {\n      expandedChanged: listener,\n      expandableChanged: listener\n    });\n  }\n  refreshExpanded() {\n    const {\n      column\n    } = this;\n    this.expandable = column.isExpandable();\n    const expanded = column.isExpanded();\n    if (this.expandable) {\n      this.comp.setAriaExpanded(expanded ? \"true\" : \"false\");\n    } else {\n      this.comp.setAriaExpanded(void 0);\n    }\n  }\n  getColId() {\n    return this.column.getUniqueId();\n  }\n  addClasses() {\n    const colGroupDef = this.column.getColGroupDef();\n    const classes = _getHeaderClassesFromColDef(colGroupDef, this.gos, null, this.column);\n    if (this.column.isPadding()) {\n      classes.push(\"ag-header-group-cell-no-group\");\n      const leafCols = this.column.getLeafColumns();\n      if (leafCols.every(col => col.isSpanHeaderHeight())) {\n        classes.push(\"ag-header-span-height\");\n      }\n    } else {\n      classes.push(\"ag-header-group-cell-with-group\");\n    }\n    classes.forEach(c => this.comp.addOrRemoveCssClass(c, true));\n  }\n  setupMovingCss() {\n    const providedColumnGroup = this.column.getProvidedColumnGroup();\n    const leafColumns = providedColumnGroup.getLeafColumns();\n    const listener = () => this.comp.addOrRemoveCssClass(\"ag-header-cell-moving\", this.column.isMoving());\n    leafColumns.forEach(col => {\n      this.addManagedListeners(col, {\n        movingChanged: listener\n      });\n    });\n    listener();\n  }\n  onFocusIn(e) {\n    if (!this.eGui.contains(e.relatedTarget)) {\n      const rowIndex = this.getRowIndex();\n      this.beans.focusService.setFocusedHeader(rowIndex, this.column);\n    }\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    if (!this.expandable || !wrapperHasFocus) {\n      return;\n    }\n    if (e.key === KeyCode.ENTER) {\n      const column = this.column;\n      const newExpandedValue = !column.isExpanded();\n      this.beans.columnModel.setColumnGroupOpened(column.getProvidedColumnGroup(), newExpandedValue, \"uiColumnExpanded\");\n    }\n  }\n  // unlike columns, this will only get called once, as we don't react on props on column groups\n  // (we will always destroy and recreate this comp if something changes)\n  setDragSource(eHeaderGroup) {\n    if (!this.isAlive() || this.isSuppressMoving()) {\n      return;\n    }\n    this.removeDragSource();\n    if (!eHeaderGroup) {\n      return;\n    }\n    const {\n      beans,\n      column,\n      displayName,\n      gos,\n      dragAndDropService\n    } = this;\n    const {\n      columnModel\n    } = beans;\n    const allLeafColumns = column.getProvidedColumnGroup().getLeafColumns();\n    let hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n    const dragSource = this.dragSource = {\n      type: 1 /* HeaderCell */,\n      eElement: eHeaderGroup,\n      getDefaultIconName: () => hideColumnOnExit ? \"hide\" : \"notAllowed\",\n      dragItemName: displayName,\n      // we add in the original group leaf columns, so we move both visible and non-visible items\n      getDragItem: () => this.getDragItemForGroup(column),\n      onDragStarted: () => {\n        hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n        allLeafColumns.forEach(col => col.setMoving(true, \"uiColumnDragged\"));\n      },\n      onDragStopped: () => allLeafColumns.forEach(col => col.setMoving(false, \"uiColumnDragged\")),\n      onGridEnter: dragItem => {\n        if (hideColumnOnExit) {\n          const unlockedColumns = dragItem?.columns?.filter(col => !col.getColDef().lockVisible) || [];\n          columnModel.setColsVisible(unlockedColumns, true, \"uiColumnMoved\");\n        }\n      },\n      onGridExit: dragItem => {\n        if (hideColumnOnExit) {\n          const unlockedColumns = dragItem?.columns?.filter(col => !col.getColDef().lockVisible) || [];\n          columnModel.setColsVisible(unlockedColumns, false, \"uiColumnMoved\");\n        }\n      }\n    };\n    dragAndDropService.addDragSource(dragSource, true);\n  }\n  // when moving the columns, we want to move all the columns (contained within the DragItem) in this group in one go,\n  // and in the order they are currently in the screen.\n  getDragItemForGroup(columnGroup) {\n    const allColumnsOriginalOrder = columnGroup.getProvidedColumnGroup().getLeafColumns();\n    const visibleState = {};\n    allColumnsOriginalOrder.forEach(column => visibleState[column.getId()] = column.isVisible());\n    const allColumnsCurrentOrder = [];\n    this.beans.visibleColsService.getAllCols().forEach(column => {\n      if (allColumnsOriginalOrder.indexOf(column) >= 0) {\n        allColumnsCurrentOrder.push(column);\n        _removeFromArray(allColumnsOriginalOrder, column);\n      }\n    });\n    allColumnsOriginalOrder.forEach(column => allColumnsCurrentOrder.push(column));\n    return {\n      columns: allColumnsCurrentOrder,\n      visibleState\n    };\n  }\n  isSuppressMoving() {\n    let childSuppressesMoving = false;\n    this.column.getLeafColumns().forEach(column => {\n      if (column.getColDef().suppressMovable || column.getColDef().lockPosition) {\n        childSuppressesMoving = true;\n      }\n    });\n    const result = childSuppressesMoving || this.gos.get(\"suppressMovableColumns\");\n    return result;\n  }\n};\n\n// community-modules/core/src/headerRendering/row/headerRowCtrl.ts\nvar instanceIdSequence3 = 0;\nvar HeaderRowCtrl = class extends BeanStub {\n  constructor(rowIndex, pinned, type) {\n    super();\n    this.instanceId = instanceIdSequence3++;\n    this.rowIndex = rowIndex;\n    this.pinned = pinned;\n    this.type = type;\n    const typeClass = type == \"group\" /* COLUMN_GROUP */ ? `ag-header-row-column-group` : type == \"filter\" /* FLOATING_FILTER */ ? `ag-header-row-column-filter` : `ag-header-row-column`;\n    this.headerRowClass = `ag-header-row ${typeClass}`;\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.isPrintLayout = this.gos.isDomLayout(\"print\");\n    this.isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  /** Checks that every header cell that is currently visible has been rendered.\n   * Can only be false under some circumstances when using React\n   */\n  areCellsRendered() {\n    if (!this.comp) {\n      return false;\n    }\n    return this.getHeaderCellCtrls().every(ctrl => ctrl.getGui() != null);\n  }\n  /**\n   *\n   * @param comp Proxy to the actual component\n   * @param initCompState Should the component be initialised with the current state of the controller. Default: true\n   */\n  setComp(comp, initCompState = true) {\n    this.comp = comp;\n    if (initCompState) {\n      this.onRowHeightChanged();\n      this.onVirtualColumnsChanged();\n    }\n    this.setWidth();\n    this.addEventListeners();\n  }\n  getHeaderRowClass() {\n    return this.headerRowClass;\n  }\n  getAriaRowIndex() {\n    return this.rowIndex + 1;\n  }\n  addEventListeners() {\n    const onHeightChanged = this.onRowHeightChanged.bind(this);\n    this.addManagedEventListeners({\n      columnResized: this.onColumnResized.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      virtualColumnsChanged: params => this.onVirtualColumnsChanged(params.afterScroll),\n      columnHeaderHeightChanged: onHeightChanged,\n      gridStylesChanged: onHeightChanged,\n      advancedFilterEnabledChanged: onHeightChanged\n    });\n    this.addManagedPropertyListener(\"domLayout\", this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedPropertyListener(\"ensureDomOrder\", e => this.isEnsureDomOrder = e.currentValue);\n    this.addManagedPropertyListeners([\"headerHeight\", \"pivotHeaderHeight\", \"groupHeaderHeight\", \"pivotGroupHeaderHeight\", \"floatingFiltersHeight\"], onHeightChanged);\n  }\n  getHeaderCellCtrl(column) {\n    if (!this.headerCellCtrls) {\n      return;\n    }\n    return _values(this.headerCellCtrls).find(cellCtrl => cellCtrl.getColumnGroupChild() === column);\n  }\n  onDisplayedColumnsChanged() {\n    this.isPrintLayout = this.gos.isDomLayout(\"print\");\n    this.onVirtualColumnsChanged();\n    this.setWidth();\n    this.onRowHeightChanged();\n  }\n  getType() {\n    return this.type;\n  }\n  onColumnResized() {\n    this.setWidth();\n  }\n  setWidth() {\n    const width = this.getWidthForRow();\n    this.comp.setWidth(`${width}px`);\n  }\n  getWidthForRow() {\n    const {\n      visibleColsService: presentedColsService\n    } = this.beans;\n    if (this.isPrintLayout) {\n      const pinned = this.pinned != null;\n      if (pinned) {\n        return 0;\n      }\n      return presentedColsService.getContainerWidth(\"right\") + presentedColsService.getContainerWidth(\"left\") + presentedColsService.getContainerWidth(null);\n    }\n    return presentedColsService.getContainerWidth(this.pinned);\n  }\n  onRowHeightChanged() {\n    const {\n      topOffset,\n      rowHeight\n    } = this.getTopAndHeight();\n    this.comp.setTop(topOffset + \"px\");\n    this.comp.setHeight(rowHeight + \"px\");\n  }\n  getTopAndHeight() {\n    const {\n      columnModel,\n      filterManager\n    } = this.beans;\n    let headerRowCount = columnModel.getHeaderRowCount();\n    const sizes = [];\n    let numberOfFloating = 0;\n    if (filterManager?.hasFloatingFilters()) {\n      headerRowCount++;\n      numberOfFloating = 1;\n    }\n    const groupHeight = columnModel.getColumnGroupHeaderRowHeight();\n    const headerHeight = columnModel.getColumnHeaderRowHeight();\n    const numberOfNonGroups = 1 + numberOfFloating;\n    const numberOfGroups = headerRowCount - numberOfNonGroups;\n    for (let i = 0; i < numberOfGroups; i++) {\n      sizes.push(groupHeight);\n    }\n    sizes.push(headerHeight);\n    for (let i = 0; i < numberOfFloating; i++) {\n      sizes.push(columnModel.getFloatingFiltersHeight());\n    }\n    let topOffset = 0;\n    for (let i = 0; i < this.rowIndex; i++) {\n      topOffset += sizes[i];\n    }\n    const rowHeight = sizes[this.rowIndex];\n    return {\n      topOffset,\n      rowHeight\n    };\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  getRowIndex() {\n    return this.rowIndex;\n  }\n  onVirtualColumnsChanged(afterScroll = false) {\n    const ctrlsToDisplay = this.getHeaderCtrls();\n    const forceOrder = this.isEnsureDomOrder || this.isPrintLayout;\n    this.comp.setHeaderCtrls(ctrlsToDisplay, forceOrder, afterScroll);\n  }\n  getHeaderCtrls() {\n    const oldCtrls = this.headerCellCtrls;\n    this.headerCellCtrls = /* @__PURE__ */new Map();\n    const columns = this.getColumnsInViewport();\n    for (const child of columns) {\n      this.recycleAndCreateHeaderCtrls(child, oldCtrls);\n    }\n    const isFocusedAndDisplayed = ctrl => {\n      const {\n        focusService,\n        visibleColsService\n      } = this.beans;\n      const isFocused = focusService.isHeaderWrapperFocused(ctrl);\n      if (!isFocused) {\n        return false;\n      }\n      const isDisplayed = visibleColsService.isVisible(ctrl.getColumnGroupChild());\n      return isDisplayed;\n    };\n    if (oldCtrls) {\n      for (const [id, oldCtrl] of oldCtrls) {\n        const keepCtrl = isFocusedAndDisplayed(oldCtrl);\n        if (keepCtrl) {\n          this.headerCellCtrls.set(id, oldCtrl);\n        } else {\n          this.destroyBean(oldCtrl);\n        }\n      }\n    }\n    return this.getHeaderCellCtrls();\n  }\n  getHeaderCellCtrls() {\n    return Array.from(this.headerCellCtrls?.values() ?? []);\n  }\n  recycleAndCreateHeaderCtrls(headerColumn, oldCtrls) {\n    if (!this.headerCellCtrls) {\n      return;\n    }\n    if (headerColumn.isEmptyGroup()) {\n      return;\n    }\n    const idOfChild = headerColumn.getUniqueId();\n    let headerCtrl;\n    if (oldCtrls) {\n      headerCtrl = oldCtrls.get(idOfChild);\n      oldCtrls.delete(idOfChild);\n    }\n    const forOldColumn = headerCtrl && headerCtrl.getColumnGroupChild() != headerColumn;\n    if (forOldColumn) {\n      this.destroyBean(headerCtrl);\n      headerCtrl = void 0;\n    }\n    if (headerCtrl == null) {\n      switch (this.type) {\n        case \"filter\" /* FLOATING_FILTER */:\n          {\n            headerCtrl = this.createBean(this.beans.ctrlsFactory.getInstance(\"headerFilterCell\", headerColumn, this.beans, this));\n            break;\n          }\n        case \"group\" /* COLUMN_GROUP */:\n          headerCtrl = this.createBean(new HeaderGroupCellCtrl(headerColumn, this.beans, this));\n          break;\n        default:\n          headerCtrl = this.createBean(new HeaderCellCtrl(headerColumn, this.beans, this));\n          break;\n      }\n    }\n    this.headerCellCtrls.set(idOfChild, headerCtrl);\n  }\n  getColumnsInViewport() {\n    return this.isPrintLayout ? this.getColumnsInViewportPrintLayout() : this.getColumnsInViewportNormalLayout();\n  }\n  getColumnsInViewportPrintLayout() {\n    if (this.pinned != null) {\n      return [];\n    }\n    let viewportColumns = [];\n    const actualDepth = this.getActualDepth();\n    const {\n      columnViewportService\n    } = this.beans;\n    [\"left\", null, \"right\"].forEach(pinned => {\n      const items = columnViewportService.getHeadersToRender(pinned, actualDepth);\n      viewportColumns = viewportColumns.concat(items);\n    });\n    return viewportColumns;\n  }\n  getActualDepth() {\n    return this.type == \"filter\" /* FLOATING_FILTER */ ? this.rowIndex - 1 : this.rowIndex;\n  }\n  getColumnsInViewportNormalLayout() {\n    return this.beans.columnViewportService.getHeadersToRender(this.pinned, this.getActualDepth());\n  }\n  findHeaderCellCtrl(column) {\n    if (!this.headerCellCtrls) {\n      return;\n    }\n    const allCtrls = this.getHeaderCellCtrls();\n    const ctrl = allCtrls.find(ctrl2 => ctrl2.getColumnGroupChild() == column);\n    return ctrl;\n  }\n  focusHeader(column, event) {\n    const ctrl = this.findHeaderCellCtrl(column);\n    if (!ctrl) {\n      return false;\n    }\n    const focused = ctrl.focus(event);\n    return focused;\n  }\n  destroy() {\n    if (this.headerCellCtrls) {\n      this.headerCellCtrls.forEach(ctrl => {\n        this.destroyBean(ctrl);\n      });\n    }\n    this.headerCellCtrls = void 0;\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/headerRendering/rowContainer/headerRowContainerCtrl.ts\nvar HeaderRowContainerCtrl = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.hidden = false;\n    this.includeFloatingFilter = false;\n    this.groupsRowCtrls = [];\n    this.pinned = pinned;\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n    this.pinnedWidthService = beans.pinnedWidthService;\n    this.columnModel = beans.columnModel;\n    this.focusService = beans.focusService;\n    this.filterManager = beans.filterManager;\n  }\n  setComp(comp, eGui) {\n    this.comp = comp;\n    this.eViewport = eGui;\n    this.setupCenterWidth();\n    this.setupPinnedWidth();\n    this.setupDragAndDrop(this.eViewport);\n    const onDisplayedColsChanged = this.onDisplayedColumnsChanged.bind(this);\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.onGridColumnsChanged.bind(this),\n      displayedColumnsChanged: onDisplayedColsChanged,\n      advancedFilterEnabledChanged: onDisplayedColsChanged\n    });\n    this.ctrlsService.registerHeaderContainer(this, this.pinned);\n    if (this.columnModel.isReady()) {\n      this.refresh();\n    }\n  }\n  getAllCtrls() {\n    const res = [...this.groupsRowCtrls];\n    if (this.columnsRowCtrl) {\n      res.push(this.columnsRowCtrl);\n    }\n    if (this.filtersRowCtrl) {\n      res.push(this.filtersRowCtrl);\n    }\n    return res;\n  }\n  refresh(keepColumns = false) {\n    const sequence = new NumberSequence();\n    const focusedHeaderPosition = this.focusService.getFocusHeaderToUseAfterRefresh();\n    const refreshColumnGroups = () => {\n      const groupRowCount = this.columnModel.getHeaderRowCount() - 1;\n      this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls);\n      for (let i = 0; i < groupRowCount; i++) {\n        const ctrl = this.createBean(new HeaderRowCtrl(sequence.next(), this.pinned, \"group\" /* COLUMN_GROUP */));\n        this.groupsRowCtrls.push(ctrl);\n      }\n    };\n    const refreshColumns = () => {\n      const rowIndex = sequence.next();\n      const needNewInstance = !this.hidden && (this.columnsRowCtrl == null || !keepColumns || this.columnsRowCtrl.getRowIndex() !== rowIndex);\n      const shouldDestroyInstance = needNewInstance || this.hidden;\n      if (shouldDestroyInstance) {\n        this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\n      }\n      if (needNewInstance) {\n        this.columnsRowCtrl = this.createBean(new HeaderRowCtrl(rowIndex, this.pinned, \"column\" /* COLUMN */));\n      }\n    };\n    const refreshFilters = () => {\n      this.includeFloatingFilter = !!this.filterManager?.hasFloatingFilters() && !this.hidden;\n      const destroyPreviousComp = () => {\n        this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\n      };\n      if (!this.includeFloatingFilter) {\n        destroyPreviousComp();\n        return;\n      }\n      const rowIndex = sequence.next();\n      if (this.filtersRowCtrl) {\n        const rowIndexMismatch = this.filtersRowCtrl.getRowIndex() !== rowIndex;\n        if (!keepColumns || rowIndexMismatch) {\n          destroyPreviousComp();\n        }\n      }\n      if (!this.filtersRowCtrl) {\n        this.filtersRowCtrl = this.createBean(new HeaderRowCtrl(rowIndex, this.pinned, \"filter\" /* FLOATING_FILTER */));\n      }\n    };\n    refreshColumnGroups();\n    refreshColumns();\n    refreshFilters();\n    const allCtrls = this.getAllCtrls();\n    this.comp.setCtrls(allCtrls);\n    this.restoreFocusOnHeader(focusedHeaderPosition);\n  }\n  getHeaderCtrlForColumn(column) {\n    if (isColumn(column)) {\n      if (!this.columnsRowCtrl) {\n        return;\n      }\n      return this.columnsRowCtrl.getHeaderCellCtrl(column);\n    }\n    if (this.groupsRowCtrls.length === 0) {\n      return;\n    }\n    for (let i = 0; i < this.groupsRowCtrls.length; i++) {\n      const ctrl = this.groupsRowCtrls[i].getHeaderCellCtrl(column);\n      if (ctrl) {\n        return ctrl;\n      }\n    }\n  }\n  getHtmlElementForColumnHeader(column) {\n    const cellCtrl = this.getHeaderCtrlForColumn(column);\n    if (!cellCtrl) {\n      return null;\n    }\n    return cellCtrl.getGui();\n  }\n  getRowType(rowIndex) {\n    const allCtrls = this.getAllCtrls();\n    const ctrl = allCtrls[rowIndex];\n    return ctrl ? ctrl.getType() : void 0;\n  }\n  focusHeader(rowIndex, column, event) {\n    const allCtrls = this.getAllCtrls();\n    const ctrl = allCtrls[rowIndex];\n    if (!ctrl) {\n      return false;\n    }\n    return ctrl.focusHeader(column, event);\n  }\n  getViewport() {\n    return this.eViewport;\n  }\n  getRowCount() {\n    return this.groupsRowCtrls.length + (this.columnsRowCtrl ? 1 : 0) + (this.filtersRowCtrl ? 1 : 0);\n  }\n  setHorizontalScroll(offset) {\n    this.comp.setViewportScrollLeft(offset);\n  }\n  destroy() {\n    if (this.filtersRowCtrl) {\n      this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\n    }\n    if (this.columnsRowCtrl) {\n      this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\n    }\n    if (this.groupsRowCtrls && this.groupsRowCtrls.length) {\n      this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls);\n    }\n    super.destroy();\n  }\n  setupDragAndDrop(dropContainer) {\n    const bodyDropTarget = new BodyDropTarget(this.pinned, dropContainer);\n    this.createManagedBean(bodyDropTarget);\n  }\n  restoreFocusOnHeader(position) {\n    if (!position) {\n      return;\n    }\n    const {\n      column\n    } = position;\n    if (column.getPinned() != this.pinned) {\n      return;\n    }\n    this.focusService.focusHeaderPosition({\n      headerPosition: position\n    });\n  }\n  // grid cols have changed - this also means the number of rows in the header can have\n  // changed. so we remove all the old rows and insert new ones for a complete refresh\n  onGridColumnsChanged() {\n    this.refresh(true);\n  }\n  onDisplayedColumnsChanged() {\n    const includeFloatingFilter = this.filterManager?.hasFloatingFilters() && !this.hidden;\n    if (this.includeFloatingFilter !== includeFloatingFilter) {\n      this.refresh(true);\n    }\n  }\n  setupCenterWidth() {\n    if (this.pinned != null) {\n      return;\n    }\n    this.createManagedBean(new CenterWidthFeature(width => this.comp.setCenterWidth(`${width}px`), true));\n  }\n  setupPinnedWidth() {\n    if (this.pinned == null) {\n      return;\n    }\n    const pinningLeft = this.pinned === \"left\";\n    const pinningRight = this.pinned === \"right\";\n    this.hidden = true;\n    const listener = () => {\n      const width = pinningLeft ? this.pinnedWidthService.getPinnedLeftWidth() : this.pinnedWidthService.getPinnedRightWidth();\n      if (width == null) {\n        return;\n      }\n      const hidden = width == 0;\n      const hiddenChanged = this.hidden !== hidden;\n      const isRtl = this.gos.get(\"enableRtl\");\n      const scrollbarWidth = this.gos.getScrollbarWidth();\n      const addPaddingForScrollbar = this.scrollVisibleService.isVerticalScrollShowing() && (isRtl && pinningLeft || !isRtl && pinningRight);\n      const widthWithPadding = addPaddingForScrollbar ? width + scrollbarWidth : width;\n      this.comp.setPinnedContainerWidth(`${widthWithPadding}px`);\n      this.comp.setDisplayed(!hidden);\n      if (hiddenChanged) {\n        this.hidden = hidden;\n        this.refresh();\n      }\n    };\n    this.addManagedEventListeners({\n      leftPinnedWidthChanged: listener,\n      rightPinnedWidthChanged: listener,\n      scrollVisibilityChanged: listener,\n      scrollbarWidthChanged: listener\n    });\n  }\n};\n\n// community-modules/core/src/headerRendering/rowContainer/headerRowContainerComp.ts\nvar PINNED_LEFT_TEMPLATE = /* html */\n`<div class=\"ag-pinned-left-header\" role=\"rowgroup\"></div>`;\nvar PINNED_RIGHT_TEMPLATE = /* html */\n`<div class=\"ag-pinned-right-header\" role=\"rowgroup\"></div>`;\nvar CENTER_TEMPLATE = /* html */\n`<div class=\"ag-header-viewport\" role=\"presentation\">\n        <div class=\"ag-header-container\" data-ref=\"eCenterContainer\" role=\"rowgroup\"></div>\n    </div>`;\nvar HeaderRowContainerComp = class extends Component {\n  constructor(pinned) {\n    super();\n    this.eCenterContainer = RefPlaceholder;\n    this.headerRowComps = {};\n    this.rowCompsList = [];\n    this.pinned = pinned;\n  }\n  postConstruct() {\n    this.selectAndSetTemplate();\n    const compProxy = {\n      setDisplayed: displayed => this.setDisplayed(displayed),\n      setCtrls: ctrls => this.setCtrls(ctrls),\n      // only gets called for center section\n      setCenterWidth: width => this.eCenterContainer.style.width = width,\n      setViewportScrollLeft: left => this.getGui().scrollLeft = left,\n      // only gets called for pinned sections\n      setPinnedContainerWidth: width => {\n        const eGui = this.getGui();\n        eGui.style.width = width;\n        eGui.style.maxWidth = width;\n        eGui.style.minWidth = width;\n      }\n    };\n    const ctrl = this.createManagedBean(new HeaderRowContainerCtrl(this.pinned));\n    ctrl.setComp(compProxy, this.getGui());\n  }\n  selectAndSetTemplate() {\n    const pinnedLeft = this.pinned == \"left\";\n    const pinnedRight = this.pinned == \"right\";\n    const template = pinnedLeft ? PINNED_LEFT_TEMPLATE : pinnedRight ? PINNED_RIGHT_TEMPLATE : CENTER_TEMPLATE;\n    this.setTemplate(template);\n    this.eRowContainer = this.eCenterContainer !== RefPlaceholder ? this.eCenterContainer : this.getGui();\n  }\n  destroy() {\n    this.setCtrls([]);\n    super.destroy();\n  }\n  destroyRowComp(rowComp) {\n    this.destroyBean(rowComp);\n    this.eRowContainer.removeChild(rowComp.getGui());\n  }\n  setCtrls(ctrls) {\n    const oldRowComps = this.headerRowComps;\n    this.headerRowComps = {};\n    this.rowCompsList = [];\n    let prevGui;\n    const appendEnsuringDomOrder = rowComp => {\n      const eGui = rowComp.getGui();\n      const notAlreadyIn = eGui.parentElement != this.eRowContainer;\n      if (notAlreadyIn) {\n        this.eRowContainer.appendChild(eGui);\n      }\n      if (prevGui) {\n        _ensureDomOrder(this.eRowContainer, eGui, prevGui);\n      }\n      prevGui = eGui;\n    };\n    ctrls.forEach(ctrl => {\n      const ctrlId = ctrl.getInstanceId();\n      const existingComp = oldRowComps[ctrlId];\n      delete oldRowComps[ctrlId];\n      const rowComp = existingComp ? existingComp : this.createBean(new HeaderRowComp(ctrl));\n      this.headerRowComps[ctrlId] = rowComp;\n      this.rowCompsList.push(rowComp);\n      appendEnsuringDomOrder(rowComp);\n    });\n    _getAllValuesInObject(oldRowComps).forEach(c => this.destroyRowComp(c));\n  }\n};\n\n// community-modules/core/src/headerRendering/gridHeaderComp.ts\nvar GridHeaderComp = class extends Component {\n  constructor() {\n    super( /* html */\n    `<div class=\"ag-header\" role=\"presentation\"/>`);\n  }\n  postConstruct() {\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setHeightAndMinHeight: height => {\n        this.getGui().style.height = height;\n        this.getGui().style.minHeight = height;\n      }\n    };\n    const ctrl = this.createManagedBean(new GridHeaderCtrl());\n    ctrl.setComp(compProxy, this.getGui(), this.getFocusableElement());\n    const addContainer = container => {\n      this.createManagedBean(container);\n      this.appendChild(container);\n    };\n    addContainer(new HeaderRowContainerComp(\"left\"));\n    addContainer(new HeaderRowContainerComp(null));\n    addContainer(new HeaderRowContainerComp(\"right\"));\n  }\n};\nvar GridHeaderSelector = {\n  selector: \"AG-HEADER-ROOT\",\n  component: GridHeaderComp\n};\n\n// community-modules/core/src/styling/layoutFeature.ts\nvar LayoutCssClasses = /* @__PURE__ */(LayoutCssClasses2 => {\n  LayoutCssClasses2[\"AUTO_HEIGHT\"] = \"ag-layout-auto-height\";\n  LayoutCssClasses2[\"NORMAL\"] = \"ag-layout-normal\";\n  LayoutCssClasses2[\"PRINT\"] = \"ag-layout-print\";\n  return LayoutCssClasses2;\n})(LayoutCssClasses || {});\nvar LayoutFeature = class extends BeanStub {\n  constructor(view) {\n    super();\n    this.view = view;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"domLayout\", this.updateLayoutClasses.bind(this));\n    this.updateLayoutClasses();\n  }\n  updateLayoutClasses() {\n    const domLayout = this.getDomLayout();\n    const params = {\n      autoHeight: domLayout === \"autoHeight\",\n      normal: domLayout === \"normal\",\n      print: domLayout === \"print\"\n    };\n    const cssClass = params.autoHeight ? \"ag-layout-auto-height\" /* AUTO_HEIGHT */ : params.print ? \"ag-layout-print\" /* PRINT */ : \"ag-layout-normal\" /* NORMAL */;\n    this.view.updateLayoutClasses(cssClass, params);\n  }\n  // returns either 'print', 'autoHeight' or 'normal' (normal is the default)\n  getDomLayout() {\n    const domLayout = this.gos.get(\"domLayout\") ?? \"normal\";\n    const validLayouts = [\"normal\", \"print\", \"autoHeight\"];\n    if (validLayouts.indexOf(domLayout) === -1) {\n      _warnOnce(`${domLayout} is not valid for DOM Layout, valid values are 'normal', 'autoHeight', 'print'.`);\n      return \"normal\";\n    }\n    return domLayout;\n  }\n};\n\n// community-modules/core/src/rendering/overlays/overlayWrapperComponent.ts\nvar OverlayWrapperComponent = class extends Component {\n  constructor() {\n    super( /* html */\n    `\n            <div class=\"ag-overlay\" role=\"presentation\">\n                <div class=\"ag-overlay-panel\" role=\"presentation\">\n                    <div class=\"ag-overlay-wrapper\" data-ref=\"eOverlayWrapper\" role=\"presentation\"></div>\n                </div>\n            </div>`);\n    this.eOverlayWrapper = RefPlaceholder;\n    this.activePromise = null;\n    this.activeOverlay = null;\n    this.updateListenerDestroyFunc = null;\n    this.activeOverlayWrapperCssClass = null;\n  }\n  wireBeans(beans) {\n    this.overlayService = beans.overlayService;\n  }\n  updateLayoutClasses(cssClass, params) {\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\n    overlayWrapperClassList.toggle(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n    overlayWrapperClassList.toggle(\"ag-layout-normal\" /* NORMAL */, params.normal);\n    overlayWrapperClassList.toggle(\"ag-layout-print\" /* PRINT */, params.print);\n  }\n  postConstruct() {\n    this.createManagedBean(new LayoutFeature(this));\n    this.setDisplayed(false, {\n      skipAriaHidden: true\n    });\n    this.overlayService.registerOverlayWrapperComp(this);\n  }\n  setWrapperTypeClass(overlayWrapperCssClass) {\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\n    if (this.activeOverlayWrapperCssClass) {\n      overlayWrapperClassList.toggle(this.activeOverlayWrapperCssClass, false);\n    }\n    this.activeOverlayWrapperCssClass = overlayWrapperCssClass;\n    overlayWrapperClassList.toggle(overlayWrapperCssClass, true);\n  }\n  showOverlay(overlayComponentPromise, overlayWrapperCssClass, gridOption) {\n    this.setWrapperTypeClass(overlayWrapperCssClass);\n    this.destroyActiveOverlay();\n    this.activePromise = overlayComponentPromise;\n    overlayComponentPromise?.then(comp => {\n      if (this.activePromise !== overlayComponentPromise) {\n        if (this.activeOverlay !== comp) {\n          this.destroyBean(comp);\n          comp = null;\n        }\n        return;\n      }\n      this.activePromise = null;\n      if (!comp) {\n        return;\n      }\n      if (this.activeOverlay == comp) {\n        return;\n      }\n      this.eOverlayWrapper.appendChild(comp.getGui());\n      this.activeOverlay = comp;\n      if (gridOption) {\n        const component = comp;\n        this.updateListenerDestroyFunc = this.addManagedPropertyListener(gridOption, ({\n          currentValue\n        }) => {\n          component.refresh?.(this.gos.addGridCommonParams({\n            ...(currentValue ?? {})\n          }));\n        });\n      }\n    });\n    this.setDisplayed(true, {\n      skipAriaHidden: true\n    });\n  }\n  destroyActiveOverlay() {\n    this.activePromise = null;\n    const activeOverlay = this.activeOverlay;\n    if (!activeOverlay) {\n      return;\n    }\n    this.activeOverlay = null;\n    const updateListenerDestroyFunc = this.updateListenerDestroyFunc;\n    if (updateListenerDestroyFunc) {\n      updateListenerDestroyFunc();\n      this.updateListenerDestroyFunc = null;\n    }\n    this.destroyBean(activeOverlay);\n    _clearElement(this.eOverlayWrapper);\n  }\n  hideOverlay() {\n    this.destroyActiveOverlay();\n    this.setDisplayed(false, {\n      skipAriaHidden: true\n    });\n  }\n  destroy() {\n    this.destroyActiveOverlay();\n    super.destroy();\n  }\n};\nvar OverlayWrapperSelector = {\n  selector: \"AG-OVERLAY-WRAPPER\",\n  component: OverlayWrapperComponent\n};\n\n// community-modules/core/src/gridBodyComp/abstractFakeScrollComp.ts\nvar AbstractFakeScrollComp = class extends Component {\n  constructor(template, direction) {\n    super();\n    this.direction = direction;\n    this.eViewport = RefPlaceholder;\n    this.eContainer = RefPlaceholder;\n    this.hideTimeout = null;\n    this.setTemplate(template);\n  }\n  wireBeans(beans) {\n    this.animationFrameService = beans.animationFrameService;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      scrollVisibilityChanged: this.onScrollVisibilityChanged.bind(this)\n    });\n    this.onScrollVisibilityChanged();\n    this.addOrRemoveCssClass(\"ag-apple-scrollbar\", _isMacOsUserAgent() || _isIOSUserAgent());\n  }\n  initialiseInvisibleScrollbar() {\n    if (this.invisibleScrollbar !== void 0) {\n      return;\n    }\n    this.invisibleScrollbar = _isInvisibleScrollbar();\n    if (this.invisibleScrollbar) {\n      this.hideAndShowInvisibleScrollAsNeeded();\n      this.addActiveListenerToggles();\n    }\n  }\n  addActiveListenerToggles() {\n    const eGui = this.getGui();\n    const onActivate = () => this.addOrRemoveCssClass(\"ag-scrollbar-active\", true);\n    const onDeactivate = () => this.addOrRemoveCssClass(\"ag-scrollbar-active\", false);\n    this.addManagedListeners(eGui, {\n      mouseenter: onActivate,\n      mousedown: onActivate,\n      touchstart: onActivate,\n      mouseleave: onDeactivate,\n      touchend: onDeactivate\n    });\n  }\n  onScrollVisibilityChanged() {\n    if (this.invisibleScrollbar === void 0) {\n      this.initialiseInvisibleScrollbar();\n    }\n    this.animationFrameService.requestAnimationFrame(() => this.setScrollVisible());\n  }\n  hideAndShowInvisibleScrollAsNeeded() {\n    this.addManagedEventListeners({\n      bodyScroll: params => {\n        if (params.direction === this.direction) {\n          if (this.hideTimeout !== null) {\n            window.clearTimeout(this.hideTimeout);\n            this.hideTimeout = null;\n          }\n          this.addOrRemoveCssClass(\"ag-scrollbar-scrolling\", true);\n        }\n      },\n      bodyScrollEnd: () => {\n        this.hideTimeout = window.setTimeout(() => {\n          this.addOrRemoveCssClass(\"ag-scrollbar-scrolling\", false);\n          this.hideTimeout = null;\n        }, 400);\n      }\n    });\n  }\n  attemptSettingScrollPosition(value) {\n    const viewport = this.getViewport();\n    _waitUntil(() => _isVisible(viewport), () => this.setScrollPosition(value), 100);\n  }\n  getViewport() {\n    return this.eViewport;\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  onScrollCallback(fn) {\n    this.addManagedElementListeners(this.getViewport(), {\n      scroll: fn\n    });\n  }\n};\n\n// community-modules/core/src/gridBodyComp/fakeHScrollComp.ts\nvar FakeHScrollComp = class extends AbstractFakeScrollComp {\n  constructor() {\n    super( /* html */\n    `<div class=\"ag-body-horizontal-scroll\" aria-hidden=\"true\">\n            <div class=\"ag-horizontal-left-spacer\" data-ref=\"eLeftSpacer\"></div>\n            <div class=\"ag-body-horizontal-scroll-viewport\" data-ref=\"eViewport\">\n                <div class=\"ag-body-horizontal-scroll-container\" data-ref=\"eContainer\"></div>\n            </div>\n            <div class=\"ag-horizontal-right-spacer\" data-ref=\"eRightSpacer\"></div>\n        </div>`, \"horizontal\");\n    this.eLeftSpacer = RefPlaceholder;\n    this.eRightSpacer = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    super.wireBeans(beans);\n    this.visibleColsService = beans.visibleColsService;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.ctrlsService = beans.ctrlsService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const spacerWidthsListener = this.setFakeHScrollSpacerWidths.bind(this);\n    this.addManagedEventListeners({\n      displayedColumnsChanged: spacerWidthsListener,\n      displayedColumnsWidthChanged: spacerWidthsListener,\n      pinnedRowDataChanged: this.onPinnedRowDataChanged.bind(this)\n    });\n    this.addManagedPropertyListener(\"domLayout\", spacerWidthsListener);\n    this.ctrlsService.register(\"fakeHScrollComp\", this);\n    this.createManagedBean(new CenterWidthFeature(width => this.eContainer.style.width = `${width}px`));\n    this.addManagedPropertyListeners([\"suppressHorizontalScroll\"], this.onScrollVisibilityChanged.bind(this));\n  }\n  initialiseInvisibleScrollbar() {\n    if (this.invisibleScrollbar !== void 0) {\n      return;\n    }\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    super.initialiseInvisibleScrollbar();\n    if (this.invisibleScrollbar) {\n      this.refreshCompBottom();\n    }\n  }\n  onPinnedRowDataChanged() {\n    this.refreshCompBottom();\n  }\n  refreshCompBottom() {\n    if (!this.invisibleScrollbar) {\n      return;\n    }\n    const bottomPinnedHeight = this.pinnedRowModel.getPinnedBottomTotalHeight();\n    this.getGui().style.bottom = `${bottomPinnedHeight}px`;\n  }\n  onScrollVisibilityChanged() {\n    super.onScrollVisibilityChanged();\n    this.setFakeHScrollSpacerWidths();\n  }\n  setFakeHScrollSpacerWidths() {\n    const vScrollShowing = this.scrollVisibleService.isVerticalScrollShowing();\n    let rightSpacing = this.visibleColsService.getDisplayedColumnsRightWidth();\n    const scrollOnRight = !this.enableRtl && vScrollShowing;\n    const scrollbarWidth = this.gos.getScrollbarWidth();\n    if (scrollOnRight) {\n      rightSpacing += scrollbarWidth;\n    }\n    _setFixedWidth(this.eRightSpacer, rightSpacing);\n    this.eRightSpacer.classList.toggle(\"ag-scroller-corner\", rightSpacing <= scrollbarWidth);\n    let leftSpacing = this.visibleColsService.getColsLeftWidth();\n    const scrollOnLeft = this.enableRtl && vScrollShowing;\n    if (scrollOnLeft) {\n      leftSpacing += scrollbarWidth;\n    }\n    _setFixedWidth(this.eLeftSpacer, leftSpacing);\n    this.eLeftSpacer.classList.toggle(\"ag-scroller-corner\", leftSpacing <= scrollbarWidth);\n  }\n  setScrollVisible() {\n    const hScrollShowing = this.scrollVisibleService.isHorizontalScrollShowing();\n    const invisibleScrollbar2 = this.invisibleScrollbar;\n    const isSuppressHorizontalScroll = this.gos.get(\"suppressHorizontalScroll\");\n    const scrollbarWidth = hScrollShowing ? this.gos.getScrollbarWidth() || 0 : 0;\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\n    const scrollContainerSize = !isSuppressHorizontalScroll ? adjustedScrollbarWidth : 0;\n    this.addOrRemoveCssClass(\"ag-scrollbar-invisible\", invisibleScrollbar2);\n    _setFixedHeight(this.getGui(), scrollContainerSize);\n    _setFixedHeight(this.eViewport, scrollContainerSize);\n    _setFixedHeight(this.eContainer, scrollContainerSize);\n    this.setDisplayed(hScrollShowing, {\n      skipAriaHidden: true\n    });\n  }\n  getScrollPosition() {\n    return _getScrollLeft(this.getViewport(), this.enableRtl);\n  }\n  setScrollPosition(value) {\n    if (!_isVisible(this.getViewport())) {\n      this.attemptSettingScrollPosition(value);\n    }\n    _setScrollLeft(this.getViewport(), value, this.enableRtl);\n  }\n};\nvar FakeHScrollSelector = {\n  selector: \"AG-FAKE-HORIZONTAL-SCROLL\",\n  component: FakeHScrollComp\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/setHeightFeature.ts\nvar SetHeightFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.maxDivHeightScaler = beans.rowContainerHeightService;\n  }\n  constructor(eContainer, eViewport) {\n    super();\n    this.eContainer = eContainer;\n    this.eViewport = eViewport;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      rowContainerHeightChanged: this.onHeightChanged.bind(this)\n    });\n  }\n  onHeightChanged() {\n    const height = this.maxDivHeightScaler.getUiContainerHeight();\n    const heightString = height != null ? `${height}px` : ``;\n    this.eContainer.style.height = heightString;\n    if (this.eViewport) {\n      this.eViewport.style.height = heightString;\n    }\n  }\n};\n\n// community-modules/core/src/gridBodyComp/fakeVScrollComp.ts\nvar FakeVScrollComp = class extends AbstractFakeScrollComp {\n  wireBeans(beans) {\n    super.wireBeans(beans);\n    this.ctrlsService = beans.ctrlsService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n  }\n  constructor() {\n    super( /* html */\n    `<div class=\"ag-body-vertical-scroll\" aria-hidden=\"true\">\n            <div class=\"ag-body-vertical-scroll-viewport\" data-ref=\"eViewport\">\n                <div class=\"ag-body-vertical-scroll-container\" data-ref=\"eContainer\"></div>\n            </div>\n        </div>`, \"vertical\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.createManagedBean(new SetHeightFeature(this.eContainer));\n    this.ctrlsService.register(\"fakeVScrollComp\", this);\n    this.addManagedEventListeners({\n      rowContainerHeightChanged: this.onRowContainerHeightChanged.bind(this)\n    });\n  }\n  setScrollVisible() {\n    const vScrollShowing = this.scrollVisibleService.isVerticalScrollShowing();\n    const invisibleScrollbar2 = this.invisibleScrollbar;\n    const scrollbarWidth = vScrollShowing ? this.gos.getScrollbarWidth() || 0 : 0;\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\n    this.addOrRemoveCssClass(\"ag-scrollbar-invisible\", invisibleScrollbar2);\n    _setFixedWidth(this.getGui(), adjustedScrollbarWidth);\n    _setFixedWidth(this.eViewport, adjustedScrollbarWidth);\n    _setFixedWidth(this.eContainer, adjustedScrollbarWidth);\n    this.setDisplayed(vScrollShowing, {\n      skipAriaHidden: true\n    });\n  }\n  onRowContainerHeightChanged() {\n    const {\n      ctrlsService\n    } = this;\n    const gridBodyCtrl = ctrlsService.getGridBodyCtrl();\n    const gridBodyViewportEl = gridBodyCtrl.getBodyViewportElement();\n    const eViewportScrollTop = this.getScrollPosition();\n    const gridBodyViewportScrollTop = gridBodyViewportEl.scrollTop;\n    if (eViewportScrollTop != gridBodyViewportScrollTop) {\n      this.setScrollPosition(gridBodyViewportScrollTop, true);\n    }\n  }\n  getScrollPosition() {\n    return this.getViewport().scrollTop;\n  }\n  setScrollPosition(value, force) {\n    if (!force && !_isVisible(this.getViewport())) {\n      this.attemptSettingScrollPosition(value);\n    }\n    this.getViewport().scrollTop = value;\n  }\n};\nvar FakeVScrollSelector = {\n  selector: \"AG-FAKE-VERTICAL-SCROLL\",\n  component: FakeVScrollComp\n};\n\n// community-modules/core/src/gridBodyComp/gridBodyScrollFeature.ts\nvar GridBodyScrollFeature = class extends BeanStub {\n  constructor(eBodyViewport) {\n    super();\n    this.lastScrollSource = [null, null];\n    this.scrollLeft = -1;\n    this.nextScrollTop = -1;\n    this.scrollTop = -1;\n    // Used to provide approximate values of scrollTop and offsetHeight\n    // without forcing the browser to recalculate styles.\n    this.lastOffsetHeight = -1;\n    this.lastScrollTop = -1;\n    this.eBodyViewport = eBodyViewport;\n    this.resetLastHScrollDebounced = _debounce(() => this.lastScrollSource[1 /* Horizontal */] = null, 500);\n    this.resetLastVScrollDebounced = _debounce(() => this.lastScrollSource[0 /* Vertical */] = null, 500);\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.animationFrameService = beans.animationFrameService;\n    this.paginationService = beans.paginationService;\n    this.pageBoundsService = beans.pageBoundsService;\n    this.rowModel = beans.rowModel;\n    this.heightScaler = beans.rowContainerHeightService;\n    this.rowRenderer = beans.rowRenderer;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  postConstruct() {\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    this.addManagedEventListeners({\n      displayedColumnsWidthChanged: this.onDisplayedColumnsWidthChanged.bind(this)\n    });\n    this.ctrlsService.whenReady(p => {\n      this.centerRowsCtrl = p.center;\n      this.onDisplayedColumnsWidthChanged();\n      this.addScrollListener();\n    });\n  }\n  addScrollListener() {\n    const {\n      fakeHScrollComp,\n      fakeVScrollComp\n    } = this.ctrlsService.getParams();\n    this.addManagedElementListeners(this.centerRowsCtrl.getViewportElement(), {\n      scroll: this.onHScroll.bind(this)\n    });\n    fakeHScrollComp.onScrollCallback(this.onFakeHScroll.bind(this));\n    const isDebounce = this.gos.get(\"debounceVerticalScrollbar\");\n    const onVScroll = isDebounce ? _debounce(this.onVScroll.bind(this), 100) : this.onVScroll.bind(this);\n    const onFakeVScroll = isDebounce ? _debounce(this.onFakeVScroll.bind(this), 100) : this.onFakeVScroll.bind(this);\n    this.addManagedElementListeners(this.eBodyViewport, {\n      scroll: onVScroll\n    });\n    fakeVScrollComp.onScrollCallback(onFakeVScroll);\n  }\n  onDisplayedColumnsWidthChanged() {\n    if (this.enableRtl) {\n      this.horizontallyScrollHeaderCenterAndFloatingCenter();\n    }\n  }\n  horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft) {\n    const notYetInitialised = this.centerRowsCtrl == null;\n    if (notYetInitialised) {\n      return;\n    }\n    if (scrollLeft === void 0) {\n      scrollLeft = this.centerRowsCtrl.getCenterViewportScrollLeft();\n    }\n    const offset = this.enableRtl ? scrollLeft : -scrollLeft;\n    const {\n      topCenter,\n      stickyTopCenter,\n      stickyBottomCenter,\n      centerHeader,\n      bottomCenter,\n      fakeHScrollComp\n    } = this.ctrlsService.getParams();\n    centerHeader.setHorizontalScroll(-offset);\n    bottomCenter.setContainerTranslateX(offset);\n    topCenter.setContainerTranslateX(offset);\n    stickyTopCenter.setContainerTranslateX(offset);\n    stickyBottomCenter.setContainerTranslateX(offset);\n    const centerViewport = this.centerRowsCtrl.getViewportElement();\n    const isCenterViewportLastHorizontal = this.lastScrollSource[1 /* Horizontal */] === 0 /* Container */;\n    scrollLeft = Math.abs(scrollLeft);\n    if (isCenterViewportLastHorizontal) {\n      fakeHScrollComp.setScrollPosition(scrollLeft);\n    } else {\n      _setScrollLeft(centerViewport, scrollLeft, this.enableRtl);\n    }\n  }\n  isControllingScroll(source, direction) {\n    if (this.lastScrollSource[direction] == null) {\n      this.lastScrollSource[direction] = source;\n      return true;\n    }\n    return this.lastScrollSource[direction] === source;\n  }\n  onFakeHScroll() {\n    if (!this.isControllingScroll(1 /* FakeContainer */, 1 /* Horizontal */)) {\n      return;\n    }\n    this.onHScrollCommon(1 /* FakeContainer */);\n  }\n  onHScroll() {\n    if (!this.isControllingScroll(0 /* Container */, 1 /* Horizontal */)) {\n      return;\n    }\n    this.onHScrollCommon(0 /* Container */);\n  }\n  onHScrollCommon(source) {\n    const centerContainerViewport = this.centerRowsCtrl.getViewportElement();\n    const {\n      scrollLeft\n    } = centerContainerViewport;\n    if (this.shouldBlockScrollUpdate(1 /* Horizontal */, scrollLeft, true)) {\n      return;\n    }\n    let newScrollLeft;\n    if (source === 0 /* Container */) {\n      newScrollLeft = _getScrollLeft(centerContainerViewport, this.enableRtl);\n    } else {\n      newScrollLeft = this.ctrlsService.get(\"fakeHScrollComp\").getScrollPosition();\n    }\n    this.doHorizontalScroll(Math.round(newScrollLeft));\n    this.resetLastHScrollDebounced();\n  }\n  onFakeVScroll() {\n    if (!this.isControllingScroll(1 /* FakeContainer */, 0 /* Vertical */)) {\n      return;\n    }\n    this.onVScrollCommon(1 /* FakeContainer */);\n  }\n  onVScroll() {\n    if (!this.isControllingScroll(0 /* Container */, 0 /* Vertical */)) {\n      return;\n    }\n    this.onVScrollCommon(0 /* Container */);\n  }\n  onVScrollCommon(source) {\n    let scrollTop;\n    if (source === 0 /* Container */) {\n      scrollTop = this.eBodyViewport.scrollTop;\n    } else {\n      scrollTop = this.ctrlsService.get(\"fakeVScrollComp\").getScrollPosition();\n    }\n    if (this.shouldBlockScrollUpdate(0 /* Vertical */, scrollTop, true)) {\n      return;\n    }\n    this.animationFrameService.setScrollTop(scrollTop);\n    this.nextScrollTop = scrollTop;\n    if (source === 0 /* Container */) {\n      this.ctrlsService.get(\"fakeVScrollComp\").setScrollPosition(scrollTop);\n    } else {\n      this.eBodyViewport.scrollTop = scrollTop;\n    }\n    if (this.gos.get(\"suppressAnimationFrame\")) {\n      this.scrollGridIfNeeded();\n    } else {\n      this.animationFrameService.schedule();\n    }\n    this.resetLastVScrollDebounced();\n  }\n  doHorizontalScroll(scrollLeft) {\n    const fakeScrollLeft = this.ctrlsService.get(\"fakeHScrollComp\").getScrollPosition();\n    if (this.scrollLeft === scrollLeft && scrollLeft === fakeScrollLeft) {\n      return;\n    }\n    this.scrollLeft = scrollLeft;\n    this.fireScrollEvent(1 /* Horizontal */);\n    this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\n    this.centerRowsCtrl.onHorizontalViewportChanged(true);\n  }\n  fireScrollEvent(direction) {\n    const bodyScrollEvent = {\n      type: \"bodyScroll\",\n      direction: direction === 1 /* Horizontal */ ? \"horizontal\" : \"vertical\",\n      left: this.scrollLeft,\n      top: this.scrollTop\n    };\n    this.eventService.dispatchEvent(bodyScrollEvent);\n    window.clearTimeout(this.scrollTimer);\n    this.scrollTimer = void 0;\n    this.scrollTimer = window.setTimeout(() => {\n      const bodyScrollEndEvent = {\n        ...bodyScrollEvent,\n        type: \"bodyScrollEnd\"\n      };\n      this.eventService.dispatchEvent(bodyScrollEndEvent);\n    }, 100);\n  }\n  shouldBlockScrollUpdate(direction, scrollTo, touchOnly = false) {\n    if (touchOnly && !_isIOSUserAgent()) {\n      return false;\n    }\n    if (direction === 0 /* Vertical */) {\n      return this.shouldBlockVerticalScroll(scrollTo);\n    }\n    return this.shouldBlockHorizontalScroll(scrollTo);\n  }\n  shouldBlockVerticalScroll(scrollTo) {\n    const clientHeight = _getInnerHeight(this.eBodyViewport);\n    const {\n      scrollHeight\n    } = this.eBodyViewport;\n    if (scrollTo < 0 || scrollTo + clientHeight > scrollHeight) {\n      return true;\n    }\n    return false;\n  }\n  shouldBlockHorizontalScroll(scrollTo) {\n    const clientWidth = this.centerRowsCtrl.getCenterWidth();\n    const {\n      scrollWidth\n    } = this.centerRowsCtrl.getViewportElement();\n    if (this.enableRtl && _isRtlNegativeScroll()) {\n      if (scrollTo > 0) {\n        return true;\n      }\n    } else if (scrollTo < 0) {\n      return true;\n    }\n    if (Math.abs(scrollTo) + clientWidth > scrollWidth) {\n      return true;\n    }\n    return false;\n  }\n  redrawRowsAfterScroll() {\n    this.fireScrollEvent(0 /* Vertical */);\n  }\n  // this is to cater for AG-3274, where grid is removed from the dom and then inserted back in again.\n  // (which happens with some implementations of tabbing). this can result in horizontal scroll getting\n  // reset back to the left, however no scroll event is fired. so we need to get header to also scroll\n  // back to the left to be kept in sync.\n  // adding and removing the grid from the DOM both resets the scroll position and\n  // triggers a resize event, so notify listeners if the scroll position has changed\n  checkScrollLeft() {\n    if (this.scrollLeft !== this.centerRowsCtrl.getCenterViewportScrollLeft()) {\n      this.onHScrollCommon(0 /* Container */);\n    }\n  }\n  scrollGridIfNeeded() {\n    const frameNeeded = this.scrollTop != this.nextScrollTop;\n    if (frameNeeded) {\n      this.scrollTop = this.nextScrollTop;\n      this.redrawRowsAfterScroll();\n    }\n    return frameNeeded;\n  }\n  // called by scrollHorizontally method and alignedGridsService\n  setHorizontalScrollPosition(hScrollPosition, fromAlignedGridsService = false) {\n    const minScrollLeft = 0;\n    const maxScrollLeft = this.centerRowsCtrl.getViewportElement().scrollWidth - this.centerRowsCtrl.getCenterWidth();\n    if (!fromAlignedGridsService && this.shouldBlockScrollUpdate(1 /* Horizontal */, hScrollPosition)) {\n      if (this.enableRtl && _isRtlNegativeScroll()) {\n        hScrollPosition = hScrollPosition > 0 ? 0 : maxScrollLeft;\n      } else {\n        hScrollPosition = Math.min(Math.max(hScrollPosition, minScrollLeft), maxScrollLeft);\n      }\n    }\n    _setScrollLeft(this.centerRowsCtrl.getViewportElement(), Math.abs(hScrollPosition), this.enableRtl);\n    this.doHorizontalScroll(hScrollPosition);\n  }\n  setVerticalScrollPosition(vScrollPosition) {\n    this.eBodyViewport.scrollTop = vScrollPosition;\n  }\n  getVScrollPosition() {\n    this.lastScrollTop = this.eBodyViewport.scrollTop;\n    this.lastOffsetHeight = this.eBodyViewport.offsetHeight;\n    const result = {\n      top: this.lastScrollTop,\n      bottom: this.lastScrollTop + this.lastOffsetHeight\n    };\n    return result;\n  }\n  /** Get an approximate scroll position that returns the last real value read.\n   * This is useful for avoiding repeated DOM reads that force the browser to recalculate styles.\n   * This can have big performance improvements but may not be 100% accurate so only use if this is acceptable.\n   */\n  getApproximateVScollPosition() {\n    if (this.lastScrollTop >= 0 && this.lastOffsetHeight >= 0) {\n      return {\n        top: this.scrollTop,\n        bottom: this.scrollTop + this.lastOffsetHeight\n      };\n    }\n    return this.getVScrollPosition();\n  }\n  getHScrollPosition() {\n    return this.centerRowsCtrl.getHScrollPosition();\n  }\n  isHorizontalScrollShowing() {\n    return this.centerRowsCtrl.isHorizontalScrollShowing();\n  }\n  // called by the headerRootComp and moveColumnController\n  scrollHorizontally(pixels) {\n    const oldScrollPosition = this.centerRowsCtrl.getViewportElement().scrollLeft;\n    this.setHorizontalScrollPosition(oldScrollPosition + pixels);\n    return this.centerRowsCtrl.getViewportElement().scrollLeft - oldScrollPosition;\n  }\n  // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\n  scrollToTop() {\n    this.eBodyViewport.scrollTop = 0;\n  }\n  // Valid values for position are bottom, middle and top\n  ensureNodeVisible(comparator, position = null) {\n    const rowCount = this.rowModel.getRowCount();\n    let indexToSelect = -1;\n    for (let i = 0; i < rowCount; i++) {\n      const node = this.rowModel.getRow(i);\n      if (typeof comparator === \"function\") {\n        const predicate = comparator;\n        if (node && predicate(node)) {\n          indexToSelect = i;\n          break;\n        }\n      } else {\n        if (comparator === node || comparator === node.data) {\n          indexToSelect = i;\n          break;\n        }\n      }\n    }\n    if (indexToSelect >= 0) {\n      this.ensureIndexVisible(indexToSelect, position);\n    }\n  }\n  // Valid values for position are bottom, middle and top\n  // position should be {'top','middle','bottom', or undefined/null}.\n  // if undefined/null, then the grid will to the minimal amount of scrolling,\n  // eg if grid needs to scroll up, it scrolls until row is on top,\n  //    if grid needs to scroll down, it scrolls until row is on bottom,\n  //    if row is already in view, grid does not scroll\n  ensureIndexVisible(index, position) {\n    if (this.gos.isDomLayout(\"print\")) {\n      return;\n    }\n    const rowCount = this.rowModel.getRowCount();\n    if (typeof index !== \"number\" || index < 0 || index >= rowCount) {\n      _warnOnce(\"Invalid row index for ensureIndexVisible: \" + index);\n      return;\n    }\n    const isPaging = this.gos.get(\"pagination\");\n    const paginationPanelEnabled = isPaging && !this.gos.get(\"suppressPaginationPanel\");\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      if (!paginationPanelEnabled) {\n        this.paginationService?.goToPageWithIndex(index);\n      }\n      const gridBodyCtrl = this.ctrlsService.getGridBodyCtrl();\n      const stickyTopHeight = gridBodyCtrl.getStickyTopHeight();\n      const stickyBottomHeight = gridBodyCtrl.getStickyBottomHeight();\n      const rowNode = this.rowModel.getRow(index);\n      let rowGotShiftedDuringOperation;\n      do {\n        const startingRowTop = rowNode.rowTop;\n        const startingRowHeight = rowNode.rowHeight;\n        const paginationOffset = this.pageBoundsService.getPixelOffset();\n        const rowTopPixel = rowNode.rowTop - paginationOffset;\n        const rowBottomPixel = rowTopPixel + rowNode.rowHeight;\n        const scrollPosition = this.getVScrollPosition();\n        const heightOffset = this.heightScaler.getDivStretchOffset();\n        const vScrollTop = scrollPosition.top + heightOffset;\n        const vScrollBottom = scrollPosition.bottom + heightOffset;\n        const viewportHeight = vScrollBottom - vScrollTop;\n        const pxTop = this.heightScaler.getScrollPositionForPixel(rowTopPixel);\n        const pxBottom = this.heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight);\n        const pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\n        const rowAboveViewport = vScrollTop + stickyTopHeight > rowTopPixel;\n        const rowBelowViewport = vScrollBottom - stickyBottomHeight < rowBottomPixel;\n        let newScrollPosition = null;\n        if (position === \"top\") {\n          newScrollPosition = pxTop;\n        } else if (position === \"bottom\") {\n          newScrollPosition = pxBottom;\n        } else if (position === \"middle\") {\n          newScrollPosition = pxMiddle;\n        } else if (rowAboveViewport) {\n          newScrollPosition = pxTop - stickyTopHeight;\n        } else if (rowBelowViewport) {\n          newScrollPosition = pxBottom + stickyBottomHeight;\n        }\n        if (newScrollPosition !== null) {\n          this.setVerticalScrollPosition(newScrollPosition);\n          this.rowRenderer.redraw({\n            afterScroll: true\n          });\n        }\n        rowGotShiftedDuringOperation = startingRowTop !== rowNode.rowTop || startingRowHeight !== rowNode.rowHeight;\n      } while (rowGotShiftedDuringOperation);\n      this.animationFrameService.flushAllFrames();\n    });\n  }\n  ensureColumnVisible(key, position = \"auto\") {\n    const column = this.columnModel.getCol(key);\n    if (!column) {\n      return;\n    }\n    if (column.isPinned()) {\n      return;\n    }\n    if (!this.visibleColsService.isColDisplayed(column)) {\n      return;\n    }\n    const newHorizontalScroll = this.getPositionedHorizontalScroll(column, position);\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      if (newHorizontalScroll !== null) {\n        this.centerRowsCtrl.setCenterViewportScrollLeft(newHorizontalScroll);\n      }\n      this.centerRowsCtrl.onHorizontalViewportChanged();\n      this.animationFrameService.flushAllFrames();\n    });\n  }\n  setScrollPosition(top, left) {\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      this.centerRowsCtrl.setCenterViewportScrollLeft(left);\n      this.setVerticalScrollPosition(top);\n      this.rowRenderer.redraw({\n        afterScroll: true\n      });\n      this.animationFrameService.flushAllFrames();\n    });\n  }\n  getPositionedHorizontalScroll(column, position) {\n    const {\n      columnBeforeStart,\n      columnAfterEnd\n    } = this.isColumnOutsideViewport(column);\n    const viewportTooSmallForColumn = this.centerRowsCtrl.getCenterWidth() < column.getActualWidth();\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\n    const isRtl = this.enableRtl;\n    let alignColToStart = (isRtl ? columnBeforeStart : columnAfterEnd) || viewportTooSmallForColumn;\n    let alignColToEnd = isRtl ? columnAfterEnd : columnBeforeStart;\n    if (position !== \"auto\") {\n      alignColToStart = position === \"start\";\n      alignColToEnd = position === \"end\";\n    }\n    const isMiddle = position === \"middle\";\n    if (alignColToStart || alignColToEnd || isMiddle) {\n      const {\n        colLeft,\n        colMiddle,\n        colRight\n      } = this.getColumnBounds(column);\n      if (isMiddle) {\n        return colMiddle - viewportWidth / 2;\n      }\n      if (alignColToStart) {\n        return isRtl ? colRight : colLeft;\n      }\n      return isRtl ? colLeft - viewportWidth : colRight - viewportWidth;\n    }\n    return null;\n  }\n  isColumnOutsideViewport(column) {\n    const {\n      start: viewportStart,\n      end: viewportEnd\n    } = this.getViewportBounds();\n    const {\n      colLeft,\n      colRight\n    } = this.getColumnBounds(column);\n    const isRtl = this.enableRtl;\n    const columnBeforeStart = isRtl ? viewportStart > colRight : viewportEnd < colRight;\n    const columnAfterEnd = isRtl ? viewportEnd < colLeft : viewportStart > colLeft;\n    return {\n      columnBeforeStart,\n      columnAfterEnd\n    };\n  }\n  getColumnBounds(column) {\n    const isRtl = this.enableRtl;\n    const bodyWidth = this.visibleColsService.getBodyContainerWidth();\n    const colWidth = column.getActualWidth();\n    const colLeft = column.getLeft();\n    const multiplier = isRtl ? -1 : 1;\n    const colLeftPixel = isRtl ? bodyWidth - colLeft : colLeft;\n    const colRightPixel = colLeftPixel + colWidth * multiplier;\n    const colMidPixel = colLeftPixel + colWidth / 2 * multiplier;\n    return {\n      colLeft: colLeftPixel,\n      colMiddle: colMidPixel,\n      colRight: colRightPixel\n    };\n  }\n  getViewportBounds() {\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\n    const scrollPosition = this.centerRowsCtrl.getCenterViewportScrollLeft();\n    const viewportStartPixel = scrollPosition;\n    const viewportEndPixel = viewportWidth + scrollPosition;\n    return {\n      start: viewportStartPixel,\n      end: viewportEndPixel,\n      width: viewportWidth\n    };\n  }\n};\n\n// community-modules/core/src/gridBodyComp/gridBodyCtrl.ts\nvar CSS_CLASS_FORCE_VERTICAL_SCROLL = \"ag-force-vertical-scroll\";\nvar CSS_CLASS_CELL_SELECTABLE = \"ag-selectable\";\nvar CSS_CLASS_COLUMN_MOVING = \"ag-column-moving\";\nvar GridBodyCtrl = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.stickyTopHeight = 0;\n    this.stickyBottomHeight = 0;\n  }\n  wireBeans(beans) {\n    this.animationFrameService = beans.animationFrameService;\n    this.rowContainerHeightService = beans.rowContainerHeightService;\n    this.ctrlsService = beans.ctrlsService;\n    this.columnModel = beans.columnModel;\n    this.columnSizeService = beans.columnSizeService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n    this.menuService = beans.menuService;\n    this.headerNavigationService = beans.headerNavigationService;\n    this.dragAndDropService = beans.dragAndDropService;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.rowRenderer = beans.rowRenderer;\n    this.popupService = beans.popupService;\n    this.mouseEventService = beans.mouseEventService;\n    this.rowModel = beans.rowModel;\n    this.filterManager = beans.filterManager;\n    this.environment = beans.environment;\n  }\n  getScrollFeature() {\n    return this.bodyScrollFeature;\n  }\n  getBodyViewportElement() {\n    return this.eBodyViewport;\n  }\n  setComp(comp, eGridBody, eBodyViewport, eTop, eBottom, eStickyTop, eStickyBottom) {\n    this.comp = comp;\n    this.eGridBody = eGridBody;\n    this.eBodyViewport = eBodyViewport;\n    this.eTop = eTop;\n    this.eBottom = eBottom;\n    this.eStickyTop = eStickyTop;\n    this.eStickyBottom = eStickyBottom;\n    this.setCellTextSelection(this.gos.get(\"enableCellTextSelection\"));\n    this.addManagedPropertyListener(\"enableCellTextSelection\", props => this.setCellTextSelection(props.currentValue));\n    this.createManagedBean(new LayoutFeature(this.comp));\n    this.bodyScrollFeature = this.createManagedBean(new GridBodyScrollFeature(this.eBodyViewport));\n    this.addRowDragListener();\n    this.setupRowAnimationCssClass();\n    this.addEventListeners();\n    this.addFocusListeners([eTop, eBodyViewport, eBottom, eStickyTop, eStickyBottom]);\n    this.onGridColumnsChanged();\n    this.addBodyViewportListener();\n    this.setFloatingHeights();\n    this.disableBrowserDragging();\n    this.addStopEditingWhenGridLosesFocus();\n    this.filterManager?.setupAdvancedFilterHeaderComp(eTop);\n    this.ctrlsService.register(\"gridBodyCtrl\", this);\n  }\n  getComp() {\n    return this.comp;\n  }\n  addEventListeners() {\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.onGridColumnsChanged.bind(this),\n      scrollVisibilityChanged: this.onScrollVisibilityChanged.bind(this),\n      pinnedRowDataChanged: this.setFloatingHeights.bind(this),\n      pinnedHeightChanged: this.setFloatingHeights.bind(this),\n      headerHeightChanged: this.onHeaderHeightChanged.bind(this)\n    });\n  }\n  addFocusListeners(elements) {\n    elements.forEach(element => {\n      this.addManagedElementListeners(element, {\n        focusin: e => {\n          const {\n            target\n          } = e;\n          const isFocusedElementNested = _isElementChildOfClass(target, \"ag-root\", element);\n          element.classList.toggle(\"ag-has-focus\", !isFocusedElementNested);\n        },\n        focusout: e => {\n          const {\n            target,\n            relatedTarget\n          } = e;\n          const gridContainRelatedTarget = element.contains(relatedTarget);\n          const isNestedRelatedTarget = _isElementChildOfClass(relatedTarget, \"ag-root\", element);\n          const isNestedTarget = _isElementChildOfClass(target, \"ag-root\", element);\n          if (isNestedTarget) {\n            return;\n          }\n          if (!gridContainRelatedTarget || isNestedRelatedTarget) {\n            element.classList.remove(\"ag-has-focus\");\n          }\n        }\n      });\n    });\n  }\n  // used by ColumnAnimationService\n  setColumnMovingCss(moving) {\n    this.comp.setColumnMovingCss(CSS_CLASS_COLUMN_MOVING, moving);\n  }\n  setCellTextSelection(selectable = false) {\n    this.comp.setCellSelectableCss(CSS_CLASS_CELL_SELECTABLE, selectable);\n  }\n  onScrollVisibilityChanged() {\n    const visible = this.scrollVisibleService.isVerticalScrollShowing();\n    this.setVerticalScrollPaddingVisible(visible);\n    this.setStickyWidth(visible);\n    this.setStickyBottomOffsetBottom();\n    const scrollbarWidth = visible ? this.gos.getScrollbarWidth() || 0 : 0;\n    const pad = _isInvisibleScrollbar() ? 16 : 0;\n    const width = `calc(100% + ${scrollbarWidth + pad}px)`;\n    this.animationFrameService.requestAnimationFrame(() => this.comp.setBodyViewportWidth(width));\n  }\n  onGridColumnsChanged() {\n    const columns = this.columnModel.getCols();\n    this.comp.setColumnCount(columns.length);\n  }\n  // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\n  // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\n  disableBrowserDragging() {\n    this.addManagedElementListeners(this.eGridBody, {\n      dragstart: event => {\n        if (event.target instanceof HTMLImageElement) {\n          event.preventDefault();\n          return false;\n        }\n      }\n    });\n  }\n  addStopEditingWhenGridLosesFocus() {\n    if (!this.gos.get(\"stopEditingWhenCellsLoseFocus\")) {\n      return;\n    }\n    const focusOutListener = event => {\n      const elementWithFocus = event.relatedTarget;\n      if (_getTabIndex(elementWithFocus) === null) {\n        this.rowRenderer.stopEditing();\n        return;\n      }\n      let clickInsideGrid =\n      // see if click came from inside the viewports\n      viewports.some(viewport => viewport.contains(elementWithFocus)) &&\n      // and also that it's not from a detail grid\n      this.mouseEventService.isElementInThisGrid(elementWithFocus);\n      if (!clickInsideGrid) {\n        const popupService = this.popupService;\n        clickInsideGrid = popupService.getActivePopups().some(popup => popup.contains(elementWithFocus)) || popupService.isElementWithinCustomPopup(elementWithFocus);\n      }\n      if (!clickInsideGrid) {\n        this.rowRenderer.stopEditing();\n      }\n    };\n    const viewports = [this.eBodyViewport, this.eBottom, this.eTop, this.eStickyTop, this.eStickyBottom];\n    viewports.forEach(viewport => this.addManagedElementListeners(viewport, {\n      focusout: focusOutListener\n    }));\n  }\n  updateRowCount() {\n    const headerCount = this.headerNavigationService.getHeaderRowCount() + (this.filterManager?.getHeaderRowCount() ?? 0);\n    const rowCount = this.rowModel.isLastRowIndexKnown() ? this.rowModel.getRowCount() : -1;\n    const total = rowCount === -1 ? -1 : headerCount + rowCount;\n    this.comp.setRowCount(total);\n  }\n  registerBodyViewportResizeListener(listener) {\n    this.comp.registerBodyViewportResizeListener(listener);\n  }\n  setVerticalScrollPaddingVisible(visible) {\n    const overflowY = visible ? \"scroll\" : \"hidden\";\n    this.comp.setPinnedTopBottomOverflowY(overflowY);\n  }\n  isVerticalScrollShowing() {\n    const show = this.gos.get(\"alwaysShowVerticalScroll\");\n    const cssClass = show ? CSS_CLASS_FORCE_VERTICAL_SCROLL : null;\n    const allowVerticalScroll = this.gos.isDomLayout(\"normal\");\n    this.comp.setAlwaysVerticalScrollClass(cssClass, show);\n    return show || allowVerticalScroll && _isVerticalScrollShowing(this.eBodyViewport);\n  }\n  setupRowAnimationCssClass() {\n    let initialSizeMeasurementComplete = this.environment.hasMeasuredSizes();\n    const updateAnimationClass = () => {\n      const animateRows = initialSizeMeasurementComplete && this.gos.isAnimateRows() && !this.rowContainerHeightService.isStretching();\n      const animateRowsCssClass = animateRows ? \"ag-row-animation\" : \"ag-row-no-animation\";\n      this.comp.setRowAnimationCssOnBodyViewport(animateRowsCssClass, animateRows);\n    };\n    updateAnimationClass();\n    this.addManagedEventListeners({\n      heightScaleChanged: updateAnimationClass\n    });\n    this.addManagedPropertyListener(\"animateRows\", updateAnimationClass);\n    this.addManagedEventListeners({\n      gridStylesChanged: () => {\n        if (!initialSizeMeasurementComplete && this.environment.hasMeasuredSizes()) {\n          initialSizeMeasurementComplete = true;\n          updateAnimationClass();\n        }\n      }\n    });\n  }\n  getGridBodyElement() {\n    return this.eGridBody;\n  }\n  addBodyViewportListener() {\n    const listener = this.onBodyViewportContextMenu.bind(this);\n    this.addManagedElementListeners(this.eBodyViewport, {\n      contextmenu: listener\n    });\n    this.mockContextMenuForIPad(listener);\n    this.addManagedElementListeners(this.eBodyViewport, {\n      wheel: this.onBodyViewportWheel.bind(this)\n    });\n    this.addManagedElementListeners(this.eStickyTop, {\n      wheel: this.onStickyWheel.bind(this)\n    });\n    this.addManagedElementListeners(this.eStickyBottom, {\n      wheel: this.onStickyWheel.bind(this)\n    });\n    this.addFullWidthContainerWheelListener();\n  }\n  addFullWidthContainerWheelListener() {\n    const fullWidthContainer = this.eBodyViewport.querySelector(\".ag-full-width-container\");\n    const eCenterColsViewport = this.eBodyViewport.querySelector(\".ag-center-cols-viewport\");\n    if (fullWidthContainer && eCenterColsViewport) {\n      this.addManagedElementListeners(fullWidthContainer, {\n        wheel: e => this.onFullWidthContainerWheel(e, eCenterColsViewport)\n      });\n    }\n  }\n  onFullWidthContainerWheel(e, eCenterColsViewport) {\n    if (!e.deltaX || Math.abs(e.deltaY) > Math.abs(e.deltaX) || !this.mouseEventService.isEventFromThisGrid(e)) {\n      return;\n    }\n    e.preventDefault();\n    eCenterColsViewport.scrollBy({\n      left: e.deltaX\n    });\n  }\n  onBodyViewportContextMenu(mouseEvent, touch, touchEvent) {\n    if (!mouseEvent && !touchEvent) {\n      return;\n    }\n    if (this.gos.get(\"preventDefaultOnContextMenu\")) {\n      const event = mouseEvent || touchEvent;\n      event.preventDefault();\n    }\n    const {\n      target\n    } = mouseEvent || touch;\n    if (target === this.eBodyViewport || target === this.ctrlsService.get(\"center\").getViewportElement()) {\n      this.menuService.showContextMenu({\n        mouseEvent,\n        touchEvent,\n        value: null,\n        anchorToElement: this.eGridBody\n      });\n    }\n  }\n  mockContextMenuForIPad(listener) {\n    if (!_isIOSUserAgent()) {\n      return;\n    }\n    const touchListener = new TouchListener(this.eBodyViewport);\n    const longTapListener = event => {\n      listener(void 0, event.touchStart, event.touchEvent);\n    };\n    this.addManagedListeners(touchListener, {\n      longTap: longTapListener\n    });\n    this.addDestroyFunc(() => touchListener.destroy());\n  }\n  onBodyViewportWheel(e) {\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\n      return;\n    }\n    if (this.popupService.hasAnchoredPopup()) {\n      e.preventDefault();\n    }\n  }\n  onStickyWheel(e) {\n    e.preventDefault();\n    if (e.offsetY) {\n      this.scrollVertically(e.deltaY);\n    }\n  }\n  getGui() {\n    return this.eGridBody;\n  }\n  // called by rowDragFeature\n  scrollVertically(pixels) {\n    const oldScrollPosition = this.eBodyViewport.scrollTop;\n    this.bodyScrollFeature.setVerticalScrollPosition(oldScrollPosition + pixels);\n    return this.eBodyViewport.scrollTop - oldScrollPosition;\n  }\n  addRowDragListener() {\n    this.rowDragFeature = this.createManagedBean(new RowDragFeature(this.eBodyViewport));\n    this.dragAndDropService.addDropTarget(this.rowDragFeature);\n  }\n  getRowDragFeature() {\n    return this.rowDragFeature;\n  }\n  setFloatingHeights() {\n    const {\n      pinnedRowModel\n    } = this;\n    const floatingTopHeight = pinnedRowModel.getPinnedTopTotalHeight();\n    const floatingBottomHeight = pinnedRowModel.getPinnedBottomTotalHeight();\n    this.comp.setTopHeight(floatingTopHeight);\n    this.comp.setBottomHeight(floatingBottomHeight);\n    this.comp.setTopDisplay(floatingTopHeight ? \"inherit\" : \"none\");\n    this.comp.setBottomDisplay(floatingBottomHeight ? \"inherit\" : \"none\");\n    this.setStickyTopOffsetTop();\n    this.setStickyBottomOffsetBottom();\n  }\n  setStickyTopHeight(height = 0) {\n    this.comp.setStickyTopHeight(`${height}px`);\n    this.stickyTopHeight = height;\n  }\n  getStickyTopHeight() {\n    return this.stickyTopHeight;\n  }\n  setStickyBottomHeight(height = 0) {\n    this.comp.setStickyBottomHeight(`${height}px`);\n    this.stickyBottomHeight = height;\n  }\n  getStickyBottomHeight() {\n    return this.stickyBottomHeight;\n  }\n  setStickyWidth(vScrollVisible) {\n    if (!vScrollVisible) {\n      this.comp.setStickyTopWidth(\"100%\");\n      this.comp.setStickyBottomWidth(\"100%\");\n    } else {\n      const scrollbarWidth = this.gos.getScrollbarWidth();\n      this.comp.setStickyTopWidth(`calc(100% - ${scrollbarWidth}px)`);\n      this.comp.setStickyBottomWidth(`calc(100% - ${scrollbarWidth}px)`);\n    }\n  }\n  onHeaderHeightChanged() {\n    this.setStickyTopOffsetTop();\n  }\n  setStickyTopOffsetTop() {\n    const headerCtrl = this.ctrlsService.get(\"gridHeaderCtrl\");\n    const headerHeight = headerCtrl.getHeaderHeight() + (this.filterManager?.getHeaderHeight() ?? 0);\n    const pinnedTopHeight = this.pinnedRowModel.getPinnedTopTotalHeight();\n    let height = 0;\n    if (headerHeight > 0) {\n      height += headerHeight;\n    }\n    if (pinnedTopHeight > 0) {\n      height += pinnedTopHeight;\n    }\n    if (height > 0) {\n      height += 1;\n    }\n    this.comp.setStickyTopTop(`${height}px`);\n  }\n  setStickyBottomOffsetBottom() {\n    const pinnedBottomHeight = this.pinnedRowModel.getPinnedBottomTotalHeight();\n    const hScrollShowing = this.scrollVisibleService.isHorizontalScrollShowing();\n    const scrollbarWidth = hScrollShowing ? this.gos.getScrollbarWidth() || 0 : 0;\n    const height = pinnedBottomHeight + scrollbarWidth;\n    this.comp.setStickyBottomBottom(`${height}px`);\n  }\n  // method will call itself if no available width. this covers if the grid\n  // isn't visible, but is just about to be visible.\n  sizeColumnsToFit(params, nextTimeout) {\n    const removeScrollWidth = this.isVerticalScrollShowing();\n    const scrollWidthToRemove = removeScrollWidth ? this.gos.getScrollbarWidth() : 0;\n    const bodyViewportWidth = _getInnerWidth(this.eGridBody);\n    const availableWidth = bodyViewportWidth - scrollWidthToRemove;\n    if (availableWidth > 0) {\n      this.columnSizeService.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\", false, params);\n      return;\n    }\n    if (nextTimeout === void 0) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFit(params, 100);\n      }, 0);\n    } else if (nextTimeout === 100) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFit(params, 500);\n      }, 100);\n    } else if (nextTimeout === 500) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFit(params, -1);\n      }, 500);\n    } else {\n      _warnOnce(\"tried to call sizeColumnsToFit() but the grid is coming back with zero width, maybe the grid is not visible yet on the screen?\");\n    }\n  }\n  // + rangeService\n  addScrollEventListener(listener) {\n    this.eBodyViewport.addEventListener(\"scroll\", listener, {\n      passive: true\n    });\n  }\n  // + focusService\n  removeScrollEventListener(listener) {\n    this.eBodyViewport.removeEventListener(\"scroll\", listener);\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellComp.ts\nvar CellComp = class extends Component {\n  constructor(beans, cellCtrl, printLayout, eRow, editingRow) {\n    super();\n    // every time we go into edit mode, or back again, this gets incremented.\n    // it's the components way of dealing with the async nature of framework components,\n    // so if a framework component takes a while to be created, we know if the object\n    // is still relevant when creating is finished. eg we could click edit / un-edit 20\n    // times before the first React edit component comes back - we should discard\n    // the first 19.\n    this.rendererVersion = 0;\n    this.editorVersion = 0;\n    this.beans = beans;\n    this.column = cellCtrl.getColumn();\n    this.rowNode = cellCtrl.getRowNode();\n    this.rowCtrl = cellCtrl.getRowCtrl();\n    this.eRow = eRow;\n    this.cellCtrl = cellCtrl;\n    const cellDiv = document.createElement(\"div\");\n    cellDiv.setAttribute(\"comp-id\", `${this.getCompId()}`);\n    this.setTemplateFromElement(cellDiv);\n    const eGui = this.getGui();\n    this.forceWrapper = cellCtrl.isForceWrapper();\n    this.refreshWrapper(false);\n    const setAttribute = (name, value) => {\n      if (value != null && value != \"\") {\n        eGui.setAttribute(name, value);\n      } else {\n        eGui.removeAttribute(name);\n      }\n    };\n    _setAriaRole(eGui, cellCtrl.getCellAriaRole());\n    setAttribute(\"col-id\", cellCtrl.getColumnIdSanitised());\n    const tabIndex = cellCtrl.getTabIndex();\n    if (tabIndex !== void 0) {\n      setAttribute(\"tabindex\", tabIndex.toString());\n    }\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setUserStyles: styles => _addStylesToElement(eGui, styles),\n      getFocusableElement: () => this.getFocusableElement(),\n      setIncludeSelection: include => this.includeSelection = include,\n      setIncludeRowDrag: include => this.includeRowDrag = include,\n      setIncludeDndSource: include => this.includeDndSource = include,\n      setRenderDetails: (compDetails, valueToDisplay, force) => this.setRenderDetails(compDetails, valueToDisplay, force),\n      setEditDetails: (compDetails, popup, position) => this.setEditDetails(compDetails, popup, position),\n      getCellEditor: () => this.cellEditor || null,\n      getCellRenderer: () => this.cellRenderer || null,\n      getParentOfValue: () => this.getParentOfValue()\n    };\n    cellCtrl.setComp(compProxy, this.getGui(), this.eCellWrapper, printLayout, editingRow);\n  }\n  getParentOfValue() {\n    if (this.eCellValue) {\n      return this.eCellValue;\n    }\n    if (this.eCellWrapper) {\n      return this.eCellWrapper;\n    }\n    return this.getGui();\n  }\n  setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance) {\n    const isInlineEditing = this.cellEditor && !this.cellEditorPopupWrapper;\n    if (isInlineEditing) {\n      return;\n    }\n    this.firstRender = this.firstRender == null;\n    const controlWrapperChanged = this.refreshWrapper(false);\n    this.refreshEditStyles(false);\n    if (compDetails) {\n      const neverRefresh = forceNewCellRendererInstance || controlWrapperChanged;\n      const cellRendererRefreshSuccessful = neverRefresh ? false : this.refreshCellRenderer(compDetails);\n      if (!cellRendererRefreshSuccessful) {\n        this.destroyRenderer();\n        this.createCellRendererInstance(compDetails);\n      }\n    } else {\n      this.destroyRenderer();\n      this.insertValueWithoutCellRenderer(valueToDisplay);\n    }\n  }\n  setEditDetails(compDetails, popup, position) {\n    if (compDetails) {\n      this.createCellEditorInstance(compDetails, popup, position);\n    } else {\n      this.destroyEditor();\n    }\n  }\n  removeControls() {\n    this.checkboxSelectionComp = this.beans.context.destroyBean(this.checkboxSelectionComp);\n    this.dndSourceComp = this.beans.context.destroyBean(this.dndSourceComp);\n    this.rowDraggingComp = this.beans.context.destroyBean(this.rowDraggingComp);\n  }\n  // returns true if wrapper was changed\n  refreshWrapper(editing) {\n    const providingControls = this.includeRowDrag || this.includeDndSource || this.includeSelection;\n    const usingWrapper = providingControls || this.forceWrapper;\n    const putWrapperIn = usingWrapper && this.eCellWrapper == null;\n    if (putWrapperIn) {\n      const wrapperDiv = document.createElement(\"div\");\n      wrapperDiv.setAttribute(\"role\", \"presentation\");\n      wrapperDiv.setAttribute(\"class\", \"ag-cell-wrapper\");\n      this.eCellWrapper = wrapperDiv;\n      this.getGui().appendChild(this.eCellWrapper);\n    }\n    const takeWrapperOut = !usingWrapper && this.eCellWrapper != null;\n    if (takeWrapperOut) {\n      _removeFromParent(this.eCellWrapper);\n      this.eCellWrapper = void 0;\n    }\n    this.addOrRemoveCssClass(\"ag-cell-value\", !usingWrapper);\n    const usingCellValue = !editing && usingWrapper;\n    const putCellValueIn = usingCellValue && this.eCellValue == null;\n    if (putCellValueIn) {\n      const cellSpan = document.createElement(\"span\");\n      cellSpan.setAttribute(\"role\", \"presentation\");\n      cellSpan.setAttribute(\"class\", \"ag-cell-value\");\n      this.eCellValue = cellSpan;\n      this.eCellWrapper.appendChild(this.eCellValue);\n    }\n    const takeCellValueOut = !usingCellValue && this.eCellValue != null;\n    if (takeCellValueOut) {\n      _removeFromParent(this.eCellValue);\n      this.eCellValue = void 0;\n    }\n    const templateChanged = putWrapperIn || takeWrapperOut || putCellValueIn || takeCellValueOut;\n    if (templateChanged) {\n      this.removeControls();\n    }\n    if (!editing) {\n      if (providingControls) {\n        this.addControls();\n      }\n    }\n    return templateChanged;\n  }\n  addControls() {\n    if (this.includeRowDrag) {\n      if (this.rowDraggingComp == null) {\n        this.rowDraggingComp = this.cellCtrl.createRowDragComp();\n        if (this.rowDraggingComp) {\n          this.eCellWrapper.insertBefore(this.rowDraggingComp.getGui(), this.eCellValue);\n        }\n      }\n    }\n    if (this.includeDndSource) {\n      if (this.dndSourceComp == null) {\n        this.dndSourceComp = this.cellCtrl.createDndSource();\n        this.eCellWrapper.insertBefore(this.dndSourceComp.getGui(), this.eCellValue);\n      }\n    }\n    if (this.includeSelection) {\n      if (this.checkboxSelectionComp == null) {\n        this.checkboxSelectionComp = this.cellCtrl.createSelectionCheckbox();\n        this.eCellWrapper.insertBefore(this.checkboxSelectionComp.getGui(), this.eCellValue);\n      }\n    }\n  }\n  createCellEditorInstance(compDetails, popup, position) {\n    const versionCopy = this.editorVersion;\n    const cellEditorPromise = compDetails.newAgStackInstance();\n    if (cellEditorPromise == null) {\n      return;\n    }\n    const {\n      params\n    } = compDetails;\n    cellEditorPromise.then(c => this.afterCellEditorCreated(versionCopy, c, params, popup, position));\n    const cellEditorAsync = _missing(this.cellEditor);\n    if (cellEditorAsync && params.cellStartedEdit) {\n      this.cellCtrl.focusCell(true);\n    }\n  }\n  insertValueWithoutCellRenderer(valueToDisplay) {\n    const eParent = this.getParentOfValue();\n    _clearElement(eParent);\n    const escapedValue = valueToDisplay != null ? _escapeString(valueToDisplay, true) : null;\n    if (escapedValue != null) {\n      eParent.textContent = escapedValue;\n    }\n  }\n  destroyEditorAndRenderer() {\n    this.destroyRenderer();\n    this.destroyEditor();\n  }\n  destroyRenderer() {\n    const {\n      context\n    } = this.beans;\n    this.cellRenderer = context.destroyBean(this.cellRenderer);\n    _removeFromParent(this.cellRendererGui);\n    this.cellRendererGui = null;\n    this.rendererVersion++;\n  }\n  destroyEditor() {\n    const {\n      context\n    } = this.beans;\n    if (this.hideEditorPopup) {\n      this.hideEditorPopup();\n    }\n    this.hideEditorPopup = void 0;\n    this.cellEditor = context.destroyBean(this.cellEditor);\n    this.cellEditorPopupWrapper = context.destroyBean(this.cellEditorPopupWrapper);\n    _removeFromParent(this.cellEditorGui);\n    this.cellEditorGui = null;\n    this.editorVersion++;\n  }\n  refreshCellRenderer(compClassAndParams) {\n    if (this.cellRenderer == null || this.cellRenderer.refresh == null) {\n      return false;\n    }\n    if (this.cellRendererClass !== compClassAndParams.componentClass) {\n      return false;\n    }\n    const result = this.cellRenderer.refresh(compClassAndParams.params);\n    return result === true || result === void 0;\n  }\n  createCellRendererInstance(compDetails) {\n    const suppressAnimationFrame = this.beans.gos.get(\"suppressAnimationFrame\");\n    const useTaskService = !suppressAnimationFrame;\n    const displayComponentVersionCopy = this.rendererVersion;\n    const {\n      componentClass\n    } = compDetails;\n    const createCellRendererFunc = () => {\n      const staleTask = this.rendererVersion !== displayComponentVersionCopy || !this.isAlive();\n      if (staleTask) {\n        return;\n      }\n      const componentPromise = compDetails.newAgStackInstance();\n      const callback = this.afterCellRendererCreated.bind(this, displayComponentVersionCopy, componentClass);\n      if (componentPromise) {\n        componentPromise.then(callback);\n      }\n    };\n    if (useTaskService && this.firstRender) {\n      this.beans.animationFrameService.createTask(createCellRendererFunc, this.rowNode.rowIndex, \"createTasksP2\");\n    } else {\n      createCellRendererFunc();\n    }\n  }\n  getCtrl() {\n    return this.cellCtrl;\n  }\n  getRowCtrl() {\n    return this.rowCtrl;\n  }\n  getCellRenderer() {\n    return this.cellRenderer;\n  }\n  getCellEditor() {\n    return this.cellEditor;\n  }\n  afterCellRendererCreated(cellRendererVersion, cellRendererClass, cellRenderer) {\n    const staleTask = !this.isAlive() || cellRendererVersion !== this.rendererVersion;\n    if (staleTask) {\n      this.beans.context.destroyBean(cellRenderer);\n      return;\n    }\n    this.cellRenderer = cellRenderer;\n    this.cellRendererClass = cellRendererClass;\n    this.cellRendererGui = this.cellRenderer.getGui();\n    if (this.cellRendererGui != null) {\n      const eParent = this.getParentOfValue();\n      _clearElement(eParent);\n      eParent.appendChild(this.cellRendererGui);\n    }\n  }\n  afterCellEditorCreated(requestVersion, cellEditor, params, popup, position) {\n    const staleComp = requestVersion !== this.editorVersion;\n    if (staleComp) {\n      this.beans.context.destroyBean(cellEditor);\n      return;\n    }\n    const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n    if (editingCancelledByUserComp) {\n      this.beans.context.destroyBean(cellEditor);\n      this.cellCtrl.stopEditing(true);\n      return;\n    }\n    if (!cellEditor.getGui) {\n      _warnOnce(`cellEditor for column ${this.column.getId()} is missing getGui() method`);\n      this.beans.context.destroyBean(cellEditor);\n      return;\n    }\n    this.cellEditor = cellEditor;\n    this.cellEditorGui = cellEditor.getGui();\n    const cellEditorInPopup = popup || cellEditor.isPopup !== void 0 && cellEditor.isPopup();\n    if (cellEditorInPopup) {\n      this.addPopupCellEditor(params, position);\n    } else {\n      this.addInCellEditor();\n    }\n    this.refreshEditStyles(true, cellEditorInPopup);\n    if (cellEditor.afterGuiAttached) {\n      cellEditor.afterGuiAttached();\n    }\n  }\n  refreshEditStyles(editing, isPopup) {\n    this.addOrRemoveCssClass(\"ag-cell-inline-editing\", editing && !isPopup);\n    this.addOrRemoveCssClass(\"ag-cell-popup-editing\", editing && !!isPopup);\n    this.addOrRemoveCssClass(\"ag-cell-not-inline-editing\", !editing || !!isPopup);\n    this.rowCtrl?.setInlineEditingCss(editing);\n  }\n  addInCellEditor() {\n    const eGui = this.getGui();\n    if (eGui.contains(this.beans.gos.getActiveDomElement())) {\n      eGui.focus();\n    }\n    this.destroyRenderer();\n    this.refreshWrapper(true);\n    this.clearParentOfValue();\n    if (this.cellEditorGui) {\n      const eParent = this.getParentOfValue();\n      eParent.appendChild(this.cellEditorGui);\n    }\n  }\n  addPopupCellEditor(params, position) {\n    if (this.beans.gos.get(\"editType\") === \"fullRow\") {\n      _warnOnce(\"popup cellEditor does not work with fullRowEdit - you cannot use them both - either turn off fullRowEdit, or stop using popup editors.\");\n    }\n    const cellEditor = this.cellEditor;\n    this.cellEditorPopupWrapper = this.beans.context.createBean(this.beans.editService.createPopupEditorWrapper(params));\n    const ePopupGui = this.cellEditorPopupWrapper.getGui();\n    if (this.cellEditorGui) {\n      ePopupGui.appendChild(this.cellEditorGui);\n    }\n    const popupService = this.beans.popupService;\n    const useModelPopup = this.beans.gos.get(\"stopEditingWhenCellsLoseFocus\");\n    const positionToUse = position != null ? position : cellEditor.getPopupPosition ? cellEditor.getPopupPosition() : \"over\";\n    const isRtl = this.beans.gos.get(\"enableRtl\");\n    const positionParams = {\n      ePopup: ePopupGui,\n      column: this.column,\n      rowNode: this.rowNode,\n      type: \"popupCellEditor\",\n      eventSource: this.getGui(),\n      position: positionToUse,\n      alignSide: isRtl ? \"right\" : \"left\",\n      keepWithinBounds: true\n    };\n    const positionCallback = popupService.positionPopupByComponent.bind(popupService, positionParams);\n    const translate = this.beans.localeService.getLocaleTextFunc();\n    const addPopupRes = popupService.addPopup({\n      modal: useModelPopup,\n      eChild: ePopupGui,\n      closeOnEsc: true,\n      closedCallback: () => {\n        this.cellCtrl.onPopupEditorClosed();\n      },\n      anchorToElement: this.getGui(),\n      positionCallback,\n      ariaLabel: translate(\"ariaLabelCellEditor\", \"Cell Editor\")\n    });\n    if (addPopupRes) {\n      this.hideEditorPopup = addPopupRes.hideFunc;\n    }\n  }\n  detach() {\n    this.eRow.removeChild(this.getGui());\n  }\n  // if the row is also getting destroyed, then we don't need to remove from dom,\n  // as the row will also get removed, so no need to take out the cells from the row\n  // if the row is going (removing is an expensive operation, so only need to remove\n  // the top part)\n  //\n  // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n  destroy() {\n    this.cellCtrl.stopEditing();\n    this.destroyEditorAndRenderer();\n    this.removeControls();\n    super.destroy();\n  }\n  clearParentOfValue() {\n    const eGui = this.getGui();\n    if (eGui.contains(this.beans.gos.getActiveDomElement()) && _browserSupportsPreventScroll()) {\n      eGui.focus({\n        preventScroll: true\n      });\n    }\n    _clearElement(this.getParentOfValue());\n  }\n};\n\n// community-modules/core/src/rendering/row/rowComp.ts\nvar RowComp = class extends Component {\n  constructor(ctrl, beans, containerType) {\n    super();\n    this.cellComps = {};\n    this.beans = beans;\n    this.rowCtrl = ctrl;\n    const rowDiv = document.createElement(\"div\");\n    rowDiv.setAttribute(\"comp-id\", `${this.getCompId()}`);\n    rowDiv.setAttribute(\"style\", this.getInitialStyle(containerType));\n    this.setTemplateFromElement(rowDiv);\n    const eGui = this.getGui();\n    const style = eGui.style;\n    this.domOrder = this.rowCtrl.getDomOrder();\n    _setAriaRole(eGui, \"row\");\n    const tabIndex = this.rowCtrl.getTabIndex();\n    if (tabIndex != null) {\n      eGui.setAttribute(\"tabindex\", tabIndex.toString());\n    }\n    const compProxy = {\n      setDomOrder: domOrder => this.domOrder = domOrder,\n      setCellCtrls: cellCtrls => this.setCellCtrls(cellCtrls),\n      showFullWidth: compDetails => this.showFullWidth(compDetails),\n      getFullWidthCellRenderer: () => this.getFullWidthCellRenderer(),\n      addOrRemoveCssClass: (name, on) => this.addOrRemoveCssClass(name, on),\n      setUserStyles: styles => _addStylesToElement(eGui, styles),\n      setTop: top => style.top = top,\n      setTransform: transform => style.transform = transform,\n      setRowIndex: rowIndex => eGui.setAttribute(\"row-index\", rowIndex),\n      setRowId: rowId => eGui.setAttribute(\"row-id\", rowId),\n      setRowBusinessKey: businessKey => eGui.setAttribute(\"row-business-key\", businessKey),\n      refreshFullWidth: getUpdatedParams => this.refreshFullWidth(getUpdatedParams)\n    };\n    ctrl.setComp(compProxy, this.getGui(), containerType);\n    this.addDestroyFunc(() => {\n      ctrl.unsetComp(containerType);\n    });\n  }\n  getInitialStyle(containerType) {\n    const transform = this.rowCtrl.getInitialTransform(containerType);\n    return transform ? `transform: ${transform}` : `top: ${this.rowCtrl.getInitialRowTop(containerType)}`;\n  }\n  showFullWidth(compDetails) {\n    const callback = cellRenderer => {\n      if (this.isAlive()) {\n        const eGui = cellRenderer.getGui();\n        this.getGui().appendChild(eGui);\n        this.rowCtrl.setupDetailRowAutoHeight(eGui);\n        this.setFullWidthRowComp(cellRenderer);\n      } else {\n        this.beans.context.destroyBean(cellRenderer);\n      }\n    };\n    const res = compDetails.newAgStackInstance();\n    if (!res) {\n      return;\n    }\n    res.then(callback);\n  }\n  setCellCtrls(cellCtrls) {\n    const cellsToRemove = Object.assign({}, this.cellComps);\n    cellCtrls.forEach(cellCtrl => {\n      const key = cellCtrl.getInstanceId();\n      const existingCellComp = this.cellComps[key];\n      if (existingCellComp == null) {\n        this.newCellComp(cellCtrl);\n      } else {\n        cellsToRemove[key] = null;\n      }\n    });\n    const cellCompsToRemove = _getAllValuesInObject(cellsToRemove).filter(cellComp => cellComp != null);\n    this.destroyCells(cellCompsToRemove);\n    this.ensureDomOrder(cellCtrls);\n  }\n  ensureDomOrder(cellCtrls) {\n    if (!this.domOrder) {\n      return;\n    }\n    const elementsInOrder = [];\n    cellCtrls.forEach(cellCtrl => {\n      const cellComp = this.cellComps[cellCtrl.getInstanceId()];\n      if (cellComp) {\n        elementsInOrder.push(cellComp.getGui());\n      }\n    });\n    _setDomChildOrder(this.getGui(), elementsInOrder);\n  }\n  newCellComp(cellCtrl) {\n    const cellComp = new CellComp(this.beans, cellCtrl, this.rowCtrl.isPrintLayout(), this.getGui(), this.rowCtrl.isEditing());\n    this.cellComps[cellCtrl.getInstanceId()] = cellComp;\n    this.getGui().appendChild(cellComp.getGui());\n  }\n  destroy() {\n    super.destroy();\n    this.destroyAllCells();\n  }\n  destroyAllCells() {\n    const cellsToDestroy = _getAllValuesInObject(this.cellComps).filter(cp => cp != null);\n    this.destroyCells(cellsToDestroy);\n  }\n  setFullWidthRowComp(fullWidthRowComponent) {\n    if (this.fullWidthCellRenderer) {\n      _errorOnce(\"should not be setting fullWidthRowComponent twice\");\n    }\n    this.fullWidthCellRenderer = fullWidthRowComponent;\n    this.addDestroyFunc(() => {\n      this.fullWidthCellRenderer = this.beans.context.destroyBean(this.fullWidthCellRenderer);\n    });\n  }\n  getFullWidthCellRenderer() {\n    return this.fullWidthCellRenderer;\n  }\n  destroyCells(cellComps) {\n    cellComps.forEach(cellComp => {\n      if (!cellComp) {\n        return;\n      }\n      const instanceId = cellComp.getCtrl().getInstanceId();\n      if (this.cellComps[instanceId] !== cellComp) {\n        return;\n      }\n      cellComp.detach();\n      cellComp.destroy();\n      this.cellComps[instanceId] = null;\n    });\n  }\n  refreshFullWidth(getUpdatedParams) {\n    const {\n      fullWidthCellRenderer\n    } = this;\n    if (!fullWidthCellRenderer || !fullWidthCellRenderer.refresh) {\n      return false;\n    }\n    const params = getUpdatedParams();\n    return fullWidthCellRenderer.refresh(params);\n  }\n};\n\n// community-modules/core/src/gridBodyComp/viewportSizeFeature.ts\nvar ViewportSizeFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.pinnedWidthService = beans.pinnedWidthService;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnSizeService = beans.columnSizeService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n    this.columnViewportService = beans.columnViewportService;\n  }\n  constructor(centerContainerCtrl) {\n    super();\n    this.centerContainerCtrl = centerContainerCtrl;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady(p => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n      this.listenForResize();\n    });\n    this.addManagedEventListeners({\n      scrollbarWidthChanged: this.onScrollbarWidthChanged.bind(this)\n    });\n    this.addManagedPropertyListeners([\"alwaysShowHorizontalScroll\", \"alwaysShowVerticalScroll\"], () => {\n      this.checkViewportAndScrolls();\n    });\n  }\n  listenForResize() {\n    const listener = () => this.onCenterViewportResized();\n    this.centerContainerCtrl.registerViewportResizeListener(listener);\n    this.gridBodyCtrl.registerBodyViewportResizeListener(listener);\n  }\n  onScrollbarWidthChanged() {\n    this.checkViewportAndScrolls();\n  }\n  onCenterViewportResized() {\n    if (this.centerContainerCtrl.isViewportInTheDOMTree()) {\n      this.keepPinnedColumnsNarrowerThanViewport();\n      this.checkViewportAndScrolls();\n      const newWidth = this.centerContainerCtrl.getCenterWidth();\n      if (newWidth !== this.centerWidth) {\n        this.centerWidth = newWidth;\n        this.columnSizeService.refreshFlexedColumns({\n          viewportWidth: this.centerWidth,\n          updateBodyWidths: true,\n          fireResizedEvent: true\n        });\n      }\n    } else {\n      this.bodyHeight = 0;\n    }\n  }\n  keepPinnedColumnsNarrowerThanViewport() {\n    const eBodyViewport = this.gridBodyCtrl.getBodyViewportElement();\n    const bodyWidth = _getInnerWidth(eBodyViewport);\n    if (bodyWidth <= 50) {\n      return;\n    }\n    let columnsToRemove = this.getPinnedColumnsOverflowingViewport(bodyWidth - 50);\n    const processUnpinnedColumns = this.gos.getCallback(\"processUnpinnedColumns\");\n    if (!columnsToRemove.length) {\n      return;\n    }\n    if (processUnpinnedColumns) {\n      const params = {\n        columns: columnsToRemove,\n        viewportWidth: bodyWidth\n      };\n      columnsToRemove = processUnpinnedColumns(params);\n    }\n    this.columnModel.setColsPinned(columnsToRemove, null, \"viewportSizeFeature\");\n  }\n  getPinnedColumnsOverflowingViewport(viewportWidth) {\n    const pinnedRightWidth = this.pinnedWidthService.getPinnedRightWidth();\n    const pinnedLeftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n    const totalPinnedWidth = pinnedRightWidth + pinnedLeftWidth;\n    if (totalPinnedWidth < viewportWidth) {\n      return [];\n    }\n    const pinnedLeftColumns = [...this.visibleColsService.getLeftCols()];\n    const pinnedRightColumns = [...this.visibleColsService.getRightCols()];\n    let indexRight = 0;\n    let indexLeft = 0;\n    const totalWidthRemoved = 0;\n    const columnsToRemove = [];\n    let spaceNecessary = totalPinnedWidth - totalWidthRemoved - viewportWidth;\n    while ((indexLeft < pinnedLeftColumns.length || indexRight < pinnedRightColumns.length) && spaceNecessary > 0) {\n      if (indexRight < pinnedRightColumns.length) {\n        const currentColumn = pinnedRightColumns[indexRight++];\n        spaceNecessary -= currentColumn.getActualWidth();\n        columnsToRemove.push(currentColumn);\n      }\n      if (indexLeft < pinnedLeftColumns.length && spaceNecessary > 0) {\n        const currentColumn = pinnedLeftColumns[indexLeft++];\n        spaceNecessary -= currentColumn.getActualWidth();\n        columnsToRemove.push(currentColumn);\n      }\n    }\n    return columnsToRemove;\n  }\n  // gets called every time the viewport size changes. we use this to check visibility of scrollbars\n  // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\n  checkViewportAndScrolls() {\n    this.updateScrollVisibleService();\n    this.checkBodyHeight();\n    this.onHorizontalViewportChanged();\n    this.gridBodyCtrl.getScrollFeature().checkScrollLeft();\n  }\n  getBodyHeight() {\n    return this.bodyHeight;\n  }\n  checkBodyHeight() {\n    const eBodyViewport = this.gridBodyCtrl.getBodyViewportElement();\n    const bodyHeight = _getInnerHeight(eBodyViewport);\n    if (this.bodyHeight !== bodyHeight) {\n      this.bodyHeight = bodyHeight;\n      const event = {\n        type: \"bodyHeightChanged\"\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  updateScrollVisibleService() {\n    this.updateScrollVisibleServiceImpl();\n    setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\n  }\n  updateScrollVisibleServiceImpl() {\n    const params = {\n      horizontalScrollShowing: this.isHorizontalScrollShowing(),\n      verticalScrollShowing: this.gridBodyCtrl.isVerticalScrollShowing()\n    };\n    this.scrollVisibleService.setScrollsVisible(params);\n  }\n  isHorizontalScrollShowing() {\n    return this.centerContainerCtrl.isHorizontalScrollShowing();\n  }\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\n  onHorizontalViewportChanged() {\n    const scrollWidth = this.centerContainerCtrl.getCenterWidth();\n    const scrollPosition = this.centerContainerCtrl.getViewportScrollLeft();\n    this.columnViewportService.setScrollPosition(scrollWidth, scrollPosition);\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/dragListenerFeature.ts\nvar DragListenerFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.dragService = beans.dragService;\n    this.rangeService = beans.rangeService;\n  }\n  constructor(eContainer) {\n    super();\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    if (!this.rangeService) {\n      return;\n    }\n    this.params = {\n      eElement: this.eContainer,\n      onDragStart: this.rangeService.onDragStart.bind(this.rangeService),\n      onDragStop: this.rangeService.onDragStop.bind(this.rangeService),\n      onDragging: this.rangeService.onDragging.bind(this.rangeService)\n    };\n    this.addManagedPropertyListener(\"enableRangeSelection\", props => {\n      const isEnabled = props.currentValue;\n      if (isEnabled) {\n        this.enableFeature();\n        return;\n      }\n      this.disableFeature();\n    });\n    this.addDestroyFunc(() => this.disableFeature());\n    const isRangeSelection = this.gos.get(\"enableRangeSelection\");\n    if (isRangeSelection) {\n      this.enableFeature();\n    }\n  }\n  enableFeature() {\n    this.dragService.addDragSource(this.params);\n  }\n  disableFeature() {\n    this.dragService.removeDragSource(this.params);\n  }\n};\n\n// community-modules/core/src/rendering/checkboxSelectionComponent.ts\nvar CheckboxSelectionComponent = class extends Component {\n  constructor() {\n    super( /* html*/\n    `\n            <div class=\"ag-selection-checkbox\" role=\"presentation\">\n                <ag-checkbox role=\"presentation\" data-ref=\"eCheckbox\"></ag-checkbox>\n            </div>`, [AgCheckboxSelector]);\n    this.eCheckbox = RefPlaceholder;\n  }\n  postConstruct() {\n    this.eCheckbox.setPassive(true);\n  }\n  getCheckboxId() {\n    return this.eCheckbox.getInputElement().id;\n  }\n  onDataChanged() {\n    this.onSelectionChanged();\n  }\n  onSelectableChanged() {\n    this.showOrHideSelect();\n  }\n  onSelectionChanged() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const state = this.rowNode.isSelected();\n    const stateName = _getAriaCheckboxStateName(translate, state);\n    const [ariaKey, ariaLabel] = this.rowNode.selectable ? [\"ariaRowToggleSelection\", \"Press Space to toggle row selection\"] : [\"ariaRowSelectionDisabled\", \"Row Selection is disabled for this row\"];\n    const translatedLabel = translate(ariaKey, ariaLabel);\n    this.eCheckbox.setValue(state, true);\n    this.eCheckbox.setInputAriaLabel(`${translatedLabel} (${stateName})`);\n  }\n  onClicked(newValue, groupSelectsFiltered, event) {\n    return this.rowNode.setSelectedParams({\n      newValue,\n      rangeSelect: event.shiftKey,\n      groupSelectsFiltered,\n      event,\n      source: \"checkboxSelected\"\n    });\n  }\n  init(params) {\n    this.rowNode = params.rowNode;\n    this.column = params.column;\n    this.overrides = params.overrides;\n    this.onSelectionChanged();\n    this.addManagedListeners(this.eCheckbox.getInputElement(), {\n      // we don't want double click on this icon to open a group\n      dblclick: event => _stopPropagationForAgGrid(event),\n      click: event => {\n        _stopPropagationForAgGrid(event);\n        const groupSelectsFiltered = this.gos.get(\"groupSelectsFiltered\");\n        const isSelected = this.eCheckbox.getValue();\n        if (this.shouldHandleIndeterminateState(isSelected, groupSelectsFiltered)) {\n          const result = this.onClicked(true, groupSelectsFiltered, event || {});\n          if (result === 0) {\n            this.onClicked(false, groupSelectsFiltered, event);\n          }\n        } else if (isSelected) {\n          this.onClicked(false, groupSelectsFiltered, event);\n        } else {\n          this.onClicked(true, groupSelectsFiltered, event || {});\n        }\n      }\n    });\n    this.addManagedListeners(this.rowNode, {\n      rowSelected: this.onSelectionChanged.bind(this),\n      dataChanged: this.onDataChanged.bind(this),\n      selectableChanged: this.onSelectableChanged.bind(this)\n    });\n    const isRowSelectableFunc = this.gos.get(\"isRowSelectable\");\n    const checkboxVisibleIsDynamic = isRowSelectableFunc || typeof this.getIsVisible() === \"function\";\n    if (checkboxVisibleIsDynamic) {\n      const showOrHideSelectListener = this.showOrHideSelect.bind(this);\n      this.addManagedEventListeners({\n        displayedColumnsChanged: showOrHideSelectListener\n      });\n      this.addManagedListeners(this.rowNode, {\n        dataChanged: showOrHideSelectListener,\n        cellChanged: showOrHideSelectListener\n      });\n      this.showOrHideSelect();\n    }\n    this.eCheckbox.getInputElement().setAttribute(\"tabindex\", \"-1\");\n  }\n  shouldHandleIndeterminateState(isSelected, groupSelectsFiltered) {\n    return groupSelectsFiltered && (this.eCheckbox.getPreviousValue() === void 0 || isSelected === void 0) && this.gos.isRowModelType(\"clientSide\");\n  }\n  showOrHideSelect() {\n    let selectable = this.rowNode.selectable;\n    const isVisible = this.getIsVisible();\n    if (selectable) {\n      if (typeof isVisible === \"function\") {\n        const extraParams = this.overrides?.callbackParams;\n        if (!this.column) {\n          selectable = isVisible({\n            ...extraParams,\n            node: this.rowNode,\n            data: this.rowNode.data\n          });\n        } else {\n          const params = this.column.createColumnFunctionCallbackParams(this.rowNode);\n          selectable = isVisible({\n            ...extraParams,\n            ...params\n          });\n        }\n      } else {\n        selectable = isVisible ?? false;\n      }\n    }\n    const disableInsteadOfHide = this.column?.getColDef().showDisabledCheckboxes;\n    if (disableInsteadOfHide) {\n      this.eCheckbox.setDisabled(!selectable);\n      this.setVisible(true);\n      this.setDisplayed(true);\n      return;\n    }\n    if (this.overrides?.removeHidden) {\n      this.setDisplayed(selectable);\n      return;\n    }\n    this.setVisible(selectable);\n  }\n  getIsVisible() {\n    if (this.overrides) {\n      return this.overrides.isVisible;\n    }\n    return this.column?.getColDef()?.checkboxSelection;\n  }\n};\n\n// community-modules/core/src/rendering/dndSourceComp.ts\nvar DndSourceComp = class extends Component {\n  constructor(rowNode, column, eCell) {\n    super( /* html */\n    `<div class=\"ag-drag-handle ag-row-drag\" draggable=\"true\"></div>`);\n    this.rowNode = rowNode;\n    this.column = column;\n    this.eCell = eCell;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    eGui.appendChild(_createIconNoSpan(\"rowDrag\", this.gos, null));\n    this.addGuiEventListener(\"mousedown\", e => {\n      e.stopPropagation();\n    });\n    this.addDragSource();\n    this.checkVisibility();\n  }\n  addDragSource() {\n    this.addGuiEventListener(\"dragstart\", this.onDragStart.bind(this));\n  }\n  onDragStart(dragEvent) {\n    const providedOnRowDrag = this.column.getColDef().dndSourceOnRowDrag;\n    dragEvent.dataTransfer.setDragImage(this.eCell, 0, 0);\n    const defaultOnRowDrag = () => {\n      try {\n        const jsonData = JSON.stringify(this.rowNode.data);\n        dragEvent.dataTransfer.setData(\"application/json\", jsonData);\n        dragEvent.dataTransfer.setData(\"text/plain\", jsonData);\n      } catch (e) {}\n    };\n    if (providedOnRowDrag) {\n      const params = this.gos.addGridCommonParams({\n        rowNode: this.rowNode,\n        dragEvent\n      });\n      providedOnRowDrag(params);\n    } else {\n      defaultOnRowDrag();\n    }\n  }\n  checkVisibility() {\n    const visible = this.column.isDndSource(this.rowNode);\n    this.setDisplayed(visible);\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellCustomStyleFeature.ts\nvar CellCustomStyleFeature = class extends BeanStub {\n  constructor(ctrl, beans) {\n    super();\n    this.staticClasses = [];\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.column = ctrl.getColumn();\n    this.rowNode = ctrl.getRowNode();\n  }\n  setComp(comp) {\n    this.cellComp = comp;\n    this.applyUserStyles();\n    this.applyCellClassRules();\n    this.applyClassesFromColDef();\n  }\n  applyCellClassRules() {\n    const colDef = this.column.getColDef();\n    const {\n      cellClassRules\n    } = colDef;\n    const cellClassParams = this.beans.gos.addGridCommonParams({\n      value: this.cellCtrl.getValue(),\n      data: this.rowNode.data,\n      node: this.rowNode,\n      colDef,\n      column: this.column,\n      rowIndex: this.rowNode.rowIndex\n    });\n    this.beans.stylingService.processClassRules(\n    // if current was previous, skip\n    cellClassRules === this.cellClassRules ? void 0 : this.cellClassRules, cellClassRules, cellClassParams, className => this.cellComp.addOrRemoveCssClass(className, true), className => this.cellComp.addOrRemoveCssClass(className, false));\n    this.cellClassRules = cellClassRules;\n  }\n  applyUserStyles() {\n    const colDef = this.column.getColDef();\n    if (!colDef.cellStyle) {\n      return;\n    }\n    let styles;\n    if (typeof colDef.cellStyle === \"function\") {\n      const cellStyleParams = this.beans.gos.addGridCommonParams({\n        column: this.column,\n        value: this.cellCtrl.getValue(),\n        colDef,\n        data: this.rowNode.data,\n        node: this.rowNode,\n        rowIndex: this.rowNode.rowIndex\n      });\n      const cellStyleFunc = colDef.cellStyle;\n      styles = cellStyleFunc(cellStyleParams);\n    } else {\n      styles = colDef.cellStyle;\n    }\n    if (styles) {\n      this.cellComp.setUserStyles(styles);\n    }\n  }\n  applyClassesFromColDef() {\n    const colDef = this.column.getColDef();\n    const cellClassParams = this.beans.gos.addGridCommonParams({\n      value: this.cellCtrl.getValue(),\n      data: this.rowNode.data,\n      node: this.rowNode,\n      column: this.column,\n      colDef,\n      rowIndex: this.rowNode.rowIndex\n    });\n    if (this.staticClasses.length) {\n      this.staticClasses.forEach(className => this.cellComp.addOrRemoveCssClass(className, false));\n    }\n    this.staticClasses = this.beans.stylingService.getStaticCellClasses(colDef, cellClassParams);\n    if (this.staticClasses.length) {\n      this.staticClasses.forEach(className => this.cellComp.addOrRemoveCssClass(className, true));\n    }\n  }\n  // overriding to make public, as we don't dispose this bean via context\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellKeyboardListenerFeature.ts\nvar CellKeyboardListenerFeature = class extends BeanStub {\n  constructor(ctrl, beans, column, rowNode, rowCtrl) {\n    super();\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.rowNode = rowNode;\n    this.rowCtrl = rowCtrl;\n  }\n  setComp(eGui) {\n    this.eGui = eGui;\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    switch (key) {\n      case KeyCode.ENTER:\n        this.onEnterKeyDown(event);\n        break;\n      case KeyCode.F2:\n        this.onF2KeyDown(event);\n        break;\n      case KeyCode.ESCAPE:\n        this.onEscapeKeyDown(event);\n        break;\n      case KeyCode.TAB:\n        this.onTabKeyDown(event);\n        break;\n      case KeyCode.BACKSPACE:\n      case KeyCode.DELETE:\n        this.onBackspaceOrDeleteKeyDown(key, event);\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n      case KeyCode.RIGHT:\n      case KeyCode.LEFT:\n        this.onNavigationKeyDown(event, key);\n        break;\n    }\n  }\n  onNavigationKeyDown(event, key) {\n    if (this.cellCtrl.isEditing()) {\n      return;\n    }\n    if (event.shiftKey && this.cellCtrl.isRangeSelectionEnabled()) {\n      this.onShiftRangeSelect(event);\n    } else {\n      this.beans.navigationService.navigateToNextCell(event, key, this.cellCtrl.getCellPosition(), true);\n    }\n    event.preventDefault();\n  }\n  onShiftRangeSelect(event) {\n    if (!this.beans.rangeService) {\n      return;\n    }\n    const endCell = this.beans.rangeService.extendLatestRangeInDirection(event);\n    if (endCell) {\n      this.beans.navigationService.ensureCellVisible(endCell);\n    }\n  }\n  onTabKeyDown(event) {\n    this.beans.navigationService.onTabKeyDown(this.cellCtrl, event);\n  }\n  onBackspaceOrDeleteKeyDown(key, event) {\n    const {\n      cellCtrl,\n      beans,\n      rowNode\n    } = this;\n    const {\n      gos,\n      rangeService,\n      eventService\n    } = beans;\n    if (cellCtrl.isEditing()) {\n      return;\n    }\n    eventService.dispatchEvent({\n      type: \"keyShortcutChangedCellStart\"\n    });\n    if (_isDeleteKey(key, gos.get(\"enableCellEditingOnBackspace\"))) {\n      if (rangeService && gos.get(\"enableRangeSelection\")) {\n        rangeService.clearCellRangeCellValues({\n          dispatchWrapperEvents: true,\n          wrapperEventSource: \"deleteKey\"\n        });\n      } else if (cellCtrl.isCellEditable()) {\n        const column = cellCtrl.getColumn();\n        const emptyValue = this.beans.valueService.parseValue(column, rowNode, \"\", rowNode.getValueFromValueService(column)) ?? null;\n        rowNode.setDataValue(column, emptyValue, \"cellClear\");\n      }\n    } else {\n      cellCtrl.startRowOrCellEdit(key, event);\n    }\n    eventService.dispatchEvent({\n      type: \"keyShortcutChangedCellEnd\"\n    });\n  }\n  onEnterKeyDown(e) {\n    if (this.cellCtrl.isEditing() || this.rowCtrl.isEditing()) {\n      this.cellCtrl.stopEditingAndFocus(false, e.shiftKey);\n    } else {\n      if (this.beans.gos.get(\"enterNavigatesVertically\")) {\n        const key = e.shiftKey ? KeyCode.UP : KeyCode.DOWN;\n        this.beans.navigationService.navigateToNextCell(null, key, this.cellCtrl.getCellPosition(), false);\n      } else {\n        this.cellCtrl.startRowOrCellEdit(KeyCode.ENTER, e);\n        if (this.cellCtrl.isEditing()) {\n          e.preventDefault();\n        }\n      }\n    }\n  }\n  onF2KeyDown(event) {\n    if (!this.cellCtrl.isEditing()) {\n      this.cellCtrl.startRowOrCellEdit(KeyCode.F2, event);\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onEscapeKeyDown(event) {\n    if (this.cellCtrl.isEditing()) {\n      this.cellCtrl.stopRowOrCellEdit(true);\n      this.cellCtrl.focusCell(true);\n    }\n  }\n  processCharacter(event) {\n    const eventTarget = event.target;\n    const eventOnChildComponent = eventTarget !== this.eGui;\n    if (eventOnChildComponent || this.cellCtrl.isEditing()) {\n      return;\n    }\n    const key = event.key;\n    if (key === \" \") {\n      this.onSpaceKeyDown(event);\n    } else {\n      this.cellCtrl.startRowOrCellEdit(key, event);\n      event.preventDefault();\n    }\n  }\n  onSpaceKeyDown(event) {\n    const {\n      gos\n    } = this.beans;\n    if (!this.cellCtrl.isEditing() && gos.isRowSelection()) {\n      const currentSelection = this.rowNode.isSelected();\n      const newSelection = !currentSelection;\n      if (newSelection || !gos.get(\"suppressRowDeselection\")) {\n        const groupSelectsFiltered = this.beans.gos.get(\"groupSelectsFiltered\");\n        const updatedCount = this.rowNode.setSelectedParams({\n          newValue: newSelection,\n          rangeSelect: event.shiftKey,\n          groupSelectsFiltered,\n          event,\n          source: \"spaceKey\"\n        });\n        if (currentSelection === void 0 && updatedCount === 0) {\n          this.rowNode.setSelectedParams({\n            newValue: false,\n            rangeSelect: event.shiftKey,\n            groupSelectsFiltered,\n            event,\n            source: \"spaceKey\"\n          });\n        }\n      }\n    }\n    event.preventDefault();\n  }\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellMouseListenerFeature.ts\nvar CellMouseListenerFeature = class extends BeanStub {\n  constructor(ctrl, beans, column) {\n    super();\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.column = column;\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    if (_isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    switch (eventName) {\n      case \"click\":\n        this.onCellClicked(mouseEvent);\n        break;\n      case \"mousedown\":\n      case \"touchstart\":\n        this.onMouseDown(mouseEvent);\n        break;\n      case \"dblclick\":\n        this.onCellDoubleClicked(mouseEvent);\n        break;\n      case \"mouseout\":\n        this.onMouseOut(mouseEvent);\n        break;\n      case \"mouseover\":\n        this.onMouseOver(mouseEvent);\n        break;\n    }\n  }\n  onCellClicked(mouseEvent) {\n    if (this.isDoubleClickOnIPad()) {\n      this.onCellDoubleClicked(mouseEvent);\n      mouseEvent.preventDefault();\n      return;\n    }\n    const {\n      eventService,\n      rangeService,\n      gos\n    } = this.beans;\n    const isMultiKey = mouseEvent.ctrlKey || mouseEvent.metaKey;\n    if (rangeService && isMultiKey) {\n      if (rangeService.getCellRangeCount(this.cellCtrl.getCellPosition()) > 1) {\n        rangeService.intersectLastRange(true);\n      }\n    }\n    const cellClickedEvent = this.cellCtrl.createEvent(mouseEvent, \"cellClicked\");\n    eventService.dispatchEvent(cellClickedEvent);\n    const colDef = this.column.getColDef();\n    if (colDef.onCellClicked) {\n      window.setTimeout(() => {\n        this.beans.frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellClicked(cellClickedEvent);\n        });\n      }, 0);\n    }\n    const editOnSingleClick = (gos.get(\"singleClickEdit\") || colDef.singleClickEdit) && !gos.get(\"suppressClickEdit\");\n    if (editOnSingleClick && !(mouseEvent.shiftKey && rangeService?.getCellRanges().length != 0)) {\n      this.cellCtrl.startRowOrCellEdit();\n    }\n  }\n  // returns true if on iPad and this is second 'click' event in 200ms\n  isDoubleClickOnIPad() {\n    if (!_isIOSUserAgent() || _isEventSupported(\"dblclick\")) {\n      return false;\n    }\n    const nowMillis = ( /* @__PURE__ */new Date()).getTime();\n    const res = nowMillis - this.lastIPadMouseClickEvent < 200;\n    this.lastIPadMouseClickEvent = nowMillis;\n    return res;\n  }\n  onCellDoubleClicked(mouseEvent) {\n    const {\n      column,\n      beans,\n      cellCtrl\n    } = this;\n    const {\n      eventService,\n      frameworkOverrides,\n      gos\n    } = beans;\n    const colDef = column.getColDef();\n    const cellDoubleClickedEvent = cellCtrl.createEvent(mouseEvent, \"cellDoubleClicked\");\n    eventService.dispatchEvent(cellDoubleClickedEvent);\n    if (typeof colDef.onCellDoubleClicked === \"function\") {\n      window.setTimeout(() => {\n        frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellDoubleClicked(cellDoubleClickedEvent);\n        });\n      }, 0);\n    }\n    const editOnDoubleClick = !gos.get(\"singleClickEdit\") && !gos.get(\"suppressClickEdit\");\n    if (editOnDoubleClick) {\n      cellCtrl.startRowOrCellEdit(null, mouseEvent);\n    }\n  }\n  onMouseDown(mouseEvent) {\n    const {\n      ctrlKey,\n      metaKey,\n      shiftKey\n    } = mouseEvent;\n    const target = mouseEvent.target;\n    const {\n      cellCtrl,\n      beans\n    } = this;\n    const {\n      eventService,\n      rangeService,\n      focusService,\n      gos\n    } = beans;\n    if (this.isRightClickInExistingRange(mouseEvent)) {\n      return;\n    }\n    const ranges = rangeService && rangeService.getCellRanges().length != 0;\n    if (!shiftKey || !ranges) {\n      const isEnableCellTextSelection = gos.get(\"enableCellTextSelection\");\n      const shouldFocus = isEnableCellTextSelection && mouseEvent.defaultPrevented;\n      const forceBrowserFocus = (_isBrowserSafari() || shouldFocus) && !cellCtrl.isEditing() && !_isFocusableFormField(target);\n      cellCtrl.focusCell(forceBrowserFocus);\n    }\n    if (shiftKey && ranges && !focusService.isCellFocused(cellCtrl.getCellPosition())) {\n      mouseEvent.preventDefault();\n      const focusedCellPosition = focusService.getFocusedCell();\n      if (focusedCellPosition) {\n        const {\n          column,\n          rowIndex,\n          rowPinned\n        } = focusedCellPosition;\n        const focusedRowCtrl = beans.rowRenderer.getRowByPosition({\n          rowIndex,\n          rowPinned\n        });\n        const focusedCellCtrl = focusedRowCtrl?.getCellCtrl(column);\n        if (focusedCellCtrl?.isEditing()) {\n          focusedCellCtrl.stopEditing();\n        }\n        focusService.setFocusedCell({\n          column,\n          rowIndex,\n          rowPinned,\n          forceBrowserFocus: true,\n          preventScrollOnBrowserFocus: true\n        });\n      }\n    }\n    if (this.containsWidget(target)) {\n      return;\n    }\n    if (rangeService) {\n      const thisCell = this.cellCtrl.getCellPosition();\n      if (shiftKey) {\n        rangeService.extendLatestRangeToCell(thisCell);\n      } else {\n        const isMultiKey = ctrlKey || metaKey;\n        rangeService.setRangeToCell(thisCell, isMultiKey);\n      }\n    }\n    eventService.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseDown\"));\n  }\n  isRightClickInExistingRange(mouseEvent) {\n    const {\n      rangeService\n    } = this.beans;\n    if (rangeService) {\n      const cellInRange = rangeService.isCellInAnyRange(this.cellCtrl.getCellPosition());\n      const isRightClick = mouseEvent.button === 2 || mouseEvent.ctrlKey && this.beans.gos.get(\"allowContextMenuWithControlKey\");\n      if (cellInRange && isRightClick) {\n        return true;\n      }\n    }\n    return false;\n  }\n  containsWidget(target) {\n    return _isElementChildOfClass(target, \"ag-selection-checkbox\", 3);\n  }\n  onMouseOut(mouseEvent) {\n    if (this.mouseStayingInsideCell(mouseEvent)) {\n      return;\n    }\n    const cellMouseOutEvent = this.cellCtrl.createEvent(mouseEvent, \"cellMouseOut\");\n    this.beans.eventService.dispatchEvent(cellMouseOutEvent);\n    this.beans.columnHoverService.clearMouseOver();\n  }\n  onMouseOver(mouseEvent) {\n    if (this.mouseStayingInsideCell(mouseEvent)) {\n      return;\n    }\n    const cellMouseOverEvent = this.cellCtrl.createEvent(mouseEvent, \"cellMouseOver\");\n    this.beans.eventService.dispatchEvent(cellMouseOverEvent);\n    this.beans.columnHoverService.setMouseOver([this.column]);\n  }\n  mouseStayingInsideCell(e) {\n    if (!e.target || !e.relatedTarget) {\n      return false;\n    }\n    const eGui = this.cellCtrl.getGui();\n    const cellContainsTarget = eGui.contains(e.target);\n    const cellContainsRelatedTarget = eGui.contains(e.relatedTarget);\n    return cellContainsTarget && cellContainsRelatedTarget;\n  }\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellPositionFeature.ts\nvar CellPositionFeature = class extends BeanStub {\n  constructor(ctrl, beans) {\n    super();\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.column = ctrl.getColumn();\n    this.rowNode = ctrl.getRowNode();\n  }\n  setupRowSpan() {\n    this.rowSpan = this.column.getRowSpan(this.rowNode);\n    this.addManagedListeners(this.beans.eventService, {\n      newColumnsLoaded: () => this.onNewColumnsLoaded()\n    });\n  }\n  setComp(eGui) {\n    this.eGui = eGui;\n    this.setupColSpan();\n    this.setupRowSpan();\n    this.onLeftChanged();\n    this.onWidthChanged();\n    this.applyRowSpan();\n  }\n  onNewColumnsLoaded() {\n    const rowSpan = this.column.getRowSpan(this.rowNode);\n    if (this.rowSpan === rowSpan) {\n      return;\n    }\n    this.rowSpan = rowSpan;\n    this.applyRowSpan(true);\n  }\n  onDisplayColumnsChanged() {\n    const colsSpanning = this.getColSpanningList();\n    if (!_areEqual(this.colsSpanning, colsSpanning)) {\n      this.colsSpanning = colsSpanning;\n      this.onWidthChanged();\n      this.onLeftChanged();\n    }\n  }\n  setupColSpan() {\n    if (this.column.getColDef().colSpan == null) {\n      return;\n    }\n    this.colsSpanning = this.getColSpanningList();\n    this.addManagedListeners(this.beans.eventService, {\n      // because we are col spanning, a reorder of the cols can change what cols we are spanning over\n      displayedColumnsChanged: this.onDisplayColumnsChanged.bind(this),\n      // because we are spanning over multiple cols, we check for width any time any cols width changes.\n      // this is expensive - really we should be explicitly checking only the cols we are spanning over\n      // instead of every col, however it would be tricky code to track the cols we are spanning over, so\n      // because hardly anyone will be using colSpan, am favouring this easier way for more maintainable code.\n      displayedColumnsWidthChanged: this.onWidthChanged.bind(this)\n    });\n  }\n  onWidthChanged() {\n    if (!this.eGui) {\n      return;\n    }\n    const width = this.getCellWidth();\n    this.eGui.style.width = `${width}px`;\n  }\n  getCellWidth() {\n    if (!this.colsSpanning) {\n      return this.column.getActualWidth();\n    }\n    return this.colsSpanning.reduce((width, col) => width + col.getActualWidth(), 0);\n  }\n  getColSpanningList() {\n    const colSpan = this.column.getColSpan(this.rowNode);\n    const colsSpanning = [];\n    if (colSpan === 1) {\n      colsSpanning.push(this.column);\n    } else {\n      let pointer = this.column;\n      const pinned = this.column.getPinned();\n      for (let i = 0; pointer && i < colSpan; i++) {\n        colsSpanning.push(pointer);\n        pointer = this.beans.visibleColsService.getColAfter(pointer);\n        if (!pointer || _missing(pointer)) {\n          break;\n        }\n        if (pinned !== pointer.getPinned()) {\n          break;\n        }\n      }\n    }\n    return colsSpanning;\n  }\n  onLeftChanged() {\n    if (!this.eGui) {\n      return;\n    }\n    const left = this.modifyLeftForPrintLayout(this.getCellLeft());\n    this.eGui.style.left = left + \"px\";\n  }\n  getCellLeft() {\n    let mostLeftCol;\n    if (this.beans.gos.get(\"enableRtl\") && this.colsSpanning) {\n      mostLeftCol = _last(this.colsSpanning);\n    } else {\n      mostLeftCol = this.column;\n    }\n    return mostLeftCol.getLeft();\n  }\n  modifyLeftForPrintLayout(leftPosition) {\n    if (!this.cellCtrl.isPrintLayout() || this.column.getPinned() === \"left\") {\n      return leftPosition;\n    }\n    const leftWidth = this.beans.visibleColsService.getColsLeftWidth();\n    if (this.column.getPinned() === \"right\") {\n      const bodyWidth = this.beans.visibleColsService.getBodyContainerWidth();\n      return leftWidth + bodyWidth + (leftPosition || 0);\n    }\n    return leftWidth + (leftPosition || 0);\n  }\n  applyRowSpan(force) {\n    if (this.rowSpan === 1 && !force) {\n      return;\n    }\n    const singleRowHeight = this.beans.gos.getRowHeightAsNumber();\n    const totalRowHeight = singleRowHeight * this.rowSpan;\n    this.eGui.style.height = `${totalRowHeight}px`;\n    this.eGui.style.zIndex = \"1\";\n  }\n  // overriding to make public, as we don't dispose this bean via context\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/interfaces/IRangeService.ts\nvar SelectionHandleType = /* @__PURE__ */(SelectionHandleType2 => {\n  SelectionHandleType2[SelectionHandleType2[\"FILL\"] = 0] = \"FILL\";\n  SelectionHandleType2[SelectionHandleType2[\"RANGE\"] = 1] = \"RANGE\";\n  return SelectionHandleType2;\n})(SelectionHandleType || {});\nvar CellRangeType = /* @__PURE__ */(CellRangeType2 => {\n  CellRangeType2[CellRangeType2[\"VALUE\"] = 0] = \"VALUE\";\n  CellRangeType2[CellRangeType2[\"DIMENSION\"] = 1] = \"DIMENSION\";\n  return CellRangeType2;\n})(CellRangeType || {});\n\n// community-modules/core/src/rendering/cell/cellRangeFeature.ts\nvar CSS_CELL_RANGE_SELECTED = \"ag-cell-range-selected\";\nvar CSS_CELL_RANGE_CHART = \"ag-cell-range-chart\";\nvar CSS_CELL_RANGE_SINGLE_CELL = \"ag-cell-range-single-cell\";\nvar CSS_CELL_RANGE_CHART_CATEGORY = \"ag-cell-range-chart-category\";\nvar CSS_CELL_RANGE_HANDLE = \"ag-cell-range-handle\";\nvar CSS_CELL_RANGE_TOP = \"ag-cell-range-top\";\nvar CSS_CELL_RANGE_RIGHT = \"ag-cell-range-right\";\nvar CSS_CELL_RANGE_BOTTOM = \"ag-cell-range-bottom\";\nvar CSS_CELL_RANGE_LEFT = \"ag-cell-range-left\";\nvar CellRangeFeature = class {\n  constructor(beans, ctrl) {\n    this.beans = beans;\n    this.rangeService = beans.rangeService;\n    this.selectionHandleFactory = beans.selectionHandleFactory;\n    this.cellCtrl = ctrl;\n  }\n  setComp(cellComp, eGui) {\n    this.cellComp = cellComp;\n    this.eGui = eGui;\n    this.onRangeSelectionChanged();\n  }\n  onRangeSelectionChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    this.rangeCount = this.rangeService.getCellRangeCount(this.cellCtrl.getCellPosition());\n    this.hasChartRange = this.getHasChartRange();\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED, this.rangeCount !== 0);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-1`, this.rangeCount === 1);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-2`, this.rangeCount === 2);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-3`, this.rangeCount === 3);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-4`, this.rangeCount >= 4);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_CHART, this.hasChartRange);\n    _setAriaSelected(this.eGui, this.rangeCount > 0 ? true : void 0);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SINGLE_CELL, this.isSingleCell());\n    this.updateRangeBorders();\n    this.refreshHandle();\n  }\n  updateRangeBorders() {\n    const rangeBorders = this.getRangeBorders();\n    const isSingleCell = this.isSingleCell();\n    const isTop = !isSingleCell && rangeBorders.top;\n    const isRight = !isSingleCell && rangeBorders.right;\n    const isBottom = !isSingleCell && rangeBorders.bottom;\n    const isLeft = !isSingleCell && rangeBorders.left;\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_TOP, isTop);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_RIGHT, isRight);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_BOTTOM, isBottom);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_LEFT, isLeft);\n  }\n  isSingleCell() {\n    const {\n      rangeService\n    } = this.beans;\n    return this.rangeCount === 1 && !!rangeService && !rangeService.isMoreThanOneCell();\n  }\n  getHasChartRange() {\n    const {\n      rangeService\n    } = this.beans;\n    if (!this.rangeCount || !rangeService) {\n      return false;\n    }\n    const cellRanges = rangeService.getCellRanges();\n    return cellRanges.length > 0 && cellRanges.every(range => _includes([1 /* DIMENSION */, 0 /* VALUE */], range.type));\n  }\n  updateRangeBordersIfRangeCount() {\n    if (this.rangeCount > 0) {\n      this.updateRangeBorders();\n      this.refreshHandle();\n    }\n  }\n  getRangeBorders() {\n    const isRtl = this.beans.gos.get(\"enableRtl\");\n    let top = false;\n    let right = false;\n    let bottom = false;\n    let left = false;\n    const thisCol = this.cellCtrl.getCellPosition().column;\n    const presentedColsService = this.beans.visibleColsService;\n    let leftCol;\n    let rightCol;\n    if (isRtl) {\n      leftCol = presentedColsService.getColAfter(thisCol);\n      rightCol = presentedColsService.getColBefore(thisCol);\n    } else {\n      leftCol = presentedColsService.getColBefore(thisCol);\n      rightCol = presentedColsService.getColAfter(thisCol);\n    }\n    const ranges = this.rangeService.getCellRanges().filter(range => this.rangeService.isCellInSpecificRange(this.cellCtrl.getCellPosition(), range));\n    if (!leftCol) {\n      left = true;\n    }\n    if (!rightCol) {\n      right = true;\n    }\n    for (let i = 0; i < ranges.length; i++) {\n      if (top && right && bottom && left) {\n        break;\n      }\n      const range = ranges[i];\n      const startRow = this.rangeService.getRangeStartRow(range);\n      const endRow = this.rangeService.getRangeEndRow(range);\n      if (!top && this.beans.rowPositionUtils.sameRow(startRow, this.cellCtrl.getCellPosition())) {\n        top = true;\n      }\n      if (!bottom && this.beans.rowPositionUtils.sameRow(endRow, this.cellCtrl.getCellPosition())) {\n        bottom = true;\n      }\n      if (!left && leftCol && range.columns.indexOf(leftCol) < 0) {\n        left = true;\n      }\n      if (!right && rightCol && range.columns.indexOf(rightCol) < 0) {\n        right = true;\n      }\n    }\n    return {\n      top,\n      right,\n      bottom,\n      left\n    };\n  }\n  refreshHandle() {\n    if (this.beans.context.isDestroyed()) {\n      return;\n    }\n    const shouldHaveSelectionHandle = this.shouldHaveSelectionHandle();\n    if (this.selectionHandle && !shouldHaveSelectionHandle) {\n      this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle);\n    }\n    if (shouldHaveSelectionHandle) {\n      this.addSelectionHandle();\n    }\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_HANDLE, !!this.selectionHandle);\n  }\n  shouldHaveSelectionHandle() {\n    const gos = this.beans.gos;\n    const cellRanges = this.rangeService.getCellRanges();\n    const rangesLen = cellRanges.length;\n    if (this.rangeCount < 1 || rangesLen < 1) {\n      return false;\n    }\n    const cellRange = _last(cellRanges);\n    const cellPosition = this.cellCtrl.getCellPosition();\n    const isFillHandleAvailable = gos.get(\"enableFillHandle\") && !this.cellCtrl.isSuppressFillHandle();\n    const isRangeHandleAvailable = gos.get(\"enableRangeHandle\");\n    let handleIsAvailable = rangesLen === 1 && !this.cellCtrl.isEditing() && (isFillHandleAvailable || isRangeHandleAvailable);\n    if (this.hasChartRange) {\n      const hasCategoryRange = cellRanges[0].type === 1 /* DIMENSION */;\n      const isCategoryCell = hasCategoryRange && this.rangeService.isCellInSpecificRange(cellPosition, cellRanges[0]);\n      this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_CHART_CATEGORY, isCategoryCell);\n      handleIsAvailable = cellRange.type === 0 /* VALUE */;\n    }\n    return handleIsAvailable && cellRange.endRow != null && this.rangeService.isContiguousRange(cellRange) && this.rangeService.isBottomRightCell(cellRange, cellPosition);\n  }\n  addSelectionHandle() {\n    const gos = this.beans.gos;\n    const cellRangeType = _last(this.rangeService.getCellRanges()).type;\n    const selectionHandleFill = gos.get(\"enableFillHandle\") && _missing(cellRangeType);\n    const type = selectionHandleFill ? 0 /* FILL */ : 1 /* RANGE */;\n    if (this.selectionHandle && this.selectionHandle.getType() !== type) {\n      this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle);\n    }\n    if (!this.selectionHandle) {\n      this.selectionHandle = this.selectionHandleFactory.createSelectionHandle(type);\n    }\n    this.selectionHandle.refresh(this.cellCtrl);\n  }\n  destroy() {\n    this.beans.context.destroyBean(this.selectionHandle);\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellCtrl.ts\nvar CSS_CELL = \"ag-cell\";\nvar CSS_AUTO_HEIGHT = \"ag-cell-auto-height\";\nvar CSS_NORMAL_HEIGHT = \"ag-cell-normal-height\";\nvar CSS_CELL_FOCUS = \"ag-cell-focus\";\nvar CSS_CELL_FIRST_RIGHT_PINNED = \"ag-cell-first-right-pinned\";\nvar CSS_CELL_LAST_LEFT_PINNED = \"ag-cell-last-left-pinned\";\nvar CSS_CELL_NOT_INLINE_EDITING = \"ag-cell-not-inline-editing\";\nvar CSS_COLUMN_HOVER = \"ag-column-hover\";\nvar CSS_CELL_WRAP_TEXT = \"ag-cell-wrap-text\";\nvar instanceIdSequence4 = 0;\nvar _CellCtrl = /*#__PURE__*/(() => {\n  let _CellCtrl = class _CellCtrl extends BeanStub {\n    constructor(column, rowNode, beans, rowCtrl) {\n      super();\n      this.column = column;\n      this.rowNode = rowNode;\n      this.beans = beans;\n      this.rowCtrl = rowCtrl;\n      this.cellRangeFeature = null;\n      this.cellPositionFeature = null;\n      this.cellCustomStyleFeature = null;\n      this.tooltipFeature = null;\n      this.cellMouseListenerFeature = null;\n      this.cellKeyboardListenerFeature = null;\n      this.suppressRefreshCell = false;\n      this.onCellCompAttachedFuncs = [];\n      this.instanceId = column.getId() + \"-\" + instanceIdSequence4++;\n      this.colIdSanitised = _escapeString(this.column.getId());\n      if (!beans.gos.get(\"suppressCellFocus\")) {\n        this.tabIndex = -1;\n      }\n      this.createCellPosition();\n      this.addFeatures();\n      this.updateAndFormatValue(false);\n    }\n    shouldRestoreFocus() {\n      return this.beans.focusService.shouldRestoreFocus(this.cellPosition);\n    }\n    addFeatures() {\n      this.cellPositionFeature = new CellPositionFeature(this, this.beans);\n      this.addDestroyFunc(() => {\n        this.cellPositionFeature?.destroy();\n        this.cellPositionFeature = null;\n      });\n      this.cellCustomStyleFeature = new CellCustomStyleFeature(this, this.beans);\n      this.addDestroyFunc(() => {\n        this.cellCustomStyleFeature?.destroy();\n        this.cellCustomStyleFeature = null;\n      });\n      this.cellMouseListenerFeature = new CellMouseListenerFeature(this, this.beans, this.column);\n      this.addDestroyFunc(() => {\n        this.cellMouseListenerFeature?.destroy();\n        this.cellMouseListenerFeature = null;\n      });\n      this.cellKeyboardListenerFeature = new CellKeyboardListenerFeature(this, this.beans, this.column, this.rowNode, this.rowCtrl);\n      this.addDestroyFunc(() => {\n        this.cellKeyboardListenerFeature?.destroy();\n        this.cellKeyboardListenerFeature = null;\n      });\n      if (this.column.isTooltipEnabled()) {\n        this.enableTooltipFeature();\n        this.addDestroyFunc(() => {\n          this.disableTooltipFeature();\n        });\n      }\n      const rangeSelectionEnabled = this.beans.rangeService && this.beans.gos.get(\"enableRangeSelection\");\n      if (rangeSelectionEnabled) {\n        this.cellRangeFeature = new CellRangeFeature(this.beans, this);\n        this.addDestroyFunc(() => {\n          this.cellRangeFeature?.destroy();\n          this.cellRangeFeature = null;\n        });\n      }\n    }\n    enableTooltipFeature(value, shouldDisplayTooltip) {\n      const getTooltipValue = () => {\n        const colDef = this.column.getColDef();\n        const data = this.rowNode.data;\n        if (colDef.tooltipField && _exists(data)) {\n          return _getValueUsingField(data, colDef.tooltipField, this.column.isTooltipFieldContainsDots());\n        }\n        const valueGetter = colDef.tooltipValueGetter;\n        if (valueGetter) {\n          return valueGetter(this.beans.gos.addGridCommonParams({\n            location: \"cell\",\n            colDef: this.column.getColDef(),\n            column: this.column,\n            rowIndex: this.cellPosition.rowIndex,\n            node: this.rowNode,\n            data: this.rowNode.data,\n            value: this.value,\n            valueFormatted: this.valueFormatted\n          }));\n        }\n        return null;\n      };\n      const isTooltipWhenTruncated = this.beans.gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n      if (!shouldDisplayTooltip && isTooltipWhenTruncated && !this.isCellRenderer()) {\n        shouldDisplayTooltip = () => {\n          const eGui = this.getGui();\n          const textEl = eGui.children.length === 0 ? eGui : eGui.querySelector(\".ag-cell-value\");\n          if (!textEl) {\n            return true;\n          }\n          return textEl.scrollWidth > textEl.clientWidth;\n        };\n      }\n      const tooltipCtrl = {\n        getColumn: () => this.column,\n        getColDef: () => this.column.getColDef(),\n        getRowIndex: () => this.cellPosition.rowIndex,\n        getRowNode: () => this.rowNode,\n        getGui: () => this.getGui(),\n        getLocation: () => \"cell\",\n        getTooltipValue: value != null ? () => value : getTooltipValue,\n        // this makes no sense, why is the cell formatted value passed to the tooltip???\n        getValueFormatted: () => this.valueFormatted,\n        shouldDisplayTooltip\n      };\n      this.tooltipFeature = new TooltipFeature(tooltipCtrl, this.beans);\n    }\n    disableTooltipFeature() {\n      if (!this.tooltipFeature) {\n        return;\n      }\n      this.tooltipFeature.destroy();\n      this.tooltipFeature = null;\n    }\n    setComp(comp, eGui, eCellWrapper, printLayout, startEditing) {\n      this.cellComp = comp;\n      this.eGui = eGui;\n      this.printLayout = printLayout;\n      this.addDomData();\n      this.onCellFocused(this.focusEventToRestore);\n      this.applyStaticCssClasses();\n      this.setWrapText();\n      this.onFirstRightPinnedChanged();\n      this.onLastLeftPinnedChanged();\n      this.onColumnHover();\n      this.setupControlComps();\n      this.setupAutoHeight(eCellWrapper);\n      this.refreshFirstAndLastStyles();\n      this.refreshAriaColIndex();\n      this.cellPositionFeature?.setComp(eGui);\n      this.cellCustomStyleFeature?.setComp(comp);\n      this.tooltipFeature?.refreshToolTip();\n      this.cellKeyboardListenerFeature?.setComp(this.eGui);\n      if (this.cellRangeFeature) {\n        this.cellRangeFeature.setComp(comp, eGui);\n      }\n      if (startEditing && this.isCellEditable()) {\n        this.startEditing();\n      } else {\n        this.showValue();\n      }\n      if (this.onCellCompAttachedFuncs.length) {\n        this.onCellCompAttachedFuncs.forEach(func => func());\n        this.onCellCompAttachedFuncs = [];\n      }\n    }\n    setupAutoHeight(eCellWrapper) {\n      this.isAutoHeight = this.column.isAutoHeight();\n      if (!this.isAutoHeight || !eCellWrapper) {\n        return;\n      }\n      const eParentCell = eCellWrapper.parentElement;\n      const minRowHeight = this.beans.gos.getRowHeightForNode(this.rowNode).height;\n      const measureHeight = timesCalled => {\n        if (this.editing) {\n          return;\n        }\n        if (!this.isAlive()) {\n          return;\n        }\n        const {\n          paddingTop,\n          paddingBottom,\n          borderBottomWidth,\n          borderTopWidth\n        } = _getElementSize(eParentCell);\n        const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\n        const wrapperHeight = eCellWrapper.offsetHeight;\n        const autoHeight = wrapperHeight + extraHeight;\n        if (timesCalled < 5) {\n          const doc = this.beans.gos.getDocument();\n          const notYetInDom = !doc || !doc.contains(eCellWrapper);\n          const possiblyNoContentYet = autoHeight == 0;\n          if (notYetInDom || possiblyNoContentYet) {\n            window.setTimeout(() => measureHeight(timesCalled + 1), 0);\n            return;\n          }\n        }\n        const newHeight = Math.max(autoHeight, minRowHeight);\n        this.rowNode.setRowAutoHeight(newHeight, this.column);\n      };\n      const listener = () => measureHeight(0);\n      listener();\n      const destroyResizeObserver = this.beans.resizeObserverService.observeResize(eCellWrapper, listener);\n      this.addDestroyFunc(() => {\n        destroyResizeObserver();\n        this.rowNode.setRowAutoHeight(void 0, this.column);\n      });\n    }\n    getCellAriaRole() {\n      return this.column.getColDef().cellAriaRole ?? \"gridcell\";\n    }\n    getInstanceId() {\n      return this.instanceId;\n    }\n    getColumnIdSanitised() {\n      return this.colIdSanitised;\n    }\n    getTabIndex() {\n      return this.tabIndex;\n    }\n    isCellRenderer() {\n      const colDef = this.column.getColDef();\n      return colDef.cellRenderer != null || colDef.cellRendererSelector != null;\n    }\n    getValueToDisplay() {\n      return this.valueFormatted ?? this.value;\n    }\n    showValue(forceNewCellRendererInstance = false) {\n      const valueToDisplay = this.getValueToDisplay();\n      let compDetails;\n      if (this.rowNode.stub) {\n        const params = this.createCellRendererParams();\n        compDetails = this.beans.userComponentFactory.getLoadingCellRendererDetails(this.column.getColDef(), params);\n      } else if (this.isCellRenderer()) {\n        const params = this.createCellRendererParams();\n        compDetails = this.beans.userComponentFactory.getCellRendererDetails(this.column.getColDef(), params);\n      }\n      this.cellComp.setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance);\n      this.cellRangeFeature?.refreshHandle();\n    }\n    setupControlComps() {\n      const colDef = this.column.getColDef();\n      this.includeSelection = this.isIncludeControl(colDef.checkboxSelection);\n      this.includeRowDrag = this.isIncludeControl(colDef.rowDrag);\n      this.includeDndSource = this.isIncludeControl(colDef.dndSource);\n      this.cellComp.setIncludeSelection(this.includeSelection);\n      this.cellComp.setIncludeDndSource(this.includeDndSource);\n      this.cellComp.setIncludeRowDrag(this.includeRowDrag);\n    }\n    isForceWrapper() {\n      const forceWrapper = this.beans.gos.get(\"enableCellTextSelection\") || this.column.isAutoHeight();\n      return forceWrapper;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    isIncludeControl(value) {\n      const rowNodePinned = this.rowNode.rowPinned != null;\n      const isFunc = typeof value === \"function\";\n      const res = rowNodePinned ? false : isFunc || value === true;\n      return res;\n    }\n    refreshShouldDestroy() {\n      const colDef = this.column.getColDef();\n      const selectionChanged = this.includeSelection != this.isIncludeControl(colDef.checkboxSelection);\n      const rowDragChanged = this.includeRowDrag != this.isIncludeControl(colDef.rowDrag);\n      const dndSourceChanged = this.includeDndSource != this.isIncludeControl(colDef.dndSource);\n      const autoHeightChanged = this.isAutoHeight != this.column.isAutoHeight();\n      return selectionChanged || rowDragChanged || dndSourceChanged || autoHeightChanged;\n    }\n    // either called internally if single cell editing, or called by rowRenderer if row editing\n    startEditing(key = null, cellStartedEdit = false, event = null) {\n      const {\n        editService\n      } = this.beans;\n      if (!this.isCellEditable() || this.editing || !editService) {\n        return;\n      }\n      if (!this.cellComp) {\n        this.onCellCompAttachedFuncs.push(() => {\n          this.startEditing(key, cellStartedEdit, event);\n        });\n        return;\n      }\n      editService.startEditing(this, key, cellStartedEdit, event);\n    }\n    setEditing(editing, compDetails) {\n      this.editCompDetails = compDetails;\n      if (this.editing === editing) {\n        return;\n      }\n      this.editing = editing;\n      this.cellRangeFeature?.refreshHandle();\n    }\n    // pass in 'true' to cancel the editing.\n    stopRowOrCellEdit(cancel = false) {\n      if (this.beans.gos.get(\"editType\") === \"fullRow\") {\n        this.rowCtrl.stopEditing(cancel);\n      } else {\n        this.stopEditing(cancel);\n      }\n    }\n    onPopupEditorClosed() {\n      if (!this.editing) {\n        return;\n      }\n      this.stopEditingAndFocus();\n    }\n    /**\n     * Ends the Cell Editing\n     * @param cancel `True` if the edit process is being canceled.\n     * @returns `True` if the value of the `GridCell` has been updated, otherwise `False`.\n     */\n    stopEditing(cancel = false) {\n      const {\n        editService\n      } = this.beans;\n      if (!this.editing || !editService) {\n        return false;\n      }\n      return editService.stopEditing(this, cancel);\n    }\n    createCellRendererParams() {\n      const res = this.beans.gos.addGridCommonParams({\n        value: this.value,\n        valueFormatted: this.valueFormatted,\n        getValue: () => this.rowNode.getValueFromValueService(this.column),\n        setValue: value => this.beans.valueService.setValue(this.rowNode, this.column, value),\n        formatValue: this.formatValue.bind(this),\n        data: this.rowNode.data,\n        node: this.rowNode,\n        pinned: this.column.getPinned(),\n        colDef: this.column.getColDef(),\n        column: this.column,\n        refreshCell: this.refreshCell.bind(this),\n        eGridCell: this.getGui(),\n        eParentOfValue: this.cellComp.getParentOfValue(),\n        registerRowDragger: (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) => this.registerRowDragger(rowDraggerElement, dragStartPixels, suppressVisibilityChange),\n        setTooltip: (value, shouldDisplayTooltip) => {\n          if (this.tooltipFeature) {\n            this.disableTooltipFeature();\n          }\n          this.enableTooltipFeature(value, shouldDisplayTooltip);\n          this.tooltipFeature?.refreshToolTip();\n        }\n      });\n      return res;\n    }\n    setFocusOutOnEditor() {\n      if (!this.editing) {\n        return;\n      }\n      this.beans.editService?.setFocusOutOnEditor(this);\n    }\n    setFocusInOnEditor() {\n      if (!this.editing) {\n        return;\n      }\n      this.beans.editService?.setFocusInOnEditor(this);\n    }\n    onCellChanged(event) {\n      const eventImpactsThisCell = event.column === this.column;\n      if (eventImpactsThisCell) {\n        this.refreshCell({});\n      }\n    }\n    refreshOrDestroyCell(params) {\n      if (this.refreshShouldDestroy()) {\n        this.rowCtrl?.recreateCell(this);\n      } else {\n        this.refreshCell(params);\n      }\n    }\n    // + stop editing {forceRefresh: true, suppressFlash: true}\n    // + event cellChanged {}\n    // + cellRenderer.params.refresh() {} -> method passes 'as is' to the cellRenderer, so params could be anything\n    // + rowCtrl: event dataChanged {suppressFlash: !update, newData: !update}\n    // + rowCtrl: api refreshCells() {animate: true/false}\n    // + rowRenderer: api softRefreshView() {}\n    refreshCell(params) {\n      if (this.suppressRefreshCell || this.editing) {\n        return;\n      }\n      const colDef = this.column.getColDef();\n      const newData = params != null && !!params.newData;\n      const suppressFlash = params != null && !!params.suppressFlash || !!colDef.suppressCellFlash;\n      const noValueProvided = colDef.field == null && colDef.valueGetter == null && colDef.showRowGroup == null;\n      const forceRefresh = params && params.forceRefresh || noValueProvided || newData;\n      const isCellCompReady = !!this.cellComp;\n      const valuesDifferent = this.updateAndFormatValue(isCellCompReady);\n      const dataNeedsUpdating = forceRefresh || valuesDifferent;\n      if (!isCellCompReady) {\n        return;\n      }\n      if (dataNeedsUpdating) {\n        this.showValue(newData);\n        const processingFilterChange = this.beans.filterManager?.isSuppressFlashingCellsBecauseFiltering();\n        const flashCell = !suppressFlash && !processingFilterChange && (this.beans.gos.get(\"enableCellChangeFlash\") || colDef.enableCellChangeFlash);\n        if (flashCell) {\n          this.flashCell();\n        }\n        this.cellCustomStyleFeature?.applyUserStyles();\n        this.cellCustomStyleFeature?.applyClassesFromColDef();\n      }\n      this.tooltipFeature?.refreshToolTip();\n      this.cellCustomStyleFeature?.applyCellClassRules();\n    }\n    // cell editors call this, when they want to stop for reasons other\n    // than what we pick up on. eg selecting from a dropdown ends editing.\n    stopEditingAndFocus(suppressNavigateAfterEdit = false, shiftKey = false) {\n      this.beans.editService?.stopEditingAndFocus(this, suppressNavigateAfterEdit, shiftKey);\n    }\n    // user can also call this via API\n    flashCell(delays) {\n      const flashDuration = delays?.flashDuration ?? delays?.flashDelay;\n      const fadeDuration = delays?.fadeDuration ?? delays?.fadeDelay;\n      this.animateCell(\"data-changed\", flashDuration, fadeDuration);\n    }\n    animateCell(cssName, flashDuration, fadeDuration) {\n      if (!this.cellComp) {\n        return;\n      }\n      const fullName = `ag-cell-${cssName}`;\n      const animationFullName = `ag-cell-${cssName}-animation`;\n      const {\n        gos\n      } = this.beans;\n      if (!flashDuration) {\n        flashDuration = gos.get(\"cellFlashDuration\");\n      }\n      if (!_exists(fadeDuration)) {\n        fadeDuration = gos.get(\"cellFadeDuration\");\n      }\n      this.cellComp.addOrRemoveCssClass(fullName, true);\n      this.cellComp.addOrRemoveCssClass(animationFullName, false);\n      this.beans.frameworkOverrides.wrapIncoming(() => {\n        window.setTimeout(() => {\n          if (!this.isAlive()) {\n            return;\n          }\n          this.cellComp.addOrRemoveCssClass(fullName, false);\n          this.cellComp.addOrRemoveCssClass(animationFullName, true);\n          this.eGui.style.transition = `background-color ${fadeDuration}ms`;\n          window.setTimeout(() => {\n            if (!this.isAlive()) {\n              return;\n            }\n            this.cellComp.addOrRemoveCssClass(animationFullName, false);\n            this.eGui.style.transition = \"\";\n          }, fadeDuration);\n        }, flashDuration);\n      });\n    }\n    onFlashCells(event) {\n      if (!this.cellComp) {\n        return;\n      }\n      const cellId = this.beans.cellPositionUtils.createId(this.getCellPosition());\n      const shouldFlash = event.cells[cellId];\n      if (shouldFlash) {\n        this.animateCell(\"highlight\");\n      }\n    }\n    isCellEditable() {\n      return this.column.isCellEditable(this.rowNode);\n    }\n    isSuppressFillHandle() {\n      return this.column.isSuppressFillHandle();\n    }\n    formatValue(value) {\n      return this.callValueFormatter(value) ?? value;\n    }\n    callValueFormatter(value) {\n      return this.beans.valueService.formatValue(this.column, this.rowNode, value);\n    }\n    updateAndFormatValue(compareValues) {\n      const oldValue = this.value;\n      const oldValueFormatted = this.valueFormatted;\n      this.value = this.rowNode.getValueFromValueService(this.column);\n      this.valueFormatted = this.callValueFormatter(this.value);\n      if (compareValues) {\n        return !this.valuesAreEqual(oldValue, this.value) || this.valueFormatted != oldValueFormatted;\n      }\n      return true;\n    }\n    valuesAreEqual(val1, val2) {\n      const colDef = this.column.getColDef();\n      return colDef.equals ? colDef.equals(val1, val2) : val1 === val2;\n    }\n    getComp() {\n      return this.cellComp;\n    }\n    getValue() {\n      return this.value;\n    }\n    addDomData() {\n      const element = this.getGui();\n      this.beans.gos.setDomData(element, _CellCtrl.DOM_DATA_KEY_CELL_CTRL, this);\n      this.addDestroyFunc(() => this.beans.gos.setDomData(element, _CellCtrl.DOM_DATA_KEY_CELL_CTRL, null));\n    }\n    createEvent(domEvent, eventType) {\n      const event = this.beans.gos.addGridCommonParams({\n        type: eventType,\n        node: this.rowNode,\n        data: this.rowNode.data,\n        value: this.value,\n        column: this.column,\n        colDef: this.column.getColDef(),\n        rowPinned: this.rowNode.rowPinned,\n        event: domEvent,\n        rowIndex: this.rowNode.rowIndex\n      });\n      return event;\n    }\n    processCharacter(event) {\n      this.cellKeyboardListenerFeature?.processCharacter(event);\n    }\n    onKeyDown(event) {\n      this.cellKeyboardListenerFeature?.onKeyDown(event);\n    }\n    onMouseEvent(eventName, mouseEvent) {\n      this.cellMouseListenerFeature?.onMouseEvent(eventName, mouseEvent);\n    }\n    getGui() {\n      return this.eGui;\n    }\n    getColSpanningList() {\n      return this.cellPositionFeature.getColSpanningList();\n    }\n    onLeftChanged() {\n      if (!this.cellComp) {\n        return;\n      }\n      this.cellPositionFeature?.onLeftChanged();\n    }\n    onDisplayedColumnsChanged() {\n      if (!this.eGui) {\n        return;\n      }\n      this.refreshAriaColIndex();\n      this.refreshFirstAndLastStyles();\n    }\n    refreshFirstAndLastStyles() {\n      const {\n        cellComp,\n        column,\n        beans\n      } = this;\n      refreshFirstAndLastStyles(cellComp, column, beans.visibleColsService);\n    }\n    refreshAriaColIndex() {\n      const colIdx = this.beans.visibleColsService.getAriaColIndex(this.column);\n      _setAriaColIndex(this.getGui(), colIdx);\n    }\n    isSuppressNavigable() {\n      return this.column.isSuppressNavigable(this.rowNode);\n    }\n    onWidthChanged() {\n      return this.cellPositionFeature?.onWidthChanged();\n    }\n    getColumn() {\n      return this.column;\n    }\n    getRowNode() {\n      return this.rowNode;\n    }\n    isPrintLayout() {\n      return this.printLayout;\n    }\n    getCellPosition() {\n      return this.cellPosition;\n    }\n    isEditing() {\n      return this.editing;\n    }\n    // called by rowRenderer when user navigates via tab key\n    startRowOrCellEdit(key, event = null) {\n      if (!this.cellComp) {\n        this.onCellCompAttachedFuncs.push(() => {\n          this.startRowOrCellEdit(key, event);\n        });\n        return;\n      }\n      if (this.beans.gos.get(\"editType\") === \"fullRow\") {\n        this.rowCtrl.startRowEditing(key, this);\n      } else {\n        this.startEditing(key, true, event);\n      }\n    }\n    getRowCtrl() {\n      return this.rowCtrl;\n    }\n    getRowPosition() {\n      return {\n        rowIndex: this.cellPosition.rowIndex,\n        rowPinned: this.cellPosition.rowPinned\n      };\n    }\n    updateRangeBordersIfRangeCount() {\n      if (!this.cellComp) {\n        return;\n      }\n      if (this.cellRangeFeature) {\n        this.cellRangeFeature.updateRangeBordersIfRangeCount();\n      }\n    }\n    onRangeSelectionChanged() {\n      if (!this.cellComp) {\n        return;\n      }\n      if (this.cellRangeFeature) {\n        this.cellRangeFeature.onRangeSelectionChanged();\n      }\n    }\n    isRangeSelectionEnabled() {\n      return this.cellRangeFeature != null;\n    }\n    focusCell(forceBrowserFocus = false) {\n      this.beans.focusService.setFocusedCell({\n        rowIndex: this.getCellPosition().rowIndex,\n        column: this.column,\n        rowPinned: this.rowNode.rowPinned,\n        forceBrowserFocus\n      });\n    }\n    onRowIndexChanged() {\n      this.createCellPosition();\n      this.onCellFocused();\n      if (this.cellRangeFeature) {\n        this.cellRangeFeature.onRangeSelectionChanged();\n      }\n    }\n    onFirstRightPinnedChanged() {\n      if (!this.cellComp) {\n        return;\n      }\n      const firstRightPinned = this.column.isFirstRightPinned();\n      this.cellComp.addOrRemoveCssClass(CSS_CELL_FIRST_RIGHT_PINNED, firstRightPinned);\n    }\n    onLastLeftPinnedChanged() {\n      if (!this.cellComp) {\n        return;\n      }\n      const lastLeftPinned = this.column.isLastLeftPinned();\n      this.cellComp.addOrRemoveCssClass(CSS_CELL_LAST_LEFT_PINNED, lastLeftPinned);\n    }\n    onCellFocused(event) {\n      if (this.beans.gos.get(\"suppressCellFocus\")) {\n        return;\n      }\n      const cellFocused = this.beans.focusService.isCellFocused(this.cellPosition);\n      if (!this.cellComp) {\n        if (cellFocused && event?.forceBrowserFocus) {\n          this.focusEventToRestore = event;\n        }\n        return;\n      }\n      this.focusEventToRestore = void 0;\n      this.cellComp.addOrRemoveCssClass(CSS_CELL_FOCUS, cellFocused);\n      if (cellFocused && event && event.forceBrowserFocus) {\n        let focusEl = this.cellComp.getFocusableElement();\n        if (this.editing) {\n          const focusableEls = this.beans.focusService.findFocusableElements(focusEl, null, true);\n          if (focusableEls.length) {\n            focusEl = focusableEls[0];\n          }\n        }\n        focusEl.focus({\n          preventScroll: !!event.preventScrollOnBrowserFocus\n        });\n      }\n      const fullRowEdit = this.beans.gos.get(\"editType\") === \"fullRow\";\n      if (!cellFocused && !fullRowEdit && this.editing) {\n        this.stopRowOrCellEdit();\n      }\n      if (cellFocused) {\n        this.rowCtrl.announceDescription();\n      }\n    }\n    createCellPosition() {\n      this.cellPosition = {\n        rowIndex: this.rowNode.rowIndex,\n        rowPinned: _makeNull(this.rowNode.rowPinned),\n        column: this.column\n      };\n    }\n    // CSS Classes that only get applied once, they never change\n    applyStaticCssClasses() {\n      this.cellComp.addOrRemoveCssClass(CSS_CELL, true);\n      this.cellComp.addOrRemoveCssClass(CSS_CELL_NOT_INLINE_EDITING, true);\n      const autoHeight = this.column.isAutoHeight() == true;\n      this.cellComp.addOrRemoveCssClass(CSS_AUTO_HEIGHT, autoHeight);\n      this.cellComp.addOrRemoveCssClass(CSS_NORMAL_HEIGHT, !autoHeight);\n    }\n    onColumnHover() {\n      if (!this.cellComp) {\n        return;\n      }\n      if (!this.beans.gos.get(\"columnHoverHighlight\")) {\n        return;\n      }\n      const isHovered = this.beans.columnHoverService.isHovered(this.column);\n      this.cellComp.addOrRemoveCssClass(CSS_COLUMN_HOVER, isHovered);\n    }\n    onColDefChanged() {\n      if (!this.cellComp) {\n        return;\n      }\n      const isTooltipEnabled = this.column.isTooltipEnabled();\n      if (isTooltipEnabled) {\n        this.disableTooltipFeature();\n        this.enableTooltipFeature();\n      } else {\n        this.disableTooltipFeature();\n      }\n      this.setWrapText();\n      if (!this.editing) {\n        this.refreshOrDestroyCell({\n          forceRefresh: true,\n          suppressFlash: true\n        });\n      } else {\n        this.beans.editService?.handleColDefChanged(this);\n      }\n    }\n    setWrapText() {\n      const value = this.column.getColDef().wrapText == true;\n      this.cellComp.addOrRemoveCssClass(CSS_CELL_WRAP_TEXT, value);\n    }\n    dispatchCellContextMenuEvent(event) {\n      const colDef = this.column.getColDef();\n      const cellContextMenuEvent = this.createEvent(event, \"cellContextMenu\");\n      this.beans.eventService.dispatchEvent(cellContextMenuEvent);\n      if (colDef.onCellContextMenu) {\n        window.setTimeout(() => {\n          this.beans.frameworkOverrides.wrapOutgoing(() => {\n            colDef.onCellContextMenu(cellContextMenuEvent);\n          });\n        }, 0);\n      }\n    }\n    getCellRenderer() {\n      return this.cellComp ? this.cellComp.getCellRenderer() : null;\n    }\n    getCellEditor() {\n      return this.cellComp ? this.cellComp.getCellEditor() : null;\n    }\n    destroy() {\n      this.onCellCompAttachedFuncs = [];\n      super.destroy();\n    }\n    createSelectionCheckbox() {\n      const cbSelectionComponent = new CheckboxSelectionComponent();\n      this.beans.context.createBean(cbSelectionComponent);\n      cbSelectionComponent.init({\n        rowNode: this.rowNode,\n        column: this.column\n      });\n      return cbSelectionComponent;\n    }\n    createDndSource() {\n      const dndSourceComp = new DndSourceComp(this.rowNode, this.column, this.eGui);\n      this.beans.context.createBean(dndSourceComp);\n      return dndSourceComp;\n    }\n    registerRowDragger(customElement, dragStartPixels, suppressVisibilityChange) {\n      if (this.customRowDragComp) {\n        this.customRowDragComp.setDragElement(customElement, dragStartPixels);\n        return;\n      }\n      const newComp = this.createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange);\n      if (newComp) {\n        this.customRowDragComp = newComp;\n        this.addDestroyFunc(() => {\n          this.beans.context.destroyBean(newComp);\n          this.customRowDragComp = null;\n        });\n      }\n    }\n    createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange) {\n      const pagination = this.beans.gos.get(\"pagination\");\n      const rowDragManaged = this.beans.gos.get(\"rowDragManaged\");\n      const clientSideRowModelActive = this.beans.gos.isRowModelType(\"clientSide\");\n      if (rowDragManaged) {\n        if (!clientSideRowModelActive) {\n          _warnOnce(\"managed row dragging is only allowed in the Client Side Row Model\");\n          return;\n        }\n        if (pagination) {\n          _warnOnce(\"managed row dragging is not possible when doing pagination\");\n          return;\n        }\n      }\n      const rowDragComp = new RowDragComp(() => this.value, this.rowNode, this.column, customElement, dragStartPixels, suppressVisibilityChange);\n      this.beans.context.createBean(rowDragComp);\n      return rowDragComp;\n    }\n    setSuppressRefreshCell(suppressRefreshCell) {\n      this.suppressRefreshCell = suppressRefreshCell;\n    }\n    getEditCompDetails() {\n      return this.editCompDetails;\n    }\n  };\n  _CellCtrl.DOM_DATA_KEY_CELL_CTRL = \"cellCtrl\";\n  return _CellCtrl;\n})();\nvar CellCtrl = _CellCtrl;\n\n// community-modules/core/src/rendering/row/rowCtrl.ts\nvar instanceIdSequence5 = 0;\nvar _RowCtrl = /*#__PURE__*/(() => {\n  let _RowCtrl = class _RowCtrl extends BeanStub {\n    constructor(rowNode, beans, animateIn, useAnimationFrameForCreate, printLayout) {\n      super();\n      this.allRowGuis = [];\n      this.active = true;\n      this.centerCellCtrls = {\n        list: [],\n        map: {}\n      };\n      this.leftCellCtrls = {\n        list: [],\n        map: {}\n      };\n      this.rightCellCtrls = {\n        list: [],\n        map: {}\n      };\n      this.slideInAnimation = {\n        left: false,\n        center: false,\n        right: false,\n        fullWidth: false\n      };\n      this.fadeInAnimation = {\n        left: false,\n        center: false,\n        right: false,\n        fullWidth: false\n      };\n      this.rowDragComps = [];\n      this.lastMouseDownOnDragger = false;\n      this.emptyStyle = {};\n      this.updateColumnListsPending = false;\n      this.rowId = null;\n      this.businessKeySanitised = null;\n      this.beans = beans;\n      this.gos = beans.gos;\n      this.rowNode = rowNode;\n      this.paginationPage = beans.paginationService?.getCurrentPage() ?? 0;\n      this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n      this.printLayout = printLayout;\n      this.suppressRowTransform = this.gos.get(\"suppressRowTransform\");\n      this.instanceId = rowNode.id + \"-\" + instanceIdSequence5++;\n      this.rowId = _escapeString(rowNode.id);\n      this.initRowBusinessKey();\n      this.rowFocused = beans.focusService.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n      this.rowLevel = beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n      this.setRowType();\n      this.setAnimateFlags(animateIn);\n      this.rowStyles = this.processStylesFromGridOptions();\n      if (this.isFullWidth() && !this.gos.get(\"suppressCellFocus\")) {\n        this.tabIndex = -1;\n      }\n      this.addListeners();\n    }\n    initRowBusinessKey() {\n      this.businessKeyForNodeFunc = this.gos.get(\"getBusinessKeyForNode\");\n      this.updateRowBusinessKey();\n    }\n    updateRowBusinessKey() {\n      if (typeof this.businessKeyForNodeFunc !== \"function\") {\n        return;\n      }\n      const businessKey = this.businessKeyForNodeFunc(this.rowNode);\n      this.businessKeySanitised = _escapeString(businessKey);\n    }\n    getRowId() {\n      return this.rowId;\n    }\n    getRowStyles() {\n      return this.rowStyles;\n    }\n    getTabIndex() {\n      return this.tabIndex;\n    }\n    isSticky() {\n      return this.rowNode.sticky;\n    }\n    getInstanceId() {\n      return this.instanceId;\n    }\n    updateGui(containerType, gui) {\n      if (containerType === \"left\") {\n        this.leftGui = gui;\n      } else if (containerType === \"right\") {\n        this.rightGui = gui;\n      } else if (containerType === \"fullWidth\") {\n        this.fullWidthGui = gui;\n      } else {\n        this.centerGui = gui;\n      }\n    }\n    setComp(rowComp, element, containerType) {\n      const gui = {\n        rowComp,\n        element,\n        containerType\n      };\n      this.allRowGuis.push(gui);\n      this.updateGui(containerType, gui);\n      this.initialiseRowComp(gui);\n      if (this.rowType !== \"FullWidthLoading\" && !this.rowNode.rowPinned) {\n        this.beans.rowRenderer.dispatchFirstDataRenderedEvent();\n      }\n    }\n    unsetComp(containerType) {\n      this.allRowGuis = this.allRowGuis.filter(rowGui => rowGui.containerType !== containerType);\n      this.updateGui(containerType, void 0);\n    }\n    isCacheable() {\n      return this.rowType === \"FullWidthDetail\" && this.gos.get(\"keepDetailRows\");\n    }\n    setCached(cached) {\n      const displayValue = cached ? \"none\" : \"\";\n      this.allRowGuis.forEach(rg => rg.element.style.display = displayValue);\n    }\n    initialiseRowComp(gui) {\n      const gos = this.gos;\n      this.listenOnDomOrder(gui);\n      if (this.beans.columnModel.wasAutoRowHeightEverActive()) {\n        this.rowNode.checkAutoHeights();\n      }\n      this.onRowHeightChanged(gui);\n      this.updateRowIndexes(gui);\n      this.setFocusedClasses(gui);\n      this.setStylesFromGridOptions(false, gui);\n      if (gos.isRowSelection() && this.rowNode.selectable) {\n        this.onRowSelected(gui);\n      }\n      this.updateColumnLists(!this.useAnimationFrameForCreate);\n      const comp = gui.rowComp;\n      const initialRowClasses = this.getInitialRowClasses(gui.containerType);\n      initialRowClasses.forEach(name => comp.addOrRemoveCssClass(name, true));\n      this.executeSlideAndFadeAnimations(gui);\n      if (this.rowNode.group) {\n        _setAriaExpanded(gui.element, this.rowNode.expanded == true);\n      }\n      this.setRowCompRowId(comp);\n      this.setRowCompRowBusinessKey(comp);\n      gos.setDomData(gui.element, _RowCtrl.DOM_DATA_KEY_ROW_CTRL, this);\n      this.addDestroyFunc(() => gos.setDomData(gui.element, _RowCtrl.DOM_DATA_KEY_ROW_CTRL, null));\n      if (this.useAnimationFrameForCreate) {\n        this.beans.animationFrameService.createTask(this.addHoverFunctionality.bind(this, gui.element), this.rowNode.rowIndex, \"createTasksP2\");\n      } else {\n        this.addHoverFunctionality(gui.element);\n      }\n      if (this.isFullWidth()) {\n        this.setupFullWidth(gui);\n      }\n      if (gos.get(\"rowDragEntireRow\")) {\n        this.addRowDraggerToRow(gui);\n      }\n      if (this.useAnimationFrameForCreate) {\n        this.beans.animationFrameService.addDestroyTask(() => {\n          if (!this.isAlive()) {\n            return;\n          }\n          gui.rowComp.addOrRemoveCssClass(\"ag-after-created\", true);\n        });\n      }\n      this.executeProcessRowPostCreateFunc();\n    }\n    setRowCompRowBusinessKey(comp) {\n      if (this.businessKeySanitised == null) {\n        return;\n      }\n      comp.setRowBusinessKey(this.businessKeySanitised);\n    }\n    getBusinessKey() {\n      return this.businessKeySanitised;\n    }\n    setRowCompRowId(comp) {\n      this.rowId = _escapeString(this.rowNode.id);\n      if (this.rowId == null) {\n        return;\n      }\n      comp.setRowId(this.rowId);\n    }\n    executeSlideAndFadeAnimations(gui) {\n      const {\n        containerType\n      } = gui;\n      const shouldSlide = this.slideInAnimation[containerType];\n      if (shouldSlide) {\n        _executeNextVMTurn(() => {\n          this.onTopChanged();\n        });\n        this.slideInAnimation[containerType] = false;\n      }\n      const shouldFade = this.fadeInAnimation[containerType];\n      if (shouldFade) {\n        _executeNextVMTurn(() => {\n          gui.rowComp.addOrRemoveCssClass(\"ag-opacity-zero\", false);\n        });\n        this.fadeInAnimation[containerType] = false;\n      }\n    }\n    addRowDraggerToRow(gui) {\n      if (this.gos.get(\"enableRangeSelection\")) {\n        _warnOnce(\"Setting `rowDragEntireRow: true` in the gridOptions doesn't work with `enableRangeSelection: true`\");\n        return;\n      }\n      const translate = this.beans.localeService.getLocaleTextFunc();\n      const rowDragComp = new RowDragComp(() => `1 ${translate(\"rowDragRow\", \"row\")}`, this.rowNode, void 0, gui.element, void 0, true);\n      const rowDragBean = this.createBean(rowDragComp, this.beans.context);\n      this.rowDragComps.push(rowDragBean);\n    }\n    setupFullWidth(gui) {\n      const pinned = this.getPinnedForContainer(gui.containerType);\n      if (this.rowType == \"FullWidthDetail\") {\n        if (!ModuleRegistry.__assertRegistered(\"@ag-grid-enterprise/master-detail\" /* MasterDetailModule */, \"cell renderer 'agDetailCellRenderer' (for master detail)\", this.beans.context.getGridId())) {\n          return;\n        }\n      }\n      const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\n      gui.rowComp.showFullWidth(compDetails);\n    }\n    isPrintLayout() {\n      return this.printLayout;\n    }\n    getFullWidthCellRenderers() {\n      if (this.gos.get(\"embedFullWidthRows\")) {\n        return this.allRowGuis.map(gui => gui?.rowComp?.getFullWidthCellRenderer());\n      }\n      return [this.fullWidthGui?.rowComp?.getFullWidthCellRenderer()];\n    }\n    // use by autoWidthCalculator, as it clones the elements\n    getCellElement(column) {\n      const cellCtrl = this.getCellCtrl(column);\n      return cellCtrl ? cellCtrl.getGui() : null;\n    }\n    executeProcessRowPostCreateFunc() {\n      const func = this.gos.getCallback(\"processRowPostCreate\");\n      if (!func || !this.areAllContainersReady()) {\n        return;\n      }\n      const params = {\n        // areAllContainersReady asserts that centerGui is not null\n        eRow: this.centerGui.element,\n        ePinnedLeftRow: this.leftGui ? this.leftGui.element : void 0,\n        ePinnedRightRow: this.rightGui ? this.rightGui.element : void 0,\n        node: this.rowNode,\n        rowIndex: this.rowNode.rowIndex,\n        addRenderedRowListener: this.addEventListener.bind(this)\n      };\n      func(params);\n    }\n    areAllContainersReady() {\n      const isLeftReady = !!this.leftGui || !this.beans.visibleColsService.isPinningLeft();\n      const isCenterReady = !!this.centerGui;\n      const isRightReady = !!this.rightGui || !this.beans.visibleColsService.isPinningRight();\n      return isLeftReady && isCenterReady && isRightReady;\n    }\n    setRowType() {\n      const isStub = this.rowNode.stub && !this.gos.get(\"suppressServerSideFullWidthLoadingRow\");\n      const isFullWidthCell = this.rowNode.isFullWidthCell();\n      const isDetailCell = this.gos.get(\"masterDetail\") && this.rowNode.detail;\n      const pivotMode = this.beans.columnModel.isPivotMode();\n      const isGroupRow = !!this.rowNode.group && !this.rowNode.footer;\n      const isFullWidthGroup = isGroupRow && this.gos.isGroupUseEntireRow(pivotMode);\n      if (isStub) {\n        this.rowType = \"FullWidthLoading\";\n      } else if (isDetailCell) {\n        this.rowType = \"FullWidthDetail\";\n      } else if (isFullWidthCell) {\n        this.rowType = \"FullWidth\";\n      } else if (isFullWidthGroup) {\n        this.rowType = \"FullWidthGroup\";\n      } else {\n        this.rowType = \"Normal\";\n      }\n    }\n    updateColumnLists(suppressAnimationFrame = false, useFlushSync = false) {\n      if (this.isFullWidth()) {\n        return;\n      }\n      const noAnimation = suppressAnimationFrame || this.gos.get(\"suppressAnimationFrame\") || this.printLayout;\n      if (noAnimation) {\n        this.updateColumnListsImpl(useFlushSync);\n        return;\n      }\n      if (this.updateColumnListsPending) {\n        return;\n      }\n      this.beans.animationFrameService.createTask(() => {\n        if (!this.active) {\n          return;\n        }\n        this.updateColumnListsImpl(true);\n      }, this.rowNode.rowIndex, \"createTasksP1\");\n      this.updateColumnListsPending = true;\n    }\n    createCellCtrls(prev, cols, pinned = null) {\n      const res = {\n        list: [],\n        map: {}\n      };\n      const addCell = (colInstanceId, cellCtrl) => {\n        res.list.push(cellCtrl);\n        res.map[colInstanceId] = cellCtrl;\n      };\n      cols.forEach(col => {\n        const colInstanceId = col.getInstanceId();\n        let cellCtrl = prev.map[colInstanceId];\n        if (!cellCtrl) {\n          cellCtrl = new CellCtrl(col, this.rowNode, this.beans, this);\n        }\n        addCell(colInstanceId, cellCtrl);\n      });\n      prev.list.forEach(prevCellCtrl => {\n        const cellInResult = res.map[prevCellCtrl.getColumn().getInstanceId()] != null;\n        if (cellInResult) {\n          return;\n        }\n        const keepCell = !this.isCellEligibleToBeRemoved(prevCellCtrl, pinned);\n        if (keepCell) {\n          addCell(prevCellCtrl.getColumn().getInstanceId(), prevCellCtrl);\n          return;\n        }\n        prevCellCtrl.destroy();\n      });\n      return res;\n    }\n    updateColumnListsImpl(useFlushSync) {\n      this.updateColumnListsPending = false;\n      this.createAllCellCtrls();\n      this.setCellCtrls(useFlushSync);\n    }\n    setCellCtrls(useFlushSync) {\n      this.allRowGuis.forEach(item => {\n        const cellControls = this.getCellCtrlsForContainer(item.containerType);\n        item.rowComp.setCellCtrls(cellControls, useFlushSync);\n      });\n    }\n    getCellCtrlsForContainer(containerType) {\n      switch (containerType) {\n        case \"left\":\n          return this.leftCellCtrls.list;\n        case \"right\":\n          return this.rightCellCtrls.list;\n        case \"fullWidth\":\n          return [];\n        case \"center\":\n          return this.centerCellCtrls.list;\n      }\n    }\n    createAllCellCtrls() {\n      const columnViewportService = this.beans.columnViewportService;\n      const presentedColsService = this.beans.visibleColsService;\n      if (this.printLayout) {\n        this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, presentedColsService.getAllCols());\n        this.leftCellCtrls = {\n          list: [],\n          map: {}\n        };\n        this.rightCellCtrls = {\n          list: [],\n          map: {}\n        };\n      } else {\n        const centerCols = columnViewportService.getColsWithinViewport(this.rowNode);\n        this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, centerCols);\n        const leftCols = presentedColsService.getLeftColsForRow(this.rowNode);\n        this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, leftCols, \"left\");\n        const rightCols = presentedColsService.getRightColsForRow(this.rowNode);\n        this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, rightCols, \"right\");\n      }\n    }\n    isCellEligibleToBeRemoved(cellCtrl, nextContainerPinned) {\n      const REMOVE_CELL = true;\n      const KEEP_CELL = false;\n      const column = cellCtrl.getColumn();\n      if (column.getPinned() != nextContainerPinned) {\n        return REMOVE_CELL;\n      }\n      const editing = cellCtrl.isEditing();\n      const focused = this.beans.focusService.isCellFocused(cellCtrl.getCellPosition());\n      const mightWantToKeepCell = editing || focused;\n      if (mightWantToKeepCell) {\n        const column2 = cellCtrl.getColumn();\n        const displayedColumns = this.beans.visibleColsService.getAllCols();\n        const cellStillDisplayed = displayedColumns.indexOf(column2) >= 0;\n        return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n      }\n      return REMOVE_CELL;\n    }\n    getDomOrder() {\n      const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n      return isEnsureDomOrder || this.gos.isDomLayout(\"print\");\n    }\n    listenOnDomOrder(gui) {\n      const listener = () => {\n        gui.rowComp.setDomOrder(this.getDomOrder());\n      };\n      this.addManagedPropertyListener(\"domLayout\", listener);\n      this.addManagedPropertyListener(\"ensureDomOrder\", listener);\n    }\n    setAnimateFlags(animateIn) {\n      if (this.isSticky() || !animateIn) {\n        return;\n      }\n      const oldRowTopExists = _exists(this.rowNode.oldRowTop);\n      const pinningLeft = this.beans.visibleColsService.isPinningLeft();\n      const pinningRight = this.beans.visibleColsService.isPinningRight();\n      if (oldRowTopExists) {\n        if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\n          this.slideInAnimation.fullWidth = true;\n          return;\n        }\n        this.slideInAnimation.center = true;\n        this.slideInAnimation.left = pinningLeft;\n        this.slideInAnimation.right = pinningRight;\n      } else {\n        if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\n          this.fadeInAnimation.fullWidth = true;\n          return;\n        }\n        this.fadeInAnimation.center = true;\n        this.fadeInAnimation.left = pinningLeft;\n        this.fadeInAnimation.right = pinningRight;\n      }\n    }\n    isEditing() {\n      return this.editingRow;\n    }\n    isFullWidth() {\n      return this.rowType !== \"Normal\";\n    }\n    refreshFullWidth() {\n      const tryRefresh = (gui, pinned) => {\n        if (!gui) {\n          return true;\n        }\n        return gui.rowComp.refreshFullWidth(() => {\n          const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\n          return compDetails.params;\n        });\n      };\n      const fullWidthSuccess = tryRefresh(this.fullWidthGui, null);\n      const centerSuccess = tryRefresh(this.centerGui, null);\n      const leftSuccess = tryRefresh(this.leftGui, \"left\");\n      const rightSuccess = tryRefresh(this.rightGui, \"right\");\n      const allFullWidthRowsRefreshed = fullWidthSuccess && centerSuccess && leftSuccess && rightSuccess;\n      return allFullWidthRowsRefreshed;\n    }\n    addListeners() {\n      this.addManagedListeners(this.rowNode, {\n        heightChanged: () => this.onRowHeightChanged(),\n        rowSelected: () => this.onRowSelected(),\n        rowIndexChanged: this.onRowIndexChanged.bind(this),\n        topChanged: this.onTopChanged.bind(this),\n        expandedChanged: this.updateExpandedCss.bind(this),\n        hasChildrenChanged: this.updateExpandedCss.bind(this)\n      });\n      if (this.rowNode.detail) {\n        this.addManagedListeners(this.rowNode.parent, {\n          dataChanged: this.onRowNodeDataChanged.bind(this)\n        });\n      }\n      this.addManagedListeners(this.rowNode, {\n        dataChanged: this.onRowNodeDataChanged.bind(this),\n        cellChanged: this.postProcessCss.bind(this),\n        rowHighlightChanged: this.onRowNodeHighlightChanged.bind(this),\n        draggingChanged: this.postProcessRowDragging.bind(this),\n        uiLevelChanged: this.onUiLevelChanged.bind(this)\n      });\n      this.addManagedListeners(this.beans.eventService, {\n        paginationPixelOffsetChanged: this.onPaginationPixelOffsetChanged.bind(this),\n        heightScaleChanged: this.onTopChanged.bind(this),\n        displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n        virtualColumnsChanged: this.onVirtualColumnsChanged.bind(this),\n        cellFocused: this.onCellFocusChanged.bind(this),\n        cellFocusCleared: this.onCellFocusChanged.bind(this),\n        paginationChanged: this.onPaginationChanged.bind(this),\n        modelUpdated: this.refreshFirstAndLastRowStyles.bind(this),\n        columnMoved: () => this.updateColumnLists()\n      });\n      this.addDestroyFunc(() => {\n        this.destroyBeans(this.rowDragComps, this.beans.context);\n        if (this.tooltipFeature) {\n          this.tooltipFeature = this.destroyBean(this.tooltipFeature, this.beans.context);\n        }\n      });\n      this.addManagedPropertyListeners([\"rowDragEntireRow\"], () => {\n        const useRowDragEntireRow = this.gos.get(\"rowDragEntireRow\");\n        if (useRowDragEntireRow) {\n          this.allRowGuis.forEach(gui => {\n            this.addRowDraggerToRow(gui);\n          });\n          return;\n        }\n        this.rowDragComps = this.destroyBeans(this.rowDragComps, this.beans.context);\n      });\n      this.addListenersForCellComps();\n    }\n    addListenersForCellComps() {\n      this.addManagedListeners(this.rowNode, {\n        rowIndexChanged: () => {\n          this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onRowIndexChanged());\n        },\n        cellChanged: event => {\n          this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onCellChanged(event));\n        }\n      });\n    }\n    onRowNodeDataChanged(event) {\n      const fullWidthChanged = this.isFullWidth() !== !!this.rowNode.isFullWidthCell();\n      if (fullWidthChanged) {\n        this.beans.rowRenderer.redrawRow(this.rowNode);\n        return;\n      }\n      if (this.isFullWidth()) {\n        const refresh = this.refreshFullWidth();\n        if (!refresh) {\n          this.beans.rowRenderer.redrawRow(this.rowNode);\n        }\n        return;\n      }\n      this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.refreshCell({\n        suppressFlash: !event.update,\n        newData: !event.update\n      }));\n      this.allRowGuis.forEach(gui => {\n        this.setRowCompRowId(gui.rowComp);\n        this.updateRowBusinessKey();\n        this.setRowCompRowBusinessKey(gui.rowComp);\n      });\n      this.onRowSelected();\n      this.postProcessCss();\n    }\n    postProcessCss() {\n      this.setStylesFromGridOptions(true);\n      this.postProcessClassesFromGridOptions();\n      this.postProcessRowClassRules();\n      this.postProcessRowDragging();\n    }\n    onRowNodeHighlightChanged() {\n      const highlighted = this.rowNode.highlighted;\n      this.allRowGuis.forEach(gui => {\n        const aboveOn = highlighted === 0 /* Above */;\n        const belowOn = highlighted === 1 /* Below */;\n        gui.rowComp.addOrRemoveCssClass(\"ag-row-highlight-above\", aboveOn);\n        gui.rowComp.addOrRemoveCssClass(\"ag-row-highlight-below\", belowOn);\n      });\n    }\n    postProcessRowDragging() {\n      const dragging = this.rowNode.dragging;\n      this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass(\"ag-row-dragging\", dragging));\n    }\n    updateExpandedCss() {\n      const expandable = this.rowNode.isExpandable();\n      const expanded = this.rowNode.expanded == true;\n      this.allRowGuis.forEach(gui => {\n        gui.rowComp.addOrRemoveCssClass(\"ag-row-group\", expandable);\n        gui.rowComp.addOrRemoveCssClass(\"ag-row-group-expanded\", expandable && expanded);\n        gui.rowComp.addOrRemoveCssClass(\"ag-row-group-contracted\", expandable && !expanded);\n        _setAriaExpanded(gui.element, expandable && expanded);\n      });\n    }\n    onDisplayedColumnsChanged() {\n      this.updateColumnLists(true);\n      if (this.beans.columnModel.wasAutoRowHeightEverActive()) {\n        this.rowNode.checkAutoHeights();\n      }\n    }\n    onVirtualColumnsChanged() {\n      this.updateColumnLists(false, true);\n    }\n    getRowPosition() {\n      return {\n        rowPinned: _makeNull(this.rowNode.rowPinned),\n        rowIndex: this.rowNode.rowIndex\n      };\n    }\n    onKeyboardNavigate(keyboardEvent) {\n      const currentFullWidthComp = this.allRowGuis.find(c => c.element.contains(keyboardEvent.target));\n      const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n      const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n      if (!isFullWidthContainerFocused) {\n        return;\n      }\n      const node = this.rowNode;\n      const lastFocusedCell = this.beans.focusService.getFocusedCell();\n      const cellPosition = {\n        rowIndex: node.rowIndex,\n        rowPinned: node.rowPinned,\n        column: lastFocusedCell && lastFocusedCell.column\n      };\n      this.beans.navigationService.navigateToNextCell(keyboardEvent, keyboardEvent.key, cellPosition, true);\n      keyboardEvent.preventDefault();\n    }\n    onTabKeyDown(keyboardEvent) {\n      if (keyboardEvent.defaultPrevented || _isStopPropagationForAgGrid(keyboardEvent)) {\n        return;\n      }\n      const currentFullWidthComp = this.allRowGuis.find(c => c.element.contains(keyboardEvent.target));\n      const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n      const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n      let nextEl = null;\n      if (!isFullWidthContainerFocused) {\n        nextEl = this.beans.focusService.findNextFocusableElement(currentFullWidthContainer, false, keyboardEvent.shiftKey);\n      }\n      if (this.isFullWidth() && isFullWidthContainerFocused || !nextEl) {\n        this.beans.navigationService.onTabKeyDown(this, keyboardEvent);\n      }\n    }\n    getFullWidthElement() {\n      if (this.fullWidthGui) {\n        return this.fullWidthGui.element;\n      }\n      return null;\n    }\n    getRowYPosition() {\n      const displayedEl = this.allRowGuis.find(el => _isVisible(el.element))?.element;\n      if (displayedEl) {\n        return displayedEl.getBoundingClientRect().top;\n      }\n      return 0;\n    }\n    onFullWidthRowFocused(event) {\n      const node = this.rowNode;\n      const isFocused = !event ? false : this.isFullWidth() && event.rowIndex === node.rowIndex && event.rowPinned == node.rowPinned;\n      const element = this.fullWidthGui ? this.fullWidthGui.element : this.centerGui?.element;\n      if (!element) {\n        return;\n      }\n      element.classList.toggle(\"ag-full-width-focus\", isFocused);\n      if (isFocused && event?.forceBrowserFocus) {\n        element.focus({\n          preventScroll: true\n        });\n      }\n    }\n    recreateCell(cellCtrl) {\n      this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, cellCtrl);\n      this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, cellCtrl);\n      this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, cellCtrl);\n      cellCtrl.destroy();\n      this.updateColumnLists();\n    }\n    removeCellCtrl(prev, cellCtrlToRemove) {\n      const res = {\n        list: [],\n        map: {}\n      };\n      prev.list.forEach(cellCtrl => {\n        if (cellCtrl === cellCtrlToRemove) {\n          return;\n        }\n        res.list.push(cellCtrl);\n        res.map[cellCtrl.getColumn().getInstanceId()] = cellCtrl;\n      });\n      return res;\n    }\n    onMouseEvent(eventName, mouseEvent) {\n      switch (eventName) {\n        case \"dblclick\":\n          this.onRowDblClick(mouseEvent);\n          break;\n        case \"click\":\n          this.onRowClick(mouseEvent);\n          break;\n        case \"touchstart\":\n        case \"mousedown\":\n          this.onRowMouseDown(mouseEvent);\n          break;\n      }\n    }\n    createRowEvent(type, domEvent) {\n      return this.gos.addGridCommonParams({\n        type,\n        node: this.rowNode,\n        data: this.rowNode.data,\n        rowIndex: this.rowNode.rowIndex,\n        rowPinned: this.rowNode.rowPinned,\n        event: domEvent\n      });\n    }\n    createRowEventWithSource(type, domEvent) {\n      const event = this.createRowEvent(type, domEvent);\n      event.source = this;\n      return event;\n    }\n    onRowDblClick(mouseEvent) {\n      if (_isStopPropagationForAgGrid(mouseEvent)) {\n        return;\n      }\n      const agEvent = this.createRowEventWithSource(\"rowDoubleClicked\", mouseEvent);\n      this.beans.eventService.dispatchEvent(agEvent);\n    }\n    onRowMouseDown(mouseEvent) {\n      this.lastMouseDownOnDragger = _isElementChildOfClass(mouseEvent.target, \"ag-row-drag\", 3);\n      if (!this.isFullWidth()) {\n        return;\n      }\n      const node = this.rowNode;\n      const presentedColsService = this.beans.visibleColsService;\n      if (this.beans.rangeService) {\n        this.beans.rangeService.removeAllCellRanges();\n      }\n      const element = this.getFullWidthElement();\n      const target = mouseEvent.target;\n      let forceBrowserFocus = true;\n      if (element && element.contains(target) && _isFocusableFormField(target)) {\n        forceBrowserFocus = false;\n      }\n      this.beans.focusService.setFocusedCell({\n        rowIndex: node.rowIndex,\n        column: presentedColsService.getAllCols()[0],\n        rowPinned: node.rowPinned,\n        forceBrowserFocus\n      });\n    }\n    onRowClick(mouseEvent) {\n      const stop = _isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\n      if (stop) {\n        return;\n      }\n      const agEvent = this.createRowEventWithSource(\"rowClicked\", mouseEvent);\n      this.beans.eventService.dispatchEvent(agEvent);\n      const isMultiKey = mouseEvent.ctrlKey || mouseEvent.metaKey;\n      const isShiftKey = mouseEvent.shiftKey;\n      const groupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n      if (\n      // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,\n      // so return if it's a group row\n      groupSelectsChildren && this.rowNode.group || this.isRowSelectionBlocked() ||\n      // if click selection suppressed, do nothing\n      this.gos.get(\"suppressRowClickSelection\")) {\n        return;\n      }\n      const multiSelectOnClick = this.gos.get(\"rowMultiSelectWithClick\");\n      const rowDeselectionWithCtrl = !this.gos.get(\"suppressRowDeselection\");\n      const source = \"rowClicked\";\n      if (this.rowNode.isSelected()) {\n        if (multiSelectOnClick) {\n          this.rowNode.setSelectedParams({\n            newValue: false,\n            event: mouseEvent,\n            source\n          });\n        } else if (isMultiKey) {\n          if (rowDeselectionWithCtrl) {\n            this.rowNode.setSelectedParams({\n              newValue: false,\n              event: mouseEvent,\n              source\n            });\n          }\n        } else {\n          this.rowNode.setSelectedParams({\n            newValue: true,\n            clearSelection: !isShiftKey,\n            rangeSelect: isShiftKey,\n            event: mouseEvent,\n            source\n          });\n        }\n      } else {\n        const clearSelection = multiSelectOnClick ? false : !isMultiKey;\n        this.rowNode.setSelectedParams({\n          newValue: true,\n          clearSelection,\n          rangeSelect: isShiftKey,\n          event: mouseEvent,\n          source\n        });\n      }\n    }\n    isRowSelectionBlocked() {\n      return !this.rowNode.selectable || !!this.rowNode.rowPinned || !this.gos.isRowSelection();\n    }\n    setupDetailRowAutoHeight(eDetailGui) {\n      if (this.rowType !== \"FullWidthDetail\") {\n        return;\n      }\n      if (!this.gos.get(\"detailRowAutoHeight\")) {\n        return;\n      }\n      const checkRowSizeFunc = () => {\n        const clientHeight = eDetailGui.clientHeight;\n        if (clientHeight != null && clientHeight > 0) {\n          const updateRowHeightFunc = () => {\n            this.rowNode.setRowHeight(clientHeight);\n            if (this.beans.rowModel.getType() === \"clientSide\") {\n              this.beans.rowModel.onRowHeightChanged();\n            } else if (this.beans.rowModel.getType() === \"serverSide\") {\n              this.beans.rowModel.onRowHeightChanged();\n            }\n          };\n          window.setTimeout(updateRowHeightFunc, 0);\n        }\n      };\n      const resizeObserverDestroyFunc = this.beans.resizeObserverService.observeResize(eDetailGui, checkRowSizeFunc);\n      this.addDestroyFunc(resizeObserverDestroyFunc);\n      checkRowSizeFunc();\n    }\n    createFullWidthCompDetails(eRow, pinned) {\n      const {\n        gos,\n        rowNode\n      } = this;\n      const params = gos.addGridCommonParams({\n        fullWidth: true,\n        data: rowNode.data,\n        node: rowNode,\n        value: rowNode.key,\n        valueFormatted: rowNode.key,\n        // these need to be taken out, as part of 'afterAttached' now\n        eGridCell: eRow,\n        eParentOfValue: eRow,\n        pinned,\n        addRenderedRowListener: this.addEventListener.bind(this),\n        registerRowDragger: (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) => this.addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value, suppressVisibilityChange),\n        setTooltip: (value, shouldDisplayTooltip) => this.refreshRowTooltip(value, shouldDisplayTooltip)\n      });\n      const compFactory = this.beans.userComponentFactory;\n      switch (this.rowType) {\n        case \"FullWidthDetail\":\n          return compFactory.getFullWidthDetailCellRendererDetails(params);\n        case \"FullWidthGroup\":\n          return compFactory.getFullWidthGroupCellRendererDetails(params);\n        case \"FullWidthLoading\":\n          return compFactory.getFullWidthLoadingCellRendererDetails(params);\n        default:\n          return compFactory.getFullWidthCellRendererDetails(params);\n      }\n    }\n    refreshRowTooltip(value, shouldDisplayTooltip) {\n      if (!this.fullWidthGui) {\n        return;\n      }\n      const tooltipParams = {\n        getGui: () => this.fullWidthGui.element,\n        getTooltipValue: () => value,\n        getLocation: () => \"fullWidthRow\",\n        shouldDisplayTooltip\n      };\n      if (this.tooltipFeature) {\n        this.destroyBean(this.tooltipFeature, this.beans.context);\n      }\n      this.tooltipFeature = this.createBean(new TooltipFeature(tooltipParams, this.beans));\n    }\n    addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value = \"\", suppressVisibilityChange) {\n      if (!this.isFullWidth()) {\n        return;\n      }\n      const rowDragComp = new RowDragComp(() => value, this.rowNode, void 0, rowDraggerElement, dragStartPixels, suppressVisibilityChange);\n      this.createBean(rowDragComp, this.beans.context);\n      this.addDestroyFunc(() => {\n        this.destroyBean(rowDragComp, this.beans.context);\n      });\n    }\n    onUiLevelChanged() {\n      const newLevel = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n      if (this.rowLevel != newLevel) {\n        const classToAdd = \"ag-row-level-\" + newLevel;\n        const classToRemove = \"ag-row-level-\" + this.rowLevel;\n        this.allRowGuis.forEach(gui => {\n          gui.rowComp.addOrRemoveCssClass(classToAdd, true);\n          gui.rowComp.addOrRemoveCssClass(classToRemove, false);\n        });\n      }\n      this.rowLevel = newLevel;\n    }\n    isFirstRowOnPage() {\n      return this.rowNode.rowIndex === this.beans.pageBoundsService.getFirstRow();\n    }\n    isLastRowOnPage() {\n      return this.rowNode.rowIndex === this.beans.pageBoundsService.getLastRow();\n    }\n    refreshFirstAndLastRowStyles() {\n      const newFirst = this.isFirstRowOnPage();\n      const newLast = this.isLastRowOnPage();\n      if (this.firstRowOnPage !== newFirst) {\n        this.firstRowOnPage = newFirst;\n        this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass(\"ag-row-first\", newFirst));\n      }\n      if (this.lastRowOnPage !== newLast) {\n        this.lastRowOnPage = newLast;\n        this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass(\"ag-row-last\", newLast));\n      }\n    }\n    stopEditing(cancel = false) {\n      if (this.stoppingRowEdit) {\n        return;\n      }\n      this.beans.rowEditService?.stopEditing(this, cancel);\n    }\n    setInlineEditingCss(editing) {\n      this.allRowGuis.forEach(gui => {\n        gui.rowComp.addOrRemoveCssClass(\"ag-row-inline-editing\", editing);\n        gui.rowComp.addOrRemoveCssClass(\"ag-row-not-inline-editing\", !editing);\n      });\n    }\n    setEditingRow(value) {\n      this.editingRow = value;\n    }\n    startRowEditing(key = null, sourceRenderedCell = null, event = null) {\n      if (this.editingRow) {\n        return;\n      }\n      this.beans.rowEditService?.startEditing(this, key, sourceRenderedCell, event);\n    }\n    getAllCellCtrls() {\n      if (this.leftCellCtrls.list.length === 0 && this.rightCellCtrls.list.length === 0) {\n        return this.centerCellCtrls.list;\n      }\n      const res = [...this.centerCellCtrls.list, ...this.leftCellCtrls.list, ...this.rightCellCtrls.list];\n      return res;\n    }\n    postProcessClassesFromGridOptions() {\n      const cssClasses = this.beans.rowCssClassCalculator.processClassesFromGridOptions(this.rowNode);\n      if (!cssClasses || !cssClasses.length) {\n        return;\n      }\n      cssClasses.forEach(classStr => {\n        this.allRowGuis.forEach(c => c.rowComp.addOrRemoveCssClass(classStr, true));\n      });\n    }\n    postProcessRowClassRules() {\n      this.beans.rowCssClassCalculator.processRowClassRules(this.rowNode, className => {\n        this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass(className, true));\n      }, className => {\n        this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass(className, false));\n      });\n    }\n    setStylesFromGridOptions(updateStyles, gui) {\n      if (updateStyles) {\n        this.rowStyles = this.processStylesFromGridOptions();\n      }\n      this.forEachGui(gui, gui2 => gui2.rowComp.setUserStyles(this.rowStyles));\n    }\n    getPinnedForContainer(rowContainerType) {\n      if (rowContainerType === \"left\" || rowContainerType === \"right\") {\n        return rowContainerType;\n      }\n      return null;\n    }\n    getInitialRowClasses(rowContainerType) {\n      const pinned = this.getPinnedForContainer(rowContainerType);\n      const params = {\n        rowNode: this.rowNode,\n        rowFocused: this.rowFocused,\n        fadeRowIn: this.fadeInAnimation[rowContainerType],\n        rowIsEven: this.rowNode.rowIndex % 2 === 0,\n        rowLevel: this.rowLevel,\n        fullWidthRow: this.isFullWidth(),\n        firstRowOnPage: this.isFirstRowOnPage(),\n        lastRowOnPage: this.isLastRowOnPage(),\n        printLayout: this.printLayout,\n        expandable: this.rowNode.isExpandable(),\n        pinned\n      };\n      return this.beans.rowCssClassCalculator.getInitialRowClasses(params);\n    }\n    processStylesFromGridOptions() {\n      const rowStyle = this.gos.get(\"rowStyle\");\n      if (rowStyle && typeof rowStyle === \"function\") {\n        _warnOnce(\"rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead\");\n        return;\n      }\n      const rowStyleFunc = this.gos.getCallback(\"getRowStyle\");\n      let rowStyleFuncResult;\n      if (rowStyleFunc) {\n        const params = {\n          data: this.rowNode.data,\n          node: this.rowNode,\n          rowIndex: this.rowNode.rowIndex\n        };\n        rowStyleFuncResult = rowStyleFunc(params);\n      }\n      if (rowStyleFuncResult || rowStyle) {\n        return Object.assign({}, rowStyle, rowStyleFuncResult);\n      }\n      return this.emptyStyle;\n    }\n    onRowSelected(gui) {\n      const selected = !!this.rowNode.isSelected();\n      this.forEachGui(gui, gui2 => {\n        gui2.rowComp.addOrRemoveCssClass(\"ag-row-selected\", selected);\n        _setAriaSelected(gui2.element, selected);\n        const hasFocus = gui2.element.contains(this.gos.getActiveDomElement());\n        if (hasFocus && (gui2 === this.centerGui || gui2 === this.fullWidthGui)) {\n          this.announceDescription();\n        }\n      });\n    }\n    announceDescription() {\n      if (this.isRowSelectionBlocked()) {\n        return;\n      }\n      const selected = this.rowNode.isSelected();\n      if (selected && this.gos.get(\"suppressRowDeselection\")) {\n        return;\n      }\n      const translate = this.beans.localeService.getLocaleTextFunc();\n      const label = translate(selected ? \"ariaRowDeselect\" : \"ariaRowSelect\", `Press SPACE to ${selected ? \"deselect\" : \"select\"} this row.`);\n      this.beans.ariaAnnouncementService.announceValue(label);\n    }\n    addHoverFunctionality(eRow) {\n      if (!this.active) {\n        return;\n      }\n      const {\n        rowNode,\n        beans,\n        gos\n      } = this;\n      this.addManagedListeners(eRow, {\n        mouseenter: () => rowNode.onMouseEnter(),\n        mouseleave: () => rowNode.onMouseLeave()\n      });\n      this.addManagedListeners(rowNode, {\n        mouseEnter: () => {\n          if (!beans.dragService.isDragging() && !gos.get(\"suppressRowHoverHighlight\")) {\n            eRow.classList.add(\"ag-row-hover\");\n            rowNode.setHovered(true);\n          }\n        },\n        mouseLeave: () => {\n          eRow.classList.remove(\"ag-row-hover\");\n          rowNode.setHovered(false);\n        }\n      });\n    }\n    // for animation, we don't want to animate entry or exit to a very far away pixel,\n    // otherwise the row would move so fast, it would appear to disappear. so this method\n    // moves the row closer to the viewport if it is far away, so the row slide in / out\n    // at a speed the user can see.\n    roundRowTopToBounds(rowTop) {\n      const range = this.beans.ctrlsService.getGridBodyCtrl().getScrollFeature().getApproximateVScollPosition();\n      const minPixel = this.applyPaginationOffset(range.top, true) - 100;\n      const maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n      return Math.min(Math.max(minPixel, rowTop), maxPixel);\n    }\n    getFrameworkOverrides() {\n      return this.beans.frameworkOverrides;\n    }\n    forEachGui(gui, callback) {\n      if (gui) {\n        callback(gui);\n      } else {\n        this.allRowGuis.forEach(callback);\n      }\n    }\n    onRowHeightChanged(gui) {\n      if (this.rowNode.rowHeight == null) {\n        return;\n      }\n      const rowHeight = this.rowNode.rowHeight;\n      const defaultRowHeight = this.beans.environment.getDefaultRowHeight();\n      const isHeightFromFunc = this.gos.isGetRowHeightFunction();\n      const heightFromFunc = isHeightFromFunc ? this.gos.getRowHeightForNode(this.rowNode).height : void 0;\n      const lineHeight = heightFromFunc ? `${Math.min(defaultRowHeight, heightFromFunc) - 2}px` : void 0;\n      this.forEachGui(gui, gui2 => {\n        gui2.element.style.height = `${rowHeight}px`;\n        if (lineHeight) {\n          gui2.element.style.setProperty(\"--ag-line-height\", lineHeight);\n        }\n      });\n    }\n    addEventListener(eventType, listener) {\n      super.addEventListener(eventType, listener);\n    }\n    removeEventListener(eventType, listener) {\n      super.removeEventListener(eventType, listener);\n    }\n    // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n    destroyFirstPass(suppressAnimation = false) {\n      this.active = false;\n      if (!suppressAnimation && this.gos.isAnimateRows() && !this.isSticky()) {\n        const rowStillVisibleJustNotInViewport = this.rowNode.rowTop != null;\n        if (rowStillVisibleJustNotInViewport) {\n          const rowTop = this.roundRowTopToBounds(this.rowNode.rowTop);\n          this.setRowTop(rowTop);\n        } else {\n          this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass(\"ag-opacity-zero\", true));\n        }\n      }\n      this.rowNode.setHovered(false);\n      const event = this.createRowEvent(\"virtualRowRemoved\");\n      this.dispatchLocalEvent(event);\n      this.beans.eventService.dispatchEvent(event);\n      super.destroy();\n    }\n    destroySecondPass() {\n      this.allRowGuis.length = 0;\n      this.stopEditing();\n      const destroyCellCtrls = ctrls => {\n        ctrls.list.forEach(c => c.destroy());\n        return {\n          list: [],\n          map: {}\n        };\n      };\n      this.centerCellCtrls = destroyCellCtrls(this.centerCellCtrls);\n      this.leftCellCtrls = destroyCellCtrls(this.leftCellCtrls);\n      this.rightCellCtrls = destroyCellCtrls(this.rightCellCtrls);\n    }\n    setFocusedClasses(gui) {\n      this.forEachGui(gui, gui2 => {\n        gui2.rowComp.addOrRemoveCssClass(\"ag-row-focus\", this.rowFocused);\n        gui2.rowComp.addOrRemoveCssClass(\"ag-row-no-focus\", !this.rowFocused);\n      });\n    }\n    onCellFocusChanged() {\n      const rowFocused = this.beans.focusService.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n      if (rowFocused !== this.rowFocused) {\n        this.rowFocused = rowFocused;\n        this.setFocusedClasses();\n      }\n      if (!rowFocused && this.editingRow) {\n        this.stopEditing(false);\n      }\n    }\n    onPaginationChanged() {\n      const currentPage = this.beans.paginationService?.getCurrentPage() ?? 0;\n      if (this.paginationPage !== currentPage) {\n        this.paginationPage = currentPage;\n        this.onTopChanged();\n      }\n      this.refreshFirstAndLastRowStyles();\n    }\n    onTopChanged() {\n      this.setRowTop(this.rowNode.rowTop);\n    }\n    onPaginationPixelOffsetChanged() {\n      this.onTopChanged();\n    }\n    // applies pagination offset, eg if on second page, and page height is 500px, then removes\n    // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n    // reverse will take the offset away rather than add.\n    applyPaginationOffset(topPx, reverse = false) {\n      if (this.rowNode.isRowPinned() || this.rowNode.sticky) {\n        return topPx;\n      }\n      const pixelOffset = this.beans.pageBoundsService.getPixelOffset();\n      const multiplier = reverse ? 1 : -1;\n      return topPx + pixelOffset * multiplier;\n    }\n    setRowTop(pixels) {\n      if (this.printLayout) {\n        return;\n      }\n      if (_exists(pixels)) {\n        const afterPaginationPixels = this.applyPaginationOffset(pixels);\n        const skipScaling = this.rowNode.isRowPinned() || this.rowNode.sticky;\n        const afterScalingPixels = skipScaling ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n        const topPx = `${afterScalingPixels}px`;\n        this.setRowTopStyle(topPx);\n      }\n    }\n    // the top needs to be set into the DOM element when the element is created, not updated afterwards.\n    // otherwise the transition would not work, as it would be transitioning from zero (the unset value).\n    // for example, suppose a row that is outside the viewport, then user does a filter to remove other rows\n    // and this row now appears in the viewport, and the row moves up (ie it was under the viewport and not rendered,\n    // but now is in the viewport) then a new RowComp is created, however it should have it's position initialised\n    // to below the viewport, so the row will appear to animate up. if we didn't set the initial position at creation\n    // time, the row would animate down (ie from position zero).\n    getInitialRowTop(rowContainerType) {\n      return this.suppressRowTransform ? this.getInitialRowTopShared(rowContainerType) : void 0;\n    }\n    getInitialTransform(rowContainerType) {\n      return this.suppressRowTransform ? void 0 : `translateY(${this.getInitialRowTopShared(rowContainerType)})`;\n    }\n    getInitialRowTopShared(rowContainerType) {\n      if (this.printLayout) {\n        return \"\";\n      }\n      const rowNode = this.rowNode;\n      let rowTop;\n      if (this.isSticky()) {\n        rowTop = rowNode.stickyRowTop;\n      } else {\n        const pixels = this.slideInAnimation[rowContainerType] ? this.roundRowTopToBounds(rowNode.oldRowTop) : rowNode.rowTop;\n        const afterPaginationPixels = this.applyPaginationOffset(pixels);\n        rowTop = rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n      }\n      return rowTop + \"px\";\n    }\n    setRowTopStyle(topPx) {\n      this.allRowGuis.forEach(gui => this.suppressRowTransform ? gui.rowComp.setTop(topPx) : gui.rowComp.setTransform(`translateY(${topPx})`));\n    }\n    getRowNode() {\n      return this.rowNode;\n    }\n    getCellCtrl(column) {\n      let res = null;\n      this.getAllCellCtrls().forEach(cellCtrl => {\n        if (cellCtrl.getColumn() == column) {\n          res = cellCtrl;\n        }\n      });\n      if (res != null) {\n        return res;\n      }\n      this.getAllCellCtrls().forEach(cellCtrl => {\n        if (cellCtrl.getColSpanningList().indexOf(column) >= 0) {\n          res = cellCtrl;\n        }\n      });\n      return res;\n    }\n    onRowIndexChanged() {\n      if (this.rowNode.rowIndex != null) {\n        this.onCellFocusChanged();\n        this.updateRowIndexes();\n        this.postProcessCss();\n      }\n    }\n    getRowIndex() {\n      return this.rowNode.getRowIndexString();\n    }\n    updateRowIndexes(gui) {\n      const rowIndexStr = this.rowNode.getRowIndexString();\n      if (rowIndexStr === null) {\n        return;\n      }\n      const headerRowCount = this.beans.headerNavigationService.getHeaderRowCount() + (this.beans.filterManager?.getHeaderRowCount() ?? 0);\n      const rowIsEven = this.rowNode.rowIndex % 2 === 0;\n      const ariaRowIndex = headerRowCount + this.rowNode.rowIndex + 1;\n      this.forEachGui(gui, c => {\n        c.rowComp.setRowIndex(rowIndexStr);\n        c.rowComp.addOrRemoveCssClass(\"ag-row-even\", rowIsEven);\n        c.rowComp.addOrRemoveCssClass(\"ag-row-odd\", !rowIsEven);\n        _setAriaRowIndex(c.element, ariaRowIndex);\n      });\n    }\n    setStoppingRowEdit(stoppingRowEdit) {\n      this.stoppingRowEdit = stoppingRowEdit;\n    }\n  };\n  _RowCtrl.DOM_DATA_KEY_ROW_CTRL = \"renderedRow\";\n  return _RowCtrl;\n})();\nvar RowCtrl = _RowCtrl;\n\n// community-modules/core/src/gridBodyComp/rowContainer/rowContainerEventsFeature.ts\nvar RowContainerEventsFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.mouseEventService = beans.mouseEventService;\n    this.valueService = beans.valueService;\n    this.menuService = beans.menuService;\n    this.ctrlsService = beans.ctrlsService;\n    this.navigationService = beans.navigationService;\n    this.focusService = beans.focusService;\n    this.undoRedoService = beans.undoRedoService;\n    this.visibleColsService = beans.visibleColsService;\n    this.rowModel = beans.rowModel;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.rangeService = beans.rangeService;\n    this.clipboardService = beans.clipboardService;\n  }\n  constructor(element) {\n    super();\n    this.element = element;\n  }\n  postConstruct() {\n    this.addKeyboardListeners();\n    this.addMouseListeners();\n    this.mockContextMenuForIPad();\n  }\n  addKeyboardListeners() {\n    const eventName = \"keydown\";\n    const listener = this.processKeyboardEvent.bind(this, eventName);\n    this.addManagedElementListeners(this.element, {\n      [eventName]: listener\n    });\n  }\n  addMouseListeners() {\n    const mouseDownEvent = _isEventSupported(\"touchstart\") ? \"touchstart\" : \"mousedown\";\n    const eventNames = [\"dblclick\", \"contextmenu\", \"mouseover\", \"mouseout\", \"click\", mouseDownEvent];\n    eventNames.forEach(eventName => {\n      const listener = this.processMouseEvent.bind(this, eventName);\n      this.addManagedElementListeners(this.element, {\n        [eventName]: listener\n      });\n    });\n  }\n  processMouseEvent(eventName, mouseEvent) {\n    if (!this.mouseEventService.isEventFromThisGrid(mouseEvent) || _isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    const rowComp = this.getRowForEvent(mouseEvent);\n    const cellCtrl = this.mouseEventService.getRenderedCellForEvent(mouseEvent);\n    if (eventName === \"contextmenu\") {\n      this.handleContextMenuMouseEvent(mouseEvent, void 0, rowComp, cellCtrl);\n    } else {\n      if (cellCtrl) {\n        cellCtrl.onMouseEvent(eventName, mouseEvent);\n      }\n      if (rowComp) {\n        rowComp.onMouseEvent(eventName, mouseEvent);\n      }\n    }\n  }\n  mockContextMenuForIPad() {\n    if (!_isIOSUserAgent()) {\n      return;\n    }\n    const touchListener = new TouchListener(this.element);\n    const longTapListener = event => {\n      const rowComp = this.getRowForEvent(event.touchEvent);\n      const cellComp = this.mouseEventService.getRenderedCellForEvent(event.touchEvent);\n      this.handleContextMenuMouseEvent(void 0, event.touchEvent, rowComp, cellComp);\n    };\n    this.addManagedListeners(touchListener, {\n      longTap: longTapListener\n    });\n    this.addDestroyFunc(() => touchListener.destroy());\n  }\n  getRowForEvent(event) {\n    let sourceElement = event.target;\n    while (sourceElement) {\n      const rowCon = this.gos.getDomData(sourceElement, RowCtrl.DOM_DATA_KEY_ROW_CTRL);\n      if (rowCon) {\n        return rowCon;\n      }\n      sourceElement = sourceElement.parentElement;\n    }\n    return null;\n  }\n  handleContextMenuMouseEvent(mouseEvent, touchEvent, rowComp, cellCtrl) {\n    const rowNode = rowComp ? rowComp.getRowNode() : null;\n    const column = cellCtrl ? cellCtrl.getColumn() : null;\n    let value = null;\n    if (column) {\n      const event = mouseEvent ? mouseEvent : touchEvent;\n      cellCtrl.dispatchCellContextMenuEvent(event ?? null);\n      value = this.valueService.getValue(column, rowNode);\n    }\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const anchorToElement = cellCtrl ? cellCtrl.getGui() : gridBodyCon.getGridBodyElement();\n    this.menuService.showContextMenu({\n      mouseEvent,\n      touchEvent,\n      rowNode,\n      column,\n      value,\n      anchorToElement\n    });\n  }\n  getControlsForEventTarget(target) {\n    return {\n      cellCtrl: _getCtrlForEventTarget(this.gos, target, CellCtrl.DOM_DATA_KEY_CELL_CTRL),\n      rowCtrl: _getCtrlForEventTarget(this.gos, target, RowCtrl.DOM_DATA_KEY_ROW_CTRL)\n    };\n  }\n  processKeyboardEvent(eventName, keyboardEvent) {\n    const {\n      cellCtrl,\n      rowCtrl\n    } = this.getControlsForEventTarget(keyboardEvent.target);\n    if (keyboardEvent.defaultPrevented) {\n      return;\n    }\n    if (cellCtrl) {\n      this.processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent);\n    } else if (rowCtrl && rowCtrl.isFullWidth()) {\n      this.processFullWidthRowKeyboardEvent(rowCtrl, eventName, keyboardEvent);\n    }\n  }\n  processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent) {\n    const rowNode = cellCtrl.getRowNode();\n    const column = cellCtrl.getColumn();\n    const editing = cellCtrl.isEditing();\n    const gridProcessingAllowed = !_isUserSuppressingKeyboardEvent(this.gos, keyboardEvent, rowNode, column, editing);\n    if (gridProcessingAllowed) {\n      if (eventName === \"keydown\") {\n        const wasScrollKey = !editing && this.navigationService.handlePageScrollingKey(keyboardEvent);\n        if (!wasScrollKey) {\n          cellCtrl.onKeyDown(keyboardEvent);\n        }\n        this.doGridOperations(keyboardEvent, cellCtrl.isEditing());\n        if (_isEventFromPrintableCharacter(keyboardEvent)) {\n          cellCtrl.processCharacter(keyboardEvent);\n        }\n      }\n    }\n    if (eventName === \"keydown\") {\n      const cellKeyDownEvent = cellCtrl.createEvent(keyboardEvent, \"cellKeyDown\");\n      this.eventService.dispatchEvent(cellKeyDownEvent);\n    }\n  }\n  processFullWidthRowKeyboardEvent(rowComp, eventName, keyboardEvent) {\n    const rowNode = rowComp.getRowNode();\n    const focusedCell = this.focusService.getFocusedCell();\n    const column = focusedCell && focusedCell.column;\n    const gridProcessingAllowed = !_isUserSuppressingKeyboardEvent(this.gos, keyboardEvent, rowNode, column, false);\n    if (gridProcessingAllowed) {\n      const key = keyboardEvent.key;\n      if (eventName === \"keydown\") {\n        switch (key) {\n          case KeyCode.PAGE_HOME:\n          case KeyCode.PAGE_END:\n          case KeyCode.PAGE_UP:\n          case KeyCode.PAGE_DOWN:\n            this.navigationService.handlePageScrollingKey(keyboardEvent, true);\n            break;\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n            rowComp.onKeyboardNavigate(keyboardEvent);\n            break;\n          case KeyCode.TAB:\n            rowComp.onTabKeyDown(keyboardEvent);\n            break;\n          default:\n        }\n      }\n    }\n    if (eventName === \"keydown\") {\n      const cellKeyDownEvent = rowComp.createRowEvent(\"cellKeyDown\", keyboardEvent);\n      this.eventService.dispatchEvent(cellKeyDownEvent);\n    }\n  }\n  doGridOperations(keyboardEvent, editing) {\n    if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n      return;\n    }\n    if (editing) {\n      return;\n    }\n    if (!this.mouseEventService.isEventFromThisGrid(keyboardEvent)) {\n      return;\n    }\n    const keyCode = _normaliseQwertyAzerty(keyboardEvent);\n    if (keyCode === KeyCode.A) {\n      return this.onCtrlAndA(keyboardEvent);\n    }\n    if (keyCode === KeyCode.C) {\n      return this.onCtrlAndC(keyboardEvent);\n    }\n    if (keyCode === KeyCode.D) {\n      return this.onCtrlAndD(keyboardEvent);\n    }\n    if (keyCode === KeyCode.V) {\n      return this.onCtrlAndV(keyboardEvent);\n    }\n    if (keyCode === KeyCode.X) {\n      return this.onCtrlAndX(keyboardEvent);\n    }\n    if (keyCode === KeyCode.Y) {\n      return this.onCtrlAndY();\n    }\n    if (keyCode === KeyCode.Z) {\n      return this.onCtrlAndZ(keyboardEvent);\n    }\n  }\n  onCtrlAndA(event) {\n    const {\n      pinnedRowModel,\n      rowModel,\n      rangeService\n    } = this;\n    if (rangeService && rowModel.isRowsToRender()) {\n      const [isEmptyPinnedTop, isEmptyPinnedBottom] = [pinnedRowModel.isEmpty(\"top\"), pinnedRowModel.isEmpty(\"bottom\")];\n      const floatingStart = isEmptyPinnedTop ? null : \"top\";\n      let floatingEnd;\n      let rowEnd;\n      if (isEmptyPinnedBottom) {\n        floatingEnd = null;\n        rowEnd = rowModel.getRowCount() - 1;\n      } else {\n        floatingEnd = \"bottom\";\n        rowEnd = pinnedRowModel.getPinnedBottomRowNodes().length - 1;\n      }\n      const allDisplayedColumns = this.visibleColsService.getAllCols();\n      if (_missingOrEmpty(allDisplayedColumns)) {\n        return;\n      }\n      rangeService.setCellRange({\n        rowStartIndex: 0,\n        rowStartPinned: floatingStart,\n        rowEndIndex: rowEnd,\n        rowEndPinned: floatingEnd,\n        columnStart: allDisplayedColumns[0],\n        columnEnd: _last(allDisplayedColumns)\n      });\n    }\n    event.preventDefault();\n  }\n  onCtrlAndC(event) {\n    if (!this.clipboardService || this.gos.get(\"enableCellTextSelection\")) {\n      return;\n    }\n    const {\n      cellCtrl,\n      rowCtrl\n    } = this.getControlsForEventTarget(event.target);\n    if (cellCtrl?.isEditing() || rowCtrl?.isEditing()) {\n      return;\n    }\n    event.preventDefault();\n    this.clipboardService.copyToClipboard();\n  }\n  onCtrlAndX(event) {\n    if (!this.clipboardService || this.gos.get(\"enableCellTextSelection\") || this.gos.get(\"suppressCutToClipboard\")) {\n      return;\n    }\n    const {\n      cellCtrl,\n      rowCtrl\n    } = this.getControlsForEventTarget(event.target);\n    if (cellCtrl?.isEditing() || rowCtrl?.isEditing()) {\n      return;\n    }\n    event.preventDefault();\n    this.clipboardService.cutToClipboard(void 0, \"ui\");\n  }\n  onCtrlAndV(event) {\n    const {\n      cellCtrl,\n      rowCtrl\n    } = this.getControlsForEventTarget(event.target);\n    if (cellCtrl?.isEditing() || rowCtrl?.isEditing()) {\n      return;\n    }\n    if (this.clipboardService && !this.gos.get(\"suppressClipboardPaste\")) {\n      this.clipboardService.pasteFromClipboard();\n    }\n  }\n  onCtrlAndD(event) {\n    if (this.clipboardService && !this.gos.get(\"suppressClipboardPaste\")) {\n      this.clipboardService.copyRangeDown();\n    }\n    event.preventDefault();\n  }\n  onCtrlAndZ(event) {\n    if (!this.gos.get(\"undoRedoCellEditing\") || !this.undoRedoService) {\n      return;\n    }\n    event.preventDefault();\n    if (event.shiftKey) {\n      this.undoRedoService.redo(\"ui\");\n    } else {\n      this.undoRedoService.undo(\"ui\");\n    }\n  }\n  onCtrlAndY() {\n    this.undoRedoService?.redo(\"ui\");\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/setPinnedLeftWidthFeature.ts\nvar SetPinnedLeftWidthFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.pinnedWidthService = beans.pinnedWidthService;\n  }\n  constructor(element) {\n    super();\n    this.element = element;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      leftPinnedWidthChanged: this.onPinnedLeftWidthChanged.bind(this)\n    });\n  }\n  onPinnedLeftWidthChanged() {\n    const leftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n    const displayed = leftWidth > 0;\n    _setDisplayed(this.element, displayed);\n    _setFixedWidth(this.element, leftWidth);\n  }\n  getWidth() {\n    return this.pinnedWidthService.getPinnedLeftWidth();\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/setPinnedRightWidthFeature.ts\nvar SetPinnedRightWidthFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.pinnedWidthService = beans.pinnedWidthService;\n  }\n  constructor(element) {\n    super();\n    this.element = element;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      rightPinnedWidthChanged: this.onPinnedRightWidthChanged.bind(this)\n    });\n  }\n  onPinnedRightWidthChanged() {\n    const rightWidth = this.pinnedWidthService.getPinnedRightWidth();\n    const displayed = rightWidth > 0;\n    _setDisplayed(this.element, displayed);\n    _setFixedWidth(this.element, rightWidth);\n  }\n  getWidth() {\n    return this.pinnedWidthService.getPinnedRightWidth();\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/rowContainerCtrl.ts\nvar getTopRowCtrls = r => r.getTopRowCtrls();\nvar getStickyTopRowCtrls = r => r.getStickyTopRowCtrls();\nvar getStickyBottomRowCtrls = r => r.getStickyBottomRowCtrls();\nvar getBottomRowCtrls = r => r.getBottomRowCtrls();\nvar getCentreRowCtrls = r => r.getCentreRowCtrls();\nvar ContainerCssClasses = {\n  center: {\n    type: \"center\",\n    container: \"ag-center-cols-container\",\n    viewport: \"ag-center-cols-viewport\",\n    getRowCtrls: getCentreRowCtrls\n  },\n  left: {\n    type: \"left\",\n    container: \"ag-pinned-left-cols-container\",\n    pinnedType: \"left\",\n    getRowCtrls: getCentreRowCtrls\n  },\n  right: {\n    type: \"right\",\n    container: \"ag-pinned-right-cols-container\",\n    pinnedType: \"right\",\n    getRowCtrls: getCentreRowCtrls\n  },\n  fullWidth: {\n    type: \"fullWidth\",\n    container: \"ag-full-width-container\",\n    fullWidth: true,\n    getRowCtrls: getCentreRowCtrls\n  },\n  topCenter: {\n    type: \"center\",\n    container: \"ag-floating-top-container\",\n    viewport: \"ag-floating-top-viewport\",\n    getRowCtrls: getTopRowCtrls\n  },\n  topLeft: {\n    type: \"left\",\n    container: \"ag-pinned-left-floating-top\",\n    pinnedType: \"left\",\n    getRowCtrls: getTopRowCtrls\n  },\n  topRight: {\n    type: \"right\",\n    container: \"ag-pinned-right-floating-top\",\n    pinnedType: \"right\",\n    getRowCtrls: getTopRowCtrls\n  },\n  topFullWidth: {\n    type: \"fullWidth\",\n    container: \"ag-floating-top-full-width-container\",\n    fullWidth: true,\n    getRowCtrls: getTopRowCtrls\n  },\n  stickyTopCenter: {\n    type: \"center\",\n    container: \"ag-sticky-top-container\",\n    viewport: \"ag-sticky-top-viewport\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopLeft: {\n    type: \"left\",\n    container: \"ag-pinned-left-sticky-top\",\n    pinnedType: \"left\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopRight: {\n    type: \"right\",\n    container: \"ag-pinned-right-sticky-top\",\n    pinnedType: \"right\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopFullWidth: {\n    type: \"fullWidth\",\n    container: \"ag-sticky-top-full-width-container\",\n    fullWidth: true,\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyBottomCenter: {\n    type: \"center\",\n    container: \"ag-sticky-bottom-container\",\n    viewport: \"ag-sticky-bottom-viewport\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomLeft: {\n    type: \"left\",\n    container: \"ag-pinned-left-sticky-bottom\",\n    pinnedType: \"left\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomRight: {\n    type: \"right\",\n    container: \"ag-pinned-right-sticky-bottom\",\n    pinnedType: \"right\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomFullWidth: {\n    type: \"fullWidth\",\n    container: \"ag-sticky-bottom-full-width-container\",\n    fullWidth: true,\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  bottomCenter: {\n    type: \"center\",\n    container: \"ag-floating-bottom-container\",\n    viewport: \"ag-floating-bottom-viewport\",\n    getRowCtrls: getBottomRowCtrls\n  },\n  bottomLeft: {\n    type: \"left\",\n    container: \"ag-pinned-left-floating-bottom\",\n    pinnedType: \"left\",\n    getRowCtrls: getBottomRowCtrls\n  },\n  bottomRight: {\n    type: \"right\",\n    container: \"ag-pinned-right-floating-bottom\",\n    pinnedType: \"right\",\n    getRowCtrls: getBottomRowCtrls\n  },\n  bottomFullWidth: {\n    type: \"fullWidth\",\n    container: \"ag-floating-bottom-full-width-container\",\n    fullWidth: true,\n    getRowCtrls: getBottomRowCtrls\n  }\n};\nfunction _getRowContainerOptions(name) {\n  return ContainerCssClasses[name];\n}\nvar allTopNoFW = [\"topCenter\", \"topLeft\", \"topRight\"];\nvar allBottomNoFW = [\"bottomCenter\", \"bottomLeft\", \"bottomRight\"];\nvar allMiddleNoFW = [\"center\", \"left\", \"right\"];\nvar allMiddle = [\"center\", \"left\", \"right\", \"fullWidth\"];\nvar allCenter = [\"stickyTopCenter\", \"stickyBottomCenter\", \"center\", \"topCenter\", \"bottomCenter\"];\nvar allLeft = [\"left\", \"bottomLeft\", \"topLeft\", \"stickyTopLeft\", \"stickyBottomLeft\"];\nvar allRight = [\"right\", \"bottomRight\", \"topRight\", \"stickyTopRight\", \"stickyBottomRight\"];\nvar allStickyTopNoFW = [\"stickyTopCenter\", \"stickyTopLeft\", \"stickyTopRight\"];\nvar allStickyBottomNoFW = [\"stickyBottomCenter\", \"stickyBottomLeft\", \"stickyBottomRight\"];\nvar allStickyContainers = [...allStickyTopNoFW, \"stickyTopFullWidth\", ...allStickyBottomNoFW, \"stickyBottomFullWidth\"];\nvar allNoFW = [...allTopNoFW, ...allBottomNoFW, ...allMiddleNoFW, ...allStickyTopNoFW, ...allStickyBottomNoFW];\nvar RowContainerCtrl = class extends BeanStub {\n  constructor(name) {\n    super();\n    this.visible = true;\n    // Maintaining a constant reference enables optimization in React.\n    this.EMPTY_CTRLS = [];\n    this.name = name;\n    this.options = _getRowContainerOptions(name);\n  }\n  wireBeans(beans) {\n    this.dragService = beans.dragService;\n    this.ctrlsService = beans.ctrlsService;\n    this.columnViewportService = beans.columnViewportService;\n    this.resizeObserverService = beans.resizeObserverService;\n    this.rowRenderer = beans.rowRenderer;\n  }\n  postConstruct() {\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    this.forContainers([\"center\"], () => {\n      this.viewportSizeFeature = this.createManagedBean(new ViewportSizeFeature(this));\n      this.addManagedEventListeners({\n        stickyTopOffsetChanged: this.onStickyTopOffsetChanged.bind(this)\n      });\n    });\n  }\n  onStickyTopOffsetChanged(event) {\n    this.comp.setOffsetTop(`${event.offset}px`);\n  }\n  registerWithCtrlsService() {\n    if (this.options.fullWidth) return;\n    this.ctrlsService.register(this.name, this);\n  }\n  forContainers(names, callback) {\n    if (names.indexOf(this.name) >= 0) {\n      callback();\n    }\n  }\n  getContainerElement() {\n    return this.eContainer;\n  }\n  getViewportSizeFeature() {\n    return this.viewportSizeFeature;\n  }\n  setComp(view, eContainer, eViewport) {\n    this.comp = view;\n    this.eContainer = eContainer;\n    this.eViewport = eViewport;\n    this.createManagedBean(new RowContainerEventsFeature(this.eContainer));\n    this.addPreventScrollWhileDragging();\n    this.listenOnDomOrder();\n    this.stopHScrollOnPinnedRows();\n    this.forContainers(allLeft, () => {\n      this.pinnedWidthFeature = this.createManagedBean(new SetPinnedLeftWidthFeature(this.eContainer));\n      this.addManagedEventListeners({\n        leftPinnedWidthChanged: () => this.onPinnedWidthChanged()\n      });\n    });\n    this.forContainers(allRight, () => {\n      this.pinnedWidthFeature = this.createManagedBean(new SetPinnedRightWidthFeature(this.eContainer));\n      this.addManagedEventListeners({\n        rightPinnedWidthChanged: () => this.onPinnedWidthChanged()\n      });\n    });\n    this.forContainers(allMiddle, () => this.createManagedBean(new SetHeightFeature(this.eContainer, this.name === \"center\" ? eViewport : void 0)));\n    this.forContainers(allNoFW, () => this.createManagedBean(new DragListenerFeature(this.eContainer)));\n    this.forContainers(allCenter, () => this.createManagedBean(new CenterWidthFeature(width => this.comp.setContainerWidth(`${width}px`))));\n    this.addListeners();\n    this.registerWithCtrlsService();\n  }\n  addListeners() {\n    this.addManagedEventListeners({\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      displayedColumnsWidthChanged: this.onDisplayedColumnsWidthChanged.bind(this),\n      displayedRowsChanged: params => this.onDisplayedRowsChanged(params.afterScroll)\n    });\n    this.onDisplayedColumnsChanged();\n    this.onDisplayedColumnsWidthChanged();\n    this.onDisplayedRowsChanged();\n  }\n  listenOnDomOrder() {\n    const isStickContainer = allStickyContainers.indexOf(this.name) >= 0;\n    if (isStickContainer) {\n      this.comp.setDomOrder(true);\n      return;\n    }\n    const listener = () => {\n      const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n      const isPrintLayout = this.gos.isDomLayout(\"print\");\n      this.comp.setDomOrder(isEnsureDomOrder || isPrintLayout);\n    };\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    listener();\n  }\n  // when editing a pinned row, if the cell is half outside the scrollable area, the browser can\n  // scroll the column into view. we do not want this, the pinned sections should never scroll.\n  // so we listen to scrolls on these containers and reset the scroll if we find one.\n  stopHScrollOnPinnedRows() {\n    this.forContainers([\"topCenter\", \"stickyTopCenter\", \"bottomCenter\", \"stickyBottomCenter\"], () => {\n      const resetScrollLeft = () => this.eViewport.scrollLeft = 0;\n      this.addManagedElementListeners(this.eViewport, {\n        scroll: resetScrollLeft\n      });\n    });\n  }\n  onDisplayedColumnsChanged() {\n    this.forContainers([\"center\"], () => this.onHorizontalViewportChanged());\n  }\n  onDisplayedColumnsWidthChanged() {\n    this.forContainers([\"center\"], () => this.onHorizontalViewportChanged());\n  }\n  // this methods prevents the grid views from being scrolled while the dragService is being used\n  // eg. the view should not scroll up and down while dragging rows using the rowDragComp.\n  addPreventScrollWhileDragging() {\n    const preventScroll = e => {\n      if (this.dragService.isDragging()) {\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n      }\n    };\n    this.eContainer.addEventListener(\"touchmove\", preventScroll, {\n      passive: false\n    });\n    this.addDestroyFunc(() => this.eContainer.removeEventListener(\"touchmove\", preventScroll));\n  }\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\n  onHorizontalViewportChanged(afterScroll = false) {\n    const scrollWidth = this.getCenterWidth();\n    const scrollPosition = this.getCenterViewportScrollLeft();\n    this.columnViewportService.setScrollPosition(scrollWidth, scrollPosition, afterScroll);\n  }\n  getCenterWidth() {\n    return _getInnerWidth(this.eViewport);\n  }\n  getCenterViewportScrollLeft() {\n    return _getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  registerViewportResizeListener(listener) {\n    const unsubscribeFromResize = this.resizeObserverService.observeResize(this.eViewport, listener);\n    this.addDestroyFunc(() => unsubscribeFromResize());\n  }\n  isViewportInTheDOMTree() {\n    return _isInDOM(this.eViewport);\n  }\n  getViewportScrollLeft() {\n    return _getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  isHorizontalScrollShowing() {\n    const isAlwaysShowHorizontalScroll = this.gos.get(\"alwaysShowHorizontalScroll\");\n    return isAlwaysShowHorizontalScroll || _isHorizontalScrollShowing(this.eViewport);\n  }\n  getViewportElement() {\n    return this.eViewport;\n  }\n  setContainerTranslateX(amount) {\n    this.eContainer.style.transform = `translateX(${amount}px)`;\n  }\n  getHScrollPosition() {\n    const res = {\n      left: this.eViewport.scrollLeft,\n      right: this.eViewport.scrollLeft + this.eViewport.offsetWidth\n    };\n    return res;\n  }\n  setCenterViewportScrollLeft(value) {\n    _setScrollLeft(this.eViewport, value, this.enableRtl);\n  }\n  isContainerVisible() {\n    const pinned = this.options.pinnedType != null;\n    return !pinned || !!this.pinnedWidthFeature && this.pinnedWidthFeature.getWidth() > 0;\n  }\n  onPinnedWidthChanged() {\n    const visible = this.isContainerVisible();\n    if (this.visible != visible) {\n      this.visible = visible;\n      this.onDisplayedRowsChanged();\n    }\n  }\n  onDisplayedRowsChanged(afterScroll = false) {\n    const rows = this.options.getRowCtrls(this.rowRenderer);\n    if (!this.visible || rows.length === 0) {\n      this.comp.setRowCtrls({\n        rowCtrls: this.EMPTY_CTRLS\n      });\n      return;\n    }\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const embedFullWidthRows = this.gos.get(\"embedFullWidthRows\");\n    const embedFW = embedFullWidthRows || printLayout;\n    const rowsThisContainer = rows.filter(rowCtrl => {\n      const fullWidthRow = rowCtrl.isFullWidth();\n      const match = this.options.fullWidth ? !embedFW && fullWidthRow : embedFW || !fullWidthRow;\n      return match;\n    });\n    this.comp.setRowCtrls({\n      rowCtrls: rowsThisContainer,\n      useFlushSync: afterScroll\n    });\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/rowContainerComp.ts\nfunction templateFactory(options) {\n  let res;\n  if (options.type === \"center\") {\n    res = /* html */\n    `<div class=\"${options.viewport}\" data-ref=\"eViewport\" role=\"presentation\">\n                <div class=\"${options.container}\" data-ref=\"eContainer\"></div>\n            </div>`;\n  } else {\n    res = /* html */\n    `<div class=\"${options.container}\" data-ref=\"eContainer\"></div>`;\n  }\n  return res;\n}\nvar RowContainerComp = class extends Component {\n  constructor() {\n    super();\n    this.eViewport = RefPlaceholder;\n    this.eContainer = RefPlaceholder;\n    this.rowComps = {};\n    this.name = Component.elementGettingCreated.getAttribute(\"name\");\n    this.options = _getRowContainerOptions(this.name);\n    this.setTemplate(templateFactory(this.options));\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  postConstruct() {\n    const compProxy = {\n      setViewportHeight: height => this.eViewport.style.height = height,\n      setRowCtrls: ({\n        rowCtrls\n      }) => this.setRowCtrls(rowCtrls),\n      setDomOrder: domOrder => {\n        this.domOrder = domOrder;\n      },\n      setContainerWidth: width => this.eContainer.style.width = width,\n      setOffsetTop: offset => this.eContainer.style.transform = `translateY(${offset})`\n    };\n    const ctrl = this.createManagedBean(new RowContainerCtrl(this.name));\n    ctrl.setComp(compProxy, this.eContainer, this.eViewport);\n  }\n  destroy() {\n    this.setRowCtrls([]);\n    super.destroy();\n  }\n  setRowCtrls(rowCtrls) {\n    const oldRows = {\n      ...this.rowComps\n    };\n    this.rowComps = {};\n    this.lastPlacedElement = null;\n    const processRow = rowCon => {\n      const instanceId = rowCon.getInstanceId();\n      const existingRowComp = oldRows[instanceId];\n      if (existingRowComp) {\n        this.rowComps[instanceId] = existingRowComp;\n        delete oldRows[instanceId];\n        this.ensureDomOrder(existingRowComp.getGui());\n      } else {\n        if (!rowCon.getRowNode().displayed) {\n          return;\n        }\n        const rowComp = new RowComp(rowCon, this.beans, this.options.type);\n        this.rowComps[instanceId] = rowComp;\n        this.appendRow(rowComp.getGui());\n      }\n    };\n    rowCtrls.forEach(processRow);\n    _getAllValuesInObject(oldRows).forEach(oldRowComp => {\n      this.eContainer.removeChild(oldRowComp.getGui());\n      oldRowComp.destroy();\n    });\n    _setAriaRole(this.eContainer, \"rowgroup\");\n  }\n  appendRow(element) {\n    if (this.domOrder) {\n      _insertWithDomOrder(this.eContainer, element, this.lastPlacedElement);\n    } else {\n      this.eContainer.appendChild(element);\n    }\n    this.lastPlacedElement = element;\n  }\n  ensureDomOrder(eRow) {\n    if (this.domOrder) {\n      _ensureDomOrder(this.eContainer, eRow, this.lastPlacedElement);\n      this.lastPlacedElement = eRow;\n    }\n  }\n};\nvar RowContainerSelector = {\n  selector: \"AG-ROW-CONTAINER\",\n  component: RowContainerComp\n};\n\n// community-modules/core/src/gridBodyComp/gridBodyComp.ts\nfunction makeRowContainers(names) {\n  return names.map(name => `<ag-row-container name=\"${name}\"></ag-row-container>`).join(\"\");\n}\nvar GRID_BODY_TEMPLATE = /* html */\n`<div class=\"ag-root ag-unselectable\" role=\"treegrid\">\n        <ag-header-root></ag-header-root>\n        <div class=\"ag-floating-top\" data-ref=\"eTop\" role=\"presentation\">\n            ${makeRowContainers([\"topLeft\", \"topCenter\", \"topRight\", \"topFullWidth\"])}\n        </div>\n        <div class=\"ag-body\" data-ref=\"eBody\" role=\"presentation\">\n            <div class=\"ag-body-viewport\" data-ref=\"eBodyViewport\" role=\"presentation\">\n            ${makeRowContainers([\"left\", \"center\", \"right\", \"fullWidth\"])}\n            </div>\n            <ag-fake-vertical-scroll></ag-fake-vertical-scroll>\n        </div>\n        <div class=\"ag-sticky-top\" data-ref=\"eStickyTop\" role=\"presentation\">\n            ${makeRowContainers([\"stickyTopLeft\", \"stickyTopCenter\", \"stickyTopRight\", \"stickyTopFullWidth\"])}\n        </div>\n        <div class=\"ag-sticky-bottom\" data-ref=\"eStickyBottom\" role=\"presentation\">\n            ${makeRowContainers([\"stickyBottomLeft\", \"stickyBottomCenter\", \"stickyBottomRight\", \"stickyBottomFullWidth\"])}\n        </div>\n        <div class=\"ag-floating-bottom\" data-ref=\"eBottom\" role=\"presentation\">\n            ${makeRowContainers([\"bottomLeft\", \"bottomCenter\", \"bottomRight\", \"bottomFullWidth\"])}\n        </div>\n        <ag-fake-horizontal-scroll></ag-fake-horizontal-scroll>\n        <ag-overlay-wrapper></ag-overlay-wrapper>\n    </div>`;\nvar GridBodyComp = class extends Component {\n  constructor() {\n    super(GRID_BODY_TEMPLATE, [OverlayWrapperSelector, FakeHScrollSelector, FakeVScrollSelector, GridHeaderSelector, RowContainerSelector]);\n    this.eBodyViewport = RefPlaceholder;\n    this.eStickyTop = RefPlaceholder;\n    this.eStickyBottom = RefPlaceholder;\n    this.eTop = RefPlaceholder;\n    this.eBottom = RefPlaceholder;\n    this.eBody = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    this.resizeObserverService = beans.resizeObserverService;\n    this.rangeService = beans.rangeService;\n  }\n  postConstruct() {\n    const setHeight = (height, element) => {\n      const heightString = `${height}px`;\n      element.style.minHeight = heightString;\n      element.style.height = heightString;\n    };\n    const compProxy = {\n      setRowAnimationCssOnBodyViewport: (cssClass, animate) => this.setRowAnimationCssOnBodyViewport(cssClass, animate),\n      setColumnCount: count => _setAriaColCount(this.getGui(), count),\n      setRowCount: count => _setAriaRowCount(this.getGui(), count),\n      setTopHeight: height => setHeight(height, this.eTop),\n      setBottomHeight: height => setHeight(height, this.eBottom),\n      setTopDisplay: display => this.eTop.style.display = display,\n      setBottomDisplay: display => this.eBottom.style.display = display,\n      setStickyTopHeight: height => this.eStickyTop.style.height = height,\n      setStickyTopTop: top => this.eStickyTop.style.top = top,\n      setStickyTopWidth: width => this.eStickyTop.style.width = width,\n      setStickyBottomHeight: height => this.eStickyBottom.style.height = height,\n      setStickyBottomBottom: bottom => this.eStickyBottom.style.bottom = bottom,\n      setStickyBottomWidth: width => this.eStickyBottom.style.width = width,\n      setColumnMovingCss: (cssClass, flag) => this.addOrRemoveCssClass(cssClass, flag),\n      updateLayoutClasses: (cssClass, params) => {\n        const classLists = [this.eBodyViewport.classList, this.eBody.classList];\n        classLists.forEach(classList => {\n          classList.toggle(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n          classList.toggle(\"ag-layout-normal\" /* NORMAL */, params.normal);\n          classList.toggle(\"ag-layout-print\" /* PRINT */, params.print);\n        });\n        this.addOrRemoveCssClass(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n        this.addOrRemoveCssClass(\"ag-layout-normal\" /* NORMAL */, params.normal);\n        this.addOrRemoveCssClass(\"ag-layout-print\" /* PRINT */, params.print);\n      },\n      setAlwaysVerticalScrollClass: (cssClass, on) => this.eBodyViewport.classList.toggle(CSS_CLASS_FORCE_VERTICAL_SCROLL, on),\n      registerBodyViewportResizeListener: listener => {\n        const unsubscribeFromResize = this.resizeObserverService.observeResize(this.eBodyViewport, listener);\n        this.addDestroyFunc(() => unsubscribeFromResize());\n      },\n      setPinnedTopBottomOverflowY: overflow => this.eTop.style.overflowY = this.eBottom.style.overflowY = overflow,\n      setCellSelectableCss: (cssClass, selectable) => {\n        [this.eTop, this.eBodyViewport, this.eBottom].forEach(ct => ct.classList.toggle(cssClass, selectable));\n      },\n      setBodyViewportWidth: width => this.eBodyViewport.style.width = width\n    };\n    this.ctrl = this.createManagedBean(new GridBodyCtrl());\n    this.ctrl.setComp(compProxy, this.getGui(), this.eBodyViewport, this.eTop, this.eBottom, this.eStickyTop, this.eStickyBottom);\n    if (this.rangeService && this.gos.get(\"enableRangeSelection\") || this.gos.get(\"rowSelection\") === \"multiple\") {\n      _setAriaMultiSelectable(this.getGui(), true);\n    }\n  }\n  setRowAnimationCssOnBodyViewport(cssClass, animateRows) {\n    const bodyViewportClassList = this.eBodyViewport.classList;\n    bodyViewportClassList.toggle(\"ag-row-animation\", animateRows);\n    bodyViewportClassList.toggle(\"ag-row-no-animation\", !animateRows);\n  }\n  getFloatingTopBottom() {\n    return [this.eTop, this.eBottom];\n  }\n};\nvar GridBodySelector = {\n  selector: \"AG-GRID-BODY\",\n  component: GridBodyComp\n};\n\n// community-modules/core/src/gridBodyComp/scrollVisibleService.ts\nvar ScrollVisibleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"scrollVisibleService\";\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.columnAnimationService = beans.columnAnimationService;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      displayedColumnsWidthChanged: this.onDisplayedColumnsWidthChanged.bind(this)\n    });\n  }\n  onDisplayedColumnsChanged() {\n    this.update();\n  }\n  onDisplayedColumnsWidthChanged() {\n    this.update();\n  }\n  update() {\n    if (this.columnAnimationService.isActive()) {\n      this.columnAnimationService.executeLaterVMTurn(() => {\n        this.columnAnimationService.executeLaterVMTurn(() => this.updateImpl());\n      });\n    } else {\n      this.updateImpl();\n    }\n  }\n  updateImpl() {\n    const centerRowCtrl = this.ctrlsService.get(\"center\");\n    if (!centerRowCtrl || this.columnAnimationService.isActive()) {\n      return;\n    }\n    const params = {\n      horizontalScrollShowing: centerRowCtrl.isHorizontalScrollShowing(),\n      verticalScrollShowing: this.isVerticalScrollShowing()\n    };\n    this.setScrollsVisible(params);\n  }\n  setScrollsVisible(params) {\n    const atLeastOneDifferent = this.horizontalScrollShowing !== params.horizontalScrollShowing || this.verticalScrollShowing !== params.verticalScrollShowing;\n    if (atLeastOneDifferent) {\n      this.horizontalScrollShowing = params.horizontalScrollShowing;\n      this.verticalScrollShowing = params.verticalScrollShowing;\n      const event = {\n        type: \"scrollVisibilityChanged\"\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  // used by pagination service - to know page height\n  isHorizontalScrollShowing() {\n    return this.horizontalScrollShowing;\n  }\n  // used by header container\n  isVerticalScrollShowing() {\n    return this.verticalScrollShowing;\n  }\n};\n\n// community-modules/core/src/gridBodyComp/mouseEventService.ts\nvar GRID_DOM_KEY = \"__ag_grid_instance\";\nvar _MouseEventService = class _MouseEventService extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"mouseEventService\";\n    this.gridInstanceId = _MouseEventService.gridInstanceSequence.next();\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n  }\n  // we put the instance id onto the main DOM element. this is used for events, when grids are inside grids,\n  // so the grid can work out if the even came from this grid or a grid inside this one. see the ctrl+v logic\n  // for where this is used.\n  stampTopLevelGridCompWithGridInstance(eGridDiv) {\n    eGridDiv[GRID_DOM_KEY] = this.gridInstanceId;\n  }\n  getRenderedCellForEvent(event) {\n    return _getCtrlForEventTarget(this.gos, event.target, CellCtrl.DOM_DATA_KEY_CELL_CTRL);\n  }\n  // walks the path of the event, and returns true if this grid is the first one that it finds. if doing\n  // master / detail grids, and a child grid is found, then it returns false. this stops things like copy/paste\n  // getting executed on many grids at the same time.\n  isEventFromThisGrid(event) {\n    const res = this.isElementInThisGrid(event.target);\n    return res;\n  }\n  isElementInThisGrid(element) {\n    let pointer = element;\n    while (pointer) {\n      const instanceId = pointer[GRID_DOM_KEY];\n      if (_exists(instanceId)) {\n        const eventFromThisGrid = instanceId === this.gridInstanceId;\n        return eventFromThisGrid;\n      }\n      pointer = pointer.parentElement;\n    }\n    return false;\n  }\n  getCellPositionForEvent(event) {\n    const cellComp = this.getRenderedCellForEvent(event);\n    return cellComp ? cellComp.getCellPosition() : null;\n  }\n  getNormalisedPosition(event) {\n    const gridPanelHasScrolls = this.gos.isDomLayout(\"normal\");\n    const e = event;\n    let x;\n    let y;\n    if (e.clientX != null || e.clientY != null) {\n      x = e.clientX;\n      y = e.clientY;\n    } else {\n      x = e.x;\n      y = e.y;\n    }\n    if (gridPanelHasScrolls) {\n      const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n      const vRange = gridBodyCon.getScrollFeature().getVScrollPosition();\n      const hRange = gridBodyCon.getScrollFeature().getHScrollPosition();\n      x += hRange.left;\n      y += vRange.top;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\n_MouseEventService.gridInstanceSequence = new NumberSequence();\nvar MouseEventService = _MouseEventService;\n\n// community-modules/core/src/gridBodyComp/navigationService.ts\nvar NavigationService = class extends BeanStub {\n  constructor() {\n    super();\n    this.beanName = \"navigationService\";\n    this.onPageDown = _throttle(this.onPageDown, 100);\n    this.onPageUp = _throttle(this.onPageUp, 100);\n  }\n  wireBeans(beans) {\n    this.mouseEventService = beans.mouseEventService;\n    this.pageBoundsService = beans.pageBoundsService;\n    this.focusService = beans.focusService;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.rowModel = beans.rowModel;\n    this.ctrlsService = beans.ctrlsService;\n    this.rowRenderer = beans.rowRenderer;\n    this.headerNavigationService = beans.headerNavigationService;\n    this.rowPositionUtils = beans.rowPositionUtils;\n    this.cellNavigationService = beans.cellNavigationService;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.rangeService = beans.rangeService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady(p => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n  }\n  handlePageScrollingKey(event, fromFullWidth = false) {\n    const key = event.key;\n    const alt = event.altKey;\n    const ctrl = event.ctrlKey || event.metaKey;\n    const rangeServiceShouldHandleShift = !!this.rangeService && event.shiftKey;\n    const currentCell = this.mouseEventService.getCellPositionForEvent(event);\n    let processed = false;\n    switch (key) {\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        if (!ctrl && !alt) {\n          this.onHomeOrEndKey(key);\n          processed = true;\n        }\n        break;\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        if (!currentCell) {\n          return false;\n        }\n        if (ctrl && !alt && !rangeServiceShouldHandleShift) {\n          this.onCtrlUpDownLeftRight(key, currentCell);\n          processed = true;\n        }\n        break;\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n        if (!ctrl && !alt) {\n          processed = this.handlePageUpDown(key, currentCell, fromFullWidth);\n        }\n        break;\n    }\n    if (processed) {\n      event.preventDefault();\n    }\n    return processed;\n  }\n  handlePageUpDown(key, currentCell, fromFullWidth) {\n    if (fromFullWidth) {\n      currentCell = this.focusService.getFocusedCell();\n    }\n    if (!currentCell) {\n      return false;\n    }\n    if (key === KeyCode.PAGE_UP) {\n      this.onPageUp(currentCell);\n    } else {\n      this.onPageDown(currentCell);\n    }\n    return true;\n  }\n  navigateTo(navigateParams) {\n    const {\n      scrollIndex,\n      scrollType,\n      scrollColumn,\n      focusIndex,\n      focusColumn\n    } = navigateParams;\n    if (_exists(scrollColumn) && !scrollColumn.isPinned()) {\n      this.gridBodyCon.getScrollFeature().ensureColumnVisible(scrollColumn);\n    }\n    if (_exists(scrollIndex)) {\n      this.gridBodyCon.getScrollFeature().ensureIndexVisible(scrollIndex, scrollType);\n    }\n    if (!navigateParams.isAsync) {\n      this.gridBodyCon.getScrollFeature().ensureIndexVisible(focusIndex);\n    }\n    this.focusService.setFocusedCell({\n      rowIndex: focusIndex,\n      column: focusColumn,\n      rowPinned: null,\n      forceBrowserFocus: true\n    });\n    this.rangeService?.setRangeToCell({\n      rowIndex: focusIndex,\n      rowPinned: null,\n      column: focusColumn\n    });\n  }\n  // this method is throttled, see the `constructor`\n  onPageDown(gridCell) {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const scrollPosition = gridBodyCon.getScrollFeature().getVScrollPosition();\n    const pixelsInOnePage = this.getViewportHeight();\n    const pagingPixelOffset = this.pageBoundsService.getPixelOffset();\n    const currentPageBottomPixel = scrollPosition.top + pixelsInOnePage;\n    const currentPageBottomRow = this.rowModel.getRowIndexAtPixel(currentPageBottomPixel + pagingPixelOffset);\n    if (this.columnModel.isAutoRowHeightActive()) {\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageBottomRow);\n    } else {\n      this.navigateToNextPage(gridCell, currentPageBottomRow);\n    }\n  }\n  // this method is throttled, see the `constructor`\n  onPageUp(gridCell) {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const scrollPosition = gridBodyCon.getScrollFeature().getVScrollPosition();\n    const pagingPixelOffset = this.pageBoundsService.getPixelOffset();\n    const currentPageTopPixel = scrollPosition.top;\n    const currentPageTopRow = this.rowModel.getRowIndexAtPixel(currentPageTopPixel + pagingPixelOffset);\n    if (this.columnModel.isAutoRowHeightActive()) {\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageTopRow, true);\n    } else {\n      this.navigateToNextPage(gridCell, currentPageTopRow, true);\n    }\n  }\n  navigateToNextPage(gridCell, scrollIndex, up = false) {\n    const pixelsInOnePage = this.getViewportHeight();\n    const firstRow = this.pageBoundsService.getFirstRow();\n    const lastRow = this.pageBoundsService.getLastRow();\n    const pagingPixelOffset = this.pageBoundsService.getPixelOffset();\n    const currentRowNode = this.rowModel.getRow(gridCell.rowIndex);\n    const rowPixelDiff = up ?\n    // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n    currentRowNode?.rowHeight - pixelsInOnePage - pagingPixelOffset : pixelsInOnePage - pagingPixelOffset;\n    const nextCellPixel = currentRowNode?.rowTop + rowPixelDiff;\n    let focusIndex = this.rowModel.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\n    if (focusIndex === gridCell.rowIndex) {\n      const diff = up ? -1 : 1;\n      scrollIndex = focusIndex = gridCell.rowIndex + diff;\n    }\n    let scrollType;\n    if (up) {\n      scrollType = \"bottom\";\n      if (focusIndex < firstRow) {\n        focusIndex = firstRow;\n      }\n      if (scrollIndex < firstRow) {\n        scrollIndex = firstRow;\n      }\n    } else {\n      scrollType = \"top\";\n      if (focusIndex > lastRow) {\n        focusIndex = lastRow;\n      }\n      if (scrollIndex > lastRow) {\n        scrollIndex = lastRow;\n      }\n    }\n    if (this.isRowTallerThanView(focusIndex)) {\n      scrollIndex = focusIndex;\n      scrollType = \"top\";\n    }\n    this.navigateTo({\n      scrollIndex,\n      scrollType,\n      scrollColumn: null,\n      focusIndex,\n      focusColumn: gridCell.column\n    });\n  }\n  navigateToNextPageWithAutoHeight(gridCell, scrollIndex, up = false) {\n    this.navigateTo({\n      scrollIndex,\n      scrollType: up ? \"bottom\" : \"top\",\n      scrollColumn: null,\n      focusIndex: scrollIndex,\n      focusColumn: gridCell.column\n    });\n    setTimeout(() => {\n      const focusIndex = this.getNextFocusIndexForAutoHeight(gridCell, up);\n      this.navigateTo({\n        scrollIndex,\n        scrollType: up ? \"bottom\" : \"top\",\n        scrollColumn: null,\n        focusIndex,\n        focusColumn: gridCell.column,\n        isAsync: true\n      });\n    }, 50);\n  }\n  getNextFocusIndexForAutoHeight(gridCell, up = false) {\n    const step = up ? -1 : 1;\n    const pixelsInOnePage = this.getViewportHeight();\n    const lastRowIndex = this.pageBoundsService.getLastRow();\n    let pixelSum = 0;\n    let currentIndex = gridCell.rowIndex;\n    while (currentIndex >= 0 && currentIndex <= lastRowIndex) {\n      const currentCell = this.rowModel.getRow(currentIndex);\n      if (currentCell) {\n        const currentCellHeight = currentCell.rowHeight ?? 0;\n        if (pixelSum + currentCellHeight > pixelsInOnePage) {\n          break;\n        }\n        pixelSum += currentCellHeight;\n      }\n      currentIndex += step;\n    }\n    return Math.max(0, Math.min(currentIndex, lastRowIndex));\n  }\n  getViewportHeight() {\n    const {\n      gridBodyCtrl,\n      center\n    } = this.ctrlsService.getParams();\n    const scrollPosition = gridBodyCtrl.getScrollFeature().getVScrollPosition();\n    const scrollbarWidth = this.gos.getScrollbarWidth();\n    let pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\n    if (center.isHorizontalScrollShowing()) {\n      pixelsInOnePage -= scrollbarWidth;\n    }\n    return pixelsInOnePage;\n  }\n  isRowTallerThanView(rowIndex) {\n    const rowNode = this.rowModel.getRow(rowIndex);\n    if (!rowNode) {\n      return false;\n    }\n    const rowHeight = rowNode.rowHeight;\n    if (typeof rowHeight !== \"number\") {\n      return false;\n    }\n    return rowHeight > this.getViewportHeight();\n  }\n  onCtrlUpDownLeftRight(key, gridCell) {\n    const cellToFocus = this.cellNavigationService.getNextCellToFocus(key, gridCell, true);\n    const {\n      rowIndex\n    } = cellToFocus;\n    const column = cellToFocus.column;\n    this.navigateTo({\n      scrollIndex: rowIndex,\n      scrollType: null,\n      scrollColumn: column,\n      focusIndex: rowIndex,\n      focusColumn: column\n    });\n  }\n  // home brings focus to top left cell, end brings focus to bottom right, grid scrolled to bring\n  // same cell into view (which means either scroll all the way up, or all the way down).\n  onHomeOrEndKey(key) {\n    const homeKey = key === KeyCode.PAGE_HOME;\n    const allColumns = this.visibleColsService.getAllCols();\n    const columnToSelect = homeKey ? allColumns[0] : _last(allColumns);\n    const scrollIndex = homeKey ? this.pageBoundsService.getFirstRow() : this.pageBoundsService.getLastRow();\n    this.navigateTo({\n      scrollIndex,\n      scrollType: null,\n      scrollColumn: columnToSelect,\n      focusIndex: scrollIndex,\n      focusColumn: columnToSelect\n    });\n  }\n  // result of keyboard event\n  onTabKeyDown(previous, keyboardEvent) {\n    const backwards = keyboardEvent.shiftKey;\n    const movedToNextCell = this.tabToNextCellCommon(previous, backwards, keyboardEvent);\n    if (movedToNextCell !== false) {\n      if (movedToNextCell) {\n        keyboardEvent.preventDefault();\n      }\n      return;\n    }\n    if (backwards) {\n      const {\n        rowIndex,\n        rowPinned\n      } = previous.getRowPosition();\n      const firstRow = rowPinned ? rowIndex === 0 : rowIndex === this.pageBoundsService.getFirstRow();\n      if (firstRow) {\n        if (this.gos.get(\"headerHeight\") === 0 || this.gos.get(\"suppressHeaderFocus\")) {\n          this.focusService.focusNextGridCoreContainer(true, true);\n        } else {\n          keyboardEvent.preventDefault();\n          this.focusService.focusPreviousFromFirstCell(keyboardEvent);\n        }\n      }\n    } else {\n      if (previous instanceof CellCtrl) {\n        previous.focusCell(true);\n      }\n      if (this.focusService.focusNextGridCoreContainer(backwards)) {\n        keyboardEvent.preventDefault();\n      }\n    }\n  }\n  // comes from API\n  tabToNextCell(backwards, event) {\n    const focusedCell = this.focusService.getFocusedCell();\n    if (!focusedCell) {\n      return false;\n    }\n    let cellOrRow = this.getCellByPosition(focusedCell);\n    if (!cellOrRow) {\n      cellOrRow = this.rowRenderer.getRowByPosition(focusedCell);\n      if (!cellOrRow || !cellOrRow.isFullWidth()) {\n        return false;\n      }\n    }\n    return !!this.tabToNextCellCommon(cellOrRow, backwards, event);\n  }\n  tabToNextCellCommon(previous, backwards, event) {\n    let editing = previous.isEditing();\n    if (!editing && previous instanceof CellCtrl) {\n      const cell = previous;\n      const row = cell.getRowCtrl();\n      if (row) {\n        editing = row.isEditing();\n      }\n    }\n    let res;\n    if (editing) {\n      if (this.gos.get(\"editType\") === \"fullRow\") {\n        res = this.moveToNextEditingRow(previous, backwards, event);\n      } else {\n        res = this.moveToNextEditingCell(previous, backwards, event);\n      }\n    } else {\n      res = this.moveToNextCellNotEditing(previous, backwards);\n    }\n    if (res === null) {\n      return res;\n    }\n    return res || !!this.focusService.getFocusedHeader();\n  }\n  // returns null if no navigation should be performed\n  moveToNextEditingCell(previousCell, backwards, event = null) {\n    const previousPos = previousCell.getCellPosition();\n    previousCell.getGui().focus();\n    previousCell.stopEditing();\n    const nextCell = this.findNextCellToFocusOn(previousPos, backwards, true);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell == null) {\n      return false;\n    }\n    nextCell.startEditing(null, true, event);\n    nextCell.focusCell(false);\n    return true;\n  }\n  // returns null if no navigation should be performed\n  moveToNextEditingRow(previousCell, backwards, event = null) {\n    const previousPos = previousCell.getCellPosition();\n    const nextCell = this.findNextCellToFocusOn(previousPos, backwards, true);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell == null) {\n      return false;\n    }\n    const nextPos = nextCell.getCellPosition();\n    const previousEditable = this.isCellEditable(previousPos);\n    const nextEditable = this.isCellEditable(nextPos);\n    const rowsMatch = nextPos && previousPos.rowIndex === nextPos.rowIndex && previousPos.rowPinned === nextPos.rowPinned;\n    if (previousEditable) {\n      previousCell.setFocusOutOnEditor();\n    }\n    if (!rowsMatch) {\n      const pRow = previousCell.getRowCtrl();\n      pRow.stopEditing();\n      const nRow = nextCell.getRowCtrl();\n      nRow.startRowEditing(void 0, void 0, event);\n    }\n    if (nextEditable) {\n      nextCell.setFocusInOnEditor();\n      nextCell.focusCell();\n    } else {\n      nextCell.focusCell(true);\n    }\n    return true;\n  }\n  // returns null if no navigation should be performed\n  moveToNextCellNotEditing(previousCell, backwards) {\n    const displayedColumns = this.visibleColsService.getAllCols();\n    let cellPos;\n    if (previousCell instanceof RowCtrl) {\n      cellPos = {\n        ...previousCell.getRowPosition(),\n        column: backwards ? displayedColumns[0] : _last(displayedColumns)\n      };\n    } else {\n      cellPos = previousCell.getCellPosition();\n    }\n    const nextCell = this.findNextCellToFocusOn(cellPos, backwards, false);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell instanceof CellCtrl) {\n      nextCell.focusCell(true);\n    } else if (nextCell) {\n      return this.tryToFocusFullWidthRow(nextCell.getRowPosition(), backwards);\n    }\n    return _exists(nextCell);\n  }\n  /**\n   * called by the cell, when tab is pressed while editing.\n   * @return: RenderedCell when navigation successful, false if navigation should not be performed, otherwise null\n   */\n  findNextCellToFocusOn(previousPosition, backwards, startEditing) {\n    let nextPosition = previousPosition;\n    while (true) {\n      if (previousPosition !== nextPosition) {\n        previousPosition = nextPosition;\n      }\n      if (!backwards) {\n        nextPosition = this.getLastCellOfColSpan(nextPosition);\n      }\n      nextPosition = this.cellNavigationService.getNextTabbedCell(nextPosition, backwards);\n      const userFunc = this.gos.getCallback(\"tabToNextCell\");\n      if (_exists(userFunc)) {\n        const params = {\n          backwards,\n          editing: startEditing,\n          previousCellPosition: previousPosition,\n          nextCellPosition: nextPosition ? nextPosition : null\n        };\n        const userResult = userFunc(params);\n        if (userResult === true || userResult === null) {\n          if (userResult === null) {\n            _warnOnce(\"Returning `null` from tabToNextCell is deprecated. Return `true` to stay on the current cell, or `false` to let the browser handle the tab behaviour.\");\n          }\n          nextPosition = previousPosition;\n        } else if (userResult === false) {\n          return false;\n        } else {\n          nextPosition = {\n            rowIndex: userResult.rowIndex,\n            column: userResult.column,\n            rowPinned: userResult.rowPinned\n          };\n        }\n      }\n      if (!nextPosition) {\n        return null;\n      }\n      if (nextPosition.rowIndex < 0) {\n        const headerLen = this.headerNavigationService.getHeaderRowCount();\n        this.focusService.focusHeaderPosition({\n          headerPosition: {\n            headerRowIndex: headerLen + nextPosition.rowIndex,\n            column: nextPosition.column\n          },\n          fromCell: true\n        });\n        return null;\n      }\n      const fullRowEdit = this.gos.get(\"editType\") === \"fullRow\";\n      if (startEditing && !fullRowEdit) {\n        const cellIsEditable = this.isCellEditable(nextPosition);\n        if (!cellIsEditable) {\n          continue;\n        }\n      }\n      this.ensureCellVisible(nextPosition);\n      const nextCell = this.getCellByPosition(nextPosition);\n      if (!nextCell) {\n        const row = this.rowRenderer.getRowByPosition(nextPosition);\n        if (!row || !row.isFullWidth() || startEditing) {\n          continue;\n        }\n        return row;\n      }\n      if (nextCell.isSuppressNavigable()) {\n        continue;\n      }\n      this.rangeService?.setRangeToCell(nextPosition);\n      return nextCell;\n    }\n  }\n  isCellEditable(cell) {\n    const rowNode = this.lookupRowNodeForCell(cell);\n    if (rowNode) {\n      return cell.column.isCellEditable(rowNode);\n    }\n    return false;\n  }\n  getCellByPosition(cellPosition) {\n    const rowCtrl = this.rowRenderer.getRowByPosition(cellPosition);\n    if (!rowCtrl) {\n      return null;\n    }\n    return rowCtrl.getCellCtrl(cellPosition.column);\n  }\n  lookupRowNodeForCell(cell) {\n    if (cell.rowPinned === \"top\") {\n      return this.pinnedRowModel.getPinnedTopRow(cell.rowIndex);\n    }\n    if (cell.rowPinned === \"bottom\") {\n      return this.pinnedRowModel.getPinnedBottomRow(cell.rowIndex);\n    }\n    return this.rowModel.getRow(cell.rowIndex);\n  }\n  // we use index for rows, but column object for columns, as the next column (by index) might not\n  // be visible (header grouping) so it's not reliable, so using the column object instead.\n  navigateToNextCell(event, key, currentCell, allowUserOverride) {\n    let nextCell = currentCell;\n    let hitEdgeOfGrid = false;\n    while (nextCell && (nextCell === currentCell || !this.isValidNavigateCell(nextCell))) {\n      if (this.gos.get(\"enableRtl\")) {\n        if (key === KeyCode.LEFT) {\n          nextCell = this.getLastCellOfColSpan(nextCell);\n        }\n      } else if (key === KeyCode.RIGHT) {\n        nextCell = this.getLastCellOfColSpan(nextCell);\n      }\n      nextCell = this.cellNavigationService.getNextCellToFocus(key, nextCell);\n      hitEdgeOfGrid = _missing(nextCell);\n    }\n    if (hitEdgeOfGrid && event && event.key === KeyCode.UP) {\n      nextCell = {\n        rowIndex: -1,\n        rowPinned: null,\n        column: currentCell.column\n      };\n    }\n    if (allowUserOverride) {\n      const userFunc = this.gos.getCallback(\"navigateToNextCell\");\n      if (_exists(userFunc)) {\n        const params = {\n          key,\n          previousCellPosition: currentCell,\n          nextCellPosition: nextCell ? nextCell : null,\n          event\n        };\n        const userCell = userFunc(params);\n        if (_exists(userCell)) {\n          nextCell = {\n            rowPinned: userCell.rowPinned,\n            rowIndex: userCell.rowIndex,\n            column: userCell.column\n          };\n        } else {\n          nextCell = null;\n        }\n      }\n    }\n    if (!nextCell) {\n      return;\n    }\n    if (nextCell.rowIndex < 0) {\n      const headerLen = this.headerNavigationService.getHeaderRowCount();\n      this.focusService.focusHeaderPosition({\n        headerPosition: {\n          headerRowIndex: headerLen + nextCell.rowIndex,\n          column: currentCell.column\n        },\n        event: event || void 0,\n        fromCell: true\n      });\n      return;\n    }\n    const normalisedPosition = this.getNormalisedPosition(nextCell);\n    if (normalisedPosition) {\n      this.focusPosition(normalisedPosition);\n    } else {\n      this.tryToFocusFullWidthRow(nextCell);\n    }\n  }\n  getNormalisedPosition(cellPosition) {\n    this.ensureCellVisible(cellPosition);\n    const cellCtrl = this.getCellByPosition(cellPosition);\n    if (!cellCtrl) {\n      return null;\n    }\n    cellPosition = cellCtrl.getCellPosition();\n    this.ensureCellVisible(cellPosition);\n    return cellPosition;\n  }\n  tryToFocusFullWidthRow(position, backwards = false) {\n    const displayedColumns = this.visibleColsService.getAllCols();\n    const rowComp = this.rowRenderer.getRowByPosition(position);\n    if (!rowComp || !rowComp.isFullWidth()) {\n      return false;\n    }\n    const currentCellFocused = this.focusService.getFocusedCell();\n    const cellPosition = {\n      rowIndex: position.rowIndex,\n      rowPinned: position.rowPinned,\n      column: position.column || (backwards ? _last(displayedColumns) : displayedColumns[0])\n    };\n    this.focusPosition(cellPosition);\n    const fromBelow = currentCellFocused != null ? this.rowPositionUtils.before(cellPosition, currentCellFocused) : false;\n    const focusEvent = {\n      type: \"fullWidthRowFocused\",\n      rowIndex: cellPosition.rowIndex,\n      rowPinned: cellPosition.rowPinned,\n      column: cellPosition.column,\n      isFullWidthCell: true,\n      fromBelow\n    };\n    this.eventService.dispatchEvent(focusEvent);\n    return true;\n  }\n  focusPosition(cellPosition) {\n    this.focusService.setFocusedCell({\n      rowIndex: cellPosition.rowIndex,\n      column: cellPosition.column,\n      rowPinned: cellPosition.rowPinned,\n      forceBrowserFocus: true\n    });\n    this.rangeService?.setRangeToCell(cellPosition);\n  }\n  isValidNavigateCell(cell) {\n    const rowNode = this.rowPositionUtils.getRowNode(cell);\n    return !!rowNode;\n  }\n  getLastCellOfColSpan(cell) {\n    const cellCtrl = this.getCellByPosition(cell);\n    if (!cellCtrl) {\n      return cell;\n    }\n    const colSpanningList = cellCtrl.getColSpanningList();\n    if (colSpanningList.length === 1) {\n      return cell;\n    }\n    return {\n      rowIndex: cell.rowIndex,\n      column: _last(colSpanningList),\n      rowPinned: cell.rowPinned\n    };\n  }\n  ensureCellVisible(gridCell) {\n    const isGroupStickyEnabled = this.gos.isGroupRowsSticky();\n    const rowNode = this.rowModel.getRow(gridCell.rowIndex);\n    const skipScrollToRow = isGroupStickyEnabled && rowNode?.sticky;\n    if (!skipScrollToRow && _missing(gridCell.rowPinned)) {\n      this.gridBodyCon.getScrollFeature().ensureIndexVisible(gridCell.rowIndex);\n    }\n    if (!gridCell.column.isPinned()) {\n      this.gridBodyCon.getScrollFeature().ensureColumnVisible(gridCell.column);\n    }\n  }\n};\n\n// community-modules/core/src/headerRendering/common/horizontalResizeService.ts\nvar HorizontalResizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"horizontalResizeService\";\n  }\n  wireBeans(beans) {\n    this.dragService = beans.dragService;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  addResizeBar(params) {\n    const dragSource = {\n      dragStartPixels: params.dragStartPixels || 0,\n      eElement: params.eResizeBar,\n      onDragStart: this.onDragStart.bind(this, params),\n      onDragStop: this.onDragStop.bind(this, params),\n      onDragging: this.onDragging.bind(this, params),\n      includeTouch: true,\n      stopPropagationForTouch: true\n    };\n    this.dragService.addDragSource(dragSource);\n    const finishedWithResizeFunc = () => this.dragService.removeDragSource(dragSource);\n    return finishedWithResizeFunc;\n  }\n  onDragStart(params, mouseEvent) {\n    this.dragStartX = mouseEvent.clientX;\n    this.setResizeIcons();\n    const shiftKey = mouseEvent instanceof MouseEvent && mouseEvent.shiftKey === true;\n    params.onResizeStart(shiftKey);\n  }\n  setResizeIcons() {\n    const ctrl = this.ctrlsService.get(\"gridCtrl\");\n    ctrl.setResizeCursor(true);\n    ctrl.disableUserSelect(true);\n  }\n  onDragStop(params, mouseEvent) {\n    params.onResizeEnd(this.resizeAmount);\n    this.resetIcons();\n  }\n  resetIcons() {\n    const ctrl = this.ctrlsService.get(\"gridCtrl\");\n    ctrl.setResizeCursor(false);\n    ctrl.disableUserSelect(false);\n  }\n  onDragging(params, mouseEvent) {\n    this.resizeAmount = mouseEvent.clientX - this.dragStartX;\n    params.onResizing(this.resizeAmount);\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/standardMenu.ts\nvar StandardMenuFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterMenuFactory\";\n  }\n  wireBeans(beans) {\n    this.popupService = beans.popupService;\n    this.focusService = beans.focusService;\n    this.ctrlsService = beans.ctrlsService;\n    this.menuService = beans.menuService;\n  }\n  hideActiveMenu() {\n    if (this.hidePopup) {\n      this.hidePopup();\n    }\n  }\n  showMenuAfterMouseEvent(column, mouseEvent, containerType) {\n    this.showPopup(column, eMenu => {\n      this.popupService.positionPopupUnderMouseEvent({\n        column,\n        type: containerType,\n        mouseEvent,\n        ePopup: eMenu\n      });\n    }, containerType, mouseEvent.target, this.menuService.isLegacyMenuEnabled());\n  }\n  showMenuAfterButtonClick(column, eventSource, containerType) {\n    let multiplier = -1;\n    let alignSide = \"left\";\n    const isLegacyMenuEnabled = this.menuService.isLegacyMenuEnabled();\n    if (!isLegacyMenuEnabled && this.gos.get(\"enableRtl\")) {\n      multiplier = 1;\n      alignSide = \"right\";\n    }\n    const nudgeX = isLegacyMenuEnabled ? void 0 : 4 * multiplier;\n    const nudgeY = isLegacyMenuEnabled ? void 0 : 4;\n    this.showPopup(column, eMenu => {\n      this.popupService.positionPopupByComponent({\n        type: containerType,\n        eventSource,\n        ePopup: eMenu,\n        nudgeX,\n        nudgeY,\n        alignSide,\n        keepWithinBounds: true,\n        position: \"under\",\n        column\n      });\n    }, containerType, eventSource, isLegacyMenuEnabled);\n  }\n  showPopup(column, positionCallback, containerType, eventSource, isLegacyMenuEnabled) {\n    const comp = column ? this.createBean(new FilterWrapperComp(column, \"COLUMN_MENU\")) : void 0;\n    this.activeMenu = comp;\n    if (!comp?.hasFilter() || !column) {\n      throw new Error(\"AG Grid - unable to show popup filter, filter instantiation failed\");\n    }\n    const eMenu = document.createElement(\"div\");\n    _setAriaRole(eMenu, \"presentation\");\n    eMenu.classList.add(\"ag-menu\");\n    if (!isLegacyMenuEnabled) {\n      eMenu.classList.add(\"ag-filter-menu\");\n    }\n    [this.tabListener] = this.addManagedElementListeners(eMenu, {\n      keydown: e => this.trapFocusWithin(e, eMenu)\n    });\n    eMenu.appendChild(comp?.getGui());\n    let hidePopup;\n    const afterGuiDetached = () => comp?.afterGuiDetached();\n    const anchorToElement = this.menuService.isColumnMenuAnchoringEnabled() ? eventSource ?? this.ctrlsService.getGridBodyCtrl().getGui() : void 0;\n    const closedCallback = e => {\n      column.setMenuVisible(false, \"contextMenu\");\n      const isKeyboardEvent = e instanceof KeyboardEvent;\n      if (this.tabListener) {\n        this.tabListener = this.tabListener();\n      }\n      if (isKeyboardEvent && eventSource && _isVisible(eventSource)) {\n        const focusableEl = this.focusService.findTabbableParent(eventSource);\n        if (focusableEl) {\n          focusableEl.focus();\n        }\n      }\n      afterGuiDetached();\n      this.destroyBean(this.activeMenu);\n      this.dispatchVisibleChangedEvent(false, containerType, column);\n    };\n    const translate = this.localeService.getLocaleTextFunc();\n    const ariaLabel = isLegacyMenuEnabled && containerType !== \"columnFilter\" ? translate(\"ariaLabelColumnMenu\", \"Column Menu\") : translate(\"ariaLabelColumnFilter\", \"Column Filter\");\n    const addPopupRes = this.popupService.addPopup({\n      modal: true,\n      eChild: eMenu,\n      closeOnEsc: true,\n      closedCallback,\n      positionCallback: () => positionCallback(eMenu),\n      anchorToElement,\n      ariaLabel\n    });\n    if (addPopupRes) {\n      this.hidePopup = hidePopup = addPopupRes.hideFunc;\n    }\n    comp.afterInit().then(() => {\n      positionCallback(eMenu);\n      comp.afterGuiAttached({\n        container: containerType,\n        hidePopup\n      });\n    });\n    column.setMenuVisible(true, \"contextMenu\");\n    this.dispatchVisibleChangedEvent(true, containerType, column);\n  }\n  trapFocusWithin(e, menu) {\n    if (e.key !== KeyCode.TAB || e.defaultPrevented || this.focusService.findNextFocusableElement(menu, false, e.shiftKey)) {\n      return;\n    }\n    e.preventDefault();\n    this.focusService.focusInto(menu, e.shiftKey);\n  }\n  dispatchVisibleChangedEvent(visible, containerType, column) {\n    const displayedEvent = {\n      type: \"columnMenuVisibleChanged\",\n      visible,\n      switchingTab: false,\n      key: containerType,\n      column: column ?? null\n    };\n    this.eventService.dispatchEvent(displayedEvent);\n  }\n  isMenuEnabled(column) {\n    return column.isFilterAllowed() && (column.getColDef().menuTabs ?? [\"filterMenuTab\"]).includes(\"filterMenuTab\");\n  }\n  showMenuAfterContextMenuEvent() {}\n  destroy() {\n    this.destroyBean(this.activeMenu);\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/misc/resizeObserverService.ts\nvar DEBOUNCE_DELAY = 50;\nvar ResizeObserverService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"resizeObserverService\";\n    this.polyfillFunctions = [];\n  }\n  observeResize(element, callback) {\n    const win = this.gos.getWindow();\n    const useBrowserResizeObserver = () => {\n      const resizeObserver = new win.ResizeObserver(callback);\n      resizeObserver.observe(element);\n      return () => resizeObserver.disconnect();\n    };\n    const usePolyfill = () => {\n      let widthLastTime = element?.clientWidth ?? 0;\n      let heightLastTime = element?.clientHeight ?? 0;\n      let running = true;\n      const periodicallyCheckWidthAndHeight = () => {\n        if (running) {\n          const newWidth = element?.clientWidth ?? 0;\n          const newHeight = element?.clientHeight ?? 0;\n          const changed = newWidth !== widthLastTime || newHeight !== heightLastTime;\n          if (changed) {\n            widthLastTime = newWidth;\n            heightLastTime = newHeight;\n            callback();\n          }\n          this.doNextPolyfillTurn(periodicallyCheckWidthAndHeight);\n        }\n      };\n      periodicallyCheckWidthAndHeight();\n      return () => running = false;\n    };\n    const suppressResize = this.gos.get(\"suppressBrowserResizeObserver\");\n    const resizeObserverExists = !!win.ResizeObserver;\n    if (resizeObserverExists && !suppressResize) {\n      return useBrowserResizeObserver();\n    }\n    return this.getFrameworkOverrides().wrapIncoming(() => usePolyfill(), \"resize-observer\");\n  }\n  doNextPolyfillTurn(func) {\n    this.polyfillFunctions.push(func);\n    this.schedulePolyfill();\n  }\n  schedulePolyfill() {\n    if (this.polyfillScheduled) {\n      return;\n    }\n    const executeAllFuncs = () => {\n      const funcs = this.polyfillFunctions;\n      this.polyfillScheduled = false;\n      this.polyfillFunctions = [];\n      funcs.forEach(f => f());\n    };\n    this.polyfillScheduled = true;\n    window.setTimeout(executeAllFuncs, DEBOUNCE_DELAY);\n  }\n};\n\n// community-modules/core/src/misc/animationFrameService.ts\nvar AnimationFrameService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"animationFrameService\";\n    // p1 and p2 are create tasks are to do with row and cell creation.\n    // for them we want to execute according to row order, so we use\n    // TaskItem so we know what index the item is for.\n    this.createTasksP1 = {\n      list: [],\n      sorted: false\n    };\n    // eg drawing back-ground of rows\n    this.createTasksP2 = {\n      list: [],\n      sorted: false\n    };\n    // eg cell renderers, adding hover functionality\n    // destroy tasks are to do with row removal. they are done after row creation as the user will need to see new\n    // rows first (as blank is scrolled into view), when we remove the old rows (no longer in view) is not as\n    // important.\n    this.destroyTasks = [];\n    this.ticking = false;\n    // we need to know direction of scroll, to build up rows in the direction of\n    // the scroll. eg if user scrolls down, we extend the rows by building down.\n    this.scrollGoingDown = true;\n    this.lastPage = 0;\n    this.lastScrollTop = 0;\n    this.taskCount = 0;\n    this.cancelledTasks = /* @__PURE__ */new Set();\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.paginationService = beans.paginationService;\n  }\n  setScrollTop(scrollTop) {\n    const isPaginationActive = this.gos.get(\"pagination\");\n    this.scrollGoingDown = scrollTop >= this.lastScrollTop;\n    if (isPaginationActive && scrollTop === 0) {\n      const currentPage = this.paginationService?.getCurrentPage() ?? 0;\n      if (currentPage !== this.lastPage) {\n        this.lastPage = currentPage;\n        this.scrollGoingDown = true;\n      }\n    }\n    this.lastScrollTop = scrollTop;\n  }\n  postConstruct() {\n    this.useAnimationFrame = !this.gos.get(\"suppressAnimationFrame\");\n  }\n  isOn() {\n    return this.useAnimationFrame;\n  }\n  // this method is for our AG Grid sanity only - if animation frames are turned off,\n  // then no place in the code should be looking to add any work to be done in animation\n  // frames. this stops bugs - where some code is asking for a frame to be executed\n  // when it should not.\n  verifyAnimationFrameOn(methodName) {\n    if (this.useAnimationFrame === false) {\n      _warnOnce(`AnimationFrameService.${methodName} called but animation frames are off`);\n    }\n  }\n  createTask(task, index, list) {\n    this.verifyAnimationFrameOn(list);\n    const taskItem = {\n      task,\n      index,\n      createOrder: ++this.taskCount\n    };\n    this.addTaskToList(this[list], taskItem);\n    this.schedule();\n  }\n  cancelTask(task) {\n    this.cancelledTasks.add(task);\n  }\n  addTaskToList(taskList, task) {\n    taskList.list.push(task);\n    taskList.sorted = false;\n  }\n  sortTaskList(taskList) {\n    if (taskList.sorted) {\n      return;\n    }\n    const sortDirection = this.scrollGoingDown ? 1 : -1;\n    taskList.list.sort((a, b) => a.index !== b.index ? sortDirection * (b.index - a.index) : b.createOrder - a.createOrder);\n    taskList.sorted = true;\n  }\n  addDestroyTask(task) {\n    this.verifyAnimationFrameOn(\"createTasksP3\");\n    this.destroyTasks.push(task);\n    this.schedule();\n  }\n  executeFrame(millis) {\n    this.verifyAnimationFrameOn(\"executeFrame\");\n    const p1TaskList = this.createTasksP1;\n    const p1Tasks = p1TaskList.list;\n    const p2TaskList = this.createTasksP2;\n    const p2Tasks = p2TaskList.list;\n    const destroyTasks = this.destroyTasks;\n    const frameStart = ( /* @__PURE__ */new Date()).getTime();\n    let duration = ( /* @__PURE__ */new Date()).getTime() - frameStart;\n    const noMaxMillis = millis <= 0;\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    while (noMaxMillis || duration < millis) {\n      const gridBodyDidSomething = gridBodyCon.getScrollFeature().scrollGridIfNeeded();\n      if (!gridBodyDidSomething) {\n        let task;\n        if (p1Tasks.length) {\n          this.sortTaskList(p1TaskList);\n          task = p1Tasks.pop().task;\n        } else if (p2Tasks.length) {\n          this.sortTaskList(p2TaskList);\n          task = p2Tasks.pop().task;\n        } else if (destroyTasks.length) {\n          task = destroyTasks.pop();\n        } else {\n          this.cancelledTasks.clear();\n          break;\n        }\n        if (!this.cancelledTasks.has(task)) {\n          task();\n        }\n      }\n      duration = ( /* @__PURE__ */new Date()).getTime() - frameStart;\n    }\n    if (p1Tasks.length || p2Tasks.length || destroyTasks.length) {\n      this.requestFrame();\n    } else {\n      this.stopTicking();\n    }\n  }\n  stopTicking() {\n    this.ticking = false;\n  }\n  flushAllFrames() {\n    if (!this.useAnimationFrame) {\n      return;\n    }\n    this.executeFrame(-1);\n  }\n  schedule() {\n    if (!this.useAnimationFrame) {\n      return;\n    }\n    if (!this.ticking) {\n      this.ticking = true;\n      this.requestFrame();\n    }\n  }\n  requestFrame() {\n    const callback = this.executeFrame.bind(this, 60);\n    this.requestAnimationFrame(callback);\n  }\n  requestAnimationFrame(callback) {\n    const win = this.gos.getWindow();\n    if (win.requestAnimationFrame) {\n      win.requestAnimationFrame(callback);\n    } else if (win.webkitRequestAnimationFrame) {\n      win.webkitRequestAnimationFrame(callback);\n    } else {\n      win.setTimeout(callback, 0);\n    }\n  }\n  isQueueEmpty() {\n    return !this.ticking;\n  }\n  // a debounce utility used for parts of the app involved with rendering.\n  // the advantage over normal debounce is the client can call flushAllFrames()\n  // to make sure all rendering is complete. we don't wait any milliseconds,\n  // as this is intended to batch calls in one VM turn.\n  debounce(func) {\n    let pending = false;\n    return () => {\n      if (!this.isOn()) {\n        window.setTimeout(func, 0);\n        return;\n      }\n      if (pending) {\n        return;\n      }\n      pending = true;\n      this.addDestroyTask(() => {\n        pending = false;\n        func();\n      });\n    };\n  }\n};\n\n// community-modules/core/src/interfaces/iClientSideRowModel.ts\nvar ClientSideRowModelSteps = /* @__PURE__ */(ClientSideRowModelSteps2 => {\n  ClientSideRowModelSteps2[\"EVERYTHING\"] = \"group\";\n  ClientSideRowModelSteps2[\"FILTER\"] = \"filter\";\n  ClientSideRowModelSteps2[\"SORT\"] = \"sort\";\n  ClientSideRowModelSteps2[\"MAP\"] = \"map\";\n  ClientSideRowModelSteps2[\"AGGREGATE\"] = \"aggregate\";\n  ClientSideRowModelSteps2[\"FILTER_AGGREGATES\"] = \"filter_aggregates\";\n  ClientSideRowModelSteps2[\"PIVOT\"] = \"pivot\";\n  ClientSideRowModelSteps2[\"NOTHING\"] = \"nothing\";\n  return ClientSideRowModelSteps2;\n})(ClientSideRowModelSteps || {});\n\n// community-modules/core/src/misc/expansionService.ts\nvar ExpansionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"expansionService\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    this.isClientSideRowModel = this.rowModel.getType() === \"clientSide\";\n  }\n  expandRows(rowIds) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const rowIdSet = new Set(rowIds);\n    this.rowModel.forEachNode(node => {\n      if (node.id && rowIdSet.has(node.id)) {\n        node.expanded = true;\n      }\n    });\n    this.onGroupExpandedOrCollapsed();\n  }\n  getExpandedRows() {\n    const expandedRows = [];\n    this.rowModel.forEachNode(({\n      expanded,\n      id\n    }) => {\n      if (expanded && id) {\n        expandedRows.push(id);\n      }\n    });\n    return expandedRows;\n  }\n  expandAll(value) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    this.rowModel.expandOrCollapseAll(value);\n  }\n  setRowNodeExpanded(rowNode, expanded, expandParents, forceSync) {\n    if (rowNode) {\n      if (expandParents && rowNode.parent && rowNode.parent.level !== -1) {\n        this.setRowNodeExpanded(rowNode.parent, expanded, expandParents, forceSync);\n      }\n      rowNode.setExpanded(expanded, void 0, forceSync);\n    }\n  }\n  onGroupExpandedOrCollapsed() {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    this.rowModel.refreshModel({\n      step: \"map\" /* MAP */\n    });\n  }\n};\n\n// community-modules/core/src/misc/menuService.ts\nvar MenuService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"menuService\";\n  }\n  wireBeans(beans) {\n    this.filterMenuFactory = beans.filterMenuFactory;\n    this.ctrlsService = beans.ctrlsService;\n    this.animationFrameService = beans.animationFrameService;\n    this.filterManager = beans.filterManager;\n    this.rowRenderer = beans.rowRenderer;\n    this.columnChooserFactory = beans.columnChooserFactory;\n    this.contextMenuFactory = beans.contextMenuFactory;\n    this.enterpriseMenuFactory = beans.enterpriseMenuFactory;\n  }\n  postConstruct() {\n    this.activeMenuFactory = this.enterpriseMenuFactory ?? this.filterMenuFactory;\n  }\n  showColumnMenu(params) {\n    this.showColumnMenuCommon(this.activeMenuFactory, params, \"columnMenu\");\n  }\n  showFilterMenu(params) {\n    const menuFactory = this.enterpriseMenuFactory && this.isLegacyMenuEnabled() ? this.enterpriseMenuFactory : this.filterMenuFactory;\n    this.showColumnMenuCommon(menuFactory, params, params.containerType, true);\n  }\n  showHeaderContextMenu(column, mouseEvent, touchEvent) {\n    this.activeMenuFactory.showMenuAfterContextMenuEvent(column, mouseEvent, touchEvent);\n  }\n  getContextMenuPosition(rowNode, column) {\n    const rowCtrl = this.getRowCtrl(rowNode);\n    const eGui = this.getCellGui(rowCtrl, column);\n    if (!eGui) {\n      if (rowCtrl) {\n        return {\n          x: 0,\n          y: rowCtrl.getRowYPosition()\n        };\n      }\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    const rect = eGui.getBoundingClientRect();\n    return {\n      x: rect.x + rect.width / 2,\n      y: rect.y + rect.height / 2\n    };\n  }\n  showContextMenu(params) {\n    const {\n      rowNode\n    } = params;\n    const column = params.column;\n    let {\n      anchorToElement,\n      value\n    } = params;\n    if (rowNode && column && value == null) {\n      value = rowNode.getValueFromValueService(column);\n    }\n    if (anchorToElement == null) {\n      anchorToElement = this.getContextMenuAnchorElement(rowNode, column);\n    }\n    this.contextMenuFactory?.onContextMenu(params.mouseEvent ?? null, params.touchEvent ?? null, rowNode ?? null, column ?? null, value, anchorToElement);\n  }\n  showColumnChooser(params) {\n    this.columnChooserFactory?.showColumnChooser(params);\n  }\n  hidePopupMenu() {\n    this.contextMenuFactory?.hideActiveMenu();\n    this.activeMenuFactory.hideActiveMenu();\n  }\n  hideColumnChooser() {\n    this.columnChooserFactory?.hideActiveColumnChooser();\n  }\n  isColumnMenuInHeaderEnabled(column) {\n    const {\n      suppressMenu,\n      suppressHeaderMenuButton\n    } = column.getColDef();\n    const isSuppressMenuButton = suppressHeaderMenuButton ?? suppressMenu;\n    return !isSuppressMenuButton && this.activeMenuFactory.isMenuEnabled(column) && (this.isLegacyMenuEnabled() || !!this.enterpriseMenuFactory);\n  }\n  isFilterMenuInHeaderEnabled(column) {\n    return !column.getColDef().suppressHeaderFilterButton && !!this.filterManager?.isFilterAllowed(column);\n  }\n  isHeaderContextMenuEnabled(column) {\n    return !column?.getColDef().suppressHeaderContextMenu && this.getColumnMenuType() === \"new\";\n  }\n  isHeaderMenuButtonAlwaysShowEnabled() {\n    return this.isSuppressMenuHide();\n  }\n  isHeaderMenuButtonEnabled() {\n    const menuHides = !this.isSuppressMenuHide();\n    const onIpadAndMenuHides = _isIOSUserAgent() && menuHides;\n    return !onIpadAndMenuHides;\n  }\n  isHeaderFilterButtonEnabled(column) {\n    return this.isFilterMenuInHeaderEnabled(column) && !this.isLegacyMenuEnabled() && !this.isFloatingFilterButtonDisplayed(column);\n  }\n  isFilterMenuItemEnabled(column) {\n    return !!this.filterManager?.isFilterAllowed(column) && !this.isLegacyMenuEnabled() && !this.isFilterMenuInHeaderEnabled(column) && !this.isFloatingFilterButtonDisplayed(column);\n  }\n  isColumnMenuAnchoringEnabled() {\n    return !this.isLegacyMenuEnabled();\n  }\n  areAdditionalColumnMenuItemsEnabled() {\n    return this.getColumnMenuType() === \"new\";\n  }\n  isLegacyMenuEnabled() {\n    return this.getColumnMenuType() === \"legacy\";\n  }\n  isFloatingFilterButtonEnabled(column) {\n    const colDef = column.getColDef();\n    const legacySuppressFilterButton = colDef.floatingFilterComponentParams?.suppressFilterButton;\n    if (legacySuppressFilterButton != null) {\n      _warnOnce(`As of v31.1, 'colDef.floatingFilterComponentParams.suppressFilterButton' is deprecated. Use 'colDef.suppressFloatingFilterButton' instead.`);\n    }\n    return colDef.suppressFloatingFilterButton == null ? !legacySuppressFilterButton : !colDef.suppressFloatingFilterButton;\n  }\n  getColumnMenuType() {\n    return this.gos.get(\"columnMenu\");\n  }\n  isFloatingFilterButtonDisplayed(column) {\n    return !!column.getColDef().floatingFilter && this.isFloatingFilterButtonEnabled(column);\n  }\n  isSuppressMenuHide() {\n    const suppressMenuHide = this.gos.get(\"suppressMenuHide\");\n    if (this.isLegacyMenuEnabled()) {\n      return this.gos.exists(\"suppressMenuHide\") ? suppressMenuHide : false;\n    }\n    return suppressMenuHide;\n  }\n  showColumnMenuCommon(menuFactory, params, containerType, filtersOnly) {\n    const {\n      positionBy\n    } = params;\n    const column = params.column;\n    if (positionBy === \"button\") {\n      const {\n        buttonElement\n      } = params;\n      menuFactory.showMenuAfterButtonClick(column, buttonElement, containerType, filtersOnly);\n    } else if (positionBy === \"mouse\") {\n      const {\n        mouseEvent\n      } = params;\n      menuFactory.showMenuAfterMouseEvent(column, mouseEvent, containerType, filtersOnly);\n    } else if (column) {\n      this.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(column, \"auto\");\n      this.animationFrameService.requestAnimationFrame(() => {\n        const headerCellCtrl = this.ctrlsService.getHeaderRowContainerCtrl(column.getPinned()).getHeaderCtrlForColumn(column);\n        menuFactory.showMenuAfterButtonClick(column, headerCellCtrl.getAnchorElementForMenu(filtersOnly), containerType, true);\n      });\n    }\n  }\n  getRowCtrl(rowNode) {\n    const {\n      rowIndex,\n      rowPinned\n    } = rowNode || {};\n    if (rowIndex == null) {\n      return;\n    }\n    return this.rowRenderer.getRowByPosition({\n      rowIndex,\n      rowPinned\n    }) || void 0;\n  }\n  getCellGui(rowCtrl, column) {\n    if (!rowCtrl || !column) {\n      return;\n    }\n    const cellCtrl = rowCtrl.getCellCtrl(column);\n    return cellCtrl?.getGui() || void 0;\n  }\n  getContextMenuAnchorElement(rowNode, column) {\n    const gridBodyEl = this.ctrlsService.getGridBodyCtrl().getGridBodyElement();\n    const rowCtrl = this.getRowCtrl(rowNode);\n    if (!rowCtrl) {\n      return gridBodyEl;\n    }\n    const cellGui = this.getCellGui(rowCtrl, column);\n    if (cellGui) {\n      return cellGui;\n    }\n    if (rowCtrl.isFullWidth()) {\n      return rowCtrl.getFullWidthElement();\n    }\n    return gridBodyEl;\n  }\n};\n\n// community-modules/core/src/widgets/agInputTextArea.ts\nvar AgInputTextArea = class extends AgAbstractInputField {\n  constructor(config) {\n    super(config, \"ag-text-area\", null, \"textarea\");\n  }\n  setValue(value, silent) {\n    const ret = super.setValue(value, silent);\n    this.eInput.value = value;\n    return ret;\n  }\n  setCols(cols) {\n    this.eInput.cols = cols;\n    return this;\n  }\n  setRows(rows) {\n    this.eInput.rows = rows;\n    return this;\n  }\n};\nvar AgInputTextAreaSelector = {\n  selector: \"AG-INPUT-TEXT-AREA\",\n  component: AgInputTextArea\n};\n\n// community-modules/core/src/edit/cellEditors/largeTextCellEditor.ts\nvar LargeTextCellEditor = class extends PopupComponent {\n  constructor() {\n    super( /* html */\n    `<div class=\"ag-large-text\">\n        <ag-input-text-area data-ref=\"eTextArea\" class=\"ag-large-text-input\"></ag-input-text-area>\n        </div>`, [AgInputTextAreaSelector]);\n    this.eTextArea = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    this.focusAfterAttached = params.cellStartedEdit;\n    this.eTextArea.setMaxLength(params.maxLength || 200).setCols(params.cols || 60).setRows(params.rows || 10);\n    if (_exists(params.value, true)) {\n      this.eTextArea.setValue(params.value.toString(), true);\n    }\n    this.addGuiEventListener(\"keydown\", this.onKeyDown.bind(this));\n    this.activateTabIndex();\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    if (key === KeyCode.LEFT || key === KeyCode.UP || key === KeyCode.RIGHT || key === KeyCode.DOWN || event.shiftKey && key === KeyCode.ENTER) {\n      event.stopPropagation();\n    }\n  }\n  afterGuiAttached() {\n    const translate = this.localeService.getLocaleTextFunc();\n    this.eTextArea.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\n    if (this.focusAfterAttached) {\n      this.eTextArea.getFocusableElement().focus();\n    }\n  }\n  getValue() {\n    const value = this.eTextArea.getValue();\n    if (!_exists(value) && !_exists(this.params.value)) {\n      return this.params.value;\n    }\n    return this.params.parseValue(value);\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/popupEditorWrapper.ts\nvar PopupEditorWrapper = class extends PopupComponent {\n  constructor(params) {\n    super( /* html */\n    `<div class=\"ag-popup-editor\" tabindex=\"-1\"/>`);\n    this.params = params;\n  }\n  postConstruct() {\n    this.gos.setDomData(this.getGui(), \"popupEditorWrapper\", true);\n    this.addKeyDownListener();\n  }\n  addKeyDownListener() {\n    const eGui = this.getGui();\n    const params = this.params;\n    const listener = event => {\n      if (!_isUserSuppressingKeyboardEvent(this.gos, event, params.node, params.column, true)) {\n        params.onKeyDown(event);\n      }\n    };\n    this.addManagedElementListeners(eGui, {\n      keydown: listener\n    });\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/selectCellEditor.ts\nvar SelectCellEditor = class extends PopupComponent {\n  constructor() {\n    super( /* html */\n    `<div class=\"ag-cell-edit-wrapper\">\n                <ag-select class=\"ag-cell-editor\" data-ref=\"eSelect\"></ag-select>\n            </div>`, [AgSelectSelector]);\n    this.eSelect = RefPlaceholder;\n    this.startedByEnter = false;\n  }\n  wireBeans(beans) {\n    this.valueService = beans.valueService;\n  }\n  init(params) {\n    this.focusAfterAttached = params.cellStartedEdit;\n    const {\n      eSelect,\n      valueService,\n      gos\n    } = this;\n    const {\n      values,\n      value,\n      eventKey\n    } = params;\n    if (_missing(values)) {\n      _warnOnce(\"no values found for select cellEditor\");\n      return;\n    }\n    this.startedByEnter = eventKey != null ? eventKey === KeyCode.ENTER : false;\n    let hasValue = false;\n    values.forEach(currentValue => {\n      const option = {\n        value: currentValue\n      };\n      const valueFormatted = valueService.formatValue(params.column, null, currentValue);\n      const valueFormattedExits = valueFormatted !== null && valueFormatted !== void 0;\n      option.text = valueFormattedExits ? valueFormatted : currentValue;\n      eSelect.addOption(option);\n      hasValue = hasValue || value === currentValue;\n    });\n    if (hasValue) {\n      eSelect.setValue(params.value, true);\n    } else if (params.values.length) {\n      eSelect.setValue(params.values[0], true);\n    }\n    const {\n      valueListGap,\n      valueListMaxWidth,\n      valueListMaxHeight\n    } = params;\n    if (valueListGap != null) {\n      eSelect.setPickerGap(valueListGap);\n    }\n    if (valueListMaxHeight != null) {\n      eSelect.setPickerMaxHeight(valueListMaxHeight);\n    }\n    if (valueListMaxWidth != null) {\n      eSelect.setPickerMaxWidth(valueListMaxWidth);\n    }\n    if (gos.get(\"editType\") !== \"fullRow\") {\n      this.addManagedListeners(this.eSelect, {\n        selectedItem: () => params.stopEditing()\n      });\n    }\n  }\n  afterGuiAttached() {\n    if (this.focusAfterAttached) {\n      this.eSelect.getFocusableElement().focus();\n    }\n    if (this.startedByEnter) {\n      setTimeout(() => {\n        if (this.isAlive()) {\n          this.eSelect.showPicker();\n        }\n      });\n    }\n  }\n  focusIn() {\n    this.eSelect.getFocusableElement().focus();\n  }\n  getValue() {\n    return this.eSelect.getValue();\n  }\n  isPopup() {\n    return false;\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/simpleCellEditor.ts\nvar SimpleCellEditor = class extends PopupComponent {\n  constructor(cellEditorInput) {\n    super( /* html */\n    `\n            <div class=\"ag-cell-edit-wrapper\">\n                ${cellEditorInput.getTemplate()}\n            </div>`, cellEditorInput.getAgComponents());\n    this.cellEditorInput = cellEditorInput;\n    this.eInput = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    const eInput = this.eInput;\n    this.cellEditorInput.init(eInput, params);\n    let startValue;\n    if (params.cellStartedEdit) {\n      this.focusAfterAttached = true;\n      const eventKey = params.eventKey;\n      if (eventKey === KeyCode.BACKSPACE || params.eventKey === KeyCode.DELETE) {\n        startValue = \"\";\n      } else if (eventKey && eventKey.length === 1) {\n        startValue = eventKey;\n      } else {\n        startValue = this.cellEditorInput.getStartValue();\n        if (eventKey !== KeyCode.F2) {\n          this.highlightAllOnFocus = true;\n        }\n      }\n    } else {\n      this.focusAfterAttached = false;\n      startValue = this.cellEditorInput.getStartValue();\n    }\n    if (startValue != null) {\n      eInput.setStartValue(startValue);\n    }\n    this.addManagedElementListeners(eInput.getGui(), {\n      keydown: event => {\n        const {\n          key\n        } = event;\n        if (key === KeyCode.PAGE_UP || key === KeyCode.PAGE_DOWN) {\n          event.preventDefault();\n        }\n      }\n    });\n  }\n  afterGuiAttached() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const eInput = this.eInput;\n    eInput.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\n    if (!this.focusAfterAttached) {\n      return;\n    }\n    if (!_isBrowserSafari()) {\n      eInput.getFocusableElement().focus();\n    }\n    const inputEl = eInput.getInputElement();\n    if (this.highlightAllOnFocus) {\n      inputEl.select();\n    } else {\n      this.cellEditorInput.setCaret?.();\n    }\n  }\n  // gets called when tabbing through cells and in full row edit mode\n  focusIn() {\n    const eInput = this.eInput;\n    const focusEl = eInput.getFocusableElement();\n    const inputEl = eInput.getInputElement();\n    focusEl.focus();\n    inputEl.select();\n  }\n  getValue() {\n    return this.cellEditorInput.getValue();\n  }\n  isPopup() {\n    return false;\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/textCellEditor.ts\nvar TextCellEditorInput = class {\n  getTemplate() {\n    return /* html */(\n      `<ag-input-text-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-text-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputTextFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.maxLength != null) {\n      eInput.setMaxLength(params.maxLength);\n    }\n  }\n  getValue() {\n    const value = this.eInput.getValue();\n    if (!_exists(value) && !_exists(this.params.value)) {\n      return this.params.value;\n    }\n    return this.params.parseValue(value);\n  }\n  getStartValue() {\n    const formatValue = this.params.useFormatter || this.params.column.getColDef().refData;\n    return formatValue ? this.params.formatValue(this.params.value) : this.params.value;\n  }\n  setCaret() {\n    const value = this.eInput.getValue();\n    const len = _exists(value) && value.length || 0;\n    if (len) {\n      this.eInput.getInputElement().setSelectionRange(len, len);\n    }\n  }\n};\nvar TextCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new TextCellEditorInput());\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/numberCellEditor.ts\nvar NumberCellEditorInput = class {\n  getTemplate() {\n    return /* html */(\n      `<ag-input-number-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-number-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputNumberFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.max != null) {\n      eInput.setMax(params.max);\n    }\n    if (params.min != null) {\n      eInput.setMin(params.min);\n    }\n    if (params.precision != null) {\n      eInput.setPrecision(params.precision);\n    }\n    if (params.step != null) {\n      eInput.setStep(params.step);\n    }\n    const inputEl = eInput.getInputElement();\n    if (params.preventStepping) {\n      eInput.addManagedElementListeners(inputEl, {\n        keydown: this.preventStepping\n      });\n    } else if (params.showStepperButtons) {\n      inputEl.classList.add(\"ag-number-field-input-stepper\");\n    }\n  }\n  preventStepping(e) {\n    if (e.key === KeyCode.UP || e.key === KeyCode.DOWN) {\n      e.preventDefault();\n    }\n  }\n  getValue() {\n    const value = this.eInput.getValue();\n    if (!_exists(value) && !_exists(this.params.value)) {\n      return this.params.value;\n    }\n    let parsedValue = this.params.parseValue(value);\n    if (parsedValue == null) {\n      return parsedValue;\n    }\n    if (typeof parsedValue === \"string\") {\n      if (parsedValue === \"\") {\n        return null;\n      }\n      parsedValue = Number(parsedValue);\n    }\n    return isNaN(parsedValue) ? null : parsedValue;\n  }\n  getStartValue() {\n    return this.params.value;\n  }\n};\nvar NumberCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new NumberCellEditorInput());\n  }\n};\n\n// community-modules/core/src/widgets/agInputDateField.ts\nvar AgInputDateField = class extends AgInputTextField {\n  constructor(config) {\n    super(config, \"ag-date-field\", \"date\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    const usingSafari = _isBrowserSafari();\n    this.addManagedListeners(this.eInput, {\n      wheel: this.onWheel.bind(this),\n      mousedown: () => {\n        if (this.isDisabled() || usingSafari) {\n          return;\n        }\n        this.eInput.focus();\n      }\n    });\n    this.eInput.step = \"any\";\n  }\n  onWheel(e) {\n    if (this.gos.getActiveDomElement() === this.eInput) {\n      e.preventDefault();\n    }\n  }\n  setMin(minDate) {\n    const min = minDate instanceof Date ? _serialiseDate(minDate ?? null, false) ?? void 0 : minDate;\n    if (this.min === min) {\n      return this;\n    }\n    this.min = min;\n    _addOrRemoveAttribute(this.eInput, \"min\", min);\n    return this;\n  }\n  setMax(maxDate) {\n    const max = maxDate instanceof Date ? _serialiseDate(maxDate ?? null, false) ?? void 0 : maxDate;\n    if (this.max === max) {\n      return this;\n    }\n    this.max = max;\n    _addOrRemoveAttribute(this.eInput, \"max\", max);\n    return this;\n  }\n  setStep(step) {\n    if (this.step === step) {\n      return this;\n    }\n    this.step = step;\n    _addOrRemoveAttribute(this.eInput, \"step\", step);\n    return this;\n  }\n  getDate() {\n    if (!this.eInput.validity.valid) {\n      return void 0;\n    }\n    return _parseDateTimeFromString(this.getValue()) ?? void 0;\n  }\n  setDate(date, silent) {\n    this.setValue(_serialiseDate(date ?? null, false), silent);\n  }\n};\nvar AgInputDateFieldSelector = {\n  selector: \"AG-INPUT-DATE-FIELD\",\n  component: AgInputDateField\n};\n\n// community-modules/core/src/edit/cellEditors/dateCellEditor.ts\nvar DateCellEditorInput = class {\n  getTemplate() {\n    return /* html */(\n      `<ag-input-date-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-date-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputDateFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.min != null) {\n      eInput.setMin(params.min);\n    }\n    if (params.max != null) {\n      eInput.setMax(params.max);\n    }\n    if (params.step != null) {\n      eInput.setStep(params.step);\n    }\n  }\n  getValue() {\n    const value = this.eInput.getDate();\n    if (!_exists(value) && !_exists(this.params.value)) {\n      return this.params.value;\n    }\n    return value ?? null;\n  }\n  getStartValue() {\n    const {\n      value\n    } = this.params;\n    if (!(value instanceof Date)) {\n      return void 0;\n    }\n    return _serialiseDate(value, false);\n  }\n};\nvar DateCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new DateCellEditorInput());\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/dateStringCellEditor.ts\nvar DateStringCellEditorInput = class {\n  constructor(getDataTypeService) {\n    this.getDataTypeService = getDataTypeService;\n  }\n  getTemplate() {\n    return /* html */(\n      `<ag-input-date-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-date-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputDateFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.min != null) {\n      eInput.setMin(params.min);\n    }\n    if (params.max != null) {\n      eInput.setMax(params.max);\n    }\n    if (params.step != null) {\n      eInput.setStep(params.step);\n    }\n  }\n  getValue() {\n    const value = this.formatDate(this.eInput.getDate());\n    if (!_exists(value) && !_exists(this.params.value)) {\n      return this.params.value;\n    }\n    return this.params.parseValue(value ?? \"\");\n  }\n  getStartValue() {\n    return _serialiseDate(this.parseDate(this.params.value ?? void 0) ?? null, false);\n  }\n  parseDate(value) {\n    const dataTypeService = this.getDataTypeService();\n    return dataTypeService ? dataTypeService.getDateParserFunction(this.params.column)(value) : _parseDateTimeFromString(value) ?? void 0;\n  }\n  formatDate(value) {\n    const dataTypeService = this.getDataTypeService();\n    return dataTypeService ? dataTypeService.getDateFormatterFunction(this.params.column)(value) : _serialiseDate(value ?? null, false) ?? void 0;\n  }\n};\nvar DateStringCellEditor = class extends SimpleCellEditor {\n  wireBeans(beans) {\n    this.dataTypeService = beans.dataTypeService;\n  }\n  constructor() {\n    super(new DateStringCellEditorInput(() => this.dataTypeService));\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/checkboxCellEditor.ts\nvar CheckboxCellEditor = class extends PopupComponent {\n  constructor() {\n    super( /* html */\n    `\n            <div class=\"ag-cell-wrapper ag-cell-edit-wrapper ag-checkbox-edit\">\n                <ag-checkbox role=\"presentation\" data-ref=\"eCheckbox\"></ag-checkbox>\n            </div>`, [AgCheckboxSelector]);\n    this.eCheckbox = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    const isSelected = params.value ?? void 0;\n    this.eCheckbox.setValue(isSelected);\n    const inputEl = this.eCheckbox.getInputElement();\n    inputEl.setAttribute(\"tabindex\", \"-1\");\n    this.setAriaLabel(isSelected);\n    this.addManagedListeners(this.eCheckbox, {\n      fieldValueChanged: event => this.setAriaLabel(event.selected)\n    });\n  }\n  getValue() {\n    return this.eCheckbox.getValue();\n  }\n  focusIn() {\n    this.eCheckbox.getFocusableElement().focus();\n  }\n  afterGuiAttached() {\n    if (this.params.cellStartedEdit) {\n      this.focusIn();\n    }\n  }\n  isPopup() {\n    return false;\n  }\n  setAriaLabel(isSelected) {\n    const translate = this.localeService.getLocaleTextFunc();\n    const stateName = _getAriaCheckboxStateName(translate, isSelected);\n    const ariaLabel = translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\");\n    this.eCheckbox.setInputAriaLabel(`${ariaLabel} (${stateName})`);\n  }\n};\n\n// community-modules/core/src/undoRedo/undoRedoStack.ts\nvar UndoRedoAction = class {\n  constructor(cellValueChanges) {\n    this.cellValueChanges = cellValueChanges;\n  }\n};\nvar RangeUndoRedoAction = class extends UndoRedoAction {\n  constructor(cellValueChanges, initialRange, finalRange, ranges) {\n    super(cellValueChanges);\n    this.initialRange = initialRange;\n    this.finalRange = finalRange;\n    this.ranges = ranges;\n  }\n};\nvar DEFAULT_STACK_SIZE = 10;\nvar UndoRedoStack = class {\n  constructor(maxStackSize) {\n    this.actionStack = [];\n    this.maxStackSize = maxStackSize ? maxStackSize : DEFAULT_STACK_SIZE;\n    this.actionStack = new Array(this.maxStackSize);\n  }\n  pop() {\n    return this.actionStack.pop();\n  }\n  push(item) {\n    const shouldAddActions = item.cellValueChanges && item.cellValueChanges.length > 0;\n    if (!shouldAddActions) {\n      return;\n    }\n    if (this.actionStack.length === this.maxStackSize) {\n      this.actionStack.shift();\n    }\n    this.actionStack.push(item);\n  }\n  clear() {\n    this.actionStack = [];\n  }\n  getCurrentStackSize() {\n    return this.actionStack.length;\n  }\n};\n\n// community-modules/core/src/undoRedo/undoRedoService.ts\nvar UndoRedoService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"undoRedoService\";\n    this.cellValueChanges = [];\n    this.activeCellEdit = null;\n    this.activeRowEdit = null;\n    this.isPasting = false;\n    this.isRangeInAction = false;\n    this.onCellValueChanged = event => {\n      const eventCell = {\n        column: event.column,\n        rowIndex: event.rowIndex,\n        rowPinned: event.rowPinned\n      };\n      const isCellEditing = this.activeCellEdit !== null && this.cellPositionUtils.equals(this.activeCellEdit, eventCell);\n      const isRowEditing = this.activeRowEdit !== null && this.rowPositionUtils.sameRow(this.activeRowEdit, eventCell);\n      const shouldCaptureAction = isCellEditing || isRowEditing || this.isPasting || this.isRangeInAction;\n      if (!shouldCaptureAction) {\n        return;\n      }\n      const {\n        rowPinned,\n        rowIndex,\n        column,\n        oldValue,\n        value\n      } = event;\n      const cellValueChange = {\n        rowPinned,\n        rowIndex,\n        columnId: column.getColId(),\n        newValue: value,\n        oldValue\n      };\n      this.cellValueChanges.push(cellValueChange);\n    };\n    this.clearStacks = () => {\n      this.undoStack.clear();\n      this.redoStack.clear();\n    };\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n    this.ctrlsService = beans.ctrlsService;\n    this.cellPositionUtils = beans.cellPositionUtils;\n    this.rowPositionUtils = beans.rowPositionUtils;\n    this.columnModel = beans.columnModel;\n    this.rangeService = beans.rangeService;\n  }\n  postConstruct() {\n    if (!this.gos.get(\"undoRedoCellEditing\")) {\n      return;\n    }\n    const undoRedoLimit = this.gos.get(\"undoRedoCellEditingLimit\");\n    if (undoRedoLimit <= 0) {\n      return;\n    }\n    this.undoStack = new UndoRedoStack(undoRedoLimit);\n    this.redoStack = new UndoRedoStack(undoRedoLimit);\n    this.addListeners();\n    const listener = this.clearStacks.bind(this);\n    this.addManagedEventListeners({\n      cellValueChanged: this.onCellValueChanged.bind(this),\n      // undo / redo is restricted to actual editing so we clear the stacks when other operations are\n      // performed that change the order of the row / cols.\n      modelUpdated: e => {\n        if (!e.keepUndoRedoStack) {\n          this.clearStacks();\n        }\n      },\n      columnPivotModeChanged: listener,\n      newColumnsLoaded: listener,\n      columnGroupOpened: listener,\n      columnRowGroupChanged: listener,\n      columnMoved: listener,\n      columnPinned: listener,\n      columnVisible: listener,\n      rowDragEnd: listener\n    });\n    this.ctrlsService.whenReady(p => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n    });\n  }\n  getCurrentUndoStackSize() {\n    return this.undoStack ? this.undoStack.getCurrentStackSize() : 0;\n  }\n  getCurrentRedoStackSize() {\n    return this.redoStack ? this.redoStack.getCurrentStackSize() : 0;\n  }\n  undo(source) {\n    const startEvent = {\n      type: \"undoStarted\",\n      source\n    };\n    this.eventService.dispatchEvent(startEvent);\n    const operationPerformed = this.undoRedo(this.undoStack, this.redoStack, \"initialRange\", \"oldValue\", \"undo\");\n    const endEvent = {\n      type: \"undoEnded\",\n      source,\n      operationPerformed\n    };\n    this.eventService.dispatchEvent(endEvent);\n  }\n  redo(source) {\n    const startEvent = {\n      type: \"redoStarted\",\n      source\n    };\n    this.eventService.dispatchEvent(startEvent);\n    const operationPerformed = this.undoRedo(this.redoStack, this.undoStack, \"finalRange\", \"newValue\", \"redo\");\n    const endEvent = {\n      type: \"redoEnded\",\n      source,\n      operationPerformed\n    };\n    this.eventService.dispatchEvent(endEvent);\n  }\n  undoRedo(undoRedoStack, opposingUndoRedoStack, rangeProperty, cellValueChangeProperty, source) {\n    if (!undoRedoStack) {\n      return false;\n    }\n    const undoRedoAction = undoRedoStack.pop();\n    if (!undoRedoAction || !undoRedoAction.cellValueChanges) {\n      return false;\n    }\n    this.processAction(undoRedoAction, cellValueChange => cellValueChange[cellValueChangeProperty], source);\n    if (undoRedoAction instanceof RangeUndoRedoAction) {\n      this.processRange(this.rangeService, undoRedoAction.ranges || [undoRedoAction[rangeProperty]]);\n    } else {\n      this.processCell(undoRedoAction.cellValueChanges);\n    }\n    opposingUndoRedoStack.push(undoRedoAction);\n    return true;\n  }\n  processAction(action, valueExtractor, source) {\n    action.cellValueChanges.forEach(cellValueChange => {\n      const {\n        rowIndex,\n        rowPinned,\n        columnId\n      } = cellValueChange;\n      const rowPosition = {\n        rowIndex,\n        rowPinned\n      };\n      const currentRow = this.rowPositionUtils.getRowNode(rowPosition);\n      if (!currentRow.displayed) {\n        return;\n      }\n      currentRow.setDataValue(columnId, valueExtractor(cellValueChange), source);\n    });\n  }\n  processRange(rangeService, ranges) {\n    let lastFocusedCell;\n    rangeService.removeAllCellRanges(true);\n    ranges.forEach((range, idx) => {\n      if (!range) {\n        return;\n      }\n      const startRow = range.startRow;\n      const endRow = range.endRow;\n      if (idx === ranges.length - 1) {\n        lastFocusedCell = {\n          rowPinned: startRow.rowPinned,\n          rowIndex: startRow.rowIndex,\n          columnId: range.startColumn.getColId()\n        };\n        this.setLastFocusedCell(lastFocusedCell);\n      }\n      const cellRangeParams = {\n        rowStartIndex: startRow.rowIndex,\n        rowStartPinned: startRow.rowPinned,\n        rowEndIndex: endRow.rowIndex,\n        rowEndPinned: endRow.rowPinned,\n        columnStart: range.startColumn,\n        columns: range.columns\n      };\n      rangeService.addCellRange(cellRangeParams);\n    });\n  }\n  processCell(cellValueChanges) {\n    const cellValueChange = cellValueChanges[0];\n    const {\n      rowIndex,\n      rowPinned\n    } = cellValueChange;\n    const rowPosition = {\n      rowIndex,\n      rowPinned\n    };\n    const row = this.rowPositionUtils.getRowNode(rowPosition);\n    const lastFocusedCell = {\n      rowPinned: cellValueChange.rowPinned,\n      rowIndex: row.rowIndex,\n      columnId: cellValueChange.columnId\n    };\n    this.setLastFocusedCell(lastFocusedCell, this.rangeService);\n  }\n  setLastFocusedCell(lastFocusedCell, rangeService) {\n    const {\n      rowIndex,\n      columnId,\n      rowPinned\n    } = lastFocusedCell;\n    const scrollFeature = this.gridBodyCtrl.getScrollFeature();\n    const column = this.columnModel.getCol(columnId);\n    if (!column) {\n      return;\n    }\n    scrollFeature.ensureIndexVisible(rowIndex);\n    scrollFeature.ensureColumnVisible(column);\n    const cellPosition = {\n      rowIndex,\n      column,\n      rowPinned\n    };\n    this.focusService.setFocusedCell({\n      ...cellPosition,\n      forceBrowserFocus: true\n    });\n    rangeService?.setRangeToCell(cellPosition);\n  }\n  addListeners() {\n    this.addManagedEventListeners({\n      rowEditingStarted: e => {\n        this.activeRowEdit = {\n          rowIndex: e.rowIndex,\n          rowPinned: e.rowPinned\n        };\n      },\n      rowEditingStopped: () => {\n        const action = new UndoRedoAction(this.cellValueChanges);\n        this.pushActionsToUndoStack(action);\n        this.activeRowEdit = null;\n      },\n      cellEditingStarted: e => {\n        this.activeCellEdit = {\n          column: e.column,\n          rowIndex: e.rowIndex,\n          rowPinned: e.rowPinned\n        };\n      },\n      cellEditingStopped: e => {\n        this.activeCellEdit = null;\n        const shouldPushAction = e.valueChanged && !this.activeRowEdit && !this.isPasting && !this.isRangeInAction;\n        if (shouldPushAction) {\n          const action = new UndoRedoAction(this.cellValueChanges);\n          this.pushActionsToUndoStack(action);\n        }\n      },\n      pasteStart: () => {\n        this.isPasting = true;\n      },\n      pasteEnd: () => {\n        const action = new UndoRedoAction(this.cellValueChanges);\n        this.pushActionsToUndoStack(action);\n        this.isPasting = false;\n      },\n      fillStart: () => {\n        this.isRangeInAction = true;\n      },\n      fillEnd: event => {\n        const action = new RangeUndoRedoAction(this.cellValueChanges, event.initialRange, event.finalRange);\n        this.pushActionsToUndoStack(action);\n        this.isRangeInAction = false;\n      },\n      keyShortcutChangedCellStart: () => {\n        this.isRangeInAction = true;\n      },\n      keyShortcutChangedCellEnd: () => {\n        let action;\n        if (this.rangeService && this.gos.get(\"enableRangeSelection\")) {\n          action = new RangeUndoRedoAction(this.cellValueChanges, void 0, void 0, [...this.rangeService.getCellRanges()]);\n        } else {\n          action = new UndoRedoAction(this.cellValueChanges);\n        }\n        this.pushActionsToUndoStack(action);\n        this.isRangeInAction = false;\n      }\n    });\n  }\n  pushActionsToUndoStack(action) {\n    this.undoStack.push(action);\n    this.cellValueChanges = [];\n    this.redoStack.clear();\n  }\n};\n\n// community-modules/core/src/api/scrollApi.ts\nfunction getVerticalPixelRange(beans) {\n  return beans.ctrlsService.getGridBodyCtrl().getScrollFeature().getVScrollPosition();\n}\nfunction getHorizontalPixelRange(beans) {\n  return beans.ctrlsService.getGridBodyCtrl().getScrollFeature().getHScrollPosition();\n}\nfunction ensureColumnVisible(beans, key, position = \"auto\") {\n  beans.frameworkOverrides.wrapIncoming(() => beans.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(key, position), \"ensureVisible\");\n}\nfunction ensureIndexVisible(beans, index, position) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureIndexVisible(index, position), \"ensureVisible\");\n}\nfunction ensureNodeVisible(beans, nodeSelector, position = null) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureNodeVisible(nodeSelector, position), \"ensureVisible\");\n}\n\n// community-modules/core/src/edit/editApi.ts\nfunction undoCellEditing(beans) {\n  beans.undoRedoService?.undo(\"api\");\n}\nfunction redoCellEditing(beans) {\n  beans.undoRedoService?.redo(\"api\");\n}\nfunction getCellEditorInstances(beans, params = {}) {\n  const res = beans.rowRenderer.getCellEditorInstances(params);\n  const unwrapped = res.map(_unwrapUserComp);\n  return unwrapped;\n}\nfunction getEditingCells(beans) {\n  return beans.rowRenderer.getEditingCells();\n}\nfunction stopEditing(beans, cancel = false) {\n  beans.rowRenderer.stopEditing(cancel);\n}\nfunction startEditingCell(beans, params) {\n  const column = beans.columnModel.getCol(params.colKey);\n  if (!column) {\n    _warnOnce(`no column found for ${params.colKey}`);\n    return;\n  }\n  const cellPosition = {\n    rowIndex: params.rowIndex,\n    rowPinned: params.rowPinned || null,\n    column\n  };\n  const notPinned = params.rowPinned == null;\n  if (notPinned) {\n    ensureIndexVisible(beans, params.rowIndex);\n  }\n  ensureColumnVisible(beans, params.colKey);\n  const cell = beans.navigationService.getCellByPosition(cellPosition);\n  if (!cell) {\n    return;\n  }\n  if (!beans.focusService.isCellFocused(cellPosition)) {\n    beans.focusService.setFocusedCell(cellPosition);\n  }\n  cell.startRowOrCellEdit(params.key);\n}\nfunction getCurrentUndoSize(beans) {\n  return beans.undoRedoService?.getCurrentUndoStackSize() ?? 0;\n}\nfunction getCurrentRedoSize(beans) {\n  return beans.undoRedoService?.getCurrentRedoStackSize() ?? 0;\n}\n\n// community-modules/core/src/edit/editService.ts\nvar EditService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"editService\";\n  }\n  wireBeans(beans) {\n    this.navigationService = beans.navigationService;\n    this.userComponentFactory = beans.userComponentFactory;\n    this.valueService = beans.valueService;\n  }\n  startEditing(cellCtrl, key = null, cellStartedEdit = false, event = null) {\n    const editorParams = this.createCellEditorParams(cellCtrl, key, cellStartedEdit);\n    const colDef = cellCtrl.getColumn().getColDef();\n    const compDetails = this.userComponentFactory.getCellEditorDetails(colDef, editorParams);\n    const popup = compDetails?.popupFromSelector != null ? compDetails.popupFromSelector : !!colDef.cellEditorPopup;\n    const position = compDetails?.popupPositionFromSelector != null ? compDetails.popupPositionFromSelector : colDef.cellEditorPopupPosition;\n    cellCtrl.setEditing(true, compDetails);\n    cellCtrl.getComp().setEditDetails(compDetails, popup, position, this.gos.get(\"reactiveCustomComponents\"));\n    const e = cellCtrl.createEvent(event, \"cellEditingStarted\");\n    this.eventService.dispatchEvent(e);\n  }\n  stopEditing(cellCtrl, cancel) {\n    const cellComp = cellCtrl.getComp();\n    const {\n      newValue,\n      newValueExists\n    } = this.takeValueFromCellEditor(cancel, cellComp);\n    const rowNode = cellCtrl.getRowNode();\n    const column = cellCtrl.getColumn();\n    const oldValue = rowNode.getValueFromValueService(column);\n    let valueChanged = false;\n    if (newValueExists) {\n      valueChanged = this.saveNewValue(cellCtrl, oldValue, newValue, rowNode, column);\n    }\n    cellCtrl.setEditing(false, void 0);\n    cellComp.setEditDetails();\n    cellCtrl.updateAndFormatValue(false);\n    cellCtrl.refreshCell({\n      forceRefresh: true,\n      suppressFlash: true\n    });\n    const event = {\n      ...cellCtrl.createEvent(null, \"cellEditingStopped\"),\n      oldValue,\n      newValue,\n      valueChanged\n    };\n    this.eventService.dispatchEvent(event);\n    return valueChanged;\n  }\n  handleColDefChanged(cellCtrl) {\n    const cellEditor = cellCtrl.getCellEditor();\n    if (cellEditor?.refresh) {\n      const {\n        eventKey,\n        cellStartedEdit\n      } = cellCtrl.getEditCompDetails().params;\n      const editorParams = this.createCellEditorParams(cellCtrl, eventKey, cellStartedEdit);\n      const colDef = cellCtrl.getColumn().getColDef();\n      const compDetails = this.userComponentFactory.getCellEditorDetails(colDef, editorParams);\n      cellEditor.refresh(compDetails.params);\n    }\n  }\n  setFocusOutOnEditor(cellCtrl) {\n    const cellEditor = cellCtrl.getComp().getCellEditor();\n    if (cellEditor && cellEditor.focusOut) {\n      cellEditor.focusOut();\n    }\n  }\n  setFocusInOnEditor(cellCtrl) {\n    const cellEditor = cellCtrl.getComp().getCellEditor();\n    if (cellEditor && cellEditor.focusIn) {\n      cellEditor.focusIn();\n    } else {\n      cellCtrl.focusCell(true);\n    }\n  }\n  stopEditingAndFocus(cellCtrl, suppressNavigateAfterEdit = false, shiftKey = false) {\n    cellCtrl.stopRowOrCellEdit();\n    cellCtrl.focusCell(true);\n    if (!suppressNavigateAfterEdit) {\n      this.navigateAfterEdit(shiftKey, cellCtrl.getCellPosition());\n    }\n  }\n  createPopupEditorWrapper(params) {\n    return new PopupEditorWrapper(params);\n  }\n  takeValueFromCellEditor(cancel, cellComp) {\n    const noValueResult = {\n      newValueExists: false\n    };\n    if (cancel) {\n      return noValueResult;\n    }\n    const cellEditor = cellComp.getCellEditor();\n    if (!cellEditor) {\n      return noValueResult;\n    }\n    const userWantsToCancel = cellEditor.isCancelAfterEnd && cellEditor.isCancelAfterEnd();\n    if (userWantsToCancel) {\n      return noValueResult;\n    }\n    const newValue = cellEditor.getValue();\n    return {\n      newValue,\n      newValueExists: true\n    };\n  }\n  /**\n   * @returns `True` if the value changes, otherwise `False`.\n   */\n  saveNewValue(cellCtrl, oldValue, newValue, rowNode, column) {\n    if (newValue === oldValue) {\n      return false;\n    }\n    cellCtrl.setSuppressRefreshCell(true);\n    const valueChanged = rowNode.setDataValue(column, newValue, \"edit\");\n    cellCtrl.setSuppressRefreshCell(false);\n    return valueChanged;\n  }\n  createCellEditorParams(cellCtrl, key, cellStartedEdit) {\n    const column = cellCtrl.getColumn();\n    const rowNode = cellCtrl.getRowNode();\n    return this.gos.addGridCommonParams({\n      value: rowNode.getValueFromValueService(column),\n      eventKey: key,\n      column,\n      colDef: column.getColDef(),\n      rowIndex: cellCtrl.getCellPosition().rowIndex,\n      node: rowNode,\n      data: rowNode.data,\n      cellStartedEdit,\n      onKeyDown: cellCtrl.onKeyDown.bind(cellCtrl),\n      stopEditing: cellCtrl.stopEditingAndFocus.bind(cellCtrl),\n      eGridCell: cellCtrl.getGui(),\n      parseValue: newValue => this.valueService.parseValue(column, rowNode, newValue, cellCtrl.getValue()),\n      formatValue: cellCtrl.formatValue.bind(cellCtrl)\n    });\n  }\n  navigateAfterEdit(shiftKey, cellPosition) {\n    const enterNavigatesVerticallyAfterEdit = this.gos.get(\"enterNavigatesVerticallyAfterEdit\");\n    if (enterNavigatesVerticallyAfterEdit) {\n      const key = shiftKey ? KeyCode.UP : KeyCode.DOWN;\n      this.navigationService.navigateToNextCell(null, key, cellPosition, false);\n    }\n  }\n};\n\n// community-modules/core/src/edit/rowEditService.ts\nvar RowEditService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowEditService\";\n  }\n  startEditing(rowCtrl, key = null, sourceRenderedCell = null, event = null) {\n    const atLeastOneEditing = rowCtrl.getAllCellCtrls().reduce((prev, cellCtrl) => {\n      const cellStartedEdit = cellCtrl === sourceRenderedCell;\n      if (cellStartedEdit) {\n        cellCtrl.startEditing(key, cellStartedEdit, event);\n      } else {\n        cellCtrl.startEditing(null, cellStartedEdit, event);\n      }\n      if (prev) {\n        return true;\n      }\n      return cellCtrl.isEditing();\n    }, false);\n    if (atLeastOneEditing) {\n      this.setEditing(rowCtrl, true);\n    }\n  }\n  stopEditing(rowCtrl, cancel = false) {\n    const cellControls = rowCtrl.getAllCellCtrls();\n    const isRowEdit = rowCtrl.isEditing();\n    rowCtrl.setStoppingRowEdit(true);\n    let fireRowEditEvent = false;\n    for (const ctrl of cellControls) {\n      const valueChanged = ctrl.stopEditing(cancel);\n      if (isRowEdit && !cancel && !fireRowEditEvent && valueChanged) {\n        fireRowEditEvent = true;\n      }\n    }\n    if (fireRowEditEvent) {\n      const event = rowCtrl.createRowEvent(\"rowValueChanged\");\n      this.eventService.dispatchEvent(event);\n    }\n    if (isRowEdit) {\n      this.setEditing(rowCtrl, false);\n    }\n    rowCtrl.setStoppingRowEdit(false);\n  }\n  setEditing(rowCtrl, value) {\n    rowCtrl.setEditingRow(value);\n    rowCtrl.forEachGui(void 0, gui => gui.rowComp.addOrRemoveCssClass(\"ag-row-editing\", value));\n    const event = value ? rowCtrl.createRowEvent(\"rowEditingStarted\") : rowCtrl.createRowEvent(\"rowEditingStopped\");\n    this.eventService.dispatchEvent(event);\n  }\n};\n\n// community-modules/core/src/edit/editModule.ts\nvar EditCoreModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/edit-core\",\n  beans: [EditService]\n};\nvar EditApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/edit-api\",\n  apiFunctions: {\n    undoCellEditing,\n    redoCellEditing,\n    getCellEditorInstances,\n    getEditingCells,\n    stopEditing,\n    startEditingCell,\n    getCurrentUndoSize,\n    getCurrentRedoSize\n  },\n  dependantModules: [EditCoreModule]\n};\nvar UndoRedoEditModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/undo-redo-edit\",\n  beans: [UndoRedoService],\n  dependantModules: [EditCoreModule]\n};\nvar FullRowEditModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/full-row-edit\",\n  beans: [RowEditService],\n  dependantModules: [EditCoreModule]\n};\nvar DefaultEditorModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/default-editor\",\n  userComponents: [{\n    name: \"agCellEditor\",\n    classImp: TextCellEditor\n  }],\n  dependantModules: [EditCoreModule]\n};\nvar DataTypeEditorsModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/data-type-editors\",\n  userComponents: [{\n    name: \"agTextCellEditor\",\n    classImp: TextCellEditor\n  }, {\n    name: \"agNumberCellEditor\",\n    classImp: NumberCellEditor\n  }, {\n    name: \"agDateCellEditor\",\n    classImp: DateCellEditor\n  }, {\n    name: \"agDateStringCellEditor\",\n    classImp: DateStringCellEditor\n  }, {\n    name: \"agCheckboxCellEditor\",\n    classImp: CheckboxCellEditor\n  }],\n  dependantModules: [DefaultEditorModule]\n};\nvar SelectEditorModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/select-editor\",\n  userComponents: [{\n    name: \"agSelectCellEditor\",\n    classImp: SelectCellEditor\n  }],\n  dependantModules: [EditCoreModule]\n};\nvar LargeTextEditorModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/large-text-editor\",\n  userComponents: [{\n    name: \"agLargeTextCellEditor\",\n    classImp: LargeTextCellEditor\n  }],\n  dependantModules: [EditCoreModule]\n};\nvar AllCommunityEditorsModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/all-editors\",\n  dependantModules: [DefaultEditorModule, DataTypeEditorsModule, SelectEditorModule, LargeTextEditorModule]\n};\nvar EditModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/editing\",\n  dependantModules: [EditCoreModule, UndoRedoEditModule, FullRowEditModule, AllCommunityEditorsModule, EditApiModule]\n};\n\n// community-modules/core/src/rendering/autoWidthCalculator.ts\nvar AutoWidthCalculator = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"autoWidthCalculator\";\n  }\n  wireBeans(beans) {\n    this.rowRenderer = beans.rowRenderer;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady(p => {\n      this.centerRowContainerCtrl = p.center;\n    });\n  }\n  // this is the trick: we create a dummy container and clone all the cells\n  // into the dummy, then check the dummy's width. then destroy the dummy\n  // as we don't need it any more.\n  // drawback: only the cells visible on the screen are considered\n  getPreferredWidthForColumn(column, skipHeader) {\n    const eHeaderCell = this.getHeaderCellForColumn(column);\n    if (!eHeaderCell) {\n      return -1;\n    }\n    const elements = this.rowRenderer.getAllCellsForColumn(column);\n    if (!skipHeader) {\n      elements.push(eHeaderCell);\n    }\n    return this.addElementsToContainerAndGetWidth(elements);\n  }\n  getPreferredWidthForColumnGroup(columnGroup) {\n    const eHeaderCell = this.getHeaderCellForColumn(columnGroup);\n    if (!eHeaderCell) {\n      return -1;\n    }\n    return this.addElementsToContainerAndGetWidth([eHeaderCell]);\n  }\n  addElementsToContainerAndGetWidth(elements) {\n    const eDummyContainer = document.createElement(\"form\");\n    eDummyContainer.style.position = \"fixed\";\n    const eBodyContainer = this.centerRowContainerCtrl.getContainerElement();\n    elements.forEach(el => this.cloneItemIntoDummy(el, eDummyContainer));\n    eBodyContainer.appendChild(eDummyContainer);\n    const dummyContainerWidth = eDummyContainer.offsetWidth;\n    eBodyContainer.removeChild(eDummyContainer);\n    const autoSizePadding = this.getAutoSizePadding();\n    return dummyContainerWidth + autoSizePadding;\n  }\n  getAutoSizePadding() {\n    return this.gos.get(\"autoSizePadding\");\n  }\n  getHeaderCellForColumn(column) {\n    let element = null;\n    this.ctrlsService.getHeaderRowContainerCtrls().forEach(container => {\n      const res = container.getHtmlElementForColumnHeader(column);\n      if (res != null) {\n        element = res;\n      }\n    });\n    return element;\n  }\n  cloneItemIntoDummy(eCell, eDummyContainer) {\n    const eCellClone = eCell.cloneNode(true);\n    eCellClone.style.width = \"\";\n    eCellClone.style.position = \"static\";\n    eCellClone.style.left = \"\";\n    const eCloneParent = document.createElement(\"div\");\n    const eCloneParentClassList = eCloneParent.classList;\n    const isHeader = [\"ag-header-cell\", \"ag-header-group-cell\"].some(cls => eCellClone.classList.contains(cls));\n    if (isHeader) {\n      eCloneParentClassList.add(\"ag-header\", \"ag-header-row\");\n      eCloneParent.style.position = \"static\";\n    } else {\n      eCloneParentClassList.add(\"ag-row\");\n    }\n    let pointer = eCell.parentElement;\n    while (pointer) {\n      const isRow = [\"ag-header-row\", \"ag-row\"].some(cls => pointer.classList.contains(cls));\n      if (isRow) {\n        for (let i = 0; i < pointer.classList.length; i++) {\n          const item = pointer.classList[i];\n          if (item != \"ag-row-position-absolute\") {\n            eCloneParentClassList.add(item);\n          }\n        }\n        break;\n      }\n      pointer = pointer.parentElement;\n    }\n    eCloneParent.appendChild(eCellClone);\n    eDummyContainer.appendChild(eCloneParent);\n  }\n};\n\n// community-modules/core/src/rendering/features/stickyRowFeature.ts\nvar StickyRowFeature = class extends BeanStub {\n  constructor(createRowCon, destroyRowCtrls) {\n    super();\n    this.createRowCon = createRowCon;\n    this.destroyRowCtrls = destroyRowCtrls;\n    this.stickyTopRowCtrls = [];\n    this.stickyBottomRowCtrls = [];\n    this.topContainerHeight = 0;\n    this.bottomContainerHeight = 0;\n    // sticky rows pulls in extra rows from other pages which impacts row position\n    this.extraTopHeight = 0;\n    this.extraBottomHeight = 0;\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.rowRenderer = beans.rowRenderer;\n    this.ctrlsService = beans.ctrlsService;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  postConstruct() {\n    this.isClientSide = this.rowModel.getType() === \"clientSide\";\n    this.ctrlsService.whenReady(params => {\n      this.gridBodyCtrl = params.gridBodyCtrl;\n    });\n  }\n  getStickyTopRowCtrls() {\n    return this.stickyTopRowCtrls;\n  }\n  getStickyBottomRowCtrls() {\n    return this.stickyBottomRowCtrls;\n  }\n  setOffsetTop(offset) {\n    if (this.extraTopHeight === offset) {\n      return;\n    }\n    this.extraTopHeight = offset;\n    const event = {\n      type: \"stickyTopOffsetChanged\",\n      offset\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  setOffsetBottom(offset) {\n    if (this.extraBottomHeight === offset) {\n      return;\n    }\n    this.extraBottomHeight = offset;\n  }\n  resetOffsets() {\n    this.setOffsetBottom(0);\n    this.setOffsetTop(0);\n  }\n  getExtraTopHeight() {\n    return this.extraTopHeight;\n  }\n  getExtraBottomHeight() {\n    return this.extraBottomHeight;\n  }\n  /**\n   * Get the last pixel of the group, this pixel is used to push the sticky node up out of the viewport.\n   */\n  getLastPixelOfGroup(row) {\n    return this.isClientSide ? this.getClientSideLastPixelOfGroup(row) : this.getServerSideLastPixelOfGroup(row);\n  }\n  /**\n   * Get the first pixel of the group, this pixel is used to push the sticky node down out of the viewport\n   */\n  getFirstPixelOfGroup(row) {\n    if (row.footer) {\n      return row.sibling.rowTop + row.sibling.rowHeight - 1;\n    }\n    if (row.hasChildren()) {\n      return row.rowTop - 1;\n    }\n    return 0;\n  }\n  getServerSideLastPixelOfGroup(row) {\n    if (this.isClientSide) {\n      throw new Error(\"This func should only be called in server side row model.\");\n    }\n    if (row.isExpandable() || row.footer) {\n      if (row.master) {\n        return row.detailNode.rowTop + row.detailNode.rowHeight;\n      }\n      const noOrContiguousSiblings = !row.sibling || Math.abs(row.sibling.rowIndex - row.rowIndex) === 1;\n      if (noOrContiguousSiblings) {\n        let storeBounds = row.childStore?.getStoreBounds();\n        if (row.footer) {\n          storeBounds = row.sibling.childStore?.getStoreBounds();\n        }\n        return (storeBounds?.heightPx ?? 0) + (storeBounds?.topPx ?? 0);\n      }\n      if (row.footer) {\n        return row.rowTop + row.rowHeight;\n      }\n      return row.sibling.rowTop + row.sibling.rowHeight;\n    }\n    return Number.MAX_SAFE_INTEGER;\n  }\n  getClientSideLastPixelOfGroup(row) {\n    if (!this.isClientSide) {\n      throw new Error(\"This func should only be called in client side row model.\");\n    }\n    if (row.isExpandable() || row.footer) {\n      const grandTotalAtTop = row.footer && row.rowIndex === 0;\n      if (grandTotalAtTop) {\n        return Number.MAX_SAFE_INTEGER;\n      }\n      const noOrContiguousSiblings = !row.sibling || Math.abs(row.sibling.rowIndex - row.rowIndex) === 1;\n      if (noOrContiguousSiblings) {\n        let lastAncestor = row.footer ? row.sibling : row;\n        while (lastAncestor.isExpandable() && lastAncestor.expanded) {\n          if (lastAncestor.master) {\n            lastAncestor = lastAncestor.detailNode;\n          } else if (lastAncestor.childrenAfterSort) {\n            if (lastAncestor.childrenAfterSort.length === 0) {\n              break;\n            }\n            lastAncestor = _last(lastAncestor.childrenAfterSort);\n          }\n        }\n        return lastAncestor.rowTop + lastAncestor.rowHeight;\n      }\n      if (row.footer) {\n        return row.rowTop + row.rowHeight;\n      }\n      return row.sibling.rowTop + row.sibling.rowHeight;\n    }\n    return Number.MAX_SAFE_INTEGER;\n  }\n  updateStickyRows(container) {\n    const isTop = container === \"top\";\n    let newStickyContainerHeight = 0;\n    if (!this.canRowsBeSticky()) {\n      return this.refreshNodesAndContainerHeight(container, /* @__PURE__ */new Set(), newStickyContainerHeight);\n    }\n    const pixelAtContainerBoundary = isTop ? this.rowRenderer.getFirstVisibleVerticalPixel() - this.extraTopHeight : this.rowRenderer.getLastVisibleVerticalPixel() - this.extraTopHeight;\n    const newStickyRows = /* @__PURE__ */new Set();\n    const addStickyRow = stickyRow => {\n      newStickyRows.add(stickyRow);\n      if (isTop) {\n        const lastChildBottom = this.getLastPixelOfGroup(stickyRow);\n        const stickRowBottom = pixelAtContainerBoundary + newStickyContainerHeight + stickyRow.rowHeight;\n        if (lastChildBottom < stickRowBottom) {\n          stickyRow.stickyRowTop = newStickyContainerHeight + (lastChildBottom - stickRowBottom);\n        } else {\n          stickyRow.stickyRowTop = newStickyContainerHeight;\n        }\n      } else {\n        const lastChildBottom = this.getFirstPixelOfGroup(stickyRow);\n        const stickRowTop = pixelAtContainerBoundary - (newStickyContainerHeight + stickyRow.rowHeight);\n        if (lastChildBottom > stickRowTop) {\n          stickyRow.stickyRowTop = newStickyContainerHeight - (lastChildBottom - stickRowTop);\n        } else {\n          stickyRow.stickyRowTop = newStickyContainerHeight;\n        }\n      }\n      newStickyContainerHeight = 0;\n      newStickyRows.forEach(rowNode => {\n        const thisRowLastPx = rowNode.stickyRowTop + rowNode.rowHeight;\n        if (newStickyContainerHeight < thisRowLastPx) {\n          newStickyContainerHeight = thisRowLastPx;\n        }\n      });\n    };\n    const suppressFootersSticky = this.areFooterRowsStickySuppressed();\n    const suppressGroupsSticky = this.gos.get(\"suppressGroupRowsSticky\");\n    const isRowSticky = row => {\n      if (!row.displayed) {\n        return false;\n      }\n      if (row.footer) {\n        if (suppressFootersSticky === true) {\n          return false;\n        }\n        if (suppressFootersSticky === \"grand\" && row.level === -1) {\n          return false;\n        }\n        if (suppressFootersSticky === \"group\" && row.level > -1) {\n          return false;\n        }\n        const alreadySticking = newStickyRows.has(row);\n        return !alreadySticking;\n      }\n      if (row.isExpandable()) {\n        if (suppressGroupsSticky === true) {\n          return false;\n        }\n        const alreadySticking = newStickyRows.has(row);\n        return !alreadySticking && row.expanded;\n      }\n      return false;\n    };\n    for (let i = 0; i < 100; i++) {\n      let firstPixelAfterStickyRows = pixelAtContainerBoundary + newStickyContainerHeight;\n      if (!isTop) {\n        firstPixelAfterStickyRows = pixelAtContainerBoundary - newStickyContainerHeight;\n      }\n      const firstIndex = this.rowModel.getRowIndexAtPixel(firstPixelAfterStickyRows);\n      const firstRow = this.rowModel.getRow(firstIndex);\n      if (firstRow == null) {\n        break;\n      }\n      const ancestors = this.getStickyAncestors(firstRow);\n      const firstMissingParent = ancestors.find(parent => (isTop ? parent.rowIndex < firstIndex : parent.rowIndex > firstIndex) && isRowSticky(parent));\n      if (firstMissingParent) {\n        addStickyRow(firstMissingParent);\n        continue;\n      }\n      const isFirstRowOutsideViewport = isTop ? firstRow.rowTop < firstPixelAfterStickyRows : firstRow.rowTop + firstRow.rowHeight > firstPixelAfterStickyRows;\n      if (isFirstRowOutsideViewport && isRowSticky(firstRow)) {\n        addStickyRow(firstRow);\n        continue;\n      }\n      break;\n    }\n    if (!isTop) {\n      newStickyRows.forEach(rowNode => {\n        rowNode.stickyRowTop = newStickyContainerHeight - (rowNode.stickyRowTop + rowNode.rowHeight);\n      });\n    }\n    return this.refreshNodesAndContainerHeight(container, newStickyRows, newStickyContainerHeight);\n  }\n  areFooterRowsStickySuppressed() {\n    const suppressFootersSticky = this.gos.get(\"suppressStickyTotalRow\");\n    if (suppressFootersSticky === true) {\n      return true;\n    }\n    const suppressGroupRows = !!this.gos.get(\"groupIncludeFooter\") || suppressFootersSticky === \"group\";\n    const suppressGrandRows = !!this.gos.get(\"groupIncludeTotalFooter\") || suppressFootersSticky === \"grand\";\n    if (suppressGroupRows && suppressGrandRows) {\n      return true;\n    }\n    if (suppressGrandRows) {\n      return \"grand\";\n    }\n    if (suppressGroupRows) {\n      return \"group\";\n    }\n    return false;\n  }\n  canRowsBeSticky() {\n    const isStickyEnabled = this.gos.isGroupRowsSticky();\n    const suppressFootersSticky = this.areFooterRowsStickySuppressed();\n    const suppressGroupsSticky = this.gos.get(\"suppressGroupRowsSticky\");\n    return isStickyEnabled && (!suppressFootersSticky || !suppressGroupsSticky);\n  }\n  getStickyAncestors(rowNode) {\n    const ancestors = [];\n    let p = rowNode.footer ? rowNode.sibling : rowNode.parent;\n    while (p) {\n      if (p.sibling) {\n        ancestors.push(p.sibling);\n      }\n      ancestors.push(p);\n      p = p.parent;\n    }\n    return ancestors.reverse();\n  }\n  checkStickyRows() {\n    const hasTopUpdated = this.updateStickyRows(\"top\");\n    const hasBottomUpdated = this.updateStickyRows(\"bottom\");\n    return hasTopUpdated || hasBottomUpdated;\n  }\n  destroyStickyCtrls() {\n    this.refreshNodesAndContainerHeight(\"top\", /* @__PURE__ */new Set(), 0);\n    this.refreshNodesAndContainerHeight(\"bottom\", /* @__PURE__ */new Set(), 0);\n  }\n  refreshStickyNode(stickRowNode) {\n    const allStickyNodes = /* @__PURE__ */new Set();\n    if (this.stickyTopRowCtrls.some(ctrl => ctrl.getRowNode() === stickRowNode)) {\n      for (let i = 0; i < this.stickyTopRowCtrls.length; i++) {\n        const currentNode = this.stickyTopRowCtrls[i].getRowNode();\n        if (currentNode !== stickRowNode) {\n          allStickyNodes.add(currentNode);\n        }\n      }\n      if (this.refreshNodesAndContainerHeight(\"top\", allStickyNodes, this.topContainerHeight)) {\n        this.checkStickyRows();\n      }\n      return;\n    }\n    for (let i = 0; i < this.stickyBottomRowCtrls.length; i++) {\n      const currentNode = this.stickyBottomRowCtrls[i].getRowNode();\n      if (currentNode !== stickRowNode) {\n        allStickyNodes.add(currentNode);\n      }\n    }\n    if (this.refreshNodesAndContainerHeight(\"bottom\", allStickyNodes, this.bottomContainerHeight)) {\n      this.checkStickyRows();\n    }\n  }\n  /**\n   * Destroy old ctrls and create new ctrls where necessary.\n   */\n  refreshNodesAndContainerHeight(container, newStickyNodes, height) {\n    const isTop = container === \"top\";\n    const previousCtrls = isTop ? this.stickyTopRowCtrls : this.stickyBottomRowCtrls;\n    const removedCtrlsMap = {};\n    const remainingCtrls = [];\n    for (let i = 0; i < previousCtrls.length; i++) {\n      const node = previousCtrls[i].getRowNode();\n      const hasBeenRemoved = !newStickyNodes.has(node);\n      if (hasBeenRemoved) {\n        removedCtrlsMap[node.id] = previousCtrls[i];\n        node.sticky = false;\n        continue;\n      }\n      remainingCtrls.push(previousCtrls[i]);\n    }\n    const existingNodes = /* @__PURE__ */new Set();\n    for (let i = 0; i < remainingCtrls.length; i++) {\n      existingNodes.add(remainingCtrls[i].getRowNode());\n    }\n    const newCtrls = [];\n    newStickyNodes.forEach(node => {\n      if (existingNodes.has(node)) {\n        return;\n      }\n      node.sticky = true;\n      newCtrls.push(this.createRowCon(node, false, false));\n    });\n    let hasSomethingChanged = !!newCtrls.length || remainingCtrls.length !== previousCtrls.length;\n    if (isTop) {\n      if (this.topContainerHeight !== height) {\n        this.topContainerHeight = height;\n        this.gridBodyCtrl.setStickyTopHeight(height);\n        hasSomethingChanged = true;\n      }\n    } else {\n      if (this.bottomContainerHeight !== height) {\n        this.bottomContainerHeight = height;\n        this.gridBodyCtrl.setStickyBottomHeight(height);\n        hasSomethingChanged = true;\n      }\n    }\n    this.destroyRowCtrls(removedCtrlsMap, false);\n    const newCtrlsList = [...remainingCtrls, ...newCtrls];\n    newCtrlsList.sort((a, b) => b.getRowNode().rowIndex - a.getRowNode().rowIndex);\n    if (!isTop) {\n      newCtrlsList.reverse();\n    }\n    newCtrlsList.forEach(ctrl => ctrl.setRowTop(ctrl.getRowNode().stickyRowTop));\n    let extraHeight = 0;\n    if (isTop) {\n      newStickyNodes.forEach(node => {\n        if (node.rowIndex < this.pageBoundsService.getFirstRow()) {\n          extraHeight += node.rowHeight;\n        }\n      });\n      if (extraHeight > this.topContainerHeight) {\n        extraHeight = this.topContainerHeight;\n      }\n      this.setOffsetTop(extraHeight);\n    } else {\n      newStickyNodes.forEach(node => {\n        if (node.rowIndex > this.pageBoundsService.getLastRow()) {\n          extraHeight += node.rowHeight;\n        }\n      });\n      if (extraHeight > this.bottomContainerHeight) {\n        extraHeight = this.bottomContainerHeight;\n      }\n      this.setOffsetBottom(extraHeight);\n    }\n    if (!hasSomethingChanged) {\n      return false;\n    }\n    if (isTop) {\n      this.stickyTopRowCtrls = newCtrlsList;\n    } else {\n      this.stickyBottomRowCtrls = newCtrlsList;\n    }\n    return true;\n  }\n  ensureRowHeightsValid() {\n    let anyChange = false;\n    const updateRowHeight = ctrl => {\n      const rowNode = ctrl.getRowNode();\n      if (rowNode.rowHeightEstimated) {\n        const rowHeight = this.gos.getRowHeightForNode(rowNode);\n        rowNode.setRowHeight(rowHeight.height);\n        anyChange = true;\n      }\n    };\n    this.stickyTopRowCtrls.forEach(updateRowHeight);\n    this.stickyBottomRowCtrls.forEach(updateRowHeight);\n    return anyChange;\n  }\n};\n\n// community-modules/core/src/rendering/rowRenderer.ts\nvar RowRenderer = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowRenderer\";\n    this.destroyFuncsForColumnListeners = [];\n    // map of row ids to row objects. keeps track of which elements\n    // are rendered for which rows in the dom.\n    this.rowCtrlsByRowIndex = {};\n    this.zombieRowCtrls = {};\n    this.allRowCtrls = [];\n    this.topRowCtrls = [];\n    this.bottomRowCtrls = [];\n    // we only allow one refresh at a time, otherwise the internal memory structure here\n    // will get messed up. this can happen if the user has a cellRenderer, and inside the\n    // renderer they call an API method that results in another pass of the refresh,\n    // then it will be trying to draw rows in the middle of a refresh.\n    this.refreshInProgress = false;\n    this.dataFirstRenderedFired = false;\n    this.setupRangeSelectionListeners = () => {\n      const onRangeSelectionChanged = () => {\n        this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onRangeSelectionChanged());\n      };\n      const onColumnMovedPinnedVisible = () => {\n        this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.updateRangeBordersIfRangeCount());\n      };\n      const addRangeSelectionListeners = () => {\n        this.eventService.addEventListener(\"rangeSelectionChanged\", onRangeSelectionChanged);\n        this.eventService.addEventListener(\"columnMoved\", onColumnMovedPinnedVisible);\n        this.eventService.addEventListener(\"columnPinned\", onColumnMovedPinnedVisible);\n        this.eventService.addEventListener(\"columnVisible\", onColumnMovedPinnedVisible);\n      };\n      const removeRangeSelectionListeners = () => {\n        this.eventService.removeEventListener(\"rangeSelectionChanged\", onRangeSelectionChanged);\n        this.eventService.removeEventListener(\"columnMoved\", onColumnMovedPinnedVisible);\n        this.eventService.removeEventListener(\"columnPinned\", onColumnMovedPinnedVisible);\n        this.eventService.removeEventListener(\"columnVisible\", onColumnMovedPinnedVisible);\n      };\n      this.addDestroyFunc(() => removeRangeSelectionListeners());\n      this.addManagedPropertyListener(\"enableRangeSelection\", params => {\n        const isEnabled = params.currentValue;\n        if (isEnabled) {\n          addRangeSelectionListeners();\n        } else {\n          removeRangeSelectionListeners();\n        }\n      });\n      const rangeSelectionEnabled = this.gos.get(\"enableRangeSelection\");\n      if (rangeSelectionEnabled) {\n        addRangeSelectionListeners();\n      }\n    };\n  }\n  wireBeans(beans) {\n    this.animationFrameService = beans.animationFrameService;\n    this.paginationService = beans.paginationService;\n    this.pageBoundsService = beans.pageBoundsService;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.rowModel = beans.rowModel;\n    this.focusService = beans.focusService;\n    this.beans = beans;\n    this.rowContainerHeightService = beans.rowContainerHeightService;\n    this.ctrlsService = beans.ctrlsService;\n    this.environment = beans.environment;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady(p => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n      this.initialise();\n    });\n  }\n  initialise() {\n    this.addManagedEventListeners({\n      paginationChanged: this.onPageLoaded.bind(this),\n      pinnedRowDataChanged: this.onPinnedRowDataChanged.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      bodyScroll: this.onBodyScroll.bind(this),\n      bodyHeightChanged: this.redraw.bind(this)\n    });\n    this.addManagedPropertyListeners([\"domLayout\", \"embedFullWidthRows\"], () => this.onDomLayoutChanged());\n    this.addManagedPropertyListeners([\"suppressMaxRenderedRowRestriction\", \"rowBuffer\"], () => this.redraw());\n    this.addManagedPropertyListeners([\"suppressCellFocus\", \"getBusinessKeyForNode\", \"fullWidthCellRenderer\", \"fullWidthCellRendererParams\", \"rowStyle\", \"getRowStyle\", \"rowClass\", \"getRowClass\", \"rowClassRules\", \"suppressStickyTotalRow\", \"groupRowRenderer\", \"groupRowRendererParams\",\n    // maybe only needs to refresh FW rows...\n    \"loadingCellRenderer\", \"loadingCellRendererParams\", \"detailCellRenderer\", \"detailCellRendererParams\", \"enableRangeSelection\", \"enableCellTextSelection\"], () => this.redrawRows());\n    if (this.gos.isGroupRowsSticky()) {\n      const rowModelType = this.rowModel.getType();\n      if (rowModelType === \"clientSide\" || rowModelType === \"serverSide\") {\n        this.stickyRowFeature = this.createManagedBean(new StickyRowFeature(this.createRowCon.bind(this), this.destroyRowCtrls.bind(this)));\n      }\n    }\n    this.registerCellEventListeners();\n    this.initialiseCache();\n    this.printLayout = this.gos.isDomLayout(\"print\");\n    this.embedFullWidthRows = this.printLayout || this.gos.get(\"embedFullWidthRows\");\n    this.redrawAfterModelUpdate();\n  }\n  initialiseCache() {\n    if (this.gos.get(\"keepDetailRows\")) {\n      const countProp = this.getKeepDetailRowsCount();\n      const count = countProp != null ? countProp : 3;\n      this.cachedRowCtrls = new RowCtrlCache(count);\n    }\n  }\n  getKeepDetailRowsCount() {\n    return this.gos.get(\"keepDetailRowsCount\");\n  }\n  getStickyTopRowCtrls() {\n    if (!this.stickyRowFeature) {\n      return [];\n    }\n    return this.stickyRowFeature.getStickyTopRowCtrls();\n  }\n  getStickyBottomRowCtrls() {\n    if (!this.stickyRowFeature) {\n      return [];\n    }\n    return this.stickyRowFeature.getStickyBottomRowCtrls();\n  }\n  updateAllRowCtrls() {\n    const liveList = _getAllValuesInObject(this.rowCtrlsByRowIndex);\n    const zombieList = _getAllValuesInObject(this.zombieRowCtrls);\n    const cachedList = this.cachedRowCtrls ? this.cachedRowCtrls.getEntries() : [];\n    if (zombieList.length > 0 || cachedList.length > 0) {\n      this.allRowCtrls = [...liveList, ...zombieList, ...cachedList];\n    } else {\n      this.allRowCtrls = liveList;\n    }\n  }\n  onCellFocusChanged(event) {\n    this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onCellFocused(event));\n    this.getFullWidthRowCtrls().forEach(rowCtrl => rowCtrl.onFullWidthRowFocused(event));\n  }\n  // in a clean design, each cell would register for each of these events. however when scrolling, all the cells\n  // registering and de-registering for events is a performance bottleneck. so we register here once and inform\n  // all active cells.\n  registerCellEventListeners() {\n    this.addManagedEventListeners({\n      cellFocused: event => {\n        this.onCellFocusChanged(event);\n      },\n      cellFocusCleared: () => this.onCellFocusChanged(),\n      flashCells: event => {\n        this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onFlashCells(event));\n      },\n      columnHoverChanged: () => {\n        this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onColumnHover());\n      },\n      displayedColumnsChanged: () => {\n        this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onDisplayedColumnsChanged());\n      },\n      displayedColumnsWidthChanged: () => {\n        if (this.printLayout) {\n          this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onLeftChanged());\n        }\n      }\n    });\n    this.setupRangeSelectionListeners();\n    this.refreshListenersToColumnsForCellComps();\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.refreshListenersToColumnsForCellComps.bind(this)\n    });\n    this.addDestroyFunc(this.removeGridColumnListeners.bind(this));\n  }\n  // executes all functions in destroyFuncsForColumnListeners and then clears the list\n  removeGridColumnListeners() {\n    this.destroyFuncsForColumnListeners.forEach(func => func());\n    this.destroyFuncsForColumnListeners.length = 0;\n  }\n  // this function adds listeners onto all the grid columns, which are the column that we could have cellComps for.\n  // when the grid columns change, we add listeners again. in an ideal design, each CellComp would just register to\n  // the column it belongs to on creation, however this was a bottleneck with the number of cells, so do it here\n  // once instead.\n  refreshListenersToColumnsForCellComps() {\n    this.removeGridColumnListeners();\n    const cols = this.columnModel.getCols();\n    cols.forEach(col => {\n      const forEachCellWithThisCol = callback => {\n        this.getAllCellCtrls().forEach(cellCtrl => {\n          if (cellCtrl.getColumn() === col) {\n            callback(cellCtrl);\n          }\n        });\n      };\n      const leftChangedListener = () => {\n        forEachCellWithThisCol(cellCtrl => cellCtrl.onLeftChanged());\n      };\n      const widthChangedListener = () => {\n        forEachCellWithThisCol(cellCtrl => cellCtrl.onWidthChanged());\n      };\n      const firstRightPinnedChangedListener = () => {\n        forEachCellWithThisCol(cellCtrl => cellCtrl.onFirstRightPinnedChanged());\n      };\n      const lastLeftPinnedChangedListener = () => {\n        forEachCellWithThisCol(cellCtrl => cellCtrl.onLastLeftPinnedChanged());\n      };\n      const colDefChangedListener = () => {\n        forEachCellWithThisCol(cellCtrl => cellCtrl.onColDefChanged());\n      };\n      col.addEventListener(\"leftChanged\", leftChangedListener);\n      col.addEventListener(\"widthChanged\", widthChangedListener);\n      col.addEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\n      col.addEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\n      col.addEventListener(\"colDefChanged\", colDefChangedListener);\n      this.destroyFuncsForColumnListeners.push(() => {\n        col.removeEventListener(\"leftChanged\", leftChangedListener);\n        col.removeEventListener(\"widthChanged\", widthChangedListener);\n        col.removeEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\n        col.removeEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\n        col.removeEventListener(\"colDefChanged\", colDefChangedListener);\n      });\n    });\n  }\n  onDomLayoutChanged() {\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const embedFullWidthRows = printLayout || this.gos.get(\"embedFullWidthRows\");\n    const destroyRows = embedFullWidthRows !== this.embedFullWidthRows || this.printLayout !== printLayout;\n    this.printLayout = printLayout;\n    this.embedFullWidthRows = embedFullWidthRows;\n    if (destroyRows) {\n      this.redrawAfterModelUpdate({\n        domLayoutChanged: true\n      });\n    }\n  }\n  // for row models that have datasources, when we update the datasource, we need to force the rowRenderer\n  // to redraw all rows. otherwise the old rows from the old datasource will stay displayed.\n  datasourceChanged() {\n    this.firstRenderedRow = 0;\n    this.lastRenderedRow = -1;\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\n    this.removeRowCtrls(rowIndexesToRemove);\n  }\n  onPageLoaded(event) {\n    const params = {\n      recycleRows: event.keepRenderedRows,\n      animate: event.animate,\n      newData: event.newData,\n      newPage: event.newPage,\n      // because this is a model updated event (not pinned rows), we\n      // can skip updating the pinned rows. this is needed so that if user\n      // is doing transaction updates, the pinned rows are not getting constantly\n      // trashed - or editing cells in pinned rows are not refreshed and put into read mode\n      onlyBody: true\n    };\n    this.redrawAfterModelUpdate(params);\n  }\n  getAllCellsForColumn(column) {\n    const res = [];\n    this.getAllRowCtrls().forEach(rowCtrl => {\n      const eCell = rowCtrl.getCellElement(column);\n      if (eCell) {\n        res.push(eCell);\n      }\n    });\n    return res;\n  }\n  refreshFloatingRowComps() {\n    this.refreshFloatingRows(this.topRowCtrls, this.pinnedRowModel.getPinnedTopRowNodes());\n    this.refreshFloatingRows(this.bottomRowCtrls, this.pinnedRowModel.getPinnedBottomRowNodes());\n  }\n  getTopRowCtrls() {\n    return this.topRowCtrls;\n  }\n  getCentreRowCtrls() {\n    return this.allRowCtrls;\n  }\n  getBottomRowCtrls() {\n    return this.bottomRowCtrls;\n  }\n  /**\n   * Determines which row controllers need to be destroyed and re-created vs which ones can\n   * be re-used.\n   *\n   * This is operation is to pinned/floating rows as `this.recycleRows` is to normal/body rows.\n   *\n   * All `RowCtrl` instances in `rowCtrls` that don't correspond to `RowNode` instances in `rowNodes` are destroyed.\n   * All `RowNode` instances in `rowNodes` that don't correspond to `RowCtrl` instances in `rowCtrls` are created.\n   * All instances in `rowCtrls` must be in the same order as their corresponding nodes in `rowNodes`.\n   *\n   * @param rowCtrls The list of existing row controllers\n   * @param rowNodes The canonical list of row nodes that should have associated controllers\n   */\n  refreshFloatingRows(rowCtrls, rowNodes) {\n    const nodeMap = Object.fromEntries(rowNodes.map(node => [node.id, node]));\n    const rowCtrlMap = Object.fromEntries(rowCtrls.map(ctrl => [ctrl.getRowNode().id, ctrl]));\n    for (let i = 0; i < rowNodes.length; i++) {\n      const node = rowNodes[i];\n      const rowCtrl = rowCtrls[i];\n      if (rowCtrl && nodeMap[rowCtrl.getRowNode().id] === void 0) {\n        rowCtrl.destroyFirstPass();\n        rowCtrl.destroySecondPass();\n      }\n      if (node.id in rowCtrlMap) {\n        rowCtrls[i] = rowCtrlMap[node.id];\n        delete rowCtrlMap[node.id];\n      } else {\n        rowCtrls[i] = new RowCtrl(node, this.beans, false, false, this.printLayout);\n      }\n    }\n    rowCtrls.length = rowNodes.length;\n  }\n  onPinnedRowDataChanged() {\n    const params = {\n      recycleRows: true\n    };\n    this.redrawAfterModelUpdate(params);\n  }\n  redrawRow(rowNode, suppressEvent = false) {\n    if (rowNode.sticky) {\n      this.stickyRowFeature.refreshStickyNode(rowNode);\n    } else if (this.cachedRowCtrls?.has(rowNode)) {\n      this.cachedRowCtrls.removeRow(rowNode);\n      return;\n    } else {\n      const destroyAndRecreateCtrl = dataStruct => {\n        const ctrl = dataStruct[rowNode.rowIndex];\n        if (!ctrl) {\n          return;\n        }\n        if (ctrl.getRowNode() !== rowNode) {\n          return;\n        }\n        ctrl.destroyFirstPass();\n        ctrl.destroySecondPass();\n        dataStruct[rowNode.rowIndex] = this.createRowCon(rowNode, false, false);\n      };\n      switch (rowNode.rowPinned) {\n        case \"top\":\n          destroyAndRecreateCtrl(this.topRowCtrls);\n          break;\n        case \"bottom\":\n          destroyAndRecreateCtrl(this.bottomRowCtrls);\n          break;\n        default:\n          destroyAndRecreateCtrl(this.rowCtrlsByRowIndex);\n          this.updateAllRowCtrls();\n      }\n    }\n    if (!suppressEvent) {\n      this.dispatchDisplayedRowsChanged(false);\n    }\n  }\n  redrawRows(rowNodes) {\n    const partialRefresh = rowNodes != null;\n    if (partialRefresh) {\n      rowNodes?.forEach(node => this.redrawRow(node, true));\n      this.dispatchDisplayedRowsChanged(false);\n      return;\n    }\n    this.redrawAfterModelUpdate();\n  }\n  getCellToRestoreFocusToAfterRefresh(params) {\n    const focusedCell = params?.suppressKeepFocus ? null : this.focusService.getFocusCellToUseAfterRefresh();\n    if (focusedCell == null) {\n      return null;\n    }\n    const activeElement = this.gos.getActiveDomElement();\n    const cellDomData = this.gos.getDomData(activeElement, CellCtrl.DOM_DATA_KEY_CELL_CTRL);\n    const rowDomData = this.gos.getDomData(activeElement, RowCtrl.DOM_DATA_KEY_ROW_CTRL);\n    const gridElementFocused = cellDomData || rowDomData;\n    return gridElementFocused ? focusedCell : null;\n  }\n  // gets called from:\n  // +) initialisation (in registerGridComp) params = null\n  // +) onDomLayoutChanged, params = null\n  // +) onPageLoaded, recycleRows, animate, newData, newPage from event, onlyBody=true\n  // +) onPinnedRowDataChanged, recycleRows = true\n  // +) redrawRows (from Grid API), recycleRows = true/false\n  redrawAfterModelUpdate(params = {}) {\n    this.getLockOnRefresh();\n    const focusedCell = this.getCellToRestoreFocusToAfterRefresh(params);\n    this.updateContainerHeights();\n    this.scrollToTopIfNewData(params);\n    const recycleRows = !params.domLayoutChanged && !!params.recycleRows;\n    const animate = params.animate && this.gos.isAnimateRows();\n    const rowsToRecycle = recycleRows ? this.getRowsToRecycle() : null;\n    if (!recycleRows) {\n      this.removeAllRowComps();\n    }\n    this.workOutFirstAndLastRowsToRender();\n    if (this.stickyRowFeature) {\n      this.stickyRowFeature.checkStickyRows();\n      const extraHeight = this.stickyRowFeature.getExtraTopHeight() + this.stickyRowFeature.getExtraBottomHeight();\n      if (extraHeight) {\n        this.updateContainerHeights(extraHeight);\n      }\n    }\n    this.recycleRows(rowsToRecycle, animate);\n    this.gridBodyCtrl.updateRowCount();\n    if (!params.onlyBody) {\n      this.refreshFloatingRowComps();\n    }\n    this.dispatchDisplayedRowsChanged();\n    if (focusedCell != null) {\n      this.restoreFocusedCell(focusedCell);\n    }\n    this.releaseLockOnRefresh();\n  }\n  scrollToTopIfNewData(params) {\n    const scrollToTop = params.newData || params.newPage;\n    const suppressScrollToTop = this.gos.get(\"suppressScrollOnNewData\");\n    if (scrollToTop && !suppressScrollToTop) {\n      this.gridBodyCtrl.getScrollFeature().scrollToTop();\n      this.stickyRowFeature?.resetOffsets();\n    }\n  }\n  updateContainerHeights(additionalHeight = 0) {\n    if (this.printLayout) {\n      this.rowContainerHeightService.setModelHeight(null);\n      return;\n    }\n    let containerHeight = this.pageBoundsService.getCurrentPageHeight();\n    if (containerHeight === 0) {\n      containerHeight = 1;\n    }\n    this.rowContainerHeightService.setModelHeight(containerHeight + additionalHeight);\n  }\n  getLockOnRefresh() {\n    if (this.refreshInProgress) {\n      const frameworkMessage = this.frameworkOverrides.getLockOnRefreshError?.() ?? \"\";\n      throw new Error(\"AG Grid: cannot get grid to draw rows when it is in the middle of drawing rows. Your code probably called a grid API method while the grid was in the render stage. To overcome this, put the API call into a timeout, e.g. instead of api.redrawRows(), call setTimeout(function() { api.redrawRows(); }, 0). To see what part of your code that caused the refresh check this stacktrace.\" + frameworkMessage);\n    }\n    this.refreshInProgress = true;\n    this.frameworkOverrides.getLockOnRefresh?.();\n  }\n  releaseLockOnRefresh() {\n    this.refreshInProgress = false;\n    this.frameworkOverrides.releaseLockOnRefresh?.();\n  }\n  isRefreshInProgress() {\n    return this.refreshInProgress;\n  }\n  // sets the focus to the provided cell, if the cell is provided. this way, the user can call refresh without\n  // worry about the focus been lost. this is important when the user is using keyboard navigation to do edits\n  // and the cellEditor is calling 'refresh' to get other cells to update (as other cells might depend on the\n  // edited cell).\n  restoreFocusedCell(cellPosition) {\n    if (!cellPosition) {\n      return;\n    }\n    setTimeout(() => {\n      this.focusService.setRestoreFocusedCell(cellPosition);\n      this.onCellFocusChanged(this.gos.addGridCommonParams({\n        rowIndex: cellPosition.rowIndex,\n        column: cellPosition.column,\n        rowPinned: cellPosition.rowPinned,\n        forceBrowserFocus: true,\n        preventScrollOnBrowserFocus: true,\n        type: \"cellFocused\"\n      }));\n    });\n  }\n  stopEditing(cancel = false) {\n    this.getAllRowCtrls().forEach(rowCtrl => {\n      rowCtrl.stopEditing(cancel);\n    });\n  }\n  getAllCellCtrls() {\n    const res = [];\n    const rowCtrls = this.getAllRowCtrls();\n    const rowCtrlsLength = rowCtrls.length;\n    for (let i = 0; i < rowCtrlsLength; i++) {\n      const cellCtrls = rowCtrls[i].getAllCellCtrls();\n      const cellCtrlsLength = cellCtrls.length;\n      for (let j = 0; j < cellCtrlsLength; j++) {\n        res.push(cellCtrls[j]);\n      }\n    }\n    return res;\n  }\n  getAllRowCtrls() {\n    const stickyTopRowCtrls = this.stickyRowFeature && this.stickyRowFeature.getStickyTopRowCtrls() || [];\n    const stickyBottomRowCtrls = this.stickyRowFeature && this.stickyRowFeature.getStickyBottomRowCtrls() || [];\n    const res = [...this.topRowCtrls, ...this.bottomRowCtrls, ...stickyTopRowCtrls, ...stickyBottomRowCtrls];\n    for (const key in this.rowCtrlsByRowIndex) {\n      res.push(this.rowCtrlsByRowIndex[key]);\n    }\n    return res;\n  }\n  addRenderedRowListener(eventName, rowIndex, callback) {\n    const rowComp = this.rowCtrlsByRowIndex[rowIndex];\n    if (rowComp) {\n      rowComp.addEventListener(eventName, callback);\n    }\n  }\n  flashCells(params = {}) {\n    this.getCellCtrls(params.rowNodes, params.columns).forEach(cellCtrl => cellCtrl.flashCell(params));\n  }\n  refreshCells(params = {}) {\n    const refreshCellParams = {\n      forceRefresh: params.force,\n      newData: false,\n      suppressFlash: params.suppressFlash\n    };\n    for (const cellCtrl of this.getCellCtrls(params.rowNodes, params.columns)) {\n      cellCtrl.refreshOrDestroyCell(refreshCellParams);\n    }\n    this.refreshFullWidth(params.rowNodes);\n  }\n  refreshFullWidth(rowNodes) {\n    if (!rowNodes) {\n      return;\n    }\n    let cellFocused = null;\n    if (this.stickyRowFeature && _browserSupportsPreventScroll()) {\n      cellFocused = this.getCellToRestoreFocusToAfterRefresh() || null;\n    }\n    for (const rowCtrl of this.getRowCtrls(rowNodes)) {\n      if (!rowCtrl.isFullWidth()) {\n        continue;\n      }\n      const refreshed = rowCtrl.refreshFullWidth();\n      if (!refreshed) {\n        this.redrawRow(rowCtrl.getRowNode(), true);\n      }\n    }\n    this.dispatchDisplayedRowsChanged(false);\n    if (cellFocused) {\n      this.restoreFocusedCell(cellFocused);\n    }\n  }\n  getCellRendererInstances(params) {\n    const cellRenderers = this.getCellCtrls(params.rowNodes, params.columns).map(cellCtrl => cellCtrl.getCellRenderer()).filter(renderer => renderer != null);\n    if (params.columns?.length) {\n      return cellRenderers;\n    }\n    const fullWidthRenderers = [];\n    const rowIdMap = this.mapRowNodes(params.rowNodes);\n    this.getAllRowCtrls().forEach(rowCtrl => {\n      if (rowIdMap && !this.isRowInMap(rowCtrl.getRowNode(), rowIdMap)) {\n        return;\n      }\n      if (!rowCtrl.isFullWidth()) {\n        return;\n      }\n      const renderers = rowCtrl.getFullWidthCellRenderers();\n      for (let i = 0; i < renderers.length; i++) {\n        const renderer = renderers[i];\n        if (renderer != null) {\n          fullWidthRenderers.push(renderer);\n        }\n      }\n    });\n    return [...fullWidthRenderers, ...cellRenderers];\n  }\n  getCellEditorInstances(params) {\n    const res = [];\n    this.getCellCtrls(params.rowNodes, params.columns).forEach(cellCtrl => {\n      const cellEditor = cellCtrl.getCellEditor();\n      if (cellEditor) {\n        res.push(cellEditor);\n      }\n    });\n    return res;\n  }\n  getEditingCells() {\n    const res = [];\n    this.getAllCellCtrls().forEach(cellCtrl => {\n      if (cellCtrl.isEditing()) {\n        const cellPosition = cellCtrl.getCellPosition();\n        res.push(cellPosition);\n      }\n    });\n    return res;\n  }\n  mapRowNodes(rowNodes) {\n    if (!rowNodes) {\n      return;\n    }\n    const res = {\n      top: {},\n      bottom: {},\n      normal: {}\n    };\n    rowNodes.forEach(rowNode => {\n      const id = rowNode.id;\n      switch (rowNode.rowPinned) {\n        case \"top\":\n          res.top[id] = rowNode;\n          break;\n        case \"bottom\":\n          res.bottom[id] = rowNode;\n          break;\n        default:\n          res.normal[id] = rowNode;\n          break;\n      }\n    });\n    return res;\n  }\n  isRowInMap(rowNode, rowIdsMap) {\n    const id = rowNode.id;\n    const floating = rowNode.rowPinned;\n    switch (floating) {\n      case \"top\":\n        return rowIdsMap.top[id] != null;\n      case \"bottom\":\n        return rowIdsMap.bottom[id] != null;\n      default:\n        return rowIdsMap.normal[id] != null;\n    }\n  }\n  /**\n   * @param rowNodes if provided, returns the RowCtrls for the provided rowNodes. otherwise returns all RowCtrls.\n   */\n  getRowCtrls(rowNodes) {\n    const rowIdsMap = this.mapRowNodes(rowNodes);\n    const allRowCtrls = this.getAllRowCtrls();\n    if (!rowNodes || !rowIdsMap) {\n      return allRowCtrls;\n    }\n    return allRowCtrls.filter(rowCtrl => {\n      const rowNode = rowCtrl.getRowNode();\n      return this.isRowInMap(rowNode, rowIdsMap);\n    });\n  }\n  // returns CellCtrl's that match the provided rowNodes and columns. eg if one row node\n  // and two columns provided, that identifies 4 cells, so 4 CellCtrl's returned.\n  getCellCtrls(rowNodes, columns) {\n    let colIdsMap;\n    if (_exists(columns)) {\n      colIdsMap = {};\n      columns.forEach(colKey => {\n        const column = this.columnModel.getCol(colKey);\n        if (_exists(column)) {\n          colIdsMap[column.getId()] = true;\n        }\n      });\n    }\n    const res = [];\n    this.getRowCtrls(rowNodes).forEach(rowCtrl => {\n      rowCtrl.getAllCellCtrls().forEach(cellCtrl => {\n        const colId = cellCtrl.getColumn().getId();\n        const excludeColFromRefresh = colIdsMap && !colIdsMap[colId];\n        if (excludeColFromRefresh) {\n          return;\n        }\n        res.push(cellCtrl);\n      });\n    });\n    return res;\n  }\n  destroy() {\n    this.removeAllRowComps();\n    super.destroy();\n  }\n  removeAllRowComps() {\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\n    this.removeRowCtrls(rowIndexesToRemove);\n    if (this.stickyRowFeature) {\n      this.stickyRowFeature.destroyStickyCtrls();\n    }\n  }\n  getRowsToRecycle() {\n    const stubNodeIndexes = [];\n    _iterateObject(this.rowCtrlsByRowIndex, (index, rowCtrl) => {\n      const stubNode = rowCtrl.getRowNode().id == null;\n      if (stubNode) {\n        stubNodeIndexes.push(index);\n      }\n    });\n    this.removeRowCtrls(stubNodeIndexes);\n    const ctrlsByIdMap = {};\n    _iterateObject(this.rowCtrlsByRowIndex, (_, rowCtrl) => {\n      const rowNode = rowCtrl.getRowNode();\n      ctrlsByIdMap[rowNode.id] = rowCtrl;\n    });\n    this.rowCtrlsByRowIndex = {};\n    return ctrlsByIdMap;\n  }\n  // takes array of row indexes\n  removeRowCtrls(rowsToRemove, suppressAnimation = false) {\n    rowsToRemove.forEach(indexToRemove => {\n      const rowCtrl = this.rowCtrlsByRowIndex[indexToRemove];\n      if (rowCtrl) {\n        rowCtrl.destroyFirstPass(suppressAnimation);\n        rowCtrl.destroySecondPass();\n      }\n      delete this.rowCtrlsByRowIndex[indexToRemove];\n    });\n  }\n  onBodyScroll(e) {\n    if (e.direction !== \"vertical\") {\n      return;\n    }\n    this.redraw({\n      afterScroll: true\n    });\n  }\n  // gets called when rows don't change, but viewport does, so after:\n  // 1) height of grid body changes, ie number of displayed rows has changed\n  // 2) grid scrolled to new position\n  // 3) ensure index visible (which is a scroll)\n  redraw(params = {}) {\n    const {\n      afterScroll\n    } = params;\n    let cellFocused;\n    if (this.stickyRowFeature && _browserSupportsPreventScroll()) {\n      cellFocused = this.getCellToRestoreFocusToAfterRefresh() || void 0;\n    }\n    const oldFirstRow = this.firstRenderedRow;\n    const oldLastRow = this.lastRenderedRow;\n    this.workOutFirstAndLastRowsToRender();\n    let hasStickyRowChanges = false;\n    if (this.stickyRowFeature) {\n      hasStickyRowChanges = this.stickyRowFeature.checkStickyRows();\n      const extraHeight = this.stickyRowFeature.getExtraTopHeight() + this.stickyRowFeature.getExtraBottomHeight();\n      if (extraHeight) {\n        this.updateContainerHeights(extraHeight);\n      }\n    }\n    const rangeChanged = this.firstRenderedRow !== oldFirstRow || this.lastRenderedRow !== oldLastRow;\n    if (afterScroll && !hasStickyRowChanges && !rangeChanged) {\n      return;\n    }\n    this.getLockOnRefresh();\n    this.recycleRows(null, false, afterScroll);\n    this.releaseLockOnRefresh();\n    this.dispatchDisplayedRowsChanged(afterScroll && !hasStickyRowChanges);\n    if (cellFocused != null) {\n      const newFocusedCell = this.getCellToRestoreFocusToAfterRefresh();\n      if (cellFocused != null && newFocusedCell == null) {\n        this.animationFrameService.flushAllFrames();\n        this.restoreFocusedCell(cellFocused);\n      }\n    }\n  }\n  removeRowCompsNotToDraw(indexesToDraw, suppressAnimation) {\n    const indexesToDrawMap = {};\n    indexesToDraw.forEach(index => indexesToDrawMap[index] = true);\n    const existingIndexes = Object.keys(this.rowCtrlsByRowIndex);\n    const indexesNotToDraw = existingIndexes.filter(index => !indexesToDrawMap[index]);\n    this.removeRowCtrls(indexesNotToDraw, suppressAnimation);\n  }\n  calculateIndexesToDraw(rowsToRecycle) {\n    const indexesToDraw = _createArrayOfNumbers(this.firstRenderedRow, this.lastRenderedRow);\n    const checkRowToDraw = (indexStr, rowComp) => {\n      const index = rowComp.getRowNode().rowIndex;\n      if (index == null) {\n        return;\n      }\n      if (index < this.firstRenderedRow || index > this.lastRenderedRow) {\n        if (this.doNotUnVirtualiseRow(rowComp)) {\n          indexesToDraw.push(index);\n        }\n      }\n    };\n    _iterateObject(this.rowCtrlsByRowIndex, checkRowToDraw);\n    _iterateObject(rowsToRecycle, checkRowToDraw);\n    indexesToDraw.sort((a, b) => a - b);\n    const ret = [];\n    for (let i = 0; i < indexesToDraw.length; i++) {\n      const currRow = indexesToDraw[i];\n      const rowNode = this.rowModel.getRow(currRow);\n      if (rowNode && !rowNode.sticky) {\n        ret.push(currRow);\n      }\n    }\n    return ret;\n  }\n  recycleRows(rowsToRecycle, animate = false, afterScroll = false) {\n    const indexesToDraw = this.calculateIndexesToDraw(rowsToRecycle);\n    if (this.printLayout || afterScroll) {\n      animate = false;\n    }\n    this.removeRowCompsNotToDraw(indexesToDraw, !animate);\n    const rowCtrls = [];\n    indexesToDraw.forEach(rowIndex => {\n      const rowCtrl = this.createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll);\n      if (_exists(rowCtrl)) {\n        rowCtrls.push(rowCtrl);\n      }\n    });\n    if (rowsToRecycle) {\n      const useAnimationFrame = afterScroll && !this.gos.get(\"suppressAnimationFrame\") && !this.printLayout;\n      if (useAnimationFrame) {\n        this.beans.animationFrameService.addDestroyTask(() => {\n          this.destroyRowCtrls(rowsToRecycle, animate);\n          this.updateAllRowCtrls();\n          this.dispatchDisplayedRowsChanged();\n        });\n      } else {\n        this.destroyRowCtrls(rowsToRecycle, animate);\n      }\n    }\n    this.updateAllRowCtrls();\n  }\n  dispatchDisplayedRowsChanged(afterScroll = false) {\n    const event = {\n      type: \"displayedRowsChanged\",\n      afterScroll\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  onDisplayedColumnsChanged() {\n    const pinningLeft = this.visibleColsService.isPinningLeft();\n    const pinningRight = this.visibleColsService.isPinningRight();\n    const atLeastOneChanged = this.pinningLeft !== pinningLeft || pinningRight !== this.pinningRight;\n    if (atLeastOneChanged) {\n      this.pinningLeft = pinningLeft;\n      this.pinningRight = pinningRight;\n      if (this.embedFullWidthRows) {\n        this.redrawFullWidthEmbeddedRows();\n      }\n    }\n  }\n  // when embedding, what gets showed in each section depends on what is pinned. eg if embedding group expand / collapse,\n  // then it should go into the pinned left area if pinning left, or the center area if not pinning.\n  redrawFullWidthEmbeddedRows() {\n    const rowsToRemove = [];\n    this.getFullWidthRowCtrls().forEach(fullWidthCtrl => {\n      const rowIndex = fullWidthCtrl.getRowNode().rowIndex;\n      rowsToRemove.push(rowIndex.toString());\n    });\n    this.refreshFloatingRowComps();\n    this.removeRowCtrls(rowsToRemove);\n    this.redraw({\n      afterScroll: true\n    });\n  }\n  getFullWidthRowCtrls(rowNodes) {\n    const rowNodesMap = this.mapRowNodes(rowNodes);\n    return this.getAllRowCtrls().filter(rowCtrl => {\n      if (!rowCtrl.isFullWidth()) {\n        return false;\n      }\n      const rowNode = rowCtrl.getRowNode();\n      if (rowNodesMap != null && !this.isRowInMap(rowNode, rowNodesMap)) {\n        return false;\n      }\n      return true;\n    });\n  }\n  createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll) {\n    let rowNode;\n    let rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\n    if (!rowCtrl) {\n      rowNode = this.rowModel.getRow(rowIndex);\n      if (_exists(rowNode) && _exists(rowsToRecycle) && rowsToRecycle[rowNode.id] && rowNode.alreadyRendered) {\n        rowCtrl = rowsToRecycle[rowNode.id];\n        rowsToRecycle[rowNode.id] = null;\n      }\n    }\n    const creatingNewRowCtrl = !rowCtrl;\n    if (creatingNewRowCtrl) {\n      if (!rowNode) {\n        rowNode = this.rowModel.getRow(rowIndex);\n      }\n      if (_exists(rowNode)) {\n        rowCtrl = this.createRowCon(rowNode, animate, afterScroll);\n      } else {\n        return;\n      }\n    }\n    if (rowNode) {\n      rowNode.alreadyRendered = true;\n    }\n    this.rowCtrlsByRowIndex[rowIndex] = rowCtrl;\n    return rowCtrl;\n  }\n  destroyRowCtrls(rowCtrlsMap, animate) {\n    const executeInAWhileFuncs = [];\n    _iterateObject(rowCtrlsMap, (nodeId, rowCtrl) => {\n      if (!rowCtrl) {\n        return;\n      }\n      if (this.cachedRowCtrls && rowCtrl.isCacheable()) {\n        this.cachedRowCtrls.addRow(rowCtrl);\n        return;\n      }\n      rowCtrl.destroyFirstPass(!animate);\n      if (animate) {\n        this.zombieRowCtrls[rowCtrl.getInstanceId()] = rowCtrl;\n        executeInAWhileFuncs.push(() => {\n          rowCtrl.destroySecondPass();\n          delete this.zombieRowCtrls[rowCtrl.getInstanceId()];\n        });\n      } else {\n        rowCtrl.destroySecondPass();\n      }\n    });\n    if (animate) {\n      executeInAWhileFuncs.push(() => {\n        this.updateAllRowCtrls();\n        this.dispatchDisplayedRowsChanged();\n      });\n      _executeInAWhile(executeInAWhileFuncs);\n    }\n  }\n  getRowBuffer() {\n    return this.gos.get(\"rowBuffer\");\n  }\n  getRowBufferInPixels() {\n    const rowsToBuffer = this.getRowBuffer();\n    const defaultRowHeight = this.gos.getRowHeightAsNumber();\n    return rowsToBuffer * defaultRowHeight;\n  }\n  workOutFirstAndLastRowsToRender() {\n    this.rowContainerHeightService.updateOffset();\n    let newFirst;\n    let newLast;\n    if (!this.rowModel.isRowsToRender()) {\n      newFirst = 0;\n      newLast = -1;\n    } else if (this.printLayout) {\n      this.environment.refreshRowHeightVariable();\n      newFirst = this.pageBoundsService.getFirstRow();\n      newLast = this.pageBoundsService.getLastRow();\n    } else {\n      const bufferPixels = this.getRowBufferInPixels();\n      const gridBodyCtrl = this.ctrlsService.getGridBodyCtrl();\n      const suppressRowVirtualisation = this.gos.get(\"suppressRowVirtualisation\");\n      let rowHeightsChanged = false;\n      let firstPixel;\n      let lastPixel;\n      do {\n        const paginationOffset = this.pageBoundsService.getPixelOffset();\n        const {\n          pageFirstPixel,\n          pageLastPixel\n        } = this.pageBoundsService.getCurrentPagePixelRange();\n        const divStretchOffset = this.rowContainerHeightService.getDivStretchOffset();\n        const bodyVRange = gridBodyCtrl.getScrollFeature().getVScrollPosition();\n        const bodyTopPixel = bodyVRange.top;\n        const bodyBottomPixel = bodyVRange.bottom;\n        if (suppressRowVirtualisation) {\n          firstPixel = pageFirstPixel + divStretchOffset;\n          lastPixel = pageLastPixel + divStretchOffset;\n        } else {\n          firstPixel = Math.max(bodyTopPixel + paginationOffset - bufferPixels, pageFirstPixel) + divStretchOffset;\n          lastPixel = Math.min(bodyBottomPixel + paginationOffset + bufferPixels, pageLastPixel) + divStretchOffset;\n        }\n        this.firstVisibleVPixel = Math.max(bodyTopPixel + paginationOffset, pageFirstPixel) + divStretchOffset;\n        this.lastVisibleVPixel = Math.min(bodyBottomPixel + paginationOffset, pageLastPixel) + divStretchOffset;\n        rowHeightsChanged = this.ensureAllRowsInRangeHaveHeightsCalculated(firstPixel, lastPixel);\n      } while (rowHeightsChanged);\n      let firstRowIndex = this.rowModel.getRowIndexAtPixel(firstPixel);\n      let lastRowIndex = this.rowModel.getRowIndexAtPixel(lastPixel);\n      const pageFirstRow = this.pageBoundsService.getFirstRow();\n      const pageLastRow = this.pageBoundsService.getLastRow();\n      if (firstRowIndex < pageFirstRow) {\n        firstRowIndex = pageFirstRow;\n      }\n      if (lastRowIndex > pageLastRow) {\n        lastRowIndex = pageLastRow;\n      }\n      newFirst = firstRowIndex;\n      newLast = lastRowIndex;\n    }\n    const rowLayoutNormal = this.gos.isDomLayout(\"normal\");\n    const suppressRowCountRestriction = this.gos.get(\"suppressMaxRenderedRowRestriction\");\n    const rowBufferMaxSize = Math.max(this.getRowBuffer(), 500);\n    if (rowLayoutNormal && !suppressRowCountRestriction) {\n      if (newLast - newFirst > rowBufferMaxSize) {\n        newLast = newFirst + rowBufferMaxSize;\n      }\n    }\n    const firstDiffers = newFirst !== this.firstRenderedRow;\n    const lastDiffers = newLast !== this.lastRenderedRow;\n    if (firstDiffers || lastDiffers) {\n      this.firstRenderedRow = newFirst;\n      this.lastRenderedRow = newLast;\n      const event = {\n        type: \"viewportChanged\",\n        firstRow: newFirst,\n        lastRow: newLast\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  /**\n   * This event will only be fired once, and is queued until after the browser next renders.\n   * This allows us to fire an event during the start of the render cycle, when we first see data being rendered\n   * but not execute the event until all of the data has finished being rendered to the dom.\n   */\n  dispatchFirstDataRenderedEvent() {\n    if (this.dataFirstRenderedFired) {\n      return;\n    }\n    this.dataFirstRenderedFired = true;\n    const event = {\n      type: \"firstDataRendered\",\n      firstRow: this.firstRenderedRow,\n      lastRow: this.lastRenderedRow\n    };\n    window.requestAnimationFrame(() => {\n      this.beans.eventService.dispatchEvent(event);\n    });\n  }\n  ensureAllRowsInRangeHaveHeightsCalculated(topPixel, bottomPixel) {\n    const pinnedRowHeightsChanged = this.pinnedRowModel?.ensureRowHeightsValid();\n    const stickyHeightsChanged = this.stickyRowFeature?.ensureRowHeightsValid();\n    const rowModelHeightsChanged = this.rowModel.ensureRowHeightsValid(topPixel, bottomPixel, this.pageBoundsService.getFirstRow(), this.pageBoundsService.getLastRow());\n    if (rowModelHeightsChanged || stickyHeightsChanged) {\n      this.eventService.dispatchEvent({\n        type: \"recalculateRowBounds\"\n      });\n    }\n    if (stickyHeightsChanged || rowModelHeightsChanged || pinnedRowHeightsChanged) {\n      this.updateContainerHeights();\n      return true;\n    }\n    return false;\n  }\n  getFirstVisibleVerticalPixel() {\n    return this.firstVisibleVPixel;\n  }\n  getLastVisibleVerticalPixel() {\n    return this.lastVisibleVPixel;\n  }\n  getFirstVirtualRenderedRow() {\n    return this.firstRenderedRow;\n  }\n  getLastVirtualRenderedRow() {\n    return this.lastRenderedRow;\n  }\n  // check that none of the rows to remove are editing or focused as:\n  // a) if editing, we want to keep them, otherwise the user will loose the context of the edit,\n  //    eg user starts editing, enters some text, then scrolls down and then up, next time row rendered\n  //    the edit is reset - so we want to keep it rendered.\n  // b) if focused, we want ot keep keyboard focus, so if user ctrl+c, it goes to clipboard,\n  //    otherwise the user can range select and drag (with focus cell going out of the viewport)\n  //    and then ctrl+c, nothing will happen if cell is removed from dom.\n  // c) if detail record of master detail, as users complained that the context of detail rows\n  //    was getting lost when detail row out of view. eg user expands to show detail row,\n  //    then manipulates the detail panel (eg sorts the detail grid), then context is lost\n  //    after detail panel is scrolled out of / into view.\n  doNotUnVirtualiseRow(rowComp) {\n    const REMOVE_ROW = false;\n    const KEEP_ROW = true;\n    const rowNode = rowComp.getRowNode();\n    const rowHasFocus = this.focusService.isRowNodeFocused(rowNode);\n    const rowIsEditing = rowComp.isEditing();\n    const rowIsDetail = rowNode.detail;\n    const mightWantToKeepRow = rowHasFocus || rowIsEditing || rowIsDetail;\n    if (!mightWantToKeepRow) {\n      return REMOVE_ROW;\n    }\n    const rowNodePresent = this.isRowPresent(rowNode);\n    return rowNodePresent ? KEEP_ROW : REMOVE_ROW;\n  }\n  isRowPresent(rowNode) {\n    if (!this.rowModel.isRowPresent(rowNode)) {\n      return false;\n    }\n    return this.paginationService ? this.paginationService.isRowPresent(rowNode) : true;\n  }\n  createRowCon(rowNode, animate, afterScroll) {\n    const rowCtrlFromCache = this.cachedRowCtrls ? this.cachedRowCtrls.getRow(rowNode) : null;\n    if (rowCtrlFromCache) {\n      return rowCtrlFromCache;\n    }\n    const suppressAnimationFrame = this.gos.get(\"suppressAnimationFrame\");\n    const useAnimationFrameForCreate = afterScroll && !suppressAnimationFrame && !this.printLayout;\n    const res = new RowCtrl(rowNode, this.beans, animate, useAnimationFrameForCreate, this.printLayout);\n    return res;\n  }\n  getRenderedNodes() {\n    const renderedRows = this.rowCtrlsByRowIndex;\n    return Object.values(renderedRows).map(rowCtrl => rowCtrl.getRowNode());\n  }\n  getRowByPosition(rowPosition) {\n    let rowCtrl;\n    const {\n      rowIndex\n    } = rowPosition;\n    switch (rowPosition.rowPinned) {\n      case \"top\":\n        rowCtrl = this.topRowCtrls[rowIndex];\n        break;\n      case \"bottom\":\n        rowCtrl = this.bottomRowCtrls[rowIndex];\n        break;\n      default:\n        rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\n        if (!rowCtrl) {\n          rowCtrl = this.getStickyTopRowCtrls().find(ctrl => ctrl.getRowNode().rowIndex === rowIndex) || null;\n          if (!rowCtrl) {\n            rowCtrl = this.getStickyBottomRowCtrls().find(ctrl => ctrl.getRowNode().rowIndex === rowIndex) || null;\n          }\n        }\n        break;\n    }\n    return rowCtrl;\n  }\n  // returns true if any row between startIndex and endIndex is rendered. used by\n  // SSRM or IRM, as they don't want to purge visible blocks from cache.\n  isRangeInRenderedViewport(startIndex, endIndex) {\n    const parentClosed = startIndex == null || endIndex == null;\n    if (parentClosed) {\n      return false;\n    }\n    const blockAfterViewport = startIndex > this.lastRenderedRow;\n    const blockBeforeViewport = endIndex < this.firstRenderedRow;\n    const blockInsideViewport = !blockBeforeViewport && !blockAfterViewport;\n    return blockInsideViewport;\n  }\n};\nvar RowCtrlCache = class {\n  constructor(maxCount) {\n    // map for fast access\n    this.entriesMap = {};\n    // list for keeping order\n    this.entriesList = [];\n    this.maxCount = maxCount;\n  }\n  addRow(rowCtrl) {\n    this.entriesMap[rowCtrl.getRowNode().id] = rowCtrl;\n    this.entriesList.push(rowCtrl);\n    rowCtrl.setCached(true);\n    if (this.entriesList.length > this.maxCount) {\n      const rowCtrlToDestroy = this.entriesList[0];\n      rowCtrlToDestroy.destroyFirstPass();\n      rowCtrlToDestroy.destroySecondPass();\n      this.removeFromCache(rowCtrlToDestroy);\n    }\n  }\n  getRow(rowNode) {\n    if (rowNode == null || rowNode.id == null) {\n      return null;\n    }\n    const res = this.entriesMap[rowNode.id];\n    if (!res) {\n      return null;\n    }\n    this.removeFromCache(res);\n    res.setCached(false);\n    const rowNodeMismatch = res.getRowNode() != rowNode;\n    return rowNodeMismatch ? null : res;\n  }\n  has(rowNode) {\n    return this.entriesMap[rowNode.id] != null;\n  }\n  removeRow(rowNode) {\n    const rowNodeId = rowNode.id;\n    const ctrl = this.entriesMap[rowNodeId];\n    delete this.entriesMap[rowNodeId];\n    _removeFromArray(this.entriesList, ctrl);\n  }\n  removeFromCache(rowCtrl) {\n    const rowNodeId = rowCtrl.getRowNode().id;\n    delete this.entriesMap[rowNodeId];\n    _removeFromArray(this.entriesList, rowCtrl);\n  }\n  getEntries() {\n    return this.entriesList;\n  }\n};\n\n// community-modules/core/src/pinnedRowModel/pinnedRowModel.ts\nvar PinnedRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pinnedRowModel\";\n    this.nextId = 0;\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.setPinnedTopRowData();\n    this.setPinnedBottomRowData();\n    this.addManagedPropertyListener(\"pinnedTopRowData\", () => this.setPinnedTopRowData());\n    this.addManagedPropertyListener(\"pinnedBottomRowData\", () => this.setPinnedBottomRowData());\n    this.addManagedEventListeners({\n      gridStylesChanged: this.onGridStylesChanges.bind(this)\n    });\n  }\n  isEmpty(floating) {\n    const rows = floating === \"top\" ? this.pinnedTopRows : this.pinnedBottomRows;\n    return _missingOrEmpty(rows);\n  }\n  isRowsToRender(floating) {\n    return !this.isEmpty(floating);\n  }\n  getRowAtPixel(pixel, floating) {\n    const rows = floating === \"top\" ? this.pinnedTopRows : this.pinnedBottomRows;\n    if (_missingOrEmpty(rows)) {\n      return 0;\n    }\n    for (let i = 0; i < rows.length; i++) {\n      const rowNode = rows[i];\n      const rowTopPixel = rowNode.rowTop + rowNode.rowHeight - 1;\n      if (rowTopPixel >= pixel) {\n        return i;\n      }\n    }\n    return rows.length - 1;\n  }\n  onGridStylesChanges(e) {\n    if (e.rowHeightChanged) {\n      const estimateRowHeight = rowNode => {\n        rowNode.setRowHeight(rowNode.rowHeight, true);\n      };\n      this.pinnedBottomRows.forEach(estimateRowHeight);\n      this.pinnedTopRows.forEach(estimateRowHeight);\n    }\n  }\n  ensureRowHeightsValid() {\n    let anyChange = false;\n    let rowTop = 0;\n    const updateRowHeight = rowNode => {\n      if (rowNode.rowHeightEstimated) {\n        const rowHeight = this.gos.getRowHeightForNode(rowNode);\n        rowNode.setRowTop(rowTop);\n        rowNode.setRowHeight(rowHeight.height);\n        rowTop += rowHeight.height;\n        anyChange = true;\n      }\n    };\n    this.pinnedBottomRows?.forEach(updateRowHeight);\n    rowTop = 0;\n    this.pinnedTopRows?.forEach(updateRowHeight);\n    const event = {\n      type: \"pinnedHeightChanged\"\n    };\n    this.eventService.dispatchEvent(event);\n    return anyChange;\n  }\n  setPinnedTopRowData() {\n    const rowData = this.gos.get(\"pinnedTopRowData\");\n    this.pinnedTopRows = this.createNodesFromData(rowData, true);\n    const event = {\n      type: \"pinnedRowDataChanged\"\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  setPinnedBottomRowData() {\n    const rowData = this.gos.get(\"pinnedBottomRowData\");\n    this.pinnedBottomRows = this.createNodesFromData(rowData, false);\n    const event = {\n      type: \"pinnedRowDataChanged\"\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  createNodesFromData(allData, isTop) {\n    const rowNodes = [];\n    if (allData) {\n      const getRowId = this.gos.getRowIdCallback();\n      const idPrefix = isTop ? RowNode.ID_PREFIX_TOP_PINNED : RowNode.ID_PREFIX_BOTTOM_PINNED;\n      let nextRowTop = 0;\n      const pinned = isTop ? \"top\" : \"bottom\";\n      allData.forEach((dataItem, index) => {\n        const rowNode = new RowNode(this.beans);\n        rowNode.data = dataItem;\n        rowNode.id = getRowId?.({\n          data: dataItem,\n          level: 0,\n          rowPinned: pinned\n        }) ?? idPrefix + this.nextId++;\n        rowNode.rowPinned = pinned;\n        rowNode.setRowTop(nextRowTop);\n        rowNode.setRowHeight(this.gos.getRowHeightForNode(rowNode).height);\n        rowNode.setRowIndex(index);\n        nextRowTop += rowNode.rowHeight;\n        rowNodes.push(rowNode);\n      });\n    }\n    return rowNodes;\n  }\n  getPinnedTopRowNodes() {\n    return this.pinnedTopRows;\n  }\n  getPinnedBottomRowNodes() {\n    return this.pinnedBottomRows;\n  }\n  getPinnedTopTotalHeight() {\n    return this.getTotalHeight(this.pinnedTopRows);\n  }\n  getPinnedTopRowCount() {\n    return this.pinnedTopRows ? this.pinnedTopRows.length : 0;\n  }\n  getPinnedBottomRowCount() {\n    return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;\n  }\n  getPinnedTopRow(index) {\n    return this.pinnedTopRows[index];\n  }\n  getPinnedBottomRow(index) {\n    return this.pinnedBottomRows[index];\n  }\n  forEachPinnedTopRow(callback) {\n    if (_missingOrEmpty(this.pinnedTopRows)) {\n      return;\n    }\n    this.pinnedTopRows.forEach(callback);\n  }\n  forEachPinnedBottomRow(callback) {\n    if (_missingOrEmpty(this.pinnedBottomRows)) {\n      return;\n    }\n    this.pinnedBottomRows.forEach(callback);\n  }\n  getPinnedBottomTotalHeight() {\n    return this.getTotalHeight(this.pinnedBottomRows);\n  }\n  getTotalHeight(rowNodes) {\n    if (!rowNodes || rowNodes.length === 0) {\n      return 0;\n    }\n    const lastNode = _last(rowNodes);\n    return lastNode.rowTop + lastNode.rowHeight;\n  }\n};\n\n// community-modules/core/src/interfaces/serverSideTransaction.ts\nvar ServerSideTransactionResultStatus = /* @__PURE__ */(ServerSideTransactionResultStatus2 => {\n  ServerSideTransactionResultStatus2[\"Applied\"] = \"Applied\";\n  ServerSideTransactionResultStatus2[\"StoreNotFound\"] = \"StoreNotFound\";\n  ServerSideTransactionResultStatus2[\"StoreLoading\"] = \"StoreLoading\";\n  ServerSideTransactionResultStatus2[\"StoreWaitingToLoad\"] = \"StoreWaitingToLoad\";\n  ServerSideTransactionResultStatus2[\"StoreLoadingFailed\"] = \"StoreLoadingFailed\";\n  ServerSideTransactionResultStatus2[\"StoreWrongType\"] = \"StoreWrongType\";\n  ServerSideTransactionResultStatus2[\"Cancelled\"] = \"Cancelled\";\n  ServerSideTransactionResultStatus2[\"StoreNotStarted\"] = \"StoreNotStarted\";\n  return ServerSideTransactionResultStatus2;\n})(ServerSideTransactionResultStatus || {});\n\n// community-modules/core/src/rowNodeCache/rowNodeBlock.ts\nvar RowNodeBlock = class extends BeanStub {\n  constructor(id) {\n    super();\n    this.state = \"needsLoading\";\n    this.version = 0;\n    this.id = id;\n  }\n  getId() {\n    return this.id;\n  }\n  load() {\n    this.state = \"loading\";\n    this.loadFromDatasource();\n  }\n  getVersion() {\n    return this.version;\n  }\n  setStateWaitingToLoad() {\n    this.version++;\n    this.state = \"needsLoading\";\n  }\n  getState() {\n    return this.state;\n  }\n  pageLoadFailed(version) {\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\n    if (requestMostRecentAndLive) {\n      this.state = \"failed\";\n      this.processServerFail();\n    }\n    this.dispatchLoadCompleted(false);\n  }\n  success(version, params) {\n    this.successCommon(version, params);\n  }\n  pageLoaded(version, rows, lastRow) {\n    this.successCommon(version, {\n      rowData: rows,\n      rowCount: lastRow\n    });\n  }\n  isRequestMostRecentAndLive(version) {\n    const thisIsMostRecentRequest = version === this.version;\n    const weAreNotDestroyed = this.isAlive();\n    return thisIsMostRecentRequest && weAreNotDestroyed;\n  }\n  successCommon(version, params) {\n    this.dispatchLoadCompleted();\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\n    if (requestMostRecentAndLive) {\n      this.state = \"loaded\";\n      this.processServerResult(params);\n    }\n  }\n  dispatchLoadCompleted(success = true) {\n    const event = {\n      type: \"loadComplete\",\n      success,\n      block: this\n    };\n    this.dispatchLocalEvent(event);\n  }\n};\n\n// community-modules/core/src/rowNodeCache/rowNodeBlockLoader.ts\nvar RowNodeBlockLoader = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowNodeBlockLoader\";\n    this.activeBlockLoadsCount = 0;\n    this.blocks = [];\n    this.active = true;\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    this.maxConcurrentRequests = this.getMaxConcurrentDatasourceRequests();\n    const blockLoadDebounceMillis = this.gos.get(\"blockLoadDebounceMillis\");\n    if (blockLoadDebounceMillis && blockLoadDebounceMillis > 0) {\n      this.checkBlockToLoadDebounce = _debounce(this.performCheckBlocksToLoad.bind(this), blockLoadDebounceMillis);\n    }\n  }\n  getMaxConcurrentDatasourceRequests() {\n    const res = this.gos.get(\"maxConcurrentDatasourceRequests\");\n    if (res == null) {\n      return 2;\n    }\n    if (res <= 0) {\n      return;\n    }\n    return res;\n  }\n  addBlock(block) {\n    this.blocks.push(block);\n    block.addEventListener(\"loadComplete\", this.loadComplete.bind(this));\n    this.checkBlockToLoad();\n  }\n  removeBlock(block) {\n    _removeFromArray(this.blocks, block);\n  }\n  destroy() {\n    super.destroy();\n    this.active = false;\n  }\n  loadComplete() {\n    this.activeBlockLoadsCount--;\n    this.checkBlockToLoad();\n    this.dispatchLocalEvent({\n      type: \"blockLoaded\"\n    });\n    if (this.activeBlockLoadsCount == 0) {\n      this.dispatchLocalEvent({\n        type: \"blockLoaderFinished\"\n      });\n    }\n  }\n  checkBlockToLoad() {\n    if (this.checkBlockToLoadDebounce) {\n      this.checkBlockToLoadDebounce();\n    } else {\n      this.performCheckBlocksToLoad();\n    }\n  }\n  performCheckBlocksToLoad() {\n    if (!this.active) {\n      return;\n    }\n    this.printCacheStatus();\n    if (this.maxConcurrentRequests != null && this.activeBlockLoadsCount >= this.maxConcurrentRequests) {\n      if (this.gos.get(\"debug\")) {\n        _log(`RowNodeBlockLoader - checkBlockToLoad: max loads exceeded`);\n      }\n      return;\n    }\n    const loadAvailability = this.getAvailableLoadingCount();\n    const blocksToLoad = this.blocks.filter(block => block.getState() === \"needsLoading\").slice(0, loadAvailability);\n    this.registerLoads(blocksToLoad.length);\n    blocksToLoad.forEach(block => block.load());\n    this.printCacheStatus();\n  }\n  getBlockState() {\n    if (this.gos.isRowModelType(\"serverSide\")) {\n      const ssrm = this.rowModel;\n      return ssrm.getBlockStates();\n    }\n    const result = {};\n    this.blocks.forEach(block => {\n      const {\n        id,\n        state\n      } = block.getBlockStateJson();\n      result[id] = state;\n    });\n    return result;\n  }\n  printCacheStatus() {\n    if (this.gos.get(\"debug\")) {\n      _log(`RowNodeBlockLoader - printCacheStatus: activePageLoadsCount = ${this.activeBlockLoadsCount}, blocks = ${JSON.stringify(this.getBlockState())}`);\n    }\n  }\n  isLoading() {\n    return this.activeBlockLoadsCount > 0;\n  }\n  registerLoads(count) {\n    this.activeBlockLoadsCount += count;\n  }\n  getAvailableLoadingCount() {\n    return this.maxConcurrentRequests !== void 0 ? this.maxConcurrentRequests - this.activeBlockLoadsCount : void 0;\n  }\n};\n\n// community-modules/core/src/rowNodeCache/rowNodeBlockModule.ts\nvar RowNodeBlockModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/row-node-block\",\n  beans: [RowNodeBlockLoader]\n};\n\n// community-modules/core/src/selection/rowRangeSelectionContext.ts\nvar RowRangeSelectionContext = class {\n  constructor() {\n    this.root = null;\n    /**\n     * Note that the \"end\" `RowNode` may come before or after the \"root\" `RowNode` in the\n     * actual grid.\n     */\n    this.end = null;\n    this.cachedRange = [];\n  }\n  init(rowModel) {\n    this.rowModel = rowModel;\n  }\n  reset() {\n    this.root = null;\n    this.end = null;\n    this.cachedRange.length = 0;\n  }\n  setRoot(node) {\n    this.root = node;\n    this.end = null;\n    this.cachedRange.length = 0;\n  }\n  setEndRange(end) {\n    this.end = end;\n    this.cachedRange.length = 0;\n  }\n  getRange() {\n    if (this.cachedRange.length === 0) {\n      const root = this.getRoot();\n      const end = this.getEnd();\n      if (root == null || end == null) {\n        return this.cachedRange;\n      }\n      this.cachedRange = this.rowModel.getNodesInRangeForSelection(root, end);\n    }\n    return this.cachedRange;\n  }\n  isInRange(node) {\n    if (this.root === null) {\n      return false;\n    }\n    return this.getRange().some(nodeInRange => nodeInRange.id === node.id);\n  }\n  getRoot() {\n    if (this.root && this.root?.key === null) {\n      this.root = this.rowModel.getRowNode(this.root.id) ?? null;\n    }\n    return this.root;\n  }\n  getEnd() {\n    if (this.end && this.end?.key === null) {\n      this.end = this.rowModel.getRowNode(this.end.id) ?? null;\n    }\n    return this.end;\n  }\n  /**\n   * Truncates the range to the given node (assumed to be within the current range).\n   * Returns nodes that remain in the current range and those that should be removed\n   *\n   * @param node - Node at which to truncate the range\n   * @returns Object of nodes to either keep or discard (i.e. deselect) from the range\n   */\n  truncate(node) {\n    const range = this.getRange();\n    if (range.length === 0) {\n      return {\n        keep: [],\n        discard: []\n      };\n    }\n    const discardAfter = range[0].id === this.root.id;\n    const idx = range.findIndex(rowNode => rowNode.id === node.id);\n    if (idx > -1) {\n      const above = range.slice(0, idx);\n      const below = range.slice(idx + 1);\n      this.setEndRange(node);\n      return discardAfter ? {\n        keep: above,\n        discard: below\n      } : {\n        keep: below,\n        discard: above\n      };\n    } else {\n      return {\n        keep: range,\n        discard: []\n      };\n    }\n  }\n  /**\n   * Extends the range to the given node. Returns nodes that remain in the current range\n   * and those that should be removed.\n   *\n   * @param node - Node marking the new end of the range\n   * @returns Object of nodes to either keep or discard (i.e. deselect) from the range\n   */\n  extend(node, groupSelectsChildren = false) {\n    const root = this.getRoot();\n    if (root == null) {\n      const keep = this.getRange().slice();\n      if (groupSelectsChildren) {\n        node.depthFirstSearch(node2 => !node2.group && keep.push(node2));\n      }\n      keep.push(node);\n      this.setRoot(node);\n      return {\n        keep,\n        discard: []\n      };\n    }\n    const newRange = this.rowModel.getNodesInRangeForSelection(root, node);\n    if (newRange.find(newRangeNode => newRangeNode.id === this.end?.id)) {\n      this.setEndRange(node);\n      return {\n        keep: this.getRange(),\n        discard: []\n      };\n    } else {\n      const discard = this.getRange().slice();\n      this.setEndRange(node);\n      return {\n        keep: this.getRange(),\n        discard\n      };\n    }\n  }\n};\n\n// community-modules/core/src/styling/stylingService.ts\nvar StylingService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"stylingService\";\n  }\n  wireBeans(beans) {\n    this.expressionService = beans.expressionService;\n  }\n  processAllCellClasses(colDef, params, onApplicableClass, onNotApplicableClass) {\n    this.processClassRules(void 0, colDef.cellClassRules, params, onApplicableClass, onNotApplicableClass);\n    this.processStaticCellClasses(colDef, params, onApplicableClass);\n  }\n  processClassRules(previousClassRules, classRules, params, onApplicableClass, onNotApplicableClass) {\n    if (classRules == null && previousClassRules == null) {\n      return;\n    }\n    const classesToApply = {};\n    const classesToRemove = {};\n    const forEachSingleClass = (className, callback) => {\n      className.split(\" \").forEach(singleClass => {\n        if (singleClass.trim() == \"\") return;\n        callback(singleClass);\n      });\n    };\n    if (classRules) {\n      const classNames = Object.keys(classRules);\n      for (let i = 0; i < classNames.length; i++) {\n        const className = classNames[i];\n        const rule = classRules[className];\n        let resultOfRule;\n        if (typeof rule === \"string\") {\n          resultOfRule = this.expressionService.evaluate(rule, params);\n        } else if (typeof rule === \"function\") {\n          resultOfRule = rule(params);\n        }\n        forEachSingleClass(className, singleClass => {\n          resultOfRule ? classesToApply[singleClass] = true : classesToRemove[singleClass] = true;\n        });\n      }\n    }\n    if (previousClassRules && onNotApplicableClass) {\n      Object.keys(previousClassRules).forEach(className => forEachSingleClass(className, singleClass => {\n        if (!classesToApply[singleClass]) {\n          classesToRemove[singleClass] = true;\n        }\n      }));\n    }\n    if (onNotApplicableClass) {\n      Object.keys(classesToRemove).forEach(onNotApplicableClass);\n    }\n    Object.keys(classesToApply).forEach(onApplicableClass);\n  }\n  getStaticCellClasses(colDef, params) {\n    const {\n      cellClass\n    } = colDef;\n    if (!cellClass) {\n      return [];\n    }\n    let classOrClasses;\n    if (typeof cellClass === \"function\") {\n      const cellClassFunc = cellClass;\n      classOrClasses = cellClassFunc(params);\n    } else {\n      classOrClasses = cellClass;\n    }\n    if (typeof classOrClasses === \"string\") {\n      classOrClasses = [classOrClasses];\n    }\n    return classOrClasses || [];\n  }\n  processStaticCellClasses(colDef, params, onApplicableClass) {\n    const classOrClasses = this.getStaticCellClasses(colDef, params);\n    classOrClasses.forEach(cssClassItem => {\n      onApplicableClass(cssClassItem);\n    });\n  }\n};\n\n// community-modules/core/src/widgets/agToggleButton.ts\nvar AgToggleButton = class extends AgCheckbox {\n  constructor(config) {\n    super(config, \"ag-toggle-button\");\n  }\n  setValue(value, silent) {\n    super.setValue(value, silent);\n    this.addOrRemoveCssClass(\"ag-selected\", this.getValue());\n    return this;\n  }\n};\nvar AgToggleButtonSelector = {\n  selector: \"AG-TOGGLE-BUTTON\",\n  component: AgToggleButton\n};\n\n// community-modules/core/src/widgets/tabGuardCtrl.ts\nvar TabGuardClassNames = /* @__PURE__ */(TabGuardClassNames2 => {\n  TabGuardClassNames2[\"TAB_GUARD\"] = \"ag-tab-guard\";\n  TabGuardClassNames2[\"TAB_GUARD_TOP\"] = \"ag-tab-guard-top\";\n  TabGuardClassNames2[\"TAB_GUARD_BOTTOM\"] = \"ag-tab-guard-bottom\";\n  return TabGuardClassNames2;\n})(TabGuardClassNames || {});\nvar TabGuardCtrl = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.skipTabGuardFocus = false;\n    this.forcingFocusOut = false;\n    // Used when `isFocusableContainer` enabled\n    this.allowFocus = false;\n    const {\n      comp,\n      eTopGuard,\n      eBottomGuard,\n      focusTrapActive,\n      forceFocusOutWhenTabGuardsAreEmpty,\n      isFocusableContainer,\n      focusInnerElement,\n      onFocusIn,\n      onFocusOut,\n      shouldStopEventPropagation,\n      onTabKeyDown,\n      handleKeyDown,\n      eFocusableElement\n    } = params;\n    this.comp = comp;\n    this.eTopGuard = eTopGuard;\n    this.eBottomGuard = eBottomGuard;\n    this.providedFocusInnerElement = focusInnerElement;\n    this.eFocusableElement = eFocusableElement;\n    this.focusTrapActive = !!focusTrapActive;\n    this.forceFocusOutWhenTabGuardsAreEmpty = !!forceFocusOutWhenTabGuardsAreEmpty;\n    this.isFocusableContainer = !!isFocusableContainer;\n    this.providedFocusIn = onFocusIn;\n    this.providedFocusOut = onFocusOut;\n    this.providedShouldStopEventPropagation = shouldStopEventPropagation;\n    this.providedOnTabKeyDown = onTabKeyDown;\n    this.providedHandleKeyDown = handleKeyDown;\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n  }\n  postConstruct() {\n    this.createManagedBean(new ManagedFocusFeature(this.eFocusableElement, {\n      shouldStopEventPropagation: () => this.shouldStopEventPropagation(),\n      onTabKeyDown: e => this.onTabKeyDown(e),\n      handleKeyDown: e => this.handleKeyDown(e),\n      onFocusIn: e => this.onFocusIn(e),\n      onFocusOut: e => this.onFocusOut(e)\n    }));\n    this.activateTabGuards();\n    [this.eTopGuard, this.eBottomGuard].forEach(guard => this.addManagedElementListeners(guard, {\n      focus: this.onFocus.bind(this)\n    }));\n  }\n  handleKeyDown(e) {\n    if (this.providedHandleKeyDown) {\n      this.providedHandleKeyDown(e);\n    }\n  }\n  tabGuardsAreActive() {\n    return !!this.eTopGuard && this.eTopGuard.hasAttribute(\"tabIndex\");\n  }\n  shouldStopEventPropagation() {\n    if (this.providedShouldStopEventPropagation) {\n      return this.providedShouldStopEventPropagation();\n    }\n    return false;\n  }\n  activateTabGuards() {\n    if (this.forcingFocusOut) {\n      return;\n    }\n    const tabIndex = this.gos.get(\"tabIndex\");\n    this.comp.setTabIndex(tabIndex.toString());\n  }\n  deactivateTabGuards() {\n    this.comp.setTabIndex();\n  }\n  onFocus(e) {\n    if (this.isFocusableContainer && !this.eFocusableElement.contains(e.relatedTarget)) {\n      if (!this.allowFocus) {\n        this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\n        return;\n      }\n    }\n    if (this.skipTabGuardFocus) {\n      this.skipTabGuardFocus = false;\n      return;\n    }\n    if (this.forceFocusOutWhenTabGuardsAreEmpty) {\n      const isEmpty = this.focusService.findFocusableElements(this.eFocusableElement, \".ag-tab-guard\").length === 0;\n      if (isEmpty) {\n        this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\n        return;\n      }\n    }\n    if (this.isFocusableContainer && this.eFocusableElement.contains(e.relatedTarget)) {\n      return;\n    }\n    const fromBottom = e.target === this.eBottomGuard;\n    if (this.providedFocusInnerElement) {\n      this.providedFocusInnerElement(fromBottom);\n    } else {\n      this.focusInnerElement(fromBottom);\n    }\n  }\n  findNextElementOutsideAndFocus(up) {\n    const eDocument = this.gos.getDocument();\n    const focusableEls = this.focusService.findFocusableElements(eDocument.body, null, true);\n    const index = focusableEls.indexOf(up ? this.eTopGuard : this.eBottomGuard);\n    if (index === -1) {\n      return;\n    }\n    let start;\n    let end;\n    if (up) {\n      start = 0;\n      end = index;\n    } else {\n      start = index + 1;\n      end = focusableEls.length;\n    }\n    const focusableRange = focusableEls.slice(start, end);\n    const targetTabIndex = this.gos.get(\"tabIndex\");\n    focusableRange.sort((a, b) => {\n      const indexA = parseInt(a.getAttribute(\"tabindex\") || \"0\");\n      const indexB = parseInt(b.getAttribute(\"tabindex\") || \"0\");\n      if (indexB === targetTabIndex) {\n        return 1;\n      }\n      if (indexA === targetTabIndex) {\n        return -1;\n      }\n      if (indexA === 0) {\n        return 1;\n      }\n      if (indexB === 0) {\n        return -1;\n      }\n      return indexA - indexB;\n    });\n    focusableRange[up ? focusableRange.length - 1 : 0].focus();\n  }\n  onFocusIn(e) {\n    if (this.focusTrapActive || this.forcingFocusOut) {\n      return;\n    }\n    if (this.providedFocusIn) {\n      this.providedFocusIn(e);\n    }\n    if (!this.isFocusableContainer) {\n      this.deactivateTabGuards();\n    }\n  }\n  onFocusOut(e) {\n    if (this.focusTrapActive) {\n      return;\n    }\n    if (this.providedFocusOut) {\n      this.providedFocusOut(e);\n    }\n    if (!this.eFocusableElement.contains(e.relatedTarget)) {\n      this.activateTabGuards();\n    }\n  }\n  onTabKeyDown(e) {\n    if (this.providedOnTabKeyDown) {\n      this.providedOnTabKeyDown(e);\n      return;\n    }\n    if (this.focusTrapActive) {\n      return;\n    }\n    if (e.defaultPrevented) {\n      return;\n    }\n    const tabGuardsAreActive = this.tabGuardsAreActive();\n    if (tabGuardsAreActive) {\n      this.deactivateTabGuards();\n    }\n    const nextRoot = this.getNextFocusableElement(e.shiftKey);\n    if (tabGuardsAreActive) {\n      setTimeout(() => this.activateTabGuards(), 0);\n    }\n    if (!nextRoot) {\n      return;\n    }\n    nextRoot.focus();\n    e.preventDefault();\n  }\n  focusInnerElement(fromBottom = false) {\n    const focusable = this.focusService.findFocusableElements(this.eFocusableElement);\n    if (this.tabGuardsAreActive()) {\n      focusable.splice(0, 1);\n      focusable.splice(focusable.length - 1, 1);\n    }\n    if (!focusable.length) {\n      return;\n    }\n    focusable[fromBottom ? focusable.length - 1 : 0].focus({\n      preventScroll: true\n    });\n  }\n  getNextFocusableElement(backwards) {\n    return this.focusService.findNextFocusableElement(this.eFocusableElement, false, backwards);\n  }\n  forceFocusOutOfContainer(up = false) {\n    if (this.forcingFocusOut) {\n      return;\n    }\n    const tabGuardToFocus = up ? this.eTopGuard : this.eBottomGuard;\n    this.activateTabGuards();\n    this.skipTabGuardFocus = true;\n    this.forcingFocusOut = true;\n    tabGuardToFocus.focus();\n    window.setTimeout(() => {\n      this.forcingFocusOut = false;\n      this.activateTabGuards();\n    });\n  }\n  isTabGuard(element, bottom) {\n    return element === this.eTopGuard && !bottom || element === this.eBottomGuard && (bottom ?? true);\n  }\n  setAllowFocus(allowFocus) {\n    this.allowFocus = allowFocus;\n  }\n};\n\n// community-modules/core/src/widgets/tabGuardFeature.ts\nvar TabGuardFeature = class extends BeanStub {\n  constructor(comp) {\n    super();\n    this.comp = comp;\n  }\n  initialiseTabGuard(params) {\n    this.eTopGuard = this.createTabGuard(\"top\");\n    this.eBottomGuard = this.createTabGuard(\"bottom\");\n    this.eFocusableElement = this.comp.getFocusableElement();\n    const {\n      eTopGuard,\n      eBottomGuard,\n      eFocusableElement\n    } = this;\n    const tabGuards = [eTopGuard, eBottomGuard];\n    const compProxy = {\n      setTabIndex: tabIndex => {\n        tabGuards.forEach(tabGuard => tabIndex != null ? tabGuard.setAttribute(\"tabindex\", tabIndex) : tabGuard.removeAttribute(\"tabindex\"));\n      }\n    };\n    this.addTabGuards(eTopGuard, eBottomGuard);\n    const {\n      focusTrapActive = false,\n      onFocusIn,\n      onFocusOut,\n      focusInnerElement,\n      handleKeyDown,\n      onTabKeyDown,\n      shouldStopEventPropagation,\n      forceFocusOutWhenTabGuardsAreEmpty,\n      isFocusableContainer\n    } = params;\n    this.tabGuardCtrl = this.createManagedBean(new TabGuardCtrl({\n      comp: compProxy,\n      focusTrapActive,\n      eTopGuard,\n      eBottomGuard,\n      eFocusableElement,\n      onFocusIn,\n      onFocusOut,\n      focusInnerElement,\n      handleKeyDown,\n      onTabKeyDown,\n      shouldStopEventPropagation,\n      forceFocusOutWhenTabGuardsAreEmpty,\n      isFocusableContainer\n    }));\n  }\n  getTabGuardCtrl() {\n    return this.tabGuardCtrl;\n  }\n  createTabGuard(side) {\n    const tabGuard = this.gos.getDocument().createElement(\"div\");\n    const cls = side === \"top\" ? \"ag-tab-guard-top\" /* TAB_GUARD_TOP */ : \"ag-tab-guard-bottom\" /* TAB_GUARD_BOTTOM */;\n    tabGuard.classList.add(\"ag-tab-guard\" /* TAB_GUARD */, cls);\n    _setAriaRole(tabGuard, \"presentation\");\n    return tabGuard;\n  }\n  addTabGuards(topTabGuard, bottomTabGuard) {\n    this.eFocusableElement.insertAdjacentElement(\"afterbegin\", topTabGuard);\n    this.eFocusableElement.insertAdjacentElement(\"beforeend\", bottomTabGuard);\n  }\n  removeAllChildrenExceptTabGuards() {\n    const tabGuards = [this.eTopGuard, this.eBottomGuard];\n    _clearElement(this.comp.getFocusableElement());\n    this.addTabGuards(...tabGuards);\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.tabGuardCtrl.forceFocusOutOfContainer(up);\n  }\n  appendChild(appendChild, newChild, container) {\n    if (!_isNodeOrElement(newChild)) {\n      newChild = newChild.getGui();\n    }\n    const {\n      eBottomGuard: bottomTabGuard\n    } = this;\n    if (bottomTabGuard) {\n      bottomTabGuard.insertAdjacentElement(\"beforebegin\", newChild);\n    } else {\n      appendChild(newChild, container);\n    }\n  }\n};\n\n// community-modules/core/src/widgets/tabGuardComp.ts\nvar TabGuardComp = class extends Component {\n  initialiseTabGuard(params) {\n    this.tabGuardFeature = this.createManagedBean(new TabGuardFeature(this));\n    this.tabGuardFeature.initialiseTabGuard(params);\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.tabGuardFeature.forceFocusOutOfContainer(up);\n  }\n  appendChild(newChild, container) {\n    this.tabGuardFeature.appendChild(super.appendChild.bind(this), newChild, container);\n  }\n};\n\n// community-modules/core/src/widgets/popupService.ts\nvar instanceIdSeq = 0;\nvar WAIT_FOR_POPUP_CONTENT_RESIZE = 200;\nvar PopupService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"popupService\";\n    this.popupList = [];\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.resizeObserverService = beans.resizeObserverService;\n    this.environment = beans.environment;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady(p => {\n      this.gridCtrl = p.gridCtrl;\n    });\n    this.addManagedEventListeners({\n      gridStylesChanged: this.handleThemeChange.bind(this)\n    });\n  }\n  getPopupParent() {\n    const ePopupParent = this.gos.get(\"popupParent\");\n    if (ePopupParent) {\n      return ePopupParent;\n    }\n    return this.gridCtrl.getGui();\n  }\n  positionPopupForMenu(params) {\n    const {\n      eventSource,\n      ePopup\n    } = params;\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx !== -1) {\n      const popup = this.popupList[popupIdx];\n      popup.alignedToElement = eventSource;\n    }\n    const sourceRect = eventSource.getBoundingClientRect();\n    const parentRect = this.getParentRect();\n    const y = this.keepXYWithinBounds(ePopup, sourceRect.top - parentRect.top, 0 /* vertical */);\n    const minWidth = ePopup.clientWidth > 0 ? ePopup.clientWidth : 200;\n    ePopup.style.minWidth = `${minWidth}px`;\n    const widthOfParent = parentRect.right - parentRect.left;\n    const maxX = widthOfParent - minWidth;\n    let x;\n    if (this.gos.get(\"enableRtl\")) {\n      x = xLeftPosition();\n      if (x < 0) {\n        x = xRightPosition();\n        this.setAlignedStyles(ePopup, \"left\");\n      }\n      if (x > maxX) {\n        x = 0;\n        this.setAlignedStyles(ePopup, \"right\");\n      }\n    } else {\n      x = xRightPosition();\n      if (x > maxX) {\n        x = xLeftPosition();\n        this.setAlignedStyles(ePopup, \"right\");\n      }\n      if (x < 0) {\n        x = 0;\n        this.setAlignedStyles(ePopup, \"left\");\n      }\n    }\n    ePopup.style.left = `${x}px`;\n    ePopup.style.top = `${y}px`;\n    function xRightPosition() {\n      return sourceRect.right - parentRect.left - 2;\n    }\n    function xLeftPosition() {\n      return sourceRect.left - parentRect.left - minWidth;\n    }\n  }\n  positionPopupUnderMouseEvent(params) {\n    const {\n      ePopup,\n      nudgeX,\n      nudgeY,\n      skipObserver\n    } = params;\n    this.positionPopup({\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds: true,\n      skipObserver,\n      updatePosition: () => this.calculatePointerAlign(params.mouseEvent),\n      postProcessCallback: () => this.callPostProcessPopup(params.type, params.ePopup, null, params.mouseEvent, params.column, params.rowNode)\n    });\n  }\n  calculatePointerAlign(e) {\n    const parentRect = this.getParentRect();\n    return {\n      x: e.clientX - parentRect.left,\n      y: e.clientY - parentRect.top\n    };\n  }\n  positionPopupByComponent(params) {\n    const {\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds,\n      eventSource,\n      alignSide = \"left\",\n      position = \"over\",\n      column,\n      rowNode,\n      type\n    } = params;\n    const sourceRect = eventSource.getBoundingClientRect();\n    const parentRect = this.getParentRect();\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx !== -1) {\n      const popup = this.popupList[popupIdx];\n      popup.alignedToElement = eventSource;\n    }\n    const updatePosition = () => {\n      let x = sourceRect.left - parentRect.left;\n      if (alignSide === \"right\") {\n        x -= ePopup.offsetWidth - sourceRect.width;\n      }\n      let y;\n      if (position === \"over\") {\n        y = sourceRect.top - parentRect.top;\n        this.setAlignedStyles(ePopup, \"over\");\n      } else {\n        this.setAlignedStyles(ePopup, \"under\");\n        const alignSide2 = this.shouldRenderUnderOrAbove(ePopup, sourceRect, parentRect, params.nudgeY || 0);\n        if (alignSide2 === \"under\") {\n          y = sourceRect.top - parentRect.top + sourceRect.height;\n        } else {\n          y = sourceRect.top - ePopup.offsetHeight - (nudgeY || 0) * 2 - parentRect.top;\n        }\n      }\n      return {\n        x,\n        y\n      };\n    };\n    this.positionPopup({\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds,\n      updatePosition,\n      postProcessCallback: () => this.callPostProcessPopup(type, ePopup, eventSource, null, column, rowNode)\n    });\n  }\n  shouldRenderUnderOrAbove(ePopup, targetCompRect, parentRect, nudgeY) {\n    const spaceAvailableUnder = parentRect.bottom - targetCompRect.bottom;\n    const spaceAvailableAbove = targetCompRect.top - parentRect.top;\n    const spaceRequired = ePopup.offsetHeight + nudgeY;\n    if (spaceAvailableUnder > spaceRequired) {\n      return \"under\";\n    }\n    if (spaceAvailableAbove > spaceRequired || spaceAvailableAbove > spaceAvailableUnder) {\n      return \"above\";\n    }\n    return \"under\";\n  }\n  setAlignedStyles(ePopup, positioned) {\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx === -1) {\n      return;\n    }\n    const popup = this.popupList[popupIdx];\n    const {\n      alignedToElement\n    } = popup;\n    if (!alignedToElement) {\n      return;\n    }\n    const positions = [\"right\", \"left\", \"over\", \"above\", \"under\"];\n    positions.forEach(position => {\n      alignedToElement.classList.remove(`ag-has-popup-positioned-${position}`);\n      ePopup.classList.remove(`ag-popup-positioned-${position}`);\n    });\n    if (!positioned) {\n      return;\n    }\n    alignedToElement.classList.add(`ag-has-popup-positioned-${positioned}`);\n    ePopup.classList.add(`ag-popup-positioned-${positioned}`);\n  }\n  callPostProcessPopup(type, ePopup, eventSource, mouseEvent, column, rowNode) {\n    const callback = this.gos.getCallback(\"postProcessPopup\");\n    if (callback) {\n      const params = {\n        column,\n        rowNode,\n        ePopup,\n        type,\n        eventSource,\n        mouseEvent\n      };\n      callback(params);\n    }\n  }\n  positionPopup(params) {\n    const {\n      ePopup,\n      keepWithinBounds,\n      nudgeX,\n      nudgeY,\n      skipObserver,\n      updatePosition\n    } = params;\n    const lastSize = {\n      width: 0,\n      height: 0\n    };\n    const updatePopupPosition = (fromResizeObserver = false) => {\n      let {\n        x,\n        y\n      } = updatePosition();\n      if (fromResizeObserver && ePopup.clientWidth === lastSize.width && ePopup.clientHeight === lastSize.height) {\n        return;\n      }\n      lastSize.width = ePopup.clientWidth;\n      lastSize.height = ePopup.clientHeight;\n      if (nudgeX) {\n        x += nudgeX;\n      }\n      if (nudgeY) {\n        y += nudgeY;\n      }\n      if (keepWithinBounds) {\n        x = this.keepXYWithinBounds(ePopup, x, 1 /* horizontal */);\n        y = this.keepXYWithinBounds(ePopup, y, 0 /* vertical */);\n      }\n      ePopup.style.left = `${x}px`;\n      ePopup.style.top = `${y}px`;\n      if (params.postProcessCallback) {\n        params.postProcessCallback();\n      }\n    };\n    updatePopupPosition();\n    if (!skipObserver) {\n      const resizeObserverDestroyFunc = this.resizeObserverService.observeResize(ePopup, () => updatePopupPosition(true));\n      setTimeout(() => resizeObserverDestroyFunc(), WAIT_FOR_POPUP_CONTENT_RESIZE);\n    }\n  }\n  getActivePopups() {\n    return this.popupList.map(popup => popup.element);\n  }\n  getPopupList() {\n    return this.popupList;\n  }\n  getParentRect() {\n    const eDocument = this.gos.getDocument();\n    let popupParent = this.getPopupParent();\n    if (popupParent === eDocument.body) {\n      popupParent = eDocument.documentElement;\n    } else if (getComputedStyle(popupParent).position === \"static\") {\n      popupParent = popupParent.offsetParent;\n    }\n    return _getElementRectWithOffset(popupParent);\n  }\n  keepXYWithinBounds(ePopup, position, direction) {\n    const isVertical = direction === 0 /* vertical */;\n    const sizeProperty = isVertical ? \"clientHeight\" : \"clientWidth\";\n    const anchorProperty = isVertical ? \"top\" : \"left\";\n    const offsetProperty = isVertical ? \"height\" : \"width\";\n    const scrollPositionProperty = isVertical ? \"scrollTop\" : \"scrollLeft\";\n    const eDocument = this.gos.getDocument();\n    const docElement = eDocument.documentElement;\n    const popupParent = this.getPopupParent();\n    const popupRect = ePopup.getBoundingClientRect();\n    const parentRect = popupParent.getBoundingClientRect();\n    const documentRect = eDocument.documentElement.getBoundingClientRect();\n    const isBody = popupParent === eDocument.body;\n    const offsetSize = Math.ceil(popupRect[offsetProperty]);\n    const getSize = isVertical ? _getAbsoluteHeight : _getAbsoluteWidth;\n    let sizeOfParent = isBody ? getSize(docElement) + docElement[scrollPositionProperty] : popupParent[sizeProperty];\n    if (isBody) {\n      sizeOfParent -= Math.abs(documentRect[anchorProperty] - parentRect[anchorProperty]);\n    }\n    const max = sizeOfParent - offsetSize;\n    return Math.min(Math.max(position, 0), Math.abs(max));\n  }\n  addPopup(params) {\n    const eDocument = this.gos.getDocument();\n    const {\n      eChild,\n      ariaLabel,\n      alwaysOnTop,\n      positionCallback,\n      anchorToElement\n    } = params;\n    if (!eDocument) {\n      _warnOnce(\"could not find the document, document is empty\");\n      return {\n        hideFunc: () => {}\n      };\n    }\n    const pos = this.getPopupIndex(eChild);\n    if (pos !== -1) {\n      const popup = this.popupList[pos];\n      return {\n        hideFunc: popup.hideFunc\n      };\n    }\n    this.initialisePopupPosition(eChild);\n    const wrapperEl = this.createPopupWrapper(eChild, ariaLabel, !!alwaysOnTop);\n    const removeListeners = this.addEventListenersToPopup({\n      ...params,\n      wrapperEl\n    });\n    if (positionCallback) {\n      positionCallback();\n    }\n    this.addPopupToPopupList(eChild, wrapperEl, removeListeners, anchorToElement);\n    return {\n      hideFunc: removeListeners\n    };\n  }\n  initialisePopupPosition(element) {\n    const ePopupParent = this.getPopupParent();\n    const ePopupParentRect = ePopupParent.getBoundingClientRect();\n    if (!_exists(element.style.top)) {\n      element.style.top = `${ePopupParentRect.top * -1}px`;\n    }\n    if (!_exists(element.style.left)) {\n      element.style.left = `${ePopupParentRect.left * -1}px`;\n    }\n  }\n  createPopupWrapper(element, ariaLabel, alwaysOnTop) {\n    const ePopupParent = this.getPopupParent();\n    const eWrapper = document.createElement(\"div\");\n    this.environment.applyThemeClasses(eWrapper);\n    eWrapper.classList.add(\"ag-popup\");\n    element.classList.add(this.gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\", \"ag-popup-child\");\n    if (!element.hasAttribute(\"role\")) {\n      _setAriaRole(element, \"dialog\");\n    }\n    _setAriaLabel(element, ariaLabel);\n    eWrapper.appendChild(element);\n    ePopupParent.appendChild(eWrapper);\n    if (alwaysOnTop) {\n      this.setAlwaysOnTop(element, true);\n    } else {\n      this.bringPopupToFront(element);\n    }\n    return eWrapper;\n  }\n  handleThemeChange(e) {\n    if (e.themeChanged) {\n      for (const popup of this.popupList) {\n        this.environment.applyThemeClasses(popup.wrapper);\n      }\n    }\n  }\n  addEventListenersToPopup(params) {\n    const eDocument = this.gos.getDocument();\n    const ePopupParent = this.getPopupParent();\n    const {\n      wrapperEl,\n      eChild: popupEl,\n      closedCallback,\n      afterGuiAttached,\n      closeOnEsc,\n      modal\n    } = params;\n    let popupHidden = false;\n    const hidePopupOnKeyboardEvent = event => {\n      if (!wrapperEl.contains(this.gos.getActiveDomElement())) {\n        return;\n      }\n      const key = event.key;\n      if (key === KeyCode.ESCAPE && !_isStopPropagationForAgGrid(event)) {\n        removeListeners({\n          keyboardEvent: event\n        });\n      }\n    };\n    const hidePopupOnMouseEvent = event => removeListeners({\n      mouseEvent: event\n    });\n    const hidePopupOnTouchEvent = event => removeListeners({\n      touchEvent: event\n    });\n    const removeListeners = (popupParams = {}) => {\n      const {\n        mouseEvent,\n        touchEvent,\n        keyboardEvent,\n        forceHide\n      } = popupParams;\n      if (!forceHide && (\n      // we don't hide popup if the event was on the child, or any\n      // children of this child\n      this.isEventFromCurrentPopup({\n        mouseEvent,\n        touchEvent\n      }, popupEl) ||\n      // this method should only be called once. the client can have different\n      // paths, each one wanting to close, so this method may be called multiple times.\n      popupHidden)) {\n        return;\n      }\n      popupHidden = true;\n      ePopupParent.removeChild(wrapperEl);\n      eDocument.removeEventListener(\"keydown\", hidePopupOnKeyboardEvent);\n      eDocument.removeEventListener(\"mousedown\", hidePopupOnMouseEvent);\n      eDocument.removeEventListener(\"touchstart\", hidePopupOnTouchEvent);\n      eDocument.removeEventListener(\"contextmenu\", hidePopupOnMouseEvent);\n      this.eventService.removeEventListener(\"dragStarted\", hidePopupOnMouseEvent);\n      if (closedCallback) {\n        closedCallback(mouseEvent || touchEvent || keyboardEvent);\n      }\n      this.removePopupFromPopupList(popupEl);\n    };\n    if (afterGuiAttached) {\n      afterGuiAttached({\n        hidePopup: removeListeners\n      });\n    }\n    window.setTimeout(() => {\n      if (closeOnEsc) {\n        eDocument.addEventListener(\"keydown\", hidePopupOnKeyboardEvent);\n      }\n      if (modal) {\n        eDocument.addEventListener(\"mousedown\", hidePopupOnMouseEvent);\n        this.eventService.addEventListener(\"dragStarted\", hidePopupOnMouseEvent);\n        eDocument.addEventListener(\"touchstart\", hidePopupOnTouchEvent);\n        eDocument.addEventListener(\"contextmenu\", hidePopupOnMouseEvent);\n      }\n    }, 0);\n    return removeListeners;\n  }\n  addPopupToPopupList(element, wrapperEl, removeListeners, anchorToElement) {\n    this.popupList.push({\n      element,\n      wrapper: wrapperEl,\n      hideFunc: removeListeners,\n      instanceId: instanceIdSeq++,\n      isAnchored: !!anchorToElement\n    });\n    if (anchorToElement) {\n      this.setPopupPositionRelatedToElement(element, anchorToElement);\n    }\n  }\n  getPopupIndex(el) {\n    return this.popupList.findIndex(p => p.element === el);\n  }\n  setPopupPositionRelatedToElement(popupEl, relativeElement) {\n    const popupIndex = this.getPopupIndex(popupEl);\n    if (popupIndex === -1) {\n      return;\n    }\n    const popup = this.popupList[popupIndex];\n    if (popup.stopAnchoringPromise) {\n      popup.stopAnchoringPromise.then(destroyFunc => destroyFunc && destroyFunc());\n    }\n    popup.stopAnchoringPromise = void 0;\n    popup.isAnchored = false;\n    if (!relativeElement) {\n      return;\n    }\n    const destroyPositionTracker = this.keepPopupPositionedRelativeTo({\n      element: relativeElement,\n      ePopup: popupEl,\n      hidePopup: popup.hideFunc\n    });\n    popup.stopAnchoringPromise = destroyPositionTracker;\n    popup.isAnchored = true;\n    return destroyPositionTracker;\n  }\n  removePopupFromPopupList(element) {\n    this.setAlignedStyles(element, null);\n    this.setPopupPositionRelatedToElement(element, null);\n    this.popupList = this.popupList.filter(p => p.element !== element);\n  }\n  keepPopupPositionedRelativeTo(params) {\n    const eParent = this.getPopupParent();\n    const parentRect = eParent.getBoundingClientRect();\n    const {\n      element,\n      ePopup\n    } = params;\n    const sourceRect = element.getBoundingClientRect();\n    const initialDiffTop = parentRect.top - sourceRect.top;\n    const initialDiffLeft = parentRect.left - sourceRect.left;\n    let lastDiffTop = initialDiffTop;\n    let lastDiffLeft = initialDiffLeft;\n    const topPx = ePopup.style.top;\n    const top = parseInt(topPx.substring(0, topPx.length - 1), 10);\n    const leftPx = ePopup.style.left;\n    const left = parseInt(leftPx.substring(0, leftPx.length - 1), 10);\n    const fwOverrides = this.getFrameworkOverrides();\n    return new AgPromise(resolve => {\n      fwOverrides.wrapIncoming(() => {\n        fwOverrides.setInterval(() => {\n          const pRect = eParent.getBoundingClientRect();\n          const sRect = element.getBoundingClientRect();\n          const elementNotInDom = sRect.top == 0 && sRect.left == 0 && sRect.height == 0 && sRect.width == 0;\n          if (elementNotInDom) {\n            params.hidePopup();\n            return;\n          }\n          const currentDiffTop = pRect.top - sRect.top;\n          if (currentDiffTop != lastDiffTop) {\n            const newTop = this.keepXYWithinBounds(ePopup, top + initialDiffTop - currentDiffTop, 0 /* vertical */);\n            ePopup.style.top = `${newTop}px`;\n          }\n          lastDiffTop = currentDiffTop;\n          const currentDiffLeft = pRect.left - sRect.left;\n          if (currentDiffLeft != lastDiffLeft) {\n            const newLeft = this.keepXYWithinBounds(ePopup, left + initialDiffLeft - currentDiffLeft, 1 /* horizontal */);\n            ePopup.style.left = `${newLeft}px`;\n          }\n          lastDiffLeft = currentDiffLeft;\n        }, 200).then(intervalId => {\n          const result = () => {\n            if (intervalId != null) {\n              window.clearInterval(intervalId);\n            }\n          };\n          resolve(result);\n        });\n      }, \"popupPositioning\");\n    });\n  }\n  hasAnchoredPopup() {\n    return this.popupList.some(popup => popup.isAnchored);\n  }\n  isEventFromCurrentPopup(params, target) {\n    const {\n      mouseEvent,\n      touchEvent\n    } = params;\n    const event = mouseEvent ? mouseEvent : touchEvent;\n    if (!event) {\n      return false;\n    }\n    const indexOfThisChild = this.getPopupIndex(target);\n    if (indexOfThisChild === -1) {\n      return false;\n    }\n    for (let i = indexOfThisChild; i < this.popupList.length; i++) {\n      const popup = this.popupList[i];\n      if (_isElementInEventPath(popup.element, event)) {\n        return true;\n      }\n    }\n    return this.isElementWithinCustomPopup(event.target);\n  }\n  isElementWithinCustomPopup(el) {\n    const eDocument = this.gos.getDocument();\n    while (el && el !== eDocument.body) {\n      if (el.classList.contains(\"ag-custom-component-popup\") || el.parentElement === null) {\n        return true;\n      }\n      el = el.parentElement;\n    }\n    return false;\n  }\n  getWrapper(ePopup) {\n    while (!ePopup.classList.contains(\"ag-popup\") && ePopup.parentElement) {\n      ePopup = ePopup.parentElement;\n    }\n    return ePopup.classList.contains(\"ag-popup\") ? ePopup : null;\n  }\n  setAlwaysOnTop(ePopup, alwaysOnTop) {\n    const eWrapper = this.getWrapper(ePopup);\n    if (!eWrapper) {\n      return;\n    }\n    eWrapper.classList.toggle(\"ag-always-on-top\", !!alwaysOnTop);\n    if (alwaysOnTop) {\n      this.bringPopupToFront(eWrapper);\n    }\n  }\n  /** @return true if moved */\n  bringPopupToFront(ePopup) {\n    const parent = this.getPopupParent();\n    const popupList = Array.prototype.slice.call(parent.querySelectorAll(\".ag-popup\"));\n    const popupLen = popupList.length;\n    const alwaysOnTopList = Array.prototype.slice.call(parent.querySelectorAll(\".ag-popup.ag-always-on-top\"));\n    const onTopLength = alwaysOnTopList.length;\n    const eWrapper = this.getWrapper(ePopup);\n    if (!eWrapper || popupLen <= 1 || !parent.contains(ePopup)) {\n      return false;\n    }\n    const pos = popupList.indexOf(eWrapper);\n    const innerEls = eWrapper.querySelectorAll(\"div\");\n    const innerElsScrollMap = [];\n    innerEls.forEach(el => {\n      if (el.scrollTop !== 0) {\n        innerElsScrollMap.push([el, el.scrollTop]);\n      }\n    });\n    let result = false;\n    if (onTopLength) {\n      const isPopupAlwaysOnTop = eWrapper.classList.contains(\"ag-always-on-top\");\n      if (isPopupAlwaysOnTop) {\n        if (pos !== popupLen - 1) {\n          _last(alwaysOnTopList).insertAdjacentElement(\"afterend\", eWrapper);\n          result = true;\n        }\n      } else if (pos !== popupLen - onTopLength - 1) {\n        alwaysOnTopList[0].insertAdjacentElement(\"beforebegin\", eWrapper);\n        result = true;\n      }\n    } else if (pos !== popupLen - 1) {\n      _last(popupList).insertAdjacentElement(\"afterend\", eWrapper);\n      result = true;\n    }\n    while (innerElsScrollMap.length) {\n      const currentEl = innerElsScrollMap.pop();\n      currentEl[0].scrollTop = currentEl[1];\n    }\n    return result;\n  }\n};\n\n// community-modules/core/src/vanillaFrameworkOverrides.ts\nvar PASSIVE_EVENTS2 = [\"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\"];\nvar VanillaFrameworkOverrides = class {\n  constructor(frameworkName = \"javascript\") {\n    this.frameworkName = frameworkName;\n    this.renderingEngine = \"vanilla\";\n    this.wrapIncoming = callback => callback();\n    this.wrapOutgoing = callback => callback();\n  }\n  setInterval(action, timeout) {\n    return new AgPromise(resolve => {\n      resolve(window.setInterval(action, timeout));\n    });\n  }\n  // for Vanilla JS, we just add the event to the element\n  addEventListener(element, type, listener, useCapture) {\n    const isPassive = _includes(PASSIVE_EVENTS2, type);\n    element.addEventListener(type, listener, {\n      capture: !!useCapture,\n      passive: isPassive\n    });\n  }\n  get shouldWrapOutgoing() {\n    return false;\n  }\n  frameworkComponent(name) {\n    return null;\n  }\n  isFrameworkComponent(comp) {\n    return false;\n  }\n  getDocLink(path) {\n    const framework = this.frameworkName === \"solid\" ? \"react\" : this.frameworkName;\n    return `https://www.ag-grid.com/${framework}-data-grid${path ? `/${path}` : \"\"}`;\n  }\n};\n\n// community-modules/core/src/cellNavigationService.ts\nvar CellNavigationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"cellNavigationService\";\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n    this.rowModel = beans.rowModel;\n    this.rowRenderer = beans.rowRenderer;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.paginationService = beans.paginationService;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  // returns null if no cell to focus on, ie at the end of the grid\n  getNextCellToFocus(key, focusedCell, ctrlPressed = false) {\n    if (ctrlPressed) {\n      return this.getNextCellToFocusWithCtrlPressed(key, focusedCell);\n    }\n    return this.getNextCellToFocusWithoutCtrlPressed(key, focusedCell);\n  }\n  getNextCellToFocusWithCtrlPressed(key, focusedCell) {\n    const upKey = key === KeyCode.UP;\n    const downKey = key === KeyCode.DOWN;\n    const leftKey = key === KeyCode.LEFT;\n    let column;\n    let rowIndex;\n    if (upKey || downKey) {\n      rowIndex = upKey ? this.pageBoundsService.getFirstRow() : this.pageBoundsService.getLastRow();\n      column = focusedCell.column;\n    } else {\n      const allColumns = this.visibleColsService.getAllCols();\n      const isRtl = this.gos.get(\"enableRtl\");\n      rowIndex = focusedCell.rowIndex;\n      column = leftKey !== isRtl ? allColumns[0] : _last(allColumns);\n    }\n    return {\n      rowIndex,\n      rowPinned: null,\n      column\n    };\n  }\n  getNextCellToFocusWithoutCtrlPressed(key, focusedCell) {\n    let pointer = focusedCell;\n    let finished = false;\n    while (!finished) {\n      switch (key) {\n        case KeyCode.UP:\n          pointer = this.getCellAbove(pointer);\n          break;\n        case KeyCode.DOWN:\n          pointer = this.getCellBelow(pointer);\n          break;\n        case KeyCode.RIGHT:\n          if (this.gos.get(\"enableRtl\")) {\n            pointer = this.getCellToLeft(pointer);\n          } else {\n            pointer = this.getCellToRight(pointer);\n          }\n          break;\n        case KeyCode.LEFT:\n          if (this.gos.get(\"enableRtl\")) {\n            pointer = this.getCellToRight(pointer);\n          } else {\n            pointer = this.getCellToLeft(pointer);\n          }\n          break;\n        default:\n          pointer = null;\n          _warnOnce(\"unknown key for navigation \", key);\n          break;\n      }\n      if (pointer) {\n        finished = this.isCellGoodToFocusOn(pointer);\n      } else {\n        finished = true;\n      }\n    }\n    return pointer;\n  }\n  isCellGoodToFocusOn(gridCell) {\n    const column = gridCell.column;\n    let rowNode;\n    switch (gridCell.rowPinned) {\n      case \"top\":\n        rowNode = this.pinnedRowModel.getPinnedTopRow(gridCell.rowIndex);\n        break;\n      case \"bottom\":\n        rowNode = this.pinnedRowModel.getPinnedBottomRow(gridCell.rowIndex);\n        break;\n      default:\n        rowNode = this.rowModel.getRow(gridCell.rowIndex);\n        break;\n    }\n    if (!rowNode) {\n      return false;\n    }\n    const suppressNavigable = column.isSuppressNavigable(rowNode);\n    return !suppressNavigable;\n  }\n  getCellToLeft(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const colToLeft = this.visibleColsService.getColBefore(lastCell.column);\n    if (!colToLeft) {\n      return null;\n    }\n    return {\n      rowIndex: lastCell.rowIndex,\n      column: colToLeft,\n      rowPinned: lastCell.rowPinned\n    };\n  }\n  getCellToRight(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const colToRight = this.visibleColsService.getColAfter(lastCell.column);\n    if (!colToRight) {\n      return null;\n    }\n    return {\n      rowIndex: lastCell.rowIndex,\n      column: colToRight,\n      rowPinned: lastCell.rowPinned\n    };\n  }\n  getRowBelow(rowPosition) {\n    const index = rowPosition.rowIndex;\n    const pinned = rowPosition.rowPinned;\n    if (this.isLastRowInContainer(rowPosition)) {\n      switch (pinned) {\n        case \"bottom\":\n          return null;\n        case \"top\":\n          if (this.rowModel.isRowsToRender()) {\n            return {\n              rowIndex: this.pageBoundsService.getFirstRow(),\n              rowPinned: null\n            };\n          }\n          if (this.pinnedRowModel.isRowsToRender(\"bottom\")) {\n            return {\n              rowIndex: 0,\n              rowPinned: \"bottom\"\n            };\n          }\n          return null;\n        default:\n          if (this.pinnedRowModel.isRowsToRender(\"bottom\")) {\n            return {\n              rowIndex: 0,\n              rowPinned: \"bottom\"\n            };\n          }\n          return null;\n      }\n    }\n    const rowNode = this.rowModel.getRow(rowPosition.rowIndex);\n    const nextStickyPosition = this.getNextStickyPosition(rowNode);\n    if (nextStickyPosition) {\n      return nextStickyPosition;\n    }\n    return {\n      rowIndex: index + 1,\n      rowPinned: pinned\n    };\n  }\n  getNextStickyPosition(rowNode, up) {\n    if (!this.gos.isGroupRowsSticky() || !rowNode || !rowNode.sticky) {\n      return;\n    }\n    const isTopCtrls = this.rowRenderer.getStickyTopRowCtrls().some(ctrl => ctrl.getRowNode().rowIndex === rowNode.rowIndex);\n    let stickyRowCtrls = [];\n    if (isTopCtrls) {\n      stickyRowCtrls = [...this.rowRenderer.getStickyTopRowCtrls()].sort((a, b) => a.getRowNode().rowIndex - b.getRowNode().rowIndex);\n    } else {\n      stickyRowCtrls = [...this.rowRenderer.getStickyBottomRowCtrls()].sort((a, b) => b.getRowNode().rowIndex - a.getRowNode().rowIndex);\n    }\n    const diff = up ? -1 : 1;\n    const idx = stickyRowCtrls.findIndex(ctrl => ctrl.getRowNode().rowIndex === rowNode.rowIndex);\n    const nextCtrl = stickyRowCtrls[idx + diff];\n    if (nextCtrl) {\n      return {\n        rowIndex: nextCtrl.getRowNode().rowIndex,\n        rowPinned: null\n      };\n    }\n  }\n  getCellBelow(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const rowBelow = this.getRowBelow(lastCell);\n    if (rowBelow) {\n      return {\n        rowIndex: rowBelow.rowIndex,\n        column: lastCell.column,\n        rowPinned: rowBelow.rowPinned\n      };\n    }\n    return null;\n  }\n  isLastRowInContainer(rowPosition) {\n    const pinned = rowPosition.rowPinned;\n    const index = rowPosition.rowIndex;\n    if (pinned === \"top\") {\n      const lastTopIndex = this.pinnedRowModel.getPinnedTopRowNodes().length - 1;\n      return lastTopIndex <= index;\n    }\n    if (pinned === \"bottom\") {\n      const lastBottomIndex = this.pinnedRowModel.getPinnedBottomRowNodes().length - 1;\n      return lastBottomIndex <= index;\n    }\n    const lastBodyIndex = this.pageBoundsService.getLastRow();\n    return lastBodyIndex <= index;\n  }\n  getRowAbove(rowPosition) {\n    const index = rowPosition.rowIndex;\n    const pinned = rowPosition.rowPinned;\n    const isFirstRow = pinned ? index === 0 : index === this.pageBoundsService.getFirstRow();\n    if (isFirstRow) {\n      if (pinned === \"top\") {\n        return null;\n      }\n      if (!pinned) {\n        if (this.pinnedRowModel.isRowsToRender(\"top\")) {\n          return this.getLastFloatingTopRow();\n        }\n        return null;\n      }\n      if (this.rowModel.isRowsToRender()) {\n        return this.getLastBodyCell();\n      }\n      if (this.pinnedRowModel.isRowsToRender(\"top\")) {\n        return this.getLastFloatingTopRow();\n      }\n      return null;\n    }\n    const rowNode = this.rowModel.getRow(rowPosition.rowIndex);\n    const nextStickyPosition = this.getNextStickyPosition(rowNode, true);\n    if (nextStickyPosition) {\n      return nextStickyPosition;\n    }\n    return {\n      rowIndex: index - 1,\n      rowPinned: pinned\n    };\n  }\n  getCellAbove(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const rowAbove = this.getRowAbove({\n      rowIndex: lastCell.rowIndex,\n      rowPinned: lastCell.rowPinned\n    });\n    if (rowAbove) {\n      return {\n        rowIndex: rowAbove.rowIndex,\n        column: lastCell.column,\n        rowPinned: rowAbove.rowPinned\n      };\n    }\n    return null;\n  }\n  getLastBodyCell() {\n    const lastBodyRow = this.pageBoundsService.getLastRow();\n    return {\n      rowIndex: lastBodyRow,\n      rowPinned: null\n    };\n  }\n  getLastFloatingTopRow() {\n    const lastFloatingRow = this.pinnedRowModel.getPinnedTopRowNodes().length - 1;\n    return {\n      rowIndex: lastFloatingRow,\n      rowPinned: \"top\"\n    };\n  }\n  getNextTabbedCell(gridCell, backwards) {\n    if (backwards) {\n      return this.getNextTabbedCellBackwards(gridCell);\n    }\n    return this.getNextTabbedCellForwards(gridCell);\n  }\n  getNextTabbedCellForwards(gridCell) {\n    const displayedColumns = this.visibleColsService.getAllCols();\n    let newRowIndex = gridCell.rowIndex;\n    let newFloating = gridCell.rowPinned;\n    let newColumn = this.visibleColsService.getColAfter(gridCell.column);\n    if (!newColumn) {\n      newColumn = displayedColumns[0];\n      const rowBelow = this.getRowBelow(gridCell);\n      if (_missing(rowBelow)) {\n        return null;\n      }\n      if (!rowBelow.rowPinned && !(this.paginationService?.isRowInPage(rowBelow) ?? true)) {\n        return null;\n      }\n      newRowIndex = rowBelow ? rowBelow.rowIndex : null;\n      newFloating = rowBelow ? rowBelow.rowPinned : null;\n    }\n    return {\n      rowIndex: newRowIndex,\n      column: newColumn,\n      rowPinned: newFloating\n    };\n  }\n  getNextTabbedCellBackwards(gridCell) {\n    const displayedColumns = this.visibleColsService.getAllCols();\n    let newRowIndex = gridCell.rowIndex;\n    let newFloating = gridCell.rowPinned;\n    let newColumn = this.visibleColsService.getColBefore(gridCell.column);\n    if (!newColumn) {\n      newColumn = _last(displayedColumns);\n      const rowAbove = this.getRowAbove({\n        rowIndex: gridCell.rowIndex,\n        rowPinned: gridCell.rowPinned\n      });\n      if (_missing(rowAbove)) {\n        return null;\n      }\n      if (!rowAbove.rowPinned && !(this.paginationService?.isRowInPage(rowAbove) ?? true)) {\n        return null;\n      }\n      newRowIndex = rowAbove ? rowAbove.rowIndex : null;\n      newFloating = rowAbove ? rowAbove.rowPinned : null;\n    }\n    return {\n      rowIndex: newRowIndex,\n      column: newColumn,\n      rowPinned: newFloating\n    };\n  }\n};\n\n// community-modules/core/src/api/apiFunctionService.ts\nfunction dispatchEvent(beans, event) {\n  beans.eventService.dispatchEvent(event);\n}\nvar ApiFunctionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"apiFunctionService\";\n    this.functions = {\n      // this is used by frameworks\n      // also used by aligned grids to identify a grid api instance\n      dispatchEvent\n    };\n    this.isDestroyed = false;\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.preDestroyLink = this.frameworkOverrides.getDocLink(\"grid-lifecycle/#grid-pre-destroyed\");\n  }\n  callFunction(functionName, args) {\n    const func = this.functions[functionName];\n    if (func) {\n      return func.apply(func, [this.beans, ...args]);\n    }\n    if (this.isDestroyed) {\n      return this.destroyedHandler(functionName);\n    }\n    if (this.isFrameworkMethod(functionName)) {\n      return void 0;\n    }\n    this.beans.validationService?.warnMissingApiFunction(functionName);\n    return void 0;\n  }\n  addFunction(functionName, func) {\n    const {\n      validationService\n    } = this.beans;\n    if (validationService) {\n      func = validationService.validateApiFunction(functionName, func);\n    }\n    this.functions[functionName] = func;\n  }\n  destroy() {\n    this.functions = {};\n    this.isDestroyed = true;\n    super.destroy();\n  }\n  destroyedHandler(functionName) {\n    if (functionName === \"isDestroyed\") {\n      return true;\n    }\n    if (functionName === \"destroy\") {\n      return;\n    }\n    _warnOnce(`Grid API function ${functionName}() cannot be called as the grid has been destroyed.\nEither clear local references to the grid api, when it is destroyed, or check gridApi.isDestroyed() to avoid calling methods against a destroyed grid.\nTo run logic when the grid is about to be destroyed use the gridPreDestroy event. See: ${this.preDestroyLink}`);\n    return;\n  }\n  isFrameworkMethod(functionName) {\n    return [\"preWireBeans\", \"wireBeans\", \"preConstruct\", \"postConstruct\"].includes(functionName);\n  }\n};\n\n// community-modules/core/src/api/apiUtils.ts\nfunction createApi(context) {\n  const apiFunctionService = context.getBean(\"apiFunctionService\");\n  return new Proxy(apiFunctionService, {\n    get(target, prop) {\n      if (prop === \"then\") {\n        return;\n      }\n      return (...args) => target.callFunction(prop, args);\n    }\n  });\n}\nfunction createApiProxy(context) {\n  return {\n    beanName: \"gridApi\",\n    bean: createApi(context)\n  };\n}\n\n// community-modules/core/src/columns/columnDefFactory.ts\nvar ColumnDefFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnDefFactory\";\n  }\n  buildColumnDefs(cols, rowGroupColumns, pivotColumns) {\n    const res = [];\n    const colGroupDefs = {};\n    cols.forEach(col => {\n      const colDef = this.createDefFromColumn(col, rowGroupColumns, pivotColumns);\n      let addToResult = true;\n      let childDef = colDef;\n      let pointer = col.getOriginalParent();\n      let lastPointer = null;\n      while (pointer) {\n        let parentDef = null;\n        if (pointer.isPadding()) {\n          pointer = pointer.getOriginalParent();\n          continue;\n        }\n        const existingParentDef = colGroupDefs[pointer.getGroupId()];\n        if (existingParentDef) {\n          existingParentDef.children.push(childDef);\n          addToResult = false;\n          break;\n        }\n        parentDef = this.createDefFromGroup(pointer);\n        if (parentDef) {\n          parentDef.children = [childDef];\n          colGroupDefs[parentDef.groupId] = parentDef;\n          childDef = parentDef;\n          pointer = pointer.getOriginalParent();\n        }\n        if (pointer != null && lastPointer === pointer) {\n          addToResult = false;\n          break;\n        }\n        lastPointer = pointer;\n      }\n      if (addToResult) {\n        res.push(childDef);\n      }\n    });\n    return res;\n  }\n  createDefFromGroup(group) {\n    const defCloned = _deepCloneDefinition(group.getColGroupDef(), [\"children\"]);\n    if (defCloned) {\n      defCloned.groupId = group.getGroupId();\n    }\n    return defCloned;\n  }\n  createDefFromColumn(col, rowGroupColumns, pivotColumns) {\n    const colDefCloned = _deepCloneDefinition(col.getColDef());\n    colDefCloned.colId = col.getColId();\n    colDefCloned.width = col.getActualWidth();\n    colDefCloned.rowGroup = col.isRowGroupActive();\n    colDefCloned.rowGroupIndex = col.isRowGroupActive() ? rowGroupColumns.indexOf(col) : null;\n    colDefCloned.pivot = col.isPivotActive();\n    colDefCloned.pivotIndex = col.isPivotActive() ? pivotColumns.indexOf(col) : null;\n    colDefCloned.aggFunc = col.isValueActive() ? col.getAggFunc() : null;\n    colDefCloned.hide = col.isVisible() ? void 0 : true;\n    colDefCloned.pinned = col.isPinned() ? col.getPinned() : null;\n    colDefCloned.sort = col.getSort() ? col.getSort() : null;\n    colDefCloned.sortIndex = col.getSortIndex() != null ? col.getSortIndex() : null;\n    return colDefCloned;\n  }\n};\n\n// community-modules/core/src/columns/columnEventDispatcher.ts\nvar ColumnEventDispatcher = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnEventDispatcher\";\n  }\n  visibleCols() {\n    const event = {\n      type: \"displayedColumnsChanged\"\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  gridColumns() {\n    const event = {\n      type: \"gridColumnsChanged\"\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  headerHeight(col) {\n    const event = {\n      type: \"columnHeaderHeightChanged\",\n      column: col,\n      columns: [col],\n      source: \"autosizeColumnHeaderHeight\"\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  groupOpened(impactedGroups) {\n    const event = {\n      type: \"columnGroupOpened\",\n      columnGroup: impactedGroups.length === 1 ? impactedGroups[0] : void 0,\n      columnGroups: impactedGroups\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  rowGroupChanged(impactedColumns, source) {\n    const event = {\n      type: \"columnRowGroupChanged\",\n      columns: impactedColumns,\n      column: impactedColumns.length === 1 ? impactedColumns[0] : null,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  genericColumnEvent(eventType, masterList, source) {\n    const event = {\n      type: eventType,\n      columns: masterList,\n      column: masterList.length === 1 ? masterList[0] : null,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  pivotModeChanged() {\n    const event = {\n      type: \"columnPivotModeChanged\"\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  virtualColumnsChanged(afterScroll) {\n    const event = {\n      type: \"virtualColumnsChanged\",\n      afterScroll\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  newColumnsLoaded(source) {\n    const newColumnsLoadedEvent = {\n      type: \"newColumnsLoaded\",\n      source\n    };\n    this.eventService.dispatchEvent(newColumnsLoadedEvent);\n  }\n  everythingChanged(source) {\n    const eventEverythingChanged = {\n      type: \"columnEverythingChanged\",\n      source\n    };\n    this.eventService.dispatchEvent(eventEverythingChanged);\n  }\n  columnMoved(params) {\n    const {\n      movedColumns,\n      source,\n      toIndex,\n      finished\n    } = params;\n    const event = {\n      type: \"columnMoved\",\n      columns: movedColumns,\n      column: movedColumns && movedColumns.length === 1 ? movedColumns[0] : null,\n      toIndex,\n      finished,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  columnPinned(changedColumns, source) {\n    if (!changedColumns.length) {\n      return;\n    }\n    const column = changedColumns.length === 1 ? changedColumns[0] : null;\n    const pinned = this.getCommonValue(changedColumns, col => col.getPinned());\n    const event = {\n      type: \"columnPinned\",\n      // mistake in typing, 'undefined' should be allowed, as 'null' means 'not pinned'\n      pinned: pinned != null ? pinned : null,\n      columns: changedColumns,\n      column,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  columnVisible(changedColumns, source) {\n    if (!changedColumns.length) {\n      return;\n    }\n    const column = changedColumns.length === 1 ? changedColumns[0] : null;\n    const visible = this.getCommonValue(changedColumns, col => col.isVisible());\n    const event = {\n      type: \"columnVisible\",\n      visible,\n      columns: changedColumns,\n      column,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  getCommonValue(cols, valueGetter) {\n    if (!cols || cols.length == 0) {\n      return void 0;\n    }\n    const firstValue = valueGetter(cols[0]);\n    for (let i = 1; i < cols.length; i++) {\n      if (firstValue !== valueGetter(cols[i])) {\n        return void 0;\n      }\n    }\n    return firstValue;\n  }\n  columnChanged(type, columns, source) {\n    const event = {\n      type,\n      columns,\n      column: columns && columns.length == 1 ? columns[0] : null,\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  columnResized(columns, finished, source, flexColumns = null) {\n    if (columns && columns.length) {\n      const event = {\n        type: \"columnResized\",\n        columns,\n        column: columns.length === 1 ? columns[0] : null,\n        flexColumns,\n        finished,\n        source\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n};\n\n// community-modules/core/src/columns/columnGetStateService.ts\nvar ColumnGetStateService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnGetStateService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.funcColsService = beans.funcColsService;\n  }\n  getColumnState() {\n    const primaryCols = this.columnModel.getColDefCols();\n    if (_missing(primaryCols) || !this.columnModel.isAlive()) {\n      return [];\n    }\n    const colsForState = this.columnModel.getAllCols();\n    const res = colsForState.map(this.createStateItemFromColumn.bind(this));\n    this.orderColumnStateList(res);\n    return res;\n  }\n  createStateItemFromColumn(column) {\n    const rowGorupColumns = this.funcColsService.getRowGroupColumns();\n    const pivotColumns = this.funcColsService.getPivotColumns();\n    const rowGroupIndex = column.isRowGroupActive() ? rowGorupColumns.indexOf(column) : null;\n    const pivotIndex = column.isPivotActive() ? pivotColumns.indexOf(column) : null;\n    const aggFunc = column.isValueActive() ? column.getAggFunc() : null;\n    const sort = column.getSort() != null ? column.getSort() : null;\n    const sortIndex = column.getSortIndex() != null ? column.getSortIndex() : null;\n    const flex = column.getFlex() != null && column.getFlex() > 0 ? column.getFlex() : null;\n    const res = {\n      colId: column.getColId(),\n      width: column.getActualWidth(),\n      hide: !column.isVisible(),\n      pinned: column.getPinned(),\n      sort,\n      sortIndex,\n      aggFunc,\n      rowGroup: column.isRowGroupActive(),\n      rowGroupIndex,\n      pivot: column.isPivotActive(),\n      pivotIndex,\n      flex\n    };\n    return res;\n  }\n  orderColumnStateList(columnStateList) {\n    const gridColumns = this.columnModel.getCols();\n    const colIdToGridIndexMap = new Map(gridColumns.map((col, index) => [col.getColId(), index]));\n    columnStateList.sort((itemA, itemB) => {\n      const posA = colIdToGridIndexMap.has(itemA.colId) ? colIdToGridIndexMap.get(itemA.colId) : -1;\n      const posB = colIdToGridIndexMap.has(itemB.colId) ? colIdToGridIndexMap.get(itemB.colId) : -1;\n      return posA - posB;\n    });\n  }\n};\n\n// community-modules/core/src/columns/columnGroupStateService.ts\nvar ColumnGroupStateService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnGroupStateService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnAnimationService = beans.columnAnimationService;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  getColumnGroupState() {\n    const columnGroupState = [];\n    const gridBalancedTree = this.columnModel.getColTree();\n    depthFirstOriginalTreeSearch(null, gridBalancedTree, node => {\n      if (isProvidedColumnGroup(node)) {\n        columnGroupState.push({\n          groupId: node.getGroupId(),\n          open: node.isExpanded()\n        });\n      }\n    });\n    return columnGroupState;\n  }\n  resetColumnGroupState(source) {\n    const primaryColumnTree = this.columnModel.getColDefColTree();\n    if (!primaryColumnTree) {\n      return;\n    }\n    const stateItems = [];\n    depthFirstOriginalTreeSearch(null, primaryColumnTree, child => {\n      if (isProvidedColumnGroup(child)) {\n        const colGroupDef = child.getColGroupDef();\n        const groupState = {\n          groupId: child.getGroupId(),\n          open: !colGroupDef ? void 0 : colGroupDef.openByDefault\n        };\n        stateItems.push(groupState);\n      }\n    });\n    this.setColumnGroupState(stateItems, source);\n  }\n  setColumnGroupState(stateItems, source) {\n    const gridBalancedTree = this.columnModel.getColTree();\n    if (!gridBalancedTree) {\n      return;\n    }\n    this.columnAnimationService.start();\n    const impactedGroups = [];\n    stateItems.forEach(stateItem => {\n      const groupKey = stateItem.groupId;\n      const newValue = stateItem.open;\n      const providedColumnGroup = this.columnModel.getProvidedColGroup(groupKey);\n      if (!providedColumnGroup) {\n        return;\n      }\n      if (providedColumnGroup.isExpanded() === newValue) {\n        return;\n      }\n      providedColumnGroup.setExpanded(newValue);\n      impactedGroups.push(providedColumnGroup);\n    });\n    this.visibleColsService.refresh(source, true);\n    if (impactedGroups.length) {\n      this.eventDispatcher.groupOpened(impactedGroups);\n    }\n    this.columnAnimationService.finish();\n  }\n};\n\n// community-modules/core/src/columns/columnViewportService.ts\nvar ColumnViewportService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnViewportService\";\n    // cols in center that are in the viewport\n    this.colsWithinViewport = [];\n    // same as colsWithinViewport, except we always include columns with headerAutoHeight\n    this.headerColsWithinViewport = [];\n    // A hash key to keep track of changes in viewport columns\n    this.colsWithinViewportHash = \"\";\n    // all columns & groups to be rendered, index by row.\n    // used by header rows to get all items to render for that row.\n    this.rowsOfHeadersToRenderLeft = {};\n    this.rowsOfHeadersToRenderRight = {};\n    this.rowsOfHeadersToRenderCenter = {};\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n    this.columnModel = beans.columnModel;\n    this.eventDispatcher = beans.columnEventDispatcher;\n  }\n  postConstruct() {\n    this.suppressColumnVirtualisation = this.gos.get(\"suppressColumnVirtualisation\");\n  }\n  setScrollPosition(scrollWidth, scrollPosition, afterScroll = false) {\n    const bodyWidthDirty = this.visibleColsService.isBodyWidthDirty();\n    const noChange = scrollWidth === this.scrollWidth && scrollPosition === this.scrollPosition && !bodyWidthDirty;\n    if (noChange) {\n      return;\n    }\n    this.scrollWidth = scrollWidth;\n    this.scrollPosition = scrollPosition;\n    this.visibleColsService.setBodyWidthDirty();\n    if (this.gos.get(\"enableRtl\")) {\n      const bodyWidth = this.visibleColsService.getBodyContainerWidth();\n      this.viewportLeft = bodyWidth - this.scrollPosition - this.scrollWidth;\n      this.viewportRight = bodyWidth - this.scrollPosition;\n    } else {\n      this.viewportLeft = this.scrollPosition;\n      this.viewportRight = this.scrollWidth + this.scrollPosition;\n    }\n    if (this.columnModel.isReady()) {\n      this.checkViewportColumns(afterScroll);\n    }\n  }\n  getHeadersToRender(type, dept) {\n    let result;\n    switch (type) {\n      case \"left\":\n        result = this.rowsOfHeadersToRenderLeft[dept];\n        break;\n      case \"right\":\n        result = this.rowsOfHeadersToRenderRight[dept];\n        break;\n      default:\n        result = this.rowsOfHeadersToRenderCenter[dept];\n        break;\n    }\n    return result || [];\n  }\n  extractViewportColumns() {\n    const displayedColumnsCenter = this.visibleColsService.getCenterCols();\n    if (this.isColumnVirtualisationSuppressed()) {\n      this.colsWithinViewport = displayedColumnsCenter;\n      this.headerColsWithinViewport = displayedColumnsCenter;\n    } else {\n      this.colsWithinViewport = displayedColumnsCenter.filter(this.isColumnInRowViewport.bind(this));\n      this.headerColsWithinViewport = displayedColumnsCenter.filter(this.isColumnInHeaderViewport.bind(this));\n    }\n  }\n  isColumnVirtualisationSuppressed() {\n    return this.suppressColumnVirtualisation || this.viewportRight === 0;\n  }\n  clear() {\n    this.rowsOfHeadersToRenderLeft = {};\n    this.rowsOfHeadersToRenderRight = {};\n    this.rowsOfHeadersToRenderCenter = {};\n    this.colsWithinViewportHash = \"\";\n  }\n  isColumnInHeaderViewport(col) {\n    if (col.isAutoHeaderHeight()) {\n      return true;\n    }\n    return this.isColumnInRowViewport(col);\n  }\n  isColumnInRowViewport(col) {\n    if (col.isAutoHeight()) {\n      return true;\n    }\n    const columnLeft = col.getLeft() || 0;\n    const columnRight = columnLeft + col.getActualWidth();\n    const leftBounds = this.viewportLeft - 200;\n    const rightBounds = this.viewportRight + 200;\n    const columnToMuchLeft = columnLeft < leftBounds && columnRight < leftBounds;\n    const columnToMuchRight = columnLeft > rightBounds && columnRight > rightBounds;\n    return !columnToMuchLeft && !columnToMuchRight;\n  }\n  // used by Grid API only\n  getViewportColumns() {\n    const leftCols = this.visibleColsService.getLeftCols();\n    const rightCols = this.visibleColsService.getRightCols();\n    const res = this.colsWithinViewport.concat(leftCols).concat(rightCols);\n    return res;\n  }\n  // + rowRenderer\n  // if we are not column spanning, this just returns back the virtual centre columns,\n  // however if we are column spanning, then different rows can have different virtual\n  // columns, so we have to work out the list for each individual row.\n  getColsWithinViewport(rowNode) {\n    if (!this.columnModel.isColSpanActive()) {\n      return this.colsWithinViewport;\n    }\n    const emptySpaceBeforeColumn = col => {\n      const left = col.getLeft();\n      return _exists(left) && left > this.viewportLeft;\n    };\n    const inViewportCallback = this.isColumnVirtualisationSuppressed() ? null : this.isColumnInRowViewport.bind(this);\n    const displayedColumnsCenter = this.visibleColsService.getColsCenter();\n    return this.visibleColsService.getColsForRow(rowNode, displayedColumnsCenter, inViewportCallback, emptySpaceBeforeColumn);\n  }\n  // checks what columns are currently displayed due to column virtualisation. dispatches an event\n  // if the list of columns has changed.\n  // + setColumnWidth(), setViewportPosition(), setColumnDefs(), sizeColumnsToFit()\n  checkViewportColumns(afterScroll = false) {\n    const viewportColumnsChanged = this.extractViewport();\n    if (viewportColumnsChanged) {\n      this.eventDispatcher.virtualColumnsChanged(afterScroll);\n    }\n  }\n  calculateHeaderRows() {\n    this.rowsOfHeadersToRenderLeft = {};\n    this.rowsOfHeadersToRenderRight = {};\n    this.rowsOfHeadersToRenderCenter = {};\n    const renderedColIds = {};\n    const renderedColsLeft = this.visibleColsService.getLeftCols();\n    const renderedColsRight = this.visibleColsService.getRightCols();\n    const allRenderedCols = this.headerColsWithinViewport.concat(renderedColsLeft).concat(renderedColsRight);\n    allRenderedCols.forEach(col => renderedColIds[col.getId()] = true);\n    const testGroup = (children, result, dept) => {\n      let returnValue = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        let addThisItem = false;\n        if (isColumn(child)) {\n          addThisItem = renderedColIds[child.getId()] === true;\n        } else {\n          const columnGroup = child;\n          const displayedChildren = columnGroup.getDisplayedChildren();\n          if (displayedChildren) {\n            addThisItem = testGroup(displayedChildren, result, dept + 1);\n          }\n        }\n        if (addThisItem) {\n          returnValue = true;\n          if (!result[dept]) {\n            result[dept] = [];\n          }\n          result[dept].push(child);\n        }\n      }\n      return returnValue;\n    };\n    testGroup(this.visibleColsService.getTreeLeft(), this.rowsOfHeadersToRenderLeft, 0);\n    testGroup(this.visibleColsService.getTreeRight(), this.rowsOfHeadersToRenderRight, 0);\n    testGroup(this.visibleColsService.getTreeCenter(), this.rowsOfHeadersToRenderCenter, 0);\n  }\n  extractViewport() {\n    const hashColumn = c => `${c.getId()}-${c.getPinned() || \"normal\"}`;\n    this.extractViewportColumns();\n    const newHash = this.getViewportColumns().map(hashColumn).join(\"#\");\n    const changed = this.colsWithinViewportHash !== newHash;\n    if (changed) {\n      this.colsWithinViewportHash = newHash;\n      this.calculateHeaderRows();\n    }\n    return changed;\n  }\n};\n\n// community-modules/core/src/components/framework/agComponentUtils.ts\nvar AgComponentUtils = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"agComponentUtils\";\n  }\n  wireBeans(beans) {\n    this.componentMetadataProvider = beans.componentMetadataProvider;\n  }\n  adaptFunction(propertyName, jsCompFunc) {\n    const metadata = this.componentMetadataProvider.retrieve(propertyName);\n    if (metadata && metadata.functionAdapter) {\n      return metadata.functionAdapter(jsCompFunc);\n    }\n    return null;\n  }\n  adaptCellRendererFunction(callback) {\n    class Adapter {\n      refresh() {\n        return false;\n      }\n      getGui() {\n        return this.eGui;\n      }\n      init(params) {\n        const callbackResult = callback(params);\n        const type = typeof callbackResult;\n        if (type === \"string\" || type === \"number\" || type === \"boolean\") {\n          this.eGui = _loadTemplate(\"<span>\" + callbackResult + \"</span>\");\n          return;\n        }\n        if (callbackResult == null) {\n          this.eGui = _loadTemplate(\"<span></span>\");\n          return;\n        }\n        this.eGui = callbackResult;\n      }\n    }\n    return Adapter;\n  }\n  doesImplementIComponent(candidate) {\n    if (!candidate) {\n      return false;\n    }\n    return candidate.prototype && \"getGui\" in candidate.prototype;\n  }\n};\n\n// community-modules/core/src/components/framework/componentMetadataProvider.ts\nvar ComponentMetadataProvider = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"componentMetadataProvider\";\n  }\n  wireBeans(beans) {\n    this.agComponentUtils = beans.agComponentUtils;\n  }\n  postConstruct() {\n    this.componentMetaData = {\n      dateComponent: {\n        mandatoryMethodList: [\"getDate\", \"setDate\"],\n        optionalMethodList: [\"afterGuiAttached\", \"setInputPlaceholder\", \"setInputAriaLabel\", \"setDisabled\", \"onParamsUpdated\", \"refresh\"]\n      },\n      detailCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      headerComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      headerGroupComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      loadingCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      loadingOverlayComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      noRowsOverlayComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      floatingFilterComponent: {\n        mandatoryMethodList: [\"onParentModelChanged\"],\n        optionalMethodList: [\"afterGuiAttached\", \"onParamsUpdated\", \"refresh\"]\n      },\n      cellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\", \"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      cellEditor: {\n        mandatoryMethodList: [\"getValue\"],\n        optionalMethodList: [\"isPopup\", \"isCancelBeforeStart\", \"isCancelAfterEnd\", \"getPopupPosition\", \"focusIn\", \"focusOut\", \"afterGuiAttached\", \"refresh\"]\n      },\n      innerRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      fullWidthCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\", \"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      groupRowRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      filter: {\n        mandatoryMethodList: [\"isFilterActive\", \"doesFilterPass\", \"getModel\", \"setModel\"],\n        optionalMethodList: [\"afterGuiAttached\", \"afterGuiDetached\", \"onNewRowsLoaded\", \"getModelAsString\", \"onFloatingFilterChanged\", \"onAnyFilterChanged\", \"refresh\"]\n      },\n      statusPanel: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      toolPanel: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\", \"getState\"]\n      },\n      tooltipComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      menuItem: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"setActive\", \"select\", \"setExpanded\", \"configureDefaults\"]\n      }\n    };\n  }\n  retrieve(name) {\n    return this.componentMetaData[name];\n  }\n};\n\n// community-modules/core/src/context/gridBeanComparator.ts\nvar orderedCoreBeans = [\n// core beans only\n\"rowPositionUtils\", \"cellPositionUtils\", \"headerPositionUtils\", \"paginationAutoPageSizeService\", \"apiFunctionService\", \"gridApi\", \"userComponentRegistry\", \"agComponentUtils\", \"componentMetadataProvider\", \"resizeObserverService\", \"userComponentFactory\", \"rowContainerHeightService\", \"horizontalResizeService\", \"localeService\", \"validationService\", \"pinnedRowModel\", \"dragService\", \"visibleColsService\", \"eventService\", \"gos\", \"popupService\", \"selectionService\", \"columnFilterService\", \"quickFilterService\", \"filterManager\", \"columnModel\", \"headerNavigationService\", \"pageBoundsService\", \"paginationService\", \"pageBoundsListener\", \"rowRenderer\", \"expressionService\", \"columnFactory\", \"alignedGridsService\", \"navigationService\", \"valueCache\", \"valueService\", \"loggerFactory\", \"autoWidthCalculator\", \"filterMenuFactory\", \"dragAndDropService\", \"focusService\", \"mouseEventService\", \"environment\", \"cellNavigationService\", \"stylingService\", \"scrollVisibleService\", \"sortController\", \"columnHoverService\", \"columnAnimationService\", \"selectableService\", \"autoColService\", \"changeDetectionService\", \"animationFrameService\", \"undoRedoService\", \"columnDefFactory\", \"rowCssClassCalculator\", \"rowNodeBlockLoader\", \"rowNodeSorter\", \"ctrlsService\", \"pinnedWidthService\", \"rowNodeEventThrottle\", \"ctrlsFactory\", \"dataTypeService\", \"syncService\", \"overlayService\", \"stateService\", \"expansionService\", \"apiEventService\", \"ariaAnnouncementService\", \"menuService\", \"columnApplyStateService\", \"columnEventDispatcher\", \"columnMoveService\", \"columnAutosizeService\", \"columnGetStateService\", \"columnGroupStateService\", \"columnSizeService\", \"funcColsService\", \"columnNameService\", \"columnViewportService\", \"pivotResultColsService\", \"showRowGroupColsService\"];\nvar beanNamePosition = Object.fromEntries(orderedCoreBeans.map((beanName, index) => [beanName, index]));\nfunction gridBeanInitComparator(bean1, bean2) {\n  const index1 = (bean1.beanName ? beanNamePosition[bean1.beanName] : void 0) ?? Number.MAX_SAFE_INTEGER;\n  const index2 = (bean2.beanName ? beanNamePosition[bean2.beanName] : void 0) ?? Number.MAX_SAFE_INTEGER;\n  return index1 - index2;\n}\nfunction gridBeanDestroyComparator(bean1, bean2) {\n  return bean1?.beanName === \"gridDestroyService\" ? -1 : 0;\n}\n\n// community-modules/core/src/ctrlsFactory.ts\nvar CtrlsFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"ctrlsFactory\";\n    this.registry = {};\n  }\n  register(meta) {\n    this.registry[meta.name] = meta.classImp;\n  }\n  getInstance(name, ...args) {\n    const ControllerClass = this.registry[name];\n    if (ControllerClass == null) {\n      return void 0;\n    }\n    return new ControllerClass(...args);\n  }\n};\n\n// community-modules/core/src/ctrlsService.ts\nvar CtrlsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"ctrlsService\";\n    this.params = {};\n    this.ready = false;\n    this.readyCallbacks = [];\n  }\n  checkReady() {\n    const params = this.params;\n    this.ready = params.gridCtrl != null && params.gridBodyCtrl != null && params.center != null && params.left != null && params.right != null && params.bottomCenter != null && params.bottomLeft != null && params.bottomRight != null && params.topCenter != null && params.topLeft != null && params.topRight != null && params.stickyTopCenter != null && params.stickyTopLeft != null && params.stickyTopRight != null && params.stickyBottomCenter != null && params.stickyBottomLeft != null && params.stickyBottomRight != null && params.centerHeader != null && params.leftHeader != null && params.rightHeader != null && params.fakeHScrollComp != null && params.fakeVScrollComp != null && params.gridHeaderCtrl != null;\n    if (this.ready) {\n      this.readyCallbacks.forEach(c => c(params));\n      this.readyCallbacks.length = 0;\n    }\n  }\n  whenReady(callback) {\n    if (this.ready) {\n      callback(this.params);\n    } else {\n      this.readyCallbacks.push(callback);\n    }\n  }\n  register(ctrlType, ctrl) {\n    this.params[ctrlType] = ctrl;\n    this.checkReady();\n  }\n  registerHeaderContainer(ctrl, pinned) {\n    const params = this.params;\n    switch (pinned) {\n      case \"left\":\n        params.leftHeader = ctrl;\n        break;\n      case \"right\":\n        params.rightHeader = ctrl;\n        break;\n      default:\n        params.centerHeader = ctrl;\n        break;\n    }\n    this.checkReady();\n  }\n  get(ctrlType) {\n    return this.params[ctrlType];\n  }\n  getParams() {\n    return this.params;\n  }\n  getGridBodyCtrl() {\n    return this.params.gridBodyCtrl;\n  }\n  getHeaderRowContainerCtrls() {\n    const {\n      leftHeader,\n      centerHeader,\n      rightHeader\n    } = this.params;\n    return [leftHeader, rightHeader, centerHeader];\n  }\n  getHeaderRowContainerCtrl(pinned) {\n    const params = this.params;\n    switch (pinned) {\n      case \"left\":\n        return params.leftHeader;\n      case \"right\":\n        return params.rightHeader;\n      default:\n        return params.centerHeader;\n    }\n  }\n};\n\n// community-modules/core/src/entities/cellPositionUtils.ts\nvar CellPositionUtils = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"cellPositionUtils\";\n  }\n  createId(cellPosition) {\n    const {\n      rowIndex,\n      rowPinned,\n      column\n    } = cellPosition;\n    return this.createIdFromValues({\n      rowIndex,\n      column,\n      rowPinned\n    });\n  }\n  createIdFromValues(cellPosition) {\n    const {\n      rowIndex,\n      rowPinned,\n      column\n    } = cellPosition;\n    return `${rowIndex}.${rowPinned == null ? \"null\" : rowPinned}.${column.getId()}`;\n  }\n  equals(cellA, cellB) {\n    const colsMatch = cellA.column === cellB.column;\n    const floatingMatch = cellA.rowPinned === cellB.rowPinned;\n    const indexMatch = cellA.rowIndex === cellB.rowIndex;\n    return colsMatch && floatingMatch && indexMatch;\n  }\n};\n\n// community-modules/core/src/entities/rowNodeEventThrottle.ts\nvar RowNodeEventThrottle = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowNodeEventThrottle\";\n    this.events = [];\n  }\n  wireBeans(beans) {\n    this.animationFrameService = beans.animationFrameService;\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    if (this.rowModel.getType() == \"clientSide\") {\n      this.clientSideRowModel = this.rowModel;\n    }\n  }\n  // because the user can call rowNode.setExpanded() many times in one VM turn,\n  // we throttle the calls to ClientSideRowModel using animationFrameService. this means for 100\n  // row nodes getting expanded, we only update the CSRM once, and then we fire all events after\n  // CSRM has updated.\n  //\n  // if we did not do this, then the user could call setExpanded on 100+ rows, causing the grid\n  // to re-render 100+ times, which would be a performance lag.\n  //\n  // we use animationFrameService\n  // rather than debounce() so this will get done if anyone flushes the animationFrameService\n  // (eg user calls api.ensureRowVisible(), which in turn flushes ).\n  dispatchExpanded(event, forceSync) {\n    if (this.clientSideRowModel == null) {\n      this.eventService.dispatchEvent(event);\n      return;\n    }\n    this.events.push(event);\n    const func = () => {\n      if (this.clientSideRowModel) {\n        this.clientSideRowModel.onRowGroupOpened();\n      }\n      this.events.forEach(e => this.eventService.dispatchEvent(e));\n      this.events = [];\n    };\n    if (forceSync) {\n      func();\n    } else {\n      if (this.dispatchExpandedDebounced == null) {\n        this.dispatchExpandedDebounced = this.animationFrameService.debounce(func);\n      }\n      this.dispatchExpandedDebounced();\n    }\n  }\n};\n\n// community-modules/core/src/entities/rowPositionUtils.ts\nvar RowPositionUtils = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowPositionUtils\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  getFirstRow() {\n    let rowIndex = 0;\n    let rowPinned;\n    if (this.pinnedRowModel.getPinnedTopRowCount()) {\n      rowPinned = \"top\";\n    } else if (this.rowModel.getRowCount()) {\n      rowPinned = null;\n      rowIndex = this.pageBoundsService.getFirstRow();\n    } else if (this.pinnedRowModel.getPinnedBottomRowCount()) {\n      rowPinned = \"bottom\";\n    }\n    return rowPinned === void 0 ? null : {\n      rowIndex,\n      rowPinned\n    };\n  }\n  getLastRow() {\n    let rowIndex;\n    let rowPinned = null;\n    const pinnedBottomCount = this.pinnedRowModel.getPinnedBottomRowCount();\n    const pinnedTopCount = this.pinnedRowModel.getPinnedTopRowCount();\n    if (pinnedBottomCount) {\n      rowPinned = \"bottom\";\n      rowIndex = pinnedBottomCount - 1;\n    } else if (this.rowModel.getRowCount()) {\n      rowPinned = null;\n      rowIndex = this.pageBoundsService.getLastRow();\n    } else if (pinnedTopCount) {\n      rowPinned = \"top\";\n      rowIndex = pinnedTopCount - 1;\n    }\n    return rowIndex === void 0 ? null : {\n      rowIndex,\n      rowPinned\n    };\n  }\n  getRowNode(gridRow) {\n    switch (gridRow.rowPinned) {\n      case \"top\":\n        return this.pinnedRowModel.getPinnedTopRowNodes()[gridRow.rowIndex];\n      case \"bottom\":\n        return this.pinnedRowModel.getPinnedBottomRowNodes()[gridRow.rowIndex];\n      default:\n        return this.rowModel.getRow(gridRow.rowIndex);\n    }\n  }\n  sameRow(rowA, rowB) {\n    if (!rowA && !rowB) {\n      return true;\n    }\n    if (rowA && !rowB || !rowA && rowB) {\n      return false;\n    }\n    return rowA.rowIndex === rowB.rowIndex && rowA.rowPinned == rowB.rowPinned;\n  }\n  // tests if this row selection is before the other row selection\n  before(rowA, rowB) {\n    switch (rowA.rowPinned) {\n      case \"top\":\n        if (rowB.rowPinned !== \"top\") {\n          return true;\n        }\n        break;\n      case \"bottom\":\n        if (rowB.rowPinned !== \"bottom\") {\n          return false;\n        }\n        break;\n      default:\n        if (_exists(rowB.rowPinned)) {\n          return rowB.rowPinned !== \"top\";\n        }\n        break;\n    }\n    return rowA.rowIndex < rowB.rowIndex;\n  }\n};\n\n// community-modules/core/src/environment.ts\nvar ROW_HEIGHT = {\n  cssName: \"--ag-row-height\",\n  changeKey: \"rowHeightChanged\",\n  defaultValue: 42\n};\nvar HEADER_HEIGHT = {\n  cssName: \"--ag-header-height\",\n  changeKey: \"headerHeightChanged\",\n  defaultValue: 48\n};\nvar LIST_ITEM_HEIGHT = {\n  cssName: \"--ag-list-item-height\",\n  changeKey: \"listItemHeightChanged\",\n  defaultValue: 24\n};\nvar Environment = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"environment\";\n    this.sizeEls = /* @__PURE__ */new Map();\n    this.lastKnownValues = /* @__PURE__ */new Map();\n    this.themeClasses = [];\n    this.eThemeAncestor = null;\n    this.eMeasurementContainer = null;\n    this.sizesMeasured = false;\n  }\n  wireBeans(beans) {\n    this.resizeObserverService = beans.resizeObserverService;\n    this.eGridDiv = beans.eGridDiv;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"rowHeight\", () => this.refreshRowHeightVariable());\n    this.themeClasses = this.getAncestorThemeClasses();\n    this.setUpThemeClassObservers();\n    this.getSizeEl(ROW_HEIGHT);\n    this.getSizeEl(HEADER_HEIGHT);\n    this.getSizeEl(LIST_ITEM_HEIGHT);\n  }\n  getDefaultRowHeight() {\n    return this.getCSSVariablePixelValue(ROW_HEIGHT);\n  }\n  getDefaultHeaderHeight() {\n    return this.getCSSVariablePixelValue(HEADER_HEIGHT);\n  }\n  getDefaultListItemHeight() {\n    return this.getCSSVariablePixelValue(LIST_ITEM_HEIGHT);\n  }\n  hasMeasuredSizes() {\n    return this.sizesMeasured;\n  }\n  getThemeClasses() {\n    return this.themeClasses;\n  }\n  applyThemeClasses(el) {\n    for (const className of Array.from(el.classList)) {\n      if (className.startsWith(\"ag-theme-\") && !this.themeClasses.includes(className)) {\n        el.classList.remove(className);\n      }\n    }\n    for (const className of this.themeClasses) {\n      if (!el.classList.contains(className)) {\n        el.classList.add(className);\n      }\n    }\n  }\n  getThemeAncestorElement() {\n    return this.eThemeAncestor;\n  }\n  refreshRowHeightVariable() {\n    const oldRowHeight = this.eGridDiv.style.getPropertyValue(\"--ag-line-height\").trim();\n    const height = this.gos.get(\"rowHeight\");\n    if (height == null || isNaN(height) || !isFinite(height)) {\n      if (oldRowHeight !== null) {\n        this.eGridDiv.style.setProperty(\"--ag-line-height\", null);\n      }\n      return -1;\n    }\n    const newRowHeight = `${height}px`;\n    if (oldRowHeight != newRowHeight) {\n      this.eGridDiv.style.setProperty(\"--ag-line-height\", newRowHeight);\n      return height;\n    }\n    return oldRowHeight != \"\" ? parseFloat(oldRowHeight) : -1;\n  }\n  getCSSVariablePixelValue(variable) {\n    const cached = this.lastKnownValues.get(variable);\n    if (cached != null) {\n      return cached;\n    }\n    const measurement = this.measureSizeEl(variable);\n    if (measurement === \"detached\" || measurement === \"no-styles\") {\n      return variable.defaultValue;\n    }\n    this.lastKnownValues.set(variable, measurement);\n    return measurement;\n  }\n  measureSizeEl(variable) {\n    const sizeEl = this.getSizeEl(variable);\n    if (sizeEl.offsetParent == null) {\n      return \"detached\";\n    }\n    const newSize = sizeEl.offsetWidth;\n    if (newSize === NO_VALUE_SENTINEL) return \"no-styles\";\n    this.sizesMeasured = true;\n    return newSize;\n  }\n  getSizeEl(variable) {\n    let sizeEl = this.sizeEls.get(variable);\n    if (sizeEl) {\n      return sizeEl;\n    }\n    let container = this.eMeasurementContainer;\n    if (!container) {\n      container = this.eMeasurementContainer = document.createElement(\"div\");\n      container.className = \"ag-measurement-container\";\n      this.eGridDiv.appendChild(container);\n    }\n    sizeEl = document.createElement(\"div\");\n    sizeEl.style.width = `var(${variable.cssName}, ${NO_VALUE_SENTINEL}px)`;\n    container.appendChild(sizeEl);\n    this.sizeEls.set(variable, sizeEl);\n    let lastMeasurement = this.measureSizeEl(variable);\n    if (lastMeasurement === \"no-styles\") {\n      _warnOnce(`no value for ${variable.cssName}. This usually means that the grid has been initialised before styles have been loaded. The default value of ${variable.defaultValue} will be used and updated when styles load.`);\n    }\n    const unsubscribe = this.resizeObserverService.observeResize(sizeEl, () => {\n      const newMeasurement = this.measureSizeEl(variable);\n      if (newMeasurement === \"detached\" || newMeasurement === \"no-styles\") {\n        return;\n      }\n      this.lastKnownValues.set(variable, newMeasurement);\n      if (newMeasurement !== lastMeasurement) {\n        lastMeasurement = newMeasurement;\n        this.fireGridStylesChangedEvent(variable.changeKey);\n      }\n    });\n    this.addDestroyFunc(() => unsubscribe());\n    return sizeEl;\n  }\n  fireGridStylesChangedEvent(change) {\n    const event = {\n      type: \"gridStylesChanged\",\n      [change]: true\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  setUpThemeClassObservers() {\n    const observer = new MutationObserver(() => {\n      const newThemeClasses = this.getAncestorThemeClasses();\n      if (!arraysEqual(newThemeClasses, this.themeClasses)) {\n        this.themeClasses = newThemeClasses;\n        this.fireGridStylesChangedEvent(\"themeChanged\");\n      }\n    });\n    let node = this.eGridDiv;\n    while (node) {\n      observer.observe(node || this.eGridDiv, {\n        attributes: true,\n        attributeFilter: [\"class\"]\n      });\n      node = node.parentElement;\n    }\n  }\n  getAncestorThemeClasses() {\n    let el = this.eGridDiv;\n    const allThemeClasses = [];\n    this.eThemeAncestor = null;\n    while (el) {\n      const themeClasses = Array.from(el.classList).filter(c => c.startsWith(\"ag-theme-\"));\n      for (const themeClass of themeClasses) {\n        this.eThemeAncestor = el;\n        if (!allThemeClasses.includes(themeClass)) {\n          allThemeClasses.unshift(themeClass);\n        }\n      }\n      el = el.parentElement;\n    }\n    return Object.freeze(allThemeClasses);\n  }\n};\nvar arraysEqual = (a, b) => a.length === b.length && a.findIndex((_, i) => a[i] !== b[i]) === -1;\nvar NO_VALUE_SENTINEL = 15538;\n\n// community-modules/core/src/eventService.ts\nvar EventService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"eventService\";\n    this.globalEventService = new LocalEventService();\n  }\n  wireBeans(beans) {\n    this.globalEventListener = beans.globalEventListener;\n    this.globalSyncEventListener = beans.globalSyncEventListener;\n  }\n  postConstruct() {\n    if (this.globalEventListener) {\n      const async = this.gos.useAsyncEvents();\n      this.addGlobalListener(this.globalEventListener, async);\n    }\n    if (this.globalSyncEventListener) {\n      this.addGlobalListener(this.globalSyncEventListener, false);\n    }\n  }\n  addEventListener(eventType, listener, async) {\n    this.globalEventService.addEventListener(eventType, listener, async);\n  }\n  removeEventListener(eventType, listener, async) {\n    this.globalEventService.removeEventListener(eventType, listener, async);\n  }\n  addGlobalListener(listener, async = false) {\n    this.globalEventService.addGlobalListener(listener, async);\n  }\n  removeGlobalListener(listener, async = false) {\n    this.globalEventService.removeGlobalListener(listener, async);\n  }\n  /** @deprecated DO NOT FIRE LOCAL EVENTS OFF THE EVENT SERVICE */\n  dispatchLocalEvent() {}\n  dispatchEvent(event) {\n    this.globalEventService.dispatchEvent(this.gos.addGridCommonParams(event));\n  }\n  dispatchEventOnce(event) {\n    this.globalEventService.dispatchEventOnce(this.gos.addGridCommonParams(event));\n  }\n};\n\n// community-modules/core/src/focusService.ts\nvar _FocusService = /*#__PURE__*/(() => {\n  let _FocusService = class _FocusService extends BeanStub {\n    constructor() {\n      super(...arguments);\n      this.beanName = \"focusService\";\n    }\n    wireBeans(beans) {\n      this.eGridDiv = beans.eGridDiv;\n      this.columnModel = beans.columnModel;\n      this.visibleColsService = beans.visibleColsService;\n      this.headerNavigationService = beans.headerNavigationService;\n      this.headerPositionUtils = beans.headerPositionUtils;\n      this.rowRenderer = beans.rowRenderer;\n      this.rowPositionUtils = beans.rowPositionUtils;\n      this.cellPositionUtils = beans.cellPositionUtils;\n      this.navigationService = beans.navigationService;\n      this.ctrlsService = beans.ctrlsService;\n      this.filterManager = beans.filterManager;\n      this.rangeService = beans.rangeService;\n      this.advancedFilterService = beans.advancedFilterService;\n    }\n    static addKeyboardModeEvents(doc) {\n      if (this.instanceCount > 0) {\n        return;\n      }\n      doc.addEventListener(\"keydown\", _FocusService.toggleKeyboardMode);\n      doc.addEventListener(\"mousedown\", _FocusService.toggleKeyboardMode);\n    }\n    static removeKeyboardModeEvents(doc) {\n      if (this.instanceCount > 0) return;\n      doc.addEventListener(\"keydown\", _FocusService.toggleKeyboardMode);\n      doc.addEventListener(\"mousedown\", _FocusService.toggleKeyboardMode);\n    }\n    static toggleKeyboardMode(event) {\n      const isKeyboardActive = _FocusService.keyboardModeActive;\n      const isKeyboardEvent = event.type === \"keydown\";\n      if (isKeyboardEvent) {\n        if (event.ctrlKey || event.metaKey || event.altKey) {\n          return;\n        }\n      }\n      if (isKeyboardActive === isKeyboardEvent) {\n        return;\n      }\n      _FocusService.keyboardModeActive = isKeyboardEvent;\n    }\n    static unregisterGridCompController(doc) {\n      _FocusService.removeKeyboardModeEvents(doc);\n    }\n    postConstruct() {\n      const clearFocusedCellListener = this.clearFocusedCell.bind(this);\n      this.addManagedEventListeners({\n        columnPivotModeChanged: clearFocusedCellListener,\n        newColumnsLoaded: this.onColumnEverythingChanged.bind(this),\n        columnGroupOpened: clearFocusedCellListener,\n        columnRowGroupChanged: clearFocusedCellListener\n      });\n      this.registerKeyboardFocusEvents();\n      this.ctrlsService.whenReady(p => {\n        this.gridCtrl = p.gridCtrl;\n      });\n    }\n    registerKeyboardFocusEvents() {\n      const eDocument = this.gos.getDocument();\n      _FocusService.addKeyboardModeEvents(eDocument);\n      _FocusService.instanceCount++;\n      this.addDestroyFunc(() => {\n        _FocusService.instanceCount--;\n        _FocusService.unregisterGridCompController(eDocument);\n      });\n    }\n    onColumnEverythingChanged() {\n      if (!this.focusedCellPosition) {\n        return;\n      }\n      const col = this.focusedCellPosition.column;\n      const colFromColumnModel = this.columnModel.getCol(col.getId());\n      if (col !== colFromColumnModel) {\n        this.clearFocusedCell();\n      }\n    }\n    isKeyboardMode() {\n      return _FocusService.keyboardModeActive;\n    }\n    // we check if the browser is focusing something, and if it is, and\n    // it's the cell we think is focused, then return the cell. so this\n    // methods returns the cell if a) we think it has focus and b) the\n    // browser thinks it has focus. this then returns nothing if we\n    // first focus a cell, then second click outside the grid, as then the\n    // grid cell will still be focused as far as the grid is concerned,\n    // however the browser focus will have moved somewhere else.\n    getFocusCellToUseAfterRefresh() {\n      if (this.gos.get(\"suppressFocusAfterRefresh\") || !this.focusedCellPosition) {\n        return null;\n      }\n      if (this.isDomDataMissingInHierarchy(this.gos.getActiveDomElement(), RowCtrl.DOM_DATA_KEY_ROW_CTRL)) {\n        return null;\n      }\n      return this.focusedCellPosition;\n    }\n    getFocusHeaderToUseAfterRefresh() {\n      if (this.gos.get(\"suppressFocusAfterRefresh\") || !this.focusedHeaderPosition) {\n        return null;\n      }\n      if (this.isDomDataMissingInHierarchy(this.gos.getActiveDomElement(), AbstractHeaderCellCtrl.DOM_DATA_KEY_HEADER_CTRL)) {\n        return null;\n      }\n      return this.focusedHeaderPosition;\n    }\n    isDomDataMissingInHierarchy(eBrowserCell, key) {\n      let ePointer = eBrowserCell;\n      while (ePointer) {\n        const data = this.gos.getDomData(ePointer, key);\n        if (data) {\n          return false;\n        }\n        ePointer = ePointer.parentNode;\n      }\n      return true;\n    }\n    getFocusedCell() {\n      return this.focusedCellPosition;\n    }\n    shouldRestoreFocus(cell) {\n      if (this.isCellRestoreFocused(cell)) {\n        setTimeout(() => {\n          this.restoredFocusedCellPosition = null;\n        }, 0);\n        return true;\n      }\n      return false;\n    }\n    isCellRestoreFocused(cellPosition) {\n      if (this.restoredFocusedCellPosition == null) {\n        return false;\n      }\n      return this.cellPositionUtils.equals(cellPosition, this.restoredFocusedCellPosition);\n    }\n    setRestoreFocusedCell(cellPosition) {\n      if (this.getFrameworkOverrides().renderingEngine === \"react\") {\n        this.restoredFocusedCellPosition = cellPosition;\n      }\n    }\n    getFocusEventParams() {\n      const {\n        rowIndex,\n        rowPinned,\n        column\n      } = this.focusedCellPosition;\n      const params = {\n        rowIndex,\n        rowPinned,\n        column,\n        isFullWidthCell: false\n      };\n      const rowCtrl = this.rowRenderer.getRowByPosition({\n        rowIndex,\n        rowPinned\n      });\n      if (rowCtrl) {\n        params.isFullWidthCell = rowCtrl.isFullWidth();\n      }\n      return params;\n    }\n    clearFocusedCell() {\n      this.restoredFocusedCellPosition = null;\n      if (this.focusedCellPosition == null) {\n        return;\n      }\n      const event = {\n        type: \"cellFocusCleared\",\n        ...this.getFocusEventParams()\n      };\n      this.focusedCellPosition = null;\n      this.eventService.dispatchEvent(event);\n    }\n    setFocusedCell(params) {\n      const {\n        column,\n        rowIndex,\n        rowPinned,\n        forceBrowserFocus = false,\n        preventScrollOnBrowserFocus = false\n      } = params;\n      const gridColumn = this.columnModel.getCol(column);\n      if (!gridColumn) {\n        this.focusedCellPosition = null;\n        return;\n      }\n      this.focusedCellPosition = gridColumn ? {\n        rowIndex,\n        rowPinned: _makeNull(rowPinned),\n        column: gridColumn\n      } : null;\n      const event = {\n        type: \"cellFocused\",\n        ...this.getFocusEventParams(),\n        forceBrowserFocus,\n        preventScrollOnBrowserFocus\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    isCellFocused(cellPosition) {\n      if (this.focusedCellPosition == null) {\n        return false;\n      }\n      return this.cellPositionUtils.equals(cellPosition, this.focusedCellPosition);\n    }\n    isRowNodeFocused(rowNode) {\n      return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n    }\n    isHeaderWrapperFocused(headerCtrl) {\n      if (this.focusedHeaderPosition == null) {\n        return false;\n      }\n      const column = headerCtrl.getColumnGroupChild();\n      const headerRowIndex = headerCtrl.getRowIndex();\n      const pinned = headerCtrl.getPinned();\n      const {\n        column: focusedColumn,\n        headerRowIndex: focusedHeaderRowIndex\n      } = this.focusedHeaderPosition;\n      return column === focusedColumn && headerRowIndex === focusedHeaderRowIndex && pinned == focusedColumn.getPinned();\n    }\n    clearFocusedHeader() {\n      this.focusedHeaderPosition = null;\n    }\n    getFocusedHeader() {\n      return this.focusedHeaderPosition;\n    }\n    setFocusedHeader(headerRowIndex, column) {\n      this.focusedHeaderPosition = {\n        headerRowIndex,\n        column\n      };\n    }\n    focusHeaderPosition(params) {\n      if (this.gos.get(\"suppressHeaderFocus\")) {\n        return false;\n      }\n      const {\n        direction,\n        fromTab,\n        allowUserOverride,\n        event,\n        fromCell,\n        rowWithoutSpanValue\n      } = params;\n      let {\n        headerPosition\n      } = params;\n      if (fromCell && this.filterManager?.isAdvancedFilterHeaderActive()) {\n        return this.focusAdvancedFilter(headerPosition);\n      }\n      if (allowUserOverride) {\n        const currentPosition = this.getFocusedHeader();\n        const headerRowCount = this.headerNavigationService.getHeaderRowCount();\n        if (fromTab) {\n          const userFunc = this.gos.getCallback(\"tabToNextHeader\");\n          if (userFunc) {\n            headerPosition = this.getHeaderPositionFromUserFunc({\n              userFunc,\n              direction,\n              currentPosition,\n              headerPosition,\n              headerRowCount\n            });\n          }\n        } else {\n          const userFunc = this.gos.getCallback(\"navigateToNextHeader\");\n          if (userFunc && event) {\n            const params2 = {\n              key: event.key,\n              previousHeaderPosition: currentPosition,\n              nextHeaderPosition: headerPosition,\n              headerRowCount,\n              event\n            };\n            headerPosition = userFunc(params2);\n          }\n        }\n      }\n      if (!headerPosition) {\n        return false;\n      }\n      return this.focusProvidedHeaderPosition({\n        headerPosition,\n        direction,\n        event,\n        fromCell,\n        rowWithoutSpanValue\n      });\n    }\n    focusHeaderPositionFromUserFunc(params) {\n      if (this.gos.get(\"suppressHeaderFocus\")) {\n        return false;\n      }\n      const {\n        userFunc,\n        headerPosition,\n        direction,\n        event\n      } = params;\n      const currentPosition = this.getFocusedHeader();\n      const headerRowCount = this.headerNavigationService.getHeaderRowCount();\n      const newHeaderPosition = this.getHeaderPositionFromUserFunc({\n        userFunc,\n        direction,\n        currentPosition,\n        headerPosition,\n        headerRowCount\n      });\n      return !!newHeaderPosition && this.focusProvidedHeaderPosition({\n        headerPosition: newHeaderPosition,\n        direction,\n        event\n      });\n    }\n    getHeaderPositionFromUserFunc(params) {\n      const {\n        userFunc,\n        direction,\n        currentPosition,\n        headerPosition,\n        headerRowCount\n      } = params;\n      const userFuncParams = {\n        backwards: direction === \"Before\",\n        previousHeaderPosition: currentPosition,\n        nextHeaderPosition: headerPosition,\n        headerRowCount\n      };\n      const userResult = userFunc(userFuncParams);\n      if (userResult === true || userResult === null) {\n        if (userResult === null) {\n          _warnOnce(\"Since v31.3 Returning `null` from tabToNextHeader is deprecated. Return `true` to stay on the current header, or `false` to let the browser handle the tab behaviour.\");\n        }\n        return currentPosition;\n      }\n      if (userResult === false) {\n        return null;\n      }\n      return userResult;\n    }\n    focusProvidedHeaderPosition(params) {\n      const {\n        headerPosition,\n        direction,\n        fromCell,\n        rowWithoutSpanValue,\n        event\n      } = params;\n      const {\n        column,\n        headerRowIndex\n      } = headerPosition;\n      if (headerRowIndex === -1) {\n        if (this.filterManager?.isAdvancedFilterHeaderActive()) {\n          return this.focusAdvancedFilter(headerPosition);\n        }\n        return this.focusGridView(column);\n      }\n      this.headerNavigationService.scrollToColumn(column, direction);\n      const headerRowContainerCtrl = this.ctrlsService.getHeaderRowContainerCtrl(column.getPinned());\n      const focusSuccess = headerRowContainerCtrl.focusHeader(headerPosition.headerRowIndex, column, event);\n      if (focusSuccess && (rowWithoutSpanValue != null || fromCell)) {\n        this.headerNavigationService.setCurrentHeaderRowWithoutSpan(rowWithoutSpanValue ?? -1);\n      }\n      return focusSuccess;\n    }\n    focusFirstHeader() {\n      let firstColumn = this.visibleColsService.getAllCols()[0];\n      if (!firstColumn) {\n        return false;\n      }\n      if (firstColumn.getParent()) {\n        firstColumn = this.visibleColsService.getColGroupAtLevel(firstColumn, 0);\n      }\n      const headerPosition = this.headerPositionUtils.getHeaderIndexToFocus(firstColumn, 0);\n      return this.focusHeaderPosition({\n        headerPosition,\n        rowWithoutSpanValue: 0\n      });\n    }\n    focusLastHeader(event) {\n      const headerRowIndex = this.headerNavigationService.getHeaderRowCount() - 1;\n      const column = _last(this.visibleColsService.getAllCols());\n      return this.focusHeaderPosition({\n        headerPosition: {\n          headerRowIndex,\n          column\n        },\n        rowWithoutSpanValue: -1,\n        event\n      });\n    }\n    focusPreviousFromFirstCell(event) {\n      if (this.filterManager?.isAdvancedFilterHeaderActive()) {\n        return this.focusAdvancedFilter(null);\n      }\n      return this.focusLastHeader(event);\n    }\n    isAnyCellFocused() {\n      return !!this.focusedCellPosition;\n    }\n    isRowFocused(rowIndex, rowPinnedType) {\n      if (this.focusedCellPosition == null) {\n        return false;\n      }\n      return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === _makeNull(rowPinnedType);\n    }\n    findFocusableElements(rootNode, exclude, onlyUnmanaged = false) {\n      const focusableString = FOCUSABLE_SELECTOR;\n      let excludeString = FOCUSABLE_EXCLUDE;\n      if (exclude) {\n        excludeString += \", \" + exclude;\n      }\n      if (onlyUnmanaged) {\n        excludeString += ', [tabindex=\"-1\"]';\n      }\n      const nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString)).filter(node => {\n        return _isVisible(node);\n      });\n      const excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\n      if (!excludeNodes.length) {\n        return nodes;\n      }\n      const diff = (a, b) => a.filter(element => b.indexOf(element) === -1);\n      return diff(nodes, excludeNodes);\n    }\n    focusInto(rootNode, up = false, onlyUnmanaged = false) {\n      const focusableElements = this.findFocusableElements(rootNode, null, onlyUnmanaged);\n      const toFocus = up ? _last(focusableElements) : focusableElements[0];\n      if (toFocus) {\n        toFocus.focus({\n          preventScroll: true\n        });\n        return true;\n      }\n      return false;\n    }\n    findFocusableElementBeforeTabGuard(rootNode, referenceElement) {\n      if (!referenceElement) {\n        return null;\n      }\n      const focusableElements = this.findFocusableElements(rootNode);\n      const referenceIndex = focusableElements.indexOf(referenceElement);\n      if (referenceIndex === -1) {\n        return null;\n      }\n      let lastTabGuardIndex = -1;\n      for (let i = referenceIndex - 1; i >= 0; i--) {\n        if (focusableElements[i].classList.contains(\"ag-tab-guard-top\" /* TAB_GUARD_TOP */)) {\n          lastTabGuardIndex = i;\n          break;\n        }\n      }\n      if (lastTabGuardIndex <= 0) {\n        return null;\n      }\n      return focusableElements[lastTabGuardIndex - 1];\n    }\n    findNextFocusableElement(rootNode = this.eGridDiv, onlyManaged, backwards) {\n      const focusable = this.findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\n      const activeEl = this.gos.getActiveDomElement();\n      let currentIndex;\n      if (onlyManaged) {\n        currentIndex = focusable.findIndex(el => el.contains(activeEl));\n      } else {\n        currentIndex = focusable.indexOf(activeEl);\n      }\n      const nextIndex = currentIndex + (backwards ? -1 : 1);\n      if (nextIndex < 0 || nextIndex >= focusable.length) {\n        return null;\n      }\n      return focusable[nextIndex];\n    }\n    isTargetUnderManagedComponent(rootNode, target) {\n      if (!target) {\n        return false;\n      }\n      const managedContainers = rootNode.querySelectorAll(`.${ManagedFocusFeature.FOCUS_MANAGED_CLASS}`);\n      if (!managedContainers.length) {\n        return false;\n      }\n      for (let i = 0; i < managedContainers.length; i++) {\n        if (managedContainers[i].contains(target)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    findTabbableParent(node, limit = 5) {\n      let counter = 0;\n      while (node && _getTabIndex(node) === null && ++counter <= limit) {\n        node = node.parentElement;\n      }\n      if (_getTabIndex(node) === null) {\n        return null;\n      }\n      return node;\n    }\n    focusGridView(column, backwards) {\n      if (this.gos.get(\"suppressCellFocus\")) {\n        if (backwards) {\n          if (!this.gos.get(\"suppressHeaderFocus\")) {\n            return this.focusLastHeader();\n          }\n          return this.focusNextGridCoreContainer(true, true);\n        }\n        return this.focusNextGridCoreContainer(false);\n      }\n      const nextRow = backwards ? this.rowPositionUtils.getLastRow() : this.rowPositionUtils.getFirstRow();\n      if (!nextRow) {\n        return false;\n      }\n      const {\n        rowIndex,\n        rowPinned\n      } = nextRow;\n      const focusedHeader = this.getFocusedHeader();\n      if (!column && focusedHeader) {\n        column = focusedHeader.column;\n      }\n      if (rowIndex == null || !column) {\n        return false;\n      }\n      this.navigationService.ensureCellVisible({\n        rowIndex,\n        column,\n        rowPinned\n      });\n      this.setFocusedCell({\n        rowIndex,\n        column,\n        rowPinned: _makeNull(rowPinned),\n        forceBrowserFocus: true\n      });\n      this.rangeService?.setRangeToCell({\n        rowIndex,\n        rowPinned,\n        column\n      });\n      return true;\n    }\n    focusNextGridCoreContainer(backwards, forceOut = false) {\n      if (!forceOut && this.gridCtrl.focusNextInnerContainer(backwards)) {\n        return true;\n      }\n      if (forceOut || !backwards && !this.gridCtrl.isDetailGrid()) {\n        this.gridCtrl.forceFocusOutOfContainer(backwards);\n      }\n      return false;\n    }\n    focusAdvancedFilter(position) {\n      this.advancedFilterFocusColumn = position?.column;\n      return this.advancedFilterService?.getCtrl().focusHeaderComp() ?? false;\n    }\n    focusNextFromAdvancedFilter(backwards, forceFirstColumn) {\n      const column = (forceFirstColumn ? void 0 : this.advancedFilterFocusColumn) ?? this.visibleColsService.getAllCols()?.[0];\n      if (backwards) {\n        return this.focusHeaderPosition({\n          headerPosition: {\n            column,\n            headerRowIndex: this.headerNavigationService.getHeaderRowCount() - 1\n          }\n        });\n      } else {\n        return this.focusGridView(column);\n      }\n    }\n    clearAdvancedFilterColumn() {\n      this.advancedFilterFocusColumn = void 0;\n    }\n    addFocusableContainer(container) {\n      this.gridCtrl.addFocusableContainer(container);\n    }\n    removeFocusableContainer(container) {\n      this.gridCtrl.removeFocusableContainer(container);\n    }\n    focusGridInnerElement(fromBottom) {\n      return this.gridCtrl.focusInnerElement(fromBottom);\n    }\n  };\n  _FocusService.keyboardModeActive = false;\n  _FocusService.instanceCount = 0;\n  return _FocusService;\n})();\nvar FocusService = _FocusService;\n\n// community-modules/core/src/gridBodyComp/pinnedWidthService.ts\nvar PinnedWidthService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pinnedWidthService\";\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n  }\n  postConstruct() {\n    const listener = this.checkContainerWidths.bind(this);\n    this.addManagedEventListeners({\n      displayedColumnsChanged: listener,\n      displayedColumnsWidthChanged: listener\n    });\n    this.addManagedPropertyListener(\"domLayout\", listener);\n  }\n  checkContainerWidths() {\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const newLeftWidth = printLayout ? 0 : this.visibleColsService.getColsLeftWidth();\n    const newRightWidth = printLayout ? 0 : this.visibleColsService.getDisplayedColumnsRightWidth();\n    if (newLeftWidth != this.leftWidth) {\n      this.leftWidth = newLeftWidth;\n      this.eventService.dispatchEvent({\n        type: \"leftPinnedWidthChanged\"\n      });\n    }\n    if (newRightWidth != this.rightWidth) {\n      this.rightWidth = newRightWidth;\n      this.eventService.dispatchEvent({\n        type: \"rightPinnedWidthChanged\"\n      });\n    }\n  }\n  getPinnedRightWidth() {\n    return this.rightWidth;\n  }\n  getPinnedLeftWidth() {\n    return this.leftWidth;\n  }\n};\n\n// community-modules/core/src/gridComp/gridCtrl.ts\nvar GridCtrl = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.additionalFocusableContainers = /* @__PURE__ */new Set();\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n    this.focusService = beans.focusService;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  setComp(view, eGridDiv, eGui) {\n    this.view = view;\n    this.eGridHostDiv = eGridDiv;\n    this.eGui = eGui;\n    this.eGui.setAttribute(\"grid-id\", this.gridId);\n    const {\n      dragAndDropService,\n      mouseEventService,\n      ctrlsService,\n      resizeObserverService\n    } = this.beans;\n    dragAndDropService.addDropTarget({\n      getContainer: () => this.eGui,\n      isInterestedIn: type => type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */,\n      getIconName: () => \"notAllowed\"\n    });\n    mouseEventService.stampTopLevelGridCompWithGridInstance(eGridDiv);\n    this.createManagedBean(new LayoutFeature(this.view));\n    this.addRtlSupport();\n    const unsubscribeFromResize = resizeObserverService.observeResize(this.eGridHostDiv, this.onGridSizeChanged.bind(this));\n    this.addDestroyFunc(() => unsubscribeFromResize());\n    ctrlsService.register(\"gridCtrl\", this);\n  }\n  isDetailGrid() {\n    const el = this.focusService.findTabbableParent(this.getGui());\n    return el?.getAttribute(\"row-id\")?.startsWith(\"detail\") || false;\n  }\n  getOptionalSelectors() {\n    const beans = this.beans;\n    return {\n      paginationSelector: beans.paginationService?.getPaginationSelector(),\n      gridHeaderDropZonesSelector: beans.columnDropZonesService?.getDropZoneSelector(),\n      sideBarSelector: beans.sideBarService?.getSideBarSelector(),\n      statusBarSelector: beans.statusBarService?.getStatusPanelSelector(),\n      watermarkSelector: beans.licenseManager?.getWatermarkSelector()\n    };\n  }\n  onGridSizeChanged() {\n    const event = {\n      type: \"gridSizeChanged\",\n      clientWidth: this.eGridHostDiv.clientWidth,\n      clientHeight: this.eGridHostDiv.clientHeight\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  addRtlSupport() {\n    const cssClass = this.gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\";\n    this.view.setRtlClass(cssClass);\n  }\n  destroyGridUi() {\n    this.view.destroyGridUi();\n  }\n  getGui() {\n    return this.eGui;\n  }\n  setResizeCursor(on) {\n    this.view.setCursor(on ? \"ew-resize\" : null);\n  }\n  disableUserSelect(on) {\n    this.view.setUserSelect(on ? \"none\" : null);\n  }\n  focusNextInnerContainer(backwards) {\n    const focusableContainers = this.getFocusableContainers();\n    const activeEl = this.gos.getActiveDomElement();\n    const idxWithFocus = focusableContainers.findIndex(container => container.getGui().contains(activeEl));\n    const nextIdx = idxWithFocus + (backwards ? -1 : 1);\n    if (nextIdx < 0 || nextIdx >= focusableContainers.length) {\n      return false;\n    }\n    if (nextIdx === 0) {\n      if (idxWithFocus > 0) {\n        const allColumns = this.visibleColsService.getAllCols();\n        const lastColumn = _last(allColumns);\n        if (this.focusService.focusGridView(lastColumn, true)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return this.focusContainer(focusableContainers[nextIdx], backwards);\n  }\n  focusInnerElement(fromBottom) {\n    const focusableContainers = this.getFocusableContainers();\n    const allColumns = this.visibleColsService.getAllCols();\n    const userCallbackFunction = this.gos.getCallback(\"focusGridInnerElement\");\n    if (userCallbackFunction && userCallbackFunction({\n      fromBottom: !!fromBottom\n    })) {\n      return true;\n    }\n    if (fromBottom) {\n      if (focusableContainers.length > 1) {\n        return this.focusContainer(_last(focusableContainers), true);\n      }\n      const lastColumn = _last(allColumns);\n      if (this.focusService.focusGridView(lastColumn, true)) {\n        return true;\n      }\n    }\n    if (this.gos.get(\"headerHeight\") === 0 || this.gos.get(\"suppressHeaderFocus\")) {\n      if (this.focusService.focusGridView(allColumns[0])) {\n        return true;\n      }\n      for (let i = 1; i < focusableContainers.length; i++) {\n        if (this.focusService.focusInto(focusableContainers[i].getGui())) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return this.focusService.focusFirstHeader();\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.view.forceFocusOutOfContainer(up);\n  }\n  addFocusableContainer(container) {\n    this.additionalFocusableContainers.add(container);\n  }\n  removeFocusableContainer(container) {\n    this.additionalFocusableContainers.delete(container);\n  }\n  focusContainer(comp, up) {\n    comp?.setAllowFocus?.(true);\n    const result = this.focusService.focusInto(comp.getGui(), up);\n    comp?.setAllowFocus?.(false);\n    return result;\n  }\n  getFocusableContainers() {\n    return [...this.view.getFocusableContainers(), ...this.additionalFocusableContainers.values()];\n  }\n  destroy() {\n    this.additionalFocusableContainers.clear();\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/gridComp/gridComp.ts\nvar GridComp = class extends TabGuardComp {\n  constructor(eGridDiv) {\n    super();\n    this.gridBody = RefPlaceholder;\n    this.sideBar = RefPlaceholder;\n    this.pagination = RefPlaceholder;\n    this.rootWrapperBody = RefPlaceholder;\n    this.eGridDiv = eGridDiv;\n  }\n  postConstruct() {\n    const compProxy = {\n      destroyGridUi: () => this.destroyBean(this),\n      setRtlClass: cssClass => this.addCssClass(cssClass),\n      forceFocusOutOfContainer: this.forceFocusOutOfContainer.bind(this),\n      updateLayoutClasses: this.updateLayoutClasses.bind(this),\n      getFocusableContainers: this.getFocusableContainers.bind(this),\n      setUserSelect: value => {\n        this.getGui().style.userSelect = value != null ? value : \"\";\n        this.getGui().style.webkitUserSelect = value != null ? value : \"\";\n      },\n      setCursor: value => {\n        this.getGui().style.cursor = value != null ? value : \"\";\n      }\n    };\n    const ctrl = this.createManagedBean(new GridCtrl());\n    const comps = ctrl.getOptionalSelectors();\n    const template = this.createTemplate(comps);\n    const requiredComps = [GridBodySelector, ...Object.values(comps).filter(c => !!c)];\n    this.setTemplate(template, requiredComps);\n    ctrl.setComp(compProxy, this.eGridDiv, this.getGui());\n    this.insertGridIntoDom();\n    this.initialiseTabGuard({\n      // we want to override the default behaviour to do nothing for onTabKeyDown\n      onTabKeyDown: () => void 0,\n      focusInnerElement: fromBottom => ctrl.focusInnerElement(fromBottom),\n      forceFocusOutWhenTabGuardsAreEmpty: true\n    });\n  }\n  insertGridIntoDom() {\n    const eGui = this.getGui();\n    this.eGridDiv.appendChild(eGui);\n    this.addDestroyFunc(() => {\n      this.eGridDiv.removeChild(eGui);\n      if (this.gos.get(\"debug\")) {\n        _log(\"Grid removed from DOM\");\n      }\n    });\n  }\n  updateLayoutClasses(cssClass, params) {\n    const eRootWrapperBodyClassList = this.rootWrapperBody.classList;\n    eRootWrapperBodyClassList.toggle(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n    eRootWrapperBodyClassList.toggle(\"ag-layout-normal\" /* NORMAL */, params.normal);\n    eRootWrapperBodyClassList.toggle(\"ag-layout-print\" /* PRINT */, params.print);\n    this.addOrRemoveCssClass(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n    this.addOrRemoveCssClass(\"ag-layout-normal\" /* NORMAL */, params.normal);\n    this.addOrRemoveCssClass(\"ag-layout-print\" /* PRINT */, params.print);\n  }\n  createTemplate(params) {\n    const dropZones = params.gridHeaderDropZonesSelector ? \"<ag-grid-header-drop-zones></ag-grid-header-drop-zones>\" : \"\";\n    const sideBar = params.sideBarSelector ? '<ag-side-bar data-ref=\"sideBar\"></ag-side-bar>' : \"\";\n    const statusBar = params.statusBarSelector ? \"<ag-status-bar></ag-status-bar>\" : \"\";\n    const watermark = params.watermarkSelector ? \"<ag-watermark></ag-watermark>\" : \"\";\n    const pagination = params.paginationSelector ? '<ag-pagination data-ref=\"pagination\"></ag-pagination>' : \"\";\n    const template = /* html */\n    `<div class=\"ag-root-wrapper\" role=\"presentation\">\n                ${dropZones}\n                <div class=\"ag-root-wrapper-body\" data-ref=\"rootWrapperBody\" role=\"presentation\">\n                    <ag-grid-body data-ref=\"gridBody\"></ag-grid-body>\n                    ${sideBar}\n                </div>\n                ${statusBar}\n                ${pagination}\n                ${watermark}\n            </div>`;\n    return template;\n  }\n  getFocusableElement() {\n    return this.rootWrapperBody;\n  }\n  forceFocusOutOfContainer(up = false) {\n    if (!up && this.pagination?.isDisplayed()) {\n      this.pagination.forceFocusOutOfContainer(up);\n      return;\n    }\n    super.forceFocusOutOfContainer(up);\n  }\n  getFocusableContainers() {\n    const focusableContainers = [this.gridBody];\n    [this.sideBar, this.pagination].forEach(comp => {\n      if (comp) {\n        focusableContainers.push(comp);\n      }\n    });\n    return focusableContainers.filter(el => _isVisible(el.getGui()));\n  }\n};\n\n// community-modules/core/src/alignedGridsService.ts\nvar AlignedGridsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"alignedGridsService\";\n    // flag to mark if we are consuming. to avoid cyclic events (ie other grid firing back to master\n    // while processing a master event) we mark this if consuming an event, and if we are, then\n    // we don't fire back any events.\n    this.consuming = false;\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnSizeService = beans.columnSizeService;\n    this.ctrlsService = beans.ctrlsService;\n    this.columnApplyStateService = beans.columnApplyStateService;\n  }\n  getAlignedGridApis() {\n    let alignedGrids = this.gos.get(\"alignedGrids\") ?? [];\n    const isCallbackConfig = typeof alignedGrids === \"function\";\n    if (typeof alignedGrids === \"function\") {\n      alignedGrids = alignedGrids();\n    }\n    const seeUrl = () => `See ${this.getFrameworkOverrides().getDocLink(\"aligned-grids\")}`;\n    const apis = alignedGrids.map(alignedGrid => {\n      if (!alignedGrid) {\n        _errorOnce(`alignedGrids contains an undefined option.`);\n        if (!isCallbackConfig) {\n          _errorOnce(`You may want to configure via a callback to avoid setup race conditions:\n                     \"alignedGrids: () => [linkedGrid]\"`);\n        }\n        _errorOnce(seeUrl());\n        return;\n      }\n      if (this.isGridApi(alignedGrid)) {\n        return alignedGrid;\n      }\n      const refOrComp = alignedGrid;\n      if (\"current\" in refOrComp) {\n        return refOrComp.current?.api;\n      }\n      if (!refOrComp.api) {\n        _errorOnce(`alignedGrids - No api found on the linked grid. If you are passing gridOptions to alignedGrids since v31 this is no longer valid. ${seeUrl()}`);\n      }\n      return refOrComp.api;\n    }).filter(api => !!api && !api.isDestroyed());\n    return apis;\n  }\n  isGridApi(ref) {\n    return !!ref && !!ref.dispatchEvent;\n  }\n  postConstruct() {\n    const fireColumnEvent = this.fireColumnEvent.bind(this);\n    this.addManagedEventListeners({\n      columnMoved: fireColumnEvent,\n      columnVisible: fireColumnEvent,\n      columnPinned: fireColumnEvent,\n      columnGroupOpened: fireColumnEvent,\n      columnResized: fireColumnEvent,\n      bodyScroll: this.fireScrollEvent.bind(this),\n      alignedGridColumn: ({\n        event\n      }) => this.onColumnEvent(event),\n      alignedGridScroll: ({\n        event\n      }) => this.onScrollEvent(event)\n    });\n  }\n  // common logic across all the fire methods\n  fireEvent(event) {\n    if (this.consuming) {\n      return;\n    }\n    this.getAlignedGridApis().forEach(api => {\n      if (api.isDestroyed()) {\n        return;\n      }\n      api.dispatchEvent(event);\n    });\n  }\n  // common logic across all consume methods. very little common logic, however extracting\n  // guarantees consistency across the methods.\n  onEvent(callback) {\n    this.consuming = true;\n    callback();\n    this.consuming = false;\n  }\n  fireColumnEvent(columnEvent) {\n    const event = {\n      type: \"alignedGridColumn\",\n      event: columnEvent\n    };\n    this.fireEvent(event);\n  }\n  fireScrollEvent(scrollEvent) {\n    if (scrollEvent.direction !== \"horizontal\") {\n      return;\n    }\n    const event = {\n      type: \"alignedGridScroll\",\n      event: scrollEvent\n    };\n    this.fireEvent(event);\n  }\n  onScrollEvent(event) {\n    this.onEvent(() => {\n      const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n      gridBodyCon.getScrollFeature().setHorizontalScrollPosition(event.left, true);\n    });\n  }\n  getMasterColumns(event) {\n    const result = [];\n    if (event.columns) {\n      event.columns.forEach(column => {\n        result.push(column);\n      });\n    } else if (event.column) {\n      result.push(event.column);\n    }\n    return result;\n  }\n  getColumnIds(event) {\n    const result = [];\n    if (event.columns) {\n      event.columns.forEach(column => {\n        result.push(column.getColId());\n      });\n    } else if (event.column) {\n      result.push(event.column.getColId());\n    }\n    return result;\n  }\n  onColumnEvent(event) {\n    this.onEvent(() => {\n      switch (event.type) {\n        case \"columnMoved\":\n        case \"columnVisible\":\n        case \"columnPinned\":\n        case \"columnResized\":\n          {\n            const colEvent = event;\n            this.processColumnEvent(colEvent);\n            break;\n          }\n        case \"columnGroupOpened\":\n          {\n            const groupOpenedEvent = event;\n            this.processGroupOpenedEvent(groupOpenedEvent);\n            break;\n          }\n        case \"columnPivotChanged\":\n          _warnOnce(\"pivoting is not supported with aligned grids. You can only use one of these features at a time in a grid.\");\n          break;\n      }\n    });\n  }\n  processGroupOpenedEvent(groupOpenedEvent) {\n    groupOpenedEvent.columnGroups.forEach(masterGroup => {\n      let otherColumnGroup = null;\n      if (masterGroup) {\n        const groupId = masterGroup.getGroupId();\n        otherColumnGroup = this.columnModel.getProvidedColGroup(groupId);\n      }\n      if (masterGroup && !otherColumnGroup) {\n        return;\n      }\n      this.columnModel.setColumnGroupOpened(otherColumnGroup, masterGroup.isExpanded(), \"alignedGridChanged\");\n    });\n  }\n  processColumnEvent(colEvent) {\n    const masterColumn = colEvent.column;\n    let otherColumn = null;\n    if (masterColumn) {\n      otherColumn = this.columnModel.getColDefCol(masterColumn.getColId());\n    }\n    if (masterColumn && !otherColumn) {\n      return;\n    }\n    const masterColumns = this.getMasterColumns(colEvent);\n    switch (colEvent.type) {\n      case \"columnMoved\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map(s => ({\n            colId: s.colId\n          }));\n          this.columnApplyStateService.applyColumnState({\n            state: destColState,\n            applyOrder: true\n          }, \"alignedGridChanged\");\n        }\n        break;\n      case \"columnVisible\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map(s => ({\n            colId: s.colId,\n            hide: s.hide\n          }));\n          this.columnApplyStateService.applyColumnState({\n            state: destColState\n          }, \"alignedGridChanged\");\n        }\n        break;\n      case \"columnPinned\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map(s => ({\n            colId: s.colId,\n            pinned: s.pinned\n          }));\n          this.columnApplyStateService.applyColumnState({\n            state: destColState\n          }, \"alignedGridChanged\");\n        }\n        break;\n      case \"columnResized\":\n        {\n          const resizedEvent = colEvent;\n          const columnWidths = {};\n          masterColumns.forEach(column => {\n            columnWidths[column.getId()] = {\n              key: column.getColId(),\n              newWidth: column.getActualWidth()\n            };\n          });\n          resizedEvent.flexColumns?.forEach(col => {\n            if (columnWidths[col.getId()]) {\n              delete columnWidths[col.getId()];\n            }\n          });\n          this.columnSizeService.setColumnWidths(Object.values(columnWidths), false, resizedEvent.finished, \"alignedGridChanged\");\n          break;\n        }\n    }\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const isVerticalScrollShowing = gridBodyCon.isVerticalScrollShowing();\n    this.getAlignedGridApis().forEach(api => {\n      api.setGridOption(\"alwaysShowVerticalScroll\", isVerticalScrollShowing);\n    });\n  }\n};\n\n// community-modules/core/src/alignedGridsModule.ts\nvar AlignedGridsModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/aligned-grid\",\n  beans: [AlignedGridsService]\n};\n\n// community-modules/core/src/columns/columnApi.ts\nfunction getColumnDef(beans, key) {\n  const column = beans.columnModel.getColDefCol(key);\n  if (column) {\n    return column.getColDef();\n  }\n  return null;\n}\nfunction getColumnDefs(beans) {\n  return beans.columnModel.getColumnDefs();\n}\nfunction sizeColumnsToFit(beans, paramsOrGridWidth) {\n  if (typeof paramsOrGridWidth === \"number\") {\n    beans.columnSizeService.sizeColumnsToFit(paramsOrGridWidth, \"api\");\n  } else {\n    beans.ctrlsService.getGridBodyCtrl().sizeColumnsToFit(paramsOrGridWidth);\n  }\n}\nfunction setColumnGroupOpened(beans, group, newValue) {\n  beans.columnModel.setColumnGroupOpened(group, newValue, \"api\");\n}\nfunction getColumnGroup(beans, name, instanceId) {\n  return beans.visibleColsService.getColumnGroup(name, instanceId);\n}\nfunction getProvidedColumnGroup(beans, name) {\n  return beans.columnModel.getProvidedColGroup(name);\n}\nfunction getDisplayNameForColumn(beans, column, location) {\n  return beans.columnNameService.getDisplayNameForColumn(column, location) || \"\";\n}\nfunction getDisplayNameForColumnGroup(beans, columnGroup, location) {\n  return beans.columnNameService.getDisplayNameForColumnGroup(columnGroup, location) || \"\";\n}\nfunction getColumn(beans, key) {\n  return beans.columnModel.getColDefCol(key);\n}\nfunction getColumns(beans) {\n  return beans.columnModel.getColDefCols();\n}\nfunction applyColumnState(beans, params) {\n  return beans.columnApplyStateService.applyColumnState(params, \"api\");\n}\nfunction getColumnState(beans) {\n  return beans.columnGetStateService.getColumnState();\n}\nfunction resetColumnState(beans) {\n  beans.columnApplyStateService.resetColumnState(\"api\");\n}\nfunction getColumnGroupState(beans) {\n  return beans.columnGroupStateService.getColumnGroupState();\n}\nfunction setColumnGroupState(beans, stateItems) {\n  beans.columnGroupStateService.setColumnGroupState(stateItems, \"api\");\n}\nfunction resetColumnGroupState(beans) {\n  beans.columnGroupStateService.resetColumnGroupState(\"api\");\n}\nfunction isPinning(beans) {\n  return beans.visibleColsService.isPinningLeft() || beans.visibleColsService.isPinningRight();\n}\nfunction isPinningLeft(beans) {\n  return beans.visibleColsService.isPinningLeft();\n}\nfunction isPinningRight(beans) {\n  return beans.visibleColsService.isPinningRight();\n}\nfunction getDisplayedColAfter(beans, col) {\n  return beans.visibleColsService.getColAfter(col);\n}\nfunction getDisplayedColBefore(beans, col) {\n  return beans.visibleColsService.getColBefore(col);\n}\nfunction setColumnVisible(beans, key, visible) {\n  beans.columnModel.setColsVisible([key], visible, \"api\");\n}\nfunction setColumnsVisible(beans, keys, visible) {\n  beans.columnModel.setColsVisible(keys, visible, \"api\");\n}\nfunction setColumnPinned(beans, key, pinned) {\n  beans.columnModel.setColsPinned([key], pinned, \"api\");\n}\nfunction setColumnsPinned(beans, keys, pinned) {\n  beans.columnModel.setColsPinned(keys, pinned, \"api\");\n}\nfunction getAllGridColumns(beans) {\n  return beans.columnModel.getCols();\n}\nfunction getDisplayedLeftColumns(beans) {\n  return beans.visibleColsService.getLeftCols();\n}\nfunction getDisplayedCenterColumns(beans) {\n  return beans.visibleColsService.getCenterCols();\n}\nfunction getDisplayedRightColumns(beans) {\n  return beans.visibleColsService.getRightCols();\n}\nfunction getAllDisplayedColumns(beans) {\n  return beans.visibleColsService.getAllCols();\n}\nfunction getAllDisplayedVirtualColumns(beans) {\n  return beans.columnViewportService.getViewportColumns();\n}\nfunction moveColumn(beans, key, toIndex) {\n  beans.columnMoveService.moveColumns([key], toIndex, \"api\");\n}\nfunction moveColumnByIndex(beans, fromIndex, toIndex) {\n  beans.columnMoveService.moveColumnByIndex(fromIndex, toIndex, \"api\");\n}\nfunction moveColumns2(beans, columnsToMoveKeys, toIndex) {\n  beans.columnMoveService.moveColumns(columnsToMoveKeys, toIndex, \"api\");\n}\nfunction setColumnWidth(beans, key, newWidth, finished = true, source = \"api\") {\n  beans.columnSizeService.setColumnWidths([{\n    key,\n    newWidth\n  }], false, finished, source);\n}\nfunction setColumnWidths(beans, columnWidths, finished = true, source = \"api\") {\n  beans.columnSizeService.setColumnWidths(columnWidths, false, finished, source);\n}\nfunction getLeftDisplayedColumnGroups(beans) {\n  return beans.visibleColsService.getTreeLeft();\n}\nfunction getCenterDisplayedColumnGroups(beans) {\n  return beans.visibleColsService.getTreeCenter();\n}\nfunction getRightDisplayedColumnGroups(beans) {\n  return beans.visibleColsService.getTreeRight();\n}\nfunction getAllDisplayedColumnGroups(beans) {\n  return beans.visibleColsService.getAllTrees();\n}\nfunction autoSizeColumn(beans, key, skipHeader) {\n  return beans.columnAutosizeService.autoSizeCols({\n    colKeys: [key],\n    skipHeader,\n    source: \"api\"\n  });\n}\nfunction autoSizeColumns(beans, keys, skipHeader) {\n  beans.columnAutosizeService.autoSizeCols({\n    colKeys: keys,\n    skipHeader,\n    source: \"api\"\n  });\n}\nfunction autoSizeAllColumns(beans, skipHeader) {\n  beans.columnAutosizeService.autoSizeAllColumns(\"api\", skipHeader);\n}\n\n// community-modules/core/src/columns/dataTypeService.ts\nvar MONTH_LOCALE_TEXT = {\n  january: \"January\",\n  february: \"February\",\n  march: \"March\",\n  april: \"April\",\n  may: \"May\",\n  june: \"June\",\n  july: \"July\",\n  august: \"August\",\n  september: \"September\",\n  october: \"October\",\n  november: \"November\",\n  december: \"December\"\n};\nvar MONTH_KEYS = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\nvar DataTypeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dataTypeService\";\n    this.dataTypeDefinitions = {};\n    this.isWaitingForRowData = false;\n    this.isColumnTypeOverrideInDataTypeDefinitions = false;\n    // keep track of any column state updates whilst waiting for data types to be inferred\n    this.columnStateUpdatesPendingInference = {};\n    this.columnStateUpdateListenerDestroyFuncs = [];\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.columnModel = beans.columnModel;\n    this.funcColsService = beans.funcColsService;\n    this.valueService = beans.valueService;\n    this.columnApplyStateService = beans.columnApplyStateService;\n  }\n  postConstruct() {\n    this.groupHideOpenParents = this.gos.get(\"groupHideOpenParents\");\n    this.addManagedPropertyListener(\"groupHideOpenParents\", () => {\n      this.groupHideOpenParents = this.gos.get(\"groupHideOpenParents\");\n    });\n    this.processDataTypeDefinitions();\n    this.addManagedPropertyListener(\"dataTypeDefinitions\", event => {\n      this.processDataTypeDefinitions();\n      this.columnModel.recreateColumnDefs(convertSourceType(event.source));\n    });\n  }\n  processDataTypeDefinitions() {\n    const defaultDataTypes = this.getDefaultDataTypes();\n    this.dataTypeDefinitions = {};\n    this.formatValueFuncs = {};\n    const generateFormatValueFunc = dataTypeDefinition => {\n      return params => {\n        const {\n          column,\n          node,\n          value\n        } = params;\n        let valueFormatter = column.getColDef().valueFormatter;\n        if (valueFormatter === dataTypeDefinition.groupSafeValueFormatter) {\n          valueFormatter = dataTypeDefinition.valueFormatter;\n        }\n        return this.valueService.formatValue(column, node, value, valueFormatter);\n      };\n    };\n    Object.entries(defaultDataTypes).forEach(([cellDataType, dataTypeDefinition]) => {\n      const mergedDataTypeDefinition = {\n        ...dataTypeDefinition,\n        groupSafeValueFormatter: this.createGroupSafeValueFormatter(dataTypeDefinition)\n      };\n      this.dataTypeDefinitions[cellDataType] = mergedDataTypeDefinition;\n      this.formatValueFuncs[cellDataType] = generateFormatValueFunc(mergedDataTypeDefinition);\n    });\n    const dataTypeDefinitions = this.gos.get(\"dataTypeDefinitions\") ?? {};\n    this.dataTypeMatchers = {};\n    Object.entries(dataTypeDefinitions).forEach(([cellDataType, dataTypeDefinition]) => {\n      const mergedDataTypeDefinition = this.processDataTypeDefinition(dataTypeDefinition, dataTypeDefinitions, [cellDataType], defaultDataTypes);\n      if (mergedDataTypeDefinition) {\n        this.dataTypeDefinitions[cellDataType] = mergedDataTypeDefinition;\n        if (dataTypeDefinition.dataTypeMatcher) {\n          this.dataTypeMatchers[cellDataType] = dataTypeDefinition.dataTypeMatcher;\n        }\n        this.formatValueFuncs[cellDataType] = generateFormatValueFunc(mergedDataTypeDefinition);\n      }\n    });\n    this.checkObjectValueHandlers(defaultDataTypes);\n    [\"dateString\", \"text\", \"number\", \"boolean\", \"date\"].forEach(cellDataType => {\n      const overriddenDataTypeMatcher = this.dataTypeMatchers[cellDataType];\n      if (overriddenDataTypeMatcher) {\n        delete this.dataTypeMatchers[cellDataType];\n      }\n      this.dataTypeMatchers[cellDataType] = overriddenDataTypeMatcher ?? defaultDataTypes[cellDataType].dataTypeMatcher;\n    });\n  }\n  mergeDataTypeDefinitions(parentDataTypeDefinition, childDataTypeDefinition) {\n    const mergedDataTypeDefinition = {\n      ...parentDataTypeDefinition,\n      ...childDataTypeDefinition\n    };\n    if (parentDataTypeDefinition.columnTypes && childDataTypeDefinition.columnTypes && childDataTypeDefinition.appendColumnTypes) {\n      mergedDataTypeDefinition.columnTypes = [...convertColumnTypes(parentDataTypeDefinition.columnTypes), ...convertColumnTypes(childDataTypeDefinition.columnTypes)];\n    }\n    return mergedDataTypeDefinition;\n  }\n  processDataTypeDefinition(dataTypeDefinition, dataTypeDefinitions, alreadyProcessedDataTypes, defaultDataTypes) {\n    let mergedDataTypeDefinition;\n    const extendsCellDataType = dataTypeDefinition.extendsDataType;\n    if (dataTypeDefinition.columnTypes) {\n      this.isColumnTypeOverrideInDataTypeDefinitions = true;\n    }\n    if (dataTypeDefinition.extendsDataType === dataTypeDefinition.baseDataType) {\n      let baseDataTypeDefinition = defaultDataTypes[extendsCellDataType];\n      const overriddenBaseDataTypeDefinition = dataTypeDefinitions[extendsCellDataType];\n      if (baseDataTypeDefinition && overriddenBaseDataTypeDefinition) {\n        baseDataTypeDefinition = overriddenBaseDataTypeDefinition;\n      }\n      if (!this.validateDataTypeDefinition(dataTypeDefinition, baseDataTypeDefinition, extendsCellDataType)) {\n        return void 0;\n      }\n      mergedDataTypeDefinition = this.mergeDataTypeDefinitions(baseDataTypeDefinition, dataTypeDefinition);\n    } else {\n      if (alreadyProcessedDataTypes.includes(extendsCellDataType)) {\n        _warnOnce('Data type definition hierarchies (via the \"extendsDataType\" property) cannot contain circular references.');\n        return void 0;\n      }\n      const extendedDataTypeDefinition = dataTypeDefinitions[extendsCellDataType];\n      if (!this.validateDataTypeDefinition(dataTypeDefinition, extendedDataTypeDefinition, extendsCellDataType)) {\n        return void 0;\n      }\n      const mergedExtendedDataTypeDefinition = this.processDataTypeDefinition(extendedDataTypeDefinition, dataTypeDefinitions, [...alreadyProcessedDataTypes, extendsCellDataType], defaultDataTypes);\n      if (!mergedExtendedDataTypeDefinition) {\n        return void 0;\n      }\n      mergedDataTypeDefinition = this.mergeDataTypeDefinitions(mergedExtendedDataTypeDefinition, dataTypeDefinition);\n    }\n    return {\n      ...mergedDataTypeDefinition,\n      groupSafeValueFormatter: this.createGroupSafeValueFormatter(mergedDataTypeDefinition)\n    };\n  }\n  validateDataTypeDefinition(dataTypeDefinition, parentDataTypeDefinition, parentCellDataType) {\n    if (!parentDataTypeDefinition) {\n      _warnOnce(`The data type definition ${parentCellDataType} does not exist.`);\n      return false;\n    }\n    if (parentDataTypeDefinition.baseDataType !== dataTypeDefinition.baseDataType) {\n      _warnOnce('The \"baseDataType\" property of a data type definition must match that of its parent.');\n      return false;\n    }\n    return true;\n  }\n  createGroupSafeValueFormatter(dataTypeDefinition) {\n    if (!dataTypeDefinition.valueFormatter) {\n      return void 0;\n    }\n    return params => {\n      if (params.node?.group) {\n        const aggFunc = params.column.getAggFunc();\n        if (aggFunc) {\n          if (aggFunc === \"first\" || aggFunc === \"last\") {\n            return dataTypeDefinition.valueFormatter(params);\n          }\n          if (dataTypeDefinition.baseDataType === \"number\" && aggFunc !== \"count\") {\n            if (typeof params.value === \"number\") {\n              return dataTypeDefinition.valueFormatter(params);\n            }\n            if (typeof params.value === \"object\") {\n              if (!params.value) {\n                return void 0;\n              }\n              if (\"toNumber\" in params.value) {\n                return dataTypeDefinition.valueFormatter({\n                  ...params,\n                  value: params.value.toNumber()\n                });\n              }\n              if (\"value\" in params.value) {\n                return dataTypeDefinition.valueFormatter({\n                  ...params,\n                  value: params.value.value\n                });\n              }\n            }\n          }\n        }\n        if (!this.gos.get(\"suppressGroupMaintainValueType\")) {\n          return void 0;\n        }\n      } else if (this.groupHideOpenParents && params.column.isRowGroupActive()) {\n        if (typeof params.value !== \"string\" || dataTypeDefinition.dataTypeMatcher?.(params.value)) {\n          return dataTypeDefinition.valueFormatter(params);\n        }\n        if (!this.gos.get(\"suppressGroupMaintainValueType\")) {\n          return void 0;\n        }\n      }\n      return dataTypeDefinition.valueFormatter(params);\n    };\n  }\n  updateColDefAndGetColumnType(colDef, userColDef, colId) {\n    let {\n      cellDataType\n    } = userColDef;\n    const {\n      field\n    } = userColDef;\n    if (cellDataType === void 0) {\n      cellDataType = colDef.cellDataType;\n    }\n    if (cellDataType == null || cellDataType === true) {\n      cellDataType = this.canInferCellDataType(colDef, userColDef) ? this.inferCellDataType(field, colId) : false;\n    }\n    if (!cellDataType) {\n      colDef.cellDataType = false;\n      return void 0;\n    }\n    const dataTypeDefinition = this.dataTypeDefinitions[cellDataType];\n    if (!dataTypeDefinition) {\n      _warnOnce(`Missing data type definition - \"${cellDataType}\"`);\n      return void 0;\n    }\n    colDef.cellDataType = cellDataType;\n    if (dataTypeDefinition.groupSafeValueFormatter) {\n      colDef.valueFormatter = dataTypeDefinition.groupSafeValueFormatter;\n    }\n    if (dataTypeDefinition.valueParser) {\n      colDef.valueParser = dataTypeDefinition.valueParser;\n    }\n    if (!dataTypeDefinition.suppressDefaultProperties) {\n      this.setColDefPropertiesForBaseDataType(colDef, cellDataType, dataTypeDefinition, colId);\n    }\n    return dataTypeDefinition.columnTypes;\n  }\n  addColumnListeners(column) {\n    if (!this.isWaitingForRowData) {\n      return;\n    }\n    const columnStateUpdates = this.columnStateUpdatesPendingInference[column.getColId()];\n    if (!columnStateUpdates) {\n      return;\n    }\n    const columnListener = event => {\n      columnStateUpdates.add(event.key);\n    };\n    column.addEventListener(\"columnStateUpdated\", columnListener);\n    this.columnStateUpdateListenerDestroyFuncs.push(() => column.removeEventListener(\"columnStateUpdated\", columnListener));\n  }\n  canInferCellDataType(colDef, userColDef) {\n    if (this.rowModel.getType() !== \"clientSide\") {\n      return false;\n    }\n    const propsToCheckForInference = {\n      cellRenderer: true,\n      valueGetter: true,\n      valueParser: true,\n      refData: true\n    };\n    if (this.doColDefPropsPreventInference(userColDef, propsToCheckForInference)) {\n      return false;\n    }\n    const columnTypes = userColDef.type === null ? colDef.type : userColDef.type;\n    if (columnTypes) {\n      const columnTypeDefs = this.gos.get(\"columnTypes\") ?? {};\n      const hasPropsPreventingInference = convertColumnTypes(columnTypes).some(columnType => {\n        const columnTypeDef = columnTypeDefs[columnType.trim()];\n        return columnTypeDef && this.doColDefPropsPreventInference(columnTypeDef, propsToCheckForInference);\n      });\n      if (hasPropsPreventingInference) {\n        return false;\n      }\n    }\n    return !this.doColDefPropsPreventInference(colDef, propsToCheckForInference);\n  }\n  doColDefPropsPreventInference(colDef, propsToCheckForInference) {\n    return [[\"cellRenderer\", \"agSparklineCellRenderer\"], [\"valueGetter\", void 0], [\"valueParser\", void 0], [\"refData\", void 0]].some(([prop, comparisonValue]) => this.doesColDefPropPreventInference(colDef, propsToCheckForInference, prop, comparisonValue));\n  }\n  doesColDefPropPreventInference(colDef, checkProps, prop, comparisonValue) {\n    if (!checkProps[prop]) {\n      return false;\n    }\n    const value = colDef[prop];\n    if (value === null) {\n      checkProps[prop] = false;\n      return false;\n    } else {\n      return comparisonValue === void 0 ? !!value : value === comparisonValue;\n    }\n  }\n  inferCellDataType(field, colId) {\n    if (!field) {\n      return void 0;\n    }\n    let value;\n    const initialData = this.getInitialData();\n    if (initialData) {\n      const fieldContainsDots = field.indexOf(\".\") >= 0 && !this.gos.get(\"suppressFieldDotNotation\");\n      value = _getValueUsingField(initialData, field, fieldContainsDots);\n    } else {\n      this.initWaitForRowData(colId);\n    }\n    if (value == null) {\n      return void 0;\n    }\n    const [cellDataType] = Object.entries(this.dataTypeMatchers).find(([_cellDataType, dataTypeMatcher]) => dataTypeMatcher(value)) ?? [\"object\"];\n    return cellDataType;\n  }\n  getInitialData() {\n    const rowData = this.gos.get(\"rowData\");\n    if (rowData?.length) {\n      return rowData[0];\n    } else if (this.initialData) {\n      return this.initialData;\n    } else {\n      const rowNodes = this.rowModel.getRootNode().allLeafChildren;\n      if (rowNodes?.length) {\n        return rowNodes[0].data;\n      }\n    }\n    return null;\n  }\n  initWaitForRowData(colId) {\n    this.columnStateUpdatesPendingInference[colId] = /* @__PURE__ */new Set();\n    if (this.isWaitingForRowData) {\n      return;\n    }\n    this.isWaitingForRowData = true;\n    const columnTypeOverridesExist = this.isColumnTypeOverrideInDataTypeDefinitions;\n    if (columnTypeOverridesExist) {\n      this.columnModel.queueResizeOperations();\n    }\n    const [destroyFunc] = this.addManagedEventListeners({\n      rowDataUpdateStarted: event => {\n        const {\n          firstRowData\n        } = event;\n        if (!firstRowData) {\n          return;\n        }\n        destroyFunc?.();\n        this.isWaitingForRowData = false;\n        this.processColumnsPendingInference(firstRowData, columnTypeOverridesExist);\n        this.columnStateUpdatesPendingInference = {};\n        if (columnTypeOverridesExist) {\n          this.columnModel.processResizeOperations();\n        }\n        const dataTypesInferredEvent = {\n          type: \"dataTypesInferred\"\n        };\n        this.eventService.dispatchEvent(dataTypesInferredEvent);\n      }\n    });\n  }\n  isPendingInference() {\n    return this.isWaitingForRowData;\n  }\n  processColumnsPendingInference(firstRowData, columnTypeOverridesExist) {\n    this.initialData = firstRowData;\n    const state = [];\n    this.destroyColumnStateUpdateListeners();\n    const newRowGroupColumnStateWithoutIndex = {};\n    const newPivotColumnStateWithoutIndex = {};\n    Object.entries(this.columnStateUpdatesPendingInference).forEach(([colId, columnStateUpdates]) => {\n      const column = this.columnModel.getCol(colId);\n      if (!column) {\n        return;\n      }\n      const oldColDef = column.getColDef();\n      if (!this.columnModel.resetColDefIntoCol(column, \"cellDataTypeInferred\")) {\n        return;\n      }\n      const newColDef = column.getColDef();\n      if (columnTypeOverridesExist && newColDef.type && newColDef.type !== oldColDef.type) {\n        const updatedColumnState = this.getUpdatedColumnState(column, columnStateUpdates);\n        if (updatedColumnState.rowGroup && updatedColumnState.rowGroupIndex == null) {\n          newRowGroupColumnStateWithoutIndex[colId] = updatedColumnState;\n        }\n        if (updatedColumnState.pivot && updatedColumnState.pivotIndex == null) {\n          newPivotColumnStateWithoutIndex[colId] = updatedColumnState;\n        }\n        state.push(updatedColumnState);\n      }\n    });\n    if (columnTypeOverridesExist) {\n      state.push(...this.funcColsService.generateColumnStateForRowGroupAndPivotIndexes(newRowGroupColumnStateWithoutIndex, newPivotColumnStateWithoutIndex));\n    }\n    if (state.length) {\n      this.columnApplyStateService.applyColumnState({\n        state\n      }, \"cellDataTypeInferred\");\n    }\n    this.initialData = null;\n  }\n  getUpdatedColumnState(column, columnStateUpdates) {\n    const columnState = this.columnApplyStateService.getColumnStateFromColDef(column);\n    columnStateUpdates.forEach(key => {\n      delete columnState[key];\n      if (key === \"rowGroup\") {\n        delete columnState.rowGroupIndex;\n      } else if (key === \"pivot\") {\n        delete columnState.pivotIndex;\n      }\n    });\n    return columnState;\n  }\n  checkObjectValueHandlers(defaultDataTypes) {\n    const resolvedObjectDataTypeDefinition = this.dataTypeDefinitions.object;\n    const defaultObjectDataTypeDefinition = defaultDataTypes.object;\n    this.hasObjectValueParser = resolvedObjectDataTypeDefinition.valueParser !== defaultObjectDataTypeDefinition.valueParser;\n    this.hasObjectValueFormatter = resolvedObjectDataTypeDefinition.valueFormatter !== defaultObjectDataTypeDefinition.valueFormatter;\n  }\n  getDateStringTypeDefinition(column) {\n    if (!column) {\n      return this.dataTypeDefinitions.dateString;\n    }\n    return this.getDataTypeDefinition(column) ?? this.dataTypeDefinitions.dateString;\n  }\n  getDateParserFunction(column) {\n    return this.getDateStringTypeDefinition(column).dateParser;\n  }\n  getDateFormatterFunction(column) {\n    return this.getDateStringTypeDefinition(column).dateFormatter;\n  }\n  getDataTypeDefinition(column) {\n    const colDef = column.getColDef();\n    if (!colDef.cellDataType) {\n      return void 0;\n    }\n    return this.dataTypeDefinitions[colDef.cellDataType];\n  }\n  getBaseDataType(column) {\n    return this.getDataTypeDefinition(column)?.baseDataType;\n  }\n  checkType(column, value) {\n    if (value == null) {\n      return true;\n    }\n    const dataTypeMatcher = this.getDataTypeDefinition(column)?.dataTypeMatcher;\n    if (!dataTypeMatcher) {\n      return true;\n    }\n    return dataTypeMatcher(value);\n  }\n  validateColDef(colDef) {\n    if (colDef.cellDataType === \"object\") {\n      if (colDef.valueFormatter === this.dataTypeDefinitions.object.groupSafeValueFormatter && !this.hasObjectValueFormatter) {\n        _warnOnce('Cell data type is \"object\" but no value formatter has been provided. Please either provide an object data type definition with a value formatter, or set \"colDef.valueFormatter\"');\n      }\n      if (colDef.editable && colDef.valueParser === this.dataTypeDefinitions.object.valueParser && !this.hasObjectValueParser) {\n        _warnOnce('Cell data type is \"object\" but no value parser has been provided. Please either provide an object data type definition with a value parser, or set \"colDef.valueParser\"');\n      }\n    }\n  }\n  getFormatValue(cellDataType) {\n    return this.formatValueFuncs[cellDataType];\n  }\n  setColDefPropertiesForBaseDataType(colDef, cellDataType, dataTypeDefinition, colId) {\n    const formatValue = this.formatValueFuncs[cellDataType];\n    const usingSetFilter = ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/set-filter\" /* SetFilterModule */, this.gridId);\n    const translate = this.localeService.getLocaleTextFunc();\n    const mergeFilterParams = params => {\n      const {\n        filterParams\n      } = colDef;\n      colDef.filterParams = typeof filterParams === \"object\" ? {\n        ...filterParams,\n        ...params\n      } : params;\n    };\n    switch (dataTypeDefinition.baseDataType) {\n      case \"number\":\n        {\n          colDef.cellEditor = \"agNumberCellEditor\";\n          if (usingSetFilter) {\n            mergeFilterParams({\n              comparator: (a, b) => {\n                const valA = a == null ? 0 : parseInt(a);\n                const valB = b == null ? 0 : parseInt(b);\n                if (valA === valB) return 0;\n                return valA > valB ? 1 : -1;\n              }\n            });\n          }\n          break;\n        }\n      case \"boolean\":\n        {\n          colDef.cellEditor = \"agCheckboxCellEditor\";\n          colDef.cellRenderer = \"agCheckboxCellRenderer\";\n          colDef.suppressKeyboardEvent = params => !!params.colDef.editable && params.event.key === KeyCode.SPACE;\n          if (usingSetFilter) {\n            mergeFilterParams({\n              valueFormatter: params => {\n                if (!_exists(params.value)) {\n                  return translate(\"blanks\", \"(Blanks)\");\n                }\n                return translate(String(params.value), params.value ? \"True\" : \"False\");\n              }\n            });\n          } else {\n            mergeFilterParams({\n              maxNumConditions: 1,\n              debounceMs: 0,\n              filterOptions: [\"empty\", {\n                displayKey: \"true\",\n                displayName: \"True\",\n                predicate: (_filterValues, cellValue) => cellValue,\n                numberOfInputs: 0\n              }, {\n                displayKey: \"false\",\n                displayName: \"False\",\n                predicate: (_filterValues, cellValue) => cellValue === false,\n                numberOfInputs: 0\n              }]\n            });\n          }\n          break;\n        }\n      case \"date\":\n        {\n          colDef.cellEditor = \"agDateCellEditor\";\n          colDef.keyCreator = formatValue;\n          if (usingSetFilter) {\n            mergeFilterParams({\n              valueFormatter: params => {\n                const valueFormatted = formatValue(params);\n                return _exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n              },\n              treeList: true,\n              treeListFormatter: (pathKey, level) => {\n                if (level === 1 && pathKey != null) {\n                  const monthKey = MONTH_KEYS[Number(pathKey) - 1];\n                  return translate(monthKey, MONTH_LOCALE_TEXT[monthKey]);\n                }\n                return pathKey ?? translate(\"blanks\", \"(Blanks)\");\n              }\n            });\n          }\n          break;\n        }\n      case \"dateString\":\n        {\n          colDef.cellEditor = \"agDateStringCellEditor\";\n          colDef.keyCreator = formatValue;\n          const convertToDate = dataTypeDefinition.dateParser;\n          if (usingSetFilter) {\n            mergeFilterParams({\n              valueFormatter: params => {\n                const valueFormatted = formatValue(params);\n                return _exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n              },\n              treeList: true,\n              treeListPathGetter: value => {\n                const date = convertToDate(value ?? void 0);\n                return date ? [String(date.getFullYear()), String(date.getMonth() + 1), String(date.getDate())] : null;\n              },\n              treeListFormatter: (pathKey, level) => {\n                if (level === 1 && pathKey != null) {\n                  const monthKey = MONTH_KEYS[Number(pathKey) - 1];\n                  return translate(monthKey, MONTH_LOCALE_TEXT[monthKey]);\n                }\n                return pathKey ?? translate(\"blanks\", \"(Blanks)\");\n              }\n            });\n          } else {\n            mergeFilterParams({\n              comparator: (filterDate, cellValue) => {\n                const cellAsDate = convertToDate(cellValue);\n                if (cellValue == null || cellAsDate < filterDate) {\n                  return -1;\n                }\n                if (cellAsDate > filterDate) {\n                  return 1;\n                }\n                return 0;\n              }\n            });\n          }\n          break;\n        }\n      case \"object\":\n        {\n          colDef.cellEditorParams = {\n            useFormatter: true\n          };\n          colDef.comparator = (a, b) => {\n            const column = this.columnModel.getColDefCol(colId);\n            const colDef2 = column?.getColDef();\n            if (!column || !colDef2) {\n              return 0;\n            }\n            const valA = a == null ? \"\" : formatValue({\n              column,\n              node: null,\n              value: a\n            });\n            const valB = b == null ? \"\" : formatValue({\n              column,\n              node: null,\n              value: b\n            });\n            if (valA === valB) return 0;\n            return valA > valB ? 1 : -1;\n          };\n          colDef.keyCreator = formatValue;\n          if (usingSetFilter) {\n            mergeFilterParams({\n              valueFormatter: params => {\n                const valueFormatted = formatValue(params);\n                return _exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n              }\n            });\n          } else {\n            colDef.filterValueGetter = params => formatValue({\n              column: params.column,\n              node: params.node,\n              value: this.valueService.getValue(params.column, params.node)\n            });\n          }\n          break;\n        }\n    }\n  }\n  getDefaultDataTypes() {\n    const defaultDateFormatMatcher = value => !!value.match(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\");\n    const translate = this.localeService.getLocaleTextFunc();\n    return {\n      number: {\n        baseDataType: \"number\",\n        // can be empty space with legacy copy\n        valueParser: params => params.newValue?.trim?.() === \"\" ? null : Number(params.newValue),\n        valueFormatter: params => {\n          if (params.value == null) {\n            return \"\";\n          }\n          if (typeof params.value !== \"number\" || isNaN(params.value)) {\n            return translate(\"invalidNumber\", \"Invalid Number\");\n          }\n          return String(params.value);\n        },\n        dataTypeMatcher: value => typeof value === \"number\"\n      },\n      text: {\n        baseDataType: \"text\",\n        valueParser: params => params.newValue === \"\" ? null : _toStringOrNull(params.newValue),\n        dataTypeMatcher: value => typeof value === \"string\"\n      },\n      boolean: {\n        baseDataType: \"boolean\",\n        valueParser: params => {\n          if (params.newValue == null) {\n            return params.newValue;\n          }\n          return params.newValue?.trim?.() === \"\" ? null : String(params.newValue).toLowerCase() === \"true\";\n        },\n        valueFormatter: params => params.value == null ? \"\" : String(params.value),\n        dataTypeMatcher: value => typeof value === \"boolean\"\n      },\n      date: {\n        baseDataType: \"date\",\n        valueParser: params => _parseDateTimeFromString(params.newValue == null ? null : String(params.newValue)),\n        valueFormatter: params => {\n          if (params.value == null) {\n            return \"\";\n          }\n          if (!(params.value instanceof Date) || isNaN(params.value.getTime())) {\n            return translate(\"invalidDate\", \"Invalid Date\");\n          }\n          return _serialiseDate(params.value, false) ?? \"\";\n        },\n        dataTypeMatcher: value => value instanceof Date\n      },\n      dateString: {\n        baseDataType: \"dateString\",\n        dateParser: value => _parseDateTimeFromString(value) ?? void 0,\n        dateFormatter: value => _serialiseDate(value ?? null, false) ?? void 0,\n        valueParser: params => defaultDateFormatMatcher(String(params.newValue)) ? params.newValue : null,\n        valueFormatter: params => defaultDateFormatMatcher(String(params.value)) ? params.value : \"\",\n        dataTypeMatcher: value => typeof value === \"string\" && defaultDateFormatMatcher(value)\n      },\n      object: {\n        baseDataType: \"object\",\n        valueParser: () => null,\n        valueFormatter: params => _toStringOrNull(params.value) ?? \"\"\n      }\n    };\n  }\n  destroyColumnStateUpdateListeners() {\n    this.columnStateUpdateListenerDestroyFuncs.forEach(destroyFunc => destroyFunc());\n    this.columnStateUpdateListenerDestroyFuncs = [];\n  }\n  destroy() {\n    this.dataTypeDefinitions = {};\n    this.dataTypeMatchers = {};\n    this.formatValueFuncs = {};\n    this.columnStateUpdatesPendingInference = {};\n    this.destroyColumnStateUpdateListeners();\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/columns/columnModule.ts\nvar DataTypeModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/data-type\",\n  beans: [DataTypeService]\n};\nvar ColumnApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/column-api\",\n  apiFunctions: {\n    getColumnDef,\n    getColumnDefs,\n    sizeColumnsToFit,\n    setColumnGroupOpened,\n    getColumnGroup,\n    getProvidedColumnGroup,\n    getDisplayNameForColumn,\n    getDisplayNameForColumnGroup,\n    getColumn,\n    getColumns,\n    applyColumnState,\n    getColumnState,\n    resetColumnState,\n    getColumnGroupState,\n    setColumnGroupState,\n    resetColumnGroupState,\n    isPinning,\n    isPinningLeft,\n    isPinningRight,\n    getDisplayedColAfter,\n    getDisplayedColBefore,\n    setColumnVisible,\n    setColumnsVisible,\n    setColumnPinned,\n    setColumnsPinned,\n    getAllGridColumns,\n    getDisplayedLeftColumns,\n    getDisplayedCenterColumns,\n    getDisplayedRightColumns,\n    getAllDisplayedColumns,\n    getAllDisplayedVirtualColumns,\n    moveColumn,\n    moveColumnByIndex,\n    moveColumns: moveColumns2,\n    setColumnWidth,\n    setColumnWidths,\n    getLeftDisplayedColumnGroups,\n    getCenterDisplayedColumnGroups,\n    getRightDisplayedColumnGroups,\n    getAllDisplayedColumnGroups,\n    autoSizeColumn,\n    autoSizeColumns,\n    autoSizeAllColumns\n  }\n};\n\n// community-modules/core/src/dragAndDrop/dragApi.ts\nfunction addRowDropZone(beans, params) {\n  beans.ctrlsService.getGridBodyCtrl().getRowDragFeature().addRowDropZone(params);\n}\nfunction removeRowDropZone(beans, params) {\n  const activeDropTarget = beans.dragAndDropService.findExternalZone(params);\n  if (activeDropTarget) {\n    beans.dragAndDropService.removeDropTarget(activeDropTarget);\n  }\n}\nfunction getRowDropZoneParams(beans, events) {\n  return beans.ctrlsService.getGridBodyCtrl().getRowDragFeature().getRowDropZone(events);\n}\n\n// community-modules/core/src/dragAndDrop/dragModule.ts\nvar DragApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/drag-api\",\n  apiFunctions: {\n    addRowDropZone,\n    removeRowDropZone,\n    getRowDropZoneParams\n  }\n};\n\n// community-modules/core/src/pinnedRowModel/pinnedRowApi.ts\nfunction getPinnedTopRowCount(beans) {\n  return beans.pinnedRowModel.getPinnedTopRowCount();\n}\nfunction getPinnedBottomRowCount(beans) {\n  return beans.pinnedRowModel.getPinnedBottomRowCount();\n}\nfunction getPinnedTopRow(beans, index) {\n  return beans.pinnedRowModel.getPinnedTopRow(index);\n}\nfunction getPinnedBottomRow(beans, index) {\n  return beans.pinnedRowModel.getPinnedBottomRow(index);\n}\n\n// community-modules/core/src/pinnedRowModel/pinnedRowModule.ts\nvar PinnedRowApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/pinned-row-api\",\n  apiFunctions: {\n    getPinnedTopRowCount,\n    getPinnedBottomRowCount,\n    getPinnedTopRow,\n    getPinnedBottomRow\n  }\n};\n\n// community-modules/core/src/rendering/overlays/overlayApi.ts\nfunction showLoadingOverlay(beans) {\n  beans.overlayService.showLoadingOverlay();\n}\nfunction showNoRowsOverlay(beans) {\n  beans.overlayService.showNoRowsOverlay();\n}\nfunction hideOverlay(beans) {\n  beans.overlayService.hideOverlay();\n}\n\n// community-modules/core/src/rendering/overlays/overlayModule.ts\nvar OverlayApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/overlay-api\",\n  apiFunctions: {\n    showLoadingOverlay,\n    showNoRowsOverlay,\n    hideOverlay\n  }\n};\n\n// community-modules/core/src/rendering/renderApi.ts\nfunction setGridAriaProperty(beans, property, value) {\n  if (!property) {\n    return;\n  }\n  const eGrid = beans.ctrlsService.getGridBodyCtrl().getGui();\n  const ariaProperty = `aria-${property}`;\n  if (value === null) {\n    eGrid.removeAttribute(ariaProperty);\n  } else {\n    eGrid.setAttribute(ariaProperty, value);\n  }\n}\nfunction refreshCells(beans, params = {}) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.refreshCells(params));\n}\nfunction flashCells(beans, params = {}) {\n  const warning = prop => _warnOnce(`Since v31.1 api.flashCells parameter '${prop}Delay' is deprecated. Please use '${prop}Duration' instead.`);\n  if (_exists(params.fadeDelay)) {\n    warning(\"fade\");\n  }\n  if (_exists(params.flashDelay)) {\n    warning(\"flash\");\n  }\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.flashCells(params));\n}\nfunction refreshHeader(beans) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.ctrlsService.getHeaderRowContainerCtrls().forEach(c => c.refresh()));\n}\nfunction isAnimationFrameQueueEmpty(beans) {\n  return beans.animationFrameService.isQueueEmpty();\n}\nfunction flushAllAnimationFrames(beans) {\n  beans.animationFrameService.flushAllFrames();\n}\nfunction getSizesForCurrentTheme(beans) {\n  return {\n    rowHeight: beans.gos.getRowHeightAsNumber(),\n    headerHeight: beans.columnModel.getHeaderHeight()\n  };\n}\nfunction getCellRendererInstances(beans, params = {}) {\n  const res = beans.rowRenderer.getCellRendererInstances(params);\n  const unwrapped = res.map(_unwrapUserComp);\n  return unwrapped;\n}\n\n// community-modules/core/src/rendering/renderModule.ts\nvar RenderApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/render-api\",\n  apiFunctions: {\n    setGridAriaProperty,\n    refreshCells,\n    flashCells,\n    refreshHeader,\n    isAnimationFrameQueueEmpty,\n    flushAllAnimationFrames,\n    getSizesForCurrentTheme,\n    getCellRendererInstances\n  }\n};\n\n// community-modules/core/src/api/cellApi.ts\nfunction expireValueCache(beans) {\n  beans.valueCache.expire();\n}\nfunction getValue(beans, colKey, rowNode) {\n  return getCellValue(beans, {\n    colKey,\n    rowNode\n  });\n}\nfunction getCellValue(beans, params) {\n  const {\n    colKey,\n    rowNode,\n    useFormatter\n  } = params;\n  const column = beans.columnModel.getColDefCol(colKey) ?? beans.columnModel.getCol(colKey);\n  if (_missing(column)) {\n    return null;\n  }\n  const value = beans.valueService.getValue(column, rowNode);\n  if (useFormatter) {\n    const formattedValue = beans.valueService.formatValue(column, rowNode, value);\n    return formattedValue ?? _escapeString(value, true);\n  }\n  return value;\n}\n\n// community-modules/core/src/api/coreApi.ts\nfunction getGridId(beans) {\n  return beans.context.getGridId();\n}\nfunction destroy(beans) {\n  beans.gridDestroyService.destroy();\n}\nfunction isDestroyed(beans) {\n  return beans.gridDestroyService.isDestroyCalled();\n}\nfunction getGridOption(beans, key) {\n  return beans.gos.get(key);\n}\nfunction setGridOption(beans, key, value) {\n  updateGridOptions(beans, {\n    [key]: value\n  });\n}\nfunction updateGridOptions(beans, options) {\n  beans.gos.updateGridOptions({\n    options\n  });\n}\n\n// community-modules/core/src/api/eventApi.ts\nfunction addEventListener(beans, eventType, listener) {\n  beans.apiEventService.addEventListener(eventType, listener);\n}\nfunction removeEventListener(beans, eventType, listener) {\n  beans.apiEventService.removeEventListener(eventType, listener);\n}\nfunction addGlobalListener(beans, listener) {\n  beans.apiEventService.addGlobalListener(listener);\n}\nfunction removeGlobalListener(beans, listener) {\n  beans.apiEventService.removeGlobalListener(listener);\n}\n\n// community-modules/core/src/api/keyboardNavigationApi.ts\nfunction getFocusedCell(beans) {\n  return beans.focusService.getFocusedCell();\n}\nfunction clearFocusedCell(beans) {\n  return beans.focusService.clearFocusedCell();\n}\nfunction setFocusedCell(beans, rowIndex, colKey, rowPinned) {\n  beans.focusService.setFocusedCell({\n    rowIndex,\n    column: colKey,\n    rowPinned,\n    forceBrowserFocus: true\n  });\n}\nfunction tabToNextCell(beans, event) {\n  return beans.navigationService.tabToNextCell(false, event);\n}\nfunction tabToPreviousCell(beans, event) {\n  return beans.navigationService.tabToNextCell(true, event);\n}\nfunction setFocusedHeader(beans, colKey, floatingFilter = false) {\n  const headerPosition = beans.headerNavigationService.getHeaderPositionForColumn(colKey, floatingFilter);\n  if (!headerPosition) {\n    return;\n  }\n  beans.focusService.focusHeaderPosition({\n    headerPosition\n  });\n}\n\n// community-modules/core/src/api/menuApi.ts\nfunction showColumnMenuAfterButtonClick(beans, colKey, buttonElement) {\n  const column = beans.columnModel.getCol(colKey);\n  beans.menuService.showColumnMenu({\n    column,\n    buttonElement,\n    positionBy: \"button\"\n  });\n}\nfunction showColumnMenuAfterMouseClick(beans, colKey, mouseEvent) {\n  let column = beans.columnModel.getCol(colKey);\n  if (!column) {\n    column = beans.columnModel.getColDefCol(colKey);\n  }\n  if (!column) {\n    _errorOnce(`column '${colKey}' not found`);\n    return;\n  }\n  beans.menuService.showColumnMenu({\n    column,\n    mouseEvent,\n    positionBy: \"mouse\"\n  });\n}\nfunction showColumnMenu(beans, colKey) {\n  const column = beans.columnModel.getCol(colKey);\n  if (!column) {\n    _errorOnce(`column '${colKey}' not found`);\n    return;\n  }\n  beans.menuService.showColumnMenu({\n    column,\n    positionBy: \"auto\"\n  });\n}\nfunction hidePopupMenu(beans) {\n  beans.menuService.hidePopupMenu();\n}\n\n// community-modules/core/src/api/rowApi.ts\nfunction redrawRows(beans, params = {}) {\n  const rowNodes = params ? params.rowNodes : void 0;\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.redrawRows(rowNodes));\n}\nfunction setRowNodeExpanded(beans, rowNode, expanded, expandParents, forceSync) {\n  beans.expansionService.setRowNodeExpanded(rowNode, expanded, expandParents, forceSync);\n}\nfunction getRowNode(beans, id) {\n  return beans.rowModel.getRowNode(id);\n}\nfunction addRenderedRowListener(beans, eventName, rowIndex, callback) {\n  beans.rowRenderer.addRenderedRowListener(eventName, rowIndex, callback);\n}\nfunction getRenderedNodes(beans) {\n  return beans.rowRenderer.getRenderedNodes();\n}\nfunction forEachNode(beans, callback, includeFooterNodes) {\n  beans.rowModel.forEachNode(callback, includeFooterNodes);\n}\nfunction getFirstDisplayedRow(beans) {\n  return getFirstDisplayedRowIndex(beans);\n}\nfunction getFirstDisplayedRowIndex(beans) {\n  return beans.rowRenderer.getFirstVirtualRenderedRow();\n}\nfunction getLastDisplayedRow(beans) {\n  return getLastDisplayedRowIndex(beans);\n}\nfunction getLastDisplayedRowIndex(beans) {\n  return beans.rowRenderer.getLastVirtualRenderedRow();\n}\nfunction getDisplayedRowAtIndex(beans, index) {\n  return beans.rowModel.getRow(index);\n}\nfunction getDisplayedRowCount(beans) {\n  return beans.rowModel.getRowCount();\n}\nfunction getModel(beans) {\n  return beans.rowModel;\n}\n\n// community-modules/core/src/api/rowSelectionApi.ts\nfunction setNodesSelected(beans, params) {\n  const allNodesValid = params.nodes.every(node => {\n    if (node.rowPinned) {\n      _warnOnce(\"cannot select pinned rows\");\n      return false;\n    }\n    if (node.id === void 0) {\n      _warnOnce(\"cannot select node until id for node is known\");\n      return false;\n    }\n    return true;\n  });\n  if (!allNodesValid) {\n    return;\n  }\n  const {\n    nodes,\n    source,\n    newValue\n  } = params;\n  const nodesAsRowNode = nodes;\n  beans.selectionService.setNodesSelected({\n    nodes: nodesAsRowNode,\n    source: source ?? \"api\",\n    newValue\n  });\n}\nfunction selectAll(beans, source = \"apiSelectAll\") {\n  beans.selectionService.selectAllRowNodes({\n    source\n  });\n}\nfunction deselectAll(beans, source = \"apiSelectAll\") {\n  beans.selectionService.deselectAllRowNodes({\n    source\n  });\n}\nfunction selectAllFiltered(beans, source = \"apiSelectAllFiltered\") {\n  beans.selectionService.selectAllRowNodes({\n    source,\n    justFiltered: true\n  });\n}\nfunction deselectAllFiltered(beans, source = \"apiSelectAllFiltered\") {\n  beans.selectionService.deselectAllRowNodes({\n    source,\n    justFiltered: true\n  });\n}\nfunction selectAllOnCurrentPage(beans, source = \"apiSelectAllCurrentPage\") {\n  beans.selectionService.selectAllRowNodes({\n    source,\n    justCurrentPage: true\n  });\n}\nfunction deselectAllOnCurrentPage(beans, source = \"apiSelectAllCurrentPage\") {\n  beans.selectionService.deselectAllRowNodes({\n    source,\n    justCurrentPage: true\n  });\n}\nfunction getSelectedNodes(beans) {\n  return beans.selectionService.getSelectedNodes();\n}\nfunction getSelectedRows(beans) {\n  return beans.selectionService.getSelectedRows();\n}\n\n// community-modules/core/src/api/sortApi.ts\nfunction onSortChanged(beans) {\n  beans.sortController.onSortChanged(\"api\");\n}\n\n// community-modules/core/src/api/apiModule.ts\nvar CoreApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/core-api\",\n  apiFunctions: {\n    getGridId,\n    destroy,\n    isDestroyed,\n    getGridOption,\n    setGridOption,\n    updateGridOptions\n  }\n};\nvar RowSelectionApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/row-selection-api\",\n  apiFunctions: {\n    setNodesSelected,\n    selectAll,\n    deselectAll,\n    selectAllFiltered,\n    deselectAllFiltered,\n    selectAllOnCurrentPage,\n    deselectAllOnCurrentPage,\n    getSelectedNodes,\n    getSelectedRows\n  }\n};\nvar RowApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/row-api\",\n  apiFunctions: {\n    redrawRows,\n    setRowNodeExpanded,\n    getRowNode,\n    addRenderedRowListener,\n    getRenderedNodes,\n    forEachNode,\n    getFirstDisplayedRow,\n    getFirstDisplayedRowIndex,\n    getLastDisplayedRow,\n    getLastDisplayedRowIndex,\n    getDisplayedRowAtIndex,\n    getDisplayedRowCount,\n    getModel\n  }\n};\nvar ScrollApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/scroll-api\",\n  apiFunctions: {\n    getVerticalPixelRange,\n    getHorizontalPixelRange,\n    ensureColumnVisible,\n    ensureIndexVisible,\n    ensureNodeVisible\n  }\n};\nvar KeyboardNavigationApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/keyboard-navigation-api\",\n  apiFunctions: {\n    getFocusedCell,\n    clearFocusedCell,\n    setFocusedCell,\n    setFocusedHeader,\n    tabToNextCell,\n    tabToPreviousCell\n  }\n};\nvar EventApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/event-api\",\n  apiFunctions: {\n    addEventListener,\n    addGlobalListener,\n    removeEventListener,\n    removeGlobalListener\n  }\n};\nvar CellApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/cell-api\",\n  apiFunctions: {\n    expireValueCache,\n    getValue,\n    getCellValue\n  }\n};\nvar CommunityMenuApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/menu-api\",\n  apiFunctions: {\n    showColumnMenuAfterButtonClick,\n    showColumnMenuAfterMouseClick,\n    showColumnMenu,\n    hidePopupMenu\n  }\n};\nvar SortApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/sort-api\",\n  apiFunctions: {\n    onSortChanged\n  }\n};\nvar CommunityApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/api\",\n  dependantModules: [CoreApiModule, PinnedRowApiModule, RowSelectionApiModule, ColumnApiModule, RowApiModule, DragApiModule, ScrollApiModule, OverlayApiModule, KeyboardNavigationApiModule, EventApiModule, RenderApiModule, CellApiModule, CommunityMenuApiModule, SortApiModule]\n};\n\n// community-modules/core/src/misc/state/stateApi.ts\nfunction getState(beans) {\n  return beans.stateService?.getState() ?? {};\n}\n\n// community-modules/core/src/misc/state/stateService.ts\nvar StateService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"stateService\";\n    this.suppressEvents = true;\n    this.queuedUpdateSources = /* @__PURE__ */new Set();\n    this.dispatchStateUpdateEventDebounced = _debounce(() => this.dispatchQueuedStateUpdateEvents(), 0);\n    // If user is doing a manual expand all node by node, we don't want to process one at a time.\n    // EVENT_ROW_GROUP_OPENED is already async, so no impact of making the state async here.\n    this.onRowGroupOpenedDebounced = _debounce(() => this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState()), 0);\n    // similar to row expansion, want to debounce. However, selection is synchronous, so need to mark as stale in case `getState` is called.\n    this.onRowSelectedDebounced = _debounce(() => {\n      this.staleStateKeys.delete(\"rowSelection\");\n      this.updateCachedState(\"rowSelection\", this.getRowSelectionState());\n    }, 0);\n    this.staleStateKeys = /* @__PURE__ */new Set();\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n    this.ctrlsService = beans.ctrlsService;\n    this.pivotResultColsService = beans.pivotResultColsService;\n    this.focusService = beans.focusService;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnGroupStateService = beans.columnGroupStateService;\n    this.columnGetStateService = beans.columnGetStateService;\n    this.paginationService = beans.paginationService;\n    this.rowModel = beans.rowModel;\n    this.selectionService = beans.selectionService;\n    this.expansionService = beans.expansionService;\n    this.columnAnimationService = beans.columnAnimationService;\n    this.columnApplyStateService = beans.columnApplyStateService;\n    this.sideBarService = beans.sideBarService;\n    this.rangeService = beans.rangeService;\n  }\n  postConstruct() {\n    this.isClientSideRowModel = this.rowModel.getType() === \"clientSide\";\n    this.cachedState = this.gos.get(\"initialState\") ?? {};\n    this.ctrlsService.whenReady(() => this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnGridReady()));\n    const [newColumnsLoadedDestroyFunc, rowCountReadyDestroyFunc, firstDataRenderedDestroyFunc] = this.addManagedEventListeners({\n      newColumnsLoaded: ({\n        source\n      }) => {\n        if (source === \"gridInitializing\") {\n          newColumnsLoadedDestroyFunc();\n          this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnColumnsInitialised());\n        }\n      },\n      rowCountReady: () => {\n        rowCountReadyDestroyFunc?.();\n        this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnRowCountReady());\n      },\n      firstDataRendered: () => {\n        firstDataRenderedDestroyFunc?.();\n        this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnFirstDataRendered());\n      }\n    });\n  }\n  getState() {\n    if (this.staleStateKeys.size) {\n      this.refreshStaleState();\n    }\n    return this.cachedState;\n  }\n  setupStateOnGridReady() {\n    this.updateCachedState(\"sideBar\", this.getSideBarState());\n    const stateUpdater = () => this.updateCachedState(\"sideBar\", this.getSideBarState());\n    this.addManagedEventListeners({\n      toolPanelVisibleChanged: stateUpdater,\n      sideBarUpdated: stateUpdater\n    });\n  }\n  setupStateOnColumnsInitialised() {\n    const initialState = this.gos.get(\"initialState\") ?? {};\n    this.setColumnState(initialState);\n    this.setColumnGroupState(initialState);\n    this.updateColumnState([\"aggregation\", \"columnOrder\", \"columnPinning\", \"columnSizing\", \"columnVisibility\", \"pivot\", \"pivot\", \"rowGroup\", \"sort\"]);\n    this.updateCachedState(\"columnGroup\", this.getColumnGroupState());\n    this.addManagedEventListeners({\n      columnValueChanged: () => this.updateColumnState([\"aggregation\"]),\n      columnMoved: () => this.updateColumnState([\"columnOrder\"]),\n      columnPinned: () => this.updateColumnState([\"columnPinning\"]),\n      columnResized: () => this.updateColumnState([\"columnSizing\"]),\n      columnVisible: () => this.updateColumnState([\"columnVisibility\"]),\n      columnPivotChanged: () => this.updateColumnState([\"pivot\"]),\n      columnPivotModeChanged: () => this.updateColumnState([\"pivot\"]),\n      columnRowGroupChanged: () => this.updateColumnState([\"rowGroup\"]),\n      sortChanged: () => this.updateColumnState([\"sort\"]),\n      newColumnsLoaded: () => this.updateColumnState([\"aggregation\", \"columnOrder\", \"columnPinning\", \"columnSizing\", \"columnVisibility\", \"pivot\", \"rowGroup\", \"sort\"]),\n      columnGroupOpened: () => this.updateCachedState(\"columnGroup\", this.getColumnGroupState())\n    });\n  }\n  setupStateOnRowCountReady() {\n    const {\n      filter: filterState,\n      rowGroupExpansion: rowGroupExpansionState,\n      rowSelection: rowSelectionState,\n      pagination: paginationState\n    } = this.gos.get(\"initialState\") ?? {};\n    const advancedFilterModel = this.gos.get(\"advancedFilterModel\");\n    if (filterState || advancedFilterModel) {\n      this.setFilterState(filterState, advancedFilterModel);\n    }\n    if (rowGroupExpansionState) {\n      this.setRowGroupExpansionState(rowGroupExpansionState);\n    }\n    if (rowSelectionState) {\n      this.setRowSelectionState(rowSelectionState);\n    }\n    if (paginationState) {\n      this.setPaginationState(paginationState);\n    }\n    this.updateCachedState(\"filter\", this.getFilterState());\n    this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\n    this.updateCachedState(\"rowSelection\", this.getRowSelectionState());\n    this.updateCachedState(\"pagination\", this.getPaginationState());\n    this.addManagedEventListeners({\n      filterChanged: () => this.updateCachedState(\"filter\", this.getFilterState()),\n      rowGroupOpened: () => this.onRowGroupOpenedDebounced(),\n      expandOrCollapseAll: () => this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState()),\n      selectionChanged: () => {\n        this.staleStateKeys.add(\"rowSelection\");\n        this.onRowSelectedDebounced();\n      },\n      paginationChanged: event => {\n        if (event.newPage || event.newPageSize) {\n          this.updateCachedState(\"pagination\", this.getPaginationState());\n        }\n      }\n    });\n  }\n  setupStateOnFirstDataRendered() {\n    const {\n      scroll: scrollState,\n      rangeSelection: rangeSelectionState,\n      focusedCell: focusedCellState,\n      columnOrder: columnOrderState\n    } = this.gos.get(\"initialState\") ?? {};\n    if (focusedCellState) {\n      this.setFocusedCellState(focusedCellState);\n    }\n    if (rangeSelectionState) {\n      this.setRangeSelectionState(rangeSelectionState);\n    }\n    if (scrollState) {\n      this.setScrollState(scrollState);\n    }\n    this.setColumnPivotState(!!columnOrderState?.orderedColIds);\n    this.updateCachedState(\"sideBar\", this.getSideBarState());\n    this.updateCachedState(\"focusedCell\", this.getFocusedCellState());\n    this.updateCachedState(\"rangeSelection\", this.getRangeSelectionState());\n    this.updateCachedState(\"scroll\", this.getScrollState());\n    this.addManagedEventListeners({\n      cellFocused: () => this.updateCachedState(\"focusedCell\", this.getFocusedCellState()),\n      rangeSelectionChanged: event => {\n        if (event.finished) {\n          this.updateCachedState(\"rangeSelection\", this.getRangeSelectionState());\n        }\n      },\n      bodyScrollEnd: () => this.updateCachedState(\"scroll\", this.getScrollState())\n    });\n  }\n  getColumnState() {\n    const pivotMode = this.columnModel.isPivotMode();\n    const sortColumns = [];\n    const groupColIds = [];\n    const aggregationColumns = [];\n    const pivotColIds = [];\n    const leftColIds = [];\n    const rightColIds = [];\n    const hiddenColIds = [];\n    const columnSizes = [];\n    const columns = [];\n    const columnState = this.columnGetStateService.getColumnState();\n    for (let i = 0; i < columnState.length; i++) {\n      const {\n        colId,\n        sort,\n        sortIndex,\n        rowGroup,\n        rowGroupIndex,\n        aggFunc,\n        pivot,\n        pivotIndex,\n        pinned,\n        hide,\n        width,\n        flex\n      } = columnState[i];\n      columns.push(colId);\n      if (sort) {\n        sortColumns[sortIndex ?? 0] = {\n          colId,\n          sort\n        };\n      }\n      if (rowGroup) {\n        groupColIds[rowGroupIndex ?? 0] = colId;\n      }\n      if (typeof aggFunc === \"string\") {\n        aggregationColumns.push({\n          colId,\n          aggFunc\n        });\n      }\n      if (pivot) {\n        pivotColIds[pivotIndex ?? 0] = colId;\n      }\n      if (pinned) {\n        (pinned === \"right\" ? rightColIds : leftColIds).push(colId);\n      }\n      if (hide) {\n        hiddenColIds.push(colId);\n      }\n      if (flex || width) {\n        columnSizes.push({\n          colId,\n          flex: flex ?? void 0,\n          width\n        });\n      }\n    }\n    return {\n      sort: sortColumns.length ? {\n        sortModel: sortColumns\n      } : void 0,\n      rowGroup: groupColIds.length ? {\n        groupColIds\n      } : void 0,\n      aggregation: aggregationColumns.length ? {\n        aggregationModel: aggregationColumns\n      } : void 0,\n      pivot: pivotColIds.length || pivotMode ? {\n        pivotMode,\n        pivotColIds\n      } : void 0,\n      columnPinning: leftColIds.length || rightColIds.length ? {\n        leftColIds,\n        rightColIds\n      } : void 0,\n      columnVisibility: hiddenColIds.length ? {\n        hiddenColIds\n      } : void 0,\n      columnSizing: columnSizes.length ? {\n        columnSizingModel: columnSizes\n      } : void 0,\n      columnOrder: columns.length ? {\n        orderedColIds: columns\n      } : void 0\n    };\n  }\n  setColumnState(initialState) {\n    const {\n      sort: sortState,\n      rowGroup: groupState,\n      aggregation: aggregationState,\n      pivot: pivotState,\n      columnPinning: columnPinningState,\n      columnVisibility: columnVisibilityState,\n      columnSizing: columnSizingState,\n      columnOrder: columnOrderState\n    } = initialState;\n    const columnStateMap = {};\n    const getColumnState2 = colId => {\n      let columnState = columnStateMap[colId];\n      if (columnState) {\n        return columnState;\n      }\n      columnState = {\n        colId\n      };\n      columnStateMap[colId] = columnState;\n      return columnState;\n    };\n    if (sortState) {\n      sortState.sortModel.forEach(({\n        colId,\n        sort\n      }, sortIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.sort = sort;\n        columnState.sortIndex = sortIndex;\n      });\n    }\n    if (groupState) {\n      groupState.groupColIds.forEach((colId, rowGroupIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.rowGroup = true;\n        columnState.rowGroupIndex = rowGroupIndex;\n      });\n    }\n    if (aggregationState) {\n      aggregationState.aggregationModel.forEach(({\n        colId,\n        aggFunc\n      }) => {\n        getColumnState2(colId).aggFunc = aggFunc;\n      });\n    }\n    if (pivotState) {\n      pivotState.pivotColIds.forEach((colId, pivotIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.pivot = true;\n        columnState.pivotIndex = pivotIndex;\n      });\n      this.gos.updateGridOptions({\n        options: {\n          pivotMode: pivotState.pivotMode\n        },\n        source: \"gridInitializing\"\n      });\n    }\n    if (columnPinningState) {\n      columnPinningState.leftColIds.forEach(colId => {\n        getColumnState2(colId).pinned = \"left\";\n      });\n      columnPinningState.rightColIds.forEach(colId => {\n        getColumnState2(colId).pinned = \"right\";\n      });\n    }\n    if (columnVisibilityState) {\n      columnVisibilityState.hiddenColIds.forEach(colId => {\n        getColumnState2(colId).hide = true;\n      });\n    }\n    if (columnSizingState) {\n      columnSizingState.columnSizingModel.forEach(({\n        colId,\n        flex,\n        width\n      }) => {\n        const columnState = getColumnState2(colId);\n        columnState.flex = flex ?? null;\n        columnState.width = width;\n      });\n    }\n    const columns = columnOrderState?.orderedColIds;\n    const applyOrder = !!columns?.length;\n    const columnStates = applyOrder ? columns.map(colId => getColumnState2(colId)) : Object.values(columnStateMap);\n    if (columnStates.length) {\n      this.columnStates = columnStates;\n      const defaultState = {\n        sort: null,\n        sortIndex: null,\n        rowGroup: null,\n        rowGroupIndex: null,\n        aggFunc: null,\n        pivot: null,\n        pivotIndex: null,\n        pinned: null,\n        hide: null,\n        flex: null\n      };\n      this.columnApplyStateService.applyColumnState({\n        state: columnStates,\n        applyOrder,\n        defaultState\n      }, \"gridInitializing\");\n    }\n  }\n  setColumnPivotState(applyOrder) {\n    const columnStates = this.columnStates;\n    this.columnStates = void 0;\n    const columnGroupStates = this.columnGroupStates;\n    this.columnGroupStates = void 0;\n    if (!this.pivotResultColsService.isPivotResultColsPresent()) {\n      return;\n    }\n    if (columnStates) {\n      const secondaryColumnStates = [];\n      for (const columnState of columnStates) {\n        if (this.pivotResultColsService.getPivotResultCol(columnState.colId)) {\n          secondaryColumnStates.push(columnState);\n        }\n      }\n      this.columnApplyStateService.applyColumnState({\n        state: secondaryColumnStates,\n        applyOrder\n      }, \"gridInitializing\");\n    }\n    if (columnGroupStates) {\n      this.columnGroupStateService.setColumnGroupState(columnGroupStates, \"gridInitializing\");\n    }\n  }\n  getColumnGroupState() {\n    const columnGroupState = this.columnGroupStateService.getColumnGroupState();\n    const openColumnGroups = [];\n    columnGroupState.forEach(({\n      groupId,\n      open\n    }) => {\n      if (open) {\n        openColumnGroups.push(groupId);\n      }\n    });\n    return openColumnGroups.length ? {\n      openColumnGroupIds: openColumnGroups\n    } : void 0;\n  }\n  setColumnGroupState(initialState) {\n    if (!Object.prototype.hasOwnProperty.call(initialState, \"columnGroup\")) {\n      return;\n    }\n    const openColumnGroups = new Set(initialState.columnGroup?.openColumnGroupIds);\n    const existingColumnGroupState = this.columnGroupStateService.getColumnGroupState();\n    const stateItems = existingColumnGroupState.map(({\n      groupId\n    }) => {\n      const open = openColumnGroups.has(groupId);\n      if (open) {\n        openColumnGroups.delete(groupId);\n      }\n      return {\n        groupId,\n        open\n      };\n    });\n    openColumnGroups.forEach(groupId => {\n      stateItems.push({\n        groupId,\n        open: true\n      });\n    });\n    if (stateItems.length) {\n      this.columnGroupStates = stateItems;\n    }\n    this.columnGroupStateService.setColumnGroupState(stateItems, \"gridInitializing\");\n  }\n  getFilterState() {\n    let filterModel = this.filterManager?.getFilterModel();\n    if (filterModel && Object.keys(filterModel).length === 0) {\n      filterModel = void 0;\n    }\n    const advancedFilterModel = this.filterManager?.getAdvancedFilterModel() ?? void 0;\n    return filterModel || advancedFilterModel ? {\n      filterModel,\n      advancedFilterModel\n    } : void 0;\n  }\n  setFilterState(filterState, gridOptionAdvancedFilterModel) {\n    const {\n      filterModel,\n      advancedFilterModel\n    } = filterState ?? {\n      advancedFilterModel: gridOptionAdvancedFilterModel\n    };\n    if (filterModel) {\n      this.filterManager?.setFilterModel(filterModel, \"columnFilter\");\n    }\n    if (advancedFilterModel) {\n      this.filterManager?.setAdvancedFilterModel(advancedFilterModel);\n    }\n  }\n  getRangeSelectionState() {\n    const cellRanges = this.rangeService?.getCellRanges().map(cellRange => {\n      const {\n        id,\n        type,\n        startRow,\n        endRow,\n        columns,\n        startColumn\n      } = cellRange;\n      return {\n        id,\n        type,\n        startRow,\n        endRow,\n        colIds: columns.map(column => column.getColId()),\n        startColId: startColumn.getColId()\n      };\n    });\n    return cellRanges?.length ? {\n      cellRanges\n    } : void 0;\n  }\n  setRangeSelectionState(rangeSelectionState) {\n    if (!this.gos.get(\"enableRangeSelection\") || !this.rangeService) {\n      return;\n    }\n    const cellRanges = [];\n    rangeSelectionState.cellRanges.forEach(cellRange => {\n      const columns = [];\n      cellRange.colIds.forEach(colId => {\n        const column = this.columnModel.getCol(colId);\n        if (column) {\n          columns.push(column);\n        }\n      });\n      if (!columns.length) {\n        return;\n      }\n      let startColumn = this.columnModel.getCol(cellRange.startColId);\n      if (!startColumn) {\n        const allColumns = this.visibleColsService.getAllCols();\n        const columnSet = new Set(columns);\n        startColumn = allColumns.find(column => columnSet.has(column));\n      }\n      cellRanges.push({\n        ...cellRange,\n        columns,\n        startColumn\n      });\n    });\n    this.rangeService.setCellRanges(cellRanges);\n  }\n  getScrollState() {\n    if (!this.isClientSideRowModel) {\n      return void 0;\n    }\n    const scrollFeature = this.ctrlsService.getGridBodyCtrl()?.getScrollFeature();\n    const {\n      left\n    } = scrollFeature?.getHScrollPosition() ?? {\n      left: 0\n    };\n    const {\n      top\n    } = scrollFeature?.getVScrollPosition() ?? {\n      top: 0\n    };\n    return top || left ? {\n      top,\n      left\n    } : void 0;\n  }\n  setScrollState(scrollState) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const {\n      top,\n      left\n    } = scrollState;\n    this.ctrlsService.getGridBodyCtrl()?.getScrollFeature().setScrollPosition(top, left);\n  }\n  getSideBarState() {\n    return this.sideBarService?.getSideBarComp()?.getState();\n  }\n  getFocusedCellState() {\n    if (!this.isClientSideRowModel) {\n      return void 0;\n    }\n    const focusedCell = this.focusService.getFocusedCell();\n    if (focusedCell) {\n      const {\n        column,\n        rowIndex,\n        rowPinned\n      } = focusedCell;\n      return {\n        colId: column.getColId(),\n        rowIndex,\n        rowPinned\n      };\n    }\n    return void 0;\n  }\n  setFocusedCellState(focusedCellState) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const {\n      colId,\n      rowIndex,\n      rowPinned\n    } = focusedCellState;\n    this.focusService.setFocusedCell({\n      column: this.columnModel.getCol(colId),\n      rowIndex,\n      rowPinned,\n      forceBrowserFocus: true,\n      preventScrollOnBrowserFocus: true\n    });\n  }\n  getPaginationState() {\n    if (!this.paginationService) {\n      return void 0;\n    }\n    const page = this.paginationService.getCurrentPage();\n    const pageSize = !this.gos.get(\"paginationAutoPageSize\") ? this.paginationService.getPageSize() : void 0;\n    if (!page && !pageSize) {\n      return;\n    }\n    return {\n      page,\n      pageSize\n    };\n  }\n  setPaginationState(paginationState) {\n    if (!this.paginationService) {\n      return;\n    }\n    if (paginationState.pageSize && !this.gos.get(\"paginationAutoPageSize\")) {\n      this.paginationService.setPageSize(paginationState.pageSize, \"initialState\");\n    }\n    if (typeof paginationState.page === \"number\") {\n      this.paginationService.setPage(paginationState.page);\n    }\n  }\n  getRowSelectionState() {\n    const selectionState = this.selectionService.getSelectionState();\n    const noSelections = !selectionState || !Array.isArray(selectionState) && (selectionState.selectAll === false || selectionState.selectAllChildren === false) && !selectionState?.toggledNodes?.length;\n    return noSelections ? void 0 : selectionState;\n  }\n  setRowSelectionState(rowSelectionState) {\n    this.selectionService.setSelectionState(rowSelectionState, \"gridInitializing\");\n  }\n  getRowGroupExpansionState() {\n    const expandedRowGroups = this.expansionService.getExpandedRows();\n    return expandedRowGroups.length ? {\n      expandedRowGroupIds: expandedRowGroups\n    } : void 0;\n  }\n  setRowGroupExpansionState(rowGroupExpansionState) {\n    this.expansionService.expandRows(rowGroupExpansionState.expandedRowGroupIds);\n  }\n  updateColumnState(features) {\n    const newColumnState = this.getColumnState();\n    let hasChanged = false;\n    Object.entries(newColumnState).forEach(([key, value]) => {\n      if (!_jsonEquals(value, this.cachedState[key])) {\n        hasChanged = true;\n      }\n    });\n    this.cachedState = {\n      ...this.cachedState,\n      ...newColumnState\n    };\n    if (hasChanged) {\n      this.dispatchStateUpdateEvent(features);\n    }\n  }\n  updateCachedState(key, value) {\n    const existingValue = this.cachedState[key];\n    this.setCachedStateValue(key, value);\n    if (!_jsonEquals(value, existingValue)) {\n      this.dispatchStateUpdateEvent([key]);\n    }\n  }\n  setCachedStateValue(key, value) {\n    this.cachedState = {\n      ...this.cachedState,\n      [key]: value\n    };\n  }\n  refreshStaleState() {\n    this.staleStateKeys.forEach(key => {\n      switch (key) {\n        case \"rowSelection\":\n          this.setCachedStateValue(key, this.getRowSelectionState());\n          break;\n      }\n    });\n    this.staleStateKeys.clear();\n  }\n  dispatchStateUpdateEvent(sources) {\n    if (this.suppressEvents) {\n      return;\n    }\n    sources.forEach(source => this.queuedUpdateSources.add(source));\n    this.dispatchStateUpdateEventDebounced();\n  }\n  dispatchQueuedStateUpdateEvents() {\n    const sources = Array.from(this.queuedUpdateSources);\n    this.queuedUpdateSources.clear();\n    const event = {\n      type: \"stateUpdated\",\n      sources,\n      state: this.cachedState\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  suppressEventsAndDispatchInitEvent(updateFunc) {\n    this.suppressEvents = true;\n    this.columnAnimationService.setSuppressAnimation(true);\n    updateFunc();\n    setTimeout(() => {\n      this.suppressEvents = false;\n      this.queuedUpdateSources.clear();\n      if (!this.isAlive()) {\n        return;\n      }\n      this.columnAnimationService.setSuppressAnimation(false);\n      this.dispatchStateUpdateEvent([\"gridInitializing\"]);\n    });\n  }\n};\n\n// community-modules/core/src/misc/state/stateModule.ts\nvar StateCoreModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/state-core\",\n  beans: [StateService]\n};\nvar StateApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/state-api\",\n  apiFunctions: {\n    getState\n  },\n  dependantModules: [StateCoreModule]\n};\nvar StateModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/state\",\n  dependantModules: [StateCoreModule, StateApiModule]\n};\n\n// community-modules/core/src/pagination/paginationApi.ts\nfunction paginationIsLastPageFound(beans) {\n  return beans.rowModel.isLastRowIndexKnown();\n}\nfunction paginationGetPageSize(beans) {\n  return beans.paginationService?.getPageSize() ?? 100;\n}\nfunction paginationGetCurrentPage(beans) {\n  return beans.paginationService?.getCurrentPage() ?? 0;\n}\nfunction paginationGetTotalPages(beans) {\n  return beans.paginationService?.getTotalPages() ?? 1;\n}\nfunction paginationGetRowCount(beans) {\n  return beans.paginationService ? beans.paginationService.getMasterRowCount() : beans.rowModel.getRowCount();\n}\nfunction paginationGoToNextPage(beans) {\n  beans.paginationService?.goToNextPage();\n}\nfunction paginationGoToPreviousPage(beans) {\n  beans.paginationService?.goToPreviousPage();\n}\nfunction paginationGoToFirstPage(beans) {\n  beans.paginationService?.goToFirstPage();\n}\nfunction paginationGoToLastPage(beans) {\n  beans.paginationService?.goToLastPage();\n}\nfunction paginationGoToPage(beans, page) {\n  beans.paginationService?.goToPage(page);\n}\n\n// community-modules/core/src/pagination/paginationAutoPageSizeService.ts\nvar PaginationAutoPageSizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"paginationAutoPageSizeService\";\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.paginationService = beans.paginationService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady(p => {\n      this.centerRowsCtrl = p.center;\n      const listener = this.checkPageSize.bind(this);\n      this.addManagedEventListeners({\n        bodyHeightChanged: listener,\n        scrollVisibilityChanged: listener\n      });\n      this.addManagedPropertyListener(\"paginationAutoPageSize\", this.onPaginationAutoSizeChanged.bind(this));\n      this.checkPageSize();\n    });\n  }\n  notActive() {\n    return !this.gos.get(\"paginationAutoPageSize\") || this.centerRowsCtrl == null;\n  }\n  onPaginationAutoSizeChanged() {\n    if (this.notActive()) {\n      this.paginationService.unsetAutoCalculatedPageSize();\n    } else {\n      this.checkPageSize();\n    }\n  }\n  checkPageSize() {\n    if (this.notActive()) {\n      return;\n    }\n    const bodyHeight = this.centerRowsCtrl.getViewportSizeFeature().getBodyHeight();\n    if (bodyHeight > 0) {\n      const update = () => {\n        const rowHeight = Math.max(this.gos.getRowHeightAsNumber(), 1);\n        const newPageSize = Math.floor(bodyHeight / rowHeight);\n        this.paginationService.setPageSize(newPageSize, \"autoCalculated\");\n      };\n      if (!this.isBodyRendered) {\n        update();\n        this.isBodyRendered = true;\n      } else {\n        _debounce(() => update(), 50)();\n      }\n    } else {\n      this.isBodyRendered = false;\n    }\n  }\n};\n\n// community-modules/core/src/utils/focus.ts\nfunction _addFocusableContainerListener(comp, eGui, focusService) {\n  comp.addManagedElementListeners(eGui, {\n    keydown: e => {\n      if (!e.defaultPrevented && e.key === KeyCode.TAB) {\n        const backwards = e.shiftKey;\n        if (!focusService.findNextFocusableElement(eGui, false, backwards)) {\n          if (focusService.focusNextGridCoreContainer(backwards)) {\n            e.preventDefault();\n          }\n        }\n      }\n    }\n  });\n}\n\n// community-modules/core/src/pagination/pageSizeSelector/pageSizeSelectorComp.ts\nvar PageSizeSelectorComp = class extends Component {\n  constructor() {\n    super( /* html */\n    `<span class=\"ag-paging-page-size\"></span>`);\n    this.hasEmptyOption = false;\n    this.handlePageSizeItemSelected = () => {\n      if (!this.selectPageSizeComp) {\n        return;\n      }\n      const newValue = this.selectPageSizeComp.getValue();\n      if (!newValue) {\n        return;\n      }\n      const paginationPageSize = Number(newValue);\n      if (isNaN(paginationPageSize) || paginationPageSize < 1 || paginationPageSize === this.paginationService.getPageSize()) {\n        return;\n      }\n      this.paginationService.setPageSize(paginationPageSize, \"pageSizeSelector\");\n      if (this.hasEmptyOption) {\n        this.toggleSelectDisplay(true);\n      }\n      this.selectPageSizeComp.getFocusableElement().focus();\n    };\n  }\n  wireBeans(beans) {\n    this.paginationService = beans.paginationService;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"paginationPageSizeSelector\", () => {\n      this.onPageSizeSelectorValuesChange();\n    });\n    this.addManagedEventListeners({\n      paginationChanged: event => this.handlePaginationChanged(event)\n    });\n  }\n  handlePaginationChanged(paginationChangedEvent) {\n    if (!this.selectPageSizeComp || !paginationChangedEvent?.newPageSize) {\n      return;\n    }\n    const paginationPageSize = this.paginationService.getPageSize();\n    if (this.getPageSizeSelectorValues().includes(paginationPageSize)) {\n      this.selectPageSizeComp.setValue(paginationPageSize.toString());\n    } else {\n      if (this.hasEmptyOption) {\n        this.selectPageSizeComp.setValue(\"\");\n      } else {\n        this.toggleSelectDisplay(true);\n      }\n    }\n  }\n  toggleSelectDisplay(show) {\n    if (this.selectPageSizeComp) {\n      this.reset();\n    }\n    if (!show) {\n      return;\n    }\n    this.reloadPageSizesSelector();\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    this.appendChild(this.selectPageSizeComp);\n  }\n  reset() {\n    _clearElement(this.getGui());\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    this.selectPageSizeComp = this.destroyBean(this.selectPageSizeComp);\n  }\n  onPageSizeSelectorValuesChange() {\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    if (this.shouldShowPageSizeSelector()) {\n      this.reloadPageSizesSelector();\n    }\n  }\n  shouldShowPageSizeSelector() {\n    return this.gos.get(\"pagination\") && !this.gos.get(\"suppressPaginationPanel\") && !this.gos.get(\"paginationAutoPageSize\") && this.gos.get(\"paginationPageSizeSelector\") !== false;\n  }\n  reloadPageSizesSelector() {\n    const pageSizeOptions = this.getPageSizeSelectorValues();\n    const paginationPageSizeOption = this.paginationService.getPageSize();\n    const shouldAddAndSelectEmptyOption = !paginationPageSizeOption || !pageSizeOptions.includes(paginationPageSizeOption);\n    if (shouldAddAndSelectEmptyOption) {\n      pageSizeOptions.unshift(\"\");\n      _warnOnce(`The paginationPageSize grid option is set to a value that is not in the list of page size options.\n                Please make sure that the paginationPageSize grid option is set to one of the values in the \n                paginationPageSizeSelector array, or set the paginationPageSizeSelector to false to hide the page size selector.`);\n    }\n    if (this.selectPageSizeComp) {\n      this.selectPageSizeComp = this.destroyBean(this.selectPageSizeComp);\n    }\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const localisedLabel = localeTextFunc(\"pageSizeSelectorLabel\", \"Page Size:\");\n    const options = pageSizeOptions.map(value => ({\n      value: String(value),\n      text: String(value)\n    }));\n    const localisedAriaLabel = localeTextFunc(\"ariaPageSizeSelectorLabel\", \"Page Size\");\n    this.selectPageSizeComp = this.createManagedBean(new AgSelect()).addOptions(options).setValue(String(shouldAddAndSelectEmptyOption ? \"\" : paginationPageSizeOption)).setAriaLabel(localisedAriaLabel).setLabel(localisedLabel).onValueChange(() => this.handlePageSizeItemSelected());\n    this.hasEmptyOption = shouldAddAndSelectEmptyOption;\n  }\n  getPageSizeSelectorValues() {\n    const defaultValues = [20, 50, 100];\n    const paginationPageSizeSelectorValues = this.gos.get(\"paginationPageSizeSelector\");\n    if (!Array.isArray(paginationPageSizeSelectorValues) || !this.validateValues(paginationPageSizeSelectorValues)) {\n      return defaultValues;\n    }\n    return [...paginationPageSizeSelectorValues].sort((a, b) => a - b);\n  }\n  validateValues(values) {\n    if (!values.length) {\n      _warnOnce(`The paginationPageSizeSelector grid option is an empty array. This is most likely a mistake.\n                If you want to hide the page size selector, please set the paginationPageSizeSelector to false.`);\n      return false;\n    }\n    for (let i = 0; i < values.length; i++) {\n      const value = values[i];\n      const isNumber = typeof value === \"number\";\n      const isPositive = value > 0;\n      if (!isNumber) {\n        _warnOnce(`The paginationPageSizeSelector grid option contains a non-numeric value.\n                    Please make sure that all values in the paginationPageSizeSelector array are numbers.`);\n        return false;\n      }\n      if (!isPositive) {\n        _warnOnce(`The paginationPageSizeSelector grid option contains a negative number or zero.\n                    Please make sure that all values in the paginationPageSizeSelector array are positive.`);\n        return false;\n      }\n    }\n    return true;\n  }\n  destroy() {\n    this.toggleSelectDisplay(false);\n    super.destroy();\n  }\n};\nvar PageSizeSelectorSelector = {\n  selector: \"AG-PAGE-SIZE-SELECTOR\",\n  component: PageSizeSelectorComp\n};\n\n// community-modules/core/src/pagination/paginationComp.ts\nvar PaginationComp = class extends TabGuardComp {\n  constructor() {\n    super();\n    this.btFirst = RefPlaceholder;\n    this.btPrevious = RefPlaceholder;\n    this.btNext = RefPlaceholder;\n    this.btLast = RefPlaceholder;\n    this.lbRecordCount = RefPlaceholder;\n    this.lbFirstRowOnPage = RefPlaceholder;\n    this.lbLastRowOnPage = RefPlaceholder;\n    this.lbCurrent = RefPlaceholder;\n    this.lbTotal = RefPlaceholder;\n    this.pageSizeComp = RefPlaceholder;\n    this.previousAndFirstButtonsDisabled = false;\n    this.nextButtonDisabled = false;\n    this.lastButtonDisabled = false;\n    this.areListenersSetup = false;\n    this.allowFocusInnerElement = false;\n  }\n  wireBeans(beans) {\n    this.rowNodeBlockLoader = beans.rowNodeBlockLoader;\n    this.rowModel = beans.rowModel;\n    this.paginationService = beans.paginationService;\n    this.focusService = beans.focusService;\n  }\n  postConstruct() {\n    const isRtl = this.gos.get(\"enableRtl\");\n    this.setTemplate(this.getTemplate(), [PageSizeSelectorSelector]);\n    const {\n      btFirst,\n      btPrevious,\n      btNext,\n      btLast\n    } = this;\n    this.activateTabIndex([btFirst, btPrevious, btNext, btLast]);\n    btFirst.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"last\" : \"first\", this.gos));\n    btPrevious.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"next\" : \"previous\", this.gos));\n    btNext.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"previous\" : \"next\", this.gos));\n    btLast.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"first\" : \"last\", this.gos));\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationChanged.bind(this));\n    this.addManagedPropertyListener(\"suppressPaginationPanel\", this.onPaginationChanged.bind(this));\n    this.addManagedPropertyListeners([\"paginationPageSizeSelector\", \"paginationAutoPageSize\", \"suppressPaginationPanel\"], () => this.onPageSizeRelatedOptionsChange());\n    this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector());\n    this.initialiseTabGuard({\n      // prevent tab guard default logic\n      onTabKeyDown: () => {},\n      focusInnerElement: fromBottom => {\n        if (this.allowFocusInnerElement) {\n          this.tabGuardFeature.getTabGuardCtrl().focusInnerElement(fromBottom);\n        } else {\n          this.focusService.focusGridInnerElement(fromBottom);\n        }\n      },\n      forceFocusOutWhenTabGuardsAreEmpty: true\n    });\n    this.onPaginationChanged();\n  }\n  setAllowFocus(allowFocus) {\n    this.allowFocusInnerElement = allowFocus;\n  }\n  onPaginationChanged() {\n    const isPaging = this.gos.get(\"pagination\");\n    const paginationPanelEnabled = isPaging && !this.gos.get(\"suppressPaginationPanel\");\n    this.setDisplayed(paginationPanelEnabled);\n    if (!paginationPanelEnabled) {\n      return;\n    }\n    this.setupListeners();\n    this.enableOrDisableButtons();\n    this.updateRowLabels();\n    this.setCurrentPageLabel();\n    this.setTotalLabels();\n    this.onPageSizeRelatedOptionsChange();\n  }\n  onPageSizeRelatedOptionsChange() {\n    this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector());\n  }\n  setupListeners() {\n    if (!this.areListenersSetup) {\n      this.addManagedEventListeners({\n        paginationChanged: this.onPaginationChanged.bind(this)\n      });\n      [{\n        el: this.btFirst,\n        fn: this.onBtFirst.bind(this)\n      }, {\n        el: this.btPrevious,\n        fn: this.onBtPrevious.bind(this)\n      }, {\n        el: this.btNext,\n        fn: this.onBtNext.bind(this)\n      }, {\n        el: this.btLast,\n        fn: this.onBtLast.bind(this)\n      }].forEach(item => {\n        const {\n          el,\n          fn\n        } = item;\n        this.addManagedListeners(el, {\n          click: fn,\n          keydown: e => {\n            if (e.key === KeyCode.ENTER || e.key === KeyCode.SPACE) {\n              e.preventDefault();\n              fn();\n            }\n          }\n        });\n      });\n      _addFocusableContainerListener(this, this.getGui(), this.focusService);\n      this.areListenersSetup = true;\n    }\n  }\n  onBtFirst() {\n    if (!this.previousAndFirstButtonsDisabled) {\n      this.paginationService.goToFirstPage();\n    }\n  }\n  setCurrentPageLabel() {\n    const pagesExist = this.paginationService.getTotalPages() > 0;\n    const currentPage = this.paginationService.getCurrentPage();\n    const toDisplay = pagesExist ? currentPage + 1 : 0;\n    this.lbCurrent.textContent = this.formatNumber(toDisplay);\n  }\n  formatNumber(value) {\n    const userFunc = this.gos.getCallback(\"paginationNumberFormatter\");\n    if (userFunc) {\n      const params = {\n        value\n      };\n      return userFunc(params);\n    }\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const thousandSeparator = localeTextFunc(\"thousandSeparator\", \",\");\n    const decimalSeparator = localeTextFunc(\"decimalSeparator\", \".\");\n    return _formatNumberCommas(value, thousandSeparator, decimalSeparator);\n  }\n  getTemplate() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const strPage = localeTextFunc(\"page\", \"Page\");\n    const strTo = localeTextFunc(\"to\", \"to\");\n    const strOf = localeTextFunc(\"of\", \"of\");\n    const strFirst = localeTextFunc(\"firstPage\", \"First Page\");\n    const strPrevious = localeTextFunc(\"previousPage\", \"Previous Page\");\n    const strNext = localeTextFunc(\"nextPage\", \"Next Page\");\n    const strLast = localeTextFunc(\"lastPage\", \"Last Page\");\n    const compId = this.getCompId();\n    return /* html */(\n      `<div class=\"ag-paging-panel ag-unselectable\" id=\"ag-${compId}\">\n                <ag-page-size-selector data-ref=\"pageSizeComp\"></ag-page-size-selector>\n                <span class=\"ag-paging-row-summary-panel\" role=\"status\">\n                    <span id=\"ag-${compId}-first-row\" data-ref=\"lbFirstRowOnPage\" class=\"ag-paging-row-summary-panel-number\"></span>\n                    <span id=\"ag-${compId}-to\">${strTo}</span>\n                    <span id=\"ag-${compId}-last-row\" data-ref=\"lbLastRowOnPage\" class=\"ag-paging-row-summary-panel-number\"></span>\n                    <span id=\"ag-${compId}-of\">${strOf}</span>\n                    <span id=\"ag-${compId}-row-count\" data-ref=\"lbRecordCount\" class=\"ag-paging-row-summary-panel-number\"></span>\n                </span>\n                <span class=\"ag-paging-page-summary-panel\" role=\"presentation\">\n                    <div data-ref=\"btFirst\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strFirst}\"></div>\n                    <div data-ref=\"btPrevious\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strPrevious}\"></div>\n                    <span class=\"ag-paging-description\" role=\"status\">\n                        <span id=\"ag-${compId}-start-page\">${strPage}</span>\n                        <span id=\"ag-${compId}-start-page-number\" data-ref=\"lbCurrent\" class=\"ag-paging-number\"></span>\n                        <span id=\"ag-${compId}-of-page\">${strOf}</span>\n                        <span id=\"ag-${compId}-of-page-number\" data-ref=\"lbTotal\" class=\"ag-paging-number\"></span>\n                    </span>\n                    <div data-ref=\"btNext\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strNext}\"></div>\n                    <div data-ref=\"btLast\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strLast}\"></div>\n                </span>\n            </div>`\n    );\n  }\n  onBtNext() {\n    if (!this.nextButtonDisabled) {\n      this.paginationService.goToNextPage();\n    }\n  }\n  onBtPrevious() {\n    if (!this.previousAndFirstButtonsDisabled) {\n      this.paginationService.goToPreviousPage();\n    }\n  }\n  onBtLast() {\n    if (!this.lastButtonDisabled) {\n      this.paginationService.goToLastPage();\n    }\n  }\n  enableOrDisableButtons() {\n    const currentPage = this.paginationService.getCurrentPage();\n    const maxRowFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.paginationService.getTotalPages();\n    this.previousAndFirstButtonsDisabled = currentPage === 0;\n    this.toggleButtonDisabled(this.btFirst, this.previousAndFirstButtonsDisabled);\n    this.toggleButtonDisabled(this.btPrevious, this.previousAndFirstButtonsDisabled);\n    const zeroPagesToDisplay = this.isZeroPagesToDisplay();\n    const onLastPage = currentPage === totalPages - 1;\n    this.nextButtonDisabled = onLastPage || zeroPagesToDisplay;\n    this.lastButtonDisabled = !maxRowFound || zeroPagesToDisplay || currentPage === totalPages - 1;\n    this.toggleButtonDisabled(this.btNext, this.nextButtonDisabled);\n    this.toggleButtonDisabled(this.btLast, this.lastButtonDisabled);\n  }\n  toggleButtonDisabled(button, disabled) {\n    _setAriaDisabled(button, disabled);\n    button.classList.toggle(\"ag-disabled\", disabled);\n  }\n  updateRowLabels() {\n    const currentPage = this.paginationService.getCurrentPage();\n    const pageSize = this.paginationService.getPageSize();\n    const maxRowFound = this.rowModel.isLastRowIndexKnown();\n    const rowCount = this.rowModel.isLastRowIndexKnown() ? this.paginationService.getMasterRowCount() : null;\n    let startRow;\n    let endRow;\n    if (this.isZeroPagesToDisplay()) {\n      startRow = endRow = 0;\n    } else {\n      startRow = pageSize * currentPage + 1;\n      endRow = startRow + pageSize - 1;\n      if (maxRowFound && endRow > rowCount) {\n        endRow = rowCount;\n      }\n    }\n    this.lbFirstRowOnPage.textContent = this.formatNumber(startRow);\n    if (this.rowNodeBlockLoader?.isLoading()) {\n      const translate = this.localeService.getLocaleTextFunc();\n      this.lbLastRowOnPage.innerHTML = translate(\"pageLastRowUnknown\", \"?\");\n    } else {\n      this.lbLastRowOnPage.textContent = this.formatNumber(endRow);\n    }\n  }\n  isZeroPagesToDisplay() {\n    const maxRowFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.paginationService.getTotalPages();\n    return maxRowFound && totalPages === 0;\n  }\n  setTotalLabels() {\n    const lastPageFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.paginationService.getTotalPages();\n    const rowCount = lastPageFound ? this.paginationService.getMasterRowCount() : null;\n    if (rowCount === 1) {\n      const firstRow = this.rowModel.getRow(0);\n      const hiddenGroupRow = firstRow && firstRow.group && !(firstRow.groupData || firstRow.aggData);\n      if (hiddenGroupRow) {\n        this.setTotalLabelsToZero();\n        return;\n      }\n    }\n    if (lastPageFound) {\n      this.lbTotal.textContent = this.formatNumber(totalPages);\n      this.lbRecordCount.textContent = this.formatNumber(rowCount);\n    } else {\n      const moreText = this.localeService.getLocaleTextFunc()(\"more\", \"more\");\n      this.lbTotal.innerHTML = moreText;\n      this.lbRecordCount.innerHTML = moreText;\n    }\n  }\n  setTotalLabelsToZero() {\n    this.lbFirstRowOnPage.textContent = this.formatNumber(0);\n    this.lbCurrent.textContent = this.formatNumber(0);\n    this.lbLastRowOnPage.textContent = this.formatNumber(0);\n    this.lbTotal.textContent = this.formatNumber(0);\n    this.lbRecordCount.textContent = this.formatNumber(0);\n  }\n};\nvar PaginationSelector = {\n  selector: \"AG-PAGINATION\",\n  component: PaginationComp\n};\n\n// community-modules/core/src/pagination/paginationService.ts\nvar PaginationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"paginationService\";\n    this.currentPage = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = 0;\n    this.masterRowCount = 0;\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  postConstruct() {\n    this.active = this.gos.get(\"pagination\");\n    this.pageSizeFromGridOptions = this.gos.get(\"paginationPageSize\");\n    this.paginateChildRows = this.isPaginateChildRows();\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationGridOptionChanged.bind(this));\n    this.addManagedPropertyListener(\"paginationPageSize\", this.onPageSizeGridOptionChanged.bind(this));\n  }\n  getPaginationSelector() {\n    return PaginationSelector;\n  }\n  isPaginateChildRows() {\n    const shouldPaginate = this.gos.get(\"groupRemoveSingleChildren\") || this.gos.get(\"groupRemoveLowestSingleChildren\");\n    if (shouldPaginate) {\n      return true;\n    }\n    return this.gos.get(\"paginateChildRows\");\n  }\n  onPaginationGridOptionChanged() {\n    this.active = this.gos.get(\"pagination\");\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({\n      keepRenderedRows: true\n    });\n  }\n  onPageSizeGridOptionChanged() {\n    this.setPageSize(this.gos.get(\"paginationPageSize\"), \"gridOptions\");\n  }\n  goToPage(page) {\n    if (!this.active || this.currentPage === page || typeof this.currentPage !== \"number\") {\n      return;\n    }\n    this.currentPage = page;\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({\n      newPage: true\n    });\n  }\n  isRowPresent(rowNode) {\n    const nodeIsInPage = rowNode.rowIndex >= this.topDisplayedRowIndex && rowNode.rowIndex <= this.bottomDisplayedRowIndex;\n    return nodeIsInPage;\n  }\n  getPageForIndex(index) {\n    return Math.floor(index / this.pageSize);\n  }\n  goToPageWithIndex(index) {\n    if (!this.active) {\n      return;\n    }\n    const pageNumber = this.getPageForIndex(index);\n    this.goToPage(pageNumber);\n  }\n  isRowInPage(row) {\n    if (!this.active) {\n      return true;\n    }\n    const rowPage = this.getPageForIndex(row.rowIndex);\n    return rowPage === this.currentPage;\n  }\n  getCurrentPage() {\n    return this.currentPage;\n  }\n  goToNextPage() {\n    this.goToPage(this.currentPage + 1);\n  }\n  goToPreviousPage() {\n    this.goToPage(this.currentPage - 1);\n  }\n  goToFirstPage() {\n    this.goToPage(0);\n  }\n  goToLastPage() {\n    const rowCount = this.rowModel.getRowCount();\n    const lastPage = Math.floor(rowCount / this.pageSize);\n    this.goToPage(lastPage);\n  }\n  getPageSize() {\n    return this.pageSize;\n  }\n  getTotalPages() {\n    return this.totalPages;\n  }\n  /** This is only for state setting before data has been loaded */\n  setPage(page) {\n    this.currentPage = page;\n  }\n  get pageSize() {\n    if (_exists(this.pageSizeAutoCalculated)) {\n      return this.pageSizeAutoCalculated;\n    }\n    if (_exists(this.pageSizeFromPageSizeSelector)) {\n      return this.pageSizeFromPageSizeSelector;\n    }\n    if (_exists(this.pageSizeFromInitialState)) {\n      return this.pageSizeFromInitialState;\n    }\n    if (_exists(this.pageSizeFromGridOptions)) {\n      return this.pageSizeFromGridOptions;\n    }\n    return this.defaultPageSize;\n  }\n  calculatePages() {\n    if (this.active) {\n      if (this.paginateChildRows) {\n        this.calculatePagesAllRows();\n      } else {\n        this.calculatePagesMasterRowsOnly();\n      }\n    } else {\n      this.calculatedPagesNotActive();\n    }\n    this.pageBoundsService.calculateBounds(this.topDisplayedRowIndex, this.bottomDisplayedRowIndex);\n  }\n  unsetAutoCalculatedPageSize() {\n    if (this.pageSizeAutoCalculated === void 0) {\n      return;\n    }\n    const oldPageSize = this.pageSizeAutoCalculated;\n    this.pageSizeAutoCalculated = void 0;\n    if (this.pageSize === oldPageSize) {\n      return;\n    }\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({\n      newPageSize: true\n    });\n  }\n  setPageSize(size, source) {\n    const currentSize = this.pageSize;\n    switch (source) {\n      case \"autoCalculated\":\n        this.pageSizeAutoCalculated = size;\n        break;\n      case \"pageSizeSelector\":\n        this.pageSizeFromPageSizeSelector = size;\n        if (this.currentPage !== 0) {\n          this.goToFirstPage();\n        }\n        break;\n      case \"initialState\":\n        this.pageSizeFromInitialState = size;\n        break;\n      case \"gridOptions\":\n        this.pageSizeFromGridOptions = size;\n        this.pageSizeFromInitialState = void 0;\n        this.pageSizeFromPageSizeSelector = void 0;\n        if (this.currentPage !== 0) {\n          this.goToFirstPage();\n        }\n        break;\n    }\n    if (currentSize !== this.pageSize) {\n      this.calculatePages();\n      this.dispatchPaginationChangedEvent({\n        newPageSize: true,\n        keepRenderedRows: true\n      });\n    }\n  }\n  setZeroRows() {\n    this.masterRowCount = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = -1;\n    this.currentPage = 0;\n    this.totalPages = 0;\n  }\n  adjustCurrentPageIfInvalid() {\n    if (this.currentPage >= this.totalPages) {\n      this.currentPage = this.totalPages - 1;\n    }\n    if (!isFinite(this.currentPage) || isNaN(this.currentPage) || this.currentPage < 0) {\n      this.currentPage = 0;\n    }\n  }\n  calculatePagesMasterRowsOnly() {\n    this.masterRowCount = this.rowModel.getTopLevelRowCount();\n    if (this.masterRowCount <= 0) {\n      this.setZeroRows();\n      return;\n    }\n    const masterLastRowIndex = this.masterRowCount - 1;\n    this.totalPages = Math.floor(masterLastRowIndex / this.pageSize) + 1;\n    this.adjustCurrentPageIfInvalid();\n    const masterPageStartIndex = this.pageSize * this.currentPage;\n    let masterPageEndIndex = this.pageSize * (this.currentPage + 1) - 1;\n    if (masterPageEndIndex > masterLastRowIndex) {\n      masterPageEndIndex = masterLastRowIndex;\n    }\n    this.topDisplayedRowIndex = this.rowModel.getTopLevelRowDisplayedIndex(masterPageStartIndex);\n    if (masterPageEndIndex === masterLastRowIndex) {\n      this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;\n    } else {\n      const firstIndexNotToShow = this.rowModel.getTopLevelRowDisplayedIndex(masterPageEndIndex + 1);\n      this.bottomDisplayedRowIndex = firstIndexNotToShow - 1;\n    }\n  }\n  getMasterRowCount() {\n    return this.masterRowCount;\n  }\n  calculatePagesAllRows() {\n    this.masterRowCount = this.rowModel.getRowCount();\n    if (this.masterRowCount === 0) {\n      this.setZeroRows();\n      return;\n    }\n    const maxRowIndex = this.masterRowCount - 1;\n    this.totalPages = Math.floor(maxRowIndex / this.pageSize) + 1;\n    this.adjustCurrentPageIfInvalid();\n    this.topDisplayedRowIndex = this.pageSize * this.currentPage;\n    this.bottomDisplayedRowIndex = this.pageSize * (this.currentPage + 1) - 1;\n    if (this.bottomDisplayedRowIndex > maxRowIndex) {\n      this.bottomDisplayedRowIndex = maxRowIndex;\n    }\n  }\n  calculatedPagesNotActive() {\n    this.setPageSize(void 0, \"autoCalculated\");\n    this.totalPages = 1;\n    this.currentPage = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;\n  }\n  dispatchPaginationChangedEvent(params) {\n    const {\n      keepRenderedRows = false,\n      newPage = false,\n      newPageSize = false\n    } = params;\n    const paginationChangedEvent = {\n      type: \"paginationChanged\",\n      animate: false,\n      newData: false,\n      newPage,\n      newPageSize,\n      keepRenderedRows\n    };\n    this.eventService.dispatchEvent(paginationChangedEvent);\n  }\n};\n\n// community-modules/core/src/pagination/paginationModule.ts\nvar PaginationCoreModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/pagination-core\",\n  beans: [PaginationService, PaginationAutoPageSizeService]\n};\nvar PaginationApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/pagination-api\",\n  dependantModules: [PaginationCoreModule],\n  apiFunctions: {\n    paginationIsLastPageFound,\n    paginationGetPageSize,\n    paginationGetCurrentPage,\n    paginationGetTotalPages,\n    paginationGetRowCount,\n    paginationGoToNextPage,\n    paginationGoToPreviousPage,\n    paginationGoToFirstPage,\n    paginationGoToLastPage,\n    paginationGoToPage\n  }\n};\nvar PaginationModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/pagination\",\n  dependantModules: [PaginationCoreModule, PaginationApiModule]\n};\n\n// community-modules/core/src/validation/apiFunctionValidator.ts\nvar coreModule = \"@ag-grid-community/core\" /* CommunityCoreModule */;\nvar clientSideRowModelModule = \"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */;\nvar csvExportModule = \"@ag-grid-community/csv-export\" /* CsvExportModule */;\nvar infiniteRowModelModule = \"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */;\nvar advancedFilterModule = \"@ag-grid-enterprise/advanced-filter\" /* AdvancedFilterModule */;\nvar gridChartsModule = \"@ag-grid-enterprise/charts\" /* GridChartsModule */;\nvar clipboardModule = \"@ag-grid-enterprise/clipboard\" /* ClipboardModule */;\nvar excelExportModule = \"@ag-grid-enterprise/excel-export\" /* ExcelExportModule */;\nvar masterDetailModule = \"@ag-grid-enterprise/master-detail\" /* MasterDetailModule */;\nvar menuModule = \"@ag-grid-enterprise/menu\" /* MenuModule */;\nvar rangeSelectionModule = \"@ag-grid-enterprise/range-selection\" /* RangeSelectionModule */;\nvar rowGroupingModule = \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */;\nvar serverSideRowModelModule = \"@ag-grid-enterprise/server-side-row-model\" /* ServerSideRowModelModule */;\nvar sideBarModule = \"@ag-grid-enterprise/side-bar\" /* SideBarModule */;\nvar statusBarModule = \"@ag-grid-enterprise/status-bar\" /* StatusBarModule */;\nvar functionModules = {\n  dispatchEvent: coreModule,\n  getState: coreModule,\n  getGridId: coreModule,\n  destroy: coreModule,\n  isDestroyed: coreModule,\n  getGridOption: coreModule,\n  setGridOption: coreModule,\n  updateGridOptions: coreModule,\n  setNodesSelected: coreModule,\n  selectAll: coreModule,\n  deselectAll: coreModule,\n  selectAllFiltered: coreModule,\n  deselectAllFiltered: coreModule,\n  selectAllOnCurrentPage: coreModule,\n  deselectAllOnCurrentPage: coreModule,\n  getSelectedNodes: coreModule,\n  getSelectedRows: coreModule,\n  redrawRows: coreModule,\n  setRowNodeExpanded: coreModule,\n  getRowNode: coreModule,\n  addRenderedRowListener: coreModule,\n  getRenderedNodes: coreModule,\n  forEachNode: coreModule,\n  getFirstDisplayedRow: coreModule,\n  getFirstDisplayedRowIndex: coreModule,\n  getLastDisplayedRow: coreModule,\n  getLastDisplayedRowIndex: coreModule,\n  getDisplayedRowAtIndex: coreModule,\n  getDisplayedRowCount: coreModule,\n  getModel: coreModule,\n  getVerticalPixelRange: coreModule,\n  getHorizontalPixelRange: coreModule,\n  ensureColumnVisible: coreModule,\n  ensureIndexVisible: coreModule,\n  ensureNodeVisible: coreModule,\n  getFocusedCell: coreModule,\n  clearFocusedCell: coreModule,\n  setFocusedCell: coreModule,\n  tabToNextCell: coreModule,\n  tabToPreviousCell: coreModule,\n  setFocusedHeader: coreModule,\n  addEventListener: coreModule,\n  addGlobalListener: coreModule,\n  removeEventListener: coreModule,\n  removeGlobalListener: coreModule,\n  expireValueCache: coreModule,\n  getValue: coreModule,\n  getCellValue: coreModule,\n  showColumnMenuAfterButtonClick: coreModule,\n  showColumnMenuAfterMouseClick: coreModule,\n  showColumnMenu: coreModule,\n  hidePopupMenu: coreModule,\n  onSortChanged: coreModule,\n  getPinnedTopRowCount: coreModule,\n  getPinnedBottomRowCount: coreModule,\n  getPinnedTopRow: coreModule,\n  getPinnedBottomRow: coreModule,\n  showLoadingOverlay: coreModule,\n  showNoRowsOverlay: coreModule,\n  hideOverlay: coreModule,\n  setGridAriaProperty: coreModule,\n  refreshCells: coreModule,\n  flashCells: coreModule,\n  refreshHeader: coreModule,\n  isAnimationFrameQueueEmpty: coreModule,\n  flushAllAnimationFrames: coreModule,\n  getSizesForCurrentTheme: coreModule,\n  getCellRendererInstances: coreModule,\n  addRowDropZone: coreModule,\n  removeRowDropZone: coreModule,\n  getRowDropZoneParams: coreModule,\n  getColumnDef: coreModule,\n  getColumnDefs: coreModule,\n  sizeColumnsToFit: coreModule,\n  setColumnGroupOpened: coreModule,\n  getColumnGroup: coreModule,\n  getProvidedColumnGroup: coreModule,\n  getDisplayNameForColumn: coreModule,\n  getDisplayNameForColumnGroup: coreModule,\n  getColumn: coreModule,\n  getColumns: coreModule,\n  applyColumnState: coreModule,\n  getColumnState: coreModule,\n  resetColumnState: coreModule,\n  getColumnGroupState: coreModule,\n  setColumnGroupState: coreModule,\n  resetColumnGroupState: coreModule,\n  isPinning: coreModule,\n  isPinningLeft: coreModule,\n  isPinningRight: coreModule,\n  getDisplayedColAfter: coreModule,\n  getDisplayedColBefore: coreModule,\n  setColumnVisible: coreModule,\n  setColumnsVisible: coreModule,\n  setColumnPinned: coreModule,\n  setColumnsPinned: coreModule,\n  getAllGridColumns: coreModule,\n  getDisplayedLeftColumns: coreModule,\n  getDisplayedCenterColumns: coreModule,\n  getDisplayedRightColumns: coreModule,\n  getAllDisplayedColumns: coreModule,\n  getAllDisplayedVirtualColumns: coreModule,\n  moveColumn: coreModule,\n  moveColumnByIndex: coreModule,\n  moveColumns: coreModule,\n  setColumnWidth: coreModule,\n  setColumnWidths: coreModule,\n  getLeftDisplayedColumnGroups: coreModule,\n  getCenterDisplayedColumnGroups: coreModule,\n  getRightDisplayedColumnGroups: coreModule,\n  getAllDisplayedColumnGroups: coreModule,\n  autoSizeColumn: coreModule,\n  autoSizeColumns: coreModule,\n  autoSizeAllColumns: coreModule,\n  undoCellEditing: coreModule,\n  redoCellEditing: coreModule,\n  getCellEditorInstances: coreModule,\n  getEditingCells: coreModule,\n  stopEditing: coreModule,\n  startEditingCell: coreModule,\n  getCurrentUndoSize: coreModule,\n  getCurrentRedoSize: coreModule,\n  isAnyFilterPresent: coreModule,\n  onFilterChanged: coreModule,\n  isColumnFilterPresent: coreModule,\n  getFilterInstance: coreModule,\n  getColumnFilterInstance: coreModule,\n  destroyFilter: coreModule,\n  setFilterModel: coreModule,\n  getFilterModel: coreModule,\n  getColumnFilterModel: coreModule,\n  setColumnFilterModel: coreModule,\n  showColumnFilter: coreModule,\n  isQuickFilterPresent: coreModule,\n  getQuickFilter: coreModule,\n  resetQuickFilter: coreModule,\n  paginationIsLastPageFound: coreModule,\n  paginationGetPageSize: coreModule,\n  paginationGetCurrentPage: coreModule,\n  paginationGetTotalPages: coreModule,\n  paginationGetRowCount: coreModule,\n  paginationGoToNextPage: coreModule,\n  paginationGoToPreviousPage: coreModule,\n  paginationGoToFirstPage: coreModule,\n  paginationGoToLastPage: coreModule,\n  paginationGoToPage: coreModule,\n  // These may need updating to say which of multiple possible modules they could be missing from.\n  expandAll: coreModule,\n  collapseAll: coreModule,\n  onRowHeightChanged: coreModule,\n  setRowCount: coreModule,\n  getCacheBlockState: coreModule,\n  onGroupExpandedOrCollapsed: clientSideRowModelModule,\n  refreshClientSideRowModel: clientSideRowModelModule,\n  forEachLeafNode: clientSideRowModelModule,\n  forEachNodeAfterFilter: clientSideRowModelModule,\n  forEachNodeAfterFilterAndSort: clientSideRowModelModule,\n  resetRowHeights: clientSideRowModelModule,\n  applyTransaction: clientSideRowModelModule,\n  applyTransactionAsync: clientSideRowModelModule,\n  flushAsyncTransactions: clientSideRowModelModule,\n  getBestCostNodeSelection: clientSideRowModelModule,\n  getDataAsCsv: csvExportModule,\n  exportDataAsCsv: csvExportModule,\n  refreshInfiniteCache: infiniteRowModelModule,\n  purgeInfiniteCache: infiniteRowModelModule,\n  getInfiniteRowCount: infiniteRowModelModule,\n  isLastRowIndexKnown: infiniteRowModelModule,\n  getAdvancedFilterModel: advancedFilterModule,\n  setAdvancedFilterModel: advancedFilterModule,\n  showAdvancedFilterBuilder: advancedFilterModule,\n  hideAdvancedFilterBuilder: advancedFilterModule,\n  getChartModels: gridChartsModule,\n  getChartRef: gridChartsModule,\n  getChartImageDataURL: gridChartsModule,\n  downloadChart: gridChartsModule,\n  openChartToolPanel: gridChartsModule,\n  closeChartToolPanel: gridChartsModule,\n  createRangeChart: gridChartsModule,\n  createPivotChart: gridChartsModule,\n  createCrossFilterChart: gridChartsModule,\n  updateChart: gridChartsModule,\n  restoreChart: gridChartsModule,\n  copyToClipboard: clipboardModule,\n  cutToClipboard: clipboardModule,\n  copySelectedRowsToClipboard: clipboardModule,\n  copySelectedRangeToClipboard: clipboardModule,\n  copySelectedRangeDown: clipboardModule,\n  pasteFromClipboard: clipboardModule,\n  getDataAsExcel: excelExportModule,\n  exportDataAsExcel: excelExportModule,\n  getSheetDataForExcel: excelExportModule,\n  getMultipleSheetsAsExcel: excelExportModule,\n  exportMultipleSheetsAsExcel: excelExportModule,\n  addDetailGridInfo: masterDetailModule,\n  removeDetailGridInfo: masterDetailModule,\n  getDetailGridInfo: masterDetailModule,\n  forEachDetailGridInfo: masterDetailModule,\n  showContextMenu: menuModule,\n  showColumnChooser: menuModule,\n  hideColumnChooser: menuModule,\n  getCellRanges: rangeSelectionModule,\n  addCellRange: rangeSelectionModule,\n  clearRangeSelection: rangeSelectionModule,\n  addAggFunc: rowGroupingModule,\n  addAggFuncs: rowGroupingModule,\n  clearAggFuncs: rowGroupingModule,\n  setColumnAggFunc: rowGroupingModule,\n  isPivotMode: rowGroupingModule,\n  getPivotResultColumn: rowGroupingModule,\n  setValueColumns: rowGroupingModule,\n  getValueColumns: rowGroupingModule,\n  removeValueColumn: rowGroupingModule,\n  removeValueColumns: rowGroupingModule,\n  addValueColumn: rowGroupingModule,\n  addValueColumns: rowGroupingModule,\n  setRowGroupColumns: rowGroupingModule,\n  removeRowGroupColumn: rowGroupingModule,\n  removeRowGroupColumns: rowGroupingModule,\n  addRowGroupColumn: rowGroupingModule,\n  addRowGroupColumns: rowGroupingModule,\n  getRowGroupColumns: rowGroupingModule,\n  moveRowGroupColumn: rowGroupingModule,\n  setPivotColumns: rowGroupingModule,\n  removePivotColumn: rowGroupingModule,\n  removePivotColumns: rowGroupingModule,\n  addPivotColumn: rowGroupingModule,\n  addPivotColumns: rowGroupingModule,\n  getPivotColumns: rowGroupingModule,\n  setPivotResultColumns: rowGroupingModule,\n  getPivotResultColumns: rowGroupingModule,\n  getServerSideSelectionState: serverSideRowModelModule,\n  setServerSideSelectionState: serverSideRowModelModule,\n  applyServerSideTransaction: serverSideRowModelModule,\n  applyServerSideTransactionAsync: serverSideRowModelModule,\n  applyServerSideRowData: serverSideRowModelModule,\n  retryServerSideLoads: serverSideRowModelModule,\n  flushServerSideAsyncTransactions: serverSideRowModelModule,\n  refreshServerSide: serverSideRowModelModule,\n  getServerSideGroupLevelState: serverSideRowModelModule,\n  isSideBarVisible: sideBarModule,\n  setSideBarVisible: sideBarModule,\n  setSideBarPosition: sideBarModule,\n  openToolPanel: sideBarModule,\n  closeToolPanel: sideBarModule,\n  getOpenedToolPanel: sideBarModule,\n  refreshToolPanel: sideBarModule,\n  isToolPanelShowing: sideBarModule,\n  getToolPanelInstance: sideBarModule,\n  getSideBar: sideBarModule,\n  getStatusPanel: statusBarModule\n};\nvar clientSide = \"clientSide\";\nvar serverSide = \"serverSide\";\nvar infinite = \"infinite\";\nvar functionRowModels = {\n  onGroupExpandedOrCollapsed: [clientSide],\n  refreshClientSideRowModel: [clientSide],\n  forEachLeafNode: [clientSide],\n  forEachNodeAfterFilter: [clientSide],\n  forEachNodeAfterFilterAndSort: [clientSide],\n  resetRowHeights: [clientSide],\n  applyTransaction: [clientSide],\n  applyTransactionAsync: [clientSide],\n  flushAsyncTransactions: [clientSide],\n  getBestCostNodeSelection: [clientSide],\n  getServerSideSelectionState: [serverSide],\n  setServerSideSelectionState: [serverSide],\n  applyServerSideTransaction: [serverSide],\n  applyServerSideTransactionAsync: [serverSide],\n  applyServerSideRowData: [serverSide],\n  retryServerSideLoads: [serverSide],\n  flushServerSideAsyncTransactions: [serverSide],\n  refreshServerSide: [serverSide],\n  getServerSideGroupLevelState: [serverSide],\n  refreshInfiniteCache: [infinite],\n  purgeInfiniteCache: [infinite],\n  getInfiniteRowCount: [infinite],\n  isLastRowIndexKnown: [infinite],\n  expandAll: [clientSide, serverSide],\n  collapseAll: [clientSide, serverSide],\n  onRowHeightChanged: [clientSide, serverSide],\n  setRowCount: [infinite, serverSide],\n  getCacheBlockState: [infinite, serverSide]\n};\nvar deprecatedFunctions = {\n  getValue: {\n    version: \"v31.3\",\n    new: \"getCellValue\"\n  },\n  getFirstDisplayedRow: {\n    version: \"v31.1\",\n    new: \"getFirstDisplayedRowIndex\"\n  },\n  getLastDisplayedRow: {\n    version: \"v31.1\",\n    new: \"getLastDisplayedRowIndex\"\n  },\n  getModel: {\n    version: \"v31.1\",\n    message: \"Please use the appropriate grid API methods instead.\"\n  },\n  setColumnVisible: {\n    version: \"v31.1\",\n    old: \"setColumnVisible(key,visible)\",\n    new: \"setColumnsVisible([key],visible)\"\n  },\n  setColumnPinned: {\n    version: \"v31.1\",\n    old: \"setColumnPinned(key,pinned)\",\n    new: \"setColumnsPinned([key],pinned)\"\n  },\n  moveColumn: {\n    version: \"v31.1\",\n    old: \"moveColumn(key, toIndex)\",\n    new: \"moveColumns([key], toIndex)\"\n  },\n  setColumnWidth: {\n    version: \"v31.1\",\n    old: \"setColumnWidth(col, width)\",\n    new: \"setColumnWidths([{key: col, newWidth: width}])\"\n  },\n  autoSizeColumn: {\n    version: \"v31.1\",\n    old: \"autoSizeColumn(key, skipHeader)\",\n    new: \"autoSizeColumns([key], skipHeader)\"\n  },\n  addAggFunc: {\n    version: \"v31.1\",\n    old: \"addAggFunc(key, func)\",\n    new: \"addAggFuncs({ key: func })\"\n  },\n  removeValueColumn: {\n    version: \"v31.1\",\n    old: \"removeValueColumn(colKey)\",\n    new: \"removeValueColumns([colKey])\"\n  },\n  addValueColumn: {\n    version: \"v31.1\",\n    old: \"addValueColumn(colKey)\",\n    new: \"addValueColumns([colKey])\"\n  },\n  removeRowGroupColumn: {\n    version: \"v31.1\",\n    old: \"removeRowGroupColumn(colKey)\",\n    new: \"removeRowGroupColumns([colKey])\"\n  },\n  addRowGroupColumn: {\n    version: \"v31.1\",\n    old: \"addRowGroupColumn(colKey)\",\n    new: \"addRowGroupColumns([colKey])\"\n  },\n  removePivotColumn: {\n    version: \"v31.1\",\n    old: \"removePivotColumn(colKey)\",\n    new: \"removePivotColumns([colKey])\"\n  },\n  addPivotColumn: {\n    version: \"v31.1\",\n    old: \"addPivotColumn(colKey)\",\n    new: \"addPivotColumns([colKey])\"\n  },\n  showColumnMenuAfterButtonClick: {\n    version: \"v31.1\",\n    message: `Use 'IHeaderParams.showColumnMenu' within a header component, or 'api.showColumnMenu' elsewhere.`\n  },\n  showColumnMenuAfterMouseClick: {\n    version: \"v31.1\",\n    message: `Use 'IHeaderParams.showColumnMenuAfterMouseClick' within a header component, or 'api.showColumnMenu' elsewhere.`\n  },\n  getFilterInstance: {\n    version: \"v31.1\",\n    message: `'getFilterInstance' is deprecated. To get/set individual filter models, use 'getColumnFilterModel' or 'setColumnFilterModel' instead. To get hold of the filter instance, use 'getColumnFilterInstance' which returns the instance asynchronously.`\n  },\n  showLoadingOverlay: {\n    version: \"v32\",\n    message: '`showLoadingOverlay` is deprecated. Use the grid option \"loading\"=true instead or setGridOption(\"loading\", true).'\n  }\n};\nfunction warnMissingApiFunction(functionName, gridId) {\n  const module = functionModules[functionName];\n  if (module) {\n    if (ModuleRegistry.__assertRegistered(module, `api.${functionName}`, gridId)) {\n      _warnOnce(`API function '${functionName}' not registered to module '${module}'`);\n    }\n  } else {\n    _errorOnce(`Unknown API function: '${functionName}' on GridApi.`);\n  }\n}\nfunction validateApiFunction(functionName, apiFunction, beans) {\n  const deprecation = deprecatedFunctions[functionName];\n  if (deprecation) {\n    const {\n      version,\n      new: replacement,\n      old,\n      message\n    } = deprecation;\n    const apiMethod = old ?? functionName;\n    return (...args) => {\n      const replacementMessage = replacement ? `Please use ${replacement} instead. ` : \"\";\n      _warnOnce(`Since ${version} api.${apiMethod} is deprecated. ${replacementMessage}${message ?? \"\"}`);\n      return apiFunction.apply(apiFunction, args);\n    };\n  }\n  const rowModels = functionRowModels[functionName];\n  if (rowModels) {\n    return (...args) => {\n      const rowModel = beans.rowModel.getType();\n      if (!rowModels.includes(rowModel)) {\n        _errorOnce(`api.${functionName} can only be called when gridOptions.rowModelType is ${rowModels.join(\" or \")}`);\n        return void 0;\n      }\n      return apiFunction.apply(apiFunction, args);\n    };\n  }\n  return apiFunction;\n}\n\n// community-modules/core/src/validation/rules/colDefValidations.ts\nvar COLUMN_DEFINITION_DEPRECATIONS = {\n  columnsMenuParams: {\n    version: \"31.1\",\n    message: \"Use `columnChooserParams` instead.\"\n  },\n  suppressMenu: {\n    version: \"31.1\",\n    message: \"Use `suppressHeaderMenuButton` instead.\"\n  },\n  suppressCellFlash: {\n    version: \"31.2\",\n    message: \"Use `enableCellChangeFlash={false}` in the ColDef\"\n  }\n};\nvar CSRM_REQUIRES_ROW_GROUP_MODULE = (_options, gridOptions) => {\n  if ((gridOptions.rowModelType ?? \"clientSide\") === \"clientSide\") {\n    return {\n      module: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */\n    };\n  }\n  return null;\n};\nvar COLUMN_DEFINITION_VALIDATIONS = {\n  // supported on all row models, but need module for client side.\n  enableRowGroup: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  rowGroup: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  rowGroupIndex: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  enablePivot: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  enableValue: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  pivot: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  pivotIndex: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  aggFunc: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  cellEditor: options => {\n    if (options.cellEditor === \"agRichSelect\" || options.cellEditor === \"agRichSelectCellEditor\") {\n      return {\n        module: \"@ag-grid-enterprise/rich-select\" /* RichSelectModule */\n      };\n    }\n    return null;\n  },\n  menuTabs: options => {\n    const enterpriseMenuTabs = [\"columnsMenuTab\", \"generalMenuTab\"];\n    if (options.menuTabs?.some(tab => enterpriseMenuTabs.includes(tab))) {\n      return {\n        module: \"@ag-grid-enterprise/menu\" /* MenuModule */\n      };\n    }\n    return null;\n  },\n  columnsMenuParams: {\n    module: [\"@ag-grid-enterprise/menu\" /* MenuModule */, \"@ag-grid-enterprise/column-tool-panel\" /* ColumnsToolPanelModule */]\n  },\n  columnChooserParams: {\n    module: [\"@ag-grid-enterprise/menu\" /* MenuModule */, \"@ag-grid-enterprise/column-tool-panel\" /* ColumnsToolPanelModule */]\n  },\n  headerCheckboxSelection: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    dependencies: (_options, {\n      rowSelection\n    }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelection is only supported with rowSelection=multiple\"\n  },\n  headerCheckboxSelectionFilteredOnly: {\n    supportedRowModels: [\"clientSide\"],\n    dependencies: (_options, {\n      rowSelection\n    }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionFilteredOnly is only supported with rowSelection=multiple\"\n  },\n  headerCheckboxSelectionCurrentPageOnly: {\n    supportedRowModels: [\"clientSide\"],\n    dependencies: (_options, {\n      rowSelection\n    }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionCurrentPageOnly is only supported with rowSelection=multiple\"\n  },\n  children: () => COL_DEF_VALIDATORS\n};\nvar colDefPropertyMap = {\n  headerName: void 0,\n  columnGroupShow: void 0,\n  headerClass: void 0,\n  toolPanelClass: void 0,\n  headerValueGetter: void 0,\n  pivotKeys: void 0,\n  groupId: void 0,\n  colId: void 0,\n  sort: void 0,\n  initialSort: void 0,\n  field: void 0,\n  type: void 0,\n  cellDataType: void 0,\n  tooltipComponent: void 0,\n  tooltipField: void 0,\n  headerTooltip: void 0,\n  cellClass: void 0,\n  showRowGroup: void 0,\n  filter: void 0,\n  initialAggFunc: void 0,\n  defaultAggFunc: void 0,\n  aggFunc: void 0,\n  pinned: void 0,\n  initialPinned: void 0,\n  chartDataType: void 0,\n  cellAriaRole: void 0,\n  cellEditorPopupPosition: void 0,\n  headerGroupComponent: void 0,\n  headerGroupComponentParams: void 0,\n  cellStyle: void 0,\n  cellRenderer: void 0,\n  cellRendererParams: void 0,\n  cellEditor: void 0,\n  cellEditorParams: void 0,\n  filterParams: void 0,\n  pivotValueColumn: void 0,\n  headerComponent: void 0,\n  headerComponentParams: void 0,\n  floatingFilterComponent: void 0,\n  floatingFilterComponentParams: void 0,\n  tooltipComponentParams: void 0,\n  refData: void 0,\n  columnsMenuParams: void 0,\n  columnChooserParams: void 0,\n  children: void 0,\n  sortingOrder: void 0,\n  allowedAggFuncs: void 0,\n  menuTabs: void 0,\n  pivotTotalColumnIds: void 0,\n  cellClassRules: void 0,\n  icons: void 0,\n  sortIndex: void 0,\n  initialSortIndex: void 0,\n  flex: void 0,\n  initialFlex: void 0,\n  width: void 0,\n  initialWidth: void 0,\n  minWidth: void 0,\n  maxWidth: void 0,\n  rowGroupIndex: void 0,\n  initialRowGroupIndex: void 0,\n  pivotIndex: void 0,\n  initialPivotIndex: void 0,\n  suppressCellFlash: void 0,\n  suppressColumnsToolPanel: void 0,\n  suppressFiltersToolPanel: void 0,\n  openByDefault: void 0,\n  marryChildren: void 0,\n  suppressStickyLabel: void 0,\n  hide: void 0,\n  initialHide: void 0,\n  rowGroup: void 0,\n  initialRowGroup: void 0,\n  pivot: void 0,\n  initialPivot: void 0,\n  checkboxSelection: void 0,\n  showDisabledCheckboxes: void 0,\n  headerCheckboxSelection: void 0,\n  headerCheckboxSelectionFilteredOnly: void 0,\n  headerCheckboxSelectionCurrentPageOnly: void 0,\n  suppressMenu: void 0,\n  suppressHeaderMenuButton: void 0,\n  suppressMovable: void 0,\n  lockPosition: void 0,\n  lockVisible: void 0,\n  lockPinned: void 0,\n  unSortIcon: void 0,\n  suppressSizeToFit: void 0,\n  suppressAutoSize: void 0,\n  enableRowGroup: void 0,\n  enablePivot: void 0,\n  enableValue: void 0,\n  editable: void 0,\n  suppressPaste: void 0,\n  suppressNavigable: void 0,\n  enableCellChangeFlash: void 0,\n  rowDrag: void 0,\n  dndSource: void 0,\n  autoHeight: void 0,\n  wrapText: void 0,\n  sortable: void 0,\n  resizable: void 0,\n  singleClickEdit: void 0,\n  floatingFilter: void 0,\n  cellEditorPopup: void 0,\n  suppressFillHandle: void 0,\n  wrapHeaderText: void 0,\n  autoHeaderHeight: void 0,\n  dndSourceOnRowDrag: void 0,\n  valueGetter: void 0,\n  valueSetter: void 0,\n  filterValueGetter: void 0,\n  keyCreator: void 0,\n  valueFormatter: void 0,\n  valueParser: void 0,\n  comparator: void 0,\n  equals: void 0,\n  pivotComparator: void 0,\n  suppressKeyboardEvent: void 0,\n  suppressHeaderKeyboardEvent: void 0,\n  colSpan: void 0,\n  rowSpan: void 0,\n  getQuickFilterText: void 0,\n  onCellValueChanged: void 0,\n  onCellClicked: void 0,\n  onCellDoubleClicked: void 0,\n  onCellContextMenu: void 0,\n  rowDragText: void 0,\n  tooltipValueGetter: void 0,\n  cellRendererSelector: void 0,\n  cellEditorSelector: void 0,\n  suppressSpanHeaderHeight: void 0,\n  useValueFormatterForExport: void 0,\n  useValueParserForImport: void 0,\n  mainMenuItems: void 0,\n  contextMenuItems: void 0,\n  suppressFloatingFilterButton: void 0,\n  suppressHeaderFilterButton: void 0,\n  suppressHeaderContextMenu: void 0,\n  loadingCellRenderer: void 0,\n  loadingCellRendererParams: void 0,\n  loadingCellRendererSelector: void 0,\n  context: void 0\n};\nvar ALL_PROPERTIES = Object.keys(colDefPropertyMap);\nvar COL_DEF_VALIDATORS = {\n  objectName: \"colDef\",\n  allProperties: ALL_PROPERTIES,\n  docsUrl: \"column-properties/\",\n  deprecations: COLUMN_DEFINITION_DEPRECATIONS,\n  validations: COLUMN_DEFINITION_VALIDATIONS\n};\n\n// community-modules/core/src/validation/rules/gridOptionsValidations.ts\nvar GRID_OPTION_DEPRECATIONS = () => ({\n  advancedFilterModel: {\n    version: \"31\",\n    message: \"Use `initialState.filter.advancedFilterModel` instead.\"\n  },\n  suppressAsyncEvents: {\n    version: \"31\",\n    message: \"Events should be handled asynchronously.\"\n  },\n  cellFadeDelay: {\n    version: \"31.1\",\n    renamed: \"cellFadeDuration\"\n  },\n  cellFlashDelay: {\n    version: \"31.1\",\n    renamed: \"cellFlashDuration\"\n  },\n  suppressServerSideInfiniteScroll: {\n    version: \"31.1\"\n  },\n  serverSideSortOnServer: {\n    version: \"31.1\"\n  },\n  serverSideFilterOnServer: {\n    version: \"31.1\"\n  },\n  enableCellChangeFlash: {\n    version: \"31.2\",\n    message: \"Use `enableCellChangeFlash` in the `ColDef` or `defaultColDef` for all columns.\"\n  },\n  groupIncludeFooter: {\n    version: \"31.3\",\n    message: \"Use `groupTotalRow` instead.\"\n  },\n  groupIncludeTotalFooter: {\n    version: \"31.3\",\n    message: \"Use `grandTotalRow` instead.\"\n  },\n  suppressLoadingOverlay: {\n    version: \"32\",\n    message: \"Use `loading`=false instead.\"\n  }\n});\nvar GRID_OPTION_DEFAULTS = {\n  suppressContextMenu: false,\n  preventDefaultOnContextMenu: false,\n  allowContextMenuWithControlKey: false,\n  suppressMenuHide: true,\n  enableBrowserTooltips: false,\n  tooltipTrigger: \"hover\",\n  tooltipShowDelay: 2e3,\n  tooltipHideDelay: 1e4,\n  tooltipMouseTrack: false,\n  tooltipShowMode: \"standard\",\n  tooltipInteraction: false,\n  copyHeadersToClipboard: false,\n  copyGroupHeadersToClipboard: false,\n  clipboardDelimiter: \"\t\",\n  suppressCopyRowsToClipboard: false,\n  suppressCopySingleCellRanges: false,\n  suppressLastEmptyLineOnPaste: false,\n  suppressClipboardPaste: false,\n  suppressClipboardApi: false,\n  suppressCutToClipboard: false,\n  maintainColumnOrder: false,\n  suppressFieldDotNotation: false,\n  allowDragFromColumnsToolPanel: false,\n  suppressMovableColumns: false,\n  suppressColumnMoveAnimation: false,\n  suppressDragLeaveHidesColumns: false,\n  suppressRowGroupHidesColumns: false,\n  suppressAutoSize: false,\n  autoSizePadding: 20,\n  skipHeaderOnAutoSize: false,\n  singleClickEdit: false,\n  suppressClickEdit: false,\n  readOnlyEdit: false,\n  stopEditingWhenCellsLoseFocus: false,\n  enterNavigatesVertically: false,\n  enterNavigatesVerticallyAfterEdit: false,\n  enableCellEditingOnBackspace: false,\n  undoRedoCellEditing: false,\n  undoRedoCellEditingLimit: 10,\n  suppressCsvExport: false,\n  suppressExcelExport: false,\n  cacheQuickFilter: false,\n  includeHiddenColumnsInQuickFilter: false,\n  excludeChildrenWhenTreeDataFiltering: false,\n  enableAdvancedFilter: false,\n  includeHiddenColumnsInAdvancedFilter: false,\n  enableCharts: false,\n  masterDetail: false,\n  keepDetailRows: false,\n  keepDetailRowsCount: 10,\n  detailRowAutoHeight: false,\n  tabIndex: 0,\n  rowBuffer: 10,\n  valueCache: false,\n  valueCacheNeverExpires: false,\n  enableCellExpressions: false,\n  suppressTouch: false,\n  suppressFocusAfterRefresh: false,\n  suppressAsyncEvents: false,\n  suppressBrowserResizeObserver: false,\n  suppressPropertyNamesCheck: false,\n  suppressChangeDetection: false,\n  debug: false,\n  suppressLoadingOverlay: false,\n  suppressNoRowsOverlay: false,\n  pagination: false,\n  paginationPageSize: 100,\n  paginationPageSizeSelector: true,\n  paginationAutoPageSize: false,\n  paginateChildRows: false,\n  suppressPaginationPanel: false,\n  pivotMode: false,\n  pivotPanelShow: \"never\",\n  pivotDefaultExpanded: 0,\n  pivotSuppressAutoColumn: false,\n  suppressExpandablePivotGroups: false,\n  functionsReadOnly: false,\n  suppressAggFuncInHeader: false,\n  alwaysAggregateAtRootLevel: false,\n  aggregateOnlyChangedColumns: false,\n  suppressAggFilteredOnly: false,\n  removePivotHeaderRowWhenSingleValueColumn: false,\n  animateRows: true,\n  enableCellChangeFlash: false,\n  cellFlashDelay: 500,\n  cellFlashDuration: 500,\n  cellFadeDelay: 1e3,\n  cellFadeDuration: 1e3,\n  allowShowChangeAfterFilter: false,\n  domLayout: \"normal\",\n  ensureDomOrder: false,\n  enableRtl: false,\n  suppressColumnVirtualisation: false,\n  suppressMaxRenderedRowRestriction: false,\n  suppressRowVirtualisation: false,\n  rowDragManaged: false,\n  suppressRowDrag: false,\n  suppressMoveWhenRowDragging: false,\n  rowDragEntireRow: false,\n  rowDragMultiRow: false,\n  embedFullWidthRows: false,\n  groupDisplayType: \"singleColumn\",\n  groupDefaultExpanded: 0,\n  groupMaintainOrder: false,\n  groupSelectsChildren: false,\n  groupIncludeTotalFooter: false,\n  groupSuppressBlankHeader: false,\n  groupSelectsFiltered: false,\n  showOpenedGroup: false,\n  groupRemoveSingleChildren: false,\n  groupRemoveLowestSingleChildren: false,\n  groupHideOpenParents: false,\n  groupAllowUnbalanced: false,\n  rowGroupPanelShow: \"never\",\n  suppressMakeColumnVisibleAfterUnGroup: false,\n  treeData: false,\n  rowGroupPanelSuppressSort: false,\n  suppressGroupRowsSticky: false,\n  rowModelType: \"clientSide\",\n  asyncTransactionWaitMillis: 50,\n  suppressModelUpdateAfterUpdateTransaction: false,\n  cacheOverflowSize: 1,\n  infiniteInitialRowCount: 1,\n  serverSideInitialRowCount: 1,\n  suppressServerSideInfiniteScroll: false,\n  cacheBlockSize: 100,\n  maxBlocksInCache: -1,\n  maxConcurrentDatasourceRequests: 2,\n  blockLoadDebounceMillis: 0,\n  purgeClosedRowNodes: false,\n  serverSideSortAllLevels: false,\n  serverSideOnlyRefreshFilteredGroups: false,\n  serverSideSortOnServer: false,\n  serverSideFilterOnServer: false,\n  serverSidePivotResultFieldSeparator: \"_\",\n  viewportRowModelPageSize: 5,\n  viewportRowModelBufferSize: 5,\n  alwaysShowHorizontalScroll: false,\n  alwaysShowVerticalScroll: false,\n  debounceVerticalScrollbar: false,\n  suppressHorizontalScroll: false,\n  suppressScrollOnNewData: false,\n  suppressScrollWhenPopupsAreOpen: false,\n  suppressAnimationFrame: false,\n  suppressMiddleClickScrolls: false,\n  suppressPreventDefaultOnMouseWheel: false,\n  rowMultiSelectWithClick: false,\n  suppressRowDeselection: false,\n  suppressRowClickSelection: false,\n  suppressCellFocus: false,\n  suppressHeaderFocus: false,\n  suppressMultiRangeSelection: false,\n  enableCellTextSelection: false,\n  enableRangeSelection: false,\n  enableRangeHandle: false,\n  enableFillHandle: false,\n  fillHandleDirection: \"xy\",\n  suppressClearOnFillReduction: false,\n  accentedSort: false,\n  unSortIcon: false,\n  suppressMultiSort: false,\n  alwaysMultiSort: false,\n  suppressMaintainUnsortedOrder: false,\n  suppressRowHoverHighlight: false,\n  suppressRowTransform: false,\n  columnHoverHighlight: false,\n  deltaSort: false,\n  enableGroupEdit: false,\n  suppressGroupMaintainValueType: false,\n  groupLockGroupColumns: 0,\n  serverSideEnableClientSideSort: false,\n  suppressServerSideFullWidthLoadingRow: false,\n  pivotMaxGeneratedColumns: -1,\n  columnMenu: \"new\",\n  reactiveCustomComponents: true\n};\nvar GRID_OPTION_VALIDATIONS = () => ({\n  sideBar: {\n    module: \"@ag-grid-enterprise/side-bar\" /* SideBarModule */\n  },\n  statusBar: {\n    module: \"@ag-grid-enterprise/status-bar\" /* StatusBarModule */\n  },\n  enableCharts: {\n    module: \"@ag-grid-enterprise/charts\" /* GridChartsModule */\n  },\n  getMainMenuItems: {\n    module: \"@ag-grid-enterprise/menu\" /* MenuModule */\n  },\n  getContextMenuItems: {\n    module: \"@ag-grid-enterprise/menu\" /* MenuModule */\n  },\n  allowContextMenuWithControlKey: {\n    module: \"@ag-grid-enterprise/menu\" /* MenuModule */\n  },\n  enableAdvancedFilter: {\n    module: \"@ag-grid-enterprise/advanced-filter\" /* AdvancedFilterModule */\n  },\n  treeData: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    module: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n    dependencies: options => {\n      const rowModel = options.rowModelType ?? \"clientSide\";\n      switch (rowModel) {\n        case \"clientSide\":\n          {\n            const csrmWarning = `treeData requires 'getDataPath' in the ${rowModel} row model.`;\n            return options.getDataPath ? null : csrmWarning;\n          }\n        case \"serverSide\":\n          {\n            const ssrmWarning = `treeData requires 'isServerSideGroup' and 'getServerSideGroupKey' in the ${rowModel} row model.`;\n            return options.isServerSideGroup && options.getServerSideGroupKey ? null : ssrmWarning;\n          }\n      }\n      return null;\n    }\n  },\n  masterDetail: {\n    module: \"@ag-grid-enterprise/master-detail\" /* MasterDetailModule */\n  },\n  enableRangeSelection: {\n    module: \"@ag-grid-enterprise/range-selection\" /* RangeSelectionModule */\n  },\n  enableRangeHandle: {\n    dependencies: {\n      enableRangeSelection: [true]\n    }\n  },\n  enableFillHandle: {\n    dependencies: {\n      enableRangeSelection: [true]\n    }\n  },\n  groupDefaultExpanded: {\n    supportedRowModels: [\"clientSide\"]\n  },\n  groupIncludeFooter: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    dependencies: options => {\n      const rowModel = options.rowModelType ?? \"clientSide\";\n      switch (rowModel) {\n        case \"clientSide\":\n          return null;\n        case \"serverSide\":\n          {\n            const warning = \"groupIncludeFooter is not supported alongside suppressServerSideInfiniteScroll\";\n            return options.suppressServerSideInfiniteScroll ? warning : null;\n          }\n      }\n      return null;\n    }\n  },\n  groupHideOpenParents: {\n    supportedRowModels: [\"clientSide\"],\n    dependencies: {\n      groupTotalRow: [void 0, \"bottom\"]\n    }\n  },\n  groupIncludeTotalFooter: {\n    supportedRowModels: [\"clientSide\"]\n  },\n  groupRemoveSingleChildren: {\n    dependencies: {\n      groupHideOpenParents: [void 0, false],\n      groupRemoveLowestSingleChildren: [void 0, false]\n    }\n  },\n  groupRemoveLowestSingleChildren: {\n    dependencies: {\n      groupHideOpenParents: [void 0, false],\n      groupRemoveSingleChildren: [void 0, false]\n    }\n  },\n  groupSelectsChildren: {\n    dependencies: {\n      rowSelection: [\"multiple\"]\n    }\n  },\n  viewportDatasource: {\n    supportedRowModels: [\"viewport\"],\n    module: \"@ag-grid-enterprise/viewport-row-model\" /* ViewportRowModelModule */\n  },\n  serverSideDatasource: {\n    supportedRowModels: [\"serverSide\"],\n    module: \"@ag-grid-enterprise/server-side-row-model\" /* ServerSideRowModelModule */\n  },\n  cacheBlockSize: {\n    supportedRowModels: [\"serverSide\", \"infinite\"]\n  },\n  datasource: {\n    supportedRowModels: [\"infinite\"],\n    module: \"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */\n  },\n  rowData: {\n    supportedRowModels: [\"clientSide\"],\n    module: \"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */\n  },\n  columnDefs: () => COL_DEF_VALIDATORS,\n  defaultColDef: () => COL_DEF_VALIDATORS,\n  defaultColGroupDef: () => COL_DEF_VALIDATORS,\n  autoGroupColumnDef: () => COL_DEF_VALIDATORS\n});\nvar GRID_OPTIONS_VALIDATORS = () => ({\n  objectName: \"gridOptions\",\n  allProperties: [...PropertyKeys.ALL_PROPERTIES, ...ComponentUtil.EVENT_CALLBACKS],\n  propertyExceptions: [\"api\"],\n  docsUrl: \"grid-options/\",\n  deprecations: GRID_OPTION_DEPRECATIONS(),\n  validations: GRID_OPTION_VALIDATIONS()\n});\n\n// community-modules/core/src/validation/validationService.ts\nvar ValidationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"validationService\";\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n    this.gridOptions = beans.gridOptions;\n  }\n  postConstruct() {\n    this.processGridOptions(this.gridOptions);\n  }\n  processGridOptions(options) {\n    this.processOptions(options, GRID_OPTIONS_VALIDATORS());\n  }\n  processColumnDefs(options) {\n    this.processOptions(options, COL_DEF_VALIDATORS);\n  }\n  warnMissingApiFunction(functionName) {\n    warnMissingApiFunction(functionName, this.gridId);\n  }\n  validateApiFunction(functionName, apiFunction) {\n    return validateApiFunction(functionName, apiFunction, this.beans);\n  }\n  processOptions(options, validator) {\n    const {\n      validations,\n      deprecations,\n      allProperties,\n      propertyExceptions,\n      objectName,\n      docsUrl\n    } = validator;\n    if (allProperties && this.gridOptions.suppressPropertyNamesCheck !== true) {\n      this.checkProperties(options, [...(propertyExceptions ?? []), ...Object.keys(deprecations)], allProperties, objectName, docsUrl);\n    }\n    const warnings = /* @__PURE__ */new Set();\n    const optionKeys = Object.keys(options);\n    optionKeys.forEach(key => {\n      const deprecation = deprecations[key];\n      if (deprecation) {\n        if (\"renamed\" in deprecation) {\n          const {\n            renamed,\n            version\n          } = deprecation;\n          warnings.add(`As of v${version}, ${String(key)} is deprecated. Please use ${String(renamed)} instead.`);\n          options[renamed] = options[key];\n        } else {\n          const {\n            message,\n            version\n          } = deprecation;\n          warnings.add(`As of v${version}, ${String(key)} is deprecated. ${message ?? \"\"}`);\n        }\n      }\n      const value = options[key];\n      if (value == null || value === false) {\n        return;\n      }\n      const rulesOrGetter = validations[key];\n      let rules;\n      if (!rulesOrGetter) {\n        return;\n      } else if (typeof rulesOrGetter === \"function\") {\n        const fromGetter = rulesOrGetter(options, this.gridOptions);\n        if (!fromGetter) {\n          return;\n        }\n        if (\"objectName\" in fromGetter) {\n          const value2 = options[key];\n          if (Array.isArray(value2)) {\n            value2.forEach(item => {\n              this.processOptions(item, fromGetter);\n            });\n            return;\n          }\n          this.processOptions(options[key], fromGetter);\n          return;\n        }\n        rules = fromGetter;\n      } else {\n        rules = rulesOrGetter;\n      }\n      const {\n        module,\n        dependencies,\n        supportedRowModels\n      } = rules;\n      if (supportedRowModels) {\n        const rowModel = this.gridOptions.rowModelType ?? \"clientSide\";\n        if (!supportedRowModels.includes(rowModel)) {\n          warnings.add(`${String(key)} is not supported with the '${rowModel}' row model.`);\n          return;\n        }\n      }\n      if (module) {\n        const modules = Array.isArray(module) ? module : [module];\n        let allRegistered = true;\n        modules.forEach(m => {\n          if (!ModuleRegistry.__assertRegistered(m, String(key), this.gridId)) {\n            allRegistered = false;\n            warnings.add(`${String(key)} is only available when ${m} is loaded.`);\n          }\n        });\n        if (!allRegistered) {\n          return;\n        }\n      }\n      if (dependencies) {\n        const warning = this.checkForWarning(key, dependencies, options);\n        if (warning) {\n          warnings.add(warning);\n          return;\n        }\n      }\n    });\n    if (warnings.size > 0) {\n      warnings.forEach(warning => {\n        _warnOnce(warning);\n      });\n    }\n  }\n  checkForWarning(key, validator, options) {\n    if (typeof validator === \"function\") {\n      return validator(options, this.gridOptions);\n    }\n    const optionEntries = Object.entries(validator);\n    const failed = optionEntries.find(([key2, value]) => {\n      const gridOptionValue = options[key2];\n      return !value.includes(gridOptionValue);\n    });\n    if (!failed) {\n      return null;\n    }\n    const [failedKey, possibleOptions] = failed;\n    if (possibleOptions.length > 1) {\n      return `'${String(key)}' requires '${failedKey}' to be one of [${possibleOptions.join(\", \")}].`;\n    }\n    return `'${String(key)}' requires '${failedKey}' to be ${possibleOptions[0]}.`;\n  }\n  checkProperties(object, exceptions, validProperties, containerName, docsUrl) {\n    const VUE_FRAMEWORK_PROPS = [\"__ob__\", \"__v_skip\", \"__metadata__\"];\n    const invalidProperties = _fuzzyCheckStrings(Object.getOwnPropertyNames(object), [...VUE_FRAMEWORK_PROPS, ...exceptions, ...validProperties], validProperties);\n    _iterateObject(invalidProperties, (key, value) => {\n      let message = `invalid ${containerName} property '${key}' did you mean any of these: ${value.slice(0, 8).join(\", \")}.`;\n      if (validProperties.includes(\"context\")) {\n        message += `\nIf you are trying to annotate ${containerName} with application data, use the '${containerName}.context' property instead.`;\n      }\n      _warnOnce(message);\n    });\n    if (Object.keys(invalidProperties).length > 0 && docsUrl) {\n      const url = this.getFrameworkOverrides().getDocLink(docsUrl);\n      _warnOnce(`to see all the valid ${containerName} properties please check: ${url}`);\n    }\n  }\n};\n\n// community-modules/core/src/gridCoreModule.ts\nvar GridCoreModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/core\" /* CommunityCoreModule */\n};\nvar ValidationsModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/core-validations\",\n  beans: [ValidationService]\n};\nvar CommunityFeaturesModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/core-community-features\",\n  dependantModules: [GridCoreModule, ValidationsModule, EditModule, FilterModule, StateModule, DataTypeModule, AlignedGridsModule, PaginationModule, CommunityApiModule]\n};\n\n// community-modules/core/src/gridDestroyService.ts\nvar GridDestroyService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"gridDestroyService\";\n    this.destroyCalled = false;\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  destroy() {\n    if (this.destroyCalled) {\n      return;\n    }\n    const event = {\n      type: \"gridPreDestroyed\",\n      state: this.beans.stateService?.getState() ?? {}\n    };\n    this.eventService.dispatchEvent(event);\n    this.destroyCalled = true;\n    this.beans.ctrlsService.get(\"gridCtrl\")?.destroyGridUi();\n    this.beans.context.destroy();\n    super.destroy();\n  }\n  isDestroyCalled() {\n    return this.destroyCalled;\n  }\n};\n\n// community-modules/core/src/events.ts\nvar ALWAYS_SYNC_GLOBAL_EVENTS = /* @__PURE__ */new Set([\"gridPreDestroyed\", \"fillStart\", \"pasteStart\"]);\nvar isSelectionUIEvent = source => {\n  return source === \"checkboxSelected\" || source === \"rowClicked\" || source === \"spaceKey\" || source === \"uiSelectAll\" || source === \"uiSelectAllCurrentPage\" || source === \"uiSelectAllFiltered\";\n};\n\n// community-modules/core/src/gridOptionsService.ts\nvar PROPERTY_COERCIONS = new Map([...PropertyKeys.BOOLEAN_PROPERTIES.map(key => [key, toBoolean]), ...PropertyKeys.NUMBER_PROPERTIES.map(key => [key, toNumber]), [\"groupAggFiltering\", val => typeof val === \"function\" ? val : toBoolean(val)], [\"pageSize\", toConstrainedNum(1)], [\"autoSizePadding\", toConstrainedNum(0)], [\"keepDetailRowsCount\", toConstrainedNum(1)], [\"rowBuffer\", toConstrainedNum(0)], [\"infiniteInitialRowCount\", toConstrainedNum(1)], [\"cacheOverflowSize\", toConstrainedNum(1)], [\"cacheBlockSize\", toConstrainedNum(1)], [\"serverSideInitialRowCount\", toConstrainedNum(1)], [\"viewportRowModelPageSize\", toConstrainedNum(1)], [\"viewportRowModelBufferSize\", toConstrainedNum(0)]]);\nfunction getCoercedValue(key, value) {\n  const coerceFunc = PROPERTY_COERCIONS.get(key);\n  if (!coerceFunc) {\n    return value;\n  }\n  return coerceFunc(value);\n}\nfunction getCoercedGridOptions(gridOptions) {\n  const newGo = {};\n  Object.entries(gridOptions).forEach(([key, value]) => {\n    const coercedValue = getCoercedValue(key, value);\n    newGo[key] = coercedValue;\n  });\n  return newGo;\n}\nvar _GridOptionsService = /*#__PURE__*/(() => {\n  let _GridOptionsService = class _GridOptionsService extends BeanStub {\n    constructor() {\n      super(...arguments);\n      this.beanName = \"gos\";\n      this.domDataKey = \"__AG_\" + Math.random().toString();\n      this.propertyEventService = new LocalEventService();\n      // responsible for calling the onXXX functions on gridOptions\n      // It forces events defined in GridOptionsService.alwaysSyncGlobalEvents to be fired synchronously.\n      // This is required for events such as GridPreDestroyed.\n      // Other events can be fired asynchronously or synchronously depending on config.\n      this.globalEventHandlerFactory = restrictToSyncOnly => {\n        return (eventName, event) => {\n          if (!this.isAlive()) {\n            return;\n          }\n          const alwaysSync = ALWAYS_SYNC_GLOBAL_EVENTS.has(eventName);\n          if (alwaysSync && !restrictToSyncOnly || !alwaysSync && restrictToSyncOnly) {\n            return;\n          }\n          const eventHandlerName = ComponentUtil.getCallbackForEvent(eventName);\n          const eventHandler = this.gridOptions[eventHandlerName];\n          if (typeof eventHandler === \"function\") {\n            this.frameworkOverrides.wrapOutgoing(() => {\n              eventHandler(event);\n            });\n          }\n        };\n      };\n    }\n    wireBeans(beans) {\n      this.gridOptions = beans.gridOptions;\n      this.eGridDiv = beans.eGridDiv;\n      this.validationService = beans.validationService;\n      this.environment = beans.environment;\n      this.api = beans.gridApi;\n    }\n    // This is quicker then having code call gridOptionsService.get('context')\n    get gridOptionsContext() {\n      return this.gridOptions[\"context\"];\n    }\n    postConstruct() {\n      const async = !this.get(\"suppressAsyncEvents\");\n      this.eventService.addGlobalListener(this.globalEventHandlerFactory().bind(this), async);\n      this.eventService.addGlobalListener(this.globalEventHandlerFactory(true).bind(this), false);\n      this.propertyEventService.setFrameworkOverrides(this.frameworkOverrides);\n      this.getScrollbarWidth();\n      this.addManagedEventListeners({\n        gridOptionsChanged: ({\n          options\n        }) => {\n          this.updateGridOptions({\n            options,\n            force: true,\n            source: \"gridOptionsUpdated\"\n          });\n        }\n      });\n    }\n    /**\n     * Get the raw value of the GridOptions property provided.\n     * @param property\n     */\n    get(property) {\n      return this.gridOptions[property] ?? GRID_OPTION_DEFAULTS[property];\n    }\n    /**\n     * Get the GridOption callback but wrapped so that the common params of api and context are automatically applied to the params.\n     * @param property GridOption callback properties based on the fact that this property has a callback with params extending AgGridCommon\n     */\n    getCallback(property) {\n      return this.mergeGridCommonParams(this.gridOptions[property]);\n    }\n    /**\n     * Returns `true` if a value has been specified for this GridOption.\n     * @param property GridOption property\n     */\n    exists(property) {\n      return _exists(this.gridOptions[property]);\n    }\n    /**\n     * Wrap the user callback and attach the api and context to the params object on the way through.\n     * @param callback User provided callback\n     * @returns Wrapped callback where the params object not require api and context\n     */\n    mergeGridCommonParams(callback) {\n      if (callback) {\n        const wrapped = callbackParams => {\n          const mergedParams = callbackParams;\n          mergedParams.api = this.api;\n          mergedParams.context = this.gridOptionsContext;\n          return callback(mergedParams);\n        };\n        return wrapped;\n      }\n      return callback;\n    }\n    updateGridOptions({\n      options,\n      force,\n      source = \"api\"\n    }) {\n      const changeSet = {\n        id: _GridOptionsService.changeSetId++,\n        properties: []\n      };\n      const events = [];\n      Object.entries(options).forEach(([key, value]) => {\n        if (source === \"api\" && INITIAL_GRID_OPTION_KEYS[key]) {\n          _warnOnce(`${key} is an initial property and cannot be updated.`);\n        }\n        const coercedValue = getCoercedValue(key, value);\n        const shouldForce = force || typeof coercedValue === \"object\" && source === \"api\";\n        const previousValue = this.gridOptions[key];\n        if (shouldForce || previousValue !== coercedValue) {\n          this.gridOptions[key] = coercedValue;\n          const event = {\n            type: key,\n            currentValue: coercedValue,\n            previousValue,\n            changeSet,\n            source\n          };\n          events.push(event);\n        }\n      });\n      this.validationService?.processGridOptions(this.gridOptions);\n      changeSet.properties = events.map(event => event.type);\n      events.forEach(event => {\n        if (this.gridOptions.debug) {\n          _log(`Updated property ${event.type} from`, event.previousValue, ` to `, event.currentValue);\n        }\n        this.propertyEventService.dispatchEvent(event);\n      });\n    }\n    addPropertyEventListener(key, listener) {\n      this.propertyEventService.addEventListener(key, listener);\n    }\n    removePropertyEventListener(key, listener) {\n      this.propertyEventService.removeEventListener(key, listener);\n    }\n    // *************** Helper methods ************************** //\n    // Methods to share common GridOptions related logic that goes above accessing a single property\n    // the user might be using some non-standard scrollbar, eg a scrollbar that has zero\n    // width and overlays (like the Safari scrollbar, but presented in Chrome). so we\n    // allow the user to provide the scroll width before we work it out.\n    getScrollbarWidth() {\n      if (this.scrollbarWidth == null) {\n        const useGridOptions = typeof this.gridOptions.scrollbarWidth === \"number\" && this.gridOptions.scrollbarWidth >= 0;\n        const scrollbarWidth = useGridOptions ? this.gridOptions.scrollbarWidth : _getScrollbarWidth();\n        if (scrollbarWidth != null) {\n          this.scrollbarWidth = scrollbarWidth;\n          this.eventService.dispatchEvent({\n            type: \"scrollbarWidthChanged\"\n          });\n        }\n      }\n      return this.scrollbarWidth;\n    }\n    isRowModelType(rowModelType) {\n      return this.gridOptions.rowModelType === rowModelType || rowModelType === \"clientSide\" && _missing(this.gridOptions.rowModelType);\n    }\n    isDomLayout(domLayout) {\n      const gridLayout = this.gridOptions.domLayout ?? \"normal\";\n      return gridLayout === domLayout;\n    }\n    isRowSelection() {\n      return this.gridOptions.rowSelection === \"single\" || this.gridOptions.rowSelection === \"multiple\";\n    }\n    useAsyncEvents() {\n      return !this.get(\"suppressAsyncEvents\");\n    }\n    isGetRowHeightFunction() {\n      return typeof this.gridOptions.getRowHeight === \"function\";\n    }\n    getRowHeightForNode(rowNode, allowEstimate = false, defaultRowHeight) {\n      if (defaultRowHeight == null) {\n        defaultRowHeight = this.environment.getDefaultRowHeight();\n      }\n      if (this.isGetRowHeightFunction()) {\n        if (allowEstimate) {\n          return {\n            height: defaultRowHeight,\n            estimated: true\n          };\n        }\n        const params = {\n          node: rowNode,\n          data: rowNode.data\n        };\n        const height = this.getCallback(\"getRowHeight\")(params);\n        if (this.isNumeric(height)) {\n          if (height === 0) {\n            _warnOnce(\"The return of `getRowHeight` cannot be zero. If the intention is to hide rows, use a filter instead.\");\n          }\n          return {\n            height: Math.max(1, height),\n            estimated: false\n          };\n        }\n      }\n      if (rowNode.detail && this.get(\"masterDetail\")) {\n        return this.getMasterDetailRowHeight();\n      }\n      const rowHeight = this.gridOptions.rowHeight && this.isNumeric(this.gridOptions.rowHeight) ? this.gridOptions.rowHeight : defaultRowHeight;\n      return {\n        height: rowHeight,\n        estimated: false\n      };\n    }\n    getMasterDetailRowHeight() {\n      if (this.get(\"detailRowAutoHeight\")) {\n        return {\n          height: 1,\n          estimated: false\n        };\n      }\n      if (this.isNumeric(this.gridOptions.detailRowHeight)) {\n        return {\n          height: this.gridOptions.detailRowHeight,\n          estimated: false\n        };\n      }\n      return {\n        height: 300,\n        estimated: false\n      };\n    }\n    // we don't allow dynamic row height for virtual paging\n    getRowHeightAsNumber() {\n      if (!this.gridOptions.rowHeight || _missing(this.gridOptions.rowHeight)) {\n        return this.environment.getDefaultRowHeight();\n      }\n      const rowHeight = this.environment.refreshRowHeightVariable();\n      if (rowHeight !== -1) {\n        return rowHeight;\n      }\n      _warnOnce(\"row height must be a number if not using standard row model\");\n      return this.environment.getDefaultRowHeight();\n    }\n    isNumeric(value) {\n      return !isNaN(value) && typeof value === \"number\" && isFinite(value);\n    }\n    getDomDataKey() {\n      return this.domDataKey;\n    }\n    // returns the dom data, or undefined if not found\n    getDomData(element, key) {\n      const domData = element[this.getDomDataKey()];\n      return domData ? domData[key] : void 0;\n    }\n    setDomData(element, key, value) {\n      const domDataKey = this.getDomDataKey();\n      let domData = element[domDataKey];\n      if (_missing(domData)) {\n        domData = {};\n        element[domDataKey] = domData;\n      }\n      domData[key] = value;\n    }\n    getDocument() {\n      let result = null;\n      if (this.gridOptions.getDocument && _exists(this.gridOptions.getDocument)) {\n        result = this.gridOptions.getDocument();\n      } else if (this.eGridDiv) {\n        result = this.eGridDiv.ownerDocument;\n      }\n      if (result && _exists(result)) {\n        return result;\n      }\n      return document;\n    }\n    getWindow() {\n      const eDocument = this.getDocument();\n      return eDocument.defaultView || window;\n    }\n    getRootNode() {\n      return this.eGridDiv.getRootNode();\n    }\n    getActiveDomElement() {\n      return this.getRootNode().activeElement;\n    }\n    getAsyncTransactionWaitMillis() {\n      return _exists(this.gridOptions.asyncTransactionWaitMillis) ? this.gridOptions.asyncTransactionWaitMillis : 50;\n    }\n    isAnimateRows() {\n      if (this.get(\"ensureDomOrder\")) {\n        return false;\n      }\n      return this.get(\"animateRows\");\n    }\n    isGroupRowsSticky() {\n      if (this.get(\"paginateChildRows\") || this.get(\"groupHideOpenParents\") || this.isDomLayout(\"print\")) {\n        return false;\n      }\n      return true;\n    }\n    isColumnsSortingCoupledToGroup() {\n      const autoGroupColumnDef = this.gridOptions.autoGroupColumnDef;\n      return !autoGroupColumnDef?.comparator && !this.get(\"treeData\");\n    }\n    getGroupAggFiltering() {\n      const userValue = this.gridOptions.groupAggFiltering;\n      if (typeof userValue === \"function\") {\n        return this.getCallback(\"groupAggFiltering\");\n      }\n      if (userValue === true) {\n        return () => true;\n      }\n      return void 0;\n    }\n    getGrandTotalRow() {\n      const userValue = this.gridOptions.grandTotalRow;\n      if (userValue) {\n        return userValue;\n      }\n      const legacyValue = this.gridOptions.groupIncludeTotalFooter;\n      if (legacyValue) {\n        return \"bottom\";\n      }\n      return void 0;\n    }\n    getGroupTotalRowCallback() {\n      const userValue = this.get(\"groupTotalRow\");\n      if (typeof userValue === \"function\") {\n        return this.getCallback(\"groupTotalRow\");\n      }\n      if (userValue) {\n        return () => userValue;\n      }\n      const legacyValue = this.get(\"groupIncludeFooter\");\n      if (typeof legacyValue === \"function\") {\n        const legacyCallback = this.getCallback(\"groupIncludeFooter\");\n        return p => {\n          return legacyCallback(p) ? \"bottom\" : void 0;\n        };\n      }\n      return () => legacyValue ? \"bottom\" : void 0;\n    }\n    isGroupMultiAutoColumn() {\n      if (this.gridOptions.groupDisplayType) {\n        return this.gridOptions.groupDisplayType === \"multipleColumns\";\n      }\n      return this.get(\"groupHideOpenParents\");\n    }\n    isGroupUseEntireRow(pivotMode) {\n      if (pivotMode) {\n        return false;\n      }\n      return this.gridOptions.groupDisplayType === \"groupRows\";\n    }\n    getGridCommonParams() {\n      return {\n        api: this.api,\n        context: this.gridOptionsContext\n      };\n    }\n    addGridCommonParams(params) {\n      const updatedParams = params;\n      updatedParams.api = this.api;\n      updatedParams.context = this.gridOptionsContext;\n      return updatedParams;\n    }\n    // AG-9259 Can't use `WrappedCallback<'getRowId', ...>` here because of a strange typescript bug\n    getRowIdCallback() {\n      const getRowId = this.getCallback(\"getRowId\");\n      if (getRowId === void 0) {\n        return getRowId;\n      }\n      return params => {\n        let id = getRowId(params);\n        if (typeof id !== \"string\") {\n          _warnOnce(`The getRowId callback must return a string. The ID `, id, ` is being cast to a string.`);\n          id = String(id);\n        }\n        return id;\n      };\n    }\n  };\n  _GridOptionsService.changeSetId = 0;\n  return _GridOptionsService;\n})();\nvar GridOptionsService = _GridOptionsService;\n\n// community-modules/core/src/headerRendering/common/headerPosition.ts\nvar HeaderPositionUtils = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"headerPositionUtils\";\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  findHeader(focusedHeader, direction) {\n    let nextColumn;\n    let getColMethod;\n    if (isColumnGroup(focusedHeader.column)) {\n      nextColumn = this.visibleColsService.getGroupAtDirection(focusedHeader.column, direction);\n    } else {\n      getColMethod = `getCol${direction}`;\n      nextColumn = this.visibleColsService[getColMethod](focusedHeader.column);\n    }\n    if (!nextColumn) {\n      return;\n    }\n    const {\n      headerRowIndex\n    } = focusedHeader;\n    if (this.getHeaderRowType(headerRowIndex) !== \"filter\" /* FLOATING_FILTER */) {\n      const columnsInPath = [nextColumn];\n      while (nextColumn.getParent()) {\n        nextColumn = nextColumn.getParent();\n        columnsInPath.push(nextColumn);\n      }\n      nextColumn = columnsInPath[columnsInPath.length - 1 - headerRowIndex];\n    }\n    const {\n      column,\n      headerRowIndex: indexToFocus\n    } = this.getHeaderIndexToFocus(nextColumn, headerRowIndex);\n    return {\n      column,\n      headerRowIndex: indexToFocus\n    };\n  }\n  getHeaderIndexToFocus(column, currentIndex) {\n    let nextColumn;\n    if (isColumnGroup(column) && this.isAnyChildSpanningHeaderHeight(column) && column.isPadding()) {\n      const targetColumn = column;\n      nextColumn = targetColumn.getLeafColumns()[0];\n      let col = nextColumn;\n      while (col !== targetColumn) {\n        currentIndex++;\n        col = col.getParent();\n      }\n    }\n    return {\n      column: nextColumn || column,\n      headerRowIndex: currentIndex\n    };\n  }\n  isAnyChildSpanningHeaderHeight(columnGroup) {\n    if (!columnGroup) {\n      return false;\n    }\n    return columnGroup.getLeafColumns().some(col => col.isSpanHeaderHeight());\n  }\n  getColumnVisibleParent(currentColumn, currentIndex) {\n    const currentRowType = this.getHeaderRowType(currentIndex);\n    const isFloatingFilter = currentRowType === \"filter\" /* FLOATING_FILTER */;\n    const isColumn2 = currentRowType === \"column\" /* COLUMN */;\n    let nextFocusColumn = isFloatingFilter ? currentColumn : currentColumn.getParent();\n    let nextRow = currentIndex - 1;\n    let headerRowIndexWithoutSpan = nextRow;\n    if (isColumn2 && this.isAnyChildSpanningHeaderHeight(currentColumn.getParent())) {\n      while (nextFocusColumn && nextFocusColumn.isPadding()) {\n        nextFocusColumn = nextFocusColumn.getParent();\n        nextRow--;\n      }\n      headerRowIndexWithoutSpan = nextRow;\n      if (nextRow < 0) {\n        nextFocusColumn = currentColumn;\n        nextRow = currentIndex;\n        headerRowIndexWithoutSpan = void 0;\n      }\n    }\n    return {\n      column: nextFocusColumn,\n      headerRowIndex: nextRow,\n      headerRowIndexWithoutSpan\n    };\n  }\n  getColumnVisibleChild(column, currentIndex, direction = \"After\") {\n    const currentRowType = this.getHeaderRowType(currentIndex);\n    let nextFocusColumn = column;\n    let nextRow = currentIndex + 1;\n    const headerRowIndexWithoutSpan = nextRow;\n    if (currentRowType === \"group\" /* COLUMN_GROUP */) {\n      const leafColumns = column.getDisplayedLeafColumns();\n      const leafColumn = direction === \"After\" ? leafColumns[0] : _last(leafColumns);\n      const columnsInTheWay = [];\n      let currentColumn = leafColumn;\n      while (currentColumn.getParent() !== column) {\n        currentColumn = currentColumn.getParent();\n        columnsInTheWay.push(currentColumn);\n      }\n      nextFocusColumn = leafColumn;\n      if (leafColumn.isSpanHeaderHeight()) {\n        for (let i = columnsInTheWay.length - 1; i >= 0; i--) {\n          const colToFocus = columnsInTheWay[i];\n          if (!colToFocus.isPadding()) {\n            nextFocusColumn = colToFocus;\n            break;\n          }\n          nextRow++;\n        }\n      } else {\n        nextFocusColumn = _last(columnsInTheWay);\n        if (!nextFocusColumn) {\n          nextFocusColumn = leafColumn;\n        }\n      }\n    }\n    return {\n      column: nextFocusColumn,\n      headerRowIndex: nextRow,\n      headerRowIndexWithoutSpan\n    };\n  }\n  getHeaderRowType(rowIndex) {\n    const centerHeaderContainer = this.ctrlsService.getHeaderRowContainerCtrl();\n    if (centerHeaderContainer) {\n      return centerHeaderContainer.getRowType(rowIndex);\n    }\n  }\n  findColAtEdgeForHeaderRow(level, position) {\n    const displayedColumns = this.visibleColsService.getAllCols();\n    const column = displayedColumns[position === \"start\" ? 0 : displayedColumns.length - 1];\n    if (!column) {\n      return;\n    }\n    const childContainer = this.ctrlsService.getHeaderRowContainerCtrl(column.getPinned());\n    const type = childContainer.getRowType(level);\n    if (type == \"group\" /* COLUMN_GROUP */) {\n      const columnGroup = this.visibleColsService.getColGroupAtLevel(column, level);\n      return {\n        headerRowIndex: level,\n        column: columnGroup\n      };\n    }\n    return {\n      // if type==null, means the header level didn't exist\n      headerRowIndex: type == null ? -1 : level,\n      column\n    };\n  }\n};\n\n// community-modules/core/src/localeService.ts\nvar LocaleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"localeService\";\n  }\n  getLocaleTextFunc() {\n    const getLocaleText = this.gos.getCallback(\"getLocaleText\");\n    if (getLocaleText) {\n      return (key, defaultValue, variableValues) => {\n        const params = {\n          key,\n          defaultValue,\n          variableValues\n        };\n        return getLocaleText(params);\n      };\n    }\n    const localeText = this.gos.get(\"localeText\");\n    return (key, defaultValue, variableValues) => {\n      let localisedText = localeText && localeText[key];\n      if (localisedText && variableValues && variableValues.length) {\n        let found = 0;\n        while (true) {\n          if (found >= variableValues.length) {\n            break;\n          }\n          const idx = localisedText.indexOf(\"${variable}\");\n          if (idx === -1) {\n            break;\n          }\n          localisedText = localisedText.replace(\"${variable}\", variableValues[found++]);\n        }\n      }\n      return localisedText ?? defaultValue;\n    };\n  }\n};\n\n// community-modules/core/src/misc/apiEventService.ts\nvar ApiEventService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"apiEventService\";\n    this.syncEventListeners = /* @__PURE__ */new Map();\n    this.asyncEventListeners = /* @__PURE__ */new Map();\n    this.syncGlobalEventListeners = /* @__PURE__ */new Set();\n    this.globalEventListenerPairs = /* @__PURE__ */new Map();\n  }\n  postConstruct() {\n    this.frameworkEventWrappingService = new FrameworkEventListenerService(this.getFrameworkOverrides());\n  }\n  addEventListener(eventType, userListener) {\n    const listener = this.frameworkEventWrappingService.wrap(userListener);\n    const async = this.gos.useAsyncEvents() && !ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType);\n    const listeners = async ? this.asyncEventListeners : this.syncEventListeners;\n    if (!listeners.has(eventType)) {\n      listeners.set(eventType, /* @__PURE__ */new Set());\n    }\n    listeners.get(eventType).add(listener);\n    this.eventService.addEventListener(eventType, listener, async);\n  }\n  removeEventListener(eventType, userListener) {\n    const listener = this.frameworkEventWrappingService.unwrap(userListener);\n    const asyncListeners = this.asyncEventListeners.get(eventType);\n    const hasAsync = !!asyncListeners?.delete(listener);\n    if (!hasAsync) {\n      this.syncEventListeners.get(eventType)?.delete(listener);\n    }\n    this.eventService.removeEventListener(eventType, listener, hasAsync);\n  }\n  addGlobalListener(userListener) {\n    const listener = this.frameworkEventWrappingService.wrapGlobal(userListener);\n    const async = this.gos.useAsyncEvents();\n    if (async) {\n      const syncListener = (eventType, event) => {\n        if (ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\n          listener(eventType, event);\n        }\n      };\n      const asyncListener = (eventType, event) => {\n        if (!ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\n          listener(eventType, event);\n        }\n      };\n      this.globalEventListenerPairs.set(userListener, {\n        syncListener,\n        asyncListener\n      });\n      this.eventService.addGlobalListener(syncListener, false);\n      this.eventService.addGlobalListener(asyncListener, true);\n    } else {\n      this.syncGlobalEventListeners.add(listener);\n      this.eventService.addGlobalListener(listener, false);\n    }\n  }\n  removeGlobalListener(userListener) {\n    const listener = this.frameworkEventWrappingService.unwrapGlobal(userListener);\n    const hasAsync = this.globalEventListenerPairs.has(listener);\n    if (hasAsync) {\n      const {\n        syncListener,\n        asyncListener\n      } = this.globalEventListenerPairs.get(listener);\n      this.eventService.removeGlobalListener(syncListener, false);\n      this.eventService.removeGlobalListener(asyncListener, true);\n      this.globalEventListenerPairs.delete(userListener);\n    } else {\n      this.syncGlobalEventListeners.delete(listener);\n      this.eventService.removeGlobalListener(listener, false);\n    }\n  }\n  destroyEventListeners(map, async) {\n    map.forEach((listeners, eventType) => {\n      listeners.forEach(listener => this.eventService.removeEventListener(eventType, listener, async));\n      listeners.clear();\n    });\n    map.clear();\n  }\n  destroyGlobalListeners(set, async) {\n    set.forEach(listener => this.eventService.removeGlobalListener(listener, async));\n    set.clear();\n  }\n  destroy() {\n    super.destroy();\n    this.destroyEventListeners(this.syncEventListeners, false);\n    this.destroyEventListeners(this.asyncEventListeners, true);\n    this.destroyGlobalListeners(this.syncGlobalEventListeners, false);\n    this.globalEventListenerPairs.forEach(({\n      syncListener,\n      asyncListener\n    }) => {\n      this.eventService.removeGlobalListener(syncListener, false);\n      this.eventService.removeGlobalListener(asyncListener, true);\n    });\n    this.globalEventListenerPairs.clear();\n  }\n};\n\n// community-modules/core/src/pagination/pageBoundsListener.ts\nvar PageBoundsListener = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pageBoundsListener\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.paginationService = beans.paginationService;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      modelUpdated: this.onModelUpdated.bind(this),\n      recalculateRowBounds: this.calculatePages.bind(this)\n    });\n    this.onModelUpdated();\n  }\n  onModelUpdated(modelUpdatedEvent) {\n    this.calculatePages();\n    const paginationChangedEvent = {\n      type: \"paginationChanged\",\n      animate: modelUpdatedEvent ? modelUpdatedEvent.animate : false,\n      newData: modelUpdatedEvent ? modelUpdatedEvent.newData : false,\n      newPage: modelUpdatedEvent ? modelUpdatedEvent.newPage : false,\n      newPageSize: modelUpdatedEvent ? modelUpdatedEvent.newPageSize : false,\n      keepRenderedRows: modelUpdatedEvent ? modelUpdatedEvent.keepRenderedRows : false\n    };\n    this.eventService.dispatchEvent(paginationChangedEvent);\n  }\n  calculatePages() {\n    if (this.paginationService) {\n      this.paginationService.calculatePages();\n    } else {\n      this.pageBoundsService.calculateBounds(0, this.rowModel.getRowCount() - 1);\n    }\n  }\n};\n\n// community-modules/core/src/pagination/pageBoundsService.ts\nvar PageBoundsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pageBoundsService\";\n    this.pixelOffset = 0;\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n  }\n  getFirstRow() {\n    return this.topRowBounds ? this.topRowBounds.rowIndex : -1;\n  }\n  getLastRow() {\n    return this.bottomRowBounds ? this.bottomRowBounds.rowIndex : -1;\n  }\n  getCurrentPageHeight() {\n    if (_missing(this.topRowBounds) || _missing(this.bottomRowBounds)) {\n      return 0;\n    }\n    return Math.max(this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight - this.topRowBounds.rowTop, 0);\n  }\n  getCurrentPagePixelRange() {\n    const pageFirstPixel = this.topRowBounds ? this.topRowBounds.rowTop : 0;\n    const pageLastPixel = this.bottomRowBounds ? this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight : 0;\n    return {\n      pageFirstPixel,\n      pageLastPixel\n    };\n  }\n  calculateBounds(topDisplayedRowIndex, bottomDisplayedRowIndex) {\n    this.topRowBounds = this.rowModel.getRowBounds(topDisplayedRowIndex);\n    if (this.topRowBounds) {\n      this.topRowBounds.rowIndex = topDisplayedRowIndex;\n    }\n    this.bottomRowBounds = this.rowModel.getRowBounds(bottomDisplayedRowIndex);\n    if (this.bottomRowBounds) {\n      this.bottomRowBounds.rowIndex = bottomDisplayedRowIndex;\n    }\n    this.calculatePixelOffset();\n  }\n  getPixelOffset() {\n    return this.pixelOffset;\n  }\n  calculatePixelOffset() {\n    const value = _exists(this.topRowBounds) ? this.topRowBounds.rowTop : 0;\n    if (this.pixelOffset === value) {\n      return;\n    }\n    this.pixelOffset = value;\n    this.eventService.dispatchEvent({\n      type: \"paginationPixelOffsetChanged\"\n    });\n  }\n};\n\n// community-modules/core/src/rendering/ariaAnnouncementService.ts\nvar AriaAnnouncementService = class extends BeanStub {\n  constructor() {\n    super();\n    this.beanName = \"ariaAnnouncementService\";\n    this.descriptionContainer = null;\n    this.announceValue = _debounce(this.announceValue.bind(this), 200);\n  }\n  wireBeans(beans) {\n    this.eGridDiv = beans.eGridDiv;\n  }\n  postConstruct() {\n    const eDocument = this.gos.getDocument();\n    const div = this.descriptionContainer = eDocument.createElement(\"div\");\n    div.classList.add(\"ag-aria-description-container\");\n    _setAriaLive(div, \"polite\");\n    _setAriaRelevant(div, \"additions text\");\n    _setAriaAtomic(div, true);\n    this.eGridDiv.appendChild(div);\n  }\n  announceValue(value) {\n    if (!this.descriptionContainer) {\n      return;\n    }\n    this.descriptionContainer.textContent = \"\";\n    setTimeout(() => {\n      if (this.isAlive() && this.descriptionContainer) {\n        this.descriptionContainer.textContent = value;\n      }\n    }, 50);\n  }\n  destroy() {\n    super.destroy();\n    const {\n      descriptionContainer\n    } = this;\n    if (descriptionContainer) {\n      _clearElement(descriptionContainer);\n      if (descriptionContainer.parentElement) {\n        descriptionContainer.parentElement.removeChild(descriptionContainer);\n      }\n    }\n    this.descriptionContainer = null;\n    this.eGridDiv = null;\n  }\n};\n\n// community-modules/core/src/rendering/columnAnimationService.ts\nvar ColumnAnimationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnAnimationService\";\n    this.executeNextFuncs = [];\n    this.executeLaterFuncs = [];\n    this.active = false;\n    this.suppressAnimation = false;\n    this.animationThreadCount = 0;\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady(p => this.gridBodyCtrl = p.gridBodyCtrl);\n  }\n  isActive() {\n    return this.active && !this.suppressAnimation;\n  }\n  setSuppressAnimation(suppress) {\n    this.suppressAnimation = suppress;\n  }\n  start() {\n    if (this.active) {\n      return;\n    }\n    if (this.gos.get(\"suppressColumnMoveAnimation\")) {\n      return;\n    }\n    if (this.gos.get(\"enableRtl\")) {\n      return;\n    }\n    this.ensureAnimationCssClassPresent();\n    this.active = true;\n  }\n  finish() {\n    if (!this.active) {\n      return;\n    }\n    this.flush(() => {\n      this.active = false;\n    });\n  }\n  executeNextVMTurn(func) {\n    if (this.active) {\n      this.executeNextFuncs.push(func);\n    } else {\n      func();\n    }\n  }\n  executeLaterVMTurn(func) {\n    if (this.active) {\n      this.executeLaterFuncs.push(func);\n    } else {\n      func();\n    }\n  }\n  ensureAnimationCssClassPresent() {\n    this.animationThreadCount++;\n    const animationThreadCountCopy = this.animationThreadCount;\n    this.gridBodyCtrl.setColumnMovingCss(true);\n    this.executeLaterFuncs.push(() => {\n      if (this.animationThreadCount === animationThreadCountCopy) {\n        this.gridBodyCtrl.setColumnMovingCss(false);\n      }\n    });\n  }\n  flush(callback) {\n    if (this.executeNextFuncs.length === 0 && this.executeLaterFuncs.length === 0) {\n      callback();\n      return;\n    }\n    const runFuncs = queue => {\n      while (queue.length) {\n        const func = queue.pop();\n        if (func) {\n          func();\n        }\n      }\n    };\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      window.setTimeout(() => runFuncs(this.executeNextFuncs), 0);\n      window.setTimeout(() => {\n        callback();\n        runFuncs(this.executeLaterFuncs);\n      }, 200);\n    });\n  }\n};\n\n// community-modules/core/src/rendering/columnHoverService.ts\nvar ColumnHoverService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnHoverService\";\n  }\n  setMouseOver(columns) {\n    this.selectedColumns = columns;\n    const event = {\n      type: \"columnHoverChanged\"\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  clearMouseOver() {\n    this.selectedColumns = null;\n    const event = {\n      type: \"columnHoverChanged\"\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  isHovered(column) {\n    return !!this.selectedColumns && this.selectedColumns.indexOf(column) >= 0;\n  }\n};\n\n// community-modules/core/src/rendering/overlays/overlayService.ts\nvar OverlayService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"overlayService\";\n    this.state = 0 /* Hidden */;\n    this.showInitialOverlay = true;\n  }\n  wireBeans(beans) {\n    this.userComponentFactory = beans.userComponentFactory;\n    this.rowModel = beans.rowModel;\n    this.columnModel = beans.columnModel;\n  }\n  postConstruct() {\n    const updateOverlayVisibility = () => this.updateOverlayVisibility();\n    this.addManagedEventListeners({\n      newColumnsLoaded: updateOverlayVisibility,\n      rowDataUpdated: updateOverlayVisibility\n    });\n    this.addManagedPropertyListener(\"loading\", updateOverlayVisibility);\n  }\n  registerOverlayWrapperComp(overlayWrapperComp) {\n    this.overlayWrapperComp = overlayWrapperComp;\n    this.updateOverlayVisibility();\n  }\n  showLoadingOverlay() {\n    this.showInitialOverlay = false;\n    const loading = this.gos.get(\"loading\");\n    if (!loading && (loading !== void 0 || this.gos.get(\"suppressLoadingOverlay\"))) {\n      return;\n    }\n    this.doShowLoadingOverlay();\n  }\n  showNoRowsOverlay() {\n    this.showInitialOverlay = false;\n    if (this.gos.get(\"loading\") || this.gos.get(\"suppressNoRowsOverlay\")) {\n      return;\n    }\n    this.doShowNoRowsOverlay();\n  }\n  hideOverlay() {\n    this.showInitialOverlay = false;\n    if (this.gos.get(\"loading\")) {\n      return;\n    }\n    this.doHideOverlay();\n  }\n  updateOverlayVisibility() {\n    let loading = this.gos.get(\"loading\");\n    if (this.showInitialOverlay && loading === void 0 && !this.gos.get(\"suppressLoadingOverlay\")) {\n      loading = !this.gos.get(\"columnDefs\") || !this.columnModel.isReady() || !this.gos.get(\"rowData\") && this.gos.isRowModelType(\"clientSide\");\n    }\n    if (loading) {\n      if (this.state !== 1 /* Loading */) {\n        this.doShowLoadingOverlay();\n      }\n    } else {\n      this.showInitialOverlay = false;\n      if (this.rowModel.isEmpty() && !this.gos.get(\"suppressNoRowsOverlay\") && this.gos.isRowModelType(\"clientSide\")) {\n        if (this.state !== 2 /* NoRows */) {\n          this.doShowNoRowsOverlay();\n        }\n      } else if (this.state !== 0 /* Hidden */) {\n        this.doHideOverlay();\n      }\n    }\n  }\n  doShowLoadingOverlay() {\n    this.state = 1 /* Loading */;\n    this.showOverlay(this.userComponentFactory.getLoadingOverlayCompDetails({}), \"ag-overlay-loading-wrapper\", \"loadingOverlayComponentParams\");\n  }\n  doShowNoRowsOverlay() {\n    this.state = 2 /* NoRows */;\n    this.showOverlay(this.userComponentFactory.getNoRowsOverlayCompDetails({}), \"ag-overlay-no-rows-wrapper\", \"noRowsOverlayComponentParams\");\n  }\n  doHideOverlay() {\n    this.state = 0 /* Hidden */;\n    this.overlayWrapperComp.hideOverlay();\n  }\n  showOverlay(compDetails, wrapperCssClass, gridOption) {\n    const promise = compDetails.newAgStackInstance();\n    this.overlayWrapperComp.showOverlay(promise, wrapperCssClass, gridOption);\n  }\n};\n\n// community-modules/core/src/rendering/row/rowCssClassCalculator.ts\nvar RowCssClassCalculator = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowCssClassCalculator\";\n  }\n  wireBeans(beans) {\n    this.stylingService = beans.stylingService;\n  }\n  getInitialRowClasses(params) {\n    const classes = [];\n    if (_exists(params.extraCssClass)) {\n      classes.push(params.extraCssClass);\n    }\n    classes.push(\"ag-row\");\n    classes.push(params.rowFocused ? \"ag-row-focus\" : \"ag-row-no-focus\");\n    if (params.fadeRowIn) {\n      classes.push(\"ag-opacity-zero\");\n    }\n    classes.push(params.rowIsEven ? \"ag-row-even\" : \"ag-row-odd\");\n    if (params.rowNode.isRowPinned()) {\n      classes.push(\"ag-row-pinned\");\n    }\n    if (params.rowNode.isSelected()) {\n      classes.push(\"ag-row-selected\");\n    }\n    if (params.rowNode.footer) {\n      classes.push(\"ag-row-footer\");\n    }\n    classes.push(\"ag-row-level-\" + params.rowLevel);\n    if (params.rowNode.stub) {\n      classes.push(\"ag-row-loading\");\n    }\n    if (params.fullWidthRow) {\n      classes.push(\"ag-full-width-row\");\n    }\n    if (params.expandable) {\n      classes.push(\"ag-row-group\");\n      classes.push(params.rowNode.expanded ? \"ag-row-group-expanded\" : \"ag-row-group-contracted\");\n    }\n    if (params.rowNode.dragging) {\n      classes.push(\"ag-row-dragging\");\n    }\n    _pushAll(classes, this.processClassesFromGridOptions(params.rowNode));\n    _pushAll(classes, this.preProcessRowClassRules(params.rowNode));\n    classes.push(params.printLayout ? \"ag-row-position-relative\" : \"ag-row-position-absolute\");\n    if (params.firstRowOnPage) {\n      classes.push(\"ag-row-first\");\n    }\n    if (params.lastRowOnPage) {\n      classes.push(\"ag-row-last\");\n    }\n    if (params.fullWidthRow) {\n      if (params.pinned === \"left\") {\n        classes.push(\"ag-cell-last-left-pinned\");\n      }\n      if (params.pinned === \"right\") {\n        classes.push(\"ag-cell-first-right-pinned\");\n      }\n    }\n    return classes;\n  }\n  processClassesFromGridOptions(rowNode) {\n    const res = [];\n    const process = rowCls => {\n      if (typeof rowCls === \"string\") {\n        res.push(rowCls);\n      } else if (Array.isArray(rowCls)) {\n        rowCls.forEach(e => res.push(e));\n      }\n    };\n    const rowClass = this.gos.get(\"rowClass\");\n    if (rowClass) {\n      if (typeof rowClass === \"function\") {\n        _warnOnce(\"rowClass should not be a function, please use getRowClass instead\");\n        return [];\n      }\n      process(rowClass);\n    }\n    const rowClassFunc = this.gos.getCallback(\"getRowClass\");\n    if (rowClassFunc) {\n      const params = {\n        data: rowNode.data,\n        node: rowNode,\n        rowIndex: rowNode.rowIndex\n      };\n      const rowClassFuncResult = rowClassFunc(params);\n      process(rowClassFuncResult);\n    }\n    return res;\n  }\n  preProcessRowClassRules(rowNode) {\n    const res = [];\n    this.processRowClassRules(rowNode, className => {\n      res.push(className);\n    }, () => {});\n    return res;\n  }\n  processRowClassRules(rowNode, onApplicableClass, onNotApplicableClass) {\n    const rowClassParams = this.gos.addGridCommonParams({\n      data: rowNode.data,\n      node: rowNode,\n      rowIndex: rowNode.rowIndex\n    });\n    this.stylingService.processClassRules(void 0, this.gos.get(\"rowClassRules\"), rowClassParams, onApplicableClass, onNotApplicableClass);\n  }\n  calculateRowLevel(rowNode) {\n    if (rowNode.group) {\n      return rowNode.level;\n    }\n    return rowNode.parent ? rowNode.parent.level + 1 : 0;\n  }\n};\n\n// community-modules/core/src/rendering/rowContainerHeightService.ts\nvar RowContainerHeightService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowContainerHeightService\";\n    // the scrollY position\n    this.scrollY = 0;\n    // how tall the body is\n    this.uiBodyHeight = 0;\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      bodyHeightChanged: this.updateOffset.bind(this)\n    });\n    this.maxDivHeight = _getMaxDivHeight();\n    if (this.gos.get(\"debug\")) {\n      _log(\"RowContainerHeightService - maxDivHeight = \" + this.maxDivHeight);\n    }\n  }\n  isStretching() {\n    return this.stretching;\n  }\n  getDivStretchOffset() {\n    return this.divStretchOffset;\n  }\n  updateOffset() {\n    if (!this.stretching) {\n      return;\n    }\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const newScrollY = gridBodyCon.getScrollFeature().getVScrollPosition().top;\n    const newBodyHeight = this.getUiBodyHeight();\n    const atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n    if (atLeastOneChanged) {\n      this.scrollY = newScrollY;\n      this.uiBodyHeight = newBodyHeight;\n      this.calculateOffset();\n    }\n  }\n  calculateOffset() {\n    this.setUiContainerHeight(this.maxDivHeight);\n    this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n    this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n    const scrollPercent = this.scrollY / this.maxScrollY;\n    const divStretchOffset = scrollPercent * this.pixelsToShave;\n    if (this.gos.get(\"debug\")) {\n      _log(`RowContainerHeightService - Div Stretch Offset = ${divStretchOffset} (${this.pixelsToShave} * ${scrollPercent})`);\n    }\n    this.setDivStretchOffset(divStretchOffset);\n  }\n  setUiContainerHeight(height) {\n    if (height !== this.uiContainerHeight) {\n      this.uiContainerHeight = height;\n      this.eventService.dispatchEvent({\n        type: \"rowContainerHeightChanged\"\n      });\n    }\n  }\n  clearOffset() {\n    this.setUiContainerHeight(this.modelHeight);\n    this.pixelsToShave = 0;\n    this.setDivStretchOffset(0);\n  }\n  setDivStretchOffset(newOffset) {\n    const newOffsetFloor = typeof newOffset === \"number\" ? Math.floor(newOffset) : null;\n    if (this.divStretchOffset === newOffsetFloor) {\n      return;\n    }\n    this.divStretchOffset = newOffsetFloor;\n    this.eventService.dispatchEvent({\n      type: \"heightScaleChanged\"\n    });\n  }\n  setModelHeight(modelHeight) {\n    this.modelHeight = modelHeight;\n    this.stretching = modelHeight != null &&\n    // null happens when in print layout\n    this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\n    if (this.stretching) {\n      this.calculateOffset();\n    } else {\n      this.clearOffset();\n    }\n  }\n  getUiContainerHeight() {\n    return this.uiContainerHeight;\n  }\n  getRealPixelPosition(modelPixel) {\n    return modelPixel - this.divStretchOffset;\n  }\n  getUiBodyHeight() {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const pos = gridBodyCon.getScrollFeature().getVScrollPosition();\n    return pos.bottom - pos.top;\n  }\n  getScrollPositionForPixel(rowTop) {\n    if (this.pixelsToShave <= 0) {\n      return rowTop;\n    }\n    const modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n    const scrollPercent = rowTop / modelMaxScroll;\n    const scrollPixel = this.maxScrollY * scrollPercent;\n    return scrollPixel;\n  }\n};\n\n// community-modules/core/src/rowNodes/rowNodeSorter.ts\nvar RowNodeSorter = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowNodeSorter\";\n  }\n  wireBeans(beans) {\n    this.valueService = beans.valueService;\n    this.columnModel = beans.columnModel;\n    this.showRowGroupColsService = beans.showRowGroupColsService;\n  }\n  postConstruct() {\n    this.isAccentedSort = this.gos.get(\"accentedSort\");\n    this.primaryColumnsSortGroups = this.gos.isColumnsSortingCoupledToGroup();\n    this.addManagedPropertyListener(\"accentedSort\", propChange => this.isAccentedSort = propChange.currentValue);\n    this.addManagedPropertyListener(\"autoGroupColumnDef\", () => this.primaryColumnsSortGroups = this.gos.isColumnsSortingCoupledToGroup());\n  }\n  doFullSort(rowNodes, sortOptions) {\n    const mapper = (rowNode, pos) => ({\n      currentPos: pos,\n      rowNode\n    });\n    const sortedRowNodes = rowNodes.map(mapper);\n    sortedRowNodes.sort(this.compareRowNodes.bind(this, sortOptions));\n    return sortedRowNodes.map(item => item.rowNode);\n  }\n  compareRowNodes(sortOptions, sortedNodeA, sortedNodeB) {\n    const nodeA = sortedNodeA.rowNode;\n    const nodeB = sortedNodeB.rowNode;\n    for (let i = 0, len = sortOptions.length; i < len; i++) {\n      const sortOption = sortOptions[i];\n      const isDescending = sortOption.sort === \"desc\";\n      const valueA = this.getValue(nodeA, sortOption.column);\n      const valueB = this.getValue(nodeB, sortOption.column);\n      let comparatorResult;\n      const providedComparator = this.getComparator(sortOption, nodeA);\n      if (providedComparator) {\n        comparatorResult = providedComparator(valueA, valueB, nodeA, nodeB, isDescending);\n      } else {\n        comparatorResult = _defaultComparator(valueA, valueB, this.isAccentedSort);\n      }\n      const validResult = !isNaN(comparatorResult);\n      if (validResult && comparatorResult !== 0) {\n        return sortOption.sort === \"asc\" ? comparatorResult : comparatorResult * -1;\n      }\n    }\n    return sortedNodeA.currentPos - sortedNodeB.currentPos;\n  }\n  getComparator(sortOption, rowNode) {\n    const column = sortOption.column;\n    const comparatorOnCol = column.getColDef().comparator;\n    if (comparatorOnCol != null) {\n      return comparatorOnCol;\n    }\n    if (!column.getColDef().showRowGroup) {\n      return;\n    }\n    const groupLeafField = !rowNode.group && column.getColDef().field;\n    if (!groupLeafField) {\n      return;\n    }\n    const primaryColumn = this.columnModel.getColDefCol(groupLeafField);\n    if (!primaryColumn) {\n      return;\n    }\n    return primaryColumn.getColDef().comparator;\n  }\n  getValue(node, column) {\n    if (!this.primaryColumnsSortGroups) {\n      return this.valueService.getValue(column, node, false, false);\n    }\n    const isNodeGroupedAtLevel = node.rowGroupColumn === column;\n    if (isNodeGroupedAtLevel) {\n      const isGroupRows = this.gos.isGroupUseEntireRow(this.columnModel.isPivotActive());\n      if (isGroupRows) {\n        const leafChild = node.allLeafChildren?.[0];\n        if (leafChild) {\n          return this.valueService.getValue(column, leafChild, false, false);\n        }\n        return void 0;\n      }\n      const displayCol = this.showRowGroupColsService?.getShowRowGroupCol(column.getId());\n      if (!displayCol) {\n        return void 0;\n      }\n      return node.groupData?.[displayCol.getId()];\n    }\n    if (node.group && column.getColDef().showRowGroup) {\n      return void 0;\n    }\n    return this.valueService.getValue(column, node, false, false);\n  }\n};\n\n// community-modules/core/src/utils/changedPath.ts\nvar ChangedPath = class {\n  constructor(keepingColumns, rootNode) {\n    // whether changed path is active of not. it is active when a) doing\n    // a transaction update or b) doing change detection. if we are doing\n    // a CSRM refresh for other reasons (after sort or filter, or user calling\n    // setRowData() without delta mode) then we are not active. we are also\n    // marked as not active if secondary columns change in pivot (as this impacts\n    // aggregations)\n    this.active = true;\n    // for each node in the change path, we also store which columns need\n    // to be re-aggregated.\n    this.nodeIdsToColumns = {};\n    // for quick lookup, all items in the change path are mapped by nodeId\n    this.mapToItems = {};\n    this.keepingColumns = keepingColumns;\n    this.pathRoot = {\n      rowNode: rootNode,\n      children: null\n    };\n    this.mapToItems[rootNode.id] = this.pathRoot;\n  }\n  // can be set inactive by:\n  // a) ClientSideRowModel, if no transactions or\n  // b) PivotService, if secondary columns changed\n  setInactive() {\n    this.active = false;\n  }\n  isActive() {\n    return this.active;\n  }\n  depthFirstSearchChangedPath(pathItem, callback) {\n    if (pathItem.children) {\n      for (let i = 0; i < pathItem.children.length; i++) {\n        this.depthFirstSearchChangedPath(pathItem.children[i], callback);\n      }\n    }\n    callback(pathItem.rowNode);\n  }\n  depthFirstSearchEverything(rowNode, callback, traverseEverything) {\n    if (rowNode.childrenAfterGroup) {\n      for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n        const childNode = rowNode.childrenAfterGroup[i];\n        if (childNode.childrenAfterGroup) {\n          this.depthFirstSearchEverything(rowNode.childrenAfterGroup[i], callback, traverseEverything);\n        } else if (traverseEverything) {\n          callback(childNode);\n        }\n      }\n    }\n    callback(rowNode);\n  }\n  // traverseLeafNodes -> used when NOT doing changed path, ie traversing everything. the callback\n  // will be called for child nodes in addition to parent nodes.\n  forEachChangedNodeDepthFirst(callback, traverseLeafNodes = false, includeUnchangedNodes = false) {\n    if (this.active && !includeUnchangedNodes) {\n      this.depthFirstSearchChangedPath(this.pathRoot, callback);\n    } else {\n      this.depthFirstSearchEverything(this.pathRoot.rowNode, callback, traverseLeafNodes);\n    }\n  }\n  executeFromRootNode(callback) {\n    callback(this.pathRoot.rowNode);\n  }\n  createPathItems(rowNode) {\n    let pointer = rowNode;\n    let newEntryCount = 0;\n    while (!this.mapToItems[pointer.id]) {\n      const newEntry = {\n        rowNode: pointer,\n        children: null\n      };\n      this.mapToItems[pointer.id] = newEntry;\n      newEntryCount++;\n      pointer = pointer.parent;\n    }\n    return newEntryCount;\n  }\n  populateColumnsMap(rowNode, columns) {\n    if (!this.keepingColumns || !columns) {\n      return;\n    }\n    let pointer = rowNode;\n    while (pointer) {\n      if (!this.nodeIdsToColumns[pointer.id]) {\n        this.nodeIdsToColumns[pointer.id] = {};\n      }\n      columns.forEach(col => this.nodeIdsToColumns[pointer.id][col.getId()] = true);\n      pointer = pointer.parent;\n    }\n  }\n  linkPathItems(rowNode, newEntryCount) {\n    let pointer = rowNode;\n    for (let i = 0; i < newEntryCount; i++) {\n      const thisItem = this.mapToItems[pointer.id];\n      const parentItem = this.mapToItems[pointer.parent.id];\n      if (!parentItem.children) {\n        parentItem.children = [];\n      }\n      parentItem.children.push(thisItem);\n      pointer = pointer.parent;\n    }\n  }\n  // called by\n  // 1) change detection (provides cols) and\n  // 2) groupStage if doing transaction update (doesn't provide cols)\n  addParentNode(rowNode, columns) {\n    if (!rowNode || rowNode.isRowPinned()) {\n      return;\n    }\n    const newEntryCount = this.createPathItems(rowNode);\n    this.linkPathItems(rowNode, newEntryCount);\n    this.populateColumnsMap(rowNode, columns);\n  }\n  canSkip(rowNode) {\n    return this.active && !this.mapToItems[rowNode.id];\n  }\n  getValueColumnsForNode(rowNode, valueColumns) {\n    if (!this.keepingColumns) {\n      return valueColumns;\n    }\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    const result = valueColumns.filter(col => colsForThisNode[col.getId()]);\n    return result;\n  }\n  getNotValueColumnsForNode(rowNode, valueColumns) {\n    if (!this.keepingColumns) {\n      return null;\n    }\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    const result = valueColumns.filter(col => !colsForThisNode[col.getId()]);\n    return result;\n  }\n};\n\n// community-modules/core/src/selection/selectionService.ts\nvar SelectionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"selectionService\";\n    this.selectedNodes = /* @__PURE__ */new Map();\n    this.selectionCtx = new RowRangeSelectionContext();\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  postConstruct() {\n    this.selectionCtx.init(this.rowModel);\n    this.rowSelection = this.gos.get(\"rowSelection\");\n    this.groupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n    this.addManagedPropertyListeners([\"groupSelectsChildren\", \"rowSelection\"], () => {\n      this.groupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n      this.rowSelection = this.gos.get(\"rowSelection\");\n      this.deselectAllRowNodes({\n        source: \"api\"\n      });\n    });\n    this.addManagedEventListeners({\n      rowSelected: this.onRowSelected.bind(this)\n    });\n  }\n  destroy() {\n    super.destroy();\n    this.resetNodes();\n    this.selectionCtx.reset();\n  }\n  isMultiselect() {\n    return this.rowSelection === \"multiple\";\n  }\n  /**\n   * We override the selection value for UI-triggered events because it's the\n   * current selection state that should determine the next selection state. This\n   * is a stepping stone towards removing selection logic from event listeners and\n   * other code external to the selection service(s).\n   */\n  overrideSelectionValue(newValue, source) {\n    if (!isSelectionUIEvent(source)) {\n      return newValue;\n    }\n    const root = this.selectionCtx.getRoot();\n    return root ? root.isSelected() ?? false : true;\n  }\n  setNodesSelected(params) {\n    const {\n      newValue,\n      clearSelection,\n      suppressFinishActions,\n      rangeSelect,\n      nodes,\n      event,\n      source\n    } = params;\n    if (nodes.length === 0) return 0;\n    if (nodes.length > 1 && !this.isMultiselect()) {\n      _warnOnce(`cannot multi select while rowSelection='single'`);\n      return 0;\n    }\n    const groupSelectsFiltered = this.groupSelectsChildren && params.groupSelectsFiltered === true;\n    const filteredNodes = nodes.map(node => node.footer ? node.sibling : node);\n    if (rangeSelect) {\n      if (filteredNodes.length > 1) {\n        _warnOnce(\"cannot range select while selecting multiple rows\");\n        return 0;\n      }\n      const node = filteredNodes[0];\n      const newSelectionValue = this.overrideSelectionValue(newValue, source);\n      if (!this.isMultiselect()) {} else if (this.selectionCtx.isInRange(node)) {\n        const partition = this.selectionCtx.truncate(node);\n        if (newSelectionValue) {\n          this.selectRange(partition.discard, false, source);\n        }\n        return this.selectRange(partition.keep, newSelectionValue, source);\n      } else {\n        const fromNode = this.selectionCtx.getRoot();\n        const toNode = node;\n        if (fromNode !== toNode) {\n          const partition = this.selectionCtx.extend(node, this.groupSelectsChildren);\n          if (newSelectionValue) {\n            this.selectRange(partition.discard, false, source);\n          }\n          return this.selectRange(partition.keep, newSelectionValue, source);\n        }\n      }\n    }\n    if (!suppressFinishActions) {\n      this.selectionCtx.setRoot(filteredNodes[0]);\n    }\n    let updatedCount = 0;\n    for (let i = 0; i < filteredNodes.length; i++) {\n      const node = filteredNodes[i];\n      const skipThisNode = groupSelectsFiltered && node.group;\n      if (!skipThisNode) {\n        const thisNodeWasSelected = node.selectThisNode(newValue, event, source);\n        if (thisNodeWasSelected) {\n          updatedCount++;\n        }\n      }\n      if (this.groupSelectsChildren && node.childrenAfterGroup?.length) {\n        updatedCount += this.selectChildren(node, newValue, groupSelectsFiltered, source);\n      }\n    }\n    if (!suppressFinishActions) {\n      const clearOtherNodes = newValue && (clearSelection || !this.isMultiselect());\n      if (clearOtherNodes) {\n        updatedCount += this.clearOtherNodes(filteredNodes[0], source);\n      }\n      if (updatedCount > 0) {\n        this.updateGroupsFromChildrenSelections(source);\n        this.dispatchSelectionChanged(source);\n      }\n    }\n    return updatedCount;\n  }\n  // not to be mixed up with 'cell range selection' where you drag the mouse, this is row range selection, by\n  // holding down 'shift'.\n  selectRange(nodesToSelect, value, source) {\n    let updatedCount = 0;\n    nodesToSelect.forEach(rowNode => {\n      if (rowNode.group && this.groupSelectsChildren) {\n        return;\n      }\n      const nodeWasSelected = rowNode.selectThisNode(value, void 0, source);\n      if (nodeWasSelected) {\n        updatedCount++;\n      }\n    });\n    if (updatedCount > 0) {\n      this.updateGroupsFromChildrenSelections(source);\n      this.dispatchSelectionChanged(source);\n    }\n    return updatedCount;\n  }\n  selectChildren(node, newValue, groupSelectsFiltered, source) {\n    const children = groupSelectsFiltered ? node.childrenAfterAggFilter : node.childrenAfterGroup;\n    if (_missing(children)) {\n      return 0;\n    }\n    return this.setNodesSelected({\n      newValue,\n      clearSelection: false,\n      suppressFinishActions: true,\n      groupSelectsFiltered,\n      source,\n      nodes: children\n    });\n  }\n  getSelectedNodes() {\n    const selectedNodes = [];\n    this.selectedNodes.forEach(rowNode => {\n      if (rowNode) {\n        selectedNodes.push(rowNode);\n      }\n    });\n    return selectedNodes;\n  }\n  getSelectedRows() {\n    const selectedRows = [];\n    this.selectedNodes.forEach(rowNode => {\n      if (rowNode && rowNode.data) {\n        selectedRows.push(rowNode.data);\n      }\n    });\n    return selectedRows;\n  }\n  getSelectionCount() {\n    return this.selectedNodes.size;\n  }\n  /**\n   * This method is used by the CSRM to remove groups which are being disposed of,\n   * events do not need fired in this case\n   */\n  filterFromSelection(predicate) {\n    const newSelectedNodes = /* @__PURE__ */new Map();\n    this.selectedNodes.forEach((rowNode, key) => {\n      const passesPredicate = rowNode && predicate(rowNode);\n      if (passesPredicate) {\n        newSelectedNodes.set(key, rowNode);\n      }\n    });\n    this.selectedNodes = newSelectedNodes;\n  }\n  // should only be called if groupSelectsChildren=true\n  updateGroupsFromChildrenSelections(source, changedPath) {\n    if (!this.groupSelectsChildren) {\n      return false;\n    }\n    if (this.rowModel.getType() !== \"clientSide\") {\n      return false;\n    }\n    const clientSideRowModel = this.rowModel;\n    const rootNode = clientSideRowModel.getRootNode();\n    if (!changedPath) {\n      changedPath = new ChangedPath(true, rootNode);\n      changedPath.setInactive();\n    }\n    let selectionChanged = false;\n    changedPath.forEachChangedNodeDepthFirst(rowNode => {\n      if (rowNode !== rootNode) {\n        const selected = rowNode.calculateSelectedFromChildren();\n        selectionChanged = rowNode.selectThisNode(selected === null ? false : selected, void 0, source) || selectionChanged;\n      }\n    });\n    return selectionChanged;\n  }\n  clearOtherNodes(rowNodeToKeepSelected, source) {\n    const groupsToRefresh = /* @__PURE__ */new Map();\n    let updatedCount = 0;\n    this.selectedNodes.forEach(otherRowNode => {\n      if (otherRowNode && otherRowNode.id !== rowNodeToKeepSelected.id) {\n        const rowNode = this.selectedNodes.get(otherRowNode.id);\n        updatedCount += rowNode.setSelectedParams({\n          newValue: false,\n          clearSelection: false,\n          suppressFinishActions: true,\n          source\n        });\n        if (this.groupSelectsChildren && otherRowNode.parent) {\n          groupsToRefresh.set(otherRowNode.parent.id, otherRowNode.parent);\n        }\n      }\n    });\n    groupsToRefresh.forEach(group => {\n      const selected = group.calculateSelectedFromChildren();\n      group.selectThisNode(selected === null ? false : selected, void 0, source);\n    });\n    return updatedCount;\n  }\n  onRowSelected(event) {\n    const rowNode = event.node;\n    if (this.groupSelectsChildren && rowNode.group) {\n      return;\n    }\n    if (rowNode.isSelected()) {\n      this.selectedNodes.set(rowNode.id, rowNode);\n    } else {\n      this.selectedNodes.delete(rowNode.id);\n    }\n  }\n  syncInRowNode(rowNode, oldNode) {\n    this.syncInOldRowNode(rowNode, oldNode);\n    this.syncInNewRowNode(rowNode);\n  }\n  // if the id has changed for the node, then this means the rowNode\n  // is getting used for a different data item, which breaks\n  // our selectedNodes, as the node now is mapped by the old id\n  // which is inconsistent. so to keep the old node as selected,\n  // we swap in the clone (with the old id and old data). this means\n  // the oldNode is effectively a daemon we keep a reference to,\n  // so if client calls api.getSelectedNodes(), it gets the daemon\n  // in the result. when the client un-selects, the reference to the\n  // daemon is removed. the daemon, because it's an oldNode, is not\n  // used by the grid for rendering, it's a copy of what the node used\n  // to be like before the id was changed.\n  syncInOldRowNode(rowNode, oldNode) {\n    const oldNodeHasDifferentId = _exists(oldNode) && rowNode.id !== oldNode.id;\n    if (oldNodeHasDifferentId && oldNode) {\n      const id = oldNode.id;\n      const oldNodeSelected = this.selectedNodes.get(id) == rowNode;\n      if (oldNodeSelected) {\n        this.selectedNodes.set(oldNode.id, oldNode);\n      }\n    }\n  }\n  syncInNewRowNode(rowNode) {\n    if (this.selectedNodes.has(rowNode.id)) {\n      rowNode.setSelectedInitialValue(true);\n      this.selectedNodes.set(rowNode.id, rowNode);\n    } else {\n      rowNode.setSelectedInitialValue(false);\n    }\n  }\n  reset(source) {\n    const selectionCount = this.getSelectionCount();\n    this.resetNodes();\n    if (selectionCount) {\n      this.dispatchSelectionChanged(source);\n    }\n  }\n  resetNodes() {\n    this.selectedNodes?.clear();\n  }\n  // returns a list of all nodes at 'best cost' - a feature to be used\n  // with groups / trees. if a group has all it's children selected,\n  // then the group appears in the result, but not the children.\n  // Designed for use with 'children' as the group selection type,\n  // where groups don't actually appear in the selection normally.\n  getBestCostNodeSelection() {\n    if (this.rowModel.getType() !== \"clientSide\") {\n      return;\n    }\n    const clientSideRowModel = this.rowModel;\n    const topLevelNodes = clientSideRowModel.getTopLevelNodes();\n    if (topLevelNodes === null) {\n      return;\n    }\n    const result = [];\n    function traverse(nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        const node = nodes[i];\n        if (node.isSelected()) {\n          result.push(node);\n        } else {\n          const maybeGroup = node;\n          if (maybeGroup.group && maybeGroup.children) {\n            traverse(maybeGroup.children);\n          }\n        }\n      }\n    }\n    traverse(topLevelNodes);\n    return result;\n  }\n  isEmpty() {\n    let count = 0;\n    this.selectedNodes.forEach(rowNode => {\n      if (rowNode) {\n        count++;\n      }\n    });\n    return count === 0;\n  }\n  deselectAllRowNodes(params) {\n    const callback = rowNode => rowNode.selectThisNode(false, void 0, source);\n    const rowModelClientSide = this.rowModel.getType() === \"clientSide\";\n    const {\n      source,\n      justFiltered,\n      justCurrentPage\n    } = params;\n    if (justCurrentPage || justFiltered) {\n      if (!rowModelClientSide) {\n        _errorOnce(\"selecting just filtered only works when gridOptions.rowModelType='clientSide'\");\n        return;\n      }\n      this.getNodesToSelect(justFiltered, justCurrentPage).forEach(callback);\n    } else {\n      this.selectedNodes.forEach(rowNode => {\n        if (rowNode) {\n          callback(rowNode);\n        }\n      });\n      this.reset(source);\n    }\n    this.selectionCtx.reset();\n    if (rowModelClientSide && this.groupSelectsChildren) {\n      this.updateGroupsFromChildrenSelections(source);\n    }\n    this.dispatchSelectionChanged(source);\n  }\n  getSelectedCounts(justFiltered, justCurrentPage) {\n    let selectedCount = 0;\n    let notSelectedCount = 0;\n    const callback = node => {\n      if (this.groupSelectsChildren && node.group) {\n        return;\n      }\n      if (node.isSelected()) {\n        selectedCount++;\n      } else if (!node.selectable) {} else {\n        notSelectedCount++;\n      }\n    };\n    this.getNodesToSelect(justFiltered, justCurrentPage).forEach(callback);\n    return {\n      selectedCount,\n      notSelectedCount\n    };\n  }\n  getSelectAllState(justFiltered, justCurrentPage) {\n    const {\n      selectedCount,\n      notSelectedCount\n    } = this.getSelectedCounts(justFiltered, justCurrentPage);\n    if (selectedCount === 0 && notSelectedCount === 0) {\n      return false;\n    }\n    if (selectedCount > 0 && notSelectedCount > 0) {\n      return null;\n    }\n    return selectedCount > 0;\n  }\n  hasNodesToSelect(justFiltered = false, justCurrentPage = false) {\n    return this.getNodesToSelect(justFiltered, justCurrentPage).filter(node => node.selectable).length > 0;\n  }\n  /**\n   * @param justFiltered whether to just include nodes which have passed the filter\n   * @param justCurrentPage whether to just include nodes on the current page\n   * @returns all nodes including unselectable nodes which are the target of this selection attempt\n   */\n  getNodesToSelect(justFiltered = false, justCurrentPage = false) {\n    if (this.rowModel.getType() !== \"clientSide\") {\n      throw new Error(`selectAll only available when rowModelType='clientSide', ie not ${this.rowModel.getType()}`);\n    }\n    const nodes = [];\n    if (justCurrentPage) {\n      this.forEachNodeOnPage(node => {\n        if (!node.group) {\n          nodes.push(node);\n          return;\n        }\n        if (!node.expanded) {\n          const recursivelyAddChildren = child => {\n            nodes.push(child);\n            if (child.childrenAfterFilter?.length) {\n              child.childrenAfterFilter.forEach(recursivelyAddChildren);\n            }\n          };\n          recursivelyAddChildren(node);\n          return;\n        }\n        if (!this.groupSelectsChildren) {\n          nodes.push(node);\n        }\n      });\n      return nodes;\n    }\n    const clientSideRowModel = this.rowModel;\n    if (justFiltered) {\n      clientSideRowModel.forEachNodeAfterFilter(node => {\n        nodes.push(node);\n      });\n      return nodes;\n    }\n    clientSideRowModel.forEachNode(node => {\n      nodes.push(node);\n    });\n    return nodes;\n  }\n  forEachNodeOnPage(callback) {\n    const firstRow = this.pageBoundsService.getFirstRow();\n    const lastRow = this.pageBoundsService.getLastRow();\n    for (let i = firstRow; i <= lastRow; i++) {\n      const node = this.rowModel.getRow(i);\n      if (node) {\n        callback(node);\n      }\n    }\n  }\n  selectAllRowNodes(params) {\n    if (this.rowModel.getType() !== \"clientSide\") {\n      throw new Error(`selectAll only available when rowModelType='clientSide', ie not ${this.rowModel.getType()}`);\n    }\n    const {\n      source,\n      justFiltered,\n      justCurrentPage\n    } = params;\n    const nodes = this.getNodesToSelect(justFiltered, justCurrentPage);\n    nodes.forEach(rowNode => rowNode.selectThisNode(true, void 0, source));\n    this.selectionCtx.setRoot(nodes[0] ?? null);\n    this.selectionCtx.setEndRange(_last(nodes) ?? null);\n    if (this.rowModel.getType() === \"clientSide\" && this.groupSelectsChildren) {\n      this.updateGroupsFromChildrenSelections(source);\n    }\n    this.dispatchSelectionChanged(source);\n  }\n  getSelectionState() {\n    const selectedIds = [];\n    this.selectedNodes.forEach(node => {\n      if (node?.id) {\n        selectedIds.push(node.id);\n      }\n    });\n    return selectedIds.length ? selectedIds : null;\n  }\n  setSelectionState(state, source) {\n    if (!Array.isArray(state)) {\n      return;\n    }\n    const rowIds = new Set(state);\n    const nodes = [];\n    this.rowModel.forEachNode(node => {\n      if (rowIds.has(node.id)) {\n        nodes.push(node);\n      }\n    });\n    this.setNodesSelected({\n      newValue: true,\n      nodes,\n      source\n    });\n  }\n  dispatchSelectionChanged(source) {\n    const event = {\n      type: \"selectionChanged\",\n      source\n    };\n    this.eventService.dispatchEvent(event);\n  }\n};\n\n// community-modules/core/src/rowNodes/selectableService.ts\nvar SelectableService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"selectableService\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.selectionService = beans.selectionService;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"isRowSelectable\", () => this.updateSelectable());\n  }\n  /**\n   * Used by CSRM only, to update selectable state after group state changes.\n   */\n  updateSelectableAfterGrouping() {\n    this.updateSelectable(true);\n  }\n  updateSelectable(skipLeafNodes = false) {\n    const isRowSelecting = !!this.gos.get(\"rowSelection\");\n    const isRowSelectable = this.gos.get(\"isRowSelectable\");\n    if (!isRowSelecting || !isRowSelectable) {\n      return;\n    }\n    const isGroupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n    const isCsrmGroupSelectsChildren = this.rowModel.getType() === \"clientSide\" && isGroupSelectsChildren;\n    const nodesToDeselect = [];\n    const nodeCallback = node => {\n      if (skipLeafNodes && !node.group) {\n        return;\n      }\n      if (isCsrmGroupSelectsChildren && node.group) {\n        const hasSelectableChild = node.childrenAfterGroup.some(rowNode => rowNode.selectable === true);\n        node.setRowSelectable(hasSelectableChild, true);\n        return;\n      }\n      const rowSelectable = isRowSelectable ? isRowSelectable(node) : true;\n      node.setRowSelectable(rowSelectable, true);\n      if (!rowSelectable && node.isSelected()) {\n        nodesToDeselect.push(node);\n      }\n    };\n    if (isCsrmGroupSelectsChildren) {\n      const csrm = this.rowModel;\n      const changedPath = new ChangedPath(false, csrm.getRootNode());\n      changedPath.forEachChangedNodeDepthFirst(nodeCallback, true, true);\n    } else {\n      this.rowModel.forEachNode(nodeCallback);\n    }\n    if (nodesToDeselect.length) {\n      this.selectionService.setNodesSelected({\n        nodes: nodesToDeselect,\n        newValue: false,\n        source: \"selectableChanged\"\n      });\n    }\n    if (isCsrmGroupSelectsChildren && this.selectionService instanceof SelectionService) {\n      this.selectionService.updateGroupsFromChildrenSelections(\"selectableChanged\");\n    }\n  }\n};\n\n// community-modules/core/src/sortController.ts\nvar DEFAULT_SORTING_ORDER = [\"asc\", \"desc\", null];\nvar SortController = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"sortController\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.funcColsService = beans.funcColsService;\n    this.showRowGroupColsService = beans.showRowGroupColsService;\n  }\n  progressSort(column, multiSort, source) {\n    const nextDirection = this.getNextSortDirection(column);\n    this.setSortForColumn(column, nextDirection, multiSort, source);\n  }\n  setSortForColumn(column, sort, multiSort, source) {\n    if (sort !== \"asc\" && sort !== \"desc\") {\n      sort = null;\n    }\n    const isColumnsSortingCoupledToGroup = this.gos.isColumnsSortingCoupledToGroup();\n    let columnsToUpdate = [column];\n    if (isColumnsSortingCoupledToGroup) {\n      if (column.getColDef().showRowGroup) {\n        const rowGroupColumns = this.funcColsService.getSourceColumnsForGroupColumn(column);\n        const sortableRowGroupColumns = rowGroupColumns?.filter(col => col.isSortable());\n        if (sortableRowGroupColumns) {\n          columnsToUpdate = [column, ...sortableRowGroupColumns];\n        }\n      }\n    }\n    columnsToUpdate.forEach(col => col.setSort(sort, source));\n    const doingMultiSort = (multiSort || this.gos.get(\"alwaysMultiSort\")) && !this.gos.get(\"suppressMultiSort\");\n    const updatedColumns = [];\n    if (!doingMultiSort) {\n      const clearedColumns = this.clearSortBarTheseColumns(columnsToUpdate, source);\n      updatedColumns.push(...clearedColumns);\n    }\n    this.updateSortIndex(column);\n    updatedColumns.push(...columnsToUpdate);\n    this.dispatchSortChangedEvents(source, updatedColumns);\n  }\n  updateSortIndex(lastColToChange) {\n    const isCoupled = this.gos.isColumnsSortingCoupledToGroup();\n    const groupParent = this.showRowGroupColsService?.getShowRowGroupCol(lastColToChange.getId());\n    const lastSortIndexCol = isCoupled ? groupParent || lastColToChange : lastColToChange;\n    const allSortedCols = this.getColumnsWithSortingOrdered();\n    this.columnModel.getAllCols().forEach(col => col.setSortIndex(null));\n    const allSortedColsWithoutChangesOrGroups = allSortedCols.filter(col => {\n      if (isCoupled && col.getColDef().showRowGroup) {\n        return false;\n      }\n      return col !== lastSortIndexCol;\n    });\n    const sortedColsWithIndices = lastSortIndexCol.getSort() ? [...allSortedColsWithoutChangesOrGroups, lastSortIndexCol] : allSortedColsWithoutChangesOrGroups;\n    sortedColsWithIndices.forEach((col, idx) => {\n      col.setSortIndex(idx);\n    });\n  }\n  // gets called by API, so if data changes, use can call this, which will end up\n  // working out the sort order again of the rows.\n  onSortChanged(source, columns) {\n    this.dispatchSortChangedEvents(source, columns);\n  }\n  isSortActive() {\n    const allCols = this.columnModel.getAllCols();\n    const sortedCols = allCols.filter(column => !!column.getSort());\n    return sortedCols && sortedCols.length > 0;\n  }\n  dispatchSortChangedEvents(source, columns) {\n    const event = {\n      type: \"sortChanged\",\n      source\n    };\n    if (columns) {\n      event.columns = columns;\n    }\n    this.eventService.dispatchEvent(event);\n  }\n  clearSortBarTheseColumns(columnsToSkip, source) {\n    const clearedColumns = [];\n    this.columnModel.getAllCols().forEach(columnToClear => {\n      if (!columnsToSkip.includes(columnToClear)) {\n        if (columnToClear.getSort()) {\n          clearedColumns.push(columnToClear);\n        }\n        columnToClear.setSort(void 0, source);\n      }\n    });\n    return clearedColumns;\n  }\n  getNextSortDirection(column) {\n    let sortingOrder;\n    if (column.getColDef().sortingOrder) {\n      sortingOrder = column.getColDef().sortingOrder;\n    } else if (this.gos.get(\"sortingOrder\")) {\n      sortingOrder = this.gos.get(\"sortingOrder\");\n    } else {\n      sortingOrder = DEFAULT_SORTING_ORDER;\n    }\n    if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\n      _warnOnce(`sortingOrder must be an array with at least one element, currently it's ${sortingOrder}`);\n      return null;\n    }\n    const currentIndex = sortingOrder.indexOf(column.getSort());\n    const notInArray = currentIndex < 0;\n    const lastItemInArray = currentIndex == sortingOrder.length - 1;\n    let result;\n    if (notInArray || lastItemInArray) {\n      result = sortingOrder[0];\n    } else {\n      result = sortingOrder[currentIndex + 1];\n    }\n    if (DEFAULT_SORTING_ORDER.indexOf(result) < 0) {\n      _warnOnce(\"invalid sort type \", result);\n      return null;\n    }\n    return result;\n  }\n  /**\n   * @returns a map of sort indexes for every sorted column, if groups sort primaries then they will have equivalent indices\n   */\n  getIndexedSortMap() {\n    let allSortedCols = this.columnModel.getAllCols().filter(col => !!col.getSort());\n    if (this.columnModel.isPivotMode()) {\n      const isSortingLinked = this.gos.isColumnsSortingCoupledToGroup();\n      allSortedCols = allSortedCols.filter(col => {\n        const isAggregated = !!col.getAggFunc();\n        const isSecondary = !col.isPrimary();\n        const isGroup = isSortingLinked ? this.showRowGroupColsService?.getShowRowGroupCol(col.getId()) : col.getColDef().showRowGroup;\n        return isAggregated || isSecondary || isGroup;\n      });\n    }\n    const sortedRowGroupCols = this.funcColsService.getRowGroupColumns().filter(col => !!col.getSort());\n    const allColsIndexes = {};\n    allSortedCols.forEach((col, index) => allColsIndexes[col.getId()] = index);\n    allSortedCols.sort((a, b) => {\n      const iA = a.getSortIndex();\n      const iB = b.getSortIndex();\n      if (iA != null && iB != null) {\n        return iA - iB;\n      } else if (iA == null && iB == null) {\n        const posA = allColsIndexes[a.getId()];\n        const posB = allColsIndexes[b.getId()];\n        return posA > posB ? 1 : -1;\n      } else if (iB == null) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    const isSortLinked = this.gos.isColumnsSortingCoupledToGroup() && !!sortedRowGroupCols.length;\n    if (isSortLinked) {\n      allSortedCols = [...new Set(\n      // if linked sorting, replace all columns with the display group column for index purposes, and ensure uniqueness\n      allSortedCols.map(col => this.showRowGroupColsService?.getShowRowGroupCol(col.getId()) ?? col))];\n    }\n    const indexMap = /* @__PURE__ */new Map();\n    allSortedCols.forEach((col, idx) => indexMap.set(col, idx));\n    if (isSortLinked) {\n      sortedRowGroupCols.forEach(col => {\n        const groupDisplayCol = this.showRowGroupColsService.getShowRowGroupCol(col.getId());\n        indexMap.set(col, indexMap.get(groupDisplayCol));\n      });\n    }\n    return indexMap;\n  }\n  getColumnsWithSortingOrdered() {\n    return [...this.getIndexedSortMap().entries()].sort(([col1, idx1], [col2, idx2]) => idx1 - idx2).map(([col]) => col);\n  }\n  // used by server side row models, to sent sort to server\n  getSortModel() {\n    return this.getColumnsWithSortingOrdered().filter(column => column.getSort()).map(column => ({\n      sort: column.getSort(),\n      colId: column.getId()\n    }));\n  }\n  getSortOptions() {\n    return this.getColumnsWithSortingOrdered().filter(column => column.getSort()).map(column => ({\n      sort: column.getSort(),\n      column\n    }));\n  }\n  canColumnDisplayMixedSort(column) {\n    const isColumnSortCouplingActive = this.gos.isColumnsSortingCoupledToGroup();\n    const isGroupDisplayColumn = !!column.getColDef().showRowGroup;\n    return isColumnSortCouplingActive && isGroupDisplayColumn;\n  }\n  getDisplaySortForColumn(column) {\n    const linkedColumns = this.funcColsService.getSourceColumnsForGroupColumn(column);\n    if (!this.canColumnDisplayMixedSort(column) || !linkedColumns?.length) {\n      return column.getSort();\n    }\n    const columnHasUniqueData = column.getColDef().field != null || !!column.getColDef().valueGetter;\n    const sortableColumns = columnHasUniqueData ? [column, ...linkedColumns] : linkedColumns;\n    const firstSort = sortableColumns[0].getSort();\n    const allMatch = sortableColumns.every(col => col.getSort() == firstSort);\n    if (!allMatch) {\n      return \"mixed\";\n    }\n    return firstSort;\n  }\n  getDisplaySortIndexForColumn(column) {\n    return this.getIndexedSortMap().get(column);\n  }\n};\n\n// community-modules/core/src/syncService.ts\nvar SyncService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"syncService\";\n    this.waitingForColumns = false;\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.columnModel = beans.columnModel;\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"columnDefs\", event => this.setColumnDefs(event));\n  }\n  start() {\n    this.ctrlsService.whenReady(() => {\n      const columnDefs = this.gos.get(\"columnDefs\");\n      if (columnDefs) {\n        this.setColumnsAndData(columnDefs);\n      } else {\n        this.waitingForColumns = true;\n      }\n      this.gridReady();\n    });\n  }\n  setColumnsAndData(columnDefs) {\n    this.columnModel.setColumnDefs(columnDefs ?? [], \"gridInitializing\");\n    this.rowModel.start();\n  }\n  gridReady() {\n    this.dispatchGridReadyEvent();\n    const isEnterprise = ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/core\" /* EnterpriseCoreModule */, this.gridId);\n    if (this.gos.get(\"debug\")) {\n      _log(`initialised successfully, enterprise = ${isEnterprise}`);\n    }\n  }\n  dispatchGridReadyEvent() {\n    const readyEvent = {\n      type: \"gridReady\"\n    };\n    this.eventService.dispatchEvent(readyEvent);\n  }\n  setColumnDefs(event) {\n    const columnDefs = this.gos.get(\"columnDefs\");\n    if (!columnDefs) {\n      return;\n    }\n    if (this.waitingForColumns) {\n      this.waitingForColumns = false;\n      this.setColumnsAndData(columnDefs);\n      return;\n    }\n    this.columnModel.setColumnDefs(columnDefs, convertSourceType(event.source));\n  }\n};\n\n// community-modules/core/src/valueService/changeDetectionService.ts\nvar SOURCE_PASTE = \"paste\";\nvar ChangeDetectionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"changeDetectionService\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.rowRenderer = beans.rowRenderer;\n  }\n  postConstruct() {\n    if (this.rowModel.getType() === \"clientSide\") {\n      this.clientSideRowModel = this.rowModel;\n    }\n    this.addManagedEventListeners({\n      cellValueChanged: this.onCellValueChanged.bind(this)\n    });\n  }\n  onCellValueChanged(event) {\n    if (event.source === SOURCE_PASTE) {\n      return;\n    }\n    this.doChangeDetection(event.node, event.column);\n  }\n  doChangeDetection(rowNode, column) {\n    if (this.gos.get(\"suppressChangeDetection\")) {\n      return;\n    }\n    const nodesToRefresh = [rowNode];\n    if (this.clientSideRowModel && !rowNode.isRowPinned()) {\n      const onlyChangedColumns = this.gos.get(\"aggregateOnlyChangedColumns\");\n      const changedPath = new ChangedPath(onlyChangedColumns, this.clientSideRowModel.getRootNode());\n      changedPath.addParentNode(rowNode.parent, [column]);\n      this.clientSideRowModel.doAggregate(changedPath);\n      changedPath.forEachChangedNodeDepthFirst(rowNode2 => {\n        nodesToRefresh.push(rowNode2);\n      });\n    }\n    this.rowRenderer.refreshCells({\n      rowNodes: nodesToRefresh\n    });\n  }\n};\n\n// community-modules/core/src/valueService/expressionService.ts\nvar ExpressionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"expressionService\";\n    this.expressionToFunctionCache = {};\n  }\n  evaluate(expression, params) {\n    if (typeof expression === \"string\") {\n      return this.evaluateExpression(expression, params);\n    } else {\n      _errorOnce(\"value should be either a string or a function\", expression);\n    }\n  }\n  evaluateExpression(expression, params) {\n    try {\n      const javaScriptFunction = this.createExpressionFunction(expression);\n      const result = javaScriptFunction(params.value, params.context, params.oldValue, params.newValue, params.value, params.node, params.data, params.colDef, params.rowIndex, params.api, params.getValue, params.column, params.columnGroup);\n      return result;\n    } catch (e) {\n      _log(\"Processing of the expression failed\");\n      _log(\"Expression = \", expression);\n      _log(\"Params = \", params);\n      _log(\"Exception = \", e);\n      return null;\n    }\n  }\n  createExpressionFunction(expression) {\n    if (this.expressionToFunctionCache[expression]) {\n      return this.expressionToFunctionCache[expression];\n    }\n    const functionBody = this.createFunctionBody(expression);\n    const theFunction = new Function(\"x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, getValue, column, columnGroup\", functionBody);\n    this.expressionToFunctionCache[expression] = theFunction;\n    return theFunction;\n  }\n  createFunctionBody(expression) {\n    if (expression.indexOf(\"return\") >= 0) {\n      return expression;\n    } else {\n      return \"return \" + expression + \";\";\n    }\n  }\n};\n\n// community-modules/core/src/valueService/valueCache.ts\nvar ValueCache = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"valueCache\";\n    this.cacheVersion = 0;\n  }\n  postConstruct() {\n    this.active = this.gos.get(\"valueCache\");\n    this.neverExpires = this.gos.get(\"valueCacheNeverExpires\");\n  }\n  onDataChanged() {\n    if (this.neverExpires) {\n      return;\n    }\n    this.expire();\n  }\n  expire() {\n    this.cacheVersion++;\n  }\n  setValue(rowNode, colId, value) {\n    if (this.active) {\n      if (rowNode.__cacheVersion !== this.cacheVersion) {\n        rowNode.__cacheVersion = this.cacheVersion;\n        rowNode.__cacheData = {};\n      }\n      rowNode.__cacheData[colId] = value;\n    }\n  }\n  getValue(rowNode, colId) {\n    if (!this.active || rowNode.__cacheVersion !== this.cacheVersion) {\n      return void 0;\n    }\n    return rowNode.__cacheData[colId];\n  }\n};\n\n// community-modules/core/src/valueService/valueService.ts\nvar ValueService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"valueService\";\n    this.initialised = false;\n    this.isSsrm = false;\n  }\n  wireBeans(beans) {\n    this.expressionService = beans.expressionService;\n    this.columnModel = beans.columnModel;\n    this.valueCache = beans.valueCache;\n    this.dataTypeService = beans.dataTypeService;\n  }\n  postConstruct() {\n    if (!this.initialised) {\n      this.init();\n    }\n  }\n  init() {\n    this.isSsrm = this.gos.isRowModelType(\"serverSide\");\n    this.cellExpressions = this.gos.get(\"enableCellExpressions\");\n    this.isTreeData = this.gos.get(\"treeData\");\n    this.initialised = true;\n    const listener = event => this.callColumnCellValueChangedHandler(event);\n    const async = this.gos.useAsyncEvents();\n    this.eventService.addEventListener(\"cellValueChanged\", listener, async);\n    this.addDestroyFunc(() => this.eventService.removeEventListener(\"cellValueChanged\", listener, async));\n    this.addManagedPropertyListener(\"treeData\", propChange => this.isTreeData = propChange.currentValue);\n  }\n  getValue(column, rowNode, forFilter = false, ignoreAggData = false) {\n    if (!this.initialised) {\n      this.init();\n    }\n    if (!rowNode) {\n      return;\n    }\n    const colDef = column.getColDef();\n    const field = colDef.field;\n    const colId = column.getColId();\n    const data = rowNode.data;\n    let result;\n    const groupDataExists = rowNode.groupData && rowNode.groupData[colId] !== void 0;\n    const aggDataExists = !ignoreAggData && rowNode.aggData && rowNode.aggData[colId] !== void 0;\n    const ignoreSsrmAggData = this.isSsrm && ignoreAggData && !!column.getColDef().aggFunc;\n    const ssrmFooterGroupCol = this.isSsrm && rowNode.footer && rowNode.field && (column.getColDef().showRowGroup === true || column.getColDef().showRowGroup === rowNode.field);\n    if (forFilter && colDef.filterValueGetter) {\n      result = this.executeFilterValueGetter(colDef.filterValueGetter, data, column, rowNode);\n    } else if (this.isTreeData && aggDataExists) {\n      result = rowNode.aggData[colId];\n    } else if (this.isTreeData && colDef.valueGetter) {\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n    } else if (this.isTreeData && field && data) {\n      result = _getValueUsingField(data, field, column.isFieldContainsDots());\n    } else if (groupDataExists) {\n      result = rowNode.groupData[colId];\n    } else if (aggDataExists) {\n      result = rowNode.aggData[colId];\n    } else if (colDef.valueGetter) {\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n    } else if (ssrmFooterGroupCol) {\n      result = _getValueUsingField(data, rowNode.field, column.isFieldContainsDots());\n    } else if (field && data && !ignoreSsrmAggData) {\n      result = _getValueUsingField(data, field, column.isFieldContainsDots());\n    }\n    if (this.cellExpressions && typeof result === \"string\" && result.indexOf(\"=\") === 0) {\n      const cellValueGetter = result.substring(1);\n      result = this.executeValueGetter(cellValueGetter, data, column, rowNode);\n    }\n    if (result == null) {\n      const openedGroup = this.getOpenedGroup(rowNode, column);\n      if (openedGroup != null) {\n        return openedGroup;\n      }\n    }\n    return result;\n  }\n  parseValue(column, rowNode, newValue, oldValue) {\n    const colDef = column.getColDef();\n    const params = this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode?.data,\n      oldValue,\n      newValue,\n      colDef,\n      column\n    });\n    const valueParser = colDef.valueParser;\n    if (_exists(valueParser)) {\n      if (typeof valueParser === \"function\") {\n        return valueParser(params);\n      }\n      return this.expressionService.evaluate(valueParser, params);\n    }\n    return newValue;\n  }\n  formatValue(column, node, value, suppliedFormatter, useFormatterFromColumn = true) {\n    let result = null;\n    let formatter;\n    const colDef = column.getColDef();\n    if (suppliedFormatter) {\n      formatter = suppliedFormatter;\n    } else if (useFormatterFromColumn) {\n      formatter = colDef.valueFormatter;\n    }\n    if (formatter) {\n      const params = this.gos.addGridCommonParams({\n        value,\n        node,\n        data: node ? node.data : null,\n        colDef,\n        column\n      });\n      if (typeof formatter === \"function\") {\n        result = formatter(params);\n      } else {\n        result = this.expressionService.evaluate(formatter, params);\n      }\n    } else if (colDef.refData) {\n      return colDef.refData[value] || \"\";\n    }\n    if (result == null && Array.isArray(value)) {\n      result = value.join(\", \");\n    }\n    return result;\n  }\n  getOpenedGroup(rowNode, column) {\n    if (!this.gos.get(\"showOpenedGroup\")) {\n      return;\n    }\n    const colDef = column.getColDef();\n    if (!colDef.showRowGroup) {\n      return;\n    }\n    const showRowGroup = column.getColDef().showRowGroup;\n    let pointer = rowNode.parent;\n    while (pointer != null) {\n      if (pointer.rowGroupColumn && (showRowGroup === true || showRowGroup === pointer.rowGroupColumn.getColId())) {\n        return pointer.key;\n      }\n      pointer = pointer.parent;\n    }\n    return void 0;\n  }\n  /**\n   * Sets the value of a GridCell\n   * @param rowNode The `RowNode` to be updated\n   * @param colKey The `Column` to be updated\n   * @param newValue The new value to be set\n   * @param eventSource The event source\n   * @returns `True` if the value has been updated, otherwise`False`.\n   */\n  setValue(rowNode, colKey, newValue, eventSource) {\n    const column = this.columnModel.getColDefCol(colKey);\n    if (!rowNode || !column) {\n      return false;\n    }\n    if (_missing(rowNode.data)) {\n      rowNode.data = {};\n    }\n    const {\n      field,\n      valueSetter\n    } = column.getColDef();\n    if (_missing(field) && _missing(valueSetter)) {\n      _warnOnce(`you need either field or valueSetter set on colDef for editing to work`);\n      return false;\n    }\n    if (this.dataTypeService && !this.dataTypeService.checkType(column, newValue)) {\n      _warnOnce(`Data type of the new value does not match the cell data type of the column`);\n      return false;\n    }\n    const params = this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode.data,\n      oldValue: this.getValue(column, rowNode),\n      newValue,\n      colDef: column.getColDef(),\n      column\n    });\n    params.newValue = newValue;\n    let valueWasDifferent;\n    if (_exists(valueSetter)) {\n      if (typeof valueSetter === \"function\") {\n        valueWasDifferent = valueSetter(params);\n      } else {\n        valueWasDifferent = this.expressionService.evaluate(valueSetter, params);\n      }\n    } else {\n      valueWasDifferent = this.setValueUsingField(rowNode.data, field, newValue, column.isFieldContainsDots());\n    }\n    if (valueWasDifferent === void 0) {\n      valueWasDifferent = true;\n    }\n    if (!valueWasDifferent) {\n      return false;\n    }\n    rowNode.resetQuickFilterAggregateText();\n    this.valueCache.onDataChanged();\n    params.newValue = this.getValue(column, rowNode);\n    const event = {\n      type: \"cellValueChanged\",\n      event: null,\n      rowIndex: rowNode.rowIndex,\n      rowPinned: rowNode.rowPinned,\n      column: params.column,\n      api: params.api,\n      colDef: params.colDef,\n      context: params.context,\n      data: rowNode.data,\n      node: rowNode,\n      oldValue: params.oldValue,\n      newValue: params.newValue,\n      value: params.newValue,\n      source: eventSource\n    };\n    this.eventService.dispatchEvent(event);\n    return true;\n  }\n  callColumnCellValueChangedHandler(event) {\n    const onCellValueChanged = event.colDef.onCellValueChanged;\n    if (typeof onCellValueChanged === \"function\") {\n      this.getFrameworkOverrides().wrapOutgoing(() => {\n        onCellValueChanged({\n          node: event.node,\n          data: event.data,\n          oldValue: event.oldValue,\n          newValue: event.newValue,\n          colDef: event.colDef,\n          column: event.column,\n          api: event.api,\n          context: event.context\n        });\n      });\n    }\n  }\n  setValueUsingField(data, field, newValue, isFieldContainsDots) {\n    if (!field) {\n      return false;\n    }\n    let valuesAreSame = false;\n    if (!isFieldContainsDots) {\n      valuesAreSame = data[field] === newValue;\n      if (!valuesAreSame) {\n        data[field] = newValue;\n      }\n    } else {\n      const fieldPieces = field.split(\".\");\n      let currentObject = data;\n      while (fieldPieces.length > 0 && currentObject) {\n        const fieldPiece = fieldPieces.shift();\n        if (fieldPieces.length === 0) {\n          valuesAreSame = currentObject[fieldPiece] === newValue;\n          if (!valuesAreSame) {\n            currentObject[fieldPiece] = newValue;\n          }\n        } else {\n          currentObject = currentObject[fieldPiece];\n        }\n      }\n    }\n    return !valuesAreSame;\n  }\n  executeFilterValueGetter(valueGetter, data, column, rowNode) {\n    const params = this.gos.addGridCommonParams({\n      data,\n      node: rowNode,\n      column,\n      colDef: column.getColDef(),\n      getValue: this.getValueCallback.bind(this, rowNode)\n    });\n    if (typeof valueGetter === \"function\") {\n      return valueGetter(params);\n    }\n    return this.expressionService.evaluate(valueGetter, params);\n  }\n  executeValueGetter(valueGetter, data, column, rowNode) {\n    const colId = column.getColId();\n    const valueFromCache = this.valueCache.getValue(rowNode, colId);\n    if (valueFromCache !== void 0) {\n      return valueFromCache;\n    }\n    const params = this.gos.addGridCommonParams({\n      data,\n      node: rowNode,\n      column,\n      colDef: column.getColDef(),\n      getValue: this.getValueCallback.bind(this, rowNode)\n    });\n    let result;\n    if (typeof valueGetter === \"function\") {\n      result = valueGetter(params);\n    } else {\n      result = this.expressionService.evaluate(valueGetter, params);\n    }\n    this.valueCache.setValue(rowNode, colId, result);\n    return result;\n  }\n  getValueCallback(node, field) {\n    const otherColumn = this.columnModel.getColDefCol(field);\n    if (otherColumn) {\n      return this.getValue(otherColumn, node);\n    }\n    return null;\n  }\n  // used by row grouping and pivot, to get key for a row. col can be a pivot col or a row grouping col\n  getKeyForNode(col, rowNode) {\n    const value = this.getValue(col, rowNode);\n    const keyCreator = col.getColDef().keyCreator;\n    let result = value;\n    if (keyCreator) {\n      const keyParams = this.gos.addGridCommonParams({\n        value,\n        colDef: col.getColDef(),\n        column: col,\n        node: rowNode,\n        data: rowNode.data\n      });\n      result = keyCreator(keyParams);\n    }\n    if (typeof result === \"string\" || result == null) {\n      return result;\n    }\n    result = String(result);\n    if (result === \"[object Object]\") {\n      _warnOnce(\"a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (se AG Grid docs) or b) to toString() on the object to return a key\");\n    }\n    return result;\n  }\n};\n\n// community-modules/core/src/grid.ts\nvar GlobalGridOptions = /*#__PURE__*/(() => {\n  let GlobalGridOptions = class {};\n  GlobalGridOptions.gridOptions = void 0;\n  return GlobalGridOptions;\n})();\nfunction provideGlobalGridOptions(gridOptions) {\n  GlobalGridOptions.gridOptions = gridOptions;\n}\nfunction createGrid(eGridDiv, gridOptions, params) {\n  if (!gridOptions) {\n    _errorOnce(\"No gridOptions provided to createGrid\");\n    return {};\n  }\n  const api = new GridCoreCreator().create(eGridDiv, gridOptions, context => {\n    const gridComp = new GridComp(eGridDiv);\n    context.createBean(gridComp);\n  }, void 0, params);\n  if (!Object.isFrozen(gridOptions) && !params?.frameworkOverrides) {\n    const apiUrl = \"https://ag-grid.com/javascript-data-grid/grid-interface/#grid-api\";\n    Object.defineProperty(gridOptions, \"api\", {\n      get: () => {\n        _errorOnce(`gridOptions.api is no longer supported. See ${apiUrl}.`);\n        return void 0;\n      },\n      configurable: true\n    });\n  }\n  return api;\n}\nvar Grid = class {\n  // Not typed to enable setting api for backwards compatibility\n  constructor(eGridDiv, gridOptions, params) {\n    _warnOnce(\"Since v31 new Grid(...) is deprecated. Use createGrid instead: `const gridApi = createGrid(...)`. The grid api is returned from createGrid and will not be available on gridOptions.\");\n    if (!gridOptions) {\n      _errorOnce(\"No gridOptions provided to the grid\");\n      return;\n    }\n    this.gridOptions = gridOptions;\n    const api = new GridCoreCreator().create(eGridDiv, gridOptions, context => {\n      const gridComp = new GridComp(eGridDiv);\n      const bean = context.createBean(gridComp);\n      bean.addDestroyFunc(() => {\n        this.destroy();\n      });\n    }, void 0, params);\n    this.gridOptions.api = api;\n  }\n  destroy() {\n    if (this.gridOptions) {\n      this.gridOptions.api?.destroy();\n      delete this.gridOptions.api;\n    }\n  }\n};\nvar nextGridId = 1;\nvar GridCoreCreator = class {\n  create(eGridDiv, providedOptions, createUi, acceptChanges, params) {\n    let mergedGridOps = {};\n    if (GlobalGridOptions.gridOptions) {\n      _mergeDeep(mergedGridOps, GlobalGridOptions.gridOptions, true, true);\n      mergedGridOps = {\n        ...mergedGridOps,\n        ...providedOptions\n      };\n    } else {\n      mergedGridOps = providedOptions;\n    }\n    const gridOptions = getCoercedGridOptions(mergedGridOps);\n    const gridId = gridOptions.gridId ?? String(nextGridId++);\n    const registeredModules = this.getRegisteredModules(params, gridId);\n    const beanClasses = this.createBeansList(gridOptions.rowModelType, registeredModules, gridId);\n    const providedBeanInstances = this.createProvidedBeans(eGridDiv, gridOptions, params);\n    if (!beanClasses) {\n      _errorOnce(\"Failed to create grid.\");\n      return void 0;\n    }\n    const contextParams = {\n      providedBeanInstances,\n      beanClasses,\n      gridId,\n      beanInitComparator: gridBeanInitComparator,\n      beanDestroyComparator: gridBeanDestroyComparator,\n      derivedBeans: [createApiProxy]\n    };\n    const context = new Context(contextParams);\n    this.registerModuleUserComponents(context, registeredModules);\n    this.registerControllers(context, registeredModules);\n    this.registerModuleApiFunctions(context, registeredModules);\n    createUi(context);\n    context.getBean(\"syncService\").start();\n    if (acceptChanges) {\n      acceptChanges(context);\n    }\n    return context.getBean(\"gridApi\");\n  }\n  registerControllers(context, registeredModules) {\n    const factory = context.getBean(\"ctrlsFactory\");\n    registeredModules.forEach(module => {\n      if (module.controllers) {\n        module.controllers.forEach(meta => factory.register(meta));\n      }\n    });\n  }\n  getRegisteredModules(params, gridId) {\n    const passedViaConstructor = params ? params.modules : null;\n    const registered = ModuleRegistry.__getRegisteredModules(gridId);\n    const allModules = [];\n    const mapNames = {};\n    const addModule = (moduleBased, mod, gridId2) => {\n      const addIndividualModule = currentModule => {\n        if (!mapNames[currentModule.moduleName]) {\n          mapNames[currentModule.moduleName] = true;\n          allModules.push(currentModule);\n          ModuleRegistry.__register(currentModule, moduleBased, gridId2);\n        }\n      };\n      addIndividualModule(mod);\n      if (mod.dependantModules) {\n        mod.dependantModules.forEach(m => addModule(moduleBased, m, gridId2));\n      }\n    };\n    addModule(!!passedViaConstructor?.length || !ModuleRegistry.__isPackageBased(), CommunityFeaturesModule, void 0);\n    if (passedViaConstructor) {\n      passedViaConstructor.forEach(m => addModule(true, m, gridId));\n    }\n    if (registered) {\n      registered.forEach(m => addModule(!ModuleRegistry.__isPackageBased(), m, void 0));\n    }\n    return allModules;\n  }\n  registerModuleUserComponents(context, registeredModules) {\n    const moduleUserComps = this.extractModuleEntity(registeredModules, module => module.userComponents ? module.userComponents : []);\n    const registry = context.getBean(\"userComponentRegistry\");\n    moduleUserComps.forEach(compMeta => {\n      registry.registerDefaultComponent(compMeta.name, compMeta.classImp);\n    });\n  }\n  registerModuleApiFunctions(context, registeredModules) {\n    const apiFunctionService = context.getBean(\"apiFunctionService\");\n    registeredModules.forEach(module => {\n      const apiFunctions = module.apiFunctions ?? {};\n      const names = Object.keys(apiFunctions);\n      names.forEach(name => {\n        apiFunctionService?.addFunction(name, apiFunctions[name]);\n      });\n    });\n  }\n  createProvidedBeans(eGridDiv, gridOptions, params) {\n    let frameworkOverrides = params ? params.frameworkOverrides : null;\n    if (_missing(frameworkOverrides)) {\n      frameworkOverrides = new VanillaFrameworkOverrides();\n    }\n    const seed = {\n      gridOptions,\n      eGridDiv,\n      globalEventListener: params ? params.globalEventListener : null,\n      globalSyncEventListener: params ? params.globalSyncEventListener : null,\n      frameworkOverrides\n    };\n    if (params && params.providedBeanInstances) {\n      Object.assign(seed, params.providedBeanInstances);\n    }\n    return seed;\n  }\n  createBeansList(rowModelType = \"clientSide\", registeredModules, gridId) {\n    const rowModelModules = registeredModules.filter(module => !module.rowModel || module.rowModel === rowModelType);\n    const rowModelModuleNames = {\n      clientSide: \"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */,\n      infinite: \"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */,\n      serverSide: \"@ag-grid-enterprise/server-side-row-model\" /* ServerSideRowModelModule */,\n      viewport: \"@ag-grid-enterprise/viewport-row-model\" /* ViewportRowModelModule */\n    };\n    if (!rowModelModuleNames[rowModelType]) {\n      _errorOnce(\"Could not find row model for rowModelType = \", rowModelType);\n      return;\n    }\n    if (!ModuleRegistry.__assertRegistered(rowModelModuleNames[rowModelType], `rowModelType = '${rowModelType}'`, gridId)) {\n      return;\n    }\n    const beans = [RowPositionUtils, CellPositionUtils, HeaderPositionUtils, GridDestroyService, ApiFunctionService, UserComponentRegistry, AgComponentUtils, ComponentMetadataProvider, ResizeObserverService, UserComponentFactory, RowContainerHeightService, HorizontalResizeService, LocaleService, PinnedRowModel, DragService, VisibleColsService, EventService, GridOptionsService, PopupService, SelectionService, ColumnModel, HeaderNavigationService, PageBoundsService, PageBoundsListener, RowRenderer, ExpressionService, ColumnFactory, NavigationService, ValueCache, ValueService, AutoWidthCalculator, StandardMenuFactory, DragAndDropService, FocusService, MouseEventService, Environment, CellNavigationService, StylingService, ScrollVisibleService, SortController, ColumnHoverService, ColumnAnimationService, SelectableService, ChangeDetectionService, AnimationFrameService, ColumnDefFactory, RowCssClassCalculator, RowNodeSorter, CtrlsService, PinnedWidthService, RowNodeEventThrottle, CtrlsFactory, SyncService, OverlayService, ExpansionService, ApiEventService, AriaAnnouncementService, MenuService, ColumnApplyStateService, ColumnEventDispatcher, ColumnMoveService, ColumnAutosizeService, ColumnGetStateService, ColumnGroupStateService, ColumnSizeService, FuncColsService, ColumnNameService, ColumnViewportService, PivotResultColsService];\n    const moduleBeans = this.extractModuleEntity(rowModelModules, module => module.beans ? module.beans : []);\n    beans.push(...moduleBeans);\n    const beansNoDuplicates = [];\n    beans.forEach(bean => {\n      if (beansNoDuplicates.indexOf(bean) < 0) {\n        beansNoDuplicates.push(bean);\n      }\n    });\n    return beansNoDuplicates;\n  }\n  extractModuleEntity(moduleEntities, extractor) {\n    return [].concat(...moduleEntities.map(extractor));\n  }\n};\n\n// community-modules/core/src/api/rowModelHelperService.ts\nvar RowModelHelperService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowModelHelperService\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    const rowModel = this.rowModel;\n    switch (rowModel.getType()) {\n      case \"clientSide\":\n        this.clientSideRowModel = rowModel;\n        break;\n      case \"infinite\":\n        this.infiniteRowModel = rowModel;\n        break;\n      case \"serverSide\":\n        this.serverSideRowModel = rowModel;\n        break;\n    }\n  }\n  getClientSideRowModel() {\n    return this.clientSideRowModel;\n  }\n  getInfiniteRowModel() {\n    return this.infiniteRowModel;\n  }\n  getServerSideRowModel() {\n    return this.serverSideRowModel;\n  }\n};\n\n// community-modules/core/src/api/csrmSsrmSharedApi.ts\nfunction expandAll(beans) {\n  beans.expansionService.expandAll(true);\n}\nfunction collapseAll(beans) {\n  beans.expansionService.expandAll(false);\n}\nfunction onRowHeightChanged(beans) {\n  const clientSideRowModel = beans.rowModelHelperService?.getClientSideRowModel();\n  const serverSideRowModel = beans.rowModelHelperService?.getServerSideRowModel();\n  if (clientSideRowModel) {\n    clientSideRowModel.onRowHeightChanged();\n  } else if (serverSideRowModel) {\n    serverSideRowModel.onRowHeightChanged();\n  }\n}\n\n// community-modules/core/src/api/ssrmInfiniteSharedApi.ts\nfunction setRowCount(beans, rowCount, maxRowFound) {\n  const serverSideRowModel = beans.rowModelHelperService?.getServerSideRowModel();\n  if (serverSideRowModel) {\n    if (beans.funcColsService.isRowGroupEmpty()) {\n      serverSideRowModel.setRowCount(rowCount, maxRowFound);\n      return;\n    }\n    _errorOnce(\"setRowCount cannot be used while using row grouping.\");\n    return;\n  }\n  const infiniteRowModel = beans.rowModelHelperService?.getInfiniteRowModel();\n  if (infiniteRowModel) {\n    infiniteRowModel.setRowCount(rowCount, maxRowFound);\n    return;\n  }\n}\nfunction getCacheBlockState(beans) {\n  return beans.rowNodeBlockLoader?.getBlockState() ?? {};\n}\n\n// community-modules/core/src/api/sharedApiModule.ts\nvar CsrmSsrmSharedApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/csrm-ssrm-shared-api\",\n  apiFunctions: {\n    expandAll,\n    collapseAll,\n    onRowHeightChanged\n  }\n};\nvar SsrmInfiniteSharedApiModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/ssrm-infinite-shared-api\",\n  apiFunctions: {\n    setRowCount,\n    getCacheBlockState\n  }\n};\n\n// community-modules/core/src/components/framework/frameworkComponentWrapper.ts\nvar BaseComponentWrapper = class {\n  wrap(OriginalConstructor, mandatoryMethodList, optionalMethodList = [], componentType) {\n    const wrapper = this.createWrapper(OriginalConstructor, componentType);\n    mandatoryMethodList.forEach(methodName => {\n      this.createMethod(wrapper, methodName, true);\n    });\n    optionalMethodList.forEach(methodName => {\n      this.createMethod(wrapper, methodName, false);\n    });\n    return wrapper;\n  }\n  unwrap(comp) {\n    return comp;\n  }\n  createMethod(wrapper, methodName, mandatory) {\n    wrapper.addMethod(methodName, this.createMethodProxy(wrapper, methodName, mandatory));\n  }\n  createMethodProxy(wrapper, methodName, mandatory) {\n    return function () {\n      if (wrapper.hasMethod(methodName)) {\n        return wrapper.callMethod(methodName, arguments);\n      }\n      if (mandatory) {\n        _warnOnce(\"Framework component is missing the method \" + methodName + \"()\");\n      }\n      return null;\n    };\n  }\n};\n\n// community-modules/core/src/utils/rowNode.ts\nfunction _sortRowNodesByOrder(rowNodes, rowNodeOrder) {\n  if (!rowNodes) {\n    return false;\n  }\n  const comparator = (nodeA, nodeB) => {\n    const positionA = rowNodeOrder[nodeA.id];\n    const positionB = rowNodeOrder[nodeB.id];\n    const aHasIndex = positionA !== void 0;\n    const bHasIndex = positionB !== void 0;\n    const bothNodesAreUserNodes = aHasIndex && bHasIndex;\n    const bothNodesAreFillerNodes = !aHasIndex && !bHasIndex;\n    if (bothNodesAreUserNodes) {\n      return positionA - positionB;\n    }\n    if (bothNodesAreFillerNodes) {\n      return nodeA.__objectId - nodeB.__objectId;\n    }\n    if (aHasIndex) {\n      return 1;\n    }\n    return -1;\n  };\n  let rowNodeA;\n  let rowNodeB;\n  let atLeastOneOutOfOrder = false;\n  for (let i = 0; i < rowNodes.length - 1; i++) {\n    rowNodeA = rowNodes[i];\n    rowNodeB = rowNodes[i + 1];\n    if (comparator(rowNodeA, rowNodeB) > 0) {\n      atLeastOneOutOfOrder = true;\n      break;\n    }\n  }\n  if (atLeastOneOutOfOrder) {\n    rowNodes.sort(comparator);\n    return true;\n  }\n  return false;\n}\n\n// community-modules/core/src/interfaces/iChartOptions.ts\nvar ChartMappings = /*#__PURE__*/(() => {\n  let ChartMappings = class {};\n  ChartMappings.CHART_TYPE_TO_SERIES_TYPE = {\n    column: \"bar\",\n    groupedColumn: \"bar\",\n    stackedColumn: \"bar\",\n    normalizedColumn: \"bar\",\n    bar: \"bar\",\n    groupedBar: \"bar\",\n    stackedBar: \"bar\",\n    normalizedBar: \"bar\",\n    line: \"line\",\n    scatter: \"scatter\",\n    bubble: \"bubble\",\n    pie: \"pie\",\n    donut: \"donut\",\n    doughnut: \"donut\",\n    area: \"area\",\n    stackedArea: \"area\",\n    normalizedArea: \"area\",\n    histogram: \"histogram\",\n    radarLine: \"radar-line\",\n    radarArea: \"radar-area\",\n    nightingale: \"nightingale\",\n    radialColumn: \"radial-column\",\n    radialBar: \"radial-bar\",\n    sunburst: \"sunburst\",\n    rangeBar: \"range-bar\",\n    rangeArea: \"range-area\",\n    boxPlot: \"box-plot\",\n    treemap: \"treemap\",\n    heatmap: \"heatmap\",\n    waterfall: \"waterfall\"\n  };\n  ChartMappings.COMBO_CHART_TYPES = [\"columnLineCombo\", \"areaColumnCombo\", \"customCombo\"];\n  ChartMappings.SERIES_GROUP_TYPES = [\"grouped\", \"stacked\", \"normalized\"];\n\n  // community-modules/core/src/interfaces/iSparklineCellRendererParams.ts\n  return ChartMappings;\n})();\nvar BarColumnLabelPlacement = /* @__PURE__ */(BarColumnLabelPlacement2 => {\n  BarColumnLabelPlacement2[\"InsideBase\"] = \"insideBase\";\n  BarColumnLabelPlacement2[\"InsideEnd\"] = \"insideEnd\";\n  BarColumnLabelPlacement2[\"Center\"] = \"center\";\n  BarColumnLabelPlacement2[\"OutsideEnd\"] = \"outsideEnd\";\n  return BarColumnLabelPlacement2;\n})(BarColumnLabelPlacement || {});\n\n// community-modules/core/src/main.ts\nvar globalObj = typeof global === \"undefined\" ? {} : global;\nglobalObj.HTMLElement = typeof HTMLElement === \"undefined\" ? {} : HTMLElement;\nglobalObj.HTMLButtonElement = typeof HTMLButtonElement === \"undefined\" ? {} : HTMLButtonElement;\nglobalObj.HTMLSelectElement = typeof HTMLSelectElement === \"undefined\" ? {} : HTMLSelectElement;\nglobalObj.HTMLInputElement = typeof HTMLInputElement === \"undefined\" ? {} : HTMLInputElement;\nglobalObj.Node = typeof Node === \"undefined\" ? {} : Node;\nglobalObj.MouseEvent = typeof MouseEvent === \"undefined\" ? {} : MouseEvent;\n\n// community-modules/client-side-row-model/src/clientSideRowModel/clientSideNodeManager.ts\nvar ROOT_NODE_ID = \"ROOT_NODE_ID\";\nvar TOP_LEVEL = 0;\nvar ClientSideNodeManager = class {\n  constructor(rootNode, gos, eventService, funcColsService, selectionService, beans) {\n    this.nextId = 0;\n    // has row data actually been set\n    this.rowCountReady = false;\n    // when user is provide the id's, we also keep a map of ids to row nodes for convenience\n    this.allNodesMap = {};\n    this.rootNode = rootNode;\n    this.gos = gos;\n    this.eventService = eventService;\n    this.funcColsService = funcColsService;\n    this.beans = beans;\n    this.selectionService = selectionService;\n    this.rootNode.group = true;\n    this.rootNode.level = -1;\n    this.rootNode.id = ROOT_NODE_ID;\n    this.rootNode.allLeafChildren = [];\n    this.rootNode.childrenAfterGroup = [];\n    this.rootNode.childrenAfterSort = [];\n    this.rootNode.childrenAfterAggFilter = [];\n    this.rootNode.childrenAfterFilter = [];\n  }\n  getCopyOfNodesMap() {\n    return _cloneObject(this.allNodesMap);\n  }\n  getRowNode(id) {\n    return this.allNodesMap[id];\n  }\n  setRowData(rowData) {\n    if (typeof rowData === \"string\") {\n      _warnOnce(\"rowData must be an array.\");\n      return;\n    }\n    this.rowCountReady = true;\n    this.dispatchRowDataUpdateStartedEvent(rowData);\n    const rootNode = this.rootNode;\n    const sibling = this.rootNode.sibling;\n    rootNode.childrenAfterFilter = null;\n    rootNode.childrenAfterGroup = null;\n    rootNode.childrenAfterAggFilter = null;\n    rootNode.childrenAfterSort = null;\n    rootNode.childrenMapped = null;\n    rootNode.updateHasChildren();\n    this.nextId = 0;\n    this.allNodesMap = {};\n    if (rowData) {\n      rootNode.allLeafChildren = rowData.map(dataItem => this.createNode(dataItem, this.rootNode, TOP_LEVEL));\n    } else {\n      rootNode.allLeafChildren = [];\n      rootNode.childrenAfterGroup = [];\n    }\n    if (sibling) {\n      sibling.childrenAfterFilter = rootNode.childrenAfterFilter;\n      sibling.childrenAfterGroup = rootNode.childrenAfterGroup;\n      sibling.childrenAfterAggFilter = rootNode.childrenAfterAggFilter;\n      sibling.childrenAfterSort = rootNode.childrenAfterSort;\n      sibling.childrenMapped = rootNode.childrenMapped;\n      sibling.allLeafChildren = rootNode.allLeafChildren;\n    }\n  }\n  updateRowData(rowDataTran, rowNodeOrder) {\n    this.rowCountReady = true;\n    this.dispatchRowDataUpdateStartedEvent(rowDataTran.add);\n    const rowNodeTransaction = {\n      remove: [],\n      update: [],\n      add: []\n    };\n    const nodesToUnselect = [];\n    this.executeRemove(rowDataTran, rowNodeTransaction, nodesToUnselect);\n    this.executeUpdate(rowDataTran, rowNodeTransaction, nodesToUnselect);\n    this.executeAdd(rowDataTran, rowNodeTransaction);\n    this.updateSelection(nodesToUnselect, \"rowDataChanged\");\n    if (rowNodeOrder) {\n      _sortRowNodesByOrder(this.rootNode.allLeafChildren, rowNodeOrder);\n    }\n    return rowNodeTransaction;\n  }\n  isRowCountReady() {\n    return this.rowCountReady;\n  }\n  dispatchRowDataUpdateStartedEvent(rowData) {\n    const event = {\n      type: \"rowDataUpdateStarted\",\n      firstRowData: rowData?.length ? rowData[0] : null\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  updateSelection(nodesToUnselect, source) {\n    const selectionChanged = nodesToUnselect.length > 0;\n    if (selectionChanged) {\n      this.selectionService.setNodesSelected({\n        newValue: false,\n        nodes: nodesToUnselect,\n        suppressFinishActions: true,\n        source\n      });\n    }\n    this.selectionService.updateGroupsFromChildrenSelections(source);\n    if (selectionChanged) {\n      const event = {\n        type: \"selectionChanged\",\n        source\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  executeAdd(rowDataTran, rowNodeTransaction) {\n    const {\n      add,\n      addIndex\n    } = rowDataTran;\n    if (_missingOrEmpty(add)) {\n      return;\n    }\n    const newNodes = add.map(item => this.createNode(item, this.rootNode, TOP_LEVEL));\n    const allLeafChildren = this.rootNode.allLeafChildren;\n    if (typeof addIndex === \"number\" && addIndex >= 0) {\n      const len = allLeafChildren.length;\n      let normalisedAddIndex = addIndex;\n      const isTreeData = this.gos.get(\"treeData\");\n      if (isTreeData && addIndex > 0 && len > 0) {\n        for (let i = 0; i < len; i++) {\n          if (allLeafChildren[i]?.rowIndex == addIndex - 1) {\n            normalisedAddIndex = i + 1;\n            break;\n          }\n        }\n      }\n      const nodesBeforeIndex = allLeafChildren.slice(0, normalisedAddIndex);\n      const nodesAfterIndex = allLeafChildren.slice(normalisedAddIndex, allLeafChildren.length);\n      this.rootNode.allLeafChildren = [...nodesBeforeIndex, ...newNodes, ...nodesAfterIndex];\n    } else {\n      this.rootNode.allLeafChildren = [...allLeafChildren, ...newNodes];\n    }\n    if (this.rootNode.sibling) {\n      this.rootNode.sibling.allLeafChildren = allLeafChildren;\n    }\n    rowNodeTransaction.add = newNodes;\n  }\n  executeRemove(rowDataTran, rowNodeTransaction, nodesToUnselect) {\n    const {\n      remove\n    } = rowDataTran;\n    if (_missingOrEmpty(remove)) {\n      return;\n    }\n    const rowIdsRemoved = {};\n    remove.forEach(item => {\n      const rowNode = this.lookupRowNode(item);\n      if (!rowNode) {\n        return;\n      }\n      if (rowNode.isSelected()) {\n        nodesToUnselect.push(rowNode);\n      }\n      rowNode.clearRowTopAndRowIndex();\n      rowIdsRemoved[rowNode.id] = true;\n      delete this.allNodesMap[rowNode.id];\n      rowNodeTransaction.remove.push(rowNode);\n    });\n    this.rootNode.allLeafChildren = this.rootNode.allLeafChildren?.filter(rowNode => !rowIdsRemoved[rowNode.id]) ?? null;\n    if (this.rootNode.sibling) {\n      this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren;\n    }\n  }\n  executeUpdate(rowDataTran, rowNodeTransaction, nodesToUnselect) {\n    const {\n      update\n    } = rowDataTran;\n    if (_missingOrEmpty(update)) {\n      return;\n    }\n    update.forEach(item => {\n      const rowNode = this.lookupRowNode(item);\n      if (!rowNode) {\n        return;\n      }\n      rowNode.updateData(item);\n      if (!rowNode.selectable && rowNode.isSelected()) {\n        nodesToUnselect.push(rowNode);\n      }\n      this.setMasterForRow(rowNode, item, TOP_LEVEL, false);\n      rowNodeTransaction.update.push(rowNode);\n    });\n  }\n  lookupRowNode(data) {\n    const getRowIdFunc = this.gos.getRowIdCallback();\n    let rowNode;\n    if (getRowIdFunc) {\n      const id = getRowIdFunc({\n        data,\n        level: 0\n      });\n      rowNode = this.allNodesMap[id];\n      if (!rowNode) {\n        _errorOnce(`could not find row id=${id}, data item was not found for this id`);\n        return null;\n      }\n    } else {\n      rowNode = this.rootNode.allLeafChildren?.find(node => node.data === data);\n      if (!rowNode) {\n        _errorOnce(`could not find data item as object was not found`, data);\n        _errorOnce(`Consider using getRowId to help the Grid find matching row data`);\n        return null;\n      }\n    }\n    return rowNode || null;\n  }\n  createNode(dataItem, parent, level) {\n    const node = new RowNode(this.beans);\n    node.group = false;\n    this.setMasterForRow(node, dataItem, level, true);\n    if (parent) {\n      node.parent = parent;\n    }\n    node.level = level;\n    node.setDataAndId(dataItem, this.nextId.toString());\n    if (this.allNodesMap[node.id]) {\n      _warnOnce(`duplicate node id '${node.id}' detected from getRowId callback, this could cause issues in your grid.`);\n    }\n    this.allNodesMap[node.id] = node;\n    this.nextId++;\n    return node;\n  }\n  setMasterForRow(rowNode, data, level, setExpanded) {\n    const isTreeData = this.gos.get(\"treeData\");\n    if (isTreeData) {\n      rowNode.setMaster(false);\n      if (setExpanded) {\n        rowNode.expanded = false;\n      }\n    } else {\n      const masterDetail = this.gos.get(\"masterDetail\");\n      if (masterDetail) {\n        const isRowMasterFunc = this.gos.get(\"isRowMaster\");\n        if (isRowMasterFunc) {\n          rowNode.setMaster(isRowMasterFunc(data));\n        } else {\n          rowNode.setMaster(true);\n        }\n      } else {\n        rowNode.setMaster(false);\n      }\n      if (setExpanded) {\n        const rowGroupColumns = this.funcColsService.getRowGroupColumns();\n        const numRowGroupColumns = rowGroupColumns ? rowGroupColumns.length : 0;\n        const masterRowLevel = level + numRowGroupColumns;\n        rowNode.expanded = rowNode.master ? this.isExpanded(masterRowLevel) : false;\n      }\n    }\n  }\n  isExpanded(level) {\n    const expandByDefault = this.gos.get(\"groupDefaultExpanded\");\n    if (expandByDefault === -1) {\n      return true;\n    }\n    return level < expandByDefault;\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/clientSideRowModel.ts\nvar ClientSideRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowModel\";\n    this.onRowHeightChanged_debounced = _debounce(this.onRowHeightChanged.bind(this), 100);\n    this.rowsToDisplay = [];\n    /** Has the start method been called */\n    this.hasStarted = false;\n    /** E.g. data has been set into the node manager already */\n    this.shouldSkipSettingDataOnStart = false;\n    /**\n     * This is to prevent refresh model being called when it's already being called.\n     * E.g. the group stage can trigger initial state filter model to be applied. This fires onFilterChanged,\n     * which then triggers the listener here that calls refresh model again but at the filter stage\n     * (which is about to be run by the original call).\n     */\n    this.isRefreshingModel = false;\n    this.rowCountReady = false;\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n    this.columnModel = beans.columnModel;\n    this.funcColsService = beans.funcColsService;\n    this.selectionService = beans.selectionService;\n    this.valueCache = beans.valueCache;\n    this.environment = beans.environment;\n    this.filterStage = beans.filterStage;\n    this.sortStage = beans.sortStage;\n    this.flattenStage = beans.flattenStage;\n    this.groupStage = beans.groupStage;\n    this.aggregationStage = beans.aggregationStage;\n    this.pivotStage = beans.pivotStage;\n    this.filterAggregatesStage = beans.filterAggregatesStage;\n  }\n  postConstruct() {\n    const refreshEverythingFunc = this.refreshModel.bind(this, {\n      step: \"group\" /* EVERYTHING */\n    });\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    const refreshEverythingAfterColsChangedFunc = this.refreshModel.bind(this, {\n      step: \"group\" /* EVERYTHING */,\n\n      // after cols change, row grouping (the first stage) could of changed\n      afterColumnsChanged: true,\n      keepRenderedRows: true,\n      // we want animations cos sorting or filtering could be applied\n      animate\n    });\n    this.addManagedEventListeners({\n      newColumnsLoaded: refreshEverythingAfterColsChangedFunc,\n      columnRowGroupChanged: refreshEverythingFunc,\n      columnValueChanged: this.onValueChanged.bind(this),\n      columnPivotChanged: this.refreshModel.bind(this, {\n        step: \"pivot\" /* PIVOT */\n      }),\n      filterChanged: this.onFilterChanged.bind(this),\n      sortChanged: this.onSortChanged.bind(this),\n      columnPivotModeChanged: refreshEverythingFunc,\n      gridStylesChanged: this.onGridStylesChanges.bind(this),\n      gridReady: this.onGridReady.bind(this)\n    });\n    this.addPropertyListeners();\n    this.rootNode = new RowNode(this.beans);\n    this.nodeManager = new ClientSideNodeManager(this.rootNode, this.gos, this.eventService, this.funcColsService, this.selectionService, this.beans);\n  }\n  addPropertyListeners() {\n    const resetProps = /* @__PURE__ */new Set([\"treeData\", \"masterDetail\"]);\n    const groupStageRefreshProps = /* @__PURE__ */new Set([\"groupDefaultExpanded\", \"groupAllowUnbalanced\", \"initialGroupOrderComparator\", \"groupHideOpenParents\", \"groupDisplayType\"]);\n    const filterStageRefreshProps = /* @__PURE__ */new Set([\"excludeChildrenWhenTreeDataFiltering\"]);\n    const pivotStageRefreshProps = /* @__PURE__ */new Set([\"removePivotHeaderRowWhenSingleValueColumn\", \"pivotRowTotals\", \"pivotColumnGroupTotals\", \"suppressExpandablePivotGroups\"]);\n    const aggregateStageRefreshProps = /* @__PURE__ */new Set([\"getGroupRowAgg\", \"alwaysAggregateAtRootLevel\", \"groupIncludeTotalFooter\", \"suppressAggFilteredOnly\", \"grandTotalRow\"]);\n    const sortStageRefreshProps = /* @__PURE__ */new Set([\"postSortRows\", \"groupDisplayType\", \"accentedSort\"]);\n    const filterAggStageRefreshProps = /* @__PURE__ */new Set([]);\n    const flattenStageRefreshProps = /* @__PURE__ */new Set([\"groupRemoveSingleChildren\", \"groupRemoveLowestSingleChildren\", \"groupIncludeFooter\", \"groupTotalRow\"]);\n    const allProps = [...resetProps, ...groupStageRefreshProps, ...filterStageRefreshProps, ...pivotStageRefreshProps, ...pivotStageRefreshProps, ...aggregateStageRefreshProps, ...sortStageRefreshProps, ...filterAggStageRefreshProps, ...flattenStageRefreshProps];\n    this.addManagedPropertyListeners(allProps, params => {\n      const properties = params.changeSet?.properties;\n      if (!properties) {\n        return;\n      }\n      const arePropertiesImpacted = propSet => properties.some(prop => propSet.has(prop));\n      if (arePropertiesImpacted(resetProps)) {\n        this.setRowData(this.rootNode.allLeafChildren.map(child => child.data));\n        return;\n      }\n      if (arePropertiesImpacted(groupStageRefreshProps)) {\n        this.refreshModel({\n          step: \"group\" /* EVERYTHING */\n        });\n        return;\n      }\n      if (arePropertiesImpacted(filterStageRefreshProps)) {\n        this.refreshModel({\n          step: \"filter\" /* FILTER */\n        });\n        return;\n      }\n      if (arePropertiesImpacted(pivotStageRefreshProps)) {\n        this.refreshModel({\n          step: \"pivot\" /* PIVOT */\n        });\n        return;\n      }\n      if (arePropertiesImpacted(aggregateStageRefreshProps)) {\n        this.refreshModel({\n          step: \"aggregate\" /* AGGREGATE */\n        });\n        return;\n      }\n      if (arePropertiesImpacted(sortStageRefreshProps)) {\n        this.refreshModel({\n          step: \"sort\" /* SORT */\n        });\n        return;\n      }\n      if (arePropertiesImpacted(filterAggStageRefreshProps)) {\n        this.refreshModel({\n          step: \"filter_aggregates\" /* FILTER_AGGREGATES */\n        });\n        return;\n      }\n      if (arePropertiesImpacted(flattenStageRefreshProps)) {\n        this.refreshModel({\n          step: \"map\" /* MAP */\n        });\n      }\n    });\n    this.addManagedPropertyListener(\"rowHeight\", () => this.resetRowHeights());\n  }\n  start() {\n    this.hasStarted = true;\n    if (this.shouldSkipSettingDataOnStart) {\n      this.dispatchUpdateEventsAndRefresh();\n    } else {\n      this.setInitialData();\n    }\n  }\n  setInitialData() {\n    const rowData = this.gos.get(\"rowData\");\n    if (rowData) {\n      this.shouldSkipSettingDataOnStart = true;\n      this.setRowData(rowData);\n    }\n  }\n  ensureRowHeightsValid(startPixel, endPixel, startLimitIndex, endLimitIndex) {\n    let atLeastOneChange;\n    let res = false;\n    do {\n      atLeastOneChange = false;\n      const rowAtStartPixel = this.getRowIndexAtPixel(startPixel);\n      const rowAtEndPixel = this.getRowIndexAtPixel(endPixel);\n      const firstRow = Math.max(rowAtStartPixel, startLimitIndex);\n      const lastRow = Math.min(rowAtEndPixel, endLimitIndex);\n      for (let rowIndex = firstRow; rowIndex <= lastRow; rowIndex++) {\n        const rowNode = this.getRow(rowIndex);\n        if (rowNode.rowHeightEstimated) {\n          const rowHeight = this.gos.getRowHeightForNode(rowNode);\n          rowNode.setRowHeight(rowHeight.height);\n          atLeastOneChange = true;\n          res = true;\n        }\n      }\n      if (atLeastOneChange) {\n        this.setRowTopAndRowIndex();\n      }\n    } while (atLeastOneChange);\n    return res;\n  }\n  setRowTopAndRowIndex() {\n    const defaultRowHeight = this.environment.getDefaultRowHeight();\n    let nextRowTop = 0;\n    const displayedRowsMapped = /* @__PURE__ */new Set();\n    const allowEstimate = this.gos.isDomLayout(\"normal\");\n    for (let i = 0; i < this.rowsToDisplay.length; i++) {\n      const rowNode = this.rowsToDisplay[i];\n      if (rowNode.id != null) {\n        displayedRowsMapped.add(rowNode.id);\n      }\n      if (rowNode.rowHeight == null) {\n        const rowHeight = this.gos.getRowHeightForNode(rowNode, allowEstimate, defaultRowHeight);\n        rowNode.setRowHeight(rowHeight.height, rowHeight.estimated);\n      }\n      rowNode.setRowTop(nextRowTop);\n      rowNode.setRowIndex(i);\n      nextRowTop += rowNode.rowHeight;\n    }\n    return displayedRowsMapped;\n  }\n  clearRowTopAndRowIndex(changedPath, displayedRowsMapped) {\n    const changedPathActive = changedPath.isActive();\n    const clearIfNotDisplayed = rowNode => {\n      if (rowNode && rowNode.id != null && !displayedRowsMapped.has(rowNode.id)) {\n        rowNode.clearRowTopAndRowIndex();\n      }\n    };\n    const recurse = rowNode => {\n      clearIfNotDisplayed(rowNode);\n      clearIfNotDisplayed(rowNode.detailNode);\n      clearIfNotDisplayed(rowNode.sibling);\n      if (rowNode.hasChildren()) {\n        if (rowNode.childrenAfterGroup) {\n          const isRootNode = rowNode.level == -1;\n          const skipChildren = changedPathActive && !isRootNode && !rowNode.expanded;\n          if (!skipChildren) {\n            rowNode.childrenAfterGroup.forEach(recurse);\n          }\n        }\n      }\n    };\n    recurse(this.rootNode);\n  }\n  // returns false if row was moved, otherwise true\n  ensureRowsAtPixel(rowNodes, pixel, increment = 0) {\n    const indexAtPixelNow = this.getRowIndexAtPixel(pixel);\n    const rowNodeAtPixelNow = this.getRow(indexAtPixelNow);\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    if (rowNodeAtPixelNow === rowNodes[0]) {\n      return false;\n    }\n    rowNodes.forEach(rowNode => {\n      _removeFromArray(this.rootNode.allLeafChildren, rowNode);\n    });\n    rowNodes.forEach((rowNode, idx) => {\n      _insertIntoArray(this.rootNode.allLeafChildren, rowNode, Math.max(indexAtPixelNow + increment, 0) + idx);\n    });\n    this.refreshModel({\n      step: \"group\" /* EVERYTHING */,\n      keepRenderedRows: true,\n      keepEditingRows: true,\n      animate\n    });\n    return true;\n  }\n  highlightRowAtPixel(rowNode, pixel) {\n    const indexAtPixelNow = pixel != null ? this.getRowIndexAtPixel(pixel) : null;\n    const rowNodeAtPixelNow = indexAtPixelNow != null ? this.getRow(indexAtPixelNow) : null;\n    if (!rowNodeAtPixelNow || !rowNode || rowNodeAtPixelNow === rowNode || pixel == null) {\n      if (this.lastHighlightedRow) {\n        this.lastHighlightedRow.setHighlighted(null);\n        this.lastHighlightedRow = null;\n      }\n      return;\n    }\n    const highlight = this.getHighlightPosition(pixel, rowNodeAtPixelNow);\n    if (this.lastHighlightedRow && this.lastHighlightedRow !== rowNodeAtPixelNow) {\n      this.lastHighlightedRow.setHighlighted(null);\n      this.lastHighlightedRow = null;\n    }\n    rowNodeAtPixelNow.setHighlighted(highlight);\n    this.lastHighlightedRow = rowNodeAtPixelNow;\n  }\n  getHighlightPosition(pixel, rowNode) {\n    if (!rowNode) {\n      const index = this.getRowIndexAtPixel(pixel);\n      rowNode = this.getRow(index || 0);\n      if (!rowNode) {\n        return 1 /* Below */;\n      }\n    }\n    const {\n      rowTop,\n      rowHeight\n    } = rowNode;\n    return pixel - rowTop < rowHeight / 2 ? 0 /* Above */ : 1 /* Below */;\n  }\n  getLastHighlightedRowNode() {\n    return this.lastHighlightedRow;\n  }\n  isLastRowIndexKnown() {\n    return true;\n  }\n  getRowCount() {\n    if (this.rowsToDisplay) {\n      return this.rowsToDisplay.length;\n    }\n    return 0;\n  }\n  getTopLevelRowCount() {\n    const showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;\n    if (showingRootNode) {\n      return 1;\n    }\n    const totalFooterInc = this.rootNode.sibling ? 1 : 0;\n    const filteredChildren = this.rootNode.childrenAfterAggFilter;\n    return (filteredChildren ? filteredChildren.length : 0) + totalFooterInc;\n  }\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\n    const showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;\n    if (showingRootNode) {\n      return topLevelIndex;\n    }\n    let adjustedIndex = topLevelIndex;\n    if (this.rowsToDisplay[0].footer) {\n      if (topLevelIndex === 0) {\n        return 0;\n      }\n      adjustedIndex -= 1;\n    }\n    let rowNode = this.rootNode.childrenAfterSort[adjustedIndex];\n    if (this.gos.get(\"groupHideOpenParents\")) {\n      while (rowNode.expanded && rowNode.childrenAfterSort && rowNode.childrenAfterSort.length > 0) {\n        rowNode = rowNode.childrenAfterSort[0];\n      }\n    }\n    return rowNode.rowIndex;\n  }\n  getRowBounds(index) {\n    if (_missing(this.rowsToDisplay)) {\n      return null;\n    }\n    const rowNode = this.rowsToDisplay[index];\n    if (rowNode) {\n      return {\n        rowTop: rowNode.rowTop,\n        rowHeight: rowNode.rowHeight\n      };\n    }\n    return null;\n  }\n  onRowGroupOpened() {\n    const animate = this.gos.isAnimateRows();\n    this.refreshModel({\n      step: \"map\" /* MAP */,\n      keepRenderedRows: true,\n      animate\n    });\n  }\n  onFilterChanged(event) {\n    if (event.afterDataChange) {\n      return;\n    }\n    const animate = this.gos.isAnimateRows();\n    const primaryOrQuickFilterChanged = event.columns.length === 0 || event.columns.some(col => col.isPrimary());\n    const step = primaryOrQuickFilterChanged ? \"filter\" /* FILTER */ : \"filter_aggregates\" /* FILTER_AGGREGATES */;\n    this.refreshModel({\n      step,\n      keepRenderedRows: true,\n      animate\n    });\n  }\n  onSortChanged() {\n    const animate = this.gos.isAnimateRows();\n    this.refreshModel({\n      step: \"sort\" /* SORT */,\n      keepRenderedRows: true,\n      animate,\n      keepEditingRows: true\n    });\n  }\n  getType() {\n    return \"clientSide\";\n  }\n  onValueChanged() {\n    if (this.columnModel.isPivotActive()) {\n      this.refreshModel({\n        step: \"pivot\" /* PIVOT */\n      });\n    } else {\n      this.refreshModel({\n        step: \"aggregate\" /* AGGREGATE */\n      });\n    }\n  }\n  createChangePath(rowNodeTransactions) {\n    const noTransactions = _missingOrEmpty(rowNodeTransactions);\n    const changedPath = new ChangedPath(false, this.rootNode);\n    if (noTransactions || this.gos.get(\"treeData\")) {\n      changedPath.setInactive();\n    }\n    return changedPath;\n  }\n  isSuppressModelUpdateAfterUpdateTransaction(params) {\n    if (!this.gos.get(\"suppressModelUpdateAfterUpdateTransaction\")) {\n      return false;\n    }\n    if (params.rowNodeTransactions == null) {\n      return false;\n    }\n    const transWithAddsOrDeletes = params.rowNodeTransactions.filter(tx => tx.add != null && tx.add.length > 0 || tx.remove != null && tx.remove.length > 0);\n    const transactionsContainUpdatesOnly = transWithAddsOrDeletes == null || transWithAddsOrDeletes.length == 0;\n    return transactionsContainUpdatesOnly;\n  }\n  buildRefreshModelParams(step) {\n    let paramsStep = \"group\" /* EVERYTHING */;\n    const stepsMapped = {\n      everything: \"group\" /* EVERYTHING */,\n      group: \"group\" /* EVERYTHING */,\n      filter: \"filter\" /* FILTER */,\n      map: \"map\" /* MAP */,\n      aggregate: \"aggregate\" /* AGGREGATE */,\n      sort: \"sort\" /* SORT */,\n      pivot: \"pivot\" /* PIVOT */\n    };\n    if (_exists(step)) {\n      paramsStep = stepsMapped[step];\n    }\n    if (_missing(paramsStep)) {\n      _errorOnce(`invalid step ${step}, available steps are ${Object.keys(stepsMapped).join(\", \")}`);\n      return void 0;\n    }\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    const modelParams = {\n      step: paramsStep,\n      keepRenderedRows: true,\n      keepEditingRows: true,\n      animate\n    };\n    return modelParams;\n  }\n  refreshModel(paramsOrStep) {\n    if (!this.hasStarted || this.isRefreshingModel || this.columnModel.isChangeEventsDispatching()) {\n      return;\n    }\n    const params = typeof paramsOrStep === \"object\" && \"step\" in paramsOrStep ? paramsOrStep : this.buildRefreshModelParams(paramsOrStep);\n    if (!params) {\n      return;\n    }\n    if (this.isSuppressModelUpdateAfterUpdateTransaction(params)) {\n      return;\n    }\n    const changedPath = this.createChangePath(params.rowNodeTransactions);\n    this.isRefreshingModel = true;\n    switch (params.step) {\n      case \"group\" /* EVERYTHING */:\n        this.doRowGrouping(params.rowNodeTransactions, params.rowNodeOrder, changedPath, !!params.afterColumnsChanged);\n      case \"filter\" /* FILTER */:\n        this.doFilter(changedPath);\n      case \"pivot\" /* PIVOT */:\n        this.doPivot(changedPath);\n      case \"aggregate\" /* AGGREGATE */:\n        this.doAggregate(changedPath);\n      case \"filter_aggregates\" /* FILTER_AGGREGATES */:\n        this.doFilterAggregates(changedPath);\n      case \"sort\" /* SORT */:\n        this.doSort(params.rowNodeTransactions, changedPath);\n      case \"map\" /* MAP */:\n        this.doRowsToDisplay();\n    }\n    const displayedNodesMapped = this.setRowTopAndRowIndex();\n    this.clearRowTopAndRowIndex(changedPath, displayedNodesMapped);\n    this.isRefreshingModel = false;\n    const event = {\n      type: \"modelUpdated\",\n      animate: params.animate,\n      keepRenderedRows: params.keepRenderedRows,\n      newData: params.newData,\n      newPage: false,\n      keepUndoRedoStack: params.keepUndoRedoStack\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  isEmpty() {\n    const rowsMissing = _missing(this.rootNode.allLeafChildren) || this.rootNode.allLeafChildren.length === 0;\n    return _missing(this.rootNode) || rowsMissing || !this.columnModel.isReady();\n  }\n  isRowsToRender() {\n    return _exists(this.rowsToDisplay) && this.rowsToDisplay.length > 0;\n  }\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\n    let started = false;\n    let finished = false;\n    const result = [];\n    const groupsSelectChildren = this.gos.get(\"groupSelectsChildren\");\n    this.forEachNodeAfterFilterAndSort(rowNode => {\n      if (finished) {\n        return;\n      }\n      if (started) {\n        if (rowNode === lastInRange || rowNode === firstInRange) {\n          finished = true;\n          if (rowNode.group && groupsSelectChildren) {\n            result.push(...rowNode.allLeafChildren);\n            return;\n          }\n        }\n      }\n      if (!started) {\n        if (rowNode !== lastInRange && rowNode !== firstInRange) {\n          return;\n        }\n        started = true;\n      }\n      const includeThisNode = !rowNode.group || !groupsSelectChildren;\n      if (includeThisNode) {\n        result.push(rowNode);\n        return;\n      }\n    });\n    return result;\n  }\n  // eslint-disable-next-line\n  setDatasource(datasource) {\n    _errorOnce(\"should never call setDatasource on clientSideRowController\");\n  }\n  getTopLevelNodes() {\n    return this.rootNode ? this.rootNode.childrenAfterGroup : null;\n  }\n  getRootNode() {\n    return this.rootNode;\n  }\n  getRow(index) {\n    return this.rowsToDisplay[index];\n  }\n  isRowPresent(rowNode) {\n    return this.rowsToDisplay.indexOf(rowNode) >= 0;\n  }\n  getRowIndexAtPixel(pixelToMatch) {\n    if (this.isEmpty() || this.rowsToDisplay.length === 0) {\n      return -1;\n    }\n    let bottomPointer = 0;\n    let topPointer = this.rowsToDisplay.length - 1;\n    if (pixelToMatch <= 0) {\n      return 0;\n    }\n    const lastNode = _last(this.rowsToDisplay);\n    if (lastNode.rowTop <= pixelToMatch) {\n      return this.rowsToDisplay.length - 1;\n    }\n    let oldBottomPointer = -1;\n    let oldTopPointer = -1;\n    while (true) {\n      const midPointer = Math.floor((bottomPointer + topPointer) / 2);\n      const currentRowNode = this.rowsToDisplay[midPointer];\n      if (this.isRowInPixel(currentRowNode, pixelToMatch)) {\n        return midPointer;\n      }\n      if (currentRowNode.rowTop < pixelToMatch) {\n        bottomPointer = midPointer + 1;\n      } else if (currentRowNode.rowTop > pixelToMatch) {\n        topPointer = midPointer - 1;\n      }\n      const caughtInInfiniteLoop = oldBottomPointer === bottomPointer && oldTopPointer === topPointer;\n      if (caughtInInfiniteLoop) {\n        return midPointer;\n      }\n      oldBottomPointer = bottomPointer;\n      oldTopPointer = topPointer;\n    }\n  }\n  isRowInPixel(rowNode, pixelToMatch) {\n    const topPixel = rowNode.rowTop;\n    const bottomPixel = rowNode.rowTop + rowNode.rowHeight;\n    const pixelInRow = topPixel <= pixelToMatch && bottomPixel > pixelToMatch;\n    return pixelInRow;\n  }\n  forEachLeafNode(callback) {\n    if (this.rootNode.allLeafChildren) {\n      this.rootNode.allLeafChildren.forEach((rowNode, index) => callback(rowNode, index));\n    }\n  }\n  forEachNode(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [...(this.rootNode.childrenAfterGroup || [])],\n      callback,\n      recursionType: 0 /* Normal */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  forEachNodeAfterFilter(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [...(this.rootNode.childrenAfterAggFilter || [])],\n      callback,\n      recursionType: 1 /* AfterFilter */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  forEachNodeAfterFilterAndSort(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [...(this.rootNode.childrenAfterSort || [])],\n      callback,\n      recursionType: 2 /* AfterFilterAndSort */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  forEachPivotNode(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [this.rootNode],\n      callback,\n      recursionType: 3 /* PivotNodes */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  // iterates through each item in memory, and calls the callback function\n  // nodes - the rowNodes to traverse\n  // callback - the user provided callback\n  // recursion type - need this to know what child nodes to recurse, eg if looking at all nodes, or filtered notes etc\n  // index - works similar to the index in forEach in javascript's array function\n  recursivelyWalkNodesAndCallback(params) {\n    const {\n      nodes,\n      callback,\n      recursionType,\n      includeFooterNodes\n    } = params;\n    let {\n      index\n    } = params;\n    const addFooters = position => {\n      const parentNode = nodes[0]?.parent;\n      if (!parentNode) return;\n      const grandTotal = includeFooterNodes && this.gos.getGrandTotalRow();\n      const isGroupIncludeFooter = this.gos.getGroupTotalRowCallback();\n      const groupTotal = includeFooterNodes && isGroupIncludeFooter({\n        node: parentNode\n      });\n      const isRootNode = parentNode === this.rootNode;\n      if (isRootNode) {\n        if (grandTotal === position) {\n          parentNode.createFooter();\n          callback(parentNode.sibling, index++);\n        }\n        return;\n      }\n      if (groupTotal === position) {\n        parentNode.createFooter();\n        callback(parentNode.sibling, index++);\n      }\n    };\n    addFooters(\"top\");\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      callback(node, index++);\n      if (node.hasChildren() && !node.footer) {\n        let nodeChildren = null;\n        switch (recursionType) {\n          case 0 /* Normal */:\n            nodeChildren = node.childrenAfterGroup;\n            break;\n          case 1 /* AfterFilter */:\n            nodeChildren = node.childrenAfterAggFilter;\n            break;\n          case 2 /* AfterFilterAndSort */:\n            nodeChildren = node.childrenAfterSort;\n            break;\n          case 3 /* PivotNodes */:\n            nodeChildren = !node.leafGroup ? node.childrenAfterSort : null;\n            break;\n        }\n        if (nodeChildren) {\n          index = this.recursivelyWalkNodesAndCallback({\n            nodes: [...nodeChildren],\n            callback,\n            recursionType,\n            index,\n            includeFooterNodes\n          });\n        }\n      }\n    }\n    addFooters(\"bottom\");\n    return index;\n  }\n  // it's possible to recompute the aggregate without doing the other parts\n  // + api.refreshClientSideRowModel('aggregate')\n  doAggregate(changedPath) {\n    this.aggregationStage?.execute({\n      rowNode: this.rootNode,\n      changedPath\n    });\n  }\n  doFilterAggregates(changedPath) {\n    if (this.filterAggregatesStage) {\n      this.filterAggregatesStage.execute({\n        rowNode: this.rootNode,\n        changedPath\n      });\n    } else {\n      this.rootNode.childrenAfterAggFilter = this.rootNode.childrenAfterFilter;\n    }\n  }\n  // + gridApi.expandAll()\n  // + gridApi.collapseAll()\n  expandOrCollapseAll(expand) {\n    const usingTreeData = this.gos.get(\"treeData\");\n    const usingPivotMode = this.columnModel.isPivotActive();\n    const recursiveExpandOrCollapse = rowNodes => {\n      if (!rowNodes) {\n        return;\n      }\n      rowNodes.forEach(rowNode => {\n        const actionRow = () => {\n          rowNode.expanded = expand;\n          recursiveExpandOrCollapse(rowNode.childrenAfterGroup);\n        };\n        if (usingTreeData) {\n          const hasChildren = _exists(rowNode.childrenAfterGroup);\n          if (hasChildren) {\n            actionRow();\n          }\n          return;\n        }\n        if (usingPivotMode) {\n          const notLeafGroup = !rowNode.leafGroup;\n          if (notLeafGroup) {\n            actionRow();\n          }\n          return;\n        }\n        const isRowGroup = rowNode.group;\n        if (isRowGroup) {\n          actionRow();\n        }\n      });\n    };\n    if (this.rootNode) {\n      recursiveExpandOrCollapse(this.rootNode.childrenAfterGroup);\n    }\n    this.refreshModel({\n      step: \"map\" /* MAP */\n    });\n    const eventSource = expand ? \"expandAll\" : \"collapseAll\";\n    const event = {\n      type: \"expandOrCollapseAll\",\n      source: eventSource\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  doSort(rowNodeTransactions, changedPath) {\n    this.sortStage.execute({\n      rowNode: this.rootNode,\n      rowNodeTransactions,\n      changedPath\n    });\n  }\n  doRowGrouping(rowNodeTransactions, rowNodeOrder, changedPath, afterColumnsChanged) {\n    if (this.groupStage) {\n      if (rowNodeTransactions) {\n        this.groupStage.execute({\n          rowNode: this.rootNode,\n          rowNodeTransactions,\n          rowNodeOrder,\n          changedPath\n        });\n      } else {\n        this.groupStage.execute({\n          rowNode: this.rootNode,\n          changedPath,\n          afterColumnsChanged\n        });\n      }\n      if (this.gos.get(\"groupSelectsChildren\")) {\n        const selectionChanged = this.selectionService.updateGroupsFromChildrenSelections(\"rowGroupChanged\", changedPath);\n        if (selectionChanged) {\n          const event = {\n            type: \"selectionChanged\",\n            source: \"rowGroupChanged\"\n          };\n          this.eventService.dispatchEvent(event);\n        }\n      }\n    } else {\n      this.rootNode.childrenAfterGroup = this.rootNode.allLeafChildren;\n      if (this.rootNode.sibling) {\n        this.rootNode.sibling.childrenAfterGroup = this.rootNode.childrenAfterGroup;\n      }\n      this.rootNode.updateHasChildren();\n    }\n    if (this.nodeManager.isRowCountReady()) {\n      this.rowCountReady = true;\n      this.eventService.dispatchEventOnce({\n        type: \"rowCountReady\"\n      });\n    }\n  }\n  doFilter(changedPath) {\n    this.filterStage.execute({\n      rowNode: this.rootNode,\n      changedPath\n    });\n  }\n  doPivot(changedPath) {\n    this.pivotStage?.execute({\n      rowNode: this.rootNode,\n      changedPath\n    });\n  }\n  getCopyOfNodesMap() {\n    return this.nodeManager.getCopyOfNodesMap();\n  }\n  getRowNode(id) {\n    const idIsGroup = typeof id == \"string\" && id.indexOf(RowNode.ID_PREFIX_ROW_GROUP) == 0;\n    if (idIsGroup) {\n      let res = void 0;\n      this.forEachNode(node => {\n        if (node.id === id) {\n          res = node;\n        }\n      });\n      return res;\n    }\n    return this.nodeManager.getRowNode(id);\n  }\n  // rows: the rows to put into the model\n  setRowData(rowData) {\n    this.selectionService.reset(\"rowDataChanged\");\n    this.nodeManager.setRowData(rowData);\n    if (this.hasStarted) {\n      this.dispatchUpdateEventsAndRefresh();\n    }\n  }\n  dispatchUpdateEventsAndRefresh() {\n    const rowDataUpdatedEvent = {\n      type: \"rowDataUpdated\"\n    };\n    this.eventService.dispatchEvent(rowDataUpdatedEvent);\n    this.refreshModel({\n      step: \"group\" /* EVERYTHING */,\n      newData: true\n    });\n  }\n  batchUpdateRowData(rowDataTransaction, callback) {\n    if (this.applyAsyncTransactionsTimeout == null) {\n      this.rowDataTransactionBatch = [];\n      const waitMillis = this.gos.getAsyncTransactionWaitMillis();\n      this.applyAsyncTransactionsTimeout = window.setTimeout(() => {\n        this.executeBatchUpdateRowData();\n      }, waitMillis);\n    }\n    this.rowDataTransactionBatch.push({\n      rowDataTransaction,\n      callback\n    });\n  }\n  flushAsyncTransactions() {\n    if (this.applyAsyncTransactionsTimeout != null) {\n      clearTimeout(this.applyAsyncTransactionsTimeout);\n      this.executeBatchUpdateRowData();\n    }\n  }\n  executeBatchUpdateRowData() {\n    this.valueCache.onDataChanged();\n    const callbackFuncsBound = [];\n    const rowNodeTrans = [];\n    let forceRowNodeOrder = false;\n    if (this.rowDataTransactionBatch) {\n      this.rowDataTransactionBatch.forEach(tranItem => {\n        const rowNodeTran = this.nodeManager.updateRowData(tranItem.rowDataTransaction, void 0);\n        rowNodeTrans.push(rowNodeTran);\n        if (tranItem.callback) {\n          callbackFuncsBound.push(tranItem.callback.bind(null, rowNodeTran));\n        }\n        if (typeof tranItem.rowDataTransaction.addIndex === \"number\") {\n          forceRowNodeOrder = true;\n        }\n      });\n    }\n    this.commonUpdateRowData(rowNodeTrans, void 0, forceRowNodeOrder);\n    if (callbackFuncsBound.length > 0) {\n      window.setTimeout(() => {\n        callbackFuncsBound.forEach(func => func());\n      }, 0);\n    }\n    if (rowNodeTrans.length > 0) {\n      const event = {\n        type: \"asyncTransactionsFlushed\",\n        results: rowNodeTrans\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    this.rowDataTransactionBatch = null;\n    this.applyAsyncTransactionsTimeout = void 0;\n  }\n  updateRowData(rowDataTran, rowNodeOrder) {\n    this.valueCache.onDataChanged();\n    const rowNodeTran = this.nodeManager.updateRowData(rowDataTran, rowNodeOrder);\n    const forceRowNodeOrder = typeof rowDataTran.addIndex === \"number\";\n    this.commonUpdateRowData([rowNodeTran], rowNodeOrder, forceRowNodeOrder);\n    return rowNodeTran;\n  }\n  createRowNodeOrder() {\n    const suppressSortOrder = this.gos.get(\"suppressMaintainUnsortedOrder\");\n    if (suppressSortOrder) {\n      return;\n    }\n    const orderMap = {};\n    if (this.rootNode && this.rootNode.allLeafChildren) {\n      for (let index = 0; index < this.rootNode.allLeafChildren.length; index++) {\n        const node = this.rootNode.allLeafChildren[index];\n        orderMap[node.id] = index;\n      }\n    }\n    return orderMap;\n  }\n  // common to updateRowData and batchUpdateRowData\n  commonUpdateRowData(rowNodeTrans, rowNodeOrder, forceRowNodeOrder) {\n    if (!this.hasStarted) {\n      return;\n    }\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    if (forceRowNodeOrder) {\n      rowNodeOrder = this.createRowNodeOrder();\n    }\n    const event = {\n      type: \"rowDataUpdated\"\n    };\n    this.eventService.dispatchEvent(event);\n    this.refreshModel({\n      step: \"group\" /* EVERYTHING */,\n      rowNodeTransactions: rowNodeTrans,\n      rowNodeOrder,\n      keepRenderedRows: true,\n      keepEditingRows: true,\n      animate\n    });\n  }\n  doRowsToDisplay() {\n    this.rowsToDisplay = this.flattenStage.execute({\n      rowNode: this.rootNode\n    });\n  }\n  onRowHeightChanged() {\n    this.refreshModel({\n      step: \"map\" /* MAP */,\n      keepRenderedRows: true,\n      keepEditingRows: true,\n      keepUndoRedoStack: true\n    });\n  }\n  /** This method is debounced. It is used for row auto-height. If we don't debounce,\n   * then the Row Models will end up recalculating each row position\n   * for each row height change and result in the Row Renderer laying out rows.\n   * This is particularly bad if using print layout, and showing eg 1,000 rows,\n   * each row will change it's height, causing Row Model to update 1,000 times.\n   */\n  onRowHeightChangedDebounced() {\n    this.onRowHeightChanged_debounced();\n  }\n  resetRowHeights() {\n    const atLeastOne = this.resetRowHeightsForAllRowNodes();\n    this.rootNode.setRowHeight(this.rootNode.rowHeight, true);\n    if (this.rootNode.sibling) {\n      this.rootNode.sibling.setRowHeight(this.rootNode.sibling.rowHeight, true);\n    }\n    if (atLeastOne) {\n      this.onRowHeightChanged();\n    }\n  }\n  resetRowHeightsForAllRowNodes() {\n    let atLeastOne = false;\n    this.forEachNode(rowNode => {\n      rowNode.setRowHeight(rowNode.rowHeight, true);\n      const detailNode = rowNode.detailNode;\n      if (detailNode) {\n        detailNode.setRowHeight(detailNode.rowHeight, true);\n      }\n      if (rowNode.sibling) {\n        rowNode.sibling.setRowHeight(rowNode.sibling.rowHeight, true);\n      }\n      atLeastOne = true;\n    });\n    return atLeastOne;\n  }\n  onGridStylesChanges(e) {\n    if (e.rowHeightChanged) {\n      if (this.columnModel.isAutoRowHeightActive()) {\n        return;\n      }\n      this.resetRowHeights();\n    }\n  }\n  onGridReady() {\n    if (this.hasStarted) {\n      return;\n    }\n    this.setInitialData();\n  }\n  isRowDataLoaded() {\n    return this.rowCountReady;\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/clientSideRowModelApi.ts\nfunction onGroupExpandedOrCollapsed(beans) {\n  beans.expansionService.onGroupExpandedOrCollapsed();\n}\nfunction refreshClientSideRowModel(beans, step) {\n  beans.rowModelHelperService?.getClientSideRowModel()?.refreshModel(step);\n}\nfunction forEachLeafNode(beans, callback) {\n  beans.rowModelHelperService?.getClientSideRowModel()?.forEachLeafNode(callback);\n}\nfunction forEachNodeAfterFilter(beans, callback) {\n  beans.rowModelHelperService?.getClientSideRowModel()?.forEachNodeAfterFilter(callback);\n}\nfunction forEachNodeAfterFilterAndSort(beans, callback) {\n  beans.rowModelHelperService?.getClientSideRowModel()?.forEachNodeAfterFilterAndSort(callback);\n}\nfunction resetRowHeights(beans) {\n  if (beans.columnModel.isAutoRowHeightActive()) {\n    _warnOnce(\"calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.\");\n    return;\n  }\n  beans.rowModelHelperService?.getClientSideRowModel()?.resetRowHeights();\n}\nfunction applyTransaction(beans, rowDataTransaction) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.rowModelHelperService?.getClientSideRowModel()?.updateRowData(rowDataTransaction));\n}\nfunction applyTransactionAsync(beans, rowDataTransaction, callback) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowModelHelperService?.getClientSideRowModel()?.batchUpdateRowData(rowDataTransaction, callback));\n}\nfunction flushAsyncTransactions(beans) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowModelHelperService?.getClientSideRowModel()?.flushAsyncTransactions());\n}\nfunction getBestCostNodeSelection(beans) {\n  return beans.selectionService.getBestCostNodeSelection();\n}\n\n// community-modules/client-side-row-model/src/clientSideRowModel/filterStage.ts\nvar FilterStage = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterStage\";\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n  }\n  execute(params) {\n    const {\n      changedPath\n    } = params;\n    this.filter(changedPath);\n  }\n  filter(changedPath) {\n    const filterActive = !!this.filterManager?.isChildFilterPresent();\n    this.filterNodes(filterActive, changedPath);\n  }\n  filterNodes(filterActive, changedPath) {\n    const filterCallback = (rowNode, includeChildNodes) => {\n      if (rowNode.hasChildren()) {\n        if (filterActive && !includeChildNodes) {\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup.filter(childNode => {\n            const passBecauseChildren = childNode.childrenAfterFilter && childNode.childrenAfterFilter.length > 0;\n            const passBecauseDataPasses = childNode.data && this.filterManager.doesRowPassFilter({\n              rowNode: childNode\n            });\n            return passBecauseChildren || passBecauseDataPasses;\n          });\n        } else {\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n        }\n      } else {\n        rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n      }\n      if (rowNode.sibling) {\n        rowNode.sibling.childrenAfterFilter = rowNode.childrenAfterFilter;\n      }\n    };\n    if (this.doingTreeDataFiltering()) {\n      const treeDataDepthFirstFilter = (rowNode, alreadyFoundInParent) => {\n        if (rowNode.childrenAfterGroup) {\n          for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n            const childNode = rowNode.childrenAfterGroup[i];\n            const foundInParent = alreadyFoundInParent || this.filterManager.doesRowPassFilter({\n              rowNode: childNode\n            });\n            if (childNode.childrenAfterGroup) {\n              treeDataDepthFirstFilter(rowNode.childrenAfterGroup[i], foundInParent);\n            } else {\n              filterCallback(childNode, foundInParent);\n            }\n          }\n        }\n        filterCallback(rowNode, alreadyFoundInParent);\n      };\n      const treeDataFilterCallback = rowNode => treeDataDepthFirstFilter(rowNode, false);\n      changedPath.executeFromRootNode(treeDataFilterCallback);\n    } else {\n      const defaultFilterCallback = rowNode => filterCallback(rowNode, false);\n      changedPath.forEachChangedNodeDepthFirst(defaultFilterCallback, true);\n    }\n  }\n  doingTreeDataFiltering() {\n    return this.gos.get(\"treeData\") && !this.gos.get(\"excludeChildrenWhenTreeDataFiltering\");\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/flattenStage.ts\nvar FlattenStage = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"flattenStage\";\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n    this.columnModel = beans.columnModel;\n  }\n  execute(params) {\n    const rootNode = params.rowNode;\n    const result = [];\n    const skipLeafNodes = this.columnModel.isPivotMode();\n    const showRootNode = skipLeafNodes && rootNode.leafGroup;\n    const topList = showRootNode ? [rootNode] : rootNode.childrenAfterSort;\n    const details = this.getFlattenDetails();\n    this.recursivelyAddToRowsToDisplay(details, topList, result, skipLeafNodes, 0);\n    const atLeastOneRowPresent = result.length > 0;\n    const includeGrandTotalRow = !showRootNode &&\n    // don't show total footer when showRootNode is true (i.e. in pivot mode and no groups)\n    atLeastOneRowPresent && details.grandTotalRow;\n    if (includeGrandTotalRow) {\n      rootNode.createFooter();\n      const addToTop = details.grandTotalRow === \"top\";\n      this.addRowNodeToRowsToDisplay(details, rootNode.sibling, result, 0, addToTop);\n    }\n    return result;\n  }\n  getFlattenDetails() {\n    const groupRemoveSingleChildren = this.gos.get(\"groupRemoveSingleChildren\");\n    const groupRemoveLowestSingleChildren = !groupRemoveSingleChildren && this.gos.get(\"groupRemoveLowestSingleChildren\");\n    return {\n      groupRemoveLowestSingleChildren,\n      groupRemoveSingleChildren,\n      isGroupMultiAutoColumn: this.gos.isGroupMultiAutoColumn(),\n      hideOpenParents: this.gos.get(\"groupHideOpenParents\"),\n      grandTotalRow: this.gos.getGrandTotalRow(),\n      groupTotalRow: this.gos.getGroupTotalRowCallback()\n    };\n  }\n  recursivelyAddToRowsToDisplay(details, rowsToFlatten, result, skipLeafNodes, uiLevel) {\n    if (_missingOrEmpty(rowsToFlatten)) {\n      return;\n    }\n    for (let i = 0; i < rowsToFlatten.length; i++) {\n      const rowNode = rowsToFlatten[i];\n      const isParent = rowNode.hasChildren();\n      const isSkippedLeafNode = skipLeafNodes && !isParent;\n      const isRemovedSingleChildrenGroup = details.groupRemoveSingleChildren && isParent && rowNode.childrenAfterGroup.length === 1;\n      const isRemovedLowestSingleChildrenGroup = details.groupRemoveLowestSingleChildren && isParent && rowNode.leafGroup && rowNode.childrenAfterGroup.length === 1;\n      const neverAllowToExpand = skipLeafNodes && rowNode.leafGroup;\n      const isHiddenOpenParent = details.hideOpenParents && rowNode.expanded && !rowNode.master && !neverAllowToExpand;\n      const thisRowShouldBeRendered = !isSkippedLeafNode && !isHiddenOpenParent && !isRemovedSingleChildrenGroup && !isRemovedLowestSingleChildrenGroup;\n      if (thisRowShouldBeRendered) {\n        this.addRowNodeToRowsToDisplay(details, rowNode, result, uiLevel);\n      }\n      if (skipLeafNodes && rowNode.leafGroup) {\n        continue;\n      }\n      if (isParent) {\n        const excludedParent = isRemovedSingleChildrenGroup || isRemovedLowestSingleChildrenGroup;\n        if (rowNode.expanded || excludedParent) {\n          const doesRowShowFooter = details.groupTotalRow({\n            node: rowNode\n          });\n          if (!doesRowShowFooter) {\n            rowNode.destroyFooter();\n          }\n          const uiLevelForChildren = excludedParent ? uiLevel : uiLevel + 1;\n          if (doesRowShowFooter === \"top\") {\n            rowNode.createFooter();\n            this.addRowNodeToRowsToDisplay(details, rowNode.sibling, result, uiLevelForChildren);\n          }\n          this.recursivelyAddToRowsToDisplay(details, rowNode.childrenAfterSort, result, skipLeafNodes, uiLevelForChildren);\n          if (doesRowShowFooter === \"bottom\") {\n            rowNode.createFooter();\n            this.addRowNodeToRowsToDisplay(details, rowNode.sibling, result, uiLevelForChildren);\n          }\n        }\n      } else if (rowNode.master && rowNode.expanded) {\n        const detailNode = this.createDetailNode(rowNode);\n        this.addRowNodeToRowsToDisplay(details, detailNode, result, uiLevel);\n      }\n    }\n  }\n  // duplicated method, it's also in floatingRowModel\n  addRowNodeToRowsToDisplay(details, rowNode, result, uiLevel, addToTop) {\n    if (addToTop) {\n      result.unshift(rowNode);\n    } else {\n      result.push(rowNode);\n    }\n    rowNode.setUiLevel(details.isGroupMultiAutoColumn ? 0 : uiLevel);\n  }\n  createDetailNode(masterNode) {\n    if (_exists(masterNode.detailNode)) {\n      return masterNode.detailNode;\n    }\n    const detailNode = new RowNode(this.beans);\n    detailNode.detail = true;\n    detailNode.selectable = false;\n    detailNode.parent = masterNode;\n    if (_exists(masterNode.id)) {\n      detailNode.id = \"detail_\" + masterNode.id;\n    }\n    detailNode.data = masterNode.data;\n    detailNode.level = masterNode.level + 1;\n    masterNode.detailNode = detailNode;\n    return detailNode;\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/immutableService.ts\nvar ImmutableService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"immutableService\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.selectionService = beans.selectionService;\n  }\n  postConstruct() {\n    if (this.rowModel.getType() === \"clientSide\") {\n      this.clientSideRowModel = this.rowModel;\n      this.addManagedPropertyListener(\"rowData\", () => this.onRowDataUpdated());\n    }\n  }\n  isActive() {\n    const getRowIdProvided = this.gos.exists(\"getRowId\");\n    const resetRowDataOnUpdate = this.gos.get(\"resetRowDataOnUpdate\");\n    if (resetRowDataOnUpdate) {\n      return false;\n    }\n    return getRowIdProvided;\n  }\n  setRowData(rowData) {\n    const transactionAndMap = this.createTransactionForRowData(rowData);\n    if (!transactionAndMap) {\n      return;\n    }\n    const [transaction, orderIdMap] = transactionAndMap;\n    this.clientSideRowModel.updateRowData(transaction, orderIdMap);\n  }\n  // converts the setRowData() command to a transaction\n  createTransactionForRowData(rowData) {\n    if (_missing(this.clientSideRowModel)) {\n      _errorOnce(\"ImmutableService only works with ClientSideRowModel\");\n      return;\n    }\n    const getRowIdFunc = this.gos.getRowIdCallback();\n    if (getRowIdFunc == null) {\n      _errorOnce(\"ImmutableService requires getRowId() callback to be implemented, your row data needs IDs!\");\n      return;\n    }\n    const transaction = {\n      remove: [],\n      update: [],\n      add: []\n    };\n    const existingNodesMap = this.clientSideRowModel.getCopyOfNodesMap();\n    const suppressSortOrder = this.gos.get(\"suppressMaintainUnsortedOrder\");\n    const orderMap = suppressSortOrder ? void 0 : {};\n    if (_exists(rowData)) {\n      rowData.forEach((data, index) => {\n        const id = getRowIdFunc({\n          data,\n          level: 0\n        });\n        const existingNode = existingNodesMap[id];\n        if (orderMap) {\n          orderMap[id] = index;\n        }\n        if (existingNode) {\n          const dataHasChanged = existingNode.data !== data;\n          if (dataHasChanged) {\n            transaction.update.push(data);\n          }\n          existingNodesMap[id] = void 0;\n        } else {\n          transaction.add.push(data);\n        }\n      });\n    }\n    _iterateObject(existingNodesMap, (id, rowNode) => {\n      if (rowNode) {\n        transaction.remove.push(rowNode.data);\n      }\n    });\n    return [transaction, orderMap];\n  }\n  onRowDataUpdated() {\n    const rowData = this.gos.get(\"rowData\");\n    if (!rowData) {\n      return;\n    }\n    if (this.isActive()) {\n      this.setRowData(rowData);\n    } else {\n      this.selectionService.reset(\"rowDataChanged\");\n      this.clientSideRowModel.setRowData(rowData);\n    }\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/sortService.ts\nvar SortService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"sortService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.funcColsService = beans.funcColsService;\n    this.rowNodeSorter = beans.rowNodeSorter;\n    this.showRowGroupColsService = beans.showRowGroupColsService;\n  }\n  sort(sortOptions, sortActive, useDeltaSort, rowNodeTransactions, changedPath, sortContainsGroupColumns) {\n    const groupMaintainOrder = this.gos.get(\"groupMaintainOrder\");\n    const groupColumnsPresent = this.columnModel.getCols().some(c => c.isRowGroupActive());\n    let allDirtyNodes = {};\n    if (useDeltaSort && rowNodeTransactions) {\n      allDirtyNodes = this.calculateDirtyNodes(rowNodeTransactions);\n    }\n    const isPivotMode = this.columnModel.isPivotMode();\n    const postSortFunc = this.gos.getCallback(\"postSortRows\");\n    const callback = rowNode => {\n      this.pullDownGroupDataForHideOpenParents(rowNode.childrenAfterAggFilter, true);\n      const skipSortingPivotLeafs = isPivotMode && rowNode.leafGroup;\n      const skipSortingGroups = groupMaintainOrder && groupColumnsPresent && !rowNode.leafGroup && !sortContainsGroupColumns;\n      if (skipSortingGroups) {\n        const nextGroup = this.funcColsService.getRowGroupColumns()?.[rowNode.level + 1];\n        const wasSortExplicitlyRemoved = nextGroup?.getSort() === null;\n        const childrenToBeSorted = rowNode.childrenAfterAggFilter.slice(0);\n        if (rowNode.childrenAfterSort && !wasSortExplicitlyRemoved) {\n          const indexedOrders = {};\n          rowNode.childrenAfterSort.forEach((node, idx) => {\n            indexedOrders[node.id] = idx;\n          });\n          childrenToBeSorted.sort((row1, row2) => (indexedOrders[row1.id] ?? 0) - (indexedOrders[row2.id] ?? 0));\n        }\n        rowNode.childrenAfterSort = childrenToBeSorted;\n      } else if (!sortActive || skipSortingPivotLeafs) {\n        rowNode.childrenAfterSort = rowNode.childrenAfterAggFilter.slice(0);\n      } else if (useDeltaSort) {\n        rowNode.childrenAfterSort = this.doDeltaSort(rowNode, allDirtyNodes, changedPath, sortOptions);\n      } else {\n        rowNode.childrenAfterSort = this.rowNodeSorter.doFullSort(rowNode.childrenAfterAggFilter, sortOptions);\n      }\n      if (rowNode.sibling) {\n        rowNode.sibling.childrenAfterSort = rowNode.childrenAfterSort;\n      }\n      this.updateChildIndexes(rowNode);\n      if (postSortFunc) {\n        const params = {\n          nodes: rowNode.childrenAfterSort\n        };\n        postSortFunc(params);\n      }\n    };\n    if (changedPath) {\n      changedPath.forEachChangedNodeDepthFirst(callback);\n    }\n    this.updateGroupDataForHideOpenParents(changedPath);\n  }\n  calculateDirtyNodes(rowNodeTransactions) {\n    const dirtyNodes = {};\n    const addNodesFunc = rowNodes => {\n      if (rowNodes) {\n        rowNodes.forEach(rowNode => dirtyNodes[rowNode.id] = true);\n      }\n    };\n    if (rowNodeTransactions) {\n      rowNodeTransactions.forEach(tran => {\n        addNodesFunc(tran.add);\n        addNodesFunc(tran.update);\n        addNodesFunc(tran.remove);\n      });\n    }\n    return dirtyNodes;\n  }\n  doDeltaSort(rowNode, allTouchedNodes, changedPath, sortOptions) {\n    const unsortedRows = rowNode.childrenAfterAggFilter;\n    const oldSortedRows = rowNode.childrenAfterSort;\n    if (!oldSortedRows) {\n      return this.rowNodeSorter.doFullSort(unsortedRows, sortOptions);\n    }\n    const untouchedRowsMap = {};\n    const touchedRows = [];\n    unsortedRows.forEach(row => {\n      if (allTouchedNodes[row.id] || !changedPath.canSkip(row)) {\n        touchedRows.push(row);\n      } else {\n        untouchedRowsMap[row.id] = true;\n      }\n    });\n    const sortedUntouchedRows = oldSortedRows.filter(child => untouchedRowsMap[child.id]);\n    const mapNodeToSortedNode = (rowNode2, pos) => ({\n      currentPos: pos,\n      rowNode: rowNode2\n    });\n    const sortedChangedRows = touchedRows.map(mapNodeToSortedNode).sort((a, b) => this.rowNodeSorter.compareRowNodes(sortOptions, a, b));\n    return this.mergeSortedArrays(sortOptions, sortedChangedRows, sortedUntouchedRows.map(mapNodeToSortedNode)).map(({\n      rowNode: rowNode2\n    }) => rowNode2);\n  }\n  // Merge two sorted arrays into each other\n  mergeSortedArrays(sortOptions, arr1, arr2) {\n    const res = [];\n    let i = 0;\n    let j = 0;\n    while (i < arr1.length && j < arr2.length) {\n      const compareResult = this.rowNodeSorter.compareRowNodes(sortOptions, arr1[i], arr2[j]);\n      if (compareResult < 0) {\n        res.push(arr1[i++]);\n      } else {\n        res.push(arr2[j++]);\n      }\n    }\n    while (i < arr1.length) {\n      res.push(arr1[i++]);\n    }\n    while (j < arr2.length) {\n      res.push(arr2[j++]);\n    }\n    return res;\n  }\n  updateChildIndexes(rowNode) {\n    if (_missing(rowNode.childrenAfterSort)) {\n      return;\n    }\n    const listToSort = rowNode.childrenAfterSort;\n    for (let i = 0; i < listToSort.length; i++) {\n      const child = listToSort[i];\n      const firstChild = i === 0;\n      const lastChild = i === rowNode.childrenAfterSort.length - 1;\n      child.setFirstChild(firstChild);\n      child.setLastChild(lastChild);\n      child.setChildIndex(i);\n    }\n  }\n  updateGroupDataForHideOpenParents(changedPath) {\n    if (!this.gos.get(\"groupHideOpenParents\")) {\n      return;\n    }\n    if (this.gos.get(\"treeData\")) {\n      _warnOnce(`The property hideOpenParents dose not work with Tree Data. This is because Tree Data has values at the group level, it doesn't make sense to hide them.`);\n      return false;\n    }\n    const callback = rowNode => {\n      this.pullDownGroupDataForHideOpenParents(rowNode.childrenAfterSort, false);\n      rowNode.childrenAfterSort.forEach(child => {\n        if (child.hasChildren()) {\n          callback(child);\n        }\n      });\n    };\n    if (changedPath) {\n      changedPath.executeFromRootNode(rowNode => callback(rowNode));\n    }\n  }\n  pullDownGroupDataForHideOpenParents(rowNodes, clearOperation) {\n    if (!this.gos.get(\"groupHideOpenParents\") || _missing(rowNodes)) {\n      return;\n    }\n    rowNodes.forEach(childRowNode => {\n      const groupDisplayCols = this.showRowGroupColsService?.getShowRowGroupCols() ?? [];\n      groupDisplayCols.forEach(groupDisplayCol => {\n        const showRowGroup = groupDisplayCol.getColDef().showRowGroup;\n        if (typeof showRowGroup !== \"string\") {\n          _errorOnce(\"groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup\");\n          return;\n        }\n        const displayingGroupKey = showRowGroup;\n        const rowGroupColumn = this.columnModel.getColDefCol(displayingGroupKey);\n        const thisRowNodeMatches = rowGroupColumn === childRowNode.rowGroupColumn;\n        if (thisRowNodeMatches) {\n          return;\n        }\n        if (clearOperation) {\n          childRowNode.setGroupValue(groupDisplayCol.getId(), void 0);\n        } else {\n          const parentToStealFrom = childRowNode.getFirstChildOfFirstChild(rowGroupColumn);\n          if (parentToStealFrom) {\n            childRowNode.setGroupValue(groupDisplayCol.getId(), parentToStealFrom.key);\n          }\n        }\n      });\n    });\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/sortStage.ts\nvar SortStage = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"sortStage\";\n  }\n  wireBeans(beans) {\n    this.sortService = beans.sortService;\n    this.sortController = beans.sortController;\n  }\n  execute(params) {\n    const sortOptions = this.sortController.getSortOptions();\n    const sortActive = _exists(sortOptions) && sortOptions.length > 0;\n    const deltaSort = sortActive && _exists(params.rowNodeTransactions) &&\n    // in time we can remove this check, so that delta sort is always\n    // on if transactions are present. it's off for now so that we can\n    // selectively turn it on and test it with some select users before\n    // rolling out to everyone.\n    this.gos.get(\"deltaSort\");\n    const sortContainsGroupColumns = sortOptions.some(opt => {\n      const isSortingCoupled = this.gos.isColumnsSortingCoupledToGroup();\n      if (isSortingCoupled) {\n        return opt.column.isPrimary() && opt.column.isRowGroupActive();\n      }\n      return !!opt.column.getColDef().showRowGroup;\n    });\n    this.sortService.sort(sortOptions, sortActive, deltaSort, params.rowNodeTransactions, params.changedPath, sortContainsGroupColumns);\n  }\n};\n\n// community-modules/client-side-row-model/src/version.ts\nvar VERSION2 = \"32.0.1\";\n\n// community-modules/client-side-row-model/src/clientSideRowModelModule.ts\nvar ClientSideRowModelCoreModule = {\n  version: VERSION2,\n  moduleName: `${\"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */}-core`,\n  rowModel: \"clientSide\",\n  beans: [ClientSideRowModel, FilterStage, SortStage, FlattenStage, SortService, ImmutableService]\n};\nvar ClientSideRowModelApiModule = {\n  version: VERSION2,\n  moduleName: `${\"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */}-api`,\n  beans: [RowModelHelperService],\n  apiFunctions: {\n    onGroupExpandedOrCollapsed,\n    refreshClientSideRowModel,\n    forEachLeafNode,\n    forEachNodeAfterFilter,\n    forEachNodeAfterFilterAndSort,\n    resetRowHeights,\n    applyTransaction,\n    applyTransactionAsync,\n    flushAsyncTransactions,\n    getBestCostNodeSelection\n  },\n  dependantModules: [ClientSideRowModelCoreModule, CsrmSsrmSharedApiModule]\n};\nvar ClientSideRowModelModule = {\n  version: VERSION2,\n  moduleName: \"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */,\n  dependantModules: [ClientSideRowModelCoreModule, ClientSideRowModelApiModule]\n};\n\n// community-modules/csv-export/dist/package/main.esm.mjs\nvar BaseCreator = class extends BeanStub {\n  setBeans(beans) {\n    this.beans = beans;\n  }\n  getFileName(fileName) {\n    const extension = this.getDefaultFileExtension();\n    if (fileName == null || !fileName.length) {\n      fileName = this.getDefaultFileName();\n    }\n    return fileName.indexOf(\".\") === -1 ? `${fileName}.${extension}` : fileName;\n  }\n  getData(params) {\n    const serializingSession = this.createSerializingSession(params);\n    return this.beans.gridSerializer.serialize(serializingSession, params);\n  }\n  getDefaultFileName() {\n    return `export.${this.getDefaultFileExtension()}`;\n  }\n};\nvar BaseGridSerializingSession = class {\n  constructor(config) {\n    this.groupColumns = [];\n    const {\n      columnModel,\n      funcColsService,\n      columnNameService,\n      valueService,\n      gos,\n      processCellCallback,\n      processHeaderCallback,\n      processGroupHeaderCallback,\n      processRowGroupCallback\n    } = config;\n    this.columnModel = columnModel;\n    this.funcColsService = funcColsService;\n    this.columnNameService = columnNameService;\n    this.valueService = valueService;\n    this.gos = gos;\n    this.processCellCallback = processCellCallback;\n    this.processHeaderCallback = processHeaderCallback;\n    this.processGroupHeaderCallback = processGroupHeaderCallback;\n    this.processRowGroupCallback = processRowGroupCallback;\n  }\n  prepare(columnsToExport) {\n    this.groupColumns = columnsToExport.filter(col => !!col.getColDef().showRowGroup);\n  }\n  extractHeaderValue(column) {\n    const value = this.getHeaderName(this.processHeaderCallback, column);\n    return value ?? \"\";\n  }\n  extractRowCellValue(column, index, accumulatedRowIndex, type, node) {\n    const hideOpenParents = this.gos.get(\"groupHideOpenParents\");\n    const value = (!hideOpenParents || node.footer) && this.shouldRenderGroupSummaryCell(node, column, index) ? this.createValueForGroupNode(column, node) : this.valueService.getValue(column, node);\n    const processedValue = this.processCell({\n      accumulatedRowIndex,\n      rowNode: node,\n      column,\n      value,\n      processCellCallback: this.processCellCallback,\n      type\n    });\n    return processedValue;\n  }\n  shouldRenderGroupSummaryCell(node, column, currentColumnIndex) {\n    const isGroupNode = node && node.group;\n    if (!isGroupNode) {\n      return false;\n    }\n    const currentColumnGroupIndex = this.groupColumns.indexOf(column);\n    if (currentColumnGroupIndex !== -1) {\n      if (node.groupData?.[column.getId()] != null) {\n        return true;\n      }\n      if (this.gos.isRowModelType(\"serverSide\") && node.group) {\n        return true;\n      }\n      if (node.footer && node.level === -1) {\n        const colDef = column.getColDef();\n        const isFullWidth = colDef == null || colDef.showRowGroup === true;\n        return isFullWidth || colDef.showRowGroup === this.funcColsService.getRowGroupColumns()[0].getId();\n      }\n    }\n    const isGroupUseEntireRow = this.gos.isGroupUseEntireRow(this.columnModel.isPivotMode());\n    return currentColumnIndex === 0 && isGroupUseEntireRow;\n  }\n  getHeaderName(callback, column) {\n    if (callback) {\n      return callback(this.gos.addGridCommonParams({\n        column\n      }));\n    }\n    return this.columnNameService.getDisplayNameForColumn(column, \"csv\", true);\n  }\n  createValueForGroupNode(column, node) {\n    if (this.processRowGroupCallback) {\n      return this.processRowGroupCallback(this.gos.addGridCommonParams({\n        column,\n        node\n      }));\n    }\n    const isTreeData = this.gos.get(\"treeData\");\n    const isSuppressGroupMaintainValueType = this.gos.get(\"suppressGroupMaintainValueType\");\n    const getValueFromNode = node2 => {\n      if (isTreeData || isSuppressGroupMaintainValueType) {\n        return node2.key;\n      }\n      const value = node2.groupData?.[column.getId()];\n      if (!value || !node2.rowGroupColumn || node2.rowGroupColumn.getColDef().useValueFormatterForExport === false) {\n        return value;\n      }\n      return this.valueService.formatValue(node2.rowGroupColumn, node2, value) ?? value;\n    };\n    const isFooter = node.footer;\n    const keys = [getValueFromNode(node)];\n    if (!this.gos.isGroupMultiAutoColumn()) {\n      while (node.parent) {\n        node = node.parent;\n        keys.push(getValueFromNode(node));\n      }\n    }\n    const groupValue = keys.reverse().join(\" -> \");\n    return isFooter ? `Total ${groupValue}` : groupValue;\n  }\n  processCell(params) {\n    const {\n      accumulatedRowIndex,\n      rowNode,\n      column,\n      value,\n      processCellCallback,\n      type\n    } = params;\n    if (processCellCallback) {\n      return {\n        value: processCellCallback(this.gos.addGridCommonParams({\n          accumulatedRowIndex,\n          column,\n          node: rowNode,\n          value,\n          type,\n          parseValue: valueToParse => this.valueService.parseValue(column, rowNode, valueToParse, this.valueService.getValue(column, rowNode)),\n          formatValue: valueToFormat => this.valueService.formatValue(column, rowNode, valueToFormat) ?? valueToFormat\n        })) ?? \"\"\n      };\n    }\n    if (column.getColDef().useValueFormatterForExport !== false) {\n      return {\n        value: value ?? \"\",\n        valueFormatted: this.valueService.formatValue(column, rowNode, value)\n      };\n    }\n    return {\n      value: value ?? \"\"\n    };\n  }\n};\nvar Downloader = class {\n  static download(fileName, content) {\n    const win = document.defaultView || window;\n    if (!win) {\n      _warnOnce(\"There is no `window` associated with the current `document`\");\n      return;\n    }\n    const element = document.createElement(\"a\");\n    const url = win.URL.createObjectURL(content);\n    element.setAttribute(\"href\", url);\n    element.setAttribute(\"download\", fileName);\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n    element.dispatchEvent(new MouseEvent(\"click\", {\n      bubbles: false,\n      cancelable: true,\n      view: win\n    }));\n    document.body.removeChild(element);\n    win.setTimeout(() => {\n      win.URL.revokeObjectURL(url);\n    }, 0);\n  }\n};\nvar LINE_SEPARATOR = \"\\r\\n\";\nvar CsvSerializingSession = class extends BaseGridSerializingSession {\n  constructor(config) {\n    super(config);\n    this.isFirstLine = true;\n    this.result = \"\";\n    const {\n      suppressQuotes,\n      columnSeparator\n    } = config;\n    this.suppressQuotes = suppressQuotes;\n    this.columnSeparator = columnSeparator;\n  }\n  addCustomContent(content) {\n    if (!content) {\n      return;\n    }\n    if (typeof content === \"string\") {\n      if (!/^\\s*\\n/.test(content)) {\n        this.beginNewLine();\n      }\n      content = content.replace(/\\r?\\n/g, LINE_SEPARATOR);\n      this.result += content;\n    } else {\n      content.forEach(row => {\n        this.beginNewLine();\n        row.forEach((cell, index) => {\n          if (index !== 0) {\n            this.result += this.columnSeparator;\n          }\n          this.result += this.putInQuotes(cell.data.value || \"\");\n          if (cell.mergeAcross) {\n            this.appendEmptyCells(cell.mergeAcross);\n          }\n        });\n      });\n    }\n  }\n  onNewHeaderGroupingRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderGroupingRowColumn.bind(this)\n    };\n  }\n  onNewHeaderGroupingRowColumn(columnGroup, header, index, span) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    this.result += this.putInQuotes(header);\n    this.appendEmptyCells(span);\n  }\n  appendEmptyCells(count) {\n    for (let i = 1; i <= count; i++) {\n      this.result += this.columnSeparator + this.putInQuotes(\"\");\n    }\n  }\n  onNewHeaderRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderRowColumn.bind(this)\n    };\n  }\n  onNewHeaderRowColumn(column, index) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    this.result += this.putInQuotes(this.extractHeaderValue(column));\n  }\n  onNewBodyRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewBodyRowColumn.bind(this)\n    };\n  }\n  onNewBodyRowColumn(column, index, node) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    const rowCellValue = this.extractRowCellValue(column, index, index, \"csv\", node);\n    this.result += this.putInQuotes(rowCellValue.valueFormatted ?? rowCellValue.value);\n  }\n  putInQuotes(value) {\n    if (this.suppressQuotes) {\n      return value;\n    }\n    if (value === null || value === void 0) {\n      return '\"\"';\n    }\n    let stringValue;\n    if (typeof value === \"string\") {\n      stringValue = value;\n    } else if (typeof value.toString === \"function\") {\n      stringValue = value.toString();\n    } else {\n      _warnOnce(\"unknown value type during csv conversion\");\n      stringValue = \"\";\n    }\n    const valueEscaped = stringValue.replace(/\"/g, '\"\"');\n    return '\"' + valueEscaped + '\"';\n  }\n  parse() {\n    return this.result;\n  }\n  beginNewLine() {\n    if (!this.isFirstLine) {\n      this.result += LINE_SEPARATOR;\n    }\n    this.isFirstLine = false;\n  }\n};\nvar CsvCreator = class extends BaseCreator {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"csvCreator\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnNameService = beans.columnNameService;\n    this.funcColsService = beans.funcColsService;\n    this.valueService = beans.valueService;\n    this.gridSerializer = beans.gridSerializer;\n  }\n  postConstruct() {\n    this.setBeans({\n      gridSerializer: this.gridSerializer,\n      gos: this.gos\n    });\n  }\n  getMergedParams(params) {\n    const baseParams = this.gos.get(\"defaultCsvExportParams\");\n    return Object.assign({}, baseParams, params);\n  }\n  export(userParams) {\n    if (this.isExportSuppressed()) {\n      _warnOnce(`Export cancelled. Export is not allowed as per your configuration.`);\n      return;\n    }\n    const mergedParams = this.getMergedParams(userParams);\n    const data = this.getData(mergedParams);\n    const packagedFile = new Blob([\"\\uFEFF\", data], {\n      type: \"text/plain\"\n    });\n    const fileName = typeof mergedParams.fileName === \"function\" ? mergedParams.fileName(this.gos.getGridCommonParams()) : mergedParams.fileName;\n    Downloader.download(this.getFileName(fileName), packagedFile);\n  }\n  exportDataAsCsv(params) {\n    this.export(params);\n  }\n  getDataAsCsv(params, skipDefaultParams = false) {\n    const mergedParams = skipDefaultParams ? Object.assign({}, params) : this.getMergedParams(params);\n    return this.getData(mergedParams);\n  }\n  getDefaultFileExtension() {\n    return \"csv\";\n  }\n  createSerializingSession(params) {\n    const {\n      columnModel,\n      columnNameService,\n      funcColsService,\n      valueService,\n      gos\n    } = this;\n    const {\n      processCellCallback,\n      processHeaderCallback,\n      processGroupHeaderCallback,\n      processRowGroupCallback,\n      suppressQuotes,\n      columnSeparator\n    } = params;\n    return new CsvSerializingSession({\n      columnModel,\n      columnNameService,\n      funcColsService,\n      valueService,\n      gos,\n      processCellCallback: processCellCallback || void 0,\n      processHeaderCallback: processHeaderCallback || void 0,\n      processGroupHeaderCallback: processGroupHeaderCallback || void 0,\n      processRowGroupCallback: processRowGroupCallback || void 0,\n      suppressQuotes: suppressQuotes || false,\n      columnSeparator: columnSeparator || \",\"\n    });\n  }\n  isExportSuppressed() {\n    return this.gos.get(\"suppressCsvExport\");\n  }\n};\nfunction getDataAsCsv(beans, params) {\n  return beans.csvCreator?.getDataAsCsv(params);\n}\nfunction exportDataAsCsv(beans, params) {\n  beans.csvCreator?.exportDataAsCsv(params);\n}\nvar RowType = /* @__PURE__ */(RowType2 => {\n  RowType2[RowType2[\"HEADER_GROUPING\"] = 0] = \"HEADER_GROUPING\";\n  RowType2[RowType2[\"HEADER\"] = 1] = \"HEADER\";\n  RowType2[RowType2[\"BODY\"] = 2] = \"BODY\";\n  return RowType2;\n})(RowType || {});\nvar GridSerializer = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"gridSerializer\";\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n    this.columnModel = beans.columnModel;\n    this.columnNameService = beans.columnNameService;\n    this.rowModel = beans.rowModel;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.selectionService = beans.selectionService;\n    this.rowNodeSorter = beans.rowNodeSorter;\n    this.sortController = beans.sortController;\n  }\n  serialize(gridSerializingSession, params = {}) {\n    const {\n      allColumns,\n      columnKeys,\n      skipRowGroups\n    } = params;\n    const columnsToExport = this.getColumnsToExport(allColumns, skipRowGroups, columnKeys);\n    const serializeChain = _compose(\n    // first pass, put in the header names of the cols\n    this.prepareSession(columnsToExport), this.prependContent(params), this.exportColumnGroups(params, columnsToExport), this.exportHeaders(params, columnsToExport), this.processPinnedTopRows(params, columnsToExport), this.processRows(params, columnsToExport), this.processPinnedBottomRows(params, columnsToExport), this.appendContent(params));\n    return serializeChain(gridSerializingSession).parse();\n  }\n  processRow(gridSerializingSession, params, columnsToExport, node) {\n    const rowSkipper = params.shouldRowBeSkipped || (() => false);\n    const skipSingleChildrenGroup = this.gos.get(\"groupRemoveSingleChildren\");\n    const skipLowestSingleChildrenGroup = this.gos.get(\"groupRemoveLowestSingleChildren\");\n    const isClipboardExport = params.rowPositions != null;\n    const isExplicitExportSelection = isClipboardExport || !!params.onlySelected;\n    const hideOpenParents = this.gos.get(\"groupHideOpenParents\") && !isExplicitExportSelection;\n    const isLeafNode = this.columnModel.isPivotMode() ? node.leafGroup : !node.group;\n    const isFooter = !!node.footer;\n    const shouldSkipLowestGroup = skipLowestSingleChildrenGroup && node.leafGroup;\n    const shouldSkipCurrentGroup = node.allChildrenCount === 1 && node.childrenAfterGroup?.length === 1 && (skipSingleChildrenGroup || shouldSkipLowestGroup);\n    if (!isLeafNode && !isFooter && (params.skipRowGroups || shouldSkipCurrentGroup || hideOpenParents) || params.onlySelected && !node.isSelected() || params.skipPinnedTop && node.rowPinned === \"top\" || params.skipPinnedBottom && node.rowPinned === \"bottom\") {\n      return;\n    }\n    const nodeIsRootNode = node.level === -1;\n    if (nodeIsRootNode && !isLeafNode && !isFooter) {\n      return;\n    }\n    const shouldRowBeSkipped = rowSkipper(this.gos.addGridCommonParams({\n      node\n    }));\n    if (shouldRowBeSkipped) {\n      return;\n    }\n    const rowAccumulator = gridSerializingSession.onNewBodyRow(node);\n    columnsToExport.forEach((column, index) => {\n      rowAccumulator.onColumn(column, index, node);\n    });\n    if (params.getCustomContentBelowRow) {\n      const content = params.getCustomContentBelowRow(this.gos.addGridCommonParams({\n        node\n      }));\n      if (content) {\n        gridSerializingSession.addCustomContent(content);\n      }\n    }\n  }\n  appendContent(params) {\n    return gridSerializingSession => {\n      const appendContent = params.appendContent;\n      if (appendContent) {\n        gridSerializingSession.addCustomContent(appendContent);\n      }\n      return gridSerializingSession;\n    };\n  }\n  prependContent(params) {\n    return gridSerializingSession => {\n      const prependContent = params.prependContent;\n      if (prependContent) {\n        gridSerializingSession.addCustomContent(prependContent);\n      }\n      return gridSerializingSession;\n    };\n  }\n  prepareSession(columnsToExport) {\n    return gridSerializingSession => {\n      gridSerializingSession.prepare(columnsToExport);\n      return gridSerializingSession;\n    };\n  }\n  exportColumnGroups(params, columnsToExport) {\n    return gridSerializingSession => {\n      if (!params.skipColumnGroupHeaders) {\n        const idCreator = new GroupInstanceIdCreator();\n        const displayedGroups = this.visibleColsService.createGroups({\n          columns: columnsToExport,\n          idCreator,\n          pinned: null,\n          isStandaloneStructure: true\n        });\n        this.recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession, params.processGroupHeaderCallback);\n      }\n      return gridSerializingSession;\n    };\n  }\n  exportHeaders(params, columnsToExport) {\n    return gridSerializingSession => {\n      if (!params.skipColumnHeaders) {\n        const gridRowIterator = gridSerializingSession.onNewHeaderRow();\n        columnsToExport.forEach((column, index) => {\n          gridRowIterator.onColumn(column, index, void 0);\n        });\n      }\n      return gridSerializingSession;\n    };\n  }\n  processPinnedTopRows(params, columnsToExport) {\n    return gridSerializingSession => {\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      if (params.rowPositions) {\n        params.rowPositions.filter(position => position.rowPinned === \"top\").sort((a, b) => a.rowIndex - b.rowIndex).map(position => this.pinnedRowModel.getPinnedTopRow(position.rowIndex)).forEach(processRow);\n      } else {\n        this.pinnedRowModel.forEachPinnedTopRow(processRow);\n      }\n      return gridSerializingSession;\n    };\n  }\n  processRows(params, columnsToExport) {\n    return gridSerializingSession => {\n      const rowModel = this.rowModel;\n      const rowModelType = rowModel.getType();\n      const usingCsrm = rowModelType === \"clientSide\";\n      const usingSsrm = rowModelType === \"serverSide\";\n      const onlySelectedNonStandardModel = !usingCsrm && params.onlySelected;\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      const {\n        exportedRows = \"filteredAndSorted\"\n      } = params;\n      if (params.rowPositions) {\n        params.rowPositions.filter(position => position.rowPinned == null).sort((a, b) => a.rowIndex - b.rowIndex).map(position => rowModel.getRow(position.rowIndex)).forEach(processRow);\n      } else if (this.columnModel.isPivotMode()) {\n        if (usingCsrm) {\n          rowModel.forEachPivotNode(processRow, true);\n        } else if (usingSsrm) {\n          rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n        } else {\n          rowModel.forEachNode(processRow);\n        }\n      } else {\n        if (params.onlySelectedAllPages || onlySelectedNonStandardModel) {\n          const selectedNodes = this.selectionService.getSelectedNodes();\n          this.replicateSortedOrder(selectedNodes);\n          selectedNodes.forEach(processRow);\n        } else {\n          if (exportedRows === \"all\") {\n            rowModel.forEachNode(processRow);\n          } else if (usingCsrm) {\n            rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n          } else if (usingSsrm) {\n            rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n          } else {\n            rowModel.forEachNode(processRow);\n          }\n        }\n      }\n      return gridSerializingSession;\n    };\n  }\n  replicateSortedOrder(rows) {\n    const sortOptions = this.sortController.getSortOptions();\n    const compareNodes = (rowA, rowB) => {\n      if (rowA.rowIndex != null && rowB.rowIndex != null) {\n        return rowA.rowIndex - rowB.rowIndex;\n      }\n      if (rowA.level === rowB.level) {\n        if (rowA.parent?.id === rowB.parent?.id) {\n          return this.rowNodeSorter.compareRowNodes(sortOptions, {\n            rowNode: rowA,\n            currentPos: rowA.rowIndex ?? -1\n          }, {\n            rowNode: rowB,\n            currentPos: rowB.rowIndex ?? -1\n          });\n        }\n        return compareNodes(rowA.parent, rowB.parent);\n      }\n      if (rowA.level > rowB.level) {\n        return compareNodes(rowA.parent, rowB);\n      }\n      return compareNodes(rowA, rowB.parent);\n    };\n    rows.sort(compareNodes);\n  }\n  processPinnedBottomRows(params, columnsToExport) {\n    return gridSerializingSession => {\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      if (params.rowPositions) {\n        params.rowPositions.filter(position => position.rowPinned === \"bottom\").sort((a, b) => a.rowIndex - b.rowIndex).map(position => this.pinnedRowModel.getPinnedBottomRow(position.rowIndex)).forEach(processRow);\n      } else {\n        this.pinnedRowModel.forEachPinnedBottomRow(processRow);\n      }\n      return gridSerializingSession;\n    };\n  }\n  getColumnsToExport(allColumns = false, skipRowGroups = false, columnKeys) {\n    const isPivotMode = this.columnModel.isPivotMode();\n    if (columnKeys && columnKeys.length) {\n      return this.columnModel.getColsForKeys(columnKeys);\n    }\n    const isTreeData = this.gos.get(\"treeData\");\n    let columnsToExport = [];\n    if (allColumns && !isPivotMode) {\n      columnsToExport = this.columnModel.getCols();\n    } else {\n      columnsToExport = this.visibleColsService.getAllCols();\n    }\n    if (skipRowGroups && !isTreeData) {\n      columnsToExport = columnsToExport.filter(column => column.getColId() !== GROUP_AUTO_COLUMN_ID);\n    }\n    return columnsToExport;\n  }\n  recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession, processGroupHeaderCallback) {\n    const directChildrenHeaderGroups = [];\n    displayedGroups.forEach(columnGroupChild => {\n      const columnGroup = columnGroupChild;\n      if (!columnGroup.getChildren) {\n        return;\n      }\n      columnGroup.getChildren().forEach(it => directChildrenHeaderGroups.push(it));\n    });\n    if (displayedGroups.length > 0 && isColumnGroup(displayedGroups[0])) {\n      this.doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback);\n    }\n    if (directChildrenHeaderGroups && directChildrenHeaderGroups.length > 0) {\n      this.recursivelyAddHeaderGroups(directChildrenHeaderGroups, gridSerializingSession, processGroupHeaderCallback);\n    }\n  }\n  doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback) {\n    const gridRowIterator = gridSerializingSession.onNewHeaderGroupingRow();\n    let columnIndex = 0;\n    displayedGroups.forEach(columnGroupChild => {\n      const columnGroup = columnGroupChild;\n      let name;\n      if (processGroupHeaderCallback) {\n        name = processGroupHeaderCallback(this.gos.addGridCommonParams({\n          columnGroup\n        }));\n      } else {\n        name = this.columnNameService.getDisplayNameForColumnGroup(columnGroup, \"header\");\n      }\n      const collapsibleGroupRanges = columnGroup.getLeafColumns().reduce((collapsibleGroups, currentColumn, currentIdx, arr) => {\n        let lastGroup = _last(collapsibleGroups);\n        const groupShow = currentColumn.getColumnGroupShow() === \"open\";\n        if (!groupShow) {\n          if (lastGroup && lastGroup[1] == null) {\n            lastGroup[1] = currentIdx - 1;\n          }\n        } else if (!lastGroup || lastGroup[1] != null) {\n          lastGroup = [currentIdx];\n          collapsibleGroups.push(lastGroup);\n        }\n        if (currentIdx === arr.length - 1 && lastGroup && lastGroup[1] == null) {\n          lastGroup[1] = currentIdx;\n        }\n        return collapsibleGroups;\n      }, []);\n      gridRowIterator.onColumn(columnGroup, name || \"\", columnIndex++, columnGroup.getLeafColumns().length - 1, collapsibleGroupRanges);\n    });\n  }\n};\nvar VERSION3 = \"32.0.1\";\nvar CsvExportCoreModule = {\n  version: VERSION3,\n  moduleName: `${\"@ag-grid-community/csv-export\" /* CsvExportModule */}-core`,\n  beans: [CsvCreator, GridSerializer]\n};\nvar CsvExportApiModule = {\n  version: VERSION3,\n  moduleName: `${\"@ag-grid-community/csv-export\" /* CsvExportModule */}-api`,\n  apiFunctions: {\n    getDataAsCsv,\n    exportDataAsCsv\n  },\n  dependantModules: [CsvExportCoreModule]\n};\nvar CsvExportModule = {\n  version: VERSION3,\n  moduleName: \"@ag-grid-community/csv-export\" /* CsvExportModule */,\n  dependantModules: [CsvExportCoreModule, CsvExportApiModule]\n};\nvar LINE_SEPARATOR2 = \"\\r\\n\";\nfunction returnAttributeIfPopulated(key, value, booleanTransformer) {\n  if (!value && value !== \"\" && value !== 0) {\n    return \"\";\n  }\n  let xmlValue = value;\n  if (typeof value === \"boolean\") {\n    if (booleanTransformer) {\n      xmlValue = booleanTransformer(value);\n    }\n  }\n  return ` ${key}=\"${xmlValue}\"`;\n}\nvar XmlFactory = class {\n  static createHeader(headerElement = {}) {\n    const headerStart = \"<?\";\n    const headerEnd = \"?>\";\n    const keys = [\"version\"];\n    if (!headerElement.version) {\n      headerElement.version = \"1.0\";\n    }\n    if (headerElement.encoding) {\n      keys.push(\"encoding\");\n    }\n    if (headerElement.standalone) {\n      keys.push(\"standalone\");\n    }\n    const att = keys.map(key => `${key}=\"${headerElement[key]}\"`).join(\" \");\n    return `${headerStart}xml ${att} ${headerEnd}`;\n  }\n  static createXml(xmlElement, booleanTransformer) {\n    let props = \"\";\n    if (xmlElement.properties) {\n      if (xmlElement.properties.prefixedAttributes) {\n        xmlElement.properties.prefixedAttributes.forEach(prefixedSet => {\n          Object.keys(prefixedSet.map).forEach(key => {\n            props += returnAttributeIfPopulated(prefixedSet.prefix + key, prefixedSet.map[key], booleanTransformer);\n          });\n        });\n      }\n      if (xmlElement.properties.rawMap) {\n        Object.keys(xmlElement.properties.rawMap).forEach(key => {\n          props += returnAttributeIfPopulated(key, xmlElement.properties.rawMap[key], booleanTransformer);\n        });\n      }\n    }\n    let result = \"<\" + xmlElement.name + props;\n    if (!xmlElement.children && xmlElement.textNode == null) {\n      return result + \"/>\" + LINE_SEPARATOR2;\n    }\n    if (xmlElement.textNode != null) {\n      return result + \">\" + xmlElement.textNode + \"</\" + xmlElement.name + \">\" + LINE_SEPARATOR2;\n    }\n    result += \">\" + LINE_SEPARATOR2;\n    if (xmlElement.children) {\n      xmlElement.children.forEach(it => {\n        result += this.createXml(it, booleanTransformer);\n      });\n    }\n    return result + \"</\" + xmlElement.name + \">\" + LINE_SEPARATOR2;\n  }\n};\nvar compressBlob = async data => {\n  let chunksSize = 0;\n  const chunks = [];\n  const writeCompressedData = new WritableStream({\n    write: chunk => {\n      chunks.push(chunk);\n      chunksSize += chunk.length;\n    }\n  });\n  const readable = new ReadableStream({\n    start: controller => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        if (e.target?.result) {\n          controller.enqueue(e.target.result);\n        }\n        controller.close();\n      };\n      reader.readAsArrayBuffer(data);\n    }\n  });\n  const compressStream = new window.CompressionStream(\"deflate-raw\");\n  await readable.pipeThrough(compressStream).pipeTo(writeCompressedData);\n  return {\n    size: chunksSize,\n    content: new Blob(chunks)\n  };\n};\nvar deflateLocalFile = async rawContent => {\n  const contentAsBlob = new Blob([rawContent]);\n  const {\n    size: compressedSize,\n    content: compressedContent\n  } = await compressBlob(contentAsBlob);\n  const compressedContentAsUint8Array = new Uint8Array(await compressedContent.arrayBuffer());\n  return {\n    size: compressedSize,\n    content: compressedContentAsUint8Array\n  };\n};\nvar convertTime = date => {\n  let time = date.getHours();\n  time <<= 6;\n  time = time | date.getMinutes();\n  time <<= 5;\n  time = time | date.getSeconds() / 2;\n  return time;\n};\nvar convertDate = date => {\n  let dt = date.getFullYear() - 1980;\n  dt <<= 4;\n  dt = dt | date.getMonth() + 1;\n  dt <<= 5;\n  dt = dt | date.getDate();\n  return dt;\n};\nfunction convertDecToHex(number, bytes) {\n  let hex = \"\";\n  for (let i = 0; i < bytes; i++) {\n    hex += String.fromCharCode(number & 255);\n    number >>>= 8;\n  }\n  return hex;\n}\nvar getCrcFromCrc32TableAndByteArray = content => {\n  if (!content.length) {\n    return 0;\n  }\n  let crc = 0 ^ -1;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  for (let i = 0; i < content.length; i++) {\n    j = content[i];\n    k = (crc ^ j) & 255;\n    l = crcTable[k];\n    crc = crc >>> 8 ^ l;\n  }\n  return crc ^ -1;\n};\nvar getCrcFromCrc32Table = content => {\n  if (!content.length) {\n    return 0;\n  }\n  if (typeof content === \"string\") {\n    return getCrcFromCrc32TableAndByteArray(new TextEncoder().encode(content));\n  }\n  return getCrcFromCrc32TableAndByteArray(content);\n};\nvar crcTable = new Uint32Array([0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117]);\nvar getHeaders = (currentFile, isCompressed, offset, rawSize, rawContent, deflatedSize) => {\n  const {\n    content,\n    path,\n    created: creationDate\n  } = currentFile;\n  const time = convertTime(creationDate);\n  const dt = convertDate(creationDate);\n  const crcFlag = getCrcFromCrc32Table(rawContent);\n  const zipSize = deflatedSize !== void 0 ? deflatedSize : rawSize;\n  const utfPath = _utf8_encode(path);\n  const isUTF8 = utfPath !== path;\n  let extraFields = \"\";\n  if (isUTF8) {\n    const uExtraFieldPath = convertDecToHex(1, 1) + convertDecToHex(getCrcFromCrc32Table(utfPath), 4) + utfPath;\n    extraFields = \"up\" + convertDecToHex(uExtraFieldPath.length, 2) + uExtraFieldPath;\n  }\n  const commonHeader = \"\u0014\\0\" + (\n  // version needed to extract\n  isUTF8 ? \"\\0\\b\" : \"\\0\\0\") +\n  // Language encoding flag (EFS) (12th bit turned on)\n  convertDecToHex(isCompressed ? 8 : 0, 2) +\n  // As per ECMA-376 Part 2 specs\n  convertDecToHex(time, 2) +\n  // last modified time\n  convertDecToHex(dt, 2) +\n  // last modified date\n  convertDecToHex(zipSize ? crcFlag : 0, 4) + convertDecToHex(deflatedSize ?? rawSize, 4) +\n  // compressed size\n  convertDecToHex(rawSize, 4) +\n  // uncompressed size\n  convertDecToHex(utfPath.length, 2) +\n  // file name length\n  convertDecToHex(extraFields.length, 2);\n  const localFileHeader = \"PK\u0003\u0004\" + commonHeader + utfPath + extraFields;\n  const centralDirectoryHeader = \"PK\u0001\u0002\u0014\\0\" + commonHeader +\n  // file header\n  \"\\0\\0\\0\\0\\0\\0\" + (content ? \"\\0\\0\\0\\0\" : \"\u0010\\0\\0\\0\") +\n  // external file attributes\n  convertDecToHex(offset, 4) +\n  // relative offset of local header\n  utfPath +\n  // file name\n  extraFields;\n  return {\n    localFileHeader: Uint8Array.from(localFileHeader, c => c.charCodeAt(0)),\n    centralDirectoryHeader: Uint8Array.from(centralDirectoryHeader, c => c.charCodeAt(0))\n  };\n};\nvar getDecodedContent = content => {\n  let contentToUse;\n  if (typeof content === \"string\") {\n    const base64String = atob(content.split(\";base64,\")[1]);\n    contentToUse = Uint8Array.from(base64String, c => c.charCodeAt(0));\n  } else {\n    contentToUse = content;\n  }\n  return {\n    size: contentToUse.length,\n    content: contentToUse\n  };\n};\nvar getDeflatedHeaderAndContent = async (currentFile, offset) => {\n  const {\n    content\n  } = currentFile;\n  const {\n    size,\n    content: rawContent\n  } = !content ? {\n    size: 0,\n    content: Uint8Array.from([])\n  } : getDecodedContent(content);\n  let deflatedContent = void 0;\n  let deflatedSize = void 0;\n  let deflationPerformed = false;\n  const shouldDeflate = currentFile.type === \"file\" && rawContent && size > 0;\n  if (shouldDeflate) {\n    const result = await deflateLocalFile(rawContent);\n    deflatedContent = result.content;\n    deflatedSize = result.size;\n    deflationPerformed = true;\n  }\n  const headers = getHeaders(currentFile, deflationPerformed, offset, size, rawContent, deflatedSize);\n  return {\n    ...headers,\n    content: deflatedContent || rawContent,\n    isCompressed: deflationPerformed\n  };\n};\nvar getHeaderAndContent = (currentFile, offset) => {\n  const {\n    content\n  } = currentFile;\n  const {\n    content: rawContent\n  } = !content ? {\n    content: Uint8Array.from([])\n  } : getDecodedContent(content);\n  const headers = getHeaders(currentFile, false, offset, rawContent.length, rawContent, void 0);\n  return {\n    ...headers,\n    content: rawContent,\n    isCompressed: false\n  };\n};\nvar buildCentralDirectoryEnd = (tLen, cLen, lLen) => {\n  const str = \"PK\u0005\u0006\\0\\0\\0\\0\" + convertDecToHex(tLen, 2) +\n  // total number of entries in the central folder\n  convertDecToHex(tLen, 2) +\n  // total number of entries in the central folder\n  convertDecToHex(cLen, 4) +\n  // size of the central folder\n  convertDecToHex(lLen, 4) +\n  // central folder start offset\n  \"\\0\\0\";\n  return Uint8Array.from(str, c => c.charCodeAt(0));\n};\nvar ZipContainer = /*#__PURE__*/(() => {\n  let ZipContainer = class {\n    static addFolders(paths) {\n      paths.forEach(this.addFolder.bind(this));\n    }\n    static addFolder(path) {\n      this.folders.push({\n        path,\n        created: /* @__PURE__ */new Date(),\n        isBase64: false,\n        type: \"folder\"\n      });\n    }\n    static addFile(path, content, isBase64 = false) {\n      this.files.push({\n        path,\n        created: /* @__PURE__ */new Date(),\n        content: isBase64 ? content : new TextEncoder().encode(content),\n        isBase64,\n        type: \"file\"\n      });\n    }\n    static async getZipFile(mimeType = \"application/zip\") {\n      const textOutput = await this.buildCompressedFileStream();\n      this.clearStream();\n      return new Blob([textOutput], {\n        type: mimeType\n      });\n    }\n    static getUncompressedZipFile(mimeType = \"application/zip\") {\n      const textOutput = this.buildFileStream();\n      this.clearStream();\n      return new Blob([textOutput], {\n        type: mimeType\n      });\n    }\n    static clearStream() {\n      this.folders = [];\n      this.files = [];\n    }\n    static packageFiles(files) {\n      let fileLen = 0;\n      let folderLen = 0;\n      for (const currentFile of files) {\n        const {\n          localFileHeader,\n          centralDirectoryHeader,\n          content\n        } = currentFile;\n        fileLen += localFileHeader.length + content.length;\n        folderLen += centralDirectoryHeader.length;\n      }\n      const fileData = new Uint8Array(fileLen);\n      const folderData = new Uint8Array(folderLen);\n      let fileOffset = 0;\n      let folderOffset = 0;\n      for (const currentFile of files) {\n        const {\n          localFileHeader,\n          centralDirectoryHeader,\n          content\n        } = currentFile;\n        fileData.set(localFileHeader, fileOffset);\n        fileOffset += localFileHeader.length;\n        fileData.set(content, fileOffset);\n        fileOffset += content.length;\n        folderData.set(centralDirectoryHeader, folderOffset);\n        folderOffset += centralDirectoryHeader.length;\n      }\n      const folderEnd = buildCentralDirectoryEnd(files.length, folderLen, fileLen);\n      const result = new Uint8Array(fileData.length + folderData.length + folderEnd.length);\n      result.set(fileData);\n      result.set(folderData, fileData.length);\n      result.set(folderEnd, fileData.length + folderData.length);\n      return result;\n    }\n    static async buildCompressedFileStream() {\n      const totalFiles = [...this.folders, ...this.files];\n      const readyFiles = [];\n      let lL = 0;\n      for (const currentFile of totalFiles) {\n        const output = await getDeflatedHeaderAndContent(currentFile, lL);\n        const {\n          localFileHeader,\n          content\n        } = output;\n        readyFiles.push(output);\n        lL += localFileHeader.length + content.length;\n      }\n      return this.packageFiles(readyFiles);\n    }\n    static buildFileStream() {\n      const totalFiles = [...this.folders, ...this.files];\n      const readyFiles = [];\n      let lL = 0;\n      for (const currentFile of totalFiles) {\n        const readyFile = getHeaderAndContent(currentFile, lL);\n        const {\n          localFileHeader,\n          content\n        } = readyFile;\n        readyFiles.push(readyFile);\n        lL += localFileHeader.length + content.length;\n      }\n      return this.packageFiles(readyFiles);\n    }\n  };\n  ZipContainer.folders = [];\n  ZipContainer.files = [];\n\n  // community-modules/infinite-row-model/dist/package/main.esm.mjs\n  return ZipContainer;\n})();\nvar InfiniteBlock = class extends RowNodeBlock {\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  constructor(id, parentCache, params) {\n    super(id);\n    this.parentCache = parentCache;\n    this.params = params;\n    this.startRow = id * params.blockSize;\n    this.endRow = this.startRow + params.blockSize;\n  }\n  postConstruct() {\n    this.createRowNodes();\n  }\n  getBlockStateJson() {\n    return {\n      id: \"\" + this.getId(),\n      state: {\n        blockNumber: this.getId(),\n        startRow: this.getStartRow(),\n        endRow: this.getEndRow(),\n        pageStatus: this.getState()\n      }\n    };\n  }\n  setDataAndId(rowNode, data, index) {\n    if (_exists(data)) {\n      rowNode.setDataAndId(data, index.toString());\n    } else {\n      rowNode.setDataAndId(void 0, void 0);\n    }\n  }\n  loadFromDatasource() {\n    const params = this.createLoadParams();\n    if (_missing(this.params.datasource.getRows)) {\n      _warnOnce(`datasource is missing getRows method`);\n      return;\n    }\n    window.setTimeout(() => {\n      this.params.datasource.getRows(params);\n    }, 0);\n  }\n  processServerFail() {}\n  createLoadParams() {\n    const params = {\n      startRow: this.getStartRow(),\n      endRow: this.getEndRow(),\n      successCallback: this.pageLoaded.bind(this, this.getVersion()),\n      failCallback: this.pageLoadFailed.bind(this, this.getVersion()),\n      sortModel: this.params.sortModel,\n      filterModel: this.params.filterModel,\n      context: this.gos.getGridCommonParams().context\n    };\n    return params;\n  }\n  forEachNode(callback, sequence, rowCount) {\n    this.rowNodes.forEach((rowNode, index) => {\n      const rowIndex = this.startRow + index;\n      if (rowIndex < rowCount) {\n        callback(rowNode, sequence.next());\n      }\n    });\n  }\n  getLastAccessed() {\n    return this.lastAccessed;\n  }\n  getRow(rowIndex, dontTouchLastAccessed = false) {\n    if (!dontTouchLastAccessed) {\n      this.lastAccessed = this.params.lastAccessedSequence.next();\n    }\n    const localIndex = rowIndex - this.startRow;\n    return this.rowNodes[localIndex];\n  }\n  getStartRow() {\n    return this.startRow;\n  }\n  getEndRow() {\n    return this.endRow;\n  }\n  // creates empty row nodes, data is missing as not loaded yet\n  createRowNodes() {\n    this.rowNodes = [];\n    for (let i = 0; i < this.params.blockSize; i++) {\n      const rowIndex = this.startRow + i;\n      const rowNode = new RowNode(this.beans);\n      rowNode.setRowHeight(this.params.rowHeight);\n      rowNode.uiLevel = 0;\n      rowNode.setRowIndex(rowIndex);\n      rowNode.setRowTop(this.params.rowHeight * rowIndex);\n      this.rowNodes.push(rowNode);\n    }\n  }\n  processServerResult(params) {\n    this.rowNodes.forEach((rowNode, index) => {\n      const data = params.rowData ? params.rowData[index] : void 0;\n      if (!rowNode.id && rowNode.alreadyRendered && data) {\n        this.rowNodes[index] = new RowNode(this.beans);\n        this.rowNodes[index].setRowIndex(rowNode.rowIndex);\n        this.rowNodes[index].setRowTop(rowNode.rowTop);\n        this.rowNodes[index].setRowHeight(rowNode.rowHeight);\n        rowNode.clearRowTopAndRowIndex();\n      }\n      this.setDataAndId(this.rowNodes[index], data, this.startRow + index);\n    });\n    const finalRowCount = params.rowCount != null && params.rowCount >= 0 ? params.rowCount : void 0;\n    this.parentCache.pageLoaded(this, finalRowCount);\n  }\n  destroy() {\n    this.rowNodes.forEach(rowNode => {\n      rowNode.clearRowTopAndRowIndex();\n    });\n    super.destroy();\n  }\n};\nvar MAX_EMPTY_BLOCKS_TO_KEEP = 2;\nvar InfiniteCache = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.lastRowIndexKnown = false;\n    this.blocks = {};\n    this.blockCount = 0;\n    this.rowCount = params.initialRowCount;\n    this.params = params;\n  }\n  wireBeans(beans) {\n    this.rowRenderer = beans.rowRenderer;\n    this.focusService = beans.focusService;\n  }\n  // the rowRenderer will not pass dontCreatePage, meaning when rendering the grid,\n  // it will want new pages in the cache as it asks for rows. only when we are inserting /\n  // removing rows via the api is dontCreatePage set, where we move rows between the pages.\n  getRow(rowIndex, dontCreatePage = false) {\n    const blockId = Math.floor(rowIndex / this.params.blockSize);\n    let block = this.blocks[blockId];\n    if (!block) {\n      if (dontCreatePage) {\n        return void 0;\n      }\n      block = this.createBlock(blockId);\n    }\n    return block.getRow(rowIndex);\n  }\n  createBlock(blockNumber) {\n    const newBlock = this.createBean(new InfiniteBlock(blockNumber, this, this.params));\n    this.blocks[newBlock.getId()] = newBlock;\n    this.blockCount++;\n    this.purgeBlocksIfNeeded(newBlock);\n    this.params.rowNodeBlockLoader.addBlock(newBlock);\n    return newBlock;\n  }\n  // we have this on infinite row model only, not server side row model,\n  // because for server side, it would leave the children in inconsistent\n  // state - eg if a node had children, but after the refresh it had data\n  // for a different row, then the children would be with the wrong row node.\n  refreshCache() {\n    const nothingToRefresh = this.blockCount == 0;\n    if (nothingToRefresh) {\n      this.purgeCache();\n      return;\n    }\n    this.getBlocksInOrder().forEach(block => block.setStateWaitingToLoad());\n    this.params.rowNodeBlockLoader.checkBlockToLoad();\n  }\n  destroy() {\n    this.getBlocksInOrder().forEach(block => this.destroyBlock(block));\n    super.destroy();\n  }\n  getRowCount() {\n    return this.rowCount;\n  }\n  isLastRowIndexKnown() {\n    return this.lastRowIndexKnown;\n  }\n  // block calls this, when page loaded\n  pageLoaded(block, lastRow) {\n    if (!this.isAlive()) {\n      return;\n    }\n    if (this.gos.get(\"debug\")) {\n      _log(`InfiniteCache - onPageLoaded: page = ${block.getId()}, lastRow = ${lastRow}`);\n    }\n    this.checkRowCount(block, lastRow);\n    this.onCacheUpdated();\n  }\n  purgeBlocksIfNeeded(blockToExclude) {\n    const blocksForPurging = this.getBlocksInOrder().filter(b => b != blockToExclude);\n    const lastAccessedComparator = (a, b) => b.getLastAccessed() - a.getLastAccessed();\n    blocksForPurging.sort(lastAccessedComparator);\n    const maxBlocksProvided = this.params.maxBlocksInCache > 0;\n    const blocksToKeep = maxBlocksProvided ? this.params.maxBlocksInCache - 1 : null;\n    const emptyBlocksToKeep = MAX_EMPTY_BLOCKS_TO_KEEP - 1;\n    blocksForPurging.forEach((block, index) => {\n      const purgeBecauseBlockEmpty = block.getState() === \"needsLoading\" && index >= emptyBlocksToKeep;\n      const purgeBecauseCacheFull = maxBlocksProvided ? index >= blocksToKeep : false;\n      if (purgeBecauseBlockEmpty || purgeBecauseCacheFull) {\n        if (this.isBlockCurrentlyDisplayed(block)) {\n          return;\n        }\n        if (this.isBlockFocused(block)) {\n          return;\n        }\n        this.removeBlockFromCache(block);\n      }\n    });\n  }\n  isBlockFocused(block) {\n    const focusedCell = this.focusService.getFocusCellToUseAfterRefresh();\n    if (!focusedCell) {\n      return false;\n    }\n    if (focusedCell.rowPinned != null) {\n      return false;\n    }\n    const blockIndexStart = block.getStartRow();\n    const blockIndexEnd = block.getEndRow();\n    const hasFocus = focusedCell.rowIndex >= blockIndexStart && focusedCell.rowIndex < blockIndexEnd;\n    return hasFocus;\n  }\n  isBlockCurrentlyDisplayed(block) {\n    const startIndex = block.getStartRow();\n    const endIndex = block.getEndRow() - 1;\n    return this.rowRenderer.isRangeInRenderedViewport(startIndex, endIndex);\n  }\n  removeBlockFromCache(blockToRemove) {\n    if (!blockToRemove) {\n      return;\n    }\n    this.destroyBlock(blockToRemove);\n  }\n  checkRowCount(block, lastRow) {\n    if (typeof lastRow === \"number\" && lastRow >= 0) {\n      this.rowCount = lastRow;\n      this.lastRowIndexKnown = true;\n    } else if (!this.lastRowIndexKnown) {\n      const lastRowIndex = (block.getId() + 1) * this.params.blockSize;\n      const lastRowIndexPlusOverflow = lastRowIndex + this.params.overflowSize;\n      if (this.rowCount < lastRowIndexPlusOverflow) {\n        this.rowCount = lastRowIndexPlusOverflow;\n      }\n    }\n  }\n  setRowCount(rowCount, lastRowIndexKnown) {\n    this.rowCount = rowCount;\n    if (_exists(lastRowIndexKnown)) {\n      this.lastRowIndexKnown = lastRowIndexKnown;\n    }\n    if (!this.lastRowIndexKnown) {\n      if (this.rowCount % this.params.blockSize === 0) {\n        this.rowCount++;\n      }\n    }\n    this.onCacheUpdated();\n  }\n  forEachNodeDeep(callback) {\n    const sequence = new NumberSequence();\n    this.getBlocksInOrder().forEach(block => block.forEachNode(callback, sequence, this.rowCount));\n  }\n  getBlocksInOrder() {\n    const blockComparator = (a, b) => a.getId() - b.getId();\n    const blocks = _getAllValuesInObject(this.blocks).sort(blockComparator);\n    return blocks;\n  }\n  destroyBlock(block) {\n    delete this.blocks[block.getId()];\n    this.destroyBean(block);\n    this.blockCount--;\n    this.params.rowNodeBlockLoader.removeBlock(block);\n  }\n  // gets called 1) row count changed 2) cache purged 3) items inserted\n  onCacheUpdated() {\n    if (this.isAlive()) {\n      this.destroyAllBlocksPastVirtualRowCount();\n      const event = {\n        type: \"storeUpdated\"\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  destroyAllBlocksPastVirtualRowCount() {\n    const blocksToDestroy = [];\n    this.getBlocksInOrder().forEach(block => {\n      const startRow = block.getId() * this.params.blockSize;\n      if (startRow >= this.rowCount) {\n        blocksToDestroy.push(block);\n      }\n    });\n    if (blocksToDestroy.length > 0) {\n      blocksToDestroy.forEach(block => this.destroyBlock(block));\n    }\n  }\n  purgeCache() {\n    this.getBlocksInOrder().forEach(block => this.removeBlockFromCache(block));\n    this.lastRowIndexKnown = false;\n    if (this.rowCount === 0) {\n      this.rowCount = this.params.initialRowCount;\n    }\n    this.onCacheUpdated();\n  }\n  getRowNodesInRange(firstInRange, lastInRange) {\n    const result = [];\n    let lastBlockId = -1;\n    let inActiveRange = false;\n    const numberSequence = new NumberSequence();\n    let foundGapInSelection = false;\n    this.getBlocksInOrder().forEach(block => {\n      if (foundGapInSelection) {\n        return;\n      }\n      if (inActiveRange && lastBlockId + 1 !== block.getId()) {\n        foundGapInSelection = true;\n        return;\n      }\n      lastBlockId = block.getId();\n      block.forEachNode(rowNode => {\n        const hitFirstOrLast = rowNode === firstInRange || rowNode === lastInRange;\n        if (inActiveRange || hitFirstOrLast) {\n          result.push(rowNode);\n        }\n        if (hitFirstOrLast) {\n          inActiveRange = !inActiveRange;\n        }\n      }, numberSequence, this.rowCount);\n    });\n    const invalidRange = foundGapInSelection || inActiveRange;\n    return invalidRange ? [] : result;\n  }\n};\nvar InfiniteRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowModel\";\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n    this.sortController = beans.sortController;\n    this.selectionService = beans.selectionService;\n    this.rowRenderer = beans.rowRenderer;\n    this.rowNodeBlockLoader = beans.rowNodeBlockLoader;\n  }\n  getRowBounds(index) {\n    return {\n      rowHeight: this.rowHeight,\n      rowTop: this.rowHeight * index\n    };\n  }\n  // we don't implement as lazy row heights is not supported in this row model\n  ensureRowHeightsValid() {\n    return false;\n  }\n  postConstruct() {\n    if (!this.gos.isRowModelType(\"infinite\")) {\n      return;\n    }\n    this.rowHeight = this.gos.getRowHeightAsNumber();\n    this.addEventListeners();\n    this.addDestroyFunc(() => this.destroyCache());\n    this.verifyProps();\n  }\n  verifyProps() {\n    if (this.gos.exists(\"initialGroupOrderComparator\")) {\n      _warnOnce(\"initialGroupOrderComparator cannot be used with Infinite Row Model as sorting is done on the server side\");\n    }\n  }\n  start() {\n    this.setDatasource(this.gos.get(\"datasource\"));\n  }\n  destroy() {\n    this.destroyDatasource();\n    super.destroy();\n  }\n  destroyDatasource() {\n    if (this.datasource) {\n      this.destroyBean(this.datasource);\n      this.rowRenderer.datasourceChanged();\n      this.datasource = null;\n    }\n  }\n  addEventListeners() {\n    this.addManagedEventListeners({\n      filterChanged: this.onFilterChanged.bind(this),\n      sortChanged: this.onSortChanged.bind(this),\n      newColumnsLoaded: this.onColumnEverything.bind(this),\n      storeUpdated: this.onCacheUpdated.bind(this)\n    });\n    this.addManagedPropertyListener(\"datasource\", () => this.setDatasource(this.gos.get(\"datasource\")));\n    this.addManagedPropertyListener(\"cacheBlockSize\", () => this.resetCache());\n    this.addManagedPropertyListener(\"rowHeight\", () => {\n      this.rowHeight = this.gos.getRowHeightAsNumber();\n      this.cacheParams.rowHeight = this.rowHeight;\n      this.updateRowHeights();\n    });\n  }\n  onFilterChanged() {\n    this.reset();\n  }\n  onSortChanged() {\n    this.reset();\n  }\n  onColumnEverything() {\n    let resetRequired;\n    if (this.cacheParams) {\n      resetRequired = this.isSortModelDifferent();\n    } else {\n      resetRequired = true;\n    }\n    if (resetRequired) {\n      this.reset();\n    }\n  }\n  isSortModelDifferent() {\n    return !_jsonEquals(this.cacheParams.sortModel, this.sortController.getSortModel());\n  }\n  getType() {\n    return \"infinite\";\n  }\n  setDatasource(datasource) {\n    this.destroyDatasource();\n    this.datasource = datasource;\n    if (datasource) {\n      this.reset();\n    }\n  }\n  isEmpty() {\n    return !this.infiniteCache;\n  }\n  isRowsToRender() {\n    return !!this.infiniteCache;\n  }\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\n    return this.infiniteCache ? this.infiniteCache.getRowNodesInRange(firstInRange, lastInRange) : [];\n  }\n  reset() {\n    if (!this.datasource) {\n      return;\n    }\n    const getRowIdFunc = this.gos.getRowIdCallback();\n    const userGeneratingIds = getRowIdFunc != null;\n    if (!userGeneratingIds) {\n      this.selectionService.reset(\"rowDataChanged\");\n    }\n    this.resetCache();\n  }\n  createModelUpdatedEvent() {\n    return {\n      type: \"modelUpdated\",\n      // not sure if these should all be false - noticed if after implementing,\n      // maybe they should be true?\n      newPage: false,\n      newPageSize: false,\n      newData: false,\n      keepRenderedRows: true,\n      animate: false\n    };\n  }\n  resetCache() {\n    this.destroyCache();\n    this.cacheParams = {\n      // the user provided datasource\n      datasource: this.datasource,\n      // sort and filter model\n      filterModel: this.filterManager?.getFilterModel() ?? {},\n      sortModel: this.sortController.getSortModel(),\n      rowNodeBlockLoader: this.rowNodeBlockLoader,\n      // properties - this way we take a snapshot of them, so if user changes any, they will be\n      // used next time we create a new cache, which is generally after a filter or sort change,\n      // or a new datasource is set\n      initialRowCount: this.gos.get(\"infiniteInitialRowCount\"),\n      maxBlocksInCache: this.gos.get(\"maxBlocksInCache\"),\n      rowHeight: this.gos.getRowHeightAsNumber(),\n      // if user doesn't provide overflow, we use default overflow of 1, so user can scroll past\n      // the current page and request first row of next page\n      overflowSize: this.gos.get(\"cacheOverflowSize\"),\n      // page size needs to be 1 or greater. having it at 1 would be silly, as you would be hitting the\n      // server for one page at a time. so the default if not specified is 100.\n      blockSize: this.gos.get(\"cacheBlockSize\"),\n      // the cache could create this, however it is also used by the pages, so handy to create it\n      // here as the settings are also passed to the pages\n      lastAccessedSequence: new NumberSequence()\n    };\n    this.infiniteCache = this.createBean(new InfiniteCache(this.cacheParams));\n    this.eventService.dispatchEventOnce({\n      type: \"rowCountReady\"\n    });\n    const event = this.createModelUpdatedEvent();\n    this.eventService.dispatchEvent(event);\n  }\n  updateRowHeights() {\n    this.forEachNode(node => {\n      node.setRowHeight(this.rowHeight);\n      node.setRowTop(this.rowHeight * node.rowIndex);\n    });\n    const event = this.createModelUpdatedEvent();\n    this.eventService.dispatchEvent(event);\n  }\n  destroyCache() {\n    if (this.infiniteCache) {\n      this.infiniteCache = this.destroyBean(this.infiniteCache);\n    }\n  }\n  onCacheUpdated() {\n    const event = this.createModelUpdatedEvent();\n    this.eventService.dispatchEvent(event);\n  }\n  getRow(rowIndex) {\n    if (!this.infiniteCache) {\n      return void 0;\n    }\n    if (rowIndex >= this.infiniteCache.getRowCount()) {\n      return void 0;\n    }\n    return this.infiniteCache.getRow(rowIndex);\n  }\n  getRowNode(id) {\n    let result;\n    this.forEachNode(rowNode => {\n      if (rowNode.id === id) {\n        result = rowNode;\n      }\n    });\n    return result;\n  }\n  forEachNode(callback) {\n    if (this.infiniteCache) {\n      this.infiniteCache.forEachNodeDeep(callback);\n    }\n  }\n  getTopLevelRowCount() {\n    return this.getRowCount();\n  }\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\n    return topLevelIndex;\n  }\n  getRowIndexAtPixel(pixel) {\n    if (this.rowHeight !== 0) {\n      const rowIndexForPixel = Math.floor(pixel / this.rowHeight);\n      const lastRowIndex = this.getRowCount() - 1;\n      if (rowIndexForPixel > lastRowIndex) {\n        return lastRowIndex;\n      }\n      return rowIndexForPixel;\n    }\n    return 0;\n  }\n  getRowCount() {\n    return this.infiniteCache ? this.infiniteCache.getRowCount() : 0;\n  }\n  isRowPresent(rowNode) {\n    const foundRowNode = this.getRowNode(rowNode.id);\n    return !!foundRowNode;\n  }\n  refreshCache() {\n    if (this.infiniteCache) {\n      this.infiniteCache.refreshCache();\n    }\n  }\n  purgeCache() {\n    if (this.infiniteCache) {\n      this.infiniteCache.purgeCache();\n    }\n  }\n  // for iRowModel\n  isLastRowIndexKnown() {\n    if (this.infiniteCache) {\n      return this.infiniteCache.isLastRowIndexKnown();\n    }\n    return false;\n  }\n  setRowCount(rowCount, lastRowIndexKnown) {\n    if (this.infiniteCache) {\n      this.infiniteCache.setRowCount(rowCount, lastRowIndexKnown);\n    }\n  }\n};\nfunction refreshInfiniteCache(beans) {\n  beans.rowModelHelperService?.getInfiniteRowModel()?.refreshCache();\n}\nfunction purgeInfiniteCache(beans) {\n  beans.rowModelHelperService?.getInfiniteRowModel()?.purgeCache();\n}\nfunction getInfiniteRowCount(beans) {\n  return beans.rowModelHelperService?.getInfiniteRowModel()?.getRowCount();\n}\nfunction isLastRowIndexKnown(beans) {\n  return beans.rowModelHelperService?.getInfiniteRowModel()?.isLastRowIndexKnown();\n}\nvar VERSION4 = \"32.0.1\";\nvar InfiniteRowModelCoreModule = {\n  version: VERSION4,\n  moduleName: `${\"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */}-core`,\n  rowModel: \"infinite\",\n  beans: [InfiniteRowModel],\n  dependantModules: [RowNodeBlockModule]\n};\nvar InfiniteRowModelApiModule = {\n  version: VERSION4,\n  moduleName: `${\"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */}-api`,\n  beans: [RowModelHelperService],\n  apiFunctions: {\n    refreshInfiniteCache,\n    purgeInfiniteCache,\n    getInfiniteRowCount,\n    isLastRowIndexKnown\n  },\n  dependantModules: [InfiniteRowModelCoreModule, SsrmInfiniteSharedApiModule]\n};\nvar InfiniteRowModelModule = {\n  version: VERSION4,\n  moduleName: \"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */,\n  dependantModules: [InfiniteRowModelCoreModule, InfiniteRowModelApiModule]\n};\n\n// packages/ag-grid-community/src/main.ts\nModuleRegistry.__registerModules([CommunityFeaturesModule, ClientSideRowModelModule, InfiniteRowModelModule, CsvExportModule], false, void 0);\nexport { ALWAYS_SYNC_GLOBAL_EVENTS, AbstractHeaderCellCtrl, AgAbstractField, AgAbstractInputField, AgAbstractLabel, AgCheckbox, AgCheckboxSelector, AgColumn, AgColumnGroup, AgInputDateField, AgInputNumberField, AgInputNumberFieldSelector, AgInputTextArea, AgInputTextField, AgInputTextFieldSelector, AgPickerField, AgPromise, AgProvidedColumnGroup, AgRadioButton, AgSelect, AgSelectSelector, AgToggleButton, AgToggleButtonSelector, AnimateShowChangeCellRenderer, AnimateSlideCellRenderer, AnimationFrameService, AriaAnnouncementService, AutoScrollService, AutoWidthCalculator, BarColumnLabelPlacement, BaseComponentWrapper, BaseCreator, BaseGridSerializingSession, BeanStub, BodyDropPivotTarget, BodyDropTarget, CellComp, CellCtrl, CellNavigationService, CellPositionUtils, CellRangeType, ChangedPath, ChartMappings, CheckboxCellEditor, CheckboxCellRenderer, CheckboxSelectionComponent, ClientSideRowModelModule, ClientSideRowModelSteps, ColumnApplyStateService, ColumnAutosizeService, ColumnFactory, ColumnKeyCreator, ColumnModel, ColumnMoveService, ColumnNameService, ColumnSizeService, CommunityFeaturesModule, Component, ComponentUtil, Context, CssClassManager, CsvCreator, CsvExportModule, CtrlsService, DataTypeService, DateCellEditor, DateFilter, DateStringCellEditor, Downloader, DragAndDropService, DragService, DragSourceType, Environment, EventService, ExcelFactoryMode, ExpansionService, ExpressionService, FakeHScrollComp, FakeVScrollComp, FilterManager, FilterWrapperComp, FocusService, FuncColsService, GROUP_AUTO_COLUMN_ID, Grid, GridBodyComp, GridBodyCtrl, GridComp, GridCoreCreator, GridCoreModule, GridCtrl, GridHeaderComp, GridHeaderCtrl, GridOptionsService, GridSerializer, GroupInstanceIdCreator, HeaderCellCtrl, HeaderFilterCellComp, HeaderFilterCellCtrl, HeaderGroupCellCtrl, HeaderNavigationDirection, HeaderNavigationService, HeaderPositionUtils, HeaderRowComp, HeaderRowContainerComp, HeaderRowContainerCtrl, HeaderRowCtrl, HeaderRowType, HorizontalDirection, HorizontalResizeService, InfiniteRowModelModule, KeyCode, LargeTextCellEditor, LayoutCssClasses, LocalEventService, LocaleService, ManagedFocusFeature, MenuService, ModuleNames, ModuleRegistry, MouseEventService, MoveColumnFeature, NavigationService, NumberCellEditor, NumberFilter, NumberSequence, OverlayWrapperComponent, PinnedRowModel, PivotResultColsService, PopupComponent, PopupEditorWrapper, PopupService, PositionableFeature, PropertyKeys, ProvidedFilter, RefPlaceholder, ResizeObserverService, RowContainerComp, RowContainerCtrl, RowCtrl, RowDragComp, RowHighlightPosition, RowModelHelperService, RowNode, RowNodeBlock, RowNodeBlockLoader, RowNodeSorter, RowPositionUtils, RowRenderer, RowType, ScalarFilter, ScrollVisibleService, SelectCellEditor, SelectableService, SelectionHandleType, ServerSideTransactionResultStatus, SetLeftFeature, SimpleFilter, SortController, SortIndicatorComp, SortIndicatorSelector, StandardMenuFactory, StylingService, TabGuardClassNames, TabGuardComp, TabGuardCtrl, TabGuardFeature, TextCellEditor, TextFilter, TextFloatingFilter, TooltipFeature, TooltipStateManager, TouchListener, UserComponentFactory, UserComponentRegistry, ValueCache, ValueService, VanillaFrameworkOverrides, VerticalDirection, VisibleColsService, XmlFactory, ZipContainer, ColumnFilterModule as _ColumnFilterModule, CommunityMenuApiModule as _CommunityMenuApiModule, CsrmSsrmSharedApiModule as _CsrmSsrmSharedApiModule, CsvExportCoreModule as _CsvExportCoreModule, EditCoreModule as _EditCoreModule, FilterCoreModule as _FilterCoreModule, FloatingFilterModule as _FloatingFilterModule, ReadOnlyFloatingFilterModule as _ReadOnlyFloatingFilterModule, RowNodeBlockModule as _RowNodeBlockModule, SsrmInfiniteSharedApiModule as _SsrmInfiniteSharedApiModule, _addFocusableContainerListener, _areEqual, _bindCellRendererToHtmlElement, _capitalise, _clearElement, _cloneObject, _combineAttributesAndGridOptions, _compose, _createIcon, _createIconNoSpan, _debounce, _defaultComparator, _doOnce, _errorOnce, _escapeString, _exists, _existsAndNotEmpty, _flatten, _forEachReverse, _formatNumberCommas, _formatNumberTwoDecimalPlacesAndCommas, _fuzzySuggestions, _getAbsoluteHeight, _getAbsoluteWidth, _getAllValuesInObject, _getAriaPosInSet, _getCtrlForEventTarget, _getHeaderClassesFromColDef, _getInnerHeight, _getInnerWidth, _getRowContainerOptions, _getToolPanelClassesFromColDef, _includes, _insertArrayIntoArray, _insertIntoArray, _isElementInEventPath, _isEventFromPrintableCharacter, _isIOSUserAgent, _isNodeOrElement, _isStopPropagationForAgGrid, _isVisible, _iterateObject, _jsonEquals, _last, _loadTemplate, _log, _makeNull, _mergeDeep, _missing, _missingOrEmpty, _parseDateTimeFromString, _processOnChange, _radioCssClass, _removeAriaExpanded, _removeAriaSort, _removeFromArray, _removeFromParent, _removeRepeatsFromArray, _serialiseDate, _setAriaActiveDescendant, _setAriaChecked, _setAriaColCount, _setAriaColIndex, _setAriaColSpan, _setAriaControls, _setAriaDescribedBy, _setAriaDisabled, _setAriaExpanded, _setAriaHidden, _setAriaLabel, _setAriaLabelledBy, _setAriaLevel, _setAriaPosInSet, _setAriaRole, _setAriaRowCount, _setAriaRowIndex, _setAriaSelected, _setAriaSetSize, _setAriaSort, _setDisabled, _setDisplayed, _setFixedWidth, _setVisible, _shallowCompare, _sortRowNodesByOrder, _stopPropagationForAgGrid, _toStringOrNull, _unwrapUserComp, _utf8_encode, _values, _waitUntil, _warnOnce, createGrid, getDefaultFloatingFilterType, isColumn, isColumnGroup, isProvidedColumnGroup, isSelectionUIEvent, provideGlobalGridOptions };","import { BaseComponentWrapper, _removeFromParent, VanillaFrameworkOverrides, _combineAttributesAndGridOptions, createGrid, _processOnChange } from 'ag-grid-community';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgZone, EventEmitter, Component, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nlet AngularFrameworkComponentWrapper = /*#__PURE__*/(() => {\n  class AngularFrameworkComponentWrapper extends BaseComponentWrapper {\n    setViewContainerRef(viewContainerRef, angularFrameworkOverrides) {\n      this.viewContainerRef = viewContainerRef;\n      this.angularFrameworkOverrides = angularFrameworkOverrides;\n    }\n    createWrapper(OriginalConstructor) {\n      const angularFrameworkOverrides = this.angularFrameworkOverrides;\n      const that = this;\n      class DynamicAgNg2Component extends BaseGuiComponent {\n        init(params) {\n          angularFrameworkOverrides.runInsideAngular(() => {\n            super.init(params);\n            this._componentRef.changeDetectorRef.detectChanges();\n          });\n        }\n        createComponent() {\n          return angularFrameworkOverrides.runInsideAngular(() => that.createComponent(OriginalConstructor));\n        }\n        hasMethod(name) {\n          return wrapper.getFrameworkComponentInstance()[name] != null;\n        }\n        callMethod(name, args) {\n          const componentRef = this.getFrameworkComponentInstance();\n          return angularFrameworkOverrides.runInsideAngular(() => wrapper.getFrameworkComponentInstance()[name].apply(componentRef, args));\n        }\n        addMethod(name, callback) {\n          wrapper[name] = callback;\n        }\n      }\n      const wrapper = new DynamicAgNg2Component();\n      return wrapper;\n    }\n    createComponent(componentType) {\n      return this.viewContainerRef.createComponent(componentType);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵAngularFrameworkComponentWrapper_BaseFactory;\n        return function AngularFrameworkComponentWrapper_Factory(t) {\n          return (ɵAngularFrameworkComponentWrapper_BaseFactory || (ɵAngularFrameworkComponentWrapper_BaseFactory = i0.ɵɵgetInheritedFactory(AngularFrameworkComponentWrapper)))(t || AngularFrameworkComponentWrapper);\n        };\n      })();\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AngularFrameworkComponentWrapper,\n        factory: AngularFrameworkComponentWrapper.ɵfac\n      });\n    }\n  }\n  return AngularFrameworkComponentWrapper;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass BaseGuiComponent {\n  init(params) {\n    this._params = params;\n    this._componentRef = this.createComponent();\n    this._agAwareComponent = this._componentRef.instance;\n    this._frameworkComponentInstance = this._componentRef.instance;\n    this._eGui = this._componentRef.location.nativeElement;\n    // Angular appends the component to the DOM, so remove it\n    _removeFromParent(this._eGui);\n    this._agAwareComponent.agInit(this._params);\n  }\n  getGui() {\n    return this._eGui;\n  }\n  /** `getGui()` returns the `ng-component` element. This returns the actual root element. */\n  getRootElement() {\n    const firstChild = this._eGui.firstChild;\n    return firstChild;\n  }\n  destroy() {\n    if (this._frameworkComponentInstance && typeof this._frameworkComponentInstance.destroy === 'function') {\n      this._frameworkComponentInstance.destroy();\n    }\n    if (this._componentRef) {\n      this._componentRef.destroy();\n    }\n  }\n  getFrameworkComponentInstance() {\n    return this._frameworkComponentInstance;\n  }\n}\nlet AngularFrameworkOverrides = /*#__PURE__*/(() => {\n  class AngularFrameworkOverrides extends VanillaFrameworkOverrides {\n    constructor(_ngZone) {\n      super('angular');\n      this._ngZone = _ngZone;\n      // Flag used to control Zone behaviour when running tests as many test features rely on Zone.\n      this.isRunningWithinTestZone = false;\n      // Make all events run outside Angular as they often trigger the setup of event listeners\n      // By having the event listeners outside Angular we can avoid triggering change detection\n      // This also means that if a user calls an AG Grid API method from within their component\n      // the internal side effects will not trigger change detection. Without this the events would\n      // run inside Angular and trigger change detection as the source of the event was within the angular zone.\n      this.wrapIncoming = (callback, source) => this.runOutside(callback, source);\n      /**\n       * Make sure that any code that is executed outside of AG Grid is running within the Angular zone.\n       * This means users can update templates and use binding without having to do anything extra.\n       */\n      this.wrapOutgoing = callback => this.runInsideAngular(callback);\n      this.isRunningWithinTestZone = window?.AG_GRID_UNDER_TEST ?? !!window?.Zone?.AsyncTestZoneSpec;\n      if (!this._ngZone) {\n        this.runOutside = callback => callback();\n      } else if (this.isRunningWithinTestZone) {\n        this.runOutside = (callback, source) => {\n          if (source === 'resize-observer' || source === 'popupPositioning') {\n            // ensure resize observer callbacks are run outside of Angular even under test due to Jest not supporting ResizeObserver\n            // which means it just loops continuously with a setTimeout with no way to flush the queue or have fixture.whenStable() resolve.\n            return this._ngZone.runOutsideAngular(callback);\n          }\n          // When under test run inside Angular so that tests can use fixture.whenStable() to wait for async operations to complete.\n          return callback();\n        };\n      } else {\n        this.runOutside = callback => this._ngZone.runOutsideAngular(callback);\n      }\n    }\n    // Only setup wrapping when the call is coming from within Angular zone, i.e from a users application code.\n    // Used to distinguish between user code and AG Grid code setting up events against RowNodes and Columns\n    get shouldWrapOutgoing() {\n      return this._ngZone && NgZone.isInAngularZone();\n    }\n    isFrameworkComponent(comp) {\n      if (!comp) {\n        return false;\n      }\n      const prototype = comp.prototype;\n      const isAngularComp = prototype && 'agInit' in prototype;\n      return isAngularComp;\n    }\n    runInsideAngular(callback) {\n      // Check for _ngZone existence as it is not present when Zoneless\n      return this._ngZone ? this._ngZone.run(callback) : callback();\n    }\n    runOutsideAngular(callback, source) {\n      return this.runOutside(callback, source);\n    }\n    static {\n      this.ɵfac = function AngularFrameworkOverrides_Factory(t) {\n        return new (t || AngularFrameworkOverrides)(i0.ɵɵinject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AngularFrameworkOverrides,\n        factory: AngularFrameworkOverrides.ɵfac\n      });\n    }\n  }\n  return AngularFrameworkOverrides;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgGridAngular = /*#__PURE__*/(() => {\n  class AgGridAngular {\n    constructor(elementDef, viewContainerRef, angularFrameworkOverrides, frameworkComponentWrapper) {\n      this.viewContainerRef = viewContainerRef;\n      this.angularFrameworkOverrides = angularFrameworkOverrides;\n      this.frameworkComponentWrapper = frameworkComponentWrapper;\n      this._initialised = false;\n      this._destroyed = false;\n      this._fullyReady = new Promise(resolve => {\n        this._resolveFullyReady = resolve;\n      });\n      // @START@\n      /** Specifies the status bar components to use in the status bar.\n       */\n      this.statusBar = undefined;\n      /** Specifies the side bar components.\n       */\n      this.sideBar = undefined;\n      /** Set to `true` to not show the context menu. Use if you don't want to use the default 'right click' context menu.\n       * @default false\n       */\n      this.suppressContextMenu = undefined;\n      /** When using `suppressContextMenu`, you can use the `onCellContextMenu` function to provide your own code to handle cell `contextmenu` events.\n       * This flag is useful to prevent the browser from showing its default context menu.\n       * @default false\n       */\n      this.preventDefaultOnContextMenu = undefined;\n      /** Allows context menu to show, even when `Ctrl` key is held down.\n       * @default false\n       */\n      this.allowContextMenuWithControlKey = undefined;\n      /** Changes the display type of the column menu.\n       * `'new'` just displays the main list of menu items. `'legacy'` displays a tabbed menu.\n       * @default 'new'\n       * @initial\n       */\n      this.columnMenu = undefined;\n      /** When `true`, the column menu button will always be shown.\n       * When `false, the column menu button will only show when the mouse is over the column header.\n       * If `columnMenu = 'legacy'`, this will default to `false` instead of `true`.\n       * @default true\n       */\n      this.suppressMenuHide = undefined;\n      /** Set to `true` to use the browser's default tooltip instead of using the grid's Tooltip Component.\n       * @default false\n       * @initial\n       */\n      this.enableBrowserTooltips = undefined;\n      /** The trigger that will cause tooltips to show and hide.\n       *  - `hover` - The tooltip will show/hide when a cell/header is hovered.\n       *  - `focus` - The tooltip will show/hide when a cell/header is focused.\n       * @default 'hover'\n       * @initial\n       */\n      this.tooltipTrigger = undefined;\n      /** The delay in milliseconds that it takes for tooltips to show up once an element is hovered over.\n       *     **Note:** This property does not work if `enableBrowserTooltips` is `true`.\n       * @default 2000\n       */\n      this.tooltipShowDelay = undefined;\n      /** The delay in milliseconds that it takes for tooltips to hide once they have been displayed.\n       *     **Note:** This property does not work if `enableBrowserTooltips` is `true` and `tooltipHideTriggers` includes `timeout`.\n       * @default 10000\n       */\n      this.tooltipHideDelay = undefined;\n      /** Set to `true` to have tooltips follow the cursor once they are displayed.\n       * @default false\n       * @initial\n       */\n      this.tooltipMouseTrack = undefined;\n      /** This defines when tooltip will show up for Cells, Headers and SetFilter Items.\n       *  - `standard` - The tooltip always shows up when the items configured with Tooltips are hovered.\n       * - `whenTruncated` - The tooltip will only be displayed when the items hovered have truncated (showing ellipsis) values. This property does not work when `enableBrowserTooltips={true}`.\n       * @default `standard`\n       */\n      this.tooltipShowMode = undefined;\n      /** Set to `true` to enable tooltip interaction. When this option is enabled, the tooltip will not hide while the\n       * tooltip itself it being hovered or has focus.\n       * @default false\n       * @initial\n       */\n      this.tooltipInteraction = undefined;\n      /** DOM element to use as the popup parent for grid popups (context menu, column menu etc).\n       */\n      this.popupParent = undefined;\n      /** Set to `true` to also include headers when copying to clipboard using `Ctrl + C` clipboard.\n       * @default false\n       */\n      this.copyHeadersToClipboard = undefined;\n      /** Set to `true` to also include group headers when copying to clipboard using `Ctrl + C` clipboard.\n       * @default false\n       */\n      this.copyGroupHeadersToClipboard = undefined;\n      /** Specify the delimiter to use when copying to clipboard.\n       * @default '\\t'\n       */\n      this.clipboardDelimiter = undefined;\n      /** Set to `true` to copy the cell range or focused cell to the clipboard and never the selected rows.\n       * @default false\n       */\n      this.suppressCopyRowsToClipboard = undefined;\n      /** Set to `true` to copy rows instead of ranges when a range with only a single cell is selected.\n       * @default false\n       */\n      this.suppressCopySingleCellRanges = undefined;\n      /** Set to `true` to work around a bug with Excel (Windows) that adds an extra empty line at the end of ranges copied to the clipboard.\n       * @default false\n       */\n      this.suppressLastEmptyLineOnPaste = undefined;\n      /** Set to `true` to turn off paste operations within the grid.\n       * @default false\n       */\n      this.suppressClipboardPaste = undefined;\n      /** Set to `true` to stop the grid trying to use the Clipboard API, if it is blocked, and immediately fallback to the workaround.\n       * @default false\n       */\n      this.suppressClipboardApi = undefined;\n      /** Set to `true` to block     **cut** operations within the grid.\n       * @default false\n       */\n      this.suppressCutToClipboard = undefined;\n      /** Array of Column / Column Group definitions.\n       */\n      this.columnDefs = undefined;\n      /** A default column definition. Items defined in the actual column definitions get precedence.\n       */\n      this.defaultColDef = undefined;\n      /** A default column group definition. All column group definitions will use these properties. Items defined in the actual column group definition get precedence.\n       * @initial\n       */\n      this.defaultColGroupDef = undefined;\n      /** An object map of custom column types which contain groups of properties that column definitions can reuse by referencing in their `type` property.\n       */\n      this.columnTypes = undefined;\n      /** An object map of cell data types to their definitions.\n       * Cell data types can either override/update the pre-defined data types\n       * (`'text'`, `'number'`,  `'boolean'`,  `'date'`,  `'dateString'` or  `'object'`),\n       * or can be custom data types.\n       */\n      this.dataTypeDefinitions = undefined;\n      /** Keeps the order of Columns maintained after new Column Definitions are updated.\n       * @default false\n       */\n      this.maintainColumnOrder = undefined;\n      /** If `true`, then dots in field names (e.g. `'address.firstLine'`) are not treated as deep references. Allows you to use dots in your field name if you prefer.\n       * @default false\n       */\n      this.suppressFieldDotNotation = undefined;\n      /** The height in pixels for the row containing the column label header. If not specified, it uses the theme value of `header-height`.\n       */\n      this.headerHeight = undefined;\n      /** The height in pixels for the rows containing header column groups. If not specified, it uses `headerHeight`.\n       */\n      this.groupHeaderHeight = undefined;\n      /** The height in pixels for the row containing the floating filters. If not specified, it uses the theme value of `header-height`.\n       */\n      this.floatingFiltersHeight = undefined;\n      /** The height in pixels for the row containing the columns when in pivot mode. If not specified, it uses `headerHeight`.\n       */\n      this.pivotHeaderHeight = undefined;\n      /** The height in pixels for the row containing header column groups when in pivot mode. If not specified, it uses `groupHeaderHeight`.\n       */\n      this.pivotGroupHeaderHeight = undefined;\n      /** Allow reordering and pinning columns by dragging columns from the Columns Tool Panel to the grid.\n       * @default false\n       */\n      this.allowDragFromColumnsToolPanel = undefined;\n      /** Set to `true` to suppress column moving, i.e. to make the columns fixed position.\n       * @default false\n       */\n      this.suppressMovableColumns = undefined;\n      /** If `true`, the `ag-column-moving` class is not added to the grid while columns are moving. In the default themes, this results in no animation when moving columns.\n       * @default false\n       */\n      this.suppressColumnMoveAnimation = undefined;\n      /** If `true`, when you drag a column out of the grid (e.g. to the group zone) the column is not hidden.\n       * @default false\n       */\n      this.suppressDragLeaveHidesColumns = undefined;\n      /** If `true`, when you drag a column into a row group panel the column is not hidden.\n       * @default false\n       */\n      this.suppressRowGroupHidesColumns = undefined;\n      /** Set to `'shift'` to have shift-resize as the default resize operation (same as user holding down `Shift` while resizing).\n       */\n      this.colResizeDefault = undefined;\n      /** Suppresses auto-sizing columns for columns. In other words, double clicking a column's header's edge will not auto-size.\n       * @default false\n       * @initial\n       */\n      this.suppressAutoSize = undefined;\n      /** Number of pixels to add to a column width after the [auto-sizing](./column-sizing/#auto-size-columns-to-fit-cell-contents) calculation.\n       * Set this if you want to add extra room to accommodate (for example) sort icons, or some other dynamic nature of the header.\n       * @default 20\n       */\n      this.autoSizePadding = undefined;\n      /** Set this to `true` to skip the `headerName` when `autoSize` is called by default.\n       * @default false\n       * @initial\n       */\n      this.skipHeaderOnAutoSize = undefined;\n      /** Auto-size the columns when the grid is loaded. Can size to fit the grid width, fit a provided width, or fit the cell contents.\n       * @initial\n       */\n      this.autoSizeStrategy = undefined;\n      /** A map of component names to components.\n       * @initial\n       */\n      this.components = undefined;\n      /** Set to `'fullRow'` to enable Full Row Editing. Otherwise leave blank to edit one cell at a time.\n       */\n      this.editType = undefined;\n      /** Set to `true` to enable Single Click Editing for cells, to start editing with a single click.\n       * @default false\n       */\n      this.singleClickEdit = undefined;\n      /** Set to `true` so that neither single nor double click starts editing.\n       * @default false\n       */\n      this.suppressClickEdit = undefined;\n      /** Set to `true` to stop the grid updating data after `Edit`, `Clipboard` and `Fill Handle` operations. When this is set, it is intended the application will update the data, eg in an external immutable store, and then pass the new dataset to the grid. <br />**Note:** `rowNode.setDataValue()` does not update the value of the cell when this is `True`, it fires `onCellEditRequest` instead.\n       * @default false\n       */\n      this.readOnlyEdit = undefined;\n      /** Set this to `true` to stop cell editing when grid loses focus.\n       * The default is that the grid stays editing until focus goes onto another cell.\n       * @default false\n       * @initial\n       */\n      this.stopEditingWhenCellsLoseFocus = undefined;\n      /** Set to `true` along with `enterNavigatesVerticallyAfterEdit` to have Excel-style behaviour for the `Enter` key.\n       * i.e. pressing the `Enter` key will move down to the cell beneath and `Shift+Enter` will move up to the cell above.\n       * @default false\n       */\n      this.enterNavigatesVertically = undefined;\n      /** Set to `true` along with `enterNavigatesVertically` to have Excel-style behaviour for the 'Enter' key.\n       * i.e. pressing the Enter key will move down to the cell beneath and Shift+Enter key will move up to the cell above.\n       * @default false\n       */\n      this.enterNavigatesVerticallyAfterEdit = undefined;\n      /** Forces Cell Editing to start when backspace is pressed. This is only relevant for MacOS users.\n       */\n      this.enableCellEditingOnBackspace = undefined;\n      /** Set to `true` to enable Undo / Redo while editing.\n       * @initial\n       */\n      this.undoRedoCellEditing = undefined;\n      /** Set the size of the undo / redo stack.\n       * @default 10\n       * @initial\n       */\n      this.undoRedoCellEditingLimit = undefined;\n      /** A default configuration object used to export to CSV.\n       */\n      this.defaultCsvExportParams = undefined;\n      /** Prevents the user from exporting the grid to CSV.\n       * @default false\n       */\n      this.suppressCsvExport = undefined;\n      /** A default configuration object used to export to Excel.\n       */\n      this.defaultExcelExportParams = undefined;\n      /** Prevents the user from exporting the grid to Excel.\n       * @default false\n       */\n      this.suppressExcelExport = undefined;\n      /** A list (array) of Excel styles to be used when exporting to Excel with styles.\n       * @initial\n       */\n      this.excelStyles = undefined;\n      /** Rows are filtered using this text as a Quick Filter.\n       */\n      this.quickFilterText = undefined;\n      /** Set to `true` to turn on the Quick Filter cache, used to improve performance when using the Quick Filter.\n       * @default false\n       * @initial\n       */\n      this.cacheQuickFilter = undefined;\n      /** Hidden columns are excluded from the Quick Filter by default.\n       * To include hidden columns, set to `true`.\n       * @default false\n       */\n      this.includeHiddenColumnsInQuickFilter = undefined;\n      /** Changes how the Quick Filter splits the Quick Filter text into search terms.\n       */\n      this.quickFilterParser = undefined;\n      /** Changes the matching logic for whether a row passes the Quick Filter.\n       */\n      this.quickFilterMatcher = undefined;\n      /** When pivoting, Quick Filter is only applied on the pivoted data\n       * (or aggregated data if `groupAggFiltering = true`).\n       * Set to `true` to apply Quick Filter before pivoting (/aggregating) instead.\n       * @default false\n       */\n      this.applyQuickFilterBeforePivotOrAgg = undefined;\n      /** Set to `true` to override the default tree data filtering behaviour to instead exclude child nodes from filter results.\n       * @default false\n       */\n      this.excludeChildrenWhenTreeDataFiltering = undefined;\n      /** Set to true to enable the Advanced Filter.\n       * @default false\n       */\n      this.enableAdvancedFilter = undefined;\n      /** @deprecated As of v31, use `initialState.filter.advancedFilterModel` instead.\n       * @initial\n       */\n      this.advancedFilterModel = undefined;\n      /** Hidden columns are excluded from the Advanced Filter by default.\n       * To include hidden columns, set to `true`.\n       * @default false\n       */\n      this.includeHiddenColumnsInAdvancedFilter = undefined;\n      /** DOM element to use as the parent for the Advanced Filter to allow it to appear outside of the grid.\n       * Set to `null` or `undefined` to appear inside the grid.\n       */\n      this.advancedFilterParent = undefined;\n      /** Customise the parameters passed to the Advanced Filter Builder.\n       */\n      this.advancedFilterBuilderParams = undefined;\n      /** By default, Advanced Filter sanitises user input and passes it to `new Function()` to provide the best performance.\n       * Set to `true` to prevent this and use defined functions instead.\n       * This will result in slower filtering, but it enables Advanced Filter to work when `unsafe-eval` is disabled.\n       * @default false\n       */\n      this.suppressAdvancedFilterEval = undefined;\n      /** Set to `true` to Enable Charts.\n       * @default false\n       */\n      this.enableCharts = undefined;\n      /** The list of chart themes that a user can choose from in the chart panel.\n       * @default ['ag-default', 'ag-material', 'ag-sheets', 'ag-polychroma', 'ag-vivid'];\n       * @initial\n       */\n      this.chartThemes = undefined;\n      /** A map containing custom chart themes.\n       * @initial\n       */\n      this.customChartThemes = undefined;\n      /** Chart theme overrides applied to all themes.\n       * @initial\n       */\n      this.chartThemeOverrides = undefined;\n      /** Allows customisation of the Chart Tool Panels, such as changing the tool panels visibility and order, as well as choosing which charts should be displayed in the chart panel.\n       * @initial\n       */\n      this.chartToolPanelsDef = undefined;\n      /** Get chart menu items. Only applies when using AG Charts Enterprise.\n       */\n      this.chartMenuItems = undefined;\n      /** Provide your own loading cell renderer to use when data is loading via a DataSource.\n       * See [Loading Cell Renderer](https://www.ag-grid.com/javascript-data-grid/component-loading-cell-renderer/) for framework specific implementation details.\n       */\n      this.loadingCellRenderer = undefined;\n      /** Params to be passed to the `loadingCellRenderer` component.\n       */\n      this.loadingCellRendererParams = undefined;\n      /** Callback to select which loading cell renderer to be used when data is loading via a DataSource.\n       * @initial\n       */\n      this.loadingCellRendererSelector = undefined;\n      /** A map of key->value pairs for localising text within the grid.\n       * @initial\n       */\n      this.localeText = undefined;\n      /** Set to `true` to enable Master Detail.\n       * @default false\n       */\n      this.masterDetail = undefined;\n      /** Set to `true` to keep detail rows for when they are displayed again.\n       * @default false\n       * @initial\n       */\n      this.keepDetailRows = undefined;\n      /** Sets the number of details rows to keep.\n       * @default 10\n       * @initial\n       */\n      this.keepDetailRowsCount = undefined;\n      /** Provide a custom `detailCellRenderer` to use when a master row is expanded.\n       * See [Detail Cell Renderer](https://www.ag-grid.com/javascript-data-grid/master-detail-custom-detail/) for framework specific implementation details.\n       */\n      this.detailCellRenderer = undefined;\n      /** Specifies the params to be used by the Detail Cell Renderer. Can also be a function that provides the params to enable dynamic definitions of the params.\n       */\n      this.detailCellRendererParams = undefined;\n      /** Set fixed height in pixels for each detail row.\n       * @initial\n       */\n      this.detailRowHeight = undefined;\n      /** Set to `true` to have the detail grid dynamically change it's height to fit it's rows.\n       * @initial\n       */\n      this.detailRowAutoHeight = undefined;\n      /** Provides a context object that is provided to different callbacks the grid uses. Used for passing additional information to the callbacks used by your application.\n       * @initial\n       */\n      this.context = undefined;\n      /**\n       * A list of grids to treat as Aligned Grids.\n       * Provide a list if the grids / apis already exist or return via a callback to allow the aligned grids to be retrieved asynchronously.\n       * If grids are aligned then the columns and horizontal scrolling will be kept in sync.\n       */\n      this.alignedGrids = undefined;\n      /** Change this value to set the tabIndex order of the Grid within your application.\n       * @default 0\n       * @initial\n       */\n      this.tabIndex = undefined;\n      /** The number of rows rendered outside the viewable area the grid renders.\n       * Having a buffer means the grid will have rows ready to show as the user slowly scrolls vertically.\n       * @default 10\n       */\n      this.rowBuffer = undefined;\n      /** Set to `true` to turn on the value cache.\n       * @default false\n       * @initial\n       */\n      this.valueCache = undefined;\n      /** Set to `true` to configure the value cache to not expire after data updates.\n       * @default false\n       * @initial\n       */\n      this.valueCacheNeverExpires = undefined;\n      /** Set to `true` to allow cell expressions.\n       * @default false\n       * @initial\n       */\n      this.enableCellExpressions = undefined;\n      /** Disables touch support (but does not remove the browser's efforts to simulate mouse events on touch).\n       * @default false\n       * @initial\n       */\n      this.suppressTouch = undefined;\n      /** Set to `true` to not set focus back on the grid after a refresh. This can avoid issues where you want to keep the focus on another part of the browser.\n       * @default false\n       */\n      this.suppressFocusAfterRefresh = undefined;\n      /** Disables the asynchronous nature of the events introduced in v10, and makes them synchronous. This property only exists for the purpose of supporting legacy code which has a dependency on synchronous events from earlier versions (v9 or earlier) of AG Grid.     **It is strongly recommended that you do not change this property unless you have legacy issues.**\n       * @deprecated v31 Events should be handled asynchronously.\n       * @default false\n       * @initial\n       */\n      this.suppressAsyncEvents = undefined;\n      /** The grid will check for `ResizeObserver` and use it if it exists in the browser, otherwise it will use the grid's alternative implementation. Some users reported issues with Chrome's `ResizeObserver`. Use this property to always use the grid's alternative implementation should such problems exist.\n       * @default false\n       * @initial\n       */\n      this.suppressBrowserResizeObserver = undefined;\n      /** Disables showing a warning message in the console if using a `gridOptions` or `colDef` property that doesn't exist.\n       * @default false\n       * @initial\n       */\n      this.suppressPropertyNamesCheck = undefined;\n      /** Disables change detection.\n       * @default false\n       */\n      this.suppressChangeDetection = undefined;\n      /** Set this to `true` to enable debug information from the grid and related components. Will result in additional logging being output, but very useful when investigating problems.\n       * @default false\n       * @initial\n       */\n      this.debug = undefined;\n      /** Show or hide the loading overlay.\n       */\n      this.loading = undefined;\n      /** Provide a HTML string to override the default loading overlay.\n       */\n      this.overlayLoadingTemplate = undefined;\n      /** Provide a custom loading overlay component.\n       * @initial\n       */\n      this.loadingOverlayComponent = undefined;\n      /** Customise the parameters provided to the loading overlay component.\n       */\n      this.loadingOverlayComponentParams = undefined;\n      /** Disables the 'loading' overlay.\n       * @deprecated v32 - Deprecated. Use `loading=false` instead.\n       * @default false\n       * @initial\n       */\n      this.suppressLoadingOverlay = undefined;\n      /** Provide a HTML string to override the default no-rows overlay.\n       */\n      this.overlayNoRowsTemplate = undefined;\n      /** Provide a custom no-rows overlay component.\n       * @initial\n       */\n      this.noRowsOverlayComponent = undefined;\n      /** Customise the parameters provided to the no-rows overlay component.\n       */\n      this.noRowsOverlayComponentParams = undefined;\n      /** Set to `true` to prevent the no-rows overlay being shown when there is no row data.\n       * @default false\n       * @initial\n       */\n      this.suppressNoRowsOverlay = undefined;\n      /** Set whether pagination is enabled.\n       * @default false\n       */\n      this.pagination = undefined;\n      /** How many rows to load per page. If `paginationAutoPageSize` is specified, this property is ignored.\n       * @default 100\n       */\n      this.paginationPageSize = undefined;\n      /** Determines if the page size selector is shown in the pagination panel or not.\n       * Set to an array of values to show the page size selector with custom list of possible page sizes.\n       * Set to `true` to show the page size selector with the default page sizes `[20, 50, 100]`.\n       * Set to `false` to hide the page size selector.\n       * @default true\n       * @initial\n       */\n      this.paginationPageSizeSelector = undefined;\n      /** Set to `true` so that the number of rows to load per page is automatically adjusted by the grid so each page shows enough rows to just fill the area designated for the grid. If `false`, `paginationPageSize` is used.\n       * @default false\n       */\n      this.paginationAutoPageSize = undefined;\n      /** Set to `true` to have pages split children of groups when using Row Grouping or detail rows with Master Detail.\n       * @default false\n       * @initial\n       */\n      this.paginateChildRows = undefined;\n      /** If `true`, the default grid controls for navigation are hidden.\n       * This is useful if `pagination=true` and you want to provide your own pagination controls.\n       * Otherwise, when `pagination=true` the grid automatically shows the necessary controls at the bottom so that the user can navigate through the different pages.\n       * @default false\n       */\n      this.suppressPaginationPanel = undefined;\n      /** Set to `true` to enable pivot mode.\n       * @default false\n       */\n      this.pivotMode = undefined;\n      /** When to show the 'pivot panel' (where you drag rows to pivot) at the top. Note that the pivot panel will never show if `pivotMode` is off.\n       * @default 'never'\n       * @initial\n       */\n      this.pivotPanelShow = undefined;\n      /** The maximum number of generated columns before the grid halts execution. Upon reaching this number, the grid halts generation of columns\n       * and triggers a `pivotMaxColumnsExceeded` event. `-1` for no limit.\n       * @default -1\n       */\n      this.pivotMaxGeneratedColumns = undefined;\n      /** If pivoting, set to the number of column group levels to expand by default, e.g. `0` for none, `1` for first level only, etc. Set to `-1` to expand everything.\n       * @default 0\n       */\n      this.pivotDefaultExpanded = undefined;\n      /** When set and the grid is in pivot mode, automatically calculated totals will appear within the Pivot Column Groups, in the position specified.\n       */\n      this.pivotColumnGroupTotals = undefined;\n      /** When set and the grid is in pivot mode, automatically calculated totals will appear for each value column in the position specified.\n       */\n      this.pivotRowTotals = undefined;\n      /** If `true`, the grid will not swap in the grouping column when pivoting. Useful if pivoting using Server Side Row Model or Viewport Row Model and you want full control of all columns including the group column.\n       * @default false\n       * @initial\n       */\n      this.pivotSuppressAutoColumn = undefined;\n      /** When enabled, pivot column groups will appear 'fixed', without the ability to expand and collapse the column groups.\n       * @default false\n       * @initial\n       */\n      this.suppressExpandablePivotGroups = undefined;\n      /** If `true`, then row group, pivot and value aggregation will be read-only from the GUI. The grid will display what values are used for each, but will not allow the user to change the selection.\n       * @default false\n       */\n      this.functionsReadOnly = undefined;\n      /** A map of 'function name' to 'function' for custom aggregation functions.\n       * @initial\n       */\n      this.aggFuncs = undefined;\n      /** When `true`, column headers won't include the `aggFunc` name, e.g. `'sum(Bank Balance)`' will just be `'Bank Balance'`.\n       * @default false\n       * @initial\n       */\n      this.suppressAggFuncInHeader = undefined;\n      /** When using aggregations, the grid will always calculate the root level aggregation value.\n       * @default false\n       */\n      this.alwaysAggregateAtRootLevel = undefined;\n      /** When using change detection, only the updated column will be re-aggregated.\n       * @default false\n       */\n      this.aggregateOnlyChangedColumns = undefined;\n      /** Set to `true` so that aggregations are not impacted by filtering.\n       * @default false\n       */\n      this.suppressAggFilteredOnly = undefined;\n      /** Set to `true` to omit the value Column header when there is only a single value column.\n       * @default false\n       * @initial\n       */\n      this.removePivotHeaderRowWhenSingleValueColumn = undefined;\n      /** Set to `false` to disable Row Animation which is enabled by default.\n       * @default true\n       */\n      this.animateRows = undefined;\n      /** Set to `true` to have cells flash after data changes.\n       * @default false\n       * @deprecated 31.2 use `enableCellChangeFlash` in the `ColDef` or `defaultColDef` for all columns.\n       */\n      this.enableCellChangeFlash = undefined;\n      /** To be used when setting `enableCellChangeFlash` on column definitions. Sets the duration in milliseconds of how long a cell should remain in its \"flashed\" state.\n       * @default 500\n       */\n      this.cellFlashDuration = undefined;\n      /** @deprecated v31.1 - use `cellFlashDuration` instead.\n       */\n      this.cellFlashDelay = undefined;\n      /** To be used when setting `enableCellChangeFlash` on column definitions. Sets the duration in milliseconds of how long the \"flashed\" state animation takes to fade away after the timer set by cellFlashDuration has completed.\n       * @default 1000\n       */\n      this.cellFadeDuration = undefined;\n      /** @deprecated v31.1 - use `cellFadeDuration` instead.\n       */\n      this.cellFadeDelay = undefined;\n      /** Set to `true` to have cells flash after data changes even when the change is due to filtering.\n       * @default false\n       * @initial\n       */\n      this.allowShowChangeAfterFilter = undefined;\n      /** Switch between layout options: `normal`, `autoHeight`, `print`.\n       * @default 'normal'\n       */\n      this.domLayout = undefined;\n      /** When `true`, the order of rows and columns in the DOM are consistent with what is on screen.\n       * Disables row animations.\n       * @default false\n       * @initial\n       */\n      this.ensureDomOrder = undefined;\n      /** Set to `true` to operate the grid in RTL (Right to Left) mode.\n       * @default false\n       * @initial\n       */\n      this.enableRtl = undefined;\n      /** Set to `true` so that the grid doesn't virtualise the columns. For example, if you have 100 columns, but only 10 visible due to scrolling, all 100 will always be rendered.\n       * @default false\n       * @initial\n       */\n      this.suppressColumnVirtualisation = undefined;\n      /** By default the grid has a limit of rendering a maximum of 500 rows at once (remember the grid only renders rows you can see, so unless your display shows more than 500 rows without vertically scrolling this will never be an issue).\n       * <br />**This is only relevant if you are manually setting `rowBuffer` to a high value (rendering more rows than can be seen), or `suppressRowVirtualisation` is true, or if your grid height is able to display more than 500 rows at once.**\n       * @default false\n       * @initial\n       */\n      this.suppressMaxRenderedRowRestriction = undefined;\n      /** Set to `true` so that the grid doesn't virtualise the rows. For example, if you have 100 rows, but only 10 visible due to scrolling, all 100 will always be rendered.\n       * @default false\n       * @initial\n       */\n      this.suppressRowVirtualisation = undefined;\n      /** Set to `true` to enable Managed Row Dragging.\n       * @default false\n       */\n      this.rowDragManaged = undefined;\n      /** Set to `true` to suppress row dragging.\n       * @default false\n       */\n      this.suppressRowDrag = undefined;\n      /** Set to `true` to suppress moving rows while dragging the `rowDrag` waffle. This option highlights the position where the row will be placed and it will only move the row on mouse up.\n       * @default false\n       */\n      this.suppressMoveWhenRowDragging = undefined;\n      /** Set to `true` to enable clicking and dragging anywhere on the row without the need for a drag handle.\n       * @default false\n       */\n      this.rowDragEntireRow = undefined;\n      /** Set to `true` to enable dragging multiple rows at the same time.\n       * @default false\n       */\n      this.rowDragMultiRow = undefined;\n      /** A callback that should return a string to be displayed by the `rowDragComp` while dragging a row.\n       * If this callback is not set, the current cell value will be used.\n       * If the `rowDragText` callback is set in the ColDef it will take precedence over this, except when\n       * `rowDragEntireRow=true`.\n       * @initial\n       */\n      this.rowDragText = undefined;\n      /** Provide your own cell renderer component to use for full width rows.\n       * See [Full Width Rows](https://www.ag-grid.com/javascript-data-grid/full-width-rows/) for framework specific implementation details.\n       */\n      this.fullWidthCellRenderer = undefined;\n      /** Customise the parameters provided to the `fullWidthCellRenderer` component.\n       */\n      this.fullWidthCellRendererParams = undefined;\n      /** Set to `true` to have the Full Width Rows embedded in grid's main container so they can be scrolled horizontally.\n       */\n      this.embedFullWidthRows = undefined;\n      /** @deprecated v31\n       * When enabled, the grid will cast group values to string type.\n       * @default false\n       * @initial\n       */\n      this.suppressGroupMaintainValueType = undefined;\n      /** Specifies how the results of row grouping should be displayed.\n       *\n       *  The options are:\n       *\n       * - `'singleColumn'`: single group column automatically added by the grid.\n       * - `'multipleColumns'`: a group column per row group is added automatically.\n       * - `'groupRows'`: group rows are automatically added instead of group columns.\n       * - `'custom'`: informs the grid that group columns will be provided.\n       */\n      this.groupDisplayType = undefined;\n      /** If grouping, set to the number of levels to expand by default, e.g. `0` for none, `1` for first level only, etc. Set to `-1` to expand everything.\n       * @default 0\n       */\n      this.groupDefaultExpanded = undefined;\n      /** Allows specifying the group 'auto column' if you are not happy with the default. If grouping, this column definition is included as the first column in the grid. If not grouping, this column is not included.\n       */\n      this.autoGroupColumnDef = undefined;\n      /** When `true`, preserves the current group order when sorting on non-group columns.\n       * @default false\n       */\n      this.groupMaintainOrder = undefined;\n      /** When `true`, if you select a group, the children of the group will also be selected.\n       * @default false\n       */\n      this.groupSelectsChildren = undefined;\n      /** If grouping, locks the group settings of a number of columns, e.g. `0` for no group locking. `1` for first group column locked, `-1` for all group columns locked.\n       * @default 0\n       * @initial\n       */\n      this.groupLockGroupColumns = undefined;\n      /** Set to determine whether filters should be applied on aggregated group values.\n       * @default false\n       */\n      this.groupAggFiltering = undefined;\n      /** If grouping, this controls whether to show a group footer when the group is expanded.\n       * If `true`, then by default, the footer will contain aggregate data (if any) when shown and the header will be blank.\n       * When closed, the header will contain the aggregate data regardless of this setting (as the footer is hidden anyway).\n       * This is handy for 'total' rows, that are displayed below the data when the group is open, and alongside the group when it is closed.\n       * If a callback function is provided, it can used to select which groups will have a footer added.\n       * @default false\n       *\n       * @deprecated v31.3 - use `groupTotalRow` instead.\n       */\n      this.groupIncludeFooter = undefined;\n      /** Set to `true` to show a 'grand total' group footer across all groups.\n       * @default false\n       *\n       * @deprecated v31.3 - use `grandTotalRow` instead.\n       */\n      this.groupIncludeTotalFooter = undefined;\n      /** When provided, an extra row group total row will be inserted into row groups at the specified position, to display\n       * when the group is expanded. This row will contain the aggregate values for the group. If a callback function is\n       * provided, it can be used to selectively determine which groups will have a total row added.\n       */\n      this.groupTotalRow = undefined;\n      /** When provided, an extra grand total row will be inserted into the grid at the specified position.\n       * This row displays the aggregate totals of all rows in the grid.\n       */\n      this.grandTotalRow = undefined;\n      /** Suppress the sticky behaviour of the total rows, can be suppressed individually by passing `'grand'` or `'group'`.\n       */\n      this.suppressStickyTotalRow = undefined;\n      /** If `true`, and showing footer, aggregate data will always be displayed at both the header and footer levels. This stops the possibly undesirable behaviour of the header details 'jumping' to the footer on expand.\n       * @default false\n       */\n      this.groupSuppressBlankHeader = undefined;\n      /** If using `groupSelectsChildren`, then only the children that pass the current filter will get selected.\n       * @default false\n       */\n      this.groupSelectsFiltered = undefined;\n      /** Shows the open group in the group column for non-group rows.\n       * @default false\n       */\n      this.showOpenedGroup = undefined;\n      /** Set to `true` to collapse groups that only have one child.\n       * @default false\n       */\n      this.groupRemoveSingleChildren = undefined;\n      /** Set to `true` to collapse lowest level groups that only have one child.\n       * @default false\n       */\n      this.groupRemoveLowestSingleChildren = undefined;\n      /** Set to `true` to hide parents that are open. When used with multiple columns for showing groups, it can give a more pleasing user experience.\n       * @default false\n       */\n      this.groupHideOpenParents = undefined;\n      /** Set to `true` to prevent the grid from creating a '(Blanks)' group for nodes which do not belong to a group, and display the unbalanced nodes alongside group nodes.\n       * @default false\n       */\n      this.groupAllowUnbalanced = undefined;\n      /** When to show the 'row group panel' (where you drag rows to group) at the top.\n       * @default 'never'\n       */\n      this.rowGroupPanelShow = undefined;\n      /** Provide the Cell Renderer to use when `groupDisplayType = 'groupRows'`.\n       * See [Group Row Cell Renderer](https://www.ag-grid.com/javascript-data-grid/grouping-group-rows/#providing-cell-renderer) for framework specific implementation details.\n       */\n      this.groupRowRenderer = undefined;\n      /** Customise the parameters provided to the `groupRowRenderer` component.\n       */\n      this.groupRowRendererParams = undefined;\n      /** By default, when a column is un-grouped, i.e. using the Row Group Panel, it is made visible in the grid. This property stops the column becoming visible again when un-grouping.\n       * @default false\n       */\n      this.suppressMakeColumnVisibleAfterUnGroup = undefined;\n      /** Set to `true` to enable the Grid to work with Tree Data. You must also implement the `getDataPath(data)` callback.\n       * @default false\n       */\n      this.treeData = undefined;\n      /** Set to `true` to suppress sort indicators and actions from the row group panel.\n       * @default false\n       * @initial\n       */\n      this.rowGroupPanelSuppressSort = undefined;\n      /** Set to `true` prevent Group Rows from sticking to the top of the grid.\n       * @default false\n       * @initial\n       */\n      this.suppressGroupRowsSticky = undefined;\n      /** Data to be displayed as pinned top rows in the grid.\n       */\n      this.pinnedTopRowData = undefined;\n      /** Data to be displayed as pinned bottom rows in the grid.\n       */\n      this.pinnedBottomRowData = undefined;\n      /** Sets the row model type.\n       * @default 'clientSide'\n       * @initial\n       */\n      this.rowModelType = undefined;\n      /** Set the data to be displayed as rows in the grid.\n       */\n      this.rowData = undefined;\n      /** How many milliseconds to wait before executing a batch of async transactions.\n       */\n      this.asyncTransactionWaitMillis = undefined;\n      /** Prevents Transactions changing sort, filter, group or pivot state when transaction only contains updates.\n       * @default false\n       */\n      this.suppressModelUpdateAfterUpdateTransaction = undefined;\n      /** Provide the datasource for infinite scrolling.\n       */\n      this.datasource = undefined;\n      /** How many extra blank rows to display to the user at the end of the dataset, which sets the vertical scroll and then allows the grid to request viewing more rows of data.\n       * @default 1\n       * @initial\n       */\n      this.cacheOverflowSize = undefined;\n      /** How many extra blank rows to display to the user at the end of the dataset, which sets the vertical scroll and then allows the grid to request viewing more rows of data.\n       * @default 1\n       * @initial\n       */\n      this.infiniteInitialRowCount = undefined;\n      /** Set how many loading rows to display to the user for the root level group.\n       * @default 1\n       * @initial\n       */\n      this.serverSideInitialRowCount = undefined;\n      /** When `true`, the Server-side Row Model will suppress Infinite Scrolling and load all the data at the current level.\n       * @default false\n       * @initial\n       * @deprecated v31.1\n       */\n      this.suppressServerSideInfiniteScroll = undefined;\n      /** When `true`, the Server-side Row Model will not use a full width loading renderer, instead using the colDef `loadingCellRenderer` if present.\n       */\n      this.suppressServerSideFullWidthLoadingRow = undefined;\n      /** How many rows for each block in the store, i.e. how many rows returned from the server at a time.\n       * @default 100\n       */\n      this.cacheBlockSize = undefined;\n      /** How many blocks to keep in the store. Default is no limit, so every requested block is kept. Use this if you have memory concerns, and blocks that were least recently viewed will be purged when the limit is hit. The grid will additionally make sure it has all the blocks needed to display what is currently visible, in case this property is set to a low value.\n       * @initial\n       */\n      this.maxBlocksInCache = undefined;\n      /** How many requests to hit the server with concurrently. If the max is reached, requests are queued.\n       * Set to `-1` for no maximum restriction on requests.\n       * @default 2\n       * @initial\n       */\n      this.maxConcurrentDatasourceRequests = undefined;\n      /** How many milliseconds to wait before loading a block. Useful when scrolling over many blocks, as it prevents blocks loading until scrolling has settled.\n       * @initial\n       */\n      this.blockLoadDebounceMillis = undefined;\n      /** When enabled, closing group rows will remove children of that row. Next time the row is opened, child rows will be read from the datasource again. This property only applies when there is Row Grouping or Tree Data.\n       * @default false\n       */\n      this.purgeClosedRowNodes = undefined;\n      /** Provide the `serverSideDatasource` for server side row model.\n       */\n      this.serverSideDatasource = undefined;\n      /** When enabled, always refreshes top level groups regardless of which column was sorted. This property only applies when there is Row Grouping & sorting is handled on the server.\n       * @default false\n       */\n      this.serverSideSortAllLevels = undefined;\n      /** When enabled, sorts fully loaded groups in the browser instead of requesting from the server.\n       * @default false\n       */\n      this.serverSideEnableClientSideSort = undefined;\n      /** When enabled, only refresh groups directly impacted by a filter. This property only applies when there is Row Grouping & filtering is handled on the server.\n       * @default false\n       * @initial\n       */\n      this.serverSideOnlyRefreshFilteredGroups = undefined;\n      /** When enabled, Sorting will be done on the server. Only applicable when `suppressServerSideInfiniteScroll=true`.\n       * @default false\n       * @deprecated v31.1\n       */\n      this.serverSideSortOnServer = undefined;\n      /** When enabled, Filtering will be done on the server. Only applicable when `suppressServerSideInfiniteScroll=true`.\n       * @default false\n       * @deprecated v31.1\n       */\n      this.serverSideFilterOnServer = undefined;\n      /** Used to split pivot field strings for generating pivot result columns when `pivotResultFields` is provided as part of a `getRows` success.\n       * @default '_'\n       * @initial\n       */\n      this.serverSidePivotResultFieldSeparator = undefined;\n      /** To use the viewport row model you need to provide the grid with a `viewportDatasource`.\n       */\n      this.viewportDatasource = undefined;\n      /** When using viewport row model, sets the page size for the viewport.\n       * @initial\n       */\n      this.viewportRowModelPageSize = undefined;\n      /** When using viewport row model, sets the buffer size for the viewport.\n       * @initial\n       */\n      this.viewportRowModelBufferSize = undefined;\n      /** Set to `true` to always show the horizontal scrollbar.\n       * @default false\n       */\n      this.alwaysShowHorizontalScroll = undefined;\n      /** Set to `true` to always show the vertical scrollbar.\n       * @default false\n       */\n      this.alwaysShowVerticalScroll = undefined;\n      /** Set to `true` to debounce the vertical scrollbar. Can provide smoother scrolling on slow machines.\n       * @default false\n       * @initial\n       */\n      this.debounceVerticalScrollbar = undefined;\n      /** Set to `true` to never show the horizontal scroll. This is useful if the grid is aligned with another grid and will scroll when the other grid scrolls. (Should not be used in combination with `alwaysShowHorizontalScroll`.)\n       * @default false\n       */\n      this.suppressHorizontalScroll = undefined;\n      /** When `true`, the grid will not scroll to the top when new row data is provided. Use this if you don't want the default behaviour of scrolling to the top every time you load new data.\n       * @default false\n       */\n      this.suppressScrollOnNewData = undefined;\n      /** When `true`, the grid will not allow mousewheel / touchpad scroll when popup elements are present.\n       * @default false\n       */\n      this.suppressScrollWhenPopupsAreOpen = undefined;\n      /** When `true`, the grid will not use animation frames when drawing rows while scrolling. Use this if the grid is working fast enough that you don't need animation frames and you don't want the grid to flicker.\n       * @default false\n       * @initial\n       */\n      this.suppressAnimationFrame = undefined;\n      /** If `true`, middle clicks will result in `click` events for cells and rows. Otherwise the browser will use middle click to scroll the grid.<br />**Note:** Not all browsers fire `click` events with the middle button. Most will fire only `mousedown` and `mouseup` events, which can be used to focus a cell, but will not work to call the `onCellClicked` function.\n       * @default false\n       */\n      this.suppressMiddleClickScrolls = undefined;\n      /** If `true`, mouse wheel events will be passed to the browser. Useful if your grid has no vertical scrolls and you want the mouse to scroll the browser page.\n       * @default false\n       * @initial\n       */\n      this.suppressPreventDefaultOnMouseWheel = undefined;\n      /** Tell the grid how wide in pixels the scrollbar is, which is used in grid width calculations. Set only if using non-standard browser-provided scrollbars, so the grid can use the non-standard size in its calculations.\n       * @initial\n       */\n      this.scrollbarWidth = undefined;\n      /** Type of Row Selection: `single`, `multiple`.\n       */\n      this.rowSelection = undefined;\n      /** Set to `true` to allow multiple rows to be selected using single click.\n       * @default false\n       */\n      this.rowMultiSelectWithClick = undefined;\n      /** If `true`, rows will not be deselected if you hold down `Ctrl` and click the row or press `Space`.\n       * @default false\n       */\n      this.suppressRowDeselection = undefined;\n      /** If `true`, row selection won't happen when rows are clicked. Use when you only want checkbox selection.\n       * @default false\n       */\n      this.suppressRowClickSelection = undefined;\n      /** If `true`, cells won't be focusable. This means keyboard navigation will be disabled for grid cells, but remain enabled in other elements of the grid such as column headers, floating filters, tool panels.\n       * @default false\n       */\n      this.suppressCellFocus = undefined;\n      /** If `true`, header cells won't be focusable. This means keyboard navigation will be disabled for grid header cells, but remain enabled in other elements of the grid such as grid cells and tool panels.\n       * @default false\n       */\n      this.suppressHeaderFocus = undefined;\n      /** If `true`, only a single range can be selected.\n       * @default false\n       */\n      this.suppressMultiRangeSelection = undefined;\n      /** Set to `true` to be able to select the text within cells.\n       *\n       *     **Note:** When this is set to `true`, the clipboard service is disabled and only selected text is copied.\n       * @default false\n       */\n      this.enableCellTextSelection = undefined;\n      /** Set to `true` to enable Range Selection.\n       * @default false\n       */\n      this.enableRangeSelection = undefined;\n      /** Set to `true` to enable the Range Handle.\n       * @default false\n       */\n      this.enableRangeHandle = undefined;\n      /** Set to `true` to enable the Fill Handle.\n       * @default false\n       */\n      this.enableFillHandle = undefined;\n      /** Set to `'x'` to force the fill handle direction to horizontal, or set to `'y'` to force the fill handle direction to vertical.\n       * @default 'xy'\n       */\n      this.fillHandleDirection = undefined;\n      /** Set this to `true` to prevent cell values from being cleared when the Range Selection is reduced by the Fill Handle.\n       * @default false\n       */\n      this.suppressClearOnFillReduction = undefined;\n      /** Array defining the order in which sorting occurs (if sorting is enabled). Values can be `'asc'`, `'desc'` or `null`. For example: `sortingOrder: ['asc', 'desc']`.\n       * @default [null, 'asc', 'desc']\n       */\n      this.sortingOrder = undefined;\n      /** Set to `true` to specify that the sort should take accented characters into account. If this feature is turned on the sort will be slower.\n       * @default false\n       */\n      this.accentedSort = undefined;\n      /** Set to `true` to show the 'no sort' icon.\n       * @default false\n       */\n      this.unSortIcon = undefined;\n      /** Set to `true` to suppress multi-sort when the user shift-clicks a column header.\n       * @default false\n       */\n      this.suppressMultiSort = undefined;\n      /** Set to `true` to always multi-sort when the user clicks a column header, regardless of key presses.\n       * @default false\n       */\n      this.alwaysMultiSort = undefined;\n      /** Set to `'ctrl'` to have multi sorting work using the `Ctrl` (or `Command ⌘` for Mac) key.\n       */\n      this.multiSortKey = undefined;\n      /** Set to `true` to suppress sorting of un-sorted data to match original row data.\n       * @default false\n       */\n      this.suppressMaintainUnsortedOrder = undefined;\n      /** Icons to use inside the grid instead of the grid's default icons.\n       * @initial\n       */\n      this.icons = undefined;\n      /** Default row height in pixels.\n       * @default 25\n       */\n      this.rowHeight = undefined;\n      /** The style properties to apply to all rows. Set to an object of key (style names) and values (style values).\n       */\n      this.rowStyle = undefined;\n      /** CSS class(es) for all rows. Provide either a string (class name) or array of strings (array of class names).\n       */\n      this.rowClass = undefined;\n      /** Rules which can be applied to include certain CSS classes.\n       */\n      this.rowClassRules = undefined;\n      /** Set to `true` to not highlight rows by adding the `ag-row-hover` CSS class.\n       * @default false\n       */\n      this.suppressRowHoverHighlight = undefined;\n      /** Uses CSS `top` instead of CSS `transform` for positioning rows. Useful if the transform function is causing issues such as used in row spanning.\n       * @default false\n       * @initial\n       */\n      this.suppressRowTransform = undefined;\n      /** Set to `true` to highlight columns by adding the `ag-column-hover` CSS class.\n       * @default false\n       */\n      this.columnHoverHighlight = undefined;\n      /** Provide a custom `gridId` for this instance of the grid. Value will be set on the root DOM node using the attribute `grid-id` as well as being accessible via the `gridApi.getGridId()` method.\n       * @initial\n       */\n      this.gridId = undefined;\n      /** When enabled, sorts only the rows added/updated by a transaction.\n       * @default false\n       */\n      this.deltaSort = undefined;\n      /**/\n      this.treeDataDisplayType = undefined;\n      /** @initial\n       */\n      this.enableGroupEdit = undefined;\n      /** Initial state for the grid. Only read once on initialization. Can be used in conjunction with `api.getState()` to save and restore grid state.\n       * @initial\n       */\n      this.initialState = undefined;\n      /** For customising the context menu.\n       */\n      this.getContextMenuItems = undefined;\n      /** For customising the main 'column header' menu.\n       * @initial\n       */\n      this.getMainMenuItems = undefined;\n      /** Allows user to process popups after they are created. Applications can use this if they want to, for example, reposition the popup.\n       */\n      this.postProcessPopup = undefined;\n      /** Allows the user to process the columns being removed from the pinned section because the viewport is too small to accommodate them.\n       * Returns an array of columns to be removed from the pinned areas.\n       * @initial\n       */\n      this.processUnpinnedColumns = undefined;\n      /** Allows you to process cells for the clipboard. Handy if for example you have `Date` objects that need to have a particular format if importing into Excel.\n       */\n      this.processCellForClipboard = undefined;\n      /** Allows you to process header values for the clipboard.\n       */\n      this.processHeaderForClipboard = undefined;\n      /** Allows you to process group header values for the clipboard.\n       */\n      this.processGroupHeaderForClipboard = undefined;\n      /** Allows you to process cells from the clipboard. Handy if for example you have number fields, and want to block non-numbers from getting into the grid.\n       */\n      this.processCellFromClipboard = undefined;\n      /** Allows you to get the data that would otherwise go to the clipboard. To be used when you want to control the 'copy to clipboard' operation yourself.\n       */\n      this.sendToClipboard = undefined;\n      /** Allows complete control of the paste operation, including cancelling the operation (so nothing happens) or replacing the data with other data.\n       */\n      this.processDataFromClipboard = undefined;\n      /** Grid calls this method to know if an external filter is present.\n       */\n      this.isExternalFilterPresent = undefined;\n      /** Should return `true` if external filter passes, otherwise `false`.\n       */\n      this.doesExternalFilterPass = undefined;\n      /** Callback to be used to customise the chart toolbar items.\n       * @initial\n       */\n      this.getChartToolbarItems = undefined;\n      /** Callback to enable displaying the chart in an alternative chart container.\n       * @initial\n       */\n      this.createChartContainer = undefined;\n      /** Allows overriding the element that will be focused when the grid receives focus from outside elements (tabbing into the grid).\n       * @returns `True` if this function should override the grid's default behavior, `False` to allow the grid's default behavior.\n       */\n      this.focusGridInnerElement = undefined;\n      /** Allows overriding the default behaviour for when user hits navigation (arrow) key when a header is focused. Return the next Header position to navigate to or `null` to stay on current header.\n       */\n      this.navigateToNextHeader = undefined;\n      /** Allows overriding the default behaviour for when user hits `Tab` key when a header is focused.\n       * Return the next header position to navigate to, `true` to stay on the current header,\n       * or `false` to let the browser handle the tab behaviour.\n       * As of v31.3, returning `null` is deprecated.\n       */\n      this.tabToNextHeader = undefined;\n      /** Allows overriding the default behaviour for when user hits navigation (arrow) key when a cell is focused. Return the next Cell position to navigate to or `null` to stay on current cell.\n       */\n      this.navigateToNextCell = undefined;\n      /** Allows overriding the default behaviour for when user hits `Tab` key when a cell is focused.\n       * Return the next cell position to navigate to, `true` to stay on the current cell,\n       * or `false` to let the browser handle the tab behaviour.\n       * As of v31.3, returning `null` is deprecated.\n       */\n      this.tabToNextCell = undefined;\n      /** A callback for localising text within the grid.\n       * @initial\n       */\n      this.getLocaleText = undefined;\n      /** Allows overriding what `document` is used. Currently used by Drag and Drop (may extend to other places in the future). Use this when you want the grid to use a different `document` than the one available on the global scope. This can happen if docking out components (something which Electron supports)\n       */\n      this.getDocument = undefined;\n      /** Allows user to format the numbers in the pagination panel, i.e. 'row count' and 'page number' labels. This is for pagination panel only, to format numbers inside the grid's cells (i.e. your data), then use `valueFormatter` in the column definitions.\n       * @initial\n       */\n      this.paginationNumberFormatter = undefined;\n      /** Callback to use when you need access to more then the current column for aggregation.\n       */\n      this.getGroupRowAgg = undefined;\n      /** (Client-side Row Model only) Allows groups to be open by default.\n       */\n      this.isGroupOpenByDefault = undefined;\n      /** Allows default sorting of groups.\n       */\n      this.initialGroupOrderComparator = undefined;\n      /** Callback to be used with pivoting, to allow changing the second column definition.\n       */\n      this.processPivotResultColDef = undefined;\n      /** Callback to be used with pivoting, to allow changing the second column group definition.\n       */\n      this.processPivotResultColGroupDef = undefined;\n      /** Callback to be used when working with Tree Data when `treeData = true`.\n       */\n      this.getDataPath = undefined;\n      /** Allows setting the child count for a group row.\n       * @initial\n       */\n      this.getChildCount = undefined;\n      /** Allows providing different params for different levels of grouping.\n       * @initial\n       */\n      this.getServerSideGroupLevelParams = undefined;\n      /** Allows groups to be open by default.\n       */\n      this.isServerSideGroupOpenByDefault = undefined;\n      /** Allows cancelling transactions.\n       */\n      this.isApplyServerSideTransaction = undefined;\n      /** SSRM Tree Data: Allows specifying which rows are expandable.\n       */\n      this.isServerSideGroup = undefined;\n      /** SSRM Tree Data: Allows specifying group keys.\n       */\n      this.getServerSideGroupKey = undefined;\n      /** Return a business key for the node. If implemented, each row in the DOM will have an attribute `row-business-key='abc'` where `abc` is what you return as the business key.\n       * This is useful for automated testing, as it provides a way for your tool to identify rows based on unique business keys.\n       */\n      this.getBusinessKeyForNode = undefined;\n      /** Provide a pure function that returns a string ID to uniquely identify a given row. This enables the grid to work optimally with data changes and updates.\n       * @initial\n       */\n      this.getRowId = undefined;\n      /** When enabled, getRowId() callback is implemented and new Row Data is set, the grid will disregard all previous rows and treat the new Row Data as new data. As a consequence, all Row State (eg selection, rendered rows) will be reset.\n       * @default false\n       */\n      this.resetRowDataOnUpdate = undefined;\n      /** Callback fired after the row is rendered into the DOM. Should not be used to initiate side effects.\n       */\n      this.processRowPostCreate = undefined;\n      /** Callback to be used to determine which rows are selectable. By default rows are selectable, so return `false` to make a row un-selectable.\n       */\n      this.isRowSelectable = undefined;\n      /** Callback to be used with Master Detail to determine if a row should be a master row. If `false` is returned no detail row will exist for this row.\n       */\n      this.isRowMaster = undefined;\n      /** Callback to fill values instead of simply copying values or increasing number values using linear progression.\n       */\n      this.fillOperation = undefined;\n      /** Callback to perform additional sorting after the grid has sorted the rows.\n       */\n      this.postSortRows = undefined;\n      /** Callback version of property `rowStyle` to set style for each row individually. Function should return an object of CSS values or undefined for no styles.\n       */\n      this.getRowStyle = undefined;\n      /** Callback version of property `rowClass` to set class(es) for each row individually. Function should return either a string (class name), array of strings (array of class names) or undefined for no class.\n       */\n      this.getRowClass = undefined;\n      /** Callback version of property `rowHeight` to set height for each row individually. Function should return a positive number of pixels, or return `null`/`undefined` to use the default row height.\n       */\n      this.getRowHeight = undefined;\n      /** Tells the grid if this row should be rendered as full width.\n       */\n      this.isFullWidthRow = undefined;\n      /** The tool panel visibility has changed. Fires twice if switching between panels - once with the old panel and once with the new panel.\n       */\n      this.toolPanelVisibleChanged = new EventEmitter();\n      /** The tool panel size has been changed.\n       */\n      this.toolPanelSizeChanged = new EventEmitter();\n      /** The column menu visibility has changed. Fires twice if switching between tabs - once with the old tab and once with the new tab.\n       */\n      this.columnMenuVisibleChanged = new EventEmitter();\n      /** The context menu visibility has changed (opened or closed).\n       */\n      this.contextMenuVisibleChanged = new EventEmitter();\n      /** Cut operation has started.\n       */\n      this.cutStart = new EventEmitter();\n      /** Cut operation has ended.\n       */\n      this.cutEnd = new EventEmitter();\n      /** Paste operation has started.\n       */\n      this.pasteStart = new EventEmitter();\n      /** Paste operation has ended.\n       */\n      this.pasteEnd = new EventEmitter();\n      /** A column, or group of columns, was hidden / shown.\n       */\n      this.columnVisible = new EventEmitter();\n      /** A column, or group of columns, was pinned / unpinned.\n       */\n      this.columnPinned = new EventEmitter();\n      /** A column was resized.\n       */\n      this.columnResized = new EventEmitter();\n      /** A column was moved.\n       */\n      this.columnMoved = new EventEmitter();\n      /** A value column was added or removed.\n       */\n      this.columnValueChanged = new EventEmitter();\n      /** The pivot mode flag was changed.\n       */\n      this.columnPivotModeChanged = new EventEmitter();\n      /** A pivot column was added, removed or order changed.\n       */\n      this.columnPivotChanged = new EventEmitter();\n      /** A column group was opened / closed.\n       */\n      this.columnGroupOpened = new EventEmitter();\n      /** User set new columns.\n       */\n      this.newColumnsLoaded = new EventEmitter();\n      /** The list of grid columns changed.\n       */\n      this.gridColumnsChanged = new EventEmitter();\n      /** The list of displayed columns changed. This can result from columns open / close, column move, pivot, group, etc.\n       */\n      this.displayedColumnsChanged = new EventEmitter();\n      /** The list of rendered columns changed (only columns in the visible scrolled viewport are rendered by default).\n       */\n      this.virtualColumnsChanged = new EventEmitter();\n      /** Shotgun - gets called when either a) new columns are set or b) `api.applyColumnState()` is used, so everything has changed.\n       */\n      this.columnEverythingChanged = new EventEmitter();\n      /** A mouse cursor is initially moved over a column header.\n       */\n      this.columnHeaderMouseOver = new EventEmitter();\n      /** A mouse cursor is moved out of a column header.\n       */\n      this.columnHeaderMouseLeave = new EventEmitter();\n      /** A click is performed on a column header.\n       */\n      this.columnHeaderClicked = new EventEmitter();\n      /** A context menu action, such as right-click or context menu key press, is performed on a column header.\n       */\n      this.columnHeaderContextMenu = new EventEmitter();\n      /** Only used by Angular, React and VueJS AG Grid components (not used if doing plain JavaScript).\n       * If the grid receives changes due to bound properties, this event fires after the grid has finished processing the change.\n       */\n      this.componentStateChanged = new EventEmitter();\n      /** Value has changed after editing (this event will not fire if editing was cancelled, eg ESC was pressed) or\n       *  if cell value has changed as a result of cut, paste, cell clear (pressing Delete key),\n       * fill handle, copy range down, undo and redo.\n       */\n      this.cellValueChanged = new EventEmitter();\n      /** Value has changed after editing. Only fires when `readOnlyEdit=true`.\n       */\n      this.cellEditRequest = new EventEmitter();\n      /** A cell's value within a row has changed. This event corresponds to Full Row Editing only.\n       */\n      this.rowValueChanged = new EventEmitter();\n      /** Editing a cell has started.\n       */\n      this.cellEditingStarted = new EventEmitter();\n      /** Editing a cell has stopped.\n       */\n      this.cellEditingStopped = new EventEmitter();\n      /** Editing a row has started (when row editing is enabled). When row editing, this event will be fired once and `cellEditingStarted` will be fired for each individual cell. Only fires when doing Full Row Editing.\n       */\n      this.rowEditingStarted = new EventEmitter();\n      /** Editing a row has stopped (when row editing is enabled). When row editing, this event will be fired once and `cellEditingStopped` will be fired for each individual cell. Only fires when doing Full Row Editing.\n       */\n      this.rowEditingStopped = new EventEmitter();\n      /** Undo operation has started.\n       */\n      this.undoStarted = new EventEmitter();\n      /** Undo operation has ended.\n       */\n      this.undoEnded = new EventEmitter();\n      /** Redo operation has started.\n       */\n      this.redoStarted = new EventEmitter();\n      /** Redo operation has ended.\n       */\n      this.redoEnded = new EventEmitter();\n      /** Range delete operation (cell clear) has started.\n       */\n      this.rangeDeleteStart = new EventEmitter();\n      /** Range delete operation (cell clear) has ended.\n       */\n      this.rangeDeleteEnd = new EventEmitter();\n      /** Fill operation has started.\n       */\n      this.fillStart = new EventEmitter();\n      /** Fill operation has ended.\n       */\n      this.fillEnd = new EventEmitter();\n      /** Filter has been opened.\n       */\n      this.filterOpened = new EventEmitter();\n      /** Filter has been modified and applied.\n       */\n      this.filterChanged = new EventEmitter();\n      /** Filter was modified but not applied. Used when filters have 'Apply' buttons.\n       */\n      this.filterModified = new EventEmitter();\n      /** Advanced Filter Builder visibility has changed (opened or closed).\n       */\n      this.advancedFilterBuilderVisibleChanged = new EventEmitter();\n      /** A chart has been created.\n       */\n      this.chartCreated = new EventEmitter();\n      /** The data range for the chart has been changed.\n       */\n      this.chartRangeSelectionChanged = new EventEmitter();\n      /** Formatting changes have been made by users through the Customize Panel.\n       */\n      this.chartOptionsChanged = new EventEmitter();\n      /** A chart has been destroyed.\n       */\n      this.chartDestroyed = new EventEmitter();\n      /** DOM event `keyDown` happened on a cell.\n       */\n      this.cellKeyDown = new EventEmitter();\n      /** The grid has initialised and is ready for most api calls, but may not be fully rendered yet      */\n      this.gridReady = new EventEmitter();\n      /** Fired the first time data is rendered into the grid. Use this event if you want to auto resize columns based on their contents     */\n      this.firstDataRendered = new EventEmitter();\n      /** The size of the grid `div` has changed. In other words, the grid was resized.\n       */\n      this.gridSizeChanged = new EventEmitter();\n      /** Displayed rows have changed. Triggered after sort, filter or tree expand / collapse events.\n       */\n      this.modelUpdated = new EventEmitter();\n      /** A row was removed from the DOM, for any reason. Use to clean up resources (if any) used by the row.\n       */\n      this.virtualRowRemoved = new EventEmitter();\n      /** Which rows are rendered in the DOM has changed.\n       */\n      this.viewportChanged = new EventEmitter();\n      /** The body was scrolled horizontally or vertically.\n       */\n      this.bodyScroll = new EventEmitter();\n      /** Main body of the grid has stopped scrolling, either horizontally or vertically.\n       */\n      this.bodyScrollEnd = new EventEmitter();\n      /** When dragging starts. This could be any action that uses the grid's Drag and Drop service, e.g. Column Moving, Column Resizing, Range Selection, Fill Handle, etc.\n       */\n      this.dragStarted = new EventEmitter();\n      /** When dragging stops. This could be any action that uses the grid's Drag and Drop service, e.g. Column Moving, Column Resizing, Range Selection, Fill Handle, etc.\n       */\n      this.dragStopped = new EventEmitter();\n      /** Grid state has been updated.\n       */\n      this.stateUpdated = new EventEmitter();\n      /** Triggered every time the paging state changes. Some of the most common scenarios for this event to be triggered are:\n       *\n       *  - The page size changes.\n       *  - The current shown page is changed.\n       *  - New data is loaded onto the grid.\n       */\n      this.paginationChanged = new EventEmitter();\n      /** A drag has started, or dragging was already started and the mouse has re-entered the grid having previously left the grid.\n       */\n      this.rowDragEnter = new EventEmitter();\n      /** The mouse has moved while dragging.\n       */\n      this.rowDragMove = new EventEmitter();\n      /** The mouse has left the grid while dragging.\n       */\n      this.rowDragLeave = new EventEmitter();\n      /** The drag has finished over the grid.\n       */\n      this.rowDragEnd = new EventEmitter();\n      /** A row group column was added, removed or reordered.\n       */\n      this.columnRowGroupChanged = new EventEmitter();\n      /** A row group was opened or closed.\n       */\n      this.rowGroupOpened = new EventEmitter();\n      /** Fired when calling either of the API methods `expandAll()` or `collapseAll()`.\n       */\n      this.expandOrCollapseAll = new EventEmitter();\n      /** Exceeded the `pivotMaxGeneratedColumns` limit when generating columns.\n       */\n      this.pivotMaxColumnsExceeded = new EventEmitter();\n      /** The client has set new pinned row data into the grid.\n       */\n      this.pinnedRowDataChanged = new EventEmitter();\n      /** Client-Side Row Model only. The client has updated data for the grid by either a) setting new Row Data or b) Applying a Row Transaction.\n       */\n      this.rowDataUpdated = new EventEmitter();\n      /** Async transactions have been applied. Contains a list of all transaction results.\n       */\n      this.asyncTransactionsFlushed = new EventEmitter();\n      /** A server side store has finished refreshing.\n       */\n      this.storeRefreshed = new EventEmitter();\n      /** Header is focused.\n       */\n      this.headerFocused = new EventEmitter();\n      /** Cell is clicked.\n       */\n      this.cellClicked = new EventEmitter();\n      /** Cell is double clicked.\n       */\n      this.cellDoubleClicked = new EventEmitter();\n      /** Cell is focused.\n       */\n      this.cellFocused = new EventEmitter();\n      /** Mouse entered cell.\n       */\n      this.cellMouseOver = new EventEmitter();\n      /** Mouse left cell.\n       */\n      this.cellMouseOut = new EventEmitter();\n      /** Mouse down on cell.\n       */\n      this.cellMouseDown = new EventEmitter();\n      /** Row is clicked.\n       */\n      this.rowClicked = new EventEmitter();\n      /** Row is double clicked.\n       */\n      this.rowDoubleClicked = new EventEmitter();\n      /** Row is selected or deselected. The event contains the node in question, so call the node's `isSelected()` method to see if it was just selected or deselected.\n       */\n      this.rowSelected = new EventEmitter();\n      /** Row selection is changed. Use the grid API `getSelectedNodes()` or `getSelectedRows()` to get the new list of selected nodes / row data.\n       */\n      this.selectionChanged = new EventEmitter();\n      /** Cell is right clicked.\n       */\n      this.cellContextMenu = new EventEmitter();\n      /** A change to range selection has occurred.\n       */\n      this.rangeSelectionChanged = new EventEmitter();\n      /** A tooltip has been displayed     */\n      this.tooltipShow = new EventEmitter();\n      /** A tooltip was hidden     */\n      this.tooltipHide = new EventEmitter();\n      /** Sort has changed. The grid also listens for this and updates the model.\n       */\n      this.sortChanged = new EventEmitter();\n      this._nativeElement = elementDef.nativeElement;\n    }\n    ngAfterViewInit() {\n      // Run the setup outside of angular so all the event handlers that are created do not trigger change detection\n      this.angularFrameworkOverrides.runOutsideAngular(() => {\n        this.frameworkComponentWrapper.setViewContainerRef(this.viewContainerRef, this.angularFrameworkOverrides);\n        const mergedGridOps = _combineAttributesAndGridOptions(this.gridOptions, this);\n        this.gridParams = {\n          globalEventListener: this.globalEventListener.bind(this),\n          frameworkOverrides: this.angularFrameworkOverrides,\n          providedBeanInstances: {\n            frameworkComponentWrapper: this.frameworkComponentWrapper\n          },\n          modules: this.modules || []\n        };\n        const api = createGrid(this._nativeElement, mergedGridOps, this.gridParams);\n        if (api) {\n          this.api = api;\n        }\n        this._initialised = true;\n        // sometimes, especially in large client apps gridReady can fire before ngAfterViewInit\n        // this ties these together so that gridReady will always fire after agGridAngular's ngAfterViewInit\n        // the actual containing component's ngAfterViewInit will fire just after agGridAngular's\n        this._resolveFullyReady();\n      });\n    }\n    ngOnChanges(changes) {\n      if (this._initialised) {\n        // Run the changes outside of angular so any event handlers that are created do not trigger change detection\n        this.angularFrameworkOverrides.runOutsideAngular(() => {\n          const gridOptions = {};\n          Object.entries(changes).forEach(([key, value]) => {\n            gridOptions[key] = value.currentValue;\n          });\n          _processOnChange(gridOptions, this.api);\n        });\n      }\n    }\n    ngOnDestroy() {\n      if (this._initialised) {\n        // need to do this before the destroy, so we know not to emit any events\n        // while tearing down the grid.\n        this._destroyed = true;\n        // could be null if grid failed to initialise\n        this.api?.destroy();\n      }\n    }\n    // we'll emit the emit if a user is listening for a given event either on the component via normal angular binding\n    // or via gridOptions\n    isEmitterUsed(eventType) {\n      const emitter = this[eventType];\n      // For RxJs compatibility we need to check for observed v7+ or observers v6\n      const emitterAny = emitter;\n      const hasEmitter = emitterAny?.observed ?? emitterAny?.observers?.length > 0;\n      // gridReady => onGridReady\n      const asEventName = `on${eventType.charAt(0).toUpperCase()}${eventType.substring(1)}`;\n      const hasGridOptionListener = !!this.gridOptions && !!this.gridOptions[asEventName];\n      return hasEmitter || hasGridOptionListener;\n    }\n    globalEventListener(eventType, event) {\n      // if we are tearing down, don't emit angular events, as this causes\n      // problems with the angular router\n      if (this._destroyed) {\n        return;\n      }\n      // generically look up the eventType\n      const emitter = this[eventType];\n      if (emitter && this.isEmitterUsed(eventType)) {\n        // Make sure we emit within the angular zone, so change detection works properly\n        const fireEmitter = () => this.angularFrameworkOverrides.runInsideAngular(() => emitter.emit(event));\n        if (eventType === 'gridReady') {\n          // if the user is listening for gridReady, wait for ngAfterViewInit to fire first, then emit then gridReady event\n          this._fullyReady.then(() => fireEmitter());\n        } else {\n          fireEmitter();\n        }\n      }\n    }\n    static {\n      this.ɵfac = function AgGridAngular_Factory(t) {\n        return new (t || AgGridAngular)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(AngularFrameworkOverrides), i0.ɵɵdirectiveInject(AngularFrameworkComponentWrapper));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: AgGridAngular,\n        selectors: [[\"ag-grid-angular\"]],\n        inputs: {\n          gridOptions: \"gridOptions\",\n          modules: \"modules\",\n          statusBar: \"statusBar\",\n          sideBar: \"sideBar\",\n          suppressContextMenu: \"suppressContextMenu\",\n          preventDefaultOnContextMenu: \"preventDefaultOnContextMenu\",\n          allowContextMenuWithControlKey: \"allowContextMenuWithControlKey\",\n          columnMenu: \"columnMenu\",\n          suppressMenuHide: \"suppressMenuHide\",\n          enableBrowserTooltips: \"enableBrowserTooltips\",\n          tooltipTrigger: \"tooltipTrigger\",\n          tooltipShowDelay: \"tooltipShowDelay\",\n          tooltipHideDelay: \"tooltipHideDelay\",\n          tooltipMouseTrack: \"tooltipMouseTrack\",\n          tooltipShowMode: \"tooltipShowMode\",\n          tooltipInteraction: \"tooltipInteraction\",\n          popupParent: \"popupParent\",\n          copyHeadersToClipboard: \"copyHeadersToClipboard\",\n          copyGroupHeadersToClipboard: \"copyGroupHeadersToClipboard\",\n          clipboardDelimiter: \"clipboardDelimiter\",\n          suppressCopyRowsToClipboard: \"suppressCopyRowsToClipboard\",\n          suppressCopySingleCellRanges: \"suppressCopySingleCellRanges\",\n          suppressLastEmptyLineOnPaste: \"suppressLastEmptyLineOnPaste\",\n          suppressClipboardPaste: \"suppressClipboardPaste\",\n          suppressClipboardApi: \"suppressClipboardApi\",\n          suppressCutToClipboard: \"suppressCutToClipboard\",\n          columnDefs: \"columnDefs\",\n          defaultColDef: \"defaultColDef\",\n          defaultColGroupDef: \"defaultColGroupDef\",\n          columnTypes: \"columnTypes\",\n          dataTypeDefinitions: \"dataTypeDefinitions\",\n          maintainColumnOrder: \"maintainColumnOrder\",\n          suppressFieldDotNotation: \"suppressFieldDotNotation\",\n          headerHeight: \"headerHeight\",\n          groupHeaderHeight: \"groupHeaderHeight\",\n          floatingFiltersHeight: \"floatingFiltersHeight\",\n          pivotHeaderHeight: \"pivotHeaderHeight\",\n          pivotGroupHeaderHeight: \"pivotGroupHeaderHeight\",\n          allowDragFromColumnsToolPanel: \"allowDragFromColumnsToolPanel\",\n          suppressMovableColumns: \"suppressMovableColumns\",\n          suppressColumnMoveAnimation: \"suppressColumnMoveAnimation\",\n          suppressDragLeaveHidesColumns: \"suppressDragLeaveHidesColumns\",\n          suppressRowGroupHidesColumns: \"suppressRowGroupHidesColumns\",\n          colResizeDefault: \"colResizeDefault\",\n          suppressAutoSize: \"suppressAutoSize\",\n          autoSizePadding: \"autoSizePadding\",\n          skipHeaderOnAutoSize: \"skipHeaderOnAutoSize\",\n          autoSizeStrategy: \"autoSizeStrategy\",\n          components: \"components\",\n          editType: \"editType\",\n          singleClickEdit: \"singleClickEdit\",\n          suppressClickEdit: \"suppressClickEdit\",\n          readOnlyEdit: \"readOnlyEdit\",\n          stopEditingWhenCellsLoseFocus: \"stopEditingWhenCellsLoseFocus\",\n          enterNavigatesVertically: \"enterNavigatesVertically\",\n          enterNavigatesVerticallyAfterEdit: \"enterNavigatesVerticallyAfterEdit\",\n          enableCellEditingOnBackspace: \"enableCellEditingOnBackspace\",\n          undoRedoCellEditing: \"undoRedoCellEditing\",\n          undoRedoCellEditingLimit: \"undoRedoCellEditingLimit\",\n          defaultCsvExportParams: \"defaultCsvExportParams\",\n          suppressCsvExport: \"suppressCsvExport\",\n          defaultExcelExportParams: \"defaultExcelExportParams\",\n          suppressExcelExport: \"suppressExcelExport\",\n          excelStyles: \"excelStyles\",\n          quickFilterText: \"quickFilterText\",\n          cacheQuickFilter: \"cacheQuickFilter\",\n          includeHiddenColumnsInQuickFilter: \"includeHiddenColumnsInQuickFilter\",\n          quickFilterParser: \"quickFilterParser\",\n          quickFilterMatcher: \"quickFilterMatcher\",\n          applyQuickFilterBeforePivotOrAgg: \"applyQuickFilterBeforePivotOrAgg\",\n          excludeChildrenWhenTreeDataFiltering: \"excludeChildrenWhenTreeDataFiltering\",\n          enableAdvancedFilter: \"enableAdvancedFilter\",\n          advancedFilterModel: \"advancedFilterModel\",\n          includeHiddenColumnsInAdvancedFilter: \"includeHiddenColumnsInAdvancedFilter\",\n          advancedFilterParent: \"advancedFilterParent\",\n          advancedFilterBuilderParams: \"advancedFilterBuilderParams\",\n          suppressAdvancedFilterEval: \"suppressAdvancedFilterEval\",\n          enableCharts: \"enableCharts\",\n          chartThemes: \"chartThemes\",\n          customChartThemes: \"customChartThemes\",\n          chartThemeOverrides: \"chartThemeOverrides\",\n          chartToolPanelsDef: \"chartToolPanelsDef\",\n          chartMenuItems: \"chartMenuItems\",\n          loadingCellRenderer: \"loadingCellRenderer\",\n          loadingCellRendererParams: \"loadingCellRendererParams\",\n          loadingCellRendererSelector: \"loadingCellRendererSelector\",\n          localeText: \"localeText\",\n          masterDetail: \"masterDetail\",\n          keepDetailRows: \"keepDetailRows\",\n          keepDetailRowsCount: \"keepDetailRowsCount\",\n          detailCellRenderer: \"detailCellRenderer\",\n          detailCellRendererParams: \"detailCellRendererParams\",\n          detailRowHeight: \"detailRowHeight\",\n          detailRowAutoHeight: \"detailRowAutoHeight\",\n          context: \"context\",\n          alignedGrids: \"alignedGrids\",\n          tabIndex: \"tabIndex\",\n          rowBuffer: \"rowBuffer\",\n          valueCache: \"valueCache\",\n          valueCacheNeverExpires: \"valueCacheNeverExpires\",\n          enableCellExpressions: \"enableCellExpressions\",\n          suppressTouch: \"suppressTouch\",\n          suppressFocusAfterRefresh: \"suppressFocusAfterRefresh\",\n          suppressAsyncEvents: \"suppressAsyncEvents\",\n          suppressBrowserResizeObserver: \"suppressBrowserResizeObserver\",\n          suppressPropertyNamesCheck: \"suppressPropertyNamesCheck\",\n          suppressChangeDetection: \"suppressChangeDetection\",\n          debug: \"debug\",\n          loading: \"loading\",\n          overlayLoadingTemplate: \"overlayLoadingTemplate\",\n          loadingOverlayComponent: \"loadingOverlayComponent\",\n          loadingOverlayComponentParams: \"loadingOverlayComponentParams\",\n          suppressLoadingOverlay: \"suppressLoadingOverlay\",\n          overlayNoRowsTemplate: \"overlayNoRowsTemplate\",\n          noRowsOverlayComponent: \"noRowsOverlayComponent\",\n          noRowsOverlayComponentParams: \"noRowsOverlayComponentParams\",\n          suppressNoRowsOverlay: \"suppressNoRowsOverlay\",\n          pagination: \"pagination\",\n          paginationPageSize: \"paginationPageSize\",\n          paginationPageSizeSelector: \"paginationPageSizeSelector\",\n          paginationAutoPageSize: \"paginationAutoPageSize\",\n          paginateChildRows: \"paginateChildRows\",\n          suppressPaginationPanel: \"suppressPaginationPanel\",\n          pivotMode: \"pivotMode\",\n          pivotPanelShow: \"pivotPanelShow\",\n          pivotMaxGeneratedColumns: \"pivotMaxGeneratedColumns\",\n          pivotDefaultExpanded: \"pivotDefaultExpanded\",\n          pivotColumnGroupTotals: \"pivotColumnGroupTotals\",\n          pivotRowTotals: \"pivotRowTotals\",\n          pivotSuppressAutoColumn: \"pivotSuppressAutoColumn\",\n          suppressExpandablePivotGroups: \"suppressExpandablePivotGroups\",\n          functionsReadOnly: \"functionsReadOnly\",\n          aggFuncs: \"aggFuncs\",\n          suppressAggFuncInHeader: \"suppressAggFuncInHeader\",\n          alwaysAggregateAtRootLevel: \"alwaysAggregateAtRootLevel\",\n          aggregateOnlyChangedColumns: \"aggregateOnlyChangedColumns\",\n          suppressAggFilteredOnly: \"suppressAggFilteredOnly\",\n          removePivotHeaderRowWhenSingleValueColumn: \"removePivotHeaderRowWhenSingleValueColumn\",\n          animateRows: \"animateRows\",\n          enableCellChangeFlash: \"enableCellChangeFlash\",\n          cellFlashDuration: \"cellFlashDuration\",\n          cellFlashDelay: \"cellFlashDelay\",\n          cellFadeDuration: \"cellFadeDuration\",\n          cellFadeDelay: \"cellFadeDelay\",\n          allowShowChangeAfterFilter: \"allowShowChangeAfterFilter\",\n          domLayout: \"domLayout\",\n          ensureDomOrder: \"ensureDomOrder\",\n          enableRtl: \"enableRtl\",\n          suppressColumnVirtualisation: \"suppressColumnVirtualisation\",\n          suppressMaxRenderedRowRestriction: \"suppressMaxRenderedRowRestriction\",\n          suppressRowVirtualisation: \"suppressRowVirtualisation\",\n          rowDragManaged: \"rowDragManaged\",\n          suppressRowDrag: \"suppressRowDrag\",\n          suppressMoveWhenRowDragging: \"suppressMoveWhenRowDragging\",\n          rowDragEntireRow: \"rowDragEntireRow\",\n          rowDragMultiRow: \"rowDragMultiRow\",\n          rowDragText: \"rowDragText\",\n          fullWidthCellRenderer: \"fullWidthCellRenderer\",\n          fullWidthCellRendererParams: \"fullWidthCellRendererParams\",\n          embedFullWidthRows: \"embedFullWidthRows\",\n          suppressGroupMaintainValueType: \"suppressGroupMaintainValueType\",\n          groupDisplayType: \"groupDisplayType\",\n          groupDefaultExpanded: \"groupDefaultExpanded\",\n          autoGroupColumnDef: \"autoGroupColumnDef\",\n          groupMaintainOrder: \"groupMaintainOrder\",\n          groupSelectsChildren: \"groupSelectsChildren\",\n          groupLockGroupColumns: \"groupLockGroupColumns\",\n          groupAggFiltering: \"groupAggFiltering\",\n          groupIncludeFooter: \"groupIncludeFooter\",\n          groupIncludeTotalFooter: \"groupIncludeTotalFooter\",\n          groupTotalRow: \"groupTotalRow\",\n          grandTotalRow: \"grandTotalRow\",\n          suppressStickyTotalRow: \"suppressStickyTotalRow\",\n          groupSuppressBlankHeader: \"groupSuppressBlankHeader\",\n          groupSelectsFiltered: \"groupSelectsFiltered\",\n          showOpenedGroup: \"showOpenedGroup\",\n          groupRemoveSingleChildren: \"groupRemoveSingleChildren\",\n          groupRemoveLowestSingleChildren: \"groupRemoveLowestSingleChildren\",\n          groupHideOpenParents: \"groupHideOpenParents\",\n          groupAllowUnbalanced: \"groupAllowUnbalanced\",\n          rowGroupPanelShow: \"rowGroupPanelShow\",\n          groupRowRenderer: \"groupRowRenderer\",\n          groupRowRendererParams: \"groupRowRendererParams\",\n          suppressMakeColumnVisibleAfterUnGroup: \"suppressMakeColumnVisibleAfterUnGroup\",\n          treeData: \"treeData\",\n          rowGroupPanelSuppressSort: \"rowGroupPanelSuppressSort\",\n          suppressGroupRowsSticky: \"suppressGroupRowsSticky\",\n          pinnedTopRowData: \"pinnedTopRowData\",\n          pinnedBottomRowData: \"pinnedBottomRowData\",\n          rowModelType: \"rowModelType\",\n          rowData: \"rowData\",\n          asyncTransactionWaitMillis: \"asyncTransactionWaitMillis\",\n          suppressModelUpdateAfterUpdateTransaction: \"suppressModelUpdateAfterUpdateTransaction\",\n          datasource: \"datasource\",\n          cacheOverflowSize: \"cacheOverflowSize\",\n          infiniteInitialRowCount: \"infiniteInitialRowCount\",\n          serverSideInitialRowCount: \"serverSideInitialRowCount\",\n          suppressServerSideInfiniteScroll: \"suppressServerSideInfiniteScroll\",\n          suppressServerSideFullWidthLoadingRow: \"suppressServerSideFullWidthLoadingRow\",\n          cacheBlockSize: \"cacheBlockSize\",\n          maxBlocksInCache: \"maxBlocksInCache\",\n          maxConcurrentDatasourceRequests: \"maxConcurrentDatasourceRequests\",\n          blockLoadDebounceMillis: \"blockLoadDebounceMillis\",\n          purgeClosedRowNodes: \"purgeClosedRowNodes\",\n          serverSideDatasource: \"serverSideDatasource\",\n          serverSideSortAllLevels: \"serverSideSortAllLevels\",\n          serverSideEnableClientSideSort: \"serverSideEnableClientSideSort\",\n          serverSideOnlyRefreshFilteredGroups: \"serverSideOnlyRefreshFilteredGroups\",\n          serverSideSortOnServer: \"serverSideSortOnServer\",\n          serverSideFilterOnServer: \"serverSideFilterOnServer\",\n          serverSidePivotResultFieldSeparator: \"serverSidePivotResultFieldSeparator\",\n          viewportDatasource: \"viewportDatasource\",\n          viewportRowModelPageSize: \"viewportRowModelPageSize\",\n          viewportRowModelBufferSize: \"viewportRowModelBufferSize\",\n          alwaysShowHorizontalScroll: \"alwaysShowHorizontalScroll\",\n          alwaysShowVerticalScroll: \"alwaysShowVerticalScroll\",\n          debounceVerticalScrollbar: \"debounceVerticalScrollbar\",\n          suppressHorizontalScroll: \"suppressHorizontalScroll\",\n          suppressScrollOnNewData: \"suppressScrollOnNewData\",\n          suppressScrollWhenPopupsAreOpen: \"suppressScrollWhenPopupsAreOpen\",\n          suppressAnimationFrame: \"suppressAnimationFrame\",\n          suppressMiddleClickScrolls: \"suppressMiddleClickScrolls\",\n          suppressPreventDefaultOnMouseWheel: \"suppressPreventDefaultOnMouseWheel\",\n          scrollbarWidth: \"scrollbarWidth\",\n          rowSelection: \"rowSelection\",\n          rowMultiSelectWithClick: \"rowMultiSelectWithClick\",\n          suppressRowDeselection: \"suppressRowDeselection\",\n          suppressRowClickSelection: \"suppressRowClickSelection\",\n          suppressCellFocus: \"suppressCellFocus\",\n          suppressHeaderFocus: \"suppressHeaderFocus\",\n          suppressMultiRangeSelection: \"suppressMultiRangeSelection\",\n          enableCellTextSelection: \"enableCellTextSelection\",\n          enableRangeSelection: \"enableRangeSelection\",\n          enableRangeHandle: \"enableRangeHandle\",\n          enableFillHandle: \"enableFillHandle\",\n          fillHandleDirection: \"fillHandleDirection\",\n          suppressClearOnFillReduction: \"suppressClearOnFillReduction\",\n          sortingOrder: \"sortingOrder\",\n          accentedSort: \"accentedSort\",\n          unSortIcon: \"unSortIcon\",\n          suppressMultiSort: \"suppressMultiSort\",\n          alwaysMultiSort: \"alwaysMultiSort\",\n          multiSortKey: \"multiSortKey\",\n          suppressMaintainUnsortedOrder: \"suppressMaintainUnsortedOrder\",\n          icons: \"icons\",\n          rowHeight: \"rowHeight\",\n          rowStyle: \"rowStyle\",\n          rowClass: \"rowClass\",\n          rowClassRules: \"rowClassRules\",\n          suppressRowHoverHighlight: \"suppressRowHoverHighlight\",\n          suppressRowTransform: \"suppressRowTransform\",\n          columnHoverHighlight: \"columnHoverHighlight\",\n          gridId: \"gridId\",\n          deltaSort: \"deltaSort\",\n          treeDataDisplayType: \"treeDataDisplayType\",\n          enableGroupEdit: \"enableGroupEdit\",\n          initialState: \"initialState\",\n          getContextMenuItems: \"getContextMenuItems\",\n          getMainMenuItems: \"getMainMenuItems\",\n          postProcessPopup: \"postProcessPopup\",\n          processUnpinnedColumns: \"processUnpinnedColumns\",\n          processCellForClipboard: \"processCellForClipboard\",\n          processHeaderForClipboard: \"processHeaderForClipboard\",\n          processGroupHeaderForClipboard: \"processGroupHeaderForClipboard\",\n          processCellFromClipboard: \"processCellFromClipboard\",\n          sendToClipboard: \"sendToClipboard\",\n          processDataFromClipboard: \"processDataFromClipboard\",\n          isExternalFilterPresent: \"isExternalFilterPresent\",\n          doesExternalFilterPass: \"doesExternalFilterPass\",\n          getChartToolbarItems: \"getChartToolbarItems\",\n          createChartContainer: \"createChartContainer\",\n          focusGridInnerElement: \"focusGridInnerElement\",\n          navigateToNextHeader: \"navigateToNextHeader\",\n          tabToNextHeader: \"tabToNextHeader\",\n          navigateToNextCell: \"navigateToNextCell\",\n          tabToNextCell: \"tabToNextCell\",\n          getLocaleText: \"getLocaleText\",\n          getDocument: \"getDocument\",\n          paginationNumberFormatter: \"paginationNumberFormatter\",\n          getGroupRowAgg: \"getGroupRowAgg\",\n          isGroupOpenByDefault: \"isGroupOpenByDefault\",\n          initialGroupOrderComparator: \"initialGroupOrderComparator\",\n          processPivotResultColDef: \"processPivotResultColDef\",\n          processPivotResultColGroupDef: \"processPivotResultColGroupDef\",\n          getDataPath: \"getDataPath\",\n          getChildCount: \"getChildCount\",\n          getServerSideGroupLevelParams: \"getServerSideGroupLevelParams\",\n          isServerSideGroupOpenByDefault: \"isServerSideGroupOpenByDefault\",\n          isApplyServerSideTransaction: \"isApplyServerSideTransaction\",\n          isServerSideGroup: \"isServerSideGroup\",\n          getServerSideGroupKey: \"getServerSideGroupKey\",\n          getBusinessKeyForNode: \"getBusinessKeyForNode\",\n          getRowId: \"getRowId\",\n          resetRowDataOnUpdate: \"resetRowDataOnUpdate\",\n          processRowPostCreate: \"processRowPostCreate\",\n          isRowSelectable: \"isRowSelectable\",\n          isRowMaster: \"isRowMaster\",\n          fillOperation: \"fillOperation\",\n          postSortRows: \"postSortRows\",\n          getRowStyle: \"getRowStyle\",\n          getRowClass: \"getRowClass\",\n          getRowHeight: \"getRowHeight\",\n          isFullWidthRow: \"isFullWidthRow\"\n        },\n        outputs: {\n          toolPanelVisibleChanged: \"toolPanelVisibleChanged\",\n          toolPanelSizeChanged: \"toolPanelSizeChanged\",\n          columnMenuVisibleChanged: \"columnMenuVisibleChanged\",\n          contextMenuVisibleChanged: \"contextMenuVisibleChanged\",\n          cutStart: \"cutStart\",\n          cutEnd: \"cutEnd\",\n          pasteStart: \"pasteStart\",\n          pasteEnd: \"pasteEnd\",\n          columnVisible: \"columnVisible\",\n          columnPinned: \"columnPinned\",\n          columnResized: \"columnResized\",\n          columnMoved: \"columnMoved\",\n          columnValueChanged: \"columnValueChanged\",\n          columnPivotModeChanged: \"columnPivotModeChanged\",\n          columnPivotChanged: \"columnPivotChanged\",\n          columnGroupOpened: \"columnGroupOpened\",\n          newColumnsLoaded: \"newColumnsLoaded\",\n          gridColumnsChanged: \"gridColumnsChanged\",\n          displayedColumnsChanged: \"displayedColumnsChanged\",\n          virtualColumnsChanged: \"virtualColumnsChanged\",\n          columnEverythingChanged: \"columnEverythingChanged\",\n          columnHeaderMouseOver: \"columnHeaderMouseOver\",\n          columnHeaderMouseLeave: \"columnHeaderMouseLeave\",\n          columnHeaderClicked: \"columnHeaderClicked\",\n          columnHeaderContextMenu: \"columnHeaderContextMenu\",\n          componentStateChanged: \"componentStateChanged\",\n          cellValueChanged: \"cellValueChanged\",\n          cellEditRequest: \"cellEditRequest\",\n          rowValueChanged: \"rowValueChanged\",\n          cellEditingStarted: \"cellEditingStarted\",\n          cellEditingStopped: \"cellEditingStopped\",\n          rowEditingStarted: \"rowEditingStarted\",\n          rowEditingStopped: \"rowEditingStopped\",\n          undoStarted: \"undoStarted\",\n          undoEnded: \"undoEnded\",\n          redoStarted: \"redoStarted\",\n          redoEnded: \"redoEnded\",\n          rangeDeleteStart: \"rangeDeleteStart\",\n          rangeDeleteEnd: \"rangeDeleteEnd\",\n          fillStart: \"fillStart\",\n          fillEnd: \"fillEnd\",\n          filterOpened: \"filterOpened\",\n          filterChanged: \"filterChanged\",\n          filterModified: \"filterModified\",\n          advancedFilterBuilderVisibleChanged: \"advancedFilterBuilderVisibleChanged\",\n          chartCreated: \"chartCreated\",\n          chartRangeSelectionChanged: \"chartRangeSelectionChanged\",\n          chartOptionsChanged: \"chartOptionsChanged\",\n          chartDestroyed: \"chartDestroyed\",\n          cellKeyDown: \"cellKeyDown\",\n          gridReady: \"gridReady\",\n          firstDataRendered: \"firstDataRendered\",\n          gridSizeChanged: \"gridSizeChanged\",\n          modelUpdated: \"modelUpdated\",\n          virtualRowRemoved: \"virtualRowRemoved\",\n          viewportChanged: \"viewportChanged\",\n          bodyScroll: \"bodyScroll\",\n          bodyScrollEnd: \"bodyScrollEnd\",\n          dragStarted: \"dragStarted\",\n          dragStopped: \"dragStopped\",\n          stateUpdated: \"stateUpdated\",\n          paginationChanged: \"paginationChanged\",\n          rowDragEnter: \"rowDragEnter\",\n          rowDragMove: \"rowDragMove\",\n          rowDragLeave: \"rowDragLeave\",\n          rowDragEnd: \"rowDragEnd\",\n          columnRowGroupChanged: \"columnRowGroupChanged\",\n          rowGroupOpened: \"rowGroupOpened\",\n          expandOrCollapseAll: \"expandOrCollapseAll\",\n          pivotMaxColumnsExceeded: \"pivotMaxColumnsExceeded\",\n          pinnedRowDataChanged: \"pinnedRowDataChanged\",\n          rowDataUpdated: \"rowDataUpdated\",\n          asyncTransactionsFlushed: \"asyncTransactionsFlushed\",\n          storeRefreshed: \"storeRefreshed\",\n          headerFocused: \"headerFocused\",\n          cellClicked: \"cellClicked\",\n          cellDoubleClicked: \"cellDoubleClicked\",\n          cellFocused: \"cellFocused\",\n          cellMouseOver: \"cellMouseOver\",\n          cellMouseOut: \"cellMouseOut\",\n          cellMouseDown: \"cellMouseDown\",\n          rowClicked: \"rowClicked\",\n          rowDoubleClicked: \"rowDoubleClicked\",\n          rowSelected: \"rowSelected\",\n          selectionChanged: \"selectionChanged\",\n          cellContextMenu: \"cellContextMenu\",\n          rangeSelectionChanged: \"rangeSelectionChanged\",\n          tooltipShow: \"tooltipShow\",\n          tooltipHide: \"tooltipHide\",\n          sortChanged: \"sortChanged\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([AngularFrameworkOverrides, AngularFrameworkComponentWrapper]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        decls: 0,\n        vars: 0,\n        template: function AgGridAngular_Template(rf, ctx) {},\n        encapsulation: 2\n      });\n    }\n  }\n  return AgGridAngular;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgGridModule = /*#__PURE__*/(() => {\n  class AgGridModule {\n    static {\n      this.ɵfac = function AgGridModule_Factory(t) {\n        return new (t || AgGridModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: AgGridModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return AgGridModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgGridAngular, AgGridModule, AngularFrameworkComponentWrapper, AngularFrameworkOverrides };\n","import { CUSTOM_ELEMENTS_SCHEMA, Component, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IOption, SortDirection } from '@tylertech/forge';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { ForgeIconButtonModule, ForgeIconModule, ForgeOptionModule, ForgePaginatorModule, ForgeSelectDropdownModule, ForgeToolbarModule } from '@tylertech/forge-angular';\r\nimport { AgGridAngular, AgGridModule } from 'ag-grid-angular';\r\nimport { ColDef, ColumnMovedEvent, ColumnResizedEvent, ColumnVisibleEvent, GridOptions, GridReadyEvent, ICellRendererComp, ICellRendererParams, SortChangedEvent } from 'ag-grid-community';\r\nimport { finalize } from 'rxjs';\r\n\r\nimport { IPerson } from 'src/app/shared/interfaces/person.interface';\r\nimport { Utils } from 'src/utils';\r\nimport { AppDataService } from '../app-data.service';\r\n\r\n@Component({\r\n  selector: 'app-ag-grid-demo',\r\n  standalone: true,\r\n  imports: [CommonModule, ForgeIconButtonModule, ForgeIconModule, ForgeOptionModule, ForgePaginatorModule, ForgeSelectDropdownModule, ForgeToolbarModule, AgGridModule],\r\n  templateUrl: './ag-grid-demo.component.html',\r\n  styleUrls: ['./ag-grid-demo.component.scss'],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AgGridDemoComponent implements OnInit {\r\n  private appDataService = inject(AppDataService);\r\n\r\n  @ViewChild('agGrid', { read: AgGridAngular })\r\n  private agGrid?: AgGridAngular;\r\n  private storageKey = 'ag-grid-demo';\r\n\r\n  public isBusy = false;\r\n  public filterCache = {\r\n    sort: {\r\n      property: 'lastName',\r\n      direction: SortDirection.Ascending\r\n    },\r\n    filters: [],\r\n    skip: 0,\r\n    take: 25\r\n  };\r\n  public recordset: IPerson[] = [];\r\n  public recordCount = 0;\r\n\r\n  public gridOptions: GridOptions = {\r\n    domLayout: 'normal'\r\n  };\r\n  public defaultColDef: ColDef = {\r\n    sortable: true,\r\n    resizable: true\r\n  };\r\n  public columnDefs: ColDef[] = [\r\n    { field: 'image', headerName: '', cellRenderer: ImageCellRendererComponent, sortable: false, width: 80, suppressSizeToFit: true, suppressAutoSize: false, resizable: false },\r\n    { field: 'firstName', headerName: 'First', filter: true },\r\n    { field: 'lastName', headerName: 'Last' },\r\n    { field: 'gender', headerName: 'Gender' },\r\n    { field: 'occupation', headerName: 'Occupation' }\r\n  ];\r\n\r\n  public get optionalTableColumns(): IOption[] {\r\n    return this.columnDefs.filter((c) => c.field).map((c) => ({ value: c.field, label: c.headerName || c.field })) as IOption[];\r\n  }\r\n  public selectedTableColumns?: (string | undefined)[];\r\n\r\n  public ngOnInit() {\r\n    this.getRecords();\r\n  }\r\n\r\n  public onGridReady(event: GridReadyEvent) {\r\n    this.agGrid?.api.sizeColumnsToFit();\r\n    const columnState = localStorage.getItem(this.storageKey);\r\n    if (columnState?.length) {\r\n      this.agGrid?.api.applyColumnState({\r\n        state: JSON.parse(columnState),\r\n        applyOrder: true\r\n      });\r\n    }\r\n    this.selectedTableColumns = this.agGrid?.api.getAllDisplayedColumns().map((c) => c.getColDef().field);\r\n  }\r\n\r\n  public onTableSort(event: SortChangedEvent) {\r\n    localStorage.setItem(this.storageKey, JSON.stringify(event.api.getColumnState()));\r\n  }\r\n\r\n  public onTableStateChange(event: ColumnResizedEvent | ColumnMovedEvent | ColumnVisibleEvent) {\r\n    if (isDefined((event as ColumnResizedEvent).finished) && !(event as ColumnResizedEvent).finished) {\r\n      return;\r\n    }\r\n\r\n    const eventSources = ['uiColumnResized', 'uiColumnMoved'];\r\n    if (eventSources.includes(event.source) || event.type === 'columnVisible') {\r\n      localStorage.setItem(this.storageKey, JSON.stringify(event.api.getColumnState()));\r\n    }\r\n  }\r\n\r\n  public onTableColumnOptionSelected(columnFields: string[]) {\r\n    this.selectedTableColumns = columnFields;\r\n    this.agGrid?.api.setColumnsVisible(columnFields, true);\r\n    this.agGrid?.api.setColumnsVisible(this.columnDefs.map((c) => c.field).filter((c) => !columnFields.includes(c as string)) as string[], false);\r\n  }\r\n\r\n  public onTablePaginatorChange(detail: { pageIndex: number; pageSize: number }) {\r\n    this.filterCache.skip = detail.pageIndex * detail.pageSize;\r\n    this.filterCache.take = detail.pageSize;\r\n    this.getRecords();\r\n  }\r\n\r\n  private getRecords() {\r\n    this.isBusy = true;\r\n    this.appDataService\r\n      .getPeople({\r\n        sort: this.filterCache.sort,\r\n        filters: this.filterCache.filters,\r\n        skip: this.filterCache.skip,\r\n        take: this.filterCache.take\r\n      })\r\n      .pipe(finalize(() => (this.isBusy = false)))\r\n      .subscribe((result) => {\r\n        this.recordset = result.data;\r\n        this.recordCount = result.count;\r\n      });\r\n  }\r\n}\r\n\r\nclass ImageCellRendererComponent implements ICellRendererComp {\r\n  private cellElement?: HTMLImageElement;\r\n\r\n  getGui(): HTMLElement {\r\n    return this.cellElement as HTMLElement;\r\n  }\r\n\r\n  init?(params: ICellRendererParams<any, any, any>) {\r\n    this.cellElement = document.createElement('img');\r\n    this.cellElement.src = `mock-data/${Utils.formatNumber(params.data.id, '2.0-0')}-small.png`;\r\n    this.cellElement.classList.add('table-cell__image');\r\n  }\r\n\r\n  refresh(params: ICellRendererParams<any, any, any>): boolean {\r\n    this.cellElement!.src = `mock-data/${Utils.formatNumber(params.data.id, '2.0-0')}-small.png`;\r\n\r\n    return true;\r\n  }\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--subheading4\">Ag Grid Demo</h2>\r\n  <div slot=\"end\">\r\n    <forge-icon-button id=\"ag-grid-demo--column-select\" class=\"table__header__columns\" aria-label=\"Choose table columns\">\r\n      <forge-icon name=\"view_column\"></forge-icon>\r\n    </forge-icon-button>\r\n    <forge-select-dropdown target=\"#ag-grid-demo--column-select\" multiple [value]=\"selectedTableColumns\" (change)=\"onTableColumnOptionSelected($event.detail)\">\r\n      @for (column of optionalTableColumns; track i; let i = $index) {\r\n        <forge-option [value]=\"column.value\">\r\n          {{ column.label }}\r\n        </forge-option>\r\n      }\r\n    </forge-select-dropdown>\r\n  </div>\r\n</forge-toolbar>\r\n<div class=\"body\">\r\n  <ag-grid-angular\r\n    #agGrid\r\n    class=\"ag-theme-material\"\r\n    [columnDefs]=\"columnDefs\"\r\n    [gridOptions]=\"gridOptions\"\r\n    [defaultColDef]=\"defaultColDef\"\r\n    [rowData]=\"recordset\"\r\n    (gridReady)=\"onGridReady($event)\"\r\n    (sortChanged)=\"onTableSort($event)\"\r\n    (columnResized)=\"onTableStateChange($event)\"\r\n    (columnMoved)=\"onTableStateChange($event)\"\r\n    (columnVisible)=\"onTableStateChange($event)\"\r\n  ></ag-grid-angular>\r\n\r\n  @if (recordCount) {\r\n    <forge-toolbar inverted=\"true\">\r\n      <forge-paginator slot=\"end\" [pageIndex]=\"filterCache.skip / filterCache.take\" [pageSize]=\"filterCache.take\" [total]=\"recordCount\" (forge-paginator-change)=\"onTablePaginatorChange($event.detail)\"></forge-paginator>\r\n    </forge-toolbar>\r\n  }\r\n</div>\r\n"],"mappings":"4qBACA,IAAIA,GAAoB,KAAM,CAC5B,aAAc,CACZ,KAAK,iBAAkC,IAAI,IAC3C,KAAK,kBAAmC,IAAI,IAC5C,KAAK,oBAAqC,IAAI,IAC9C,KAAK,qBAAsC,IAAI,IAC/C,KAAK,oBAAsB,CAAC,EAC5B,KAAK,UAAY,GAEjB,KAAK,YAAc,CAAC,CACtB,CACA,sBAAsBC,EAAoB,CACxC,KAAK,mBAAqBA,CAC5B,CACA,aAAaC,EAAWC,EAAOC,EAA8B,CAC3D,IAAMC,EAAcF,EAAQ,KAAK,kBAAoB,KAAK,iBACtDG,EAAYD,EAAY,IAAIH,CAAS,EACzC,MAAI,CAACI,GAAaF,IAChBE,EAA2B,IAAI,IAC/BD,EAAY,IAAIH,EAAWI,CAAS,GAE/BA,CACT,CACA,4BAA6B,CAC3B,OAAO,KAAK,iBAAiB,OAAS,GAAK,KAAK,kBAAkB,OAAS,GAAK,KAAK,oBAAoB,OAAS,GAAK,KAAK,qBAAqB,OAAS,CAC5J,CACA,iBAAiBJ,EAAWK,EAAUJ,EAAQ,GAAO,CACnD,KAAK,aAAaD,EAAWC,EAAO,EAAI,EAAE,IAAII,CAAQ,CACxD,CACA,oBAAoBL,EAAWK,EAAUJ,EAAQ,GAAO,CACtD,IAAMG,EAAY,KAAK,aAAaJ,EAAWC,EAAO,EAAK,EACtDG,IAGLA,EAAU,OAAOC,CAAQ,EACrBD,EAAU,OAAS,IACDH,EAAQ,KAAK,kBAAoB,KAAK,kBAC9C,OAAOD,CAAS,EAEhC,CACA,kBAAkBK,EAAUJ,EAAQ,GAAO,EACxCA,EAAQ,KAAK,qBAAuB,KAAK,qBAAqB,IAAII,CAAQ,CAC7E,CACA,qBAAqBA,EAAUJ,EAAQ,GAAO,EAC3CA,EAAQ,KAAK,qBAAuB,KAAK,qBAAqB,OAAOI,CAAQ,CAChF,CACA,cAAcC,EAAO,CACnB,IAAMC,EAAUD,EAChB,KAAK,oBAAoBC,EAAS,EAAI,EACtC,KAAK,oBAAoBA,EAAS,EAAK,EACvC,KAAK,YAAYA,EAAQ,IAAI,EAAI,EACnC,CACA,kBAAkBD,EAAO,CAClB,KAAK,YAAYA,EAAM,IAAI,GAC9B,KAAK,cAAcA,CAAK,CAE5B,CACA,oBAAoBA,EAAOL,EAAO,CAChC,IAAMD,EAAYM,EAAM,KACxB,GAAIL,GAAS,UAAWK,EAAO,CAC7B,IAAME,EAAeF,EAAM,MACvBE,aAAwB,QAC1BF,EAAM,UAAYE,EAAa,aAAa,EAEhD,CACA,IAAMC,EAAwB,CAACC,EAAYC,IAAuBD,EAAW,QAAQL,GAAY,CAC/F,GAAI,CAACM,EAAmB,IAAIN,CAAQ,EAClC,OAEF,IAAMO,EAAW,KAAK,mBAAqB,IAAM,KAAK,mBAAmB,aAAa,IAAMP,EAASC,CAAK,CAAC,EAAI,IAAMD,EAASC,CAAK,EAC/HL,EACF,KAAK,cAAcW,CAAQ,EAE3BA,EAAS,CAEb,CAAC,EACKC,EAAoB,KAAK,aAAab,EAAWC,EAAO,EAAK,GAAoB,IAAI,IACrFG,EAAY,IAAI,IAAIS,CAAiB,EACvCT,EAAU,KAAO,GACnBK,EAAsBL,EAAWS,CAAiB,EAE5B,IAAI,IAAIZ,EAAQ,KAAK,qBAAuB,KAAK,mBAAmB,EAC5E,QAAQI,GAAY,CAClC,IAAMO,EAAW,KAAK,mBAAqB,IAAM,KAAK,mBAAmB,aAAa,IAAMP,EAASL,EAAWM,CAAK,CAAC,EAAI,IAAMD,EAASL,EAAWM,CAAK,EACrJL,EACF,KAAK,cAAcW,CAAQ,EAE3BA,EAAS,CAEb,CAAC,CACH,CAKA,cAAcE,EAAM,CAElB,GADA,KAAK,oBAAoB,KAAKA,CAAI,EAC9B,CAAC,KAAK,UAAW,CACnB,IAAMC,EAAQ,IAAM,CAClB,OAAO,WAAW,KAAK,gBAAgB,KAAK,IAAI,EAAG,CAAC,CACtD,EACA,KAAK,mBAAqB,KAAK,mBAAmB,aAAaA,CAAK,EAAIA,EAAM,EAC9E,KAAK,UAAY,EACnB,CACF,CAEA,iBAAkB,CAChB,KAAK,UAAY,GACjB,IAAMC,EAAY,KAAK,oBAAoB,MAAM,EACjD,KAAK,oBAAsB,CAAC,EAC5BA,EAAU,QAAQF,GAAQA,EAAK,CAAC,CAClC,CACF,EAMA,SAASG,EAAMC,EAAK,CAClB,GAAI,GAACA,GAAO,CAACA,EAAI,QAGjB,OAAOA,EAAIA,EAAI,OAAS,CAAC,CAC3B,CACA,SAASC,GAAUC,EAAGC,EAAGC,EAAY,CACnC,OAAIF,GAAK,MAAQC,GAAK,KACb,GAEFD,GAAK,MAAQC,GAAK,MAAQD,EAAE,SAAWC,EAAE,QAAUD,EAAE,MAAM,CAACG,EAAOC,IAAUF,EAAaA,EAAWC,EAAOF,EAAEG,CAAK,CAAC,EAAIH,EAAEG,CAAK,IAAMD,CAAK,CACnJ,CAIA,SAASE,GAAiBC,EAAO,CAC/B,OAAOA,EAAM,KAAK,CAACC,EAAGC,IAAMD,EAAIC,CAAC,CACnC,CAaA,SAASC,GAA0BC,EAAOC,EAAQ,CAChD,IAAMC,EAAQF,EAAM,QAAQC,CAAM,EAC9BC,GAAS,IACXF,EAAME,CAAK,EAAIF,EAAMA,EAAM,OAAS,CAAC,EACrCA,EAAM,IAAI,EAEd,CACA,SAASG,EAAiBH,EAAOC,EAAQ,CACvC,IAAMC,EAAQF,EAAM,QAAQC,CAAM,EAC9BC,GAAS,GACXF,EAAM,OAAOE,EAAO,CAAC,CAEzB,CACA,SAASE,GAA6BJ,EAAOK,EAAU,CACrD,QAAS,EAAI,EAAG,EAAIA,EAAS,OAAQ,IACnCN,GAA0BC,EAAOK,EAAS,CAAC,CAAC,CAEhD,CACA,SAASC,GAAoBN,EAAOK,EAAU,CAC5C,QAAS,EAAI,EAAG,EAAIA,EAAS,OAAQ,IACnCF,EAAiBH,EAAOK,EAAS,CAAC,CAAC,CAEvC,CACA,SAASE,GAAiBP,EAAOC,EAAQO,EAAS,CAChDR,EAAM,OAAOQ,EAAS,EAAGP,CAAM,CACjC,CAUA,SAASQ,GAAaC,EAAOC,EAAeC,EAAS,CACnDC,GAAoBH,EAAOC,CAAa,EACxCA,EAAc,MAAM,EAAE,QAAQ,EAAE,QAAQG,GAAOC,GAAiBL,EAAOI,EAAKF,CAAO,CAAC,CACtF,CACA,SAASI,GAAUN,EAAOO,EAAO,CAC/B,OAAOP,EAAM,QAAQO,CAAK,EAAI,EAChC,CACA,SAASC,GAASC,EAAe,CAC/B,MAAO,CAAC,EAAE,OAAO,MAAM,CAAC,EAAGA,CAAa,CAC1C,CACA,SAASC,GAASC,EAAQC,EAAQ,CAC5BA,GAAU,MAAQD,GAAU,MAGhCC,EAAO,QAAQL,GAASI,EAAO,KAAKJ,CAAK,CAAC,CAC5C,CAWA,IAAIM,GAA2B,6BAC3BC,GAAiB,CAAC,aAAc,WAAY,YAAa,cAAe,QAAQ,EAChFC,GAAW,CAAC,EAChB,SAASC,GAA0BC,EAAO,CACxCA,EAAMJ,EAAwB,EAAI,EACpC,CACA,SAASK,GAA4BD,EAAO,CAC1C,OAAOA,EAAMJ,EAAwB,IAAM,EAC7C,CACA,IAAIM,IAAoC,IAAM,CAC5C,IAAMC,EAAO,CACX,OAAQ,QACR,OAAQ,QACR,OAAQ,OACR,MAAO,OACP,MAAO,MACP,KAAM,MACN,MAAO,KACT,EASA,OARqBC,GAAa,CAChC,GAAI,OAAON,GAASM,CAAS,GAAM,UACjC,OAAON,GAASM,CAAS,EAE3B,IAAMC,EAAK,SAAS,cAAcF,EAAKC,CAAS,GAAK,KAAK,EAC1D,OAAAA,EAAY,KAAOA,EACZN,GAASM,CAAS,EAAIA,KAAaC,CAC5C,CAEF,GAAG,EACH,SAASC,GAAuBC,EAAKC,EAAaC,EAAM,CACtD,IAAIC,EAAgBF,EACpB,KAAOE,GAAe,CACpB,IAAMC,EAAeJ,EAAI,WAAWG,EAAeD,CAAI,EACvD,GAAIE,EACF,OAAOA,EAETD,EAAgBA,EAAc,aAChC,CACA,OAAO,IACT,CACA,SAASE,GAAsBC,EAASb,EAAO,CAC7C,MAAI,CAACA,GAAS,CAACa,EACN,GAEFC,GAAcd,CAAK,EAAE,QAAQa,CAAO,GAAK,CAClD,CACA,SAASE,GAAiBf,EAAO,CAC/B,IAAMgB,EAAM,CAAC,EACTC,EAAUjB,EAAM,OACpB,KAAOiB,GACLD,EAAI,KAAKC,CAAO,EAChBA,EAAUA,EAAQ,cAEpB,OAAOD,CACT,CACA,SAASF,GAAcd,EAAO,CAC5B,IAAMkB,EAAclB,EACpB,OAAIkB,EAAY,KACPA,EAAY,KAEjBA,EAAY,aACPA,EAAY,aAAa,EAE3BH,GAAiBG,CAAW,CACrC,CACA,SAASC,GAA6BC,EAAoBC,EAAUrB,EAAOsB,EAAU,CAEnF,IAAMC,EADYC,GAAU3B,GAAgBG,CAAK,EACrB,CAC1B,QAAS,EACX,EAAI,OACAoB,GAAsBA,EAAmB,kBAC3CA,EAAmB,iBAAiBC,EAAUrB,EAAOsB,EAAUC,CAAO,CAE1E,CAGA,IAAIE,EAAW,KAAM,CACnB,aAAc,CAEZ,KAAK,iBAAmB,CAAC,EACzB,KAAK,UAAY,GAGjB,KAAK,SAAW,GAChB,KAAK,mBAAqB,EAG1B,KAAK,sBAAwB,CAAC,EAC9B,KAAK,QAAU,IAAM,CAAC,KAAK,SAC7B,CACA,aAAaC,EAAO,CAClB,KAAK,OAASA,EAAM,QAAQ,UAAU,EACtC,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,YAAcA,EAAM,QACzB,KAAK,aAAeA,EAAM,aAC1B,KAAK,IAAMA,EAAM,IACjB,KAAK,cAAgBA,EAAM,aAC7B,CAgBA,uBAAwB,CACtB,OAAO,KAAK,kBACd,CACA,SAAU,CACR,QAASC,EAAI,EAAGA,EAAI,KAAK,iBAAiB,OAAQA,IAChD,KAAK,iBAAiBA,CAAC,EAAE,EAE3B,KAAK,iBAAiB,OAAS,EAC/B,KAAK,UAAY,GACjB,KAAK,mBAAmB,CACtB,KAAM,WACR,CAAC,CACH,CAIA,iBAAiBC,EAAWN,EAAU,CAC/B,KAAK,oBACR,KAAK,kBAAoB,IAAIO,IAE/B,KAAK,kBAAkB,iBAAiBD,EAAWN,CAAQ,CAC7D,CAEA,oBAAoBM,EAAWN,EAAU,CACnC,KAAK,mBACP,KAAK,kBAAkB,oBAAoBM,EAAWN,CAAQ,CAElE,CACA,mBAAmBtB,EAAO,CACpB,KAAK,mBACP,KAAK,kBAAkB,cAAcA,CAAK,CAE9C,CACA,2BAA2B8B,EAAQC,EAAU,CAC3C,OAAO,KAAK,gBAAgBD,EAAQC,CAAQ,CAC9C,CACA,yBAAyBA,EAAU,CACjC,OAAO,KAAK,gBAAgB,KAAK,aAAcA,CAAQ,CACzD,CACA,oBAAoBD,EAAQC,EAAU,CACpC,OAAO,KAAK,gBAAgBD,EAAQC,CAAQ,CAC9C,CACA,gBAAgBD,EAAQC,EAAU,CAChC,IAAMC,EAAe,CAAC,EACtB,QAAWC,KAAKF,EAAU,CACxB,IAAMG,EAAUH,EAASE,CAAC,EACtBC,GACFF,EAAa,KAAK,KAAK,eAAeF,EAAQG,EAAGC,CAAO,CAAC,CAE7D,CACA,OAAOF,CACT,CACA,eAAeF,EAAQ9B,EAAOsB,EAAU,CACtC,GAAI,KAAK,UACP,MAAO,IAAM,KAEXQ,aAAkB,YACpBX,GAA6B,KAAK,sBAAsB,EAAGW,EAAQ9B,EAAOsB,CAAQ,EAElFQ,EAAO,iBAAiB9B,EAAOsB,CAAQ,EAEzC,IAAMa,EAAc,KAClBL,EAAO,oBAAoB9B,EAAOsB,CAAQ,EACnC,MAET,YAAK,iBAAiB,KAAKa,CAAW,EAC/B,KACLA,EAAY,EACZ,KAAK,iBAAmB,KAAK,iBAAiB,OAAOC,GAAMA,IAAOD,CAAW,EACtE,KAEX,CAOA,wBAAwBnC,EAAOsB,EAAU,CACvC,KAAK,IAAI,yBAAyBtB,EAAOsB,CAAQ,EACjD,IAAMa,EAAc,KAClB,KAAK,IAAI,4BAA4BnC,EAAOsB,CAAQ,EAC7C,MAET,YAAK,iBAAiB,KAAKa,CAAW,EAC/B,KACLA,EAAY,EACZ,KAAK,iBAAmB,KAAK,iBAAiB,OAAOC,GAAMA,IAAOD,CAAW,EACtE,KAEX,CAMA,2BAA2BnC,EAAOsB,EAAU,CAC1C,OAAI,KAAK,UACA,IAAM,KAER,KAAK,wBAAwBtB,EAAOsB,CAAQ,CACrD,CASA,4BAA4Be,EAAQf,EAAU,CAC5C,GAAI,KAAK,UACP,OAEF,IAAMgB,EAAYD,EAAO,KAAK,GAAG,EAAI,KAAK,qBACpCE,EAAkBvC,GAAS,CAC/B,GAAIA,EAAM,UAAW,CACnB,GAAIA,EAAM,WAAaA,EAAM,UAAU,KAAO,KAAK,sBAAsBsC,CAAS,EAChF,OAEF,KAAK,sBAAsBA,CAAS,EAAItC,EAAM,UAAU,EAC1D,CACA,IAAMwC,EAAwB,CAC5B,KAAM,sBACN,UAAWxC,EAAM,UACjB,OAAQA,EAAM,MAChB,EACAsB,EAASkB,CAAqB,CAChC,EACAH,EAAO,QAAQrC,GAAS,KAAK,wBAAwBA,EAAOuC,CAAe,CAAC,CAC9E,CACA,eAAeE,EAAM,CACf,KAAK,QAAQ,EACf,KAAK,iBAAiB,KAAKA,CAAI,EAE/BA,EAAK,CAET,CACA,kBAAkBC,EAAMC,EAAS,CAC/B,IAAM3B,EAAM,KAAK,WAAW0B,EAAMC,CAAO,EACzC,YAAK,eAAe,KAAK,YAAY,KAAK,KAAMD,EAAMC,CAAO,CAAC,EACvD3B,CACT,CACA,WAAW0B,EAAMC,EAASC,EAAwB,CAChD,OAAQD,GAAW,KAAK,aAAa,WAAWD,EAAME,CAAsB,CAC9E,CAKA,YAAYF,EAAMC,EAAS,CACzB,OAAQA,GAAW,KAAK,aAAa,YAAYD,CAAI,CACvD,CAKA,aAAahB,EAAOiB,EAAS,CAC3B,OAAQA,GAAW,KAAK,aAAa,aAAajB,CAAK,CACzD,CACF,EAGImB,GAAgC,KAAM,CACxC,YAAYzB,EAAoB,CAC9B,KAAK,mBAAqBA,EAE1B,KAAK,iBAAkC,IAAI,IAC3C,KAAK,uBAAwC,IAAI,GACnD,CACA,KAAK0B,EAAc,CACjB,IAAIxB,EAAWwB,EACf,OAAI,KAAK,mBAAmB,qBAC1BxB,EAAWtB,GAAS,CAClB,KAAK,mBAAmB,aAAa,IAAM8C,EAAa9C,CAAK,CAAC,CAChE,EACA,KAAK,iBAAiB,IAAI8C,EAAcxB,CAAQ,GAE3CA,CACT,CACA,WAAWwB,EAAc,CACvB,IAAIxB,EAAWwB,EACf,OAAI,KAAK,mBAAmB,qBAC1BxB,EAAW,CAACM,EAAW5B,IAAU,CAC/B,KAAK,mBAAmB,aAAa,IAAM8C,EAAalB,EAAW5B,CAAK,CAAC,CAC3E,EACA,KAAK,uBAAuB,IAAI8C,EAAcxB,CAAQ,GAEjDA,CACT,CACA,OAAOwB,EAAc,CACnB,OAAO,KAAK,iBAAiB,IAAIA,CAAY,GAAKA,CACpD,CACA,aAAaA,EAAc,CACzB,OAAO,KAAK,uBAAuB,IAAIA,CAAY,GAAKA,CAC1D,CACF,EAGA,SAASC,GAAUC,EAAO,CACxB,OAAIA,GAAS,MAAQA,IAAU,GACtB,KAEFA,CACT,CACA,SAASC,EAAQD,EAAOE,EAAmB,GAAO,CAChD,OAAOF,GAAS,OAASA,IAAU,IAAME,EAC3C,CACA,SAASC,EAASH,EAAO,CACvB,MAAO,CAACC,EAAQD,CAAK,CACvB,CACA,SAASI,EAAgBJ,EAAO,CAC9B,OAAOA,GAAS,MAAQA,EAAM,SAAW,CAC3C,CACA,SAASK,GAAgBL,EAAO,CAC9B,OAAOA,GAAS,MAAQ,OAAOA,EAAM,UAAa,WAAaA,EAAM,SAAS,EAAI,IACpF,CACA,SAASM,GAAcN,EAAO,CAC5B,GAAIA,IAAU,OACZ,OAEF,GAAIA,IAAU,MAAQA,IAAU,GAC9B,OAAO,KAET,GAAI,OAAOA,GAAU,SACnB,OAAO,MAAMA,CAAK,EAAI,OAASA,EAEjC,IAAMO,EAAc,SAASP,EAAO,EAAE,EACtC,OAAO,MAAMO,CAAW,EAAI,OAASA,CACvC,CACA,SAASC,GAAeR,EAAO,CAC7B,GAAIA,IAAU,OAGd,OAAIA,IAAU,MAAQA,IAAU,GACvB,GAEFS,GAAUT,CAAK,CACxB,CACA,SAASS,GAAUT,EAAO,CACxB,OAAI,OAAOA,GAAU,UACZA,EAEL,OAAOA,GAAU,SACZA,EAAM,YAAY,IAAM,QAAUA,GAAS,GAE7C,EACT,CACA,SAASU,GAAYC,EAAMC,EAAM,CAC/B,IAAMC,EAAWF,EAAO,KAAK,UAAUA,CAAI,EAAI,KACzCG,EAAWF,EAAO,KAAK,UAAUA,CAAI,EAAI,KAC/C,OAAOC,IAAaC,CACtB,CACA,SAASC,GAAmBC,EAAQC,EAAQC,EAAkB,GAAO,CACnE,IAAMC,EAAgBH,GAAU,KAC1BI,EAAgBH,GAAU,KAOhC,GANID,GAAUA,EAAO,WACnBA,EAASA,EAAO,SAAS,GAEvBC,GAAUA,EAAO,WACnBA,EAASA,EAAO,SAAS,GAEvBE,GAAiBC,EACnB,MAAO,GAET,GAAID,EACF,MAAO,GAET,GAAIC,EACF,MAAO,GAET,SAASC,EAAeC,EAAGC,EAAG,CAC5B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,EAAI,GAAK,CAClC,CAIA,GAHI,OAAOP,GAAW,UAGlB,CAACE,EACH,OAAOG,EAAeL,EAAQC,CAAM,EAEtC,GAAI,CACF,OAAOD,EAAO,cAAcC,CAAM,CACpC,MAAY,CACV,OAAOI,EAAeL,EAAQC,CAAM,CACtC,CACF,CACA,SAASO,GAAQ1C,EAAQ,CACvB,GAAIA,aAAkB,KAAOA,aAAkB,IAAK,CAClD,IAAM2C,EAAM,CAAC,EACb,OAAA3C,EAAO,QAAQkB,GAASyB,EAAI,KAAKzB,CAAK,CAAC,EAChCyB,CACT,CACA,OAAO,OAAO,OAAO3C,CAAM,CAC7B,CAGA,IAAI4C,GAAkC,IAAI,IAAI,CAAC,YAAa,cAAe,WAAW,CAAC,EACvF,SAASC,GAAe7C,EAAQ8C,EAAU,CACxC,GAAI9C,GAAU,KAGd,IAAI,MAAM,QAAQA,CAAM,EAAG,CACzB,QAAS,EAAI,EAAG,EAAIA,EAAO,OAAQ,IACjC8C,EAAS,EAAE,SAAS,EAAG9C,EAAO,CAAC,CAAC,EAElC,MACF,CACA,OAAW,CAAC+C,EAAK7B,CAAK,IAAK,OAAO,QAAQlB,CAAM,EAC9C8C,EAASC,EAAK7B,CAAK,EAEvB,CACA,SAAS8B,GAAahD,EAAQ,CAC5B,IAAMiD,EAAO,CAAC,EACRC,EAAO,OAAO,KAAKlD,CAAM,EAC/B,QAASH,EAAI,EAAGA,EAAIqD,EAAK,OAAQrD,IAAK,CACpC,GAAI+C,GAAiB,IAAIM,EAAKrD,CAAC,CAAC,EAC9B,SAEF,IAAMkD,EAAMG,EAAKrD,CAAC,EACZqB,EAAQlB,EAAO+C,CAAG,EACxBE,EAAKF,CAAG,EAAI7B,CACd,CACA,OAAO+B,CACT,CACA,SAASE,GAAqBnD,EAAQoD,EAAY,CAChD,GAAI,CAACpD,EACH,OAEF,IAAMqD,EAAMrD,EACNd,EAAM,CAAC,EACb,cAAO,KAAKmE,CAAG,EAAE,QAAQN,GAAO,CAC9B,GAAIK,GAAcA,EAAW,QAAQL,CAAG,GAAK,GAAKH,GAAiB,IAAIG,CAAG,EACxE,OAEF,IAAM7B,EAAQmC,EAAIN,CAAG,EACQO,GAAiBpC,CAAK,GAAKA,EAAM,cAAgB,OAE5EhC,EAAI6D,CAAG,EAAII,GAAqBjC,CAAK,EAErChC,EAAI6D,CAAG,EAAI7B,CAEf,CAAC,EACMhC,CACT,CACA,SAASqE,GAAsBF,EAAK,CAClC,GAAI,CAACA,EACH,MAAO,CAAC,EAEV,IAAMG,EAAY,OAClB,GAAI,OAAOA,EAAU,QAAW,WAC9B,OAAOA,EAAU,OAAOH,CAAG,EAE7B,IAAMI,EAAM,CAAC,EACb,QAAWV,KAAOM,EACZA,EAAI,eAAeN,CAAG,GAAKM,EAAI,qBAAqBN,CAAG,GACzDU,EAAI,KAAKJ,EAAIN,CAAG,CAAC,EAGrB,OAAOU,CACT,CACA,SAASC,GAAWC,EAAMC,EAAQC,EAAgB,GAAMC,EAA0B,GAAO,CAClF3C,EAAQyC,CAAM,GAGnBf,GAAee,EAAQ,CAACb,EAAKgB,IAAgB,CAC3C,GAAInB,GAAiB,IAAIG,CAAG,EAC1B,OAEF,IAAIiB,EAAYL,EAAKZ,CAAG,EACpBiB,IAAcD,IAGdD,GAC4BE,GAAa,MAAQD,GAAe,MAEnC,OAAOA,GAAgB,UAAYA,EAAY,cAAgB,SAG1FC,EAAY,CAAC,EACbL,EAAKZ,CAAG,EAAIiB,GAIdV,GAAiBS,CAAW,GAAKT,GAAiBU,CAAS,GAAK,CAAC,MAAM,QAAQA,CAAS,EAC1FN,GAAWM,EAAWD,EAAaF,EAAeC,CAAuB,GAChED,GAAiBE,IAAgB,UAC1CJ,EAAKZ,CAAG,EAAIgB,GAEhB,CAAC,CACH,CACA,SAASE,GAAoBC,EAAMC,EAAOC,EAAmB,CAC3D,GAAI,CAACD,GAAS,CAACD,EACb,OAEF,GAAI,CAACE,EACH,OAAOF,EAAKC,CAAK,EAEnB,IAAME,EAASF,EAAM,MAAM,GAAG,EAC1BG,EAAgBJ,EACpB,QAASrE,EAAI,EAAGA,EAAIwE,EAAO,OAAQxE,IAAK,CACtC,GAAIyE,GAAiB,KACnB,OAEFA,EAAgBA,EAAcD,EAAOxE,CAAC,CAAC,CACzC,CACA,OAAOyE,CACT,CACA,SAAShB,GAAiBpC,EAAO,CAC/B,OAAO,OAAOA,GAAU,UAAYA,IAAU,IAChD,CAGA,IAAIqD,GAAmB,CACrB,UAAW,GACX,SAAU,EACZ,EACIC,GAAqB,EACzB,SAASC,IAAuB,CAC9B,OAAOD,IACT,CACA,SAASE,GAASC,EAAK,CACrB,OAAOA,aAAeC,EACxB,CACA,IAAIC,GAA2B,GAC3BD,GAAW,cAAcjF,CAAS,CACpC,YAAYmF,EAAQC,EAAoBC,EAAOC,EAAS,CACtD,MAAM,EACN,KAAK,SAAW,GAGhB,KAAK,WAAaR,GAAqB,EAEvC,KAAK,iBAAmB,KACxB,KAAK,OAAS,GACd,KAAK,YAAc,GACnB,KAAK,eAAiB,GACtB,KAAK,iBAAmB,GACxB,KAAK,aAAe,GACpB,KAAK,mBAAqB,IAAI1E,GAC9B,KAAK,eAAiB,GACtB,KAAK,eAAiB,GACtB,KAAK,YAAc,GACnB,KAAK,kBAAoB,GACzB,KAAK,OAAS+E,EACd,KAAK,mBAAqBC,EAC1B,KAAK,MAAQC,EACb,KAAK,QAAUC,EACf,KAAK,SAASH,CAAM,CACtB,CACA,UAAUlF,EAAO,CACf,KAAK,mBAAqBA,EAAM,kBAClC,CACA,eAAgB,CACd,OAAO,KAAK,UACd,CACA,SAASkF,EAAQ,CACXA,EAAO,OAAS,QACdA,EAAO,OAAS,OAASA,EAAO,OAAS,UAC3C,KAAK,KAAOA,EAAO,OAGjBA,EAAO,cAAgB,OAASA,EAAO,cAAgB,UACzD,KAAK,KAAOA,EAAO,aAGvB,IAAMI,EAAYJ,EAAO,UACnBK,EAAmBL,EAAO,iBAC5BI,IAAc,OACZA,IAAc,OAChB,KAAK,UAAYA,GAGfC,IAAqB,OACvB,KAAK,UAAYA,GAGrB,IAAMC,EAAON,EAAO,KACdO,EAAcP,EAAO,YACvBM,IAAS,OACX,KAAK,QAAU,CAACA,EAEhB,KAAK,QAAU,CAACC,EAEdP,EAAO,SAAW,OACpB,KAAK,UAAUA,EAAO,MAAM,EAE5B,KAAK,UAAUA,EAAO,aAAa,EAErC,IAAMQ,EAAOR,EAAO,KACdS,EAAcT,EAAO,YACvBQ,IAAS,OACX,KAAK,KAAOA,EACHC,IAAgB,SACzB,KAAK,KAAOA,EAEhB,CAEA,UAAUT,EAAQC,EAAoBnB,EAAQ,CAC5C,KAAK,OAASkB,EACd,KAAK,mBAAqBC,EAC1B,KAAK,oBAAoB,EACzB,KAAK,gBAAgB,EACrB,KAAK,YAAY,EACjB,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,gBAAiBnB,CAAM,CAAC,CACvF,CACA,uBAAwB,CACtB,OAAO,KAAK,kBACd,CACA,UAAU4B,EAAQ,CAChB,KAAK,OAASA,CAChB,CACA,WAAY,CACV,OAAO,KAAK,MACd,CACA,kBAAkBC,EAAgB,CAChC,KAAK,eAAiBA,CACxB,CACA,mBAAoB,CAClB,OAAO,KAAK,cACd,CAEA,eAAgB,CACd,KAAK,oBAAoB,EACzB,KAAK,iBAAiB,kBAAkB,EACxC,KAAK,gBAAgB,EACrB,KAAK,YAAY,CACnB,CACA,iBAAkB,CAChB,IAAMC,EAAsB,KAAK,IAAI,IAAI,0BAA0B,EACnE,KAAK,kBAAoBvE,EAAQ,KAAK,OAAO,KAAK,GAAK,KAAK,OAAO,MAAM,QAAQ,GAAG,GAAK,GAAK,CAACuE,EAC/F,KAAK,yBAA2BvE,EAAQ,KAAK,OAAO,YAAY,GAAK,KAAK,OAAO,aAAa,QAAQ,GAAG,GAAK,GAAK,CAACuE,CACtH,CACA,qBAAsB,CACpB,IAAMZ,EAAS,KAAK,OACpB,KAAK,SAAWA,EAAO,UAAYD,GACnC,KAAK,SAAWC,EAAO,UAAY,OAAO,gBAC5C,CACA,aAAc,CACZ,KAAK,eAAiB3D,EAAQ,KAAK,OAAO,YAAY,GAAKA,EAAQ,KAAK,OAAO,kBAAkB,GAAKA,EAAQ,KAAK,OAAO,gBAAgB,CAC5I,CACA,iBAAiByC,EAAQ,CACvB,IAAM+B,EAAe,KAAK,yBAAyB,KAAK,MAAM,EAC9D,KAAK,eAAeA,EAAc/B,EAAQ,EAAI,CAChD,CACA,yBAAyBkB,EAAQ,CAC/B,IAAIc,EACEC,EAAcrE,GAAcsD,EAAO,KAAK,EACxCgB,EAAqBtE,GAAcsD,EAAO,YAAY,EAC5D,OAAIe,GAAe,KACjBD,EAAQC,EACCC,GAAsB,KAC/BF,EAAQE,EAERF,EAAQ,IAEH,KAAK,IAAI,KAAK,IAAIA,EAAO,KAAK,QAAQ,EAAG,KAAK,QAAQ,CAC/D,CACA,cAAe,CACb,MAAO,EACT,CACA,oBAAoBZ,EAAO,CACzB,GAAI3D,EAAS,KAAK,MAAM,GAAKA,EAAS,KAAK,OAAO,YAAY,EAC5D,MAAO,GAET,IAAM0E,EAAmB,KAAK,OAAO,eAAiB,GAChDC,EAAmB,KAAK,OAAO,eAAiBhB,EACtD,OAAOe,GAAoBC,CAC7B,CACA,WAAY,CACV,OAAO,KAAK,OACd,CACA,iBAAkB,CAEhB,MADsB,CAAC,CAAC,KAAK,OAAO,MAEtC,CACA,qBAAsB,CACpB,OAAO,KAAK,iBACd,CACA,kBAAmB,CACjB,OAAO,KAAK,cACd,CACA,4BAA6B,CAC3B,OAAO,KAAK,wBACd,CACA,iBAAiBlG,EAAWkB,EAAc,CACpC,KAAK,mBAAmB,oBAAsB,CAAC,KAAK,gCACtD,KAAK,mBAAmB,sBAAsB,KAAK,kBAAkB,EACrE,KAAK,8BAAgC,IAAID,GAA8B,KAAK,kBAAkB,GAEhG,IAAMvB,EAAW,KAAK,+BAA+B,KAAKwB,CAAY,GAAKA,EAC3E,KAAK,mBAAmB,iBAAiBlB,EAAWN,CAAQ,CAC9D,CACA,oBAAoBM,EAAWkB,EAAc,CAC3C,IAAMxB,EAAW,KAAK,+BAA+B,OAAOwB,CAAY,GAAKA,EAC7E,KAAK,mBAAmB,oBAAoBlB,EAAWN,CAAQ,CACjE,CACA,mCAAmCyG,EAAS,CAC1C,OAAO,KAAK,IAAI,oBAAoB,CAClC,KAAMA,EACN,KAAMA,EAAQ,KACd,OAAQ,KACR,OAAQ,KAAK,MACf,CAAC,CACH,CACA,oBAAoBA,EAAS,CAC3B,GAAI,OAAO,KAAK,OAAO,mBAAsB,UAC3C,OAAO,KAAK,OAAO,kBAErB,GAAI,OAAO,KAAK,OAAO,mBAAsB,WAAY,CACvD,IAAMC,EAAS,KAAK,mCAAmCD,CAAO,EACxDE,EAAW,KAAK,OAAO,kBAC7B,OAAOA,EAASD,CAAM,CACxB,CACA,MAAO,EACT,CACA,eAAeD,EAAS,CACtB,OAAIA,EAAQ,OAAS,CAAC,KAAK,IAAI,IAAI,iBAAiB,EAC3C,GAEF,KAAK,aAAaA,EAAS,KAAK,OAAO,QAAQ,CACxD,CACA,sBAAuB,CACrB,MAAO,CAAC,CAAC,KAAK,OAAO,kBACvB,CACA,cAAe,CACb,MAAO,CAAC,CAAC,KAAK,OAAO,UACvB,CACA,oBAAqB,CACnB,MAAO,CAAC,CAAC,KAAK,OAAO,gBACvB,CACA,UAAUA,EAAS,CACjB,OAAO,KAAK,aAAaA,EAAS,KAAK,OAAO,OAAO,CACvD,CACA,YAAYA,EAAS,CACnB,OAAO,KAAK,aAAaA,EAAS,KAAK,OAAO,SAAS,CACzD,CACA,wBAAwBA,EAAS,CAC/B,OAAO,KAAK,aAAaA,EAAS,KAAK,OAAO,iBAAiB,CACjE,CACA,gBAAgBA,EAAS,CACvB,OAAO,KAAK,aAAaA,EAAS,KAAK,OAAS,KAAK,OAAO,cAAgB,IAAI,CAClF,CACA,aAAc,CACZ,MAAO,CAAC,CAAC,KAAK,eAAe,WAAW,CAC1C,CAEA,eAAelD,EAAK,CAClB,OAAO,KAAK,OAAOA,CAAG,GAAKwB,GAAiBxB,CAAG,CACjD,CACA,aAAakD,EAAS/E,EAAO,CAC3B,GAAI,OAAOA,GAAU,UACnB,OAAOA,EAET,GAAI,OAAOA,GAAU,WAAY,CAC/B,IAAMgF,EAAS,KAAK,mCAAmCD,CAAO,EAE9D,OADqB/E,EACDgF,CAAM,CAC5B,CACA,MAAO,EACT,CACA,UAAUE,EAAQxC,EAAQ,CACxB,KAAK,OAASwC,EACd,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,gBAAiBxC,CAAM,CAAC,CACvF,CACA,kBAAkBjF,EAAMiF,EAAQ,CAC9B,OAAO,KAAK,IAAI,oBAAoB,CAClC,KAAAjF,EACA,OAAQ,KACR,QAAS,CAAC,IAAI,EACd,OAAAiF,CACF,CAAC,CACH,CACA,UAAW,CACT,OAAO,KAAK,MACd,CACA,SAAU,CACR,OAAO,KAAK,IACd,CACA,QAAQyC,EAAMzC,EAAQ,CAChB,KAAK,OAASyC,IAChB,KAAK,KAAOA,EACZ,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,cAAezC,CAAM,CAAC,GAErF,KAAK,0BAA0B,MAAM,CACvC,CACA,YAAa,CACX,MAAO,CAAC,CAAC,KAAK,eAAe,UAAU,CACzC,CAEA,iBAAkB,CAChB,OAAO,KAAK,OAAS,KACvB,CAEA,kBAAmB,CACjB,OAAO,KAAK,OAAS,MACvB,CAEA,YAAa,CACX,OAAOvC,EAAS,KAAK,IAAI,CAC3B,CAEA,WAAY,CACV,OAAOF,EAAQ,KAAK,IAAI,CAC1B,CACA,cAAe,CACb,OAAO,KAAK,SACd,CACA,aAAamF,EAAW,CACtB,KAAK,UAAYA,EACjB,KAAK,0BAA0B,WAAW,CAC5C,CACA,eAAeC,EAAS3C,EAAQ,CAC1B,KAAK,cAAgB2C,IACvB,KAAK,YAAcA,EACnB,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,qBAAsB3C,CAAM,CAAC,EAE9F,CACA,eAAgB,CACd,OAAO,KAAK,WACd,CACA,WAAW4C,EAAS,CAClB,KAAK,QAAUA,EACf,KAAK,0BAA0B,SAAS,CAC1C,CACA,YAAa,CACX,OAAO,KAAK,OACd,CACA,SAAU,CACR,OAAO,KAAK,IACd,CACA,YAAa,CACX,OAAO,KAAK,OACd,CACA,UAAW,CACT,OAAO,KAAK,KAAO,KAAK,WAC1B,CACA,QAAQC,EAAM7C,EAAQ,CACpB,KAAK,QAAU,KAAK,KAChB,KAAK,OAAS6C,IAChB,KAAK,KAAOA,EACZ,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,cAAe7C,CAAM,CAAC,EAEvF,CACA,gBAAiB,CACf,OAAO,KAAK,YACd,CAEA,gBAAgB8C,EAAQ9C,EAAQ+C,EAA2B,CACrD,KAAK,eAAiBD,IACxB,KAAK,aAAeA,EACpB,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,sBAAuB9C,CAAM,CAAC,GAE7F,IAAMgD,EAAqB,KAAK,kBAAkB,gBAAiBhD,CAAM,EACrE+C,GACFjD,GAAWkD,EAAoBD,CAAyB,EAE1D,KAAK,mBAAmB,cAAcC,CAAkB,CAC1D,CACA,WAAY,CACV,OAAO,KAAK,mBAAmB,UAAU,IAAI,CAC/C,CACA,UAAUC,EAAQ,CACZA,IAAW,IAAQA,IAAW,OAChC,KAAK,OAAS,OACLA,IAAW,QACpB,KAAK,OAAS,QAEd,KAAK,OAAS,KAEhB,KAAK,0BAA0B,QAAQ,CACzC,CACA,oBAAoBC,EAAkBlD,EAAQ,CACxC,KAAK,mBAAqBkD,IAC5B,KAAK,iBAAmBA,EACxB,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,0BAA2BlD,CAAM,CAAC,EAEnG,CACA,kBAAkBmD,EAAgBnD,EAAQ,CACpC,KAAK,iBAAmBmD,IAC1B,KAAK,eAAiBA,EACtB,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,wBAAyBnD,CAAM,CAAC,EAEjG,CACA,oBAAqB,CACnB,OAAO,KAAK,gBACd,CACA,kBAAmB,CACjB,OAAO,KAAK,cACd,CACA,UAAW,CACT,OAAO,KAAK,SAAW,QAAU,KAAK,SAAW,OACnD,CACA,cAAe,CACb,OAAO,KAAK,SAAW,MACzB,CACA,eAAgB,CACd,OAAO,KAAK,SAAW,OACzB,CACA,WAAY,CACV,OAAO,KAAK,MACd,CACA,WAAW2C,EAAS3C,EAAQ,CAC1B,IAAMoD,EAAWT,IAAY,GACzB,KAAK,UAAYS,IACnB,KAAK,QAAUA,EACf,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,iBAAkBpD,CAAM,CAAC,GAExF,KAAK,0BAA0B,MAAM,CACvC,CACA,WAAY,CACV,OAAO,KAAK,OACd,CACA,oBAAqB,CACnB,IAAMkB,EAAS,KAAK,UAAU,EAC9B,MAAO,CAACA,EAAO,0BAA4B,CAACA,EAAO,gBACrD,CACA,2BAA4B,CAC1B,IAAIU,EAAS,KAAK,UAAU,EAC5B,GAAI,CAACA,GAAU,CAACA,EAAO,UAAU,EAC/B,MAAO,CACL,gBAAiB,EACjB,gBAAiB,EACnB,EAEF,IAAMyB,EAAkBzB,EAAO,gBAAgB,EAAI,EAC/C0B,EAAkB,GACtB,KAAO1B,GAAQ,CACb,GAAI,CAACA,EAAO,UAAU,EAAG,CACvB0B,EAAkB,GAClB,KACF,CACA1B,EAASA,EAAO,UAAU,CAC5B,CACA,MAAO,CACL,gBAAAyB,EACA,gBAAAC,CACF,CACF,CACA,WAAY,CACV,OAAO,KAAK,MACd,CACA,eAAgB,CACd,OAAO,KAAK,MACd,CACA,oBAAqB,CACnB,OAAO,KAAK,OAAO,eACrB,CACA,UAAW,CACT,OAAO,KAAK,KACd,CACA,OAAQ,CACN,OAAO,KAAK,KACd,CACA,aAAc,CACZ,OAAO,KAAK,KACd,CACA,gBAAiB,CACf,OAAO,KAAK,WACd,CACA,qBAAsB,CACpB,OAAO,KAAK,gBACd,CAEA,oBAAoBC,EAAQ,CAC1B,IAAMC,EAAUD,IAAW,KAAK,iBAChC,YAAK,iBAAmBA,EACjBC,CACT,CACA,uBAAuBnB,EAAS,CAO9B,OANe,KAAK,IAAI,oBAAoB,CAC1C,KAAMA,EACN,KAAMA,EAAQ,KACd,OAAQ,KAAK,OACb,OAAQ,IACV,CAAC,CAEH,CACA,WAAWA,EAAS,CAClB,GAAI5E,EAAS,KAAK,OAAO,OAAO,EAC9B,MAAO,GAET,IAAM6E,EAAS,KAAK,uBAAuBD,CAAO,EAC5CoB,EAAU,KAAK,OAAO,QAAQnB,CAAM,EAC1C,OAAO,KAAK,IAAImB,EAAS,CAAC,CAC5B,CACA,WAAWpB,EAAS,CAClB,GAAI5E,EAAS,KAAK,OAAO,OAAO,EAC9B,MAAO,GAET,IAAM6E,EAAS,KAAK,uBAAuBD,CAAO,EAC5CqB,EAAU,KAAK,OAAO,QAAQpB,CAAM,EAC1C,OAAO,KAAK,IAAIoB,EAAS,CAAC,CAC5B,CACA,eAAeC,EAAa3D,EAAQ4D,EAAS,GAAO,CAClDD,EAAc,KAAK,IAAIA,EAAa,KAAK,QAAQ,EACjDA,EAAc,KAAK,IAAIA,EAAa,KAAK,QAAQ,EAC7C,KAAK,cAAgBA,IACvB,KAAK,YAAcA,EACf,KAAK,MAAQ3D,IAAW,QAAUA,IAAW,qBAC/C,KAAK,KAAO,MAET4D,GACH,KAAK,4BAA4B5D,CAAM,GAG3C,KAAK,0BAA0B,OAAO,CACxC,CACA,4BAA4BA,EAAQ,CAClC,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,eAAgBA,CAAM,CAAC,CACtF,CACA,iBAAiBgC,EAAO,CACtB,OAAOA,EAAQ,KAAK,QACtB,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,SAAU,CACR,OAAO,KAAK,MAAQ,CACtB,CAGA,QAAQN,EAAM,CACR,KAAK,OAASA,IAChB,KAAK,KAAOA,GAEd,KAAK,0BAA0B,MAAM,CACvC,CACA,WAAW1B,EAAQ,CACjB,KAAK,eAAe,KAAK,SAAUA,CAAM,CAC3C,CACA,kBAAkB6D,EAAU7D,EAAQ,CAC9B,KAAK,iBAAmB6D,IAC1B,KAAK,eAAiBA,EACtB,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,wBAAyB7D,CAAM,CAAC,GAE/F,KAAK,0BAA0B,UAAU,CAC3C,CACA,kBAAmB,CACjB,OAAO,KAAK,cACd,CACA,eAAe8D,EAAO9D,EAAQ,CACxB,KAAK,cAAgB8D,IACvB,KAAK,YAAcA,EACnB,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,qBAAsB9D,CAAM,CAAC,GAE5F,KAAK,0BAA0B,OAAO,CACxC,CACA,eAAgB,CACd,OAAO,KAAK,WACd,CACA,qBAAsB,CACpB,OAAO,KAAK,cAAc,GAAK,KAAK,iBAAiB,GAAK,KAAK,cAAc,CAC/E,CACA,sBAAuB,CACrB,OAAO,KAAK,aAAa,GAAK,KAAK,gBAAgB,GAAK,KAAK,aAAa,CAC5E,CACA,eAAe1C,EAAO0C,EAAQ,CACxB,KAAK,oBAAsB1C,IAC7B,KAAK,kBAAoBA,EACzB,KAAK,mBAAmB,cAAc,KAAK,kBAAkB,qBAAsB0C,CAAM,CAAC,EAE9F,CACA,eAAgB,CACd,OAAO,KAAK,iBACd,CACA,cAAe,CACb,OAAO,KAAK,OAAO,cAAgB,EACrC,CACA,cAAe,CACb,OAAO,KAAK,OAAO,cAAgB,EACrC,CACA,iBAAkB,CAChB,OAAO,KAAK,OAAO,iBAAmB,EACxC,CACA,0BAA0Bb,EAAK,CAC7B,KAAK,mBAAmB,cAAc,CACpC,KAAM,qBACN,IAAAA,CACF,CAAC,CACH,CACF,EAGA,SAAS4E,EAAsBhD,EAAK,CAClC,OAAOA,aAAeiD,EACxB,CACA,IAAIA,GAAwB,cAAcjI,CAAS,CACjD,YAAYkI,EAAaC,EAASC,EAASC,EAAO,CAChD,MAAM,EACN,KAAK,SAAW,GAChB,KAAK,WAAa,GAGlB,KAAK,WAAavD,GAAqB,EACvC,KAAK,iCAAmC,KACxC,KAAK,YAAcoD,EACnB,KAAK,QAAUC,EACf,KAAK,SAAW,CAAC,CAACD,GAAe,CAAC,CAACA,EAAY,cAC/C,KAAK,QAAUE,EACf,KAAK,MAAQC,CACf,CACA,SAAU,CACJ,KAAK,kCACP,KAAK,MAAM,KAAM,MAAM,EAEzB,MAAM,QAAQ,CAChB,CACA,MAAMH,EAAaG,EAAO,CACxB,KAAK,YAAcH,EACnB,KAAK,MAAQG,EACb,KAAK,eAAiB,KAClB,KAAK,kCACP,KAAK,iCAAiC,EAExC,KAAK,SAAW,OAChB,KAAK,WAAa,MACpB,CACA,eAAgB,CACd,OAAO,KAAK,UACd,CACA,kBAAkBvC,EAAgB,CAChC,KAAK,eAAiBA,CACxB,CACA,mBAAoB,CAClB,OAAO,KAAK,cACd,CACA,UAAW,CACT,OAAO,KAAK,KACd,CACA,WAAY,CACV,OAAI,KAAK,SACA,KAAK,SAAS,KAAKwC,GAASA,EAAM,UAAU,CAAC,EAE/C,EACT,CACA,WAAY,CACV,OAAO,KAAK,OACd,CACA,YAAYC,EAAU,CACpB,KAAK,SAAWA,IAAa,OAAS,GAAQA,EAC9C,KAAK,mBAAmB,CACtB,KAAM,iBACR,CAAC,CACH,CACA,cAAe,CACb,OAAO,KAAK,UACd,CACA,YAAa,CACX,OAAO,KAAK,QACd,CACA,YAAa,CACX,OAAO,KAAK,OACd,CACA,OAAQ,CACN,OAAO,KAAK,WAAW,CACzB,CACA,YAAYC,EAAU,CACpB,KAAK,SAAWA,CAClB,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,gBAAiB,CACf,OAAO,KAAK,WACd,CACA,gBAAiB,CACf,IAAMC,EAAS,CAAC,EAChB,YAAK,eAAeA,CAAM,EACnBA,CACT,CACA,eAAeC,EAAa,CACrB,KAAK,UAGV,KAAK,SAAS,QAAQJ,GAAS,CACzBvD,GAASuD,CAAK,EAChBI,EAAY,KAAKJ,CAAK,EACbN,EAAsBM,CAAK,GACpCA,EAAM,eAAeI,CAAW,CAEpC,CAAC,CACH,CACA,oBAAqB,CACnB,IAAMR,EAAc,KAAK,YACzB,GAAKA,EAGL,OAAOA,EAAY,eACrB,CAGA,iBAAkB,CAChB,KAAK,cAAc,EACf,KAAK,kCACP,KAAK,iCAAiC,EAExC,IAAMrI,EAAW,KAAK,0BAA0B,KAAK,IAAI,EACzD,KAAK,eAAe,EAAE,QAAQmF,GAAOA,EAAI,iBAAiB,iBAAkBnF,CAAQ,CAAC,EACrF,KAAK,iCAAmC,IAAM,CAC5C,KAAK,eAAe,EAAE,QAAQmF,GAAOA,EAAI,oBAAoB,iBAAkBnF,CAAQ,CAAC,EACxF,KAAK,iCAAmC,IAC1C,CACF,CACA,eAAgB,CACd,GAAI,KAAK,UAAU,EACjB,OAEF,IAAI8I,EAA4B,GAC5BC,EAA8B,GAC9BC,EAAuB,GACrBL,EAAW,KAAK,4BAA4B,EAClD,QAAStI,EAAI,EAAG4I,EAAIN,EAAS,OAAQtI,EAAI4I,EAAG5I,IAAK,CAC/C,IAAM6I,EAAiBP,EAAStI,CAAC,EACjC,GAAI,CAAC6I,EAAe,UAAU,EAC5B,SAEF,IAAMC,EAAkBD,EAAe,mBAAmB,EACtDC,IAAoB,QACtBL,EAA4B,GAC5BE,EAAuB,IACdG,IAAoB,UAC7BJ,EAA8B,GAC9BC,EAAuB,KAEvBF,EAA4B,GAC5BC,EAA8B,GAElC,CACA,IAAMK,EAAaN,GAA6BC,GAA+BC,EAC3E,KAAK,aAAeI,IACtB,KAAK,WAAaA,EAClB,KAAK,mBAAmB,CACtB,KAAM,mBACR,CAAC,EAEL,CACA,6BAA8B,CAC5B,IAAM1J,EAAM,CAAC,EACP2J,EAAUC,GAAS,CACvBA,EAAM,QAAQC,GAAQ,CACOpB,EAAsBoB,CAAI,GAAKA,EAAK,UAAU,EAEvEF,EAAQE,EAAK,QAAQ,EAErB7J,EAAI,KAAK6J,CAAI,CAEjB,CAAC,CACH,EACA,OAAAF,EAAQ,KAAK,QAAQ,EACd3J,CACT,CACA,2BAA4B,CAC1B,KAAK,cAAc,CACrB,CACF,EAGI8J,GAAqB,CACvB,cAAe,CACb,YAAa,0BACb,UAAW,uBACb,EACA,aAAc,CACZ,YAAa,0BACb,UAAW,uBACb,CACF,EAGIC,GAAc,CAAC,EACnB,SAASC,GAAQvI,EAAMoC,EAAK,CACtBkG,GAAYlG,CAAG,IAGnBpC,EAAK,EACLsI,GAAYlG,CAAG,EAAI,GACrB,CACA,SAASoG,GAAKC,KAAYC,EAAM,CAC9B,QAAQ,IAAI,YAAcD,EAAS,GAAGC,CAAI,CAC5C,CACA,SAASC,EAAUC,KAAQF,EAAM,CAC/BH,GAAQ,IAAM,QAAQ,KAAK,YAAcK,EAAK,GAAGF,CAAI,EAAGE,EAAMF,GAAM,KAAK,EAAE,CAAC,CAC9E,CACA,SAASG,EAAWD,KAAQF,EAAM,CAChCH,GAAQ,IAAM,QAAQ,MAAM,YAAcK,EAAK,GAAGF,CAAI,EAAGE,EAAMF,GAAM,KAAK,EAAE,CAAC,CAC/E,CACA,SAASI,GAAYC,EAAK,CACxB,MAAO,CAAC,EAAEA,GAAOA,EAAI,aAAeA,EAAI,MAAQA,EAAI,MACtD,CACA,SAASC,GAAiBC,EAAO,CAC/BC,GAAcD,EAAO,GAAG,CAC1B,CACA,IAAIE,GAAyB,CAAC,EAC1BC,GAA2B,GAC/B,SAASC,GAAmBrJ,EAAM,CAChCmJ,GAAuB,KAAKnJ,CAAI,EAC5B,CAAAoJ,KAGJA,GAA2B,GAC3B,OAAO,WAAW,IAAM,CACtB,IAAME,EAAYH,GAAuB,MAAM,EAC/CA,GAAuB,OAAS,EAChCC,GAA2B,GAC3BE,EAAU,QAAQC,GAASA,EAAM,CAAC,CACpC,EAAG,CAAC,EACN,CACA,SAASL,GAAcD,EAAOO,EAAe,EAAG,CAC1CP,EAAM,OAAS,GACjB,OAAO,WAAW,IAAMA,EAAM,QAAQjJ,GAAQA,EAAK,CAAC,EAAGwJ,CAAY,CAEvE,CACA,SAASC,EAAUzJ,EAAM0J,EAAO,CAC9B,IAAIC,EACJ,OAAO,YAAajB,EAAM,CACxB,IAAMxI,EAAU,KAChB,OAAO,aAAayJ,CAAO,EAC3BA,EAAU,OAAO,WAAW,UAAY,CACtC3J,EAAK,MAAME,EAASwI,CAAI,CAC1B,EAAGgB,CAAK,CACV,CACF,CACA,SAASE,GAAU5J,EAAM6J,EAAM,CAC7B,IAAIC,EAAe,EACnB,OAAO,YAAapB,EAAM,CACxB,IAAMxI,EAAU,KACV6J,EAA+B,IAAI,KAAK,EAAG,QAAQ,EACrDA,EAAcD,EAAeD,IAGjCC,EAAeC,EACf/J,EAAK,MAAME,EAASwI,CAAI,EAC1B,CACF,CACA,SAASsB,GAAWC,EAAW9H,EAAUwH,EAAU,IAAKO,EAAgB,CACtE,IAAMC,EAA6B,IAAI,KAAK,EAAG,QAAQ,EACnDC,EAAW,KACXC,EAAW,GACTC,EAAmB,IAAM,CAC7B,IAAMC,EAAkC,IAAI,KAAK,EAAG,QAAQ,EAAIJ,EAAYR,GACxEM,EAAU,GAAKM,KACjBpI,EAAS,EACTkI,EAAW,GACPD,GAAY,OACd,OAAO,cAAcA,CAAQ,EAC7BA,EAAW,MAETG,GAAkBL,GACpBvB,EAAUuB,CAAc,EAG9B,EACAI,EAAiB,EACZD,IACHD,EAAW,OAAO,YAAYE,EAAkB,EAAE,EAEtD,CACA,SAASE,MAAYC,EAAK,CACxB,OAAOC,GAAOD,EAAI,OAAO,CAACE,EAAUC,IAAMA,EAAED,CAAQ,EAAGD,CAAG,CAC5D,CAGA,IAAIG,GAAmB,KAAM,CAC3B,aAAc,CACZ,KAAK,aAAe,CAAC,CACvB,CACA,gBAAgBtI,EAAM,CACpB,QAASrD,EAAI,EAAGA,EAAIqD,EAAK,OAAQrD,IAC/B,KAAK,aAAaqD,EAAKrD,CAAC,CAAC,EAAI,EAEjC,CACA,aAAamF,EAAOyG,EAAU,CAC5BzG,EAAQzD,GAAgByD,CAAK,EAC7B,IAAI0G,EAAQ,EACZ,OAAa,CACX,IAAIC,EAcJ,GAbI3G,GACF2G,EAAU3G,EACN0G,IAAU,IACZC,GAAW,IAAMD,IAEVD,GACTE,EAAUF,EACNC,IAAU,IACZC,GAAW,IAAMD,IAGnBC,EAAUD,EAER,CAAC,KAAK,aAAaC,CAAO,EAC5B,YAAK,aAAaA,CAAO,EAAI,GACtB,OAAOA,CAAO,EAEvBD,GACF,CACF,CACF,EAGIE,GAAuB,qBAC3B,SAASC,GAAmBC,EAAa,CACvC,IAAM1D,EAAS,CAAC,EACV2D,EAAuBC,GAAgB,CAC3C,QAASnM,EAAI,EAAGA,EAAImM,EAAa,OAAQnM,IAAK,CAC5C,IAAMoI,EAAQ+D,EAAanM,CAAC,EACxB6E,GAASuD,CAAK,EAChBG,EAAO,KAAKH,CAAK,EACRN,EAAsBM,CAAK,GACpC8D,EAAqB9D,EAAM,YAAY,CAAC,CAE5C,CACF,EACA,OAAA8D,EAAqBD,CAAW,EACzB1D,CACT,CACA,SAAS6D,GAAqBC,EAAY,CACxC,OAAOA,EAAW,OAAO,CAACtG,EAAOjB,IAAQiB,EAAQjB,EAAI,eAAe,EAAG,CAAC,CAC1E,CACA,SAASwH,GAAkBtL,EAASuL,EAASC,EAAS,CACpD,IAAMC,EAAiB,CAAC,EACxB,GAAI,CAACF,EACH,OAEFG,GAA6B,KAAMH,EAASnE,GAAS,CACnDqE,EAAerE,EAAM,cAAc,CAAC,EAAIA,CAC1C,CAAC,EACGoE,GACFE,GAA6B,KAAMF,EAASpE,GAAS,CACnDqE,EAAerE,EAAM,cAAc,CAAC,EAAI,IAC1C,CAAC,EAEH,IAAMuE,EAAgB,OAAO,OAAOF,CAAc,EAAE,OAAOvD,GAAQA,GAAQ,IAAI,EAC/ElI,EAAQ,aAAa2L,CAAa,CACpC,CACA,SAASC,GAAqB9H,EAAK,CAEjC,OADcA,EAAI,MAAM,EACX,WAAWiH,EAAoB,CAC9C,CACA,SAASc,GAAmB/N,EAAM,CAChC,IAAIgO,EAAW,CAAC,EAChB,OAAIhO,aAAgB,MACGA,EAAK,KAAK6D,GAAK,OAAOA,GAAM,QAAQ,EAEvD8G,EAAU,qEAAqE,EAE/EqD,EAAWhO,EAEJ,OAAOA,GAAS,SACzBgO,EAAWhO,EAAK,MAAM,GAAG,EAEzB2K,EAAU,qDAAqD,EAE1DqD,CACT,CAGA,IAAIC,GAAgB,cAAcjN,CAAS,CACzC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,eAClB,CACA,UAAUC,EAAO,CACf,KAAK,gBAAkBA,EAAM,eAC/B,CACA,iBAAiBiN,EAAMC,EAAgBC,EAAcnJ,EAAQ,CAC3D,IAAMoJ,EAAmB,IAAIxB,GACvB,CACJ,aAAAyB,EACA,eAAAC,EACA,gBAAAC,CACF,EAAI,KAAK,wBAAwBJ,CAAY,EAC7CC,EAAiB,gBAAgBG,CAAe,EAChD,IAAMC,EAAiB,KAAK,yBAAyBP,EAAM,EAAGC,EAAgBG,EAAcD,EAAkBE,EAAgBtJ,CAAM,EAC9HyJ,EAAW,KAAK,YAAYD,EAAgB,CAAC,EAC7CE,EAAa,KAAK,kBAAkBF,EAAgB,EAAGC,EAAUL,CAAgB,EAOvF,OAAAT,GAA6B,KAAMe,EANT,CAACrF,EAAOzC,IAAW,CACvCmC,EAAsBM,CAAK,GAC7BA,EAAM,gBAAgB,EAExBA,EAAM,kBAAkBzC,CAAM,CAChC,CACgE,EACzD,CACL,WAAA8H,EACA,SAAAD,CACF,CACF,CACA,wBAAwBN,EAAc,CACpC,IAAME,EAAe,CAAC,EAChBC,EAAiB,CAAC,EAClBC,EAAkB,CAAC,EACzB,OAAIJ,GACFR,GAA6B,KAAMQ,EAAchE,GAAQ,CACvD,GAAIpB,EAAsBoB,CAAI,EAAG,CAC/B,IAAMwE,EAAQxE,EACdmE,EAAe,KAAKK,CAAK,CAC3B,KAAO,CACL,IAAM5I,EAAMoE,EACZoE,EAAgB,KAAKxI,EAAI,MAAM,CAAC,EAChCsI,EAAa,KAAKtI,CAAG,CACvB,CACF,CAAC,EAEI,CACL,aAAAsI,EACA,eAAAC,EACA,gBAAAC,CACF,CACF,CACA,oBAAoBK,EAAeC,EAAU,CAC3C,IAAMC,EAAO,CAAC,EACRC,EAAO,KAAK,UAAUF,CAAQ,EACpC,OAAAD,EAAc,QAAQ7I,GAAO,CAC3B,IAAIiJ,EAAYjJ,EAChB,QAAS9E,EAAI8N,EAAO,EAAG9N,GAAK,EAAGA,IAAK,CAClC,IAAMgO,EAAY,IAAIjG,GAAsB,KAAM,aAAajD,EAAI,MAAM,CAAC,KAAK9E,CAAC,GAAI,GAAMA,CAAC,EAC3F,KAAK,WAAWgO,CAAS,EACzBA,EAAU,YAAY,CAACD,CAAS,CAAC,EACjCA,EAAU,kBAAkBC,CAAS,EACrCD,EAAYC,CACd,CACIF,IAAS,GACXhJ,EAAI,kBAAkB,IAAI,EAE5B+I,EAAK,KAAKE,CAAS,CACrB,CAAC,EACM,CAACF,EAAMC,CAAI,CACpB,CACA,UAAUG,EAAoB,CAC5B,IAAIH,EAAO,EACPxO,EAAU2O,EACd,KAAO3O,GAAWA,EAAQ,CAAC,GAAKwI,EAAsBxI,EAAQ,CAAC,CAAC,GAC9DwO,IACAxO,EAAUA,EAAQ,CAAC,EAAE,YAAY,EAEnC,OAAOwO,CACT,CACA,kBAAkBP,EAAgBW,EAAaC,EAAYhB,EAAkB,CAC3E,IAAM5E,EAAS,CAAC,EAChB,QAASvI,EAAI,EAAGA,EAAIuN,EAAe,OAAQvN,IAAK,CAC9C,IAAMoI,EAAQmF,EAAevN,CAAC,EAC9B,GAAI8H,EAAsBM,CAAK,EAAG,CAChC,IAAMgG,EAAgBhG,EAChBiG,EAAc,KAAK,kBAAkBD,EAAc,YAAY,EAAGF,EAAc,EAAGC,EAAYhB,CAAgB,EACrHiB,EAAc,YAAYC,CAAW,EACrC9F,EAAO,KAAK6F,CAAa,CAC3B,KAAO,CACL,IAAIE,EACAC,EACJ,QAAS3F,EAAIuF,EAAa,EAAGvF,GAAKsF,EAAatF,IAAK,CAClD,IAAM4F,EAAWrB,EAAiB,aAAa,KAAM,IAAI,EACnDsB,EAAoB,KAAK,wBAAwB,IAAI,EACrDC,EAAc,IAAI3G,GAAsB0G,EAAmBD,EAAU,GAAMN,CAAW,EAC5F,KAAK,WAAWQ,CAAW,EACvBH,GACFA,EAAmB,YAAY,CAACG,CAAW,CAAC,EAE9CH,EAAqBG,EAChBJ,IACHA,EAAmBC,EAEvB,CACA,GAAID,GAAoBC,EAGtB,GAFAhG,EAAO,KAAK+F,CAAgB,EACVf,EAAe,KAAKoB,GAAQ7G,EAAsB6G,CAAI,CAAC,EAC1D,CACbJ,EAAmB,YAAY,CAACnG,CAAK,CAAC,EACtC,QACF,KAAO,CACLmG,EAAmB,YAAYhB,CAAc,EAC7C,KACF,CAEFhF,EAAO,KAAKH,CAAK,CACnB,CACF,CACA,OAAOG,CACT,CACA,YAAYqG,EAAcd,EAAM,CAC9B,IAAIe,EAAmBf,EACvB,QAAS9N,EAAI,EAAGA,EAAI4O,EAAa,OAAQ5O,IAAK,CAC5C,IAAM6I,EAAiB+F,EAAa5O,CAAC,EACrC,GAAI8H,EAAsBe,CAAc,EAAG,CACzC,IAAMuF,EAAgBvF,EAChBiG,EAAU,KAAK,YAAYV,EAAc,YAAY,EAAGN,EAAO,CAAC,EAClEe,EAAmBC,IACrBD,EAAmBC,EAEvB,CACF,CACA,OAAOD,CACT,CACA,yBAAyB7B,EAAM7E,EAAO8E,EAAgB8B,EAAkB5B,EAAkBE,EAAgBtJ,EAAQ,CAChH,GAAI,CAACiJ,EAAM,MAAO,CAAC,EACnB,IAAMzE,EAAS,IAAI,MAAMyE,EAAK,MAAM,EACpC,QAAShN,EAAI,EAAGA,EAAIuI,EAAO,OAAQvI,IAAK,CACtC,IAAMgP,EAAMhC,EAAKhN,CAAC,EACd,KAAK,cAAcgP,CAAG,EACxBzG,EAAOvI,CAAC,EAAI,KAAK,kBAAkBiN,EAAgB+B,EAAK7G,EAAO4G,EAAkB5B,EAAkBE,EAAgBtJ,CAAM,EAEzHwE,EAAOvI,CAAC,EAAI,KAAK,aAAaiN,EAAgB+B,EAAKD,EAAkB5B,EAAkBpJ,CAAM,CAEjG,CACA,OAAOwE,CACT,CACA,kBAAkB0E,EAAgBjF,EAAaG,EAAO8G,EAAiB9B,EAAkBE,EAAgBtJ,EAAQ,CAC/G,IAAM0K,EAAoB,KAAK,wBAAwBzG,CAAW,EAC5DC,EAAUkF,EAAiB,aAAasB,EAAkB,SAAW,KAAM,IAAI,EAC/ES,EAAgB,IAAInH,GAAsB0G,EAAmBxG,EAAS,GAAOE,CAAK,EACxF,KAAK,WAAW+G,CAAa,EAC7B,IAAMC,EAAwB,KAAK,kBAAkBnH,EAAaqF,CAAc,EAC5E8B,GACF9B,EAAe,OAAO8B,EAAsB,IAAK,CAAC,EAEpD,IAAMC,EAAgBD,GAAuB,MACzCC,GACFF,EAAc,YAAYE,EAAc,WAAW,CAAC,EAEtD,IAAM9G,EAAW,KAAK,yBAAyBmG,EAAkB,SAAUtG,EAAQ,EAAG8E,EAAgBgC,EAAiB9B,EAAkBE,EAAgBtJ,CAAM,EAC/J,OAAAmL,EAAc,YAAY5G,CAAQ,EAC3B4G,CACT,CACA,wBAAwBlH,EAAa,CACnC,IAAMyG,EAAoB,CAAC,EAC3B,cAAO,OAAOA,EAAmB,KAAK,IAAI,IAAI,oBAAoB,CAAC,EACnE,OAAO,OAAOA,EAAmBzG,CAAW,EACrCyG,CACT,CACA,aAAaxB,EAAgBhI,EAAQ8J,EAAkB5B,EAAkBpJ,EAAQ,CAC/E,IAAMsL,EAAsB,KAAK,mBAAmBpK,EAAQ8J,CAAgB,EACxEM,GACFN,GAAkB,OAAOM,EAAoB,IAAK,CAAC,EAErD,IAAIC,EAASD,GAAqB,OAClC,GAAKC,EAKE,CACL,IAAMC,EAAe,KAAK,yBAAyBtK,EAAQqK,EAAO,SAAS,CAAC,EAC5EA,EAAO,UAAUC,EAActK,EAAQlB,CAAM,EAC7C,KAAK,iBAAiBuL,EAAQC,EAAcxL,CAAM,CACpD,KATa,CACX,IAAMoB,EAAQgI,EAAiB,aAAalI,EAAO,MAAOA,EAAO,KAAK,EAChEsK,EAAe,KAAK,yBAAyBtK,EAAQE,CAAK,EAChEmK,EAAS,IAAIvK,GAASwK,EAActK,EAAQE,EAAO8H,CAAc,EACjE,KAAK,WAAWqC,CAAM,CACxB,CAKA,YAAK,iBAAiB,mBAAmBA,CAAM,EACxCA,CACT,CACA,iBAAiBA,EAAQrK,EAAQlB,EAAQ,CACvC,IAAM0B,EAAO9D,GAAcsD,EAAO,IAAI,EAKtC,GAJIQ,IAAS,QACX6J,EAAO,QAAQ7J,CAAI,EAEC6J,EAAO,QAAQ,GAAK,EACvB,CACjB,IAAMvJ,EAAQpE,GAAcsD,EAAO,KAAK,EACxC,GAAIc,GAAS,KACXuJ,EAAO,eAAevJ,EAAOhC,CAAM,MAC9B,CACL,IAAMyL,EAAoBF,EAAO,eAAe,EAChDA,EAAO,eAAeE,EAAmBzL,CAAM,CACjD,CACF,CACIkB,EAAO,OAAS,SACdA,EAAO,MAAQ,OAASA,EAAO,MAAQ,OACzCqK,EAAO,QAAQrK,EAAO,KAAMlB,CAAM,EAElCuL,EAAO,QAAQ,OAAQvL,CAAM,GAGjC,IAAMsB,EAAY1D,GAAcsD,EAAO,SAAS,EAC5CI,IAAc,QAChBiK,EAAO,aAAajK,CAAS,EAE/B,IAAME,EAAO1D,GAAeoD,EAAO,IAAI,EACnCM,IAAS,QACX+J,EAAO,WAAW,CAAC/J,EAAMxB,CAAM,EAE7BkB,EAAO,SAAW,QACpBqK,EAAO,UAAUrK,EAAO,MAAM,CAElC,CACA,mBAAmBwK,EAAWV,EAAkB,CAC9C,GAAKA,EACL,QAAS,EAAI,EAAG,EAAIA,EAAiB,OAAQ,IAAK,CAChD,IAAMC,EAAMD,EAAiB,CAAC,EAAE,sBAAsB,EACtD,GAAI,CAACC,EAAK,SAEV,GADiBS,EAAU,OAAS,KACtB,CACZ,GAAIV,EAAiB,CAAC,EAAE,MAAM,IAAMU,EAAU,MAC5C,MAAO,CACL,IAAK,EACL,OAAQV,EAAiB,CAAC,CAC5B,EAEF,QACF,CAEA,GADoBU,EAAU,OAAS,KACtB,CACf,GAAIT,EAAI,QAAUS,EAAU,MAC1B,MAAO,CACL,IAAK,EACL,OAAQV,EAAiB,CAAC,CAC5B,EAEF,QACF,CACA,GAAIC,IAAQS,EACV,MAAO,CACL,IAAK,EACL,OAAQV,EAAiB,CAAC,CAC5B,CAEJ,CAEF,CACA,kBAAkBW,EAAarC,EAAgB,CAE7C,GADiBqC,EAAY,SAAW,KAIxC,QAAS1P,EAAI,EAAGA,EAAIqN,EAAe,OAAQrN,IAAK,CAC9C,IAAMoP,EAAgB/B,EAAerN,CAAC,EAEtC,GADoBoP,EAAc,eAAe,GAI7CA,EAAc,MAAM,IAAMM,EAAY,QACxC,MAAO,CACL,IAAK1P,EACL,MAAOoP,CACT,CAEJ,CAEF,CACA,yBAAyBnK,EAAQE,EAAO,CACtC,IAAM9F,EAAM,CAAC,EACPsQ,EAAgB,KAAK,IAAI,IAAI,eAAe,EAClD9L,GAAWxE,EAAKsQ,EAAe,GAAO,EAAI,EAC1C,IAAMC,EAAa,KAAK,6BAA6BvQ,EAAK4F,EAAQE,CAAK,EACnEyK,GACF,KAAK,kBAAkBA,EAAYvQ,CAAG,EAExCwE,GAAWxE,EAAK4F,EAAQ,GAAO,EAAI,EACnC,IAAM4K,EAAkB,KAAK,IAAI,IAAI,oBAAoB,EACnDC,EAAmB,KAAK,IAAI,+BAA+B,EACjE,OAAI7K,EAAO,UAAY4K,GAAmBC,GACxCjM,GAAWxE,EAAK,CACd,KAAMwQ,EAAgB,KACtB,YAAaA,EAAgB,WAC/B,EAAG,GAAO,EAAI,EAEhB,KAAK,iBAAiB,eAAexQ,CAAG,EACjCA,CACT,CACA,6BAA6B4F,EAAQ8K,EAAY5K,EAAO,CACtD,IAAM6K,EAA+B,KAAK,iBAAiB,6BAA6B/K,EAAQ8K,EAAY5K,CAAK,EAC3G8K,EAAcF,EAAW,MAAQC,GAAgC/K,EAAO,KAC9E,OAAAA,EAAO,KAAOgL,EACPA,EAAcpD,GAAmBoD,CAAW,EAAI,MACzD,CACA,kBAAkBnD,EAAUyC,EAAc,CACxC,GAAI,CAACzC,EAAS,OACZ,OAEF,IAAMoD,EAAiB,OAAO,OAAO,CAAC,EAAG/G,EAAkB,EACrDgH,EAAY,KAAK,IAAI,IAAI,aAAa,GAAK,CAAC,EAClDnN,GAAemN,EAAW,CAACjN,EAAK7B,IAAU,CACpC6B,KAAOgN,EACTzG,EAAU,oBAAoBvG,CAAG,sDAAsD,GAEvE7B,EACJ,MACVoI,EAAU,yOAAyO,EAErPyG,EAAehN,CAAG,EAAI7B,EAE1B,CAAC,EACDyL,EAAS,QAAQsD,GAAK,CACpB,IAAMC,EAAaH,EAAeE,EAAE,KAAK,CAAC,EACtCC,EACFxM,GAAW0L,EAAcc,EAAY,GAAO,EAAI,EAEhD5G,EAAU,gBAAkB2G,EAAI,0DAA0D,CAE9F,CAAC,CACH,CAEA,cAAcE,EAAgB,CAC5B,OAAOA,EAAe,WAAa,MACrC,CACF,EACA,SAAS5D,GAA6B/G,EAAQkI,EAAM5K,EAAU,CAC5D,GAAK4K,EAGL,QAAS7N,EAAI,EAAGA,EAAI6N,EAAK,OAAQ7N,IAAK,CACpC,IAAMoI,EAAQyF,EAAK7N,CAAC,EAChB8H,EAAsBM,CAAK,GAC7BsE,GAA6BtE,EAAOA,EAAM,YAAY,EAAGnF,CAAQ,EAEnEA,EAASmF,EAAOzC,CAAM,CACxB,CACF,CAGA,IAAI4K,GAAc,cAAczQ,CAAS,CACvC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,cAEhB,KAAK,UAAY,GACjB,KAAK,4BAA8B,GACnC,KAAK,MAAQ,GACb,KAAK,wBAA0B,GAE/B,KAAK,4BAA8B,GACnC,KAAK,qBAAuB,CAAC,CAC/B,CACA,UAAUC,EAAO,CACf,KAAK,QAAUA,EAAM,QACrB,KAAK,cAAgBA,EAAM,cAC3B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,uBAAyBA,EAAM,uBACpC,KAAK,uBAAyBA,EAAM,uBACpC,KAAK,eAAiBA,EAAM,eAC5B,KAAK,WAAaA,EAAM,WACxB,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,wBAA0BA,EAAM,wBACrC,KAAK,wBAA0BA,EAAM,wBACrC,KAAK,gBAAkBA,EAAM,sBAC7B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,wBAA0BA,EAAM,wBACrC,KAAK,YAAcA,EAAM,WAC3B,CACA,eAAgB,CACd,IAAMyQ,EAAY,KAAK,IAAI,IAAI,WAAW,EACtC,KAAK,sBAAsBA,CAAS,IACtC,KAAK,UAAYA,GAEnB,KAAK,4BAA4B,CAAC,mBAAoB,WAAY,sBAAuB,sBAAsB,EAAGnS,GAAS,KAAK,WAAWoS,GAAkBpS,EAAM,MAAM,CAAC,CAAC,EAC3K,KAAK,2BAA2B,qBAAsBA,GAAS,KAAK,4BAA4BoS,GAAkBpS,EAAM,MAAM,CAAC,CAAC,EAChI,KAAK,4BAA4B,CAAC,gBAAiB,cAAe,0BAA0B,EAAGA,GAAS,KAAK,mBAAmBoS,GAAkBpS,EAAM,MAAM,CAAC,CAAC,EAChK,KAAK,2BAA2B,YAAaA,GAAS,KAAK,aAAa,KAAK,IAAI,IAAI,WAAW,EAAGoS,GAAkBpS,EAAM,MAAM,CAAC,CAAC,EACnI,KAAK,yBAAyB,CAC5B,kBAAmB,IAAM,KAAK,oBAAoB,CACpD,CAAC,CACH,CAEA,sBAAsBqS,EAAuB3M,EAAQ,CACnD,IAAM4M,EAAqBD,EAAwB,KAAK,wBAAwB,qCAAqC3M,CAAM,EAAI,OAC/H,KAAK,WAAW,OAAO,EACvB,IAAM6M,EAAU,KAAK,YAAc,KAAK,WAAW,KAC7CrE,EAAU,KAAK,YAAc,KAAK,WAAW,KAC7CC,EAAU,KAAK,cAAc,iBAAiB,KAAK,QAAS,GAAMD,EAASxI,CAAM,EACvFuI,GAAkB,KAAK,QAAS,KAAK,YAAY,KAAME,EAAQ,UAAU,EACzE,IAAMqB,EAAOrB,EAAQ,WACfqE,EAAYrE,EAAQ,SACpBsE,EAAO9E,GAAmB6B,CAAI,EAC9BkD,EAAM,CAAC,EACbD,EAAK,QAAQhM,GAAOiM,EAAIjM,EAAI,MAAM,CAAC,EAAIA,CAAG,EAC1C,KAAK,WAAa,CAChB,KAAA+I,EACA,UAAAgD,EACA,KAAAC,EACA,IAAAC,CACF,EACA,KAAK,gBAAgB,YAAYhN,EAAQ6M,CAAO,EAChD,KAAK,MAAQ,GACb,KAAK,YAAY,EACQF,GAAyB,CAAC,KAAK,oBAAsB,CAAC,KAAK,IAAI,IAAI,qBAAqB,GAE/G,KAAK,wBAAwB,EAE/B,KAAK,mBAAmB,QAAQ3M,CAAM,EACtC,KAAK,sBAAsB,qBAAqB,EAChD,KAAK,gBAAgB,kBAAkBA,CAAM,EACzC4M,IACF,KAAK,wBAA0B,GAC/BA,EAAmB,EACnB,KAAK,wBAA0B,IAEjC,KAAK,gBAAgB,iBAAiB5M,CAAM,EACxCA,IAAW,oBACb,KAAK,kBAAkB,sBAAsB,CAEjD,CAMA,aAAc,CACZ,GAAI,CAAC,KAAK,WACR,OAEF,IAAMiN,EAAc,KAAK,MAAM,KAC/B,KAAK,aAAa,EAClB,KAAK,WAAW,EAChB,KAAK,eAAe,EACpB,KAAK,YAAY,EACjB,KAAK,gBAAgB,EACrB,KAAK,mBAAmB,EACxB,KAAK,yBAAyB,QAAQ,EACtC,KAAK,oBAAoB,uBAAuB,EAChD,KAAK,iBAAiB,EACtB,KAAK,oBAAoB,EACzB,KAAK,mBAAmB,MAAM,EAC9B,KAAK,sBAAsB,MAAM,EACJ,CAACC,GAAUD,EAAa,KAAK,KAAK,IAAI,GAEjE,KAAK,gBAAgB,YAAY,CAErC,CACA,YAAa,CACX,IAAME,EAAkB,KAAK,uBAAuB,mBAAmB,EAEvE,GADA,KAAK,mBAAqBA,GAAmB,KACzCA,EAAiB,CACnB,GAAM,CACJ,IAAAH,EACA,KAAAD,EACA,KAAAjD,EACA,UAAAgD,CACF,EAAIK,EACJ,KAAK,KAAO,CACV,KAAMJ,EAAK,MAAM,EACjB,IAAKK,EAAA,GACAJ,GAEL,KAAMlD,EAAK,MAAM,EACjB,UAAAgD,CACF,EACuBK,EAAgB,KAAK,KAAKpM,GAAO,KAAK,MAAM,IAAIA,EAAI,SAAS,CAAC,IAAM,MAAM,IAE/F,KAAK,eAAiB,KAE1B,KAAO,CACL,GAAM,CACJ,IAAAiM,EACA,KAAAD,EACA,KAAAjD,EACA,UAAAgD,CACF,EAAI,KAAK,WACT,KAAK,KAAO,CACV,KAAMC,EAAK,MAAM,EACjB,IAAKK,EAAA,GACAJ,GAEL,KAAMlD,EAAK,MAAM,EACjB,UAAAgD,CACF,CACF,CACF,CACA,eAAgB,CACd,IAAMO,EAA6B,KAAK,YAAY,GAAK,CAAC,KAAK,qBAAqB,EAC9EC,EAAe,KAAK,gBAAgB,gBAAgB,EAU1D,OATY,KAAK,KAAK,KAAK,OAAOvM,GAAO,CACvC,IAAMwM,EAAiB1E,GAAqB9H,CAAG,EAC/C,GAAIsM,EAA4B,CAC9B,IAAMG,EAAaF,GAAgBxR,GAAUwR,EAAcvM,CAAG,EAC9D,OAAOwM,GAAkBC,CAC3B,KACE,QAAOD,GAAkBxM,EAAI,UAAU,CAE3C,CAAC,CAEH,CACA,aAAc,CACR,KAAK,UAAY,OAGrB,KAAK,KAAK,KAAO,KAAK,SAAS,KAAK,OAAO,KAAK,KAAK,IAAI,EACzD,KAAK,KAAK,KAAO,KAAK,SAAS,KAAK,OAAO,KAAK,KAAK,IAAI,EACzD0M,GAAc,KAAK,IAAI,EACzB,CACA,gBAAiB,CACf,IAAMC,EAAoB,KAAK,IAAI,oBAAoB,KAAK,SAAS,EAC/DC,EAAqB,KAAK,UAAY,KAAK,IAAI,IAAI,yBAAyB,EAAI,KAAK,kBAAkB,EACvGC,EAAe,KAAK,gBAAgB,mBAAmB,EAEvDC,EAAa,EADID,EAAa,OAAS,GAAK,KAAK,IAAI,IAAI,UAAU,IACnCD,GAAsBD,EACtDI,EAAkB,IAAM,CACxB,KAAK,WACPvF,GAAkB,KAAK,QAAS,KAAK,SAAS,IAAI,EAClD,KAAK,SAAW,KAEpB,EACA,GAAIsF,GAAc,CAAC,KAAK,eAAgB,CACtCC,EAAgB,EAChB,MACF,CACA,IAAMf,EAAO,KAAK,eAAe,eAAea,CAAY,GAAK,CAAC,EAC5DG,EAAeC,GAAejB,EAAM,KAAK,UAAU,MAAQ,IAAI,EAC/DkB,EAAe,KAAK,KAAK,UAEzBC,GADe,KAAK,SAAW,KAAK,SAAS,UAAY,KAC1BD,EACrC,GAAIF,GAAgBG,EAClB,OAEFJ,EAAgB,EAChB,GAAM,CAAChE,EAAMgD,CAAS,EAAI,KAAK,cAAc,oBAAoBC,EAAM,KAAK,MAAM,IAAI,EACtF,KAAK,SAAW,CACd,KAAAA,EACA,KAAAjD,EACA,UAAAgD,EACA,IAAK,CAAC,CACR,EACA,IAAMqB,EAAyBC,GAAQ,CACrC,GAAI,CAACA,EACH,OAAO,KAET,IAAMC,EAAeD,EAAK,OAAOrN,GAAO,CAAC8H,GAAqB9H,CAAG,CAAC,EAClE,MAAO,CAAC,GAAGgM,EAAM,GAAGsB,CAAY,CAClC,EACA,KAAK,UAAYF,EAAuB,KAAK,SAAS,EACtD,KAAK,eAAiBA,EAAuB,KAAK,cAAc,CAClE,CAEA,WAAWnO,EAAQ,CACZ,KAAK,QAAQ,IAGlB,KAAK,YAAY,EACjB,KAAK,mBAAmB,QAAQA,CAAM,EACxC,CACA,eAAeV,EAAMqD,EAAU,GAAO3C,EAAQ,CAC5C,KAAK,wBAAwB,iBAAiB,CAC5C,MAAOV,EAAK,IAAIH,IAAQ,CACtB,MAAO,OAAOA,GAAQ,SAAWA,EAAMA,EAAI,SAAS,EACpD,KAAM,CAACwD,CACT,EAAE,CACJ,EAAG3C,CAAM,CACX,CACA,cAAcV,EAAM2D,EAAQjD,EAAQ,CAIlC,GAHI,CAAC,KAAK,MAGNtC,EAAgB4B,CAAI,EACtB,OAEF,GAAI,KAAK,IAAI,YAAY,OAAO,EAAG,CACjCoG,EAAU,0EAA0E,EACpF,MACF,CACA,KAAK,uBAAuB,MAAM,EAClC,IAAI4I,EACArL,IAAW,IAAQA,IAAW,OAChCqL,EAAe,OACNrL,IAAW,QACpBqL,EAAe,QAEfA,EAAe,KAEjB,IAAMC,EAAc,CAAC,EACrBjP,EAAK,QAAQH,GAAO,CAClB,GAAI,CAACA,EACH,OAEF,IAAMoM,EAAS,KAAK,OAAOpM,CAAG,EACzBoM,GAGDA,EAAO,UAAU,IAAM+C,IACzB/C,EAAO,UAAU+C,CAAY,EAC7BC,EAAY,KAAKhD,CAAM,EAE3B,CAAC,EACGgD,EAAY,SACd,KAAK,mBAAmB,QAAQvO,CAAM,EACtC,KAAK,gBAAgB,aAAauO,EAAavO,CAAM,GAEvD,KAAK,uBAAuB,OAAO,CACrC,CAEA,qBAAqBb,EAAKiE,EAAUpD,EAAQ,CAC1C,IAAIwO,EACAzK,EAAsB5E,CAAG,EAC3BqP,EAAcrP,EAAI,MAAM,EAExBqP,EAAcrP,GAAO,GAEvB,KAAK,wBAAwB,oBAAoB,CAAC,CAChD,QAASqP,EACT,KAAMpL,CACR,CAAC,EAAGpD,CAAM,CACZ,CACA,oBAAoBb,EAAK,CACvB,IAAI7D,EAAM,KACV,OAAAqN,GAA6B,KAAM,KAAK,MAAM,KAAM8F,GAAQ,CACtD1K,EAAsB0K,CAAI,GACxBA,EAAK,MAAM,IAAMtP,IACnB7D,EAAMmT,EAGZ,CAAC,EACMnT,CACT,CACA,iBAAiBiQ,EAAQ,CACvB,IAAMmD,EAAwB,KAAK,IAAI,IAAI,uBAAuB,EAClE,GAAI,CAACnD,EAAO,iBAAiB,GAAKmD,IAA0B,EAC1D,MAAO,GAET,GAAIA,IAA0B,GAC5B,MAAO,GAGT,IAAMC,EADe,KAAK,gBAAgB,mBAAmB,EAC/B,UAAUC,GAAYA,EAAS,SAAS,IAAMrD,EAAO,SAAS,CAAC,EAC7F,OAAOmD,EAAwBC,CACjC,CACA,mBAAoB,CAGlB,OAFyB,KAAK,IAAI,IAAI,kBAAkB,IACT,SAEtC,GAEmB,KAAK,IAAI,IAAI,qBAAqB,IAC/B,QACjC,CACA,qBAAsB,CACpB,KAAK,iBAAmB,KAAK,KAAK,KAAK,KAAK5N,GAAOA,EAAI,aAAa,CAAC,EACjE,KAAK,mBACP,KAAK,4BAA8B,GACT,KAAK,IAAI,eAAe,YAAY,GAAK,KAAK,IAAI,eAAe,YAAY,GAErG2E,EAAU,oFAAoF,EAGpG,CACA,iBAAkB,CAChB,IAAMmJ,EAAY,KAAK,mBAAqB,KAAK,eAAiB,KAAK,UACvE,GAAI,CAACA,EACH,OAEF,IAAMC,EAAkB,IAAI,IAAID,EAAU,IAAI,CAAC9N,EAAKgO,IAAU,CAAChO,EAAKgO,CAAK,CAAC,CAAC,EAE3E,GADoB,CAAC,KAAK,KAAK,KAAK,KAAKhO,GAAO+N,EAAgB,IAAI/N,CAAG,CAAC,EAEtE,OAEF,IAAMiO,EAAU,IAAI,IAAI,KAAK,KAAK,KAAK,IAAIjO,GAAO,CAACA,EAAK,EAAI,CAAC,CAAC,EACxDkO,EAAoBJ,EAAU,OAAO9N,GAAOiO,EAAQ,IAAIjO,CAAG,CAAC,EAC5DmO,EAAuB,IAAI,IAAID,EAAkB,IAAIlO,GAAO,CAACA,EAAK,EAAI,CAAC,CAAC,EACxEoO,EAAuB,KAAK,KAAK,KAAK,OAAOpO,GAAO,CAACmO,EAAqB,IAAInO,CAAG,CAAC,EAClFzF,EAAM2T,EAAkB,MAAM,EACpCE,EAAqB,QAAQC,GAAU,CACrC,IAAIxN,EAASwN,EAAO,kBAAkB,EACtC,GAAI,CAACxN,EAAQ,CACXtG,EAAI,KAAK8T,CAAM,EACf,MACF,CACA,IAAMC,EAAW,CAAC,EAClB,KAAO,CAACA,EAAS,QAAUzN,GACRA,EAAO,eAAe,EAC9B,QAAQ0N,GAAW,CAC1B,IAAMC,EAAmBjU,EAAI,QAAQgU,CAAO,GAAK,EAC3CE,EAAmBH,EAAS,QAAQC,CAAO,EAAI,EACjDC,GAAoBC,GACtBH,EAAS,KAAKC,CAAO,CAEzB,CAAC,EACD1N,EAASA,EAAO,kBAAkB,EAEpC,GAAI,CAACyN,EAAS,OAAQ,CACpB/T,EAAI,KAAK8T,CAAM,EACf,MACF,CACA,IAAMK,EAAUJ,EAAS,IAAItO,GAAOzF,EAAI,QAAQyF,CAAG,CAAC,EAC9C2O,EAAY,KAAK,IAAI,GAAGD,CAAO,EACrCE,GAAiBrU,EAAK8T,EAAQM,EAAY,CAAC,CAC7C,CAAC,EACD,KAAK,KAAK,KAAOpU,CACnB,CACA,yBAA0B,CACxB,GAAI,CAAC,KAAK,YAAc,CAAC,KAAK,KAC5B,OAEF,IAAMsU,EAAc,KAAK,WAAW,KAAK,OAAO7O,GAAO,KAAK,KAAK,KAAK,QAAQA,CAAG,GAAK,CAAC,EACjF8O,EAAY,KAAK,KAAK,KAAK,OAAO9O,GAAO6O,EAAY,QAAQ7O,CAAG,EAAI,CAAC,EAC3E,KAAK,KAAK,KAAO,CAAC,GAAG8O,EAAW,GAAGD,CAAW,EAC9C,KAAK,KAAK,KAAO,KAAK,kBAAkB,mBAAmB,KAAK,KAAK,IAAI,CAC3E,CACA,iBAAiBE,EAAQ,CACvB,GAAI,KAAK,MAAQ,KACf,OAEF,IAAIC,EAAW,CAAC,EACVC,EAAkB,CAAC,EACzBF,EAAO,QAAQ1O,GAAS,CACtB,GAAI4O,EAAgB5O,CAAK,EACvB,OAEF,IAAML,EAAM,KAAK,KAAK,IAAIK,CAAK,EAC3BL,IACFgP,EAAS,KAAKhP,CAAG,EACjBiP,EAAgB5O,CAAK,EAAI,GAE7B,CAAC,EACD,IAAI6O,EAAuB,EAe3B,GAdA,KAAK,KAAK,KAAK,QAAQlP,GAAO,CAC5B,IAAMK,EAAQL,EAAI,SAAS,EAE3B,GADyBiP,EAAgB5O,CAAK,GAAK,KAEjD,OAEqBA,EAAM,WAAW4G,EAAoB,EAE1D2H,GAAiBI,EAAUhP,EAAKkP,GAAsB,EAEtDF,EAAS,KAAKhP,CAAG,CAErB,CAAC,EACDgP,EAAW,KAAK,kBAAkB,mBAAmBA,CAAQ,EACzD,CAAC,KAAK,kBAAkB,0BAA0BA,CAAQ,EAAG,CAC/DrK,EAAU,sHAAsH,EAChI,MACF,CACA,KAAK,KAAK,KAAOqK,CACnB,CAGA,iBAAiB3B,EAAM,CACjB,CAACA,GAAQA,EAAK,QAAU,GAGFA,EAAK,OAAO8B,GAAK,KAAK,KAAK,KAAK,QAAQA,CAAC,EAAI,CAAC,EAAE,OAAS,GAInF9B,EAAK,KAAK,CAACxP,EAAGC,IAAM,CAClB,IAAMsR,EAAS,KAAK,KAAK,KAAK,QAAQvR,CAAC,EACjCwR,EAAS,KAAK,KAAK,KAAK,QAAQvR,CAAC,EACvC,OAAOsR,EAASC,CAClB,CAAC,CACH,CACA,mBAAmB7E,EAAQvL,EAAQ,CACjC,IAAMgM,EAAaT,EAAO,sBAAsB,EAChD,GAAI,CAACS,EACH,MAAO,GAET,IAAMN,EAAY,KAAK,cAAc,yBAAyBM,EAAYT,EAAO,SAAS,CAAC,EAC3F,OAAAA,EAAO,UAAUG,EAAWM,EAAYhM,CAAM,EACvC,EACT,CACA,uBAAwB,CACtB,KAAK,4BAA8B,EACrC,CACA,+BAAgC,CAC9B,OAAO,KAAK,2BACd,CACA,yBAA0B,CACxB,KAAK,4BAA8B,GACnC,KAAK,qBAAqB,QAAQqQ,GAAmBA,EAAgB,CAAC,EACtE,KAAK,qBAAuB,CAAC,CAC/B,CACA,oBAAoBtT,EAAM,CACxB,KAAK,qBAAqB,KAAKA,CAAI,CACrC,CACA,WAAWuT,EAAcC,EAASvQ,EAAQ,CACxCwQ,GAAa,KAAK,MAAM,KAAMF,EAAcC,CAAO,EACnD,KAAK,mBAAmB,QAAQvQ,CAAM,CACxC,CACA,oBAAqB,CACnB,KAAK,KAAK,KAAO,KAAK,kBAAkB,mBAAmB,KAAK,KAAK,IAAI,CAC3E,CACA,cAAe,CACT,KAAK,mBACP,KAAK,eAAiB,KAAK,MAAM,KAEjC,KAAK,UAAY,KAAK,MAAM,IAEhC,CACA,eAAgB,CACd,GAAI,CAAC,KAAK,WACR,OAEF,IAAMoO,EAAO,KAAK,WAAW,KAAK,MAAM,EACpC,KAAK,mBACPA,EAAK,KAAK,CAACxP,EAAGC,IAAM,KAAK,UAAU,QAAQD,CAAC,EAAI,KAAK,UAAU,QAAQC,CAAC,CAAC,EAChE,KAAK,WACduP,EAAK,KAAK,CAACxP,EAAGC,IAAM,KAAK,KAAK,KAAK,QAAQD,CAAC,EAAI,KAAK,KAAK,KAAK,QAAQC,CAAC,CAAC,EAE3E,IAAM4R,EAAkB,KAAK,gBAAgB,mBAAmB,EAC1DC,EAAe,KAAK,gBAAgB,gBAAgB,EAC1D,OAAO,KAAK,iBAAiB,gBAAgBtC,EAAMqC,EAAiBC,CAAY,CAClF,CACA,sBAAuB,CACrB,OAAO,KAAK,kBACd,CAEA,2BAA4B,CAC1B,OAAO,KAAK,uBACd,CACA,iBAAkB,CAChB,OAAO,KAAK,aACd,CAEA,4BAA6B,CAC3B,OAAO,KAAK,YAAY,UAAY,CACtC,CACA,kBAAmB,CACjB,KAAK,cAAgB,KAAK,KAAK,KAAK,KAAK3P,GAAOA,EAAI,UAAU,EAAE,SAAW,IAAI,CACjF,CACA,uBAAwB,CACtB,OAAO,KAAK,gBACd,CACA,4BAA6B,CAC3B,OAAO,KAAK,2BACd,CAEA,mBAAoB,CAClB,OAAO,KAAK,KAAO,KAAK,KAAK,UAAY,EAAI,EAC/C,CACA,SAAU,CACR,OAAO,KAAK,KACd,CACA,aAAc,CACZ,OAAO,KAAK,SACd,CACA,aAAa0L,EAAWzM,EAAQ,CAC1ByM,IAAc,KAAK,WAAa,CAAC,KAAK,sBAAsB,KAAK,SAAS,IAG9E,KAAK,UAAYA,EACZ,KAAK,QAGV,KAAK,YAAY,EACjB,KAAK,mBAAmB,QAAQzM,CAAM,EACtC,KAAK,gBAAgB,iBAAiB,GACxC,CACA,sBAAsB8D,EAAO,CAC3B,OAAIA,GAAS,KAAK,IAAI,IAAI,UAAU,GAClC4B,EAAU,yCAAyC,EAC5C,IAEF,EACT,CAEA,eAAgB,CACd,IAAMgL,EAAe,KAAK,gBAAgB,gBAAgB,EAC1D,OAAO,KAAK,WAAa,CAAChT,EAAgBgT,CAAY,CACxD,CAEA,mBAAmB1Q,EAAQ,CACpB,KAAK,OAGN,KAAK,UACP,KAAK,eAAe,eAAe,KAAK,SAAS,KAAMA,CAAM,EAE/D,KAAK,sBAAsB,GAAMA,CAAM,EACzC,CACA,cAAc2Q,EAAY3Q,EAAQ,CAChC,IAAM2M,EAAwB,CAAC,CAAC,KAAK,QACrC,KAAK,QAAUgE,EACf,KAAK,sBAAsBhE,EAAuB3M,CAAM,CAC1D,CACA,SAAU,CACRuI,GAAkB,KAAK,QAAS,KAAK,YAAY,IAAI,EACrDA,GAAkB,KAAK,QAAS,KAAK,UAAU,IAAI,EACnD,MAAM,QAAQ,CAChB,CACA,YAAa,CACX,OAAO,KAAK,KAAK,IACnB,CAEA,kBAAmB,CACjB,OAAO,KAAK,WAAW,IACzB,CAGA,eAAgB,CACd,OAAO,KAAK,YAAY,KAAO,KAAK,WAAW,KAAO,IACxD,CAEA,SAAU,CACR,OAAO,KAAK,MAAM,MAAQ,CAAC,CAC7B,CAEA,YAAa,CAEX,IAAMqI,EADkB,KAAK,uBAAuB,mBAAmB,GAC1B,KAC7C,MAAO,CAAC,EAAE,OAAW,KAAK,YAAY,MAAQ,CAAC,EAAG,KAAK,UAAU,MAAQ,CAAC,EAAGA,GAAuB,CAAC,CAAE,CACzG,CACA,eAAetR,EAAM,CACnB,OAAKA,EAGOA,EAAK,IAAIH,GAAO,KAAK,OAAOA,CAAG,CAAC,EAAE,OAAO4B,GAAOA,GAAO,IAAI,EAF9D,CAAC,CAIZ,CACA,aAAa5B,EAAK,CAChB,OAAK,KAAK,YAAY,KAGf,KAAK,qBAAqBA,EAAK,KAAK,UAAU,EAF5C,IAGX,CACA,OAAOA,EAAK,CACV,OAAIA,GAAO,KACF,KAEF,KAAK,qBAAqBA,EAAK,KAAK,IAAI,CACjD,CACA,qBAAqBA,EAAKiP,EAAM,CAC9B,GAAIA,GAAQ,KACV,OAAO,KAET,GAAM,CACJ,IAAApB,EACA,KAAAD,CACF,EAAIqB,EACJ,GAAI,OAAOjP,GAAO,UAAY6N,EAAI7N,CAAG,EACnC,OAAO6N,EAAI7N,CAAG,EAEhB,QAASlD,EAAI,EAAGA,EAAI8Q,EAAK,OAAQ9Q,IAC/B,GAAI4U,GAAa9D,EAAK9Q,CAAC,EAAGkD,CAAG,EAC3B,OAAO4N,EAAK9Q,CAAC,EAGjB,OAAO,KAAK,WAAWkD,CAAG,CAC5B,CACA,WAAWA,EAAK,CACd,OAAI,KAAK,UAAY,KAAa,KAC3B,KAAK,SAAS,KAAK,KAAKyP,GAAYiC,GAAajC,EAAUzP,CAAG,CAAC,GAAK,IAC7E,CACA,aAAc,CACZ,OAAO,KAAK,UAAU,MAAQ,IAChC,CACA,mBAAmB4B,EAAKwC,EAAQ,CACdxC,EAAI,oBAAoBwC,CAAM,GAE5C,KAAK,gBAAgB,aAAaxC,CAAG,CAEzC,CACA,+BAAgC,CAC9B,OAAI,KAAK,YAAY,EACZ,KAAK,0BAA0B,EAEjC,KAAK,qBAAqB,CACnC,CACA,0BAA2B,CACzB,IAAM+P,EAAgB,KAAK,YAAY,EAAI,KAAK,qBAAqB,EAAI,KAAK,gBAAgB,EAExFC,EADmB,KAAK,mBAAmB,WAAW,EAClB,OAAOhQ,GAAOA,EAAI,mBAAmB,CAAC,EAAE,IAAIA,GAAOA,EAAI,oBAAoB,GAAK,CAAC,EAC3H,OAAO,KAAK,IAAI+P,EAAe,GAAGC,CAAgB,CACpD,CACA,iBAAkB,CAChB,OAAO,KAAK,IAAI,IAAI,cAAc,GAAK,KAAK,YAAY,uBAAuB,CACjF,CACA,0BAA2B,CACzB,OAAO,KAAK,IAAI,IAAI,uBAAuB,GAAK,KAAK,gBAAgB,CACvE,CACA,sBAAuB,CACrB,OAAO,KAAK,IAAI,IAAI,mBAAmB,GAAK,KAAK,gBAAgB,CACnE,CACA,sBAAuB,CACrB,OAAO,KAAK,IAAI,IAAI,mBAAmB,GAAK,KAAK,gBAAgB,CACnE,CACA,2BAA4B,CAC1B,OAAO,KAAK,IAAI,IAAI,wBAAwB,GAAK,KAAK,qBAAqB,CAC7E,CACA,qBAAsB,CACpB,IAAMC,EAAmB,KAAK,IAAI,IAAI,kBAAkB,EACxD,GAAIA,GAAkB,OAAS,kBAC7B,OAEF,GAAM,CACJ,OAAQC,EACR,WAAAC,CACF,EAAIF,EACJ,WAAW,IAAM,CACXC,EACF,KAAK,sBAAsB,aAAa,CACtC,QAASA,EACT,WAAAC,EACA,OAAQ,iBACV,CAAC,EAED,KAAK,sBAAsB,mBAAmB,kBAAmBA,CAAU,CAE/E,CAAC,CACH,CACA,4BAA4BlR,EAAQ,CAC9B,KAAK,UACP,KAAK,eAAe,eAAe,KAAK,SAAS,KAAMA,CAAM,CAEjE,CACF,EACA,SAAS0M,GAAkB1M,EAAQ,CACjC,OAAOA,IAAW,qBAAuB,qBAAuBA,CAClE,CACA,SAASyN,GAAcW,EAAM,CAC3BA,EAAK,IAAM,CAAC,EACZA,EAAK,KAAK,QAAQrN,GAAOqN,EAAK,IAAIrN,EAAI,MAAM,CAAC,EAAIA,CAAG,CACtD,CACA,SAAS8P,GAAatF,EAAQpM,EAAK,CACjC,IAAMgS,EAAgB5F,IAAWpM,EAC3BiS,EAAgB7F,EAAO,UAAU,IAAMpM,EACvCkS,EAAY9F,EAAO,SAAS,GAAKpM,EACvC,OAAOgS,GAAiBC,GAAiBC,CAC3C,CACA,SAASrD,GAAesD,EAAOC,EAAO,CACpC,OAAOrE,GAAUoE,EAAOC,EAAO,CAAC3S,EAAGC,IAAMD,EAAE,SAAS,IAAMC,EAAE,SAAS,CAAC,CACxE,CAGA,IAAI2S,GAAwB,cAAczV,CAAS,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,wBAChB,KAAK,aAAe,CACtB,CACA,UAAUC,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,oBAAsBA,EAAM,oBACjC,KAAK,gBAAkBA,EAAM,sBAC7B,KAAK,aAAeA,EAAM,aAC1B,KAAK,oBAAsBA,EAAM,mBACnC,CACA,aAAasG,EAAQ,CACnB,GAAI,KAAK,YAAY,8BAA8B,EAAG,CACpD,KAAK,YAAY,oBAAoB,IAAM,KAAK,aAAaA,CAAM,CAAC,EACpE,MACF,CACA,GAAM,CACJ,QAAAmP,EACA,WAAAP,EACA,iBAAAQ,EACA,YAAAC,EACA,OAAA3R,EAAS,KACX,EAAIsC,EAEJ,GADA,KAAK,sBAAsB,eAAe,EACtC,KAAK,aAAe,GAAK,KAAK,qBAAuB,CAAC,KAAK,oBAAoB,uBAAuB,EAAG,CAC3G,KAAK,eACL,WAAW,IAAM,KAAK,aAAaA,CAAM,CAAC,EAC1C,MACF,CACA,KAAK,aAAe,EACpB,IAAMsP,EAAmB,CAAC,EACtBC,EAAwB,GACtBC,EAAmBZ,GAAkC,KAAK,IAAI,IAAI,sBAAsB,EACxFa,EAAyBL,GAA8CI,EAC7E,KAAOD,IAA0B,GAAG,CAClCA,EAAwB,EACxB,IAAMG,EAAiB,CAAC,EACxBP,EAAQ,QAAQtS,GAAO,CACrB,GAAI,CAACA,EACH,OAEF,IAAMoM,EAAS,KAAK,YAAY,OAAOpM,CAAG,EAI1C,GAHI,CAACoM,GAGDqG,EAAiB,QAAQrG,CAAM,GAAK,EACtC,OAEF,IAAM0G,EAAiB,KAAK,oBAAoB,2BAA2B1G,EAAQuG,CAAgB,EACnG,GAAIG,EAAiB,EAAG,CACtB,IAAMC,EAAW,KAAK,qBAAqB3G,EAAQ0G,CAAc,EACjE1G,EAAO,eAAe2G,EAAUlS,CAAM,EACtC4R,EAAiB,KAAKrG,CAAM,EAC5BsG,GACF,CACAG,EAAe,KAAKzG,CAAM,CAC5B,CAAC,EACIyG,EAAe,QAGpB,KAAK,mBAAmB,QAAQhS,CAAM,CACxC,CACK+R,GACH,KAAK,8BAA8BN,EAASzR,EAAQ2R,CAAW,EAEjE,KAAK,gBAAgB,cAAcC,EAAkB,GAAM,iBAAiB,CAC9E,CACA,eAAezS,EAAKa,EAAQkR,EAAY,CAClC/R,GACF,KAAK,aAAa,CAChB,QAAS,CAACA,CAAG,EACb,WAAA+R,EACA,iBAAkB,GAClB,OAAAlR,CACF,CAAC,CAEL,CACA,8BAA8BV,EAAMU,EAAQ2R,EAAa,CACvD,IAAMQ,EAA8B,IAAI,IACxB,KAAK,YAAY,eAAe7S,CAAI,EAC5C,QAAQyB,GAAO,CACrB,IAAIa,EAASb,EAAI,UAAU,EAC3B,KAAOa,GAAUA,GAAU+P,GACpB/P,EAAO,UAAU,GACpBuQ,EAAa,IAAIvQ,CAAM,EAEzBA,EAASA,EAAO,UAAU,CAE9B,CAAC,EACD,IAAIwQ,EACEC,EAAiB,CAAC,EACxB,QAAWC,KAAeH,EAAc,CACtC,QAAWI,KAAuB,KAAK,aAAa,2BAA2B,EAE7E,GADAH,EAAkBG,EAAoB,uBAAuBD,CAAW,EACpEF,EACF,MAGAA,GACFA,EAAgB,uBAAuBpS,CAAM,CAEjD,CACA,OAAOqS,CACT,CACA,mBAAmBrS,EAAQkR,EAAY,CACrC,GAAI,KAAK,YAAY,8BAA8B,EAAG,CACpD,KAAK,YAAY,oBAAoB,IAAM,KAAK,mBAAmBlR,EAAQkR,CAAU,CAAC,EACtF,MACF,CACA,IAAMsB,EAAsB,KAAK,mBAAmB,WAAW,EAC/D,KAAK,aAAa,CAChB,QAASA,EACT,WAAAtB,EACA,OAAAlR,CACF,CAAC,CACH,CAEA,qBAAqBuL,EAAQ2G,EAAU,CACrC,IAAMO,EAAWlH,EAAO,YAAY,EAChC2G,EAAWO,IACbP,EAAWO,GAEb,IAAMC,EAAWnH,EAAO,YAAY,EACpC,OAAIA,EAAO,iBAAiB2G,CAAQ,IAClCA,EAAWQ,GAENR,CACT,CACF,EAGIS,GAAkB,cAAc5W,CAAS,CAC3C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,kBAChB,KAAK,aAAe,CAAC,EACrB,KAAK,UAAY,CAAC,EAClB,KAAK,UAAY,CAAC,CACpB,CACA,UAAUC,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,gBAAkBA,EAAM,sBAC7B,KAAK,eAAiBA,EAAM,eAC5B,KAAK,mBAAqBA,EAAM,kBAClC,CACA,mCAAoC,CAClC,MAAO,CACL,YAAauP,GAAU,KAAK,aAAa,KAAKA,CAAM,EACpD,eAAgBA,GAAUqH,EAAiB,KAAK,aAAcrH,CAAM,EACpE,YAAaA,GAAU,KAAK,UAAU,KAAKA,CAAM,EACjD,eAAgBA,GAAUqH,EAAiB,KAAK,UAAWrH,CAAM,EACjE,YAAaA,GAAU,KAAK,UAAU,KAAKA,CAAM,EACjD,eAAgBA,GAAUqH,EAAiB,KAAK,UAAWrH,CAAM,CACnE,CACF,CACA,+BAA+BqD,EAAU,CACvC,IAAMiE,EAAiBjE,EAAS,UAAU,EAAE,aAC5C,GAAI,CAACiE,EACH,OAAO,KAET,GAAIA,IAAmB,GACrB,OAAO,KAAK,aAAa,MAAM,CAAC,EAElC,IAAMtH,EAAS,KAAK,YAAY,aAAasH,CAAc,EAC3D,OAAOtH,EAAS,CAACA,CAAM,EAAI,IAC7B,CACA,oBAAoBuH,EAAW,CAC7B,KAAK,aAAa,KAAKA,CAAS,CAClC,CACA,iBAAiBA,EAAW,CAC1B,KAAK,UAAU,KAAKA,CAAS,CAC/B,CAEA,iBAAkB,CAChB,OAAO,KAAK,UAAY,KAAK,UAAY,CAAC,CAC5C,CAEA,iBAAkB,CAChB,OAAO,KAAK,UAAY,KAAK,UAAY,CAAC,CAC5C,CAEA,oBAAqB,CACnB,OAAO,KAAK,aAAe,KAAK,aAAe,CAAC,CAClD,CACA,iBAAkB,CAChB,OAAOpV,EAAgB,KAAK,YAAY,CAC1C,CACA,iBAAiByB,EAAKyD,EAAS5C,EAAQ,CACrC,GAAI,CAACb,EACH,OAEF,IAAMoM,EAAS,KAAK,YAAY,aAAapM,CAAG,EAC3CoM,IAGLA,EAAO,WAAW3I,CAAO,EACzB,KAAK,gBAAgB,cAAc,qBAAsB,CAAC2I,CAAM,EAAGvL,CAAM,EAC3E,CACA,mBAAmByR,EAASzR,EAAQ,CAClC,KAAK,WAAWyR,EAAS,KAAK,aAAc,wBAAyB,GAAM,GAAM,CAACsB,EAAOxH,IAAW,KAAK,kBAAkBwH,EAAOxH,EAAQvL,CAAM,EAAGA,CAAM,CAC3J,CACA,kBAAkB8C,EAAQyI,EAAQvL,EAAQ,CACpC8C,IAAWyI,EAAO,iBAAiB,IAGvCA,EAAO,kBAAkBzI,EAAQ9C,CAAM,EACnC8C,GAAU,CAAC,KAAK,IAAI,IAAI,8BAA8B,GACxD,KAAK,YAAY,eAAe,CAACyI,CAAM,EAAG,GAAOvL,CAAM,EAErD,CAAC8C,GAAU,CAAC,KAAK,IAAI,IAAI,uCAAuC,GAClE,KAAK,YAAY,eAAe,CAACyI,CAAM,EAAG,GAAMvL,CAAM,EAE1D,CACA,mBAAmBV,EAAMU,EAAQ,CAC/B,KAAK,cAAcV,EAAM,KAAK,aAAc,GAAM,GAAMiM,GAAU,KAAK,kBAAkB,GAAMA,EAAQvL,CAAM,EAAG,wBAAyBA,CAAM,CACjJ,CACA,sBAAsBV,EAAMU,EAAQ,CAClC,KAAK,cAAcV,EAAM,KAAK,aAAc,GAAO,GAAMiM,GAAU,KAAK,kBAAkB,GAAOA,EAAQvL,CAAM,EAAG,wBAAyBA,CAAM,CACnJ,CACA,gBAAgBV,EAAMU,EAAQ,CAC5B,KAAK,cAAcV,EAAM,KAAK,UAAW,GAAM,GAAOiM,GAAUA,EAAO,eAAe,GAAMvL,CAAM,EAAG,qBAAsBA,CAAM,CACnI,CACA,gBAAgByR,EAASzR,EAAQ,CAC/B,KAAK,WAAWyR,EAAS,KAAK,UAAW,qBAAsB,GAAM,GAAO,CAACsB,EAAOxH,IAAW,CAC7FA,EAAO,eAAewH,EAAO/S,CAAM,CACrC,EAAGA,CAAM,CACX,CACA,mBAAmBV,EAAMU,EAAQ,CAC/B,KAAK,cAAcV,EAAM,KAAK,UAAW,GAAO,GAAOiM,GAAUA,EAAO,eAAe,GAAOvL,CAAM,EAAG,qBAAsBA,CAAM,CACrI,CACA,gBAAgByR,EAASzR,EAAQ,CAC/B,KAAK,WAAWyR,EAAS,KAAK,UAAW,qBAAsB,GAAO,GAAO,CAACsB,EAAOxH,IAAW,KAAK,eAAewH,EAAOxH,EAAQvL,CAAM,EAAGA,CAAM,CACpJ,CACA,eAAe8C,EAAQyI,EAAQvL,EAAQ,CACrC,GAAI8C,IAAWyI,EAAO,cAAc,IAGpCA,EAAO,eAAezI,EAAQ9C,CAAM,EAChC8C,GAAU,CAACyI,EAAO,WAAW,GAAK,KAAK,gBAAgB,CACzD,IAAMyH,EAAiB,KAAK,eAAe,kBAAkBzH,CAAM,EACnEA,EAAO,WAAWyH,CAAc,CAClC,CACF,CACA,gBAAgB1T,EAAMU,EAAQ,CAC5B,KAAK,cAAcV,EAAM,KAAK,UAAW,GAAM,GAAOiM,GAAU,KAAK,eAAe,GAAMA,EAAQvL,CAAM,EAAG,qBAAsBA,CAAM,CACzI,CACA,mBAAmBV,EAAMU,EAAQ,CAC/B,KAAK,cAAcV,EAAM,KAAK,UAAW,GAAO,GAAOiM,GAAU,KAAK,eAAe,GAAOA,EAAQvL,CAAM,EAAG,qBAAsBA,CAAM,CAC3I,CACA,mBAAmBiT,EAAW1C,EAASvQ,EAAQ,CAC7C,GAAI,KAAK,gBAAgB,EACvB,OAEF,IAAMuL,EAAS,KAAK,aAAa0H,CAAS,EACpCC,EAAkB,KAAK,aAAa,MAAMD,EAAW1C,CAAO,EAClE,KAAK,aAAa,OAAO0C,EAAW,CAAC,EACrC,KAAK,aAAa,OAAO1C,EAAS,EAAGhF,CAAM,EAC3C,KAAK,gBAAgB,gBAAgB2H,EAAiBlT,CAAM,CAC9D,CACA,WAAWyR,EAAS0B,EAAYzY,EAAW0Y,EAAmBC,EAAwBC,EAAgBtT,EAAQ,CAC5G,IAAMuT,EAAc,KAAK,YAAY,QAAQ,EAC7C,GAAI7V,EAAgB6V,CAAW,EAC7B,OAEF,IAAMC,EAAyB,IAAI,IACnCL,EAAW,QAAQ,CAACpS,EAAK0S,IAAQD,EAAQ,IAAIzS,EAAK0S,CAAG,CAAC,EACtDN,EAAW,OAAS,EAChB5V,EAAQkU,CAAO,GACjBA,EAAQ,QAAQtS,GAAO,CACrB,IAAMoM,EAAS,KAAK,YAAY,aAAapM,CAAG,EAC5CoM,GACF4H,EAAW,KAAK5H,CAAM,CAE1B,CAAC,EAEH4H,EAAW,QAAQ,CAACpS,EAAK0S,IAAQ,CAC/B,IAAMC,EAAWF,EAAQ,IAAIzS,CAAG,EAChC,GAAI2S,IAAa,OAAQ,CACvBF,EAAQ,IAAIzS,EAAK,CAAC,EAClB,MACF,CACIqS,GAAqBM,IAAaD,GAGtCD,EAAQ,OAAOzS,CAAG,CACpB,CAAC,GACmB,KAAK,YAAY,cAAc,GACnC,CAAC,GAAG,QAAQwK,GAAU,CACpC,IAAMwH,EAAQI,EAAW,QAAQ5H,CAAM,GAAK,EAC5C+H,EAAeP,EAAOxH,CAAM,CAC9B,CAAC,EACD8H,GAA0B,KAAK,YAAY,YAAY,EACvD,KAAK,mBAAmB,QAAQrT,CAAM,EACtC,KAAK,gBAAgB,cAActF,EAAW,CAAC,GAAG8Y,EAAQ,KAAK,CAAC,EAAGxT,CAAM,CAC3E,CACA,cAAcV,EAAM6T,EAAYQ,EAAaN,EAAwBC,EAAgBpX,EAAW8D,EAAQ,CACtG,GAAI,CAACV,GAAQ5B,EAAgB4B,CAAI,EAC/B,OAEF,IAAIsU,EAAa,GACjBtU,EAAK,QAAQH,GAAO,CAClB,GAAI,CAACA,EACH,OAEF,IAAM0U,EAAc,KAAK,YAAY,aAAa1U,CAAG,EACrD,GAAK0U,EAGL,IAAIF,EAAa,CACf,GAAIR,EAAW,QAAQU,CAAW,GAAK,EACrC,OAEFV,EAAW,KAAKU,CAAW,CAC7B,KAAO,CACL,GAAIV,EAAW,QAAQU,CAAW,EAAI,EACpC,OAEFjB,EAAiBO,EAAYU,CAAW,CAC1C,CACAP,EAAeO,CAAW,EAC1BD,EAAa,GACf,CAAC,EACIA,IAGDP,GACF,KAAK,YAAY,YAAY,EAE/B,KAAK,mBAAmB,QAAQrT,CAAM,EACtC,KAAK,gBAAgB,mBAAmB9D,EAAWiX,EAAYnT,CAAM,EACvE,CACA,YAAYA,EAAQ8T,EAAiB,CACnC,KAAK,oBAAoB9T,EAAQ8T,CAAe,EAChD,KAAK,iBAAiB9T,EAAQ8T,CAAe,EAC7C,KAAK,iBAAiB9T,EAAQ8T,CAAe,CAC/C,CACA,iBAAiB9T,EAAQ8T,EAAiB,CACxC,KAAK,UAAY,KAAK,kBAAkBA,EAAiB,KAAK,UAAW,CAAC/S,EAAKgT,IAAShT,EAAI,eAAegT,EAAM/T,CAAM,EAEvH,IAAG,GAAW,IAAG,GAEjBkB,GAAU,CACR,IAAM0B,EAAU1B,EAAO,QACvB,GAAI0B,IAAY,MAAQA,IAAY,GAClC,OAAO,KAET,GAAIA,IAAY,OAGhB,MAAO,CAAC,CAACA,CACX,EAAG1B,GACMA,EAAO,gBAAkB,MAAQA,EAAO,gBAAkB,EAClE,EACD,KAAK,UAAU,QAAQH,GAAO,CAC5B,IAAMG,EAASH,EAAI,UAAU,EACzBG,EAAO,SAAW,MAAQA,EAAO,SAAW,GAC9CH,EAAI,WAAWG,EAAO,OAAO,EAExBH,EAAI,WAAW,GAClBA,EAAI,WAAWG,EAAO,cAAc,CAG1C,CAAC,CACH,CACA,oBAAoBlB,EAAQ8T,EAAiB,CAC3C,KAAK,aAAe,KAAK,kBAAkBA,EAAiB,KAAK,aAAc,CAAC/S,EAAKgT,IAAShT,EAAI,kBAAkBgT,EAAM/T,CAAM,EAAGkB,GAAUA,EAAO,cAAeA,GAAUA,EAAO,qBAAsBA,GAAUA,EAAO,SAAUA,GAAUA,EAAO,eAAe,CACvQ,CACA,iBAAiBlB,EAAQ8T,EAAiB,CACxC,KAAK,UAAY,KAAK,kBAAkBA,EAAiB,KAAK,UAAW,CAAC/S,EAAKgT,IAAShT,EAAI,eAAegT,EAAM/T,CAAM,EAAGkB,GAAUA,EAAO,WAAYA,GAAUA,EAAO,kBAAmBA,GAAUA,EAAO,MAAOA,GAAUA,EAAO,YAAY,CAClP,CACA,kBAAkB4S,EAAkB,CAAC,EAAGE,EAAe,CAAC,EAAGC,EAAaC,EAAcC,EAAqBC,EAAcC,EAAqB,CAC5I,IAAMC,EAAgB,CAAC,EACjBC,EAAgB,CAAC,GACH,KAAK,YAAY,cAAc,GAAK,CAAC,GAC7C,QAAQxT,GAAO,CACzB,IAAMyT,EAAWV,EAAgB,QAAQ/S,CAAG,EAAI,EAC1CG,EAASH,EAAI,UAAU,EACvBzD,EAAQQ,GAAesW,EAAalT,CAAM,CAAC,EAC3CuT,EAAe3W,GAAeuW,EAAoBnT,CAAM,CAAC,EACzD6N,EAAQnR,GAAcsW,EAAahT,CAAM,CAAC,EAC1CwT,EAAe9W,GAAcuW,EAAoBjT,CAAM,CAAC,EAC1DyT,EACiBrX,IAAU,OAK7BqX,EAAUrX,EAJSyR,IAAU,OAMzBA,IAAU,KACZ4F,EAAU,GAEVA,EAAU5F,GAAS,EAGjByF,EAXsBC,IAAiB,OAavCE,EAAUF,EAZYC,IAAiB,OAcvCC,EAAUD,GAAgB,MAAQA,GAAgB,EAElDC,EAAU,GAGZA,EAAUX,EAAa,QAAQjT,CAAG,GAAK,EAGvC4T,KACeH,EAAWzF,GAAS,MAAQ2F,GAAgB,KAAO3F,GAAS,MAClEuF,EAAc,KAAKvT,CAAG,EAAIwT,EAAc,KAAKxT,CAAG,EAE/D,CAAC,EACD,IAAM6T,EAAiB7T,GAAO,CAC5B,IAAMgO,EAAQmF,EAAanT,EAAI,UAAU,CAAC,EACpC8T,EAAeV,EAAoBpT,EAAI,UAAU,CAAC,EACxD,OAAOgO,GAAwB8F,CACjC,EACAP,EAAc,KAAK,CAACQ,EAAMC,IAAS,CACjC,IAAM5E,EAASyE,EAAeE,CAAI,EAC5B1E,EAASwE,EAAeG,CAAI,EAClC,OAAI5E,IAAWC,EACN,EAELD,EAASC,EACJ,GAEF,CACT,CAAC,EACD,IAAM9U,EAAM,CAAC,EAAE,OAAOgZ,CAAa,EACnC,OAAAN,EAAa,QAAQjT,GAAO,CACtBwT,EAAc,QAAQxT,CAAG,GAAK,GAChCzF,EAAI,KAAKyF,CAAG,CAEhB,CAAC,EACDwT,EAAc,QAAQxT,GAAO,CACvBzF,EAAI,QAAQyF,CAAG,EAAI,GACrBzF,EAAI,KAAKyF,CAAG,CAEhB,CAAC,EACDiT,EAAa,QAAQjT,GAAO,CACtBzF,EAAI,QAAQyF,CAAG,EAAI,GACrBkT,EAAYlT,EAAK,EAAK,CAE1B,CAAC,EACDzF,EAAI,QAAQyF,GAAO,CACbiT,EAAa,QAAQjT,CAAG,EAAI,GAC9BkT,EAAYlT,EAAK,EAAI,CAEzB,CAAC,EACMzF,CACT,CACA,8CAA8C0Z,EAA4BC,EAAyB,CACjG,IAAMC,EAA6B,CAAC,EAC9BC,EAAe,CAACC,EAAoBC,EAASC,EAAYC,EAAmBC,EAAWC,IAAqB,CAChH,IAAMC,EAAc,KAAK,YAAY,cAAc,EACnD,GAAI,CAACL,EAAQ,QAAU,CAACK,EACtB,MAAO,CAAC,EAEV,IAAMC,EAAoB,OAAO,KAAKP,CAAkB,EAClDQ,EAAgB,IAAI,IAAID,CAAiB,EACzCE,EAAY,IAAI,IAAIF,CAAiB,EACrCG,EAAY,IAAI,IAAIT,EAAQ,IAAI9J,GAAU,CAC9C,IAAMnK,EAAQmK,EAAO,SAAS,EAC9B,OAAAsK,EAAU,OAAOzU,CAAK,EACfA,CACT,CAAC,EAAE,OAAOuU,CAAiB,CAAC,EACtBI,EAAwB,CAAC,EACzBC,EAAmB,CAAC,EACtBC,EAAa,EACjB,QAASha,EAAI,EAAGA,EAAIyZ,EAAY,OAAQzZ,IAAK,CAC3C,IAAMmF,EAAQsU,EAAYzZ,CAAC,EAAE,SAAS,EAClC6Z,EAAU,IAAI1U,CAAK,IACrB2U,EAAsB,KAAK3U,CAAK,EAChC4U,EAAiB5U,CAAK,EAAI6U,IAE9B,CACA,IAAIlH,EAAQ,IACRmH,EAAkB,GAClBxG,EAAY,EACVyG,EAA0B/U,GAAS,CACvC,IAAMgV,EAAqBJ,EAAiB5U,CAAK,EACjD,QAASnF,EAAIyT,EAAWzT,EAAIma,EAAoBna,IAAK,CACnD,IAAMwO,EAAWsL,EAAsB9Z,CAAC,EACpC4Z,EAAU,IAAIpL,CAAQ,IACxB2K,EAAmB3K,CAAQ,EAAE+K,CAAS,EAAIzG,IAC1C8G,EAAU,OAAOpL,CAAQ,EAE7B,CACAiF,EAAY0G,CACd,EACAf,EAAQ,QAAQ9J,GAAU,CACxB,IAAMnK,EAAQmK,EAAO,SAAS,EAC9B,GAAIqK,EAAc,IAAIxU,CAAK,EACzB+U,EAAwB/U,CAAK,EAC7BgU,EAAmBhU,CAAK,EAAEoU,CAAS,EAAIzG,QAClC,CACL,IAAM7N,EAASqK,EAAO,UAAU,GACXrK,EAAOsU,CAAS,IAAM,MAAQtU,EAAOsU,CAAS,IAAM,QAAUtU,EAAOuU,CAAgB,GAAK,QAExGS,IACiBhV,EAAOoU,CAAU,GAAKpU,EAAOoU,CAAU,IAAM,QAAUpU,EAAOqU,CAAiB,EAEjGY,EAAwB/U,CAAK,GAE7ByU,EAAU,QAAQpL,IAAY,CAC5B2K,EAAmB3K,EAAQ,EAAE+K,CAAS,EAAIzG,EAAQiH,EAAiBvL,EAAQ,CAC7E,CAAC,EACDsE,GAASgH,EAAsB,OAC/BG,EAAkB,KAGjBhB,EAA2B9T,CAAK,IACnC8T,EAA2B9T,CAAK,EAAI,CAClC,MAAAA,CACF,GAEF8T,EAA2B9T,CAAK,EAAEoU,CAAS,EAAIzG,IAEnD,CACF,CAAC,CACH,EACA,OAAAoG,EAAaH,EAA4B,KAAK,aAAc,WAAY,kBAAmB,gBAAiB,sBAAsB,EAClIG,EAAaF,EAAyB,KAAK,UAAW,QAAS,eAAgB,aAAc,mBAAmB,EACzG,OAAO,OAAOC,CAA0B,CACjD,CACF,EAGImB,GAA0B,cAActa,CAAS,CACnD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,yBAClB,CACA,UAAUC,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,gBAAkBA,EAAM,sBAC7B,KAAK,eAAiBA,EAAM,eAC5B,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,uBAAyBA,EAAM,uBACpC,KAAK,uBAAyBA,EAAM,sBACtC,CACA,iBAAiBsG,EAAQtC,EAAQ,CAC/B,IAAMsW,EAAe,KAAK,YAAY,cAAc,GAAK,CAAC,EAC1D,GAAI5Y,EAAgB4Y,CAAY,EAC9B,MAAO,GAET,GAAIhU,GAAUA,EAAO,OAAS,CAACA,EAAO,MAAM,QAC1C,OAAAoD,EAAU,gLAAgL,EACnL,GAET,IAAM6Q,EAAY,KAAK,gBAAgB,kCAAkC,EACnEC,EAAc,CAACC,EAAQvL,EAAiBwL,IAAY,CACxD,IAAM9J,EAAqB,KAAK,qCAAqC5M,CAAM,EACrE2W,EAAqBzL,EAAgB,MAAM,EAC3C0L,EAAkB,CAAC,EACnBC,EAAe,CAAC,EAChBC,EAAgB,CAAC,EACjBC,EAA0B,CAAC,EAC7BC,EAAkB,EAChBC,EAAuB,KAAK,gBAAgB,mBAAmB,EAAE,MAAM,EACvEC,EAAoB,KAAK,gBAAgB,gBAAgB,EAAE,MAAM,EACvET,EAAO,QAAQU,GAAS,CACtB,IAAM/V,EAAQ+V,EAAM,OAAS,GAE7B,GAD0B/V,EAAM,WAAW4G,EAAoB,EACxC,CACrB8O,EAAc,KAAKK,CAAK,EACxBJ,EAAwB,KAAKI,CAAK,EAClC,MACF,CACA,IAAM5L,EAASmL,EAAQtV,CAAK,EACvBmK,GAIH,KAAK,wBAAwBA,EAAQ4L,EAAO7U,EAAO,aAAcsU,EAAiBC,EAAc,GAAO7W,EAAQuW,CAAS,EACxH3D,EAAiB+D,EAAoBpL,CAAM,IAJ3CwL,EAAwB,KAAKI,CAAK,EAClCH,GAAmB,EAKvB,CAAC,EACD,IAAMI,EAAoBrW,GAAO,KAAK,wBAAwBA,EAAK,KAAMuB,EAAO,aAAcsU,EAAiBC,EAAc,GAAO7W,EAAQuW,CAAS,EACrJI,EAAmB,QAAQS,CAAiB,EAC5C,KAAK,gBAAgB,oBAAoBC,GAAkB,KAAK,KAAMT,EAAiBK,CAAoB,CAAC,EAC5G,KAAK,gBAAgB,iBAAiBI,GAAkB,KAAK,KAAMR,EAAcK,CAAiB,CAAC,EACnG,KAAK,YAAY,YAAY,EAE7B,IAAMI,GADW,KAAK,YAAY,YAAY,GAAK,CAAC,GACtB,MAAM,EACpC,OAAAR,EAAc,QAAQS,GAAa,CACjC,IAAMC,EAAU,KAAK,YAAY,WAAWD,EAAU,KAAK,EAC3D3E,EAAiB0E,EAAcE,CAAO,EACtC,KAAK,wBAAwBA,EAASD,EAAWjV,EAAO,aAAc,KAAM,KAAM,GAAMtC,EAAQuW,CAAS,CAC3G,CAAC,EACDe,EAAa,QAAQF,CAAiB,EACtC,KAAK,uBAAuB9U,CAAM,EAClC,KAAK,mBAAmB,QAAQtC,CAAM,EACtC,KAAK,gBAAgB,kBAAkBA,CAAM,EAC7C4M,EAAmB,EACZ,CACL,uBAAwBmK,EACxB,eAAgBC,CAClB,CACF,EACA,KAAK,uBAAuB,MAAM,EAClC,GAAI,CACF,uBAAAS,EACA,eAAAC,CACF,EAAIlB,EAAYlU,EAAO,OAAS,CAAC,EAAGgU,EAAcqB,GAAM,KAAK,YAAY,aAAaA,CAAE,CAAC,EACzF,GAAIF,EAAuB,OAAS,GAAKla,EAAQ+E,EAAO,YAAY,EAAG,CAErE,IAAMsO,EADkB,KAAK,uBAAuB,mBAAmB,GAC1B,KAC7C8G,EAAiBlB,EAAYiB,EAAwB7G,GAAuB,CAAC,EAAG+G,GAAM,KAAK,uBAAuB,kBAAkBA,CAAE,CAAC,EAAE,cAC3I,CACA,YAAK,uBAAuB,OAAO,EAC5BD,IAAmB,CAC5B,CACA,iBAAiB1X,EAAQ,CACvB,IAAM0V,EAAc,KAAK,YAAY,cAAc,EACnD,GAAIhY,EAAgBgY,CAAW,EAC7B,OAEF,IAAMkC,EAAoB,KAAK,YAAY,iBAAiB,EACtD1O,EAAiBjB,GAAmB2P,CAAiB,EACrDC,EAAe,CAAC,EAClBC,EAAmB,IACnBC,EAAgB,IAChBC,EAAgB,CAAC,EACfC,EAAgB,KAAK,YAAY,YAAY,EAC/CA,IACFD,EAAgBA,EAAc,OAAOC,CAAa,GAEhD/O,IACF8O,EAAgBA,EAAc,OAAO9O,CAAc,GAErD8O,EAAc,QAAQzM,GAAU,CAC9B,IAAMgM,EAAY,KAAK,yBAAyBhM,CAAM,EAClD9N,EAAS8Z,EAAU,aAAa,GAAKA,EAAU,WACjDA,EAAU,cAAgBO,KAExBra,EAAS8Z,EAAU,UAAU,GAAKA,EAAU,QAC9CA,EAAU,WAAaQ,KAEzBF,EAAa,KAAKN,CAAS,CAC7B,CAAC,EACD,KAAK,iBAAiB,CACpB,MAAOM,EACP,WAAY,EACd,EAAG7X,CAAM,CACX,CACA,yBAAyBuL,EAAQ,CAC/B,IAAM2M,EAAiB,CAACtZ,EAAGC,IAAMD,GAAgBC,GAAgB,KAC3DqC,EAASqK,EAAO,UAAU,EAC1B9I,EAAOyV,EAAehX,EAAO,KAAMA,EAAO,WAAW,EACrDI,EAAY4W,EAAehX,EAAO,UAAWA,EAAO,gBAAgB,EACpEM,EAAO0W,EAAehX,EAAO,KAAMA,EAAO,WAAW,EACrD+B,EAASiV,EAAehX,EAAO,OAAQA,EAAO,aAAa,EAC3Dc,EAAQkW,EAAehX,EAAO,MAAOA,EAAO,YAAY,EACxDQ,EAAOwW,EAAehX,EAAO,KAAMA,EAAO,WAAW,EACvDiX,EAAgBD,EAAehX,EAAO,cAAeA,EAAO,oBAAoB,EAChF2C,EAAWqU,EAAehX,EAAO,SAAUA,EAAO,eAAe,EACjEiX,GAAiB,OAAStU,GAAY,MAAQA,GAAY,MAC5DsU,EAAgB,KAChBtU,EAAW,MAEb,IAAIuU,EAAaF,EAAehX,EAAO,WAAYA,EAAO,iBAAiB,EACvE4C,EAAQoU,EAAehX,EAAO,MAAOA,EAAO,YAAY,EACxDkX,GAAc,OAAStU,GAAS,MAAQA,GAAS,MACnDsU,EAAa,KACbtU,EAAQ,MAEV,IAAMlB,EAAUsV,EAAehX,EAAO,QAASA,EAAO,cAAc,EACpE,MAAO,CACL,MAAOqK,EAAO,SAAS,EACvB,KAAA9I,EACA,UAAAnB,EACA,KAAAE,EACA,OAAAyB,EACA,MAAAjB,EACA,KAAAN,EACA,SAAAmC,EACA,cAAAsU,EACA,MAAArU,EACA,WAAAsU,EACA,QAAAxV,CACF,CACF,CACA,wBAAwB2I,EAAQgM,EAAWc,EAAczB,EAAiBC,EAAcW,EAASxX,EAAQuW,EAAW,CAClH,GAAI,CAAChL,EACH,OAEF,IAAM+M,EAAY,CAACC,EAAMC,IAAS,CAChC,IAAM/Y,EAAM,CACV,OAAQ,OACR,OAAQ,MACV,EACIgZ,EAAa,GACjB,OAAIlB,IACEA,EAAUgB,CAAI,IAAM,SACtB9Y,EAAI,OAAS8X,EAAUgB,CAAI,EAC3BE,EAAa,IAEXlb,EAAQib,CAAI,GAAKjB,EAAUiB,CAAI,IAAM,SACvC/Y,EAAI,OAAS8X,EAAUiB,CAAI,EAC3BC,EAAa,KAGb,CAACA,GAAcJ,IACbA,EAAaE,CAAI,IAAM,SACzB9Y,EAAI,OAAS4Y,EAAaE,CAAI,GAE5Bhb,EAAQib,CAAI,GAAKH,EAAaG,CAAI,IAAM,SAC1C/Y,EAAI,OAAS4Y,EAAaG,CAAI,IAG3B/Y,CACT,EACM+B,EAAO8W,EAAU,MAAM,EAAE,OAC3B9W,IAAS,QACX+J,EAAO,WAAW,CAAC/J,EAAMxB,CAAM,EAEjC,IAAMiD,EAASqV,EAAU,QAAQ,EAAE,OAC/BrV,IAAW,QACbsI,EAAO,UAAUtI,CAAM,EAEzB,IAAMyV,EAAcnN,EAAO,UAAU,EAAE,UAAYtK,GAC7CS,EAAO4W,EAAU,MAAM,EAAE,OAI/B,GAHI5W,IAAS,QACX6J,EAAO,QAAQ7J,CAAI,EAEjBA,GAAQ,KAAM,CAChB,IAAMM,EAAQsW,EAAU,OAAO,EAAE,OAC7BtW,GAAS,MACP0W,GAAe,MAAQ1W,GAAS0W,GAClCnN,EAAO,eAAevJ,EAAOhC,CAAM,CAGzC,CACA,IAAMyC,EAAO6V,EAAU,MAAM,EAAE,OAC3B7V,IAAS,SACPA,IAAS,QAAUA,IAAS,MAC9B8I,EAAO,QAAQ9I,EAAMzC,CAAM,EAE3BuL,EAAO,QAAQ,OAAQvL,CAAM,GAGjC,IAAMsB,EAAYgX,EAAU,WAAW,EAAE,OAIzC,GAHIhX,IAAc,QAChBiK,EAAO,aAAajK,CAAS,EAE3BkW,GAAW,CAACjM,EAAO,UAAU,EAC/B,OAEF,IAAM3I,EAAU0V,EAAU,SAAS,EAAE,OACjC1V,IAAY,SACV,OAAOA,GAAY,UACrB2I,EAAO,WAAW3I,CAAO,EACpB2I,EAAO,cAAc,IACxBA,EAAO,eAAe,GAAMvL,CAAM,EAClCuW,EAAU,YAAYhL,CAAM,KAG1BhO,EAAQqF,CAAO,GACjB8C,EAAU,8OAA8O,EAEtP6F,EAAO,cAAc,IACvBA,EAAO,eAAe,GAAOvL,CAAM,EACnCuW,EAAU,eAAehL,CAAM,KAIrC,GAAM,CACJ,OAAQ1H,EACR,OAAQsU,CACV,EAAIG,EAAU,WAAY,eAAe,GACrCzU,IAAa,QAAUsU,IAAkB,UACvC,OAAOA,GAAkB,UAAYtU,GAClC0H,EAAO,iBAAiB,IAC3BA,EAAO,kBAAkB,GAAMvL,CAAM,EACrCuW,EAAU,YAAYhL,CAAM,GAE1BqL,GAAmB,OAAOuB,GAAkB,WAC9CvB,EAAgBrL,EAAO,MAAM,CAAC,EAAI4M,IAGhC5M,EAAO,iBAAiB,IAC1BA,EAAO,kBAAkB,GAAOvL,CAAM,EACtCuW,EAAU,eAAehL,CAAM,IAIrC,GAAM,CACJ,OAAQzH,EACR,OAAQsU,CACV,EAAIE,EAAU,QAAS,YAAY,GAC/BxU,IAAU,QAAUsU,IAAe,UACjC,OAAOA,GAAe,UAAYtU,GAC/ByH,EAAO,cAAc,IACxBA,EAAO,eAAe,GAAMvL,CAAM,EAClCuW,EAAU,YAAYhL,CAAM,GAE1BsL,GAAgB,OAAOuB,GAAe,WACxCvB,EAAatL,EAAO,MAAM,CAAC,EAAI6M,IAG7B7M,EAAO,cAAc,IACvBA,EAAO,eAAe,GAAOvL,CAAM,EACnCuW,EAAU,eAAehL,CAAM,GAIvC,CACA,uBAAuBjJ,EAAQ,CAC7B,GAAI,CAACA,EAAO,YAAc,CAACA,EAAO,MAChC,OAEF,IAAMwN,EAAS,CAAC,EAChBxN,EAAO,MAAM,QAAQ6C,GAAQ,CACvBA,EAAK,OAAS,MAChB2K,EAAO,KAAK3K,EAAK,KAAK,CAE1B,CAAC,EACD,KAAK,YAAY,iBAAiB2K,CAAM,CAC1C,CAIA,qCAAqC9P,EAAQ,CAC3C,IAAM2Y,EAAa,CACjB,gBAAiB,KAAK,gBAAgB,mBAAmB,EAAE,MAAM,EACjE,aAAc,KAAK,gBAAgB,gBAAgB,EAAE,MAAM,EAC3D,aAAc,KAAK,gBAAgB,gBAAgB,EAAE,MAAM,CAC7D,EACMC,EAAoB,KAAK,sBAAsB,eAAe,EAC9DC,EAAuB,CAAC,EAC9B,OAAAD,EAAkB,QAAQ7X,GAAO,CAC/B8X,EAAqB9X,EAAI,KAAK,EAAIA,CACpC,CAAC,EACM,IAAM,CACX,IAAM+X,EAAe,KAAK,YAAY,WAAW,EAC3CC,EAA6B,CAAC7c,EAAW8c,EAAYC,EAAWC,IAAa,CACjF,IAAMC,EAAaH,EAAW,IAAIE,CAAQ,EACpCE,EAAYH,EAAU,IAAIC,CAAQ,EAExC,GADkBhM,GAAUiM,EAAYC,CAAS,EAE/C,OAEF,IAAM5F,EAAU,IAAI,IAAIwF,CAAU,EAClCC,EAAU,QAAQtB,GAAM,CACjBnE,EAAQ,OAAOmE,CAAE,GACpBnE,EAAQ,IAAImE,CAAE,CAElB,CAAC,EACD,IAAM0B,EAAa,CAAC,GAAG7F,CAAO,EACxBlZ,EAAQ,CACZ,KAAM4B,EACN,QAASmd,EACT,OAAQA,EAAW,SAAW,EAAIA,EAAW,CAAC,EAAI,KAClD,OAAArZ,CACF,EACA,KAAK,aAAa,cAAc1F,CAAK,CACvC,EACMgf,EAAoBC,GAAoB,CAC5C,IAAMC,EAAkB,CAAC,EACzB,OAAAV,EAAa,QAAQvN,GAAU,CAC7B,IAAMkO,EAAiBZ,EAAqBtN,EAAO,SAAS,CAAC,EACzDkO,GAAkBF,EAAiBE,EAAgBlO,CAAM,GAC3DiO,EAAgB,KAAKjO,CAAM,CAE/B,CAAC,EACMiO,CACT,EACME,EAAiBxJ,GAAKA,EAAE,SAAS,EACvC6I,EAA2B,wBAAyBJ,EAAW,gBAAiB,KAAK,gBAAgB,mBAAmB,EAAGe,CAAc,EACzIX,EAA2B,qBAAsBJ,EAAW,aAAc,KAAK,gBAAgB,gBAAgB,EAAGe,CAAc,EAOhI,IAAMC,EAAgBL,EANO,CAACM,EAAI1J,IAAM,CACtC,IAAM2J,EAAYD,EAAG,SAAW,KAC1BE,EAAgBD,GAAa3J,EAAE,cAAc,EAC7C6J,EAAiBF,GAAaD,EAAG,SAAW1J,EAAE,WAAW,EAC/D,OAAO4J,GAAiBC,CAC1B,CAC4D,EACxDJ,EAAc,OAAS,GACzB,KAAK,gBAAgB,cAAc,qBAAsBA,EAAe3Z,CAAM,EAEhF,IAAMga,EAAwB,CAACJ,EAAI1J,IAAM0J,EAAG,OAAS1J,EAAE,eAAe,EACtE,KAAK,gBAAgB,cAAcoJ,EAAkBU,CAAqB,EAAG,GAAMha,CAAM,EACzF,IAAMia,EAAwB,CAACL,EAAI1J,IAAM0J,EAAG,QAAU1J,EAAE,UAAU,EAClE,KAAK,gBAAgB,aAAaoJ,EAAkBW,CAAqB,EAAGja,CAAM,EAClF,IAAMka,EAA4B,CAACN,EAAI1J,IAAM0J,EAAG,MAAQ1J,EAAE,UAAU,EACpE,KAAK,gBAAgB,cAAcoJ,EAAkBY,CAAyB,EAAGla,CAAM,EAEvF,IAAMma,EAAiBb,EADK,CAACM,EAAI1J,IAAM0J,EAAG,MAAQ1J,EAAE,QAAQ,GAAK0J,EAAG,WAAa1J,EAAE,aAAa,CACpC,EACxDiK,EAAe,OAAS,GAC1B,KAAK,eAAe,0BAA0Bna,EAAQma,CAAc,EAEtE,KAAK,wCAAwCvB,EAAmB5Y,CAAM,CACxE,CACF,CACA,wCAAwCyZ,EAAgBzZ,EAAQ,CAC9D,IAAMoa,EAAgB,KAAK,sBAAsB,eAAe,EAC1DC,EAAsB,CAAC,EAC7BD,EAAc,QAAQE,GAAKD,EAAoBC,EAAE,KAAK,EAAIA,CAAC,EAC3D,IAAMC,EAAmB,CAAC,EAC1Bd,EAAe,QAAQa,GAAK,CACtBD,EAAoBC,EAAE,KAAK,IAC7BC,EAAiBD,EAAE,KAAK,EAAI,GAEhC,CAAC,EACD,IAAME,EAAiBf,EAAe,OAAOvJ,GAAKqK,EAAiBrK,EAAE,KAAK,CAAC,EACrEuK,EAAgBL,EAAc,OAAOlK,GAAKqK,EAAiBrK,EAAE,KAAK,CAAC,EACnEI,EAAe,CAAC,EACtBmK,EAAc,QAAQ,CAACC,EAAS3L,IAAU,CACxC,IAAM4L,EAAWH,GAAkBA,EAAezL,CAAK,EACvD,GAAI4L,GAAYA,EAAS,QAAUD,EAAQ,MAAO,CAChD,IAAME,EAAU,KAAK,YAAY,OAAOD,EAAS,KAAK,EAClDC,GACFtK,EAAa,KAAKsK,CAAO,CAE7B,CACF,CAAC,EACItK,EAAa,QAGlB,KAAK,gBAAgB,YAAY,CAC/B,aAAAA,EACA,OAAAtQ,EACA,SAAU,EACZ,CAAC,CACH,CACF,EACIqX,GAAoB,CAAC5H,EAASoL,EAAS/F,EAAMC,IAAS,CACxD,IAAM5E,EAASV,EAAQqF,EAAK,MAAM,CAAC,EAC7B1E,EAASX,EAAQsF,EAAK,MAAM,CAAC,EAC7B+F,EAAY3K,GAAU,KACtB4K,EAAY3K,GAAU,KAC5B,GAAI0K,GAAaC,EACf,OAAO5K,EAASC,EAElB,GAAI0K,EACF,MAAO,GAET,GAAIC,EACF,MAAO,GAET,IAAMC,EAAYH,EAAQ,QAAQ/F,CAAI,EAChCmG,EAAYJ,EAAQ,QAAQ9F,CAAI,EAChCmG,EAAeF,GAAa,EAC5BG,EAAeF,GAAa,EAClC,OAAIC,GAAgBC,EACXH,EAAYC,EAEjBC,EACK,GAEF,CACT,EAGIE,GAAoB,cAAcrf,CAAS,CAC7C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,mBAClB,CACA,UAAUC,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,uBAAyBA,EAAM,uBACpC,KAAK,gBAAkBA,EAAM,qBAC/B,CACA,kBAAkBiX,EAAW1C,EAASvQ,EAAQ,CAC5C,IAAMuT,EAAc,KAAK,YAAY,QAAQ,EAC7C,GAAI,CAACA,EACH,OAEF,IAAMhI,EAASgI,EAAYN,CAAS,EACpC,KAAK,YAAY,CAAC1H,CAAM,EAAGgF,EAASvQ,CAAM,CAC5C,CACA,YAAYqb,EAAmB9K,EAASvQ,EAAQsb,EAAW,GAAM,CAC/D,IAAM/H,EAAc,KAAK,YAAY,QAAQ,EAC7C,GAAI,CAACA,EACH,OAGF,GADA,KAAK,uBAAuB,MAAM,EAC9BhD,EAAUgD,EAAY,OAAS8H,EAAkB,OAAQ,CAC3D3V,EAAU,0DAA2D6K,CAAO,EAC5E7K,EAAU,sFAAsF,EAChG,MACF,CACA,IAAM4K,EAAe,KAAK,YAAY,eAAe+K,CAAiB,EACjD,KAAK,kBAAkB/K,EAAcC,CAAO,IAIjE,KAAK,YAAY,WAAWD,EAAcC,EAASvQ,CAAM,EACzD,KAAK,gBAAgB,YAAY,CAC/B,aAAAsQ,EACA,OAAAtQ,EACA,QAAAuQ,EACA,SAAA+K,CACF,CAAC,EACD,KAAK,uBAAuB,OAAO,EACrC,CACA,kBAAkBC,EAAehL,EAAS,CACxC,IAAMiL,EAAsB,KAAK,uBAAuBD,EAAehL,CAAO,EAC9E,OAAO,KAAK,mBAAmBiL,CAAmB,CACpD,CACA,mBAAmBC,EAAW,CAI5B,MAHI,GAAC,KAAK,0BAA0BA,CAAS,GAGzC,CAAC,KAAK,4BAA4BA,CAAS,EAIjD,CACA,uBAAuBF,EAAehL,EAAS,CAE7C,IAAMiL,EADc,KAAK,YAAY,QAAQ,EACL,MAAM,EAC9C,OAAAhL,GAAagL,EAAqBD,EAAehL,CAAO,EACjDiL,CACT,CACA,4BAA4BA,EAAqB,CAC/C,IAAME,EAA0BC,GACzBA,EAGEA,IAAa,QAAUA,IAAa,GAAO,GAAgB,EAFzD,EAILC,EAAQ,KAAK,IAAI,IAAI,WAAW,EAClCC,EAAgBD,EAAQ,EAAgB,GACxCE,EAAa,GACjB,OAAAN,EAAoB,QAAQza,GAAO,CACjC,IAAMgb,EAAYL,EAAwB3a,EAAI,UAAU,EAAE,YAAY,EAClE6a,EACEG,EAAYF,IACdC,EAAa,IAGXC,EAAYF,IACdC,EAAa,IAGjBD,EAAgBE,CAClB,CAAC,EACMD,CACT,CACA,0BAA0BE,EAAgB,CACxC,IAAIF,EAAa,GACXG,EAAmB,KAAK,YAAY,WAAW,EACrD,OAAAtT,GAA6B,KAAMsT,EAAkB5X,GAAS,CAC5D,GAAI,CAACN,EAAsBM,CAAK,EAC9B,OAEF,IAAMiO,EAAcjO,EACdJ,EAAcqO,EAAY,eAAe,EAE/C,GAAI,EADkBrO,GAAeA,EAAY,eAE/C,OAEF,IAAMiY,EAAa,CAAC,EACpB5J,EAAY,eAAe,EAAE,QAAQvR,GAAO,CAC1C,IAAMob,EAAcH,EAAe,QAAQjb,CAAG,EAC9Cmb,EAAW,KAAKC,CAAW,CAC7B,CAAC,EACD,IAAMC,EAAW,KAAK,IAAI,MAAM,KAAMF,CAAU,EAC1CG,EAAW,KAAK,IAAI,MAAM,KAAMH,CAAU,EAC1CI,EAASF,EAAWC,EACpBE,EAAYjK,EAAY,eAAe,EAAE,OAAS,EACpDgK,EAASC,IACXT,EAAa,GAEjB,CAAC,EACMA,CACT,CACA,mBAAmB1N,EAAM,CACvB,IAAMvL,EAAO,CAAC,EACR2Z,EAAS,CAAC,EACVC,EAAQ,CAAC,EAYf,OAXArO,EAAK,QAAQrN,GAAO,CAClB,IAAM4a,EAAW5a,EAAI,UAAU,EAAE,aAC7B4a,IAAa,QACfc,EAAM,KAAK1b,CAAG,EACL4a,IAAa,QAAUA,IAAa,GAC7C9Y,EAAK,KAAK9B,CAAG,EAEbyb,EAAO,KAAKzb,CAAG,CAEnB,CAAC,EACa,KAAK,IAAI,IAAI,WAAW,EAE7B,CAAC,GAAG0b,EAAO,GAAGD,EAAQ,GAAG3Z,CAAI,EAE/B,CAAC,GAAGA,EAAM,GAAG2Z,EAAQ,GAAGC,CAAK,CACtC,CACF,EAGIC,GAAkB,WAClBC,GAAe,CACjB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,OACP,EAqEA,SAASC,GAAcC,EAAUC,EAAuB,CACtD,GAAID,GAAY,KACd,OAAO,KAET,IAAME,EAAeF,EAAS,SAAS,EAAE,SAAS,EAClD,OAAIC,EACKC,EAEFA,EAAa,QAAQC,GAAiBC,GAAOC,GAAaD,CAAG,CAAC,CACvE,CACA,SAASE,GAAsBC,EAAW,CACxC,GAAI,CAACA,GAAaA,GAAa,KAC7B,OAAO,KAET,IAAMC,EAAM,kBACNC,EAAU,0BAEhB,OADcF,EAAU,QAAQC,EAAK,OAAO,EAAE,QAAQC,EAAS,SAAS,EAAE,QAAQ,MAAO,GAAG,EAAE,MAAM,GAAG,EAC1F,IAAIC,GAAQA,EAAK,UAAU,EAAG,CAAC,EAAE,YAAY,GAAKA,EAAK,OAAS,EAAIA,EAAK,UAAU,EAAGA,EAAK,MAAM,EAAI,GAAG,EAAE,KAAK,GAAG,CACjI,CACA,SAASC,GAAuBJ,EAAW,CACzC,OAAOA,EAAU,QAAQ,SAAUK,GAAK,IAAIA,EAAE,kBAAkB,CAAC,EAAE,CACrE,CAGA,IAAIC,GAAoB,cAAcC,CAAS,CAC7C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,mBAClB,CACA,UAAUC,EAAO,CACf,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,YAAcA,EAAM,WAC3B,CACA,wBAAwBC,EAAQC,EAAUC,EAAiB,GAAO,CAChE,GAAI,CAACF,EACH,OAAO,KAET,IAAMG,EAAa,KAAK,cAAcH,EAAO,UAAU,EAAGA,EAAQ,KAAM,KAAMC,CAAQ,EACtF,OAAIC,EACK,KAAK,0BAA0BF,EAAQG,CAAU,EAEnDA,CACT,CACA,qCAAqCC,EAAaC,EAAqBJ,EAAU,CAC/E,IAAMK,EAAcD,EAAsBA,EAAoB,eAAe,EAAI,KACjF,OAAIC,EACK,KAAK,cAAcA,EAAa,KAAMF,EAAaC,EAAqBJ,CAAQ,EAElF,IACT,CACA,6BAA6BG,EAAaH,EAAU,CAClD,OAAO,KAAK,qCAAqCG,EAAaA,EAAY,uBAAuB,EAAGH,CAAQ,CAC9G,CAEA,cAAcM,EAAQP,EAAQI,EAAaC,EAAqBJ,EAAU,CACxE,IAAMO,EAAoBD,EAAO,kBACjC,GAAIC,EAAmB,CACrB,IAAMC,EAAS,KAAK,IAAI,oBAAoB,CAC1C,OAAAF,EACA,OAAAP,EACA,YAAAI,EACA,oBAAAC,EACA,SAAAJ,CACF,CAAC,EACD,OAAI,OAAOO,GAAsB,WACxBA,EAAkBC,CAAM,EACtB,OAAOD,GAAsB,SAC/B,KAAK,kBAAkB,SAASA,EAAmBC,CAAM,GAElEC,EAAU,kDAAkD,EACrD,GACT,KAAO,IAAIH,EAAO,YAAc,KAC9B,OAAOA,EAAO,WACT,GAAIA,EAAO,MAChB,OAAOjB,GAAsBiB,EAAO,KAAK,EAE3C,MAAO,EACT,CACA,0BAA0BP,EAAQG,EAAY,CAC5C,GAAI,KAAK,IAAI,IAAI,yBAAyB,EACxC,OAAOA,EAET,IAAMQ,EAAmBX,EAAO,UAAU,EAAE,iBACtCY,EAA0BC,EAAQF,CAAgB,EACpDG,EAAU,KACVC,EACJ,GAAIH,EAAyB,CAC3B,IAAMI,EAAe,KAAK,gBAAgB,gBAAgB,EACpDC,EAA2B,KAAK,IAAI,IAAI,2CAA2C,GAAKD,EAAa,SAAW,EAChHE,EAAgBlB,EAAO,UAAU,EAAE,sBAAwB,OACjE,GAAIiB,GAA4B,CAACC,EAC/B,OAAOf,EAETW,EAAUH,EAAmBA,EAAiB,WAAW,EAAI,KAC7DI,EAAe,EACjB,KAAO,CACL,IAAMI,EAAgBnB,EAAO,cAAc,EACrCoB,EAAqB,KAAK,YAAY,YAAY,GAAK,CAAC,KAAK,gBAAgB,gBAAgB,EAC/FD,GAAiBC,GACnBN,EAAUd,EAAO,WAAW,EAC5Be,EAAe,IAEfA,EAAe,EAEnB,CACA,GAAIA,EAAc,CAChB,IAAMM,EAAgB,OAAOP,GAAY,SAAWA,EAAU,OAG9D,MAAO,GAFgB,KAAK,cAAc,kBAAkB,EACbO,EAAeA,CAAa,CAC1C,IAAIlB,CAAU,GACjD,CACA,OAAOA,CACT,CACF,EAGImB,GAAyB,cAAcxB,CAAS,CAClD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,wBAClB,CACA,UAAUC,EAAO,CACf,KAAK,QAAUA,EAAM,QACrB,KAAK,YAAcA,EAAM,YACzB,KAAK,cAAgBA,EAAM,cAC3B,KAAK,mBAAqBA,EAAM,kBAClC,CACA,SAAU,CACRwB,GAAkB,KAAK,QAAS,KAAK,iBAAiB,IAAI,EAC1D,MAAM,QAAQ,CAChB,CACA,0BAA2B,CACzB,OAAO,KAAK,iBAAmB,IACjC,CACA,qBAAqBC,EAAWC,EAAa,CAC3C,GAAI,KAAK,iBAAmB,KAC1B,OAAO,KAET,IAAMC,EAAoB,KAAK,YAAY,aAAaD,CAAW,EAC/DE,EAAc,KAClB,YAAK,gBAAgB,KAAK,QAAQ3B,GAAU,CAC1C,IAAM4B,EAAgB5B,EAAO,UAAU,EAAE,UACnCW,EAAmBX,EAAO,UAAU,EAAE,iBACpB6B,GAAUD,EAAeJ,CAAS,GAChCb,IAAqBe,IAE7CC,EAAc3B,EAElB,CAAC,EACM2B,CACT,CACA,oBAAqB,CACnB,OAAO,KAAK,eACd,CACA,kBAAkBG,EAAK,CACrB,OAAK,KAAK,gBAGH,KAAK,YAAY,qBAAqBA,EAAK,KAAK,eAAe,EAF7D,IAGX,CACA,mBAAmBC,EAASC,EAAQ,CAClC,GAAK,KAAK,YAAY,QAAQ,GAG1B,EAAAD,GAAW,MAAQ,KAAK,iBAAmB,MAG/C,IAAIA,EAAS,CACX,KAAK,yBAAyBA,CAAO,EACrC,IAAME,EAAqB,KAAK,cAAc,iBAAiBF,EAAS,GAAO,KAAK,iBAAiB,MAAQ,KAAK,yBAA2B,OAAQC,CAAM,EAC3JT,GAAkB,KAAK,QAAS,KAAK,iBAAiB,KAAMU,EAAmB,UAAU,EACzF,IAAMC,EAAOD,EAAmB,WAC1BE,EAAYF,EAAmB,SAC/BG,EAAOC,GAAmBH,CAAI,EAC9BI,EAAM,CAAC,EACb,KAAK,gBAAkB,CACrB,KAAAJ,EACA,UAAAC,EACA,KAAAC,EACA,IAAAE,CACF,EACA,KAAK,gBAAgB,KAAK,QAAQC,GAAO,KAAK,gBAAgB,IAAIA,EAAI,MAAM,CAAC,EAAIA,CAAG,EACpF,KAAK,wBAA0B,IACjC,MACE,KAAK,wBAA0B,KAAK,gBAAkB,KAAK,gBAAgB,KAAO,KAClF,KAAK,gBAAkB,KAEzB,KAAK,YAAY,YAAY,EAC7B,KAAK,mBAAmB,QAAQP,CAAM,EACxC,CACA,yBAAyBD,EAAS,CAChC,IAAMS,EAAiB,KAAK,IAAI,IAAI,0BAA0B,EACxDC,EAAgB,KAAK,IAAI,IAAI,+BAA+B,EAClE,GAAI,CAACD,GAAkB,CAACC,EACtB,OAEF,IAAMC,EAAmBC,GAAY,CACnCA,EAAS,QAAQC,GAAkB,CAEjC,GADgB/B,EAAQ+B,EAAe,QAAQ,EAClC,CACX,IAAMtC,EAAcsC,EAChBH,GACFA,EAAcnC,CAAW,EAE3BoC,EAAiBpC,EAAY,QAAQ,CACvC,MAEMkC,GACFA,EAFaI,CAEQ,CAG3B,CAAC,CACH,EACIb,GACFW,EAAiBX,CAAO,CAE5B,CACF,EAGIc,GAAoB,cAAc/C,CAAS,CAC7C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,mBAClB,CACA,UAAUC,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,gBAAkBA,EAAM,sBAC7B,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,aAAeA,EAAM,YAC5B,CACA,gBAAgB+C,EAAcC,EAAUC,EAAUhB,EAAQ,CACxD,IAAMiB,EAAO,CAAC,EACdH,EAAa,QAAQI,GAAe,CAClC,IAAMX,EAAM,KAAK,YAAY,aAAaW,EAAY,GAAG,GAAK,KAAK,YAAY,OAAOA,EAAY,GAAG,EACrG,GAAI,CAACX,EACH,OAWF,GATAU,EAAK,KAAK,CACR,MAAOC,EAAY,SACnB,OAAQ,CAAC,CAAC,EACV,QAAS,CAACX,CAAG,CACf,CAAC,EACsB,KAAK,IAAI,IAAI,kBAAkB,IAAM,UAE1DQ,EAAW,CAACA,GAEVA,EAAU,CACZ,IAAMI,EAAW,KAAK,mBAAmB,YAAYZ,CAAG,EACxD,GAAI,CAACY,EACH,OAEF,IAAMC,EAAYb,EAAI,eAAe,EAAIW,EAAY,SAC/CG,EAAgBF,EAAS,eAAe,EAAIC,EAClDH,EAAK,KAAK,CACR,MAAOI,EACP,OAAQ,CAAC,CAAC,EACV,QAAS,CAACF,CAAQ,CACpB,CAAC,CACH,CACF,CAAC,EACGF,EAAK,SAAW,GAGpB,KAAK,iBAAiB,CACpB,WAAYA,EACZ,SAAAD,EACA,OAAAhB,CACF,CAAC,CACH,CAKA,iBAAiBvB,EAAQ,CACvB,GAAM,CACJ,WAAA6C,EACA,SAAAN,EACA,OAAAhB,CACF,EAAIvB,EAEJ,GAAI,EADoB,CAAC6C,GAAcA,EAAW,MAAMC,GAAmB,KAAK,2BAA2BA,CAAe,CAAC,GACrG,CACpB,GAAIP,EAAU,CACZ,IAAMQ,EAAUF,GAAcA,EAAW,OAAS,EAAIA,EAAW,CAAC,EAAE,QAAU,KAC9E,KAAK,gBAAgB,cAAcE,EAASR,EAAUhB,CAAM,CAC9D,CACA,MACF,CACA,IAAMyB,EAAc,CAAC,EACfC,EAAiB,CAAC,EACxBJ,EAAW,QAAQK,GAAO,CACxB,GAAM,CACJ,MAAAC,EACA,QAAAJ,EACA,OAAAK,CACF,EAAIF,EACEG,EAAY,CAAC,EACbC,EAAe,CAAC,EACtBP,EAAQ,QAAQjB,GAAOmB,EAAe,KAAKnB,CAAG,CAAC,EAC/C,IAAIyB,EAAmB,GACnBC,EAAY,EAChB,KAAOD,GAAkB,CAEvB,GADAC,IACIA,EAAY,IAAK,CACnBC,EAAW,mCAAmC,EAC9C,KACF,CACAF,EAAmB,GACnB,IAAMG,EAAa,CAAC,EAChBC,EAAmB,EACnBC,EAAqBT,EACzBJ,EAAQ,QAAQ,CAACjB,EAAK+B,IAAU,CAE9B,GADwBP,EAAaxB,EAAI,MAAM,CAAC,EAE9C8B,GAAsBP,EAAUvB,EAAI,MAAM,CAAC,MACtC,CACL4B,EAAW,KAAK5B,CAAG,EACnB,IAAMgC,EAAeV,EAAOS,CAAK,EACjCF,GAAoBG,CACtB,CACF,CAAC,EACD,IAAMC,EAAa,EAAIJ,EACvBD,EAAW,QAAQ,CAAC5B,EAAK+B,IAAU,CACjC,IAAMG,EAAUH,IAAUH,EAAW,OAAS,EAC1CO,EACAD,EACFC,EAAcL,GAEdK,EAAc,KAAK,MAAMb,EAAOS,CAAK,EAAIV,EAAQY,CAAU,EAC3DH,GAAsBK,GAExB,IAAMC,GAAWpC,EAAI,YAAY,EAC3BqC,GAAWrC,EAAI,YAAY,EAC7BmC,EAAcC,IAChBD,EAAcC,GACdZ,EAAaxB,EAAI,MAAM,CAAC,EAAI,GAC5ByB,EAAmB,IACVY,GAAW,GAAKF,EAAcE,KACvCF,EAAcE,GACdb,EAAaxB,EAAI,MAAM,CAAC,EAAI,GAC5ByB,EAAmB,IAErBF,EAAUvB,EAAI,MAAM,CAAC,EAAImC,CAC3B,CAAC,CACH,CACAlB,EAAQ,QAAQjB,GAAO,CACrB,IAAMsC,EAAWf,EAAUvB,EAAI,MAAM,CAAC,EAClBA,EAAI,eAAe,IACnBsC,IAClBtC,EAAI,eAAesC,EAAU7C,CAAM,EACnCyB,EAAY,KAAKlB,CAAG,EAExB,CAAC,CACH,CAAC,EACD,IAAMuC,EAAuBrB,EAAY,OAAS,EAC9CsB,EAAa,CAAC,EACdD,IACFC,EAAa,KAAK,qBAAqB,CACrC,aAAcrB,EACd,YAAa,EACf,CAAC,EACD,KAAK,mBAAmB,cAAc1B,CAAM,EAC5C,KAAK,mBAAmB,iBAAiB,EACzC,KAAK,sBAAsB,qBAAqB,GAElD,IAAMgD,EAAetB,EAAe,OAAOqB,CAAU,GACjDD,GAAwB9B,IAC1B,KAAK,gBAAgB,cAAcgC,EAAchC,EAAUhB,EAAQ+C,CAAU,CAEjF,CACA,2BAA2BxB,EAAiB,CAC1C,GAAM,CACJ,QAAAC,EACA,MAAAI,CACF,EAAIL,EACA0B,EAAsB,EACtBC,EAAsB,EACtBC,EAAiB,GACrB3B,EAAQ,QAAQjB,GAAO,CACrB,IAAMoC,EAAWpC,EAAI,YAAY,EACjC0C,GAAuBN,GAAY,EACnC,IAAMC,EAAWrC,EAAI,YAAY,EAC7BqC,EAAW,EACbM,GAAuBN,EAEvBO,EAAiB,EAErB,CAAC,EACD,IAAMC,EAAiBxB,GAASqB,EAC1BI,EAAiB,CAACF,GAAkBvB,GAASsB,EACnD,OAAOE,GAAkBC,CAC3B,CACA,qBAAqB5E,EAAS,CAAC,EAAG,CAChC,IAAMuB,EAASvB,EAAO,OAASA,EAAO,OAAS,OAI/C,GAHIA,EAAO,eAAiB,OAC1B,KAAK,kBAAoBA,EAAO,eAE9B,CAAC,KAAK,kBACR,MAAO,CAAC,EAEV,IAAM6E,EAAsB,KAAK,mBAAmB,cAAc,EAC9DC,EAAwB,GAC5B,GAAI9E,EAAO,aAAc,CACvB,IAAM+E,EAAkB,IAAI,IAAI/E,EAAO,YAAY,EACnD,QAASgF,EAAIH,EAAoB,OAAS,EAAGG,GAAK,EAAGA,IACnD,GAAID,EAAgB,IAAIF,EAAoBG,CAAC,CAAC,EAAG,CAC/CF,EAAwBE,EACxB,KACF,CAEJ,CACA,IAAIC,EAAoB,EACpBC,EAAiB,CAAC,EAClBC,EAAqB,EACrBC,EAAY,EAChB,QAASJ,EAAI,EAAGA,EAAIH,EAAoB,OAAQG,IAC/BH,EAAoBG,CAAC,EAAE,QAAQ,GAAKA,EAAIF,GAErDI,EAAe,KAAKL,EAAoBG,CAAC,CAAC,EAC1CI,GAAaP,EAAoBG,CAAC,EAAE,QAAQ,EAC5CG,GAAsBN,EAAoBG,CAAC,EAAE,YAAY,GAEzDC,GAAqBJ,EAAoBG,CAAC,EAAE,eAAe,EAG/D,GAAI,CAACE,EAAe,OAClB,MAAO,CAAC,EAEV,IAAIG,EAAiB,CAAC,EAClBJ,EAAoBE,EAAqB,KAAK,oBAChDD,EAAe,QAAQpD,GAAOA,EAAI,eAAeA,EAAI,YAAY,EAAGP,CAAM,CAAC,EAC3E8D,EAAiBH,EACjBA,EAAiB,CAAC,GAEpB,IAAMI,EAAqB,CAAC,EACxBC,EACJC,EAAO,OAAa,CAClBD,EAAyB,KAAK,kBAAoBN,EAClD,IAAMQ,EAAeF,EAAyBH,EAC9C,QAASJ,EAAI,EAAGA,EAAIE,EAAe,OAAQF,IAAK,CAC9C,IAAMlD,EAAMoD,EAAeF,CAAC,EACtBU,EAAkBD,EAAe3D,EAAI,QAAQ,EAC/C6D,EAAmB,EACjBzB,EAAWpC,EAAI,YAAY,EAC3BqC,EAAWrC,EAAI,YAAY,EAMjC,GALI4D,EAAkBxB,EACpByB,EAAmBzB,EACVwB,EAAkBvB,IAC3BwB,EAAmBxB,GAEjBwB,EAAkB,CACpB7D,EAAI,eAAe6D,EAAkBpE,CAAM,EAC3CqE,GAA0BV,EAAgBpD,CAAG,EAC7CsD,GAAatD,EAAI,QAAQ,EACzBuD,EAAe,KAAKvD,CAAG,EACvBmD,GAAqBnD,EAAI,eAAe,EACxC,SAAS0D,CACX,CACAF,EAAmBN,CAAC,EAAI,KAAK,MAAMU,CAAe,CACpD,CACA,KACF,CACA,IAAIG,EAAiBN,EACrB,OAAAL,EAAe,QAAQ,CAACpD,EAAKkD,IAAM,CACjClD,EAAI,eAAe,KAAK,IAAIwD,EAAmBN,CAAC,EAAGa,CAAc,EAAGtE,CAAM,EAC1E8D,EAAe,KAAKvD,CAAG,EACvB+D,GAAkBP,EAAmBN,CAAC,CACxC,CAAC,EACIhF,EAAO,aACV,KAAK,mBAAmB,cAAcuB,CAAM,EAE1CvB,EAAO,kBACT,KAAK,mBAAmB,iBAAiB,EAEvCA,EAAO,kBACT,KAAK,gBAAgB,cAAcqF,EAAgB,GAAM9D,EAAQ2D,CAAc,EAE1EA,CACT,CAEA,iBAAiBY,EAAWvE,EAAS,mBAAoBwE,EAAQ/F,EAAQ,CACvE,GAAI,KAAK,YAAY,8BAA8B,EAAG,CACpD,KAAK,YAAY,oBAAoB,IAAM,KAAK,iBAAiB8F,EAAWvE,EAAQwE,EAAQ/F,CAAM,CAAC,EACnG,MACF,CACA,IAAMgG,EAAY,CAAC,EACfhG,GACFA,GAAQ,cAAc,QAASiG,GAGzB,CAHyB,IAAAC,EAAAD,EAC7B,KAAA5E,CAjzIR,EAgzIqC6E,EAE1BC,EAAAC,GAF0BF,EAE1B,CADH,QAGAF,EAAU,OAAO3E,GAAQ,SAAWA,EAAMA,EAAI,SAAS,CAAC,EAAI8E,CAC9D,CAAC,EAEH,IAAME,EAAsB,KAAK,mBAAmB,WAAW,EACzDC,EAAsBR,IAAcS,GAAqBF,CAAmB,EAClF,GAAIP,GAAa,GAAK,CAACO,EAAoB,QAAUC,EACnD,OAEF,IAAME,EAAe,CAAC,EAChBC,EAAkB,CAAC,EACzBJ,EAAoB,QAAQ9G,GAAU,CAChCA,EAAO,UAAU,EAAE,oBAAsB,GAC3CkH,EAAgB,KAAKlH,CAAM,EAE3BiH,EAAa,KAAKjH,CAAM,CAE5B,CAAC,EACD,IAAMmH,EAAyBF,EAAa,MAAM,CAAC,EAC/CG,EAAmB,GACjBC,EAAkBrH,GAAU,CAChCsH,EAAiBL,EAAcjH,CAAM,EACrCkH,EAAgB,KAAKlH,CAAM,CAC7B,EAaA,IAZAiH,EAAa,QAAQjH,GAAU,CAC7BA,EAAO,iBAAiBgC,CAAM,EAC9B,IAAMuF,EAAgBd,IAAYzG,EAAO,MAAM,CAAC,EAC1CwH,EAAcD,GAAe,UAAY9G,GAAQ,gBACjDgH,EAAcF,GAAe,UAAY9G,GAAQ,gBACjDiH,EAAW1H,EAAO,eAAe,EACnC,OAAOwH,GAAgB,UAAYE,EAAWF,EAChDxH,EAAO,eAAewH,EAAaxF,EAAQ,EAAI,EACtC,OAAOyF,GAAgB,UAAYC,EAAWD,GACvDzH,EAAO,eAAeyH,EAAazF,EAAQ,EAAI,CAEnD,CAAC,EACM,CAACoF,GAAkB,CACxBA,EAAmB,GACnB,IAAMO,EAAkBpB,EAAYS,GAAqBE,CAAe,EACxE,GAAIS,GAAmB,EACrBV,EAAa,QAAQjH,GAAU,CAC7B,IAAMuH,EAAgBd,IAAYzG,EAAO,MAAM,CAAC,GAAG,UAAYS,GAAQ,gBACvE,GAAI,OAAO8G,GAAkB,SAAU,CACrCvH,EAAO,eAAeuH,EAAevF,EAAQ,EAAI,EACjD,MACF,CACAhC,EAAO,WAAWgC,CAAM,CAC1B,CAAC,MACI,CACL,IAAM4F,EAAQD,EAAkBX,GAAqBC,CAAY,EAC7DY,EAAmBF,EACvB,QAASlC,EAAIwB,EAAa,OAAS,EAAGxB,GAAK,EAAGA,IAAK,CACjD,IAAMzF,EAASiH,EAAaxB,CAAC,EACvB8B,EAAgBd,IAAYzG,EAAO,MAAM,CAAC,EAC1CwH,EAAcD,GAAe,UAAY9G,GAAQ,gBACjDgH,EAAcF,GAAe,UAAY9G,GAAQ,gBACjDqH,EAAc9H,EAAO,YAAY,EACjC+H,EAAc/H,EAAO,YAAY,EACjC2E,EAAW,OAAO6C,GAAgB,UAAYA,EAAcM,EAAcN,EAAcM,EACxFlD,EAAW,OAAO6C,GAAgB,UAAYA,EAAcM,EAAcN,EAAcM,EAC1FlD,EAAW,KAAK,MAAM7E,EAAO,eAAe,EAAI4H,CAAK,EACrD/C,EAAWF,GACbE,EAAWF,EACX0C,EAAgBrH,CAAM,EACtBoH,EAAmB,IACVvC,EAAWD,GACpBC,EAAWD,EACXyC,EAAgBrH,CAAM,EACtBoH,EAAmB,IACV3B,IAAM,IACfZ,EAAWgD,GAEb7H,EAAO,eAAe6E,EAAU7C,EAAQ,EAAI,EAC5C6F,GAAoBhD,CACtB,CACF,CACF,CACAsC,EAAuB,QAAQ5E,GAAO,CACpCA,EAAI,4BAA4BP,CAAM,CACxC,CAAC,EACD,KAAK,mBAAmB,cAAcA,CAAM,EAC5C,KAAK,mBAAmB,iBAAiB,EACrC,CAAAwE,GAGJ,KAAK,gBAAgB,cAAcW,EAAwB,GAAMnF,CAAM,CACzE,CACA,uBAAwB,CACtB,IAAMgG,EAAmB,KAAK,IAAI,IAAI,kBAAkB,EACxD,GAAI,CAACA,EACH,OAEF,GAAM,CACJ,KAAAC,CACF,EAAID,EACJ,WAAW,IAAM,CACf,GAAIC,IAAS,eAAgB,CAC3B,GAAM,CACJ,aAAcC,EACd,gBAAAC,EACA,gBAAAC,CACF,EAAIJ,EACEK,EAAeH,GAAkB,IAAI,CAAC,CAC1C,MAAOpG,EACP,SAAA6C,EACA,SAAAC,CACF,KAAO,CACL,IAAA9C,EACA,SAAA6C,EACA,SAAAC,CACF,EAAE,EACF,KAAK,aAAa,gBAAgB,EAAE,iBAAiB,CACnD,gBAAAuD,EACA,gBAAAC,EACA,aAAAC,CACF,CAAC,CACH,MAAWJ,IAAS,oBAClB,KAAK,iBAAiBD,EAAiB,MAAO,kBAAkB,CAEpE,CAAC,CACH,CACF,EAGA,SAASM,GAA0BC,EAASC,EAAY,CACtD,OAAOD,EAAU,IAAMC,CACzB,CACA,SAASC,EAAclG,EAAK,CAC1B,OAAOA,aAAemG,EACxB,CACA,IAAIA,GAAgB,cAAc5I,CAAS,CACzC,YAAYO,EAAqBkI,EAASI,EAAQC,EAAQ,CACxD,MAAM,EACN,KAAK,SAAW,GAEhB,KAAK,kBAAoB,CAAC,EAC1B,KAAK,OAAS,KACd,KAAK,QAAUL,EACf,KAAK,OAASI,EACd,KAAK,oBAAsBtI,EAC3B,KAAK,OAASuI,CAChB,CAGA,OAAQ,CACN,KAAK,OAAS,KACd,KAAK,SAAW,KAChB,KAAK,kBAAoB,IAC3B,CACA,WAAY,CACV,OAAO,KAAK,MACd,CACA,UAAUC,EAAQ,CAChB,KAAK,OAASA,CAChB,CACA,aAAc,CACZ,OAAOP,GAA0B,KAAK,QAAS,KAAK,MAAM,CAC5D,CACA,cAAe,CACb,OAAO,KAAK,kBAAkB,SAAW,CAC3C,CACA,UAAW,CACT,IAAMQ,EAAiB,KAAK,uBAAuB,EAAE,eAAe,EACpE,MAAI,CAACA,GAAkBA,EAAe,SAAW,EACxC,GAEFA,EAAe,MAAMvG,GAAOA,EAAI,SAAS,CAAC,CACnD,CACA,WAAY,CAMV,GALA,KAAK,kBAAkB,QAAQwG,GAAS,CAClCN,EAAcM,CAAK,GACrBA,EAAM,UAAU,CAEpB,CAAC,EACG,KAAK,kBAAkB,OAAS,EAClC,GAAI,KAAK,IAAI,IAAI,WAAW,EAAG,CAE7B,IAAMC,EADYC,EAAM,KAAK,iBAAiB,EACd,QAAQ,EACxC,KAAK,QAAQD,CAAa,CAC5B,KAAO,CACL,IAAME,EAAiB,KAAK,kBAAkB,CAAC,EAAE,QAAQ,EACzD,KAAK,QAAQA,CAAc,CAC7B,MAEA,KAAK,QAAQ,IAAI,CAErB,CACA,SAAU,CACR,OAAO,KAAK,IACd,CACA,YAAa,CACX,OAAO,KAAK,OACd,CACA,QAAQC,EAAM,CACZ,KAAK,QAAU,KAAK,KAChB,KAAK,OAASA,IAChB,KAAK,KAAOA,EACZ,KAAK,mBAAmB,CACtB,KAAM,aACR,CAAC,EAEL,CACA,WAAY,CACV,OAAO,KAAK,MACd,CACA,YAAa,CACX,OAAO,KAAK,OACd,CACA,WAAY,CACV,OAAO,KAAK,MACd,CACA,gBAAiB,CACf,IAAIC,EAAmB,EACvB,OAAI,KAAK,mBACP,KAAK,kBAAkB,QAAQL,GAAS,CACtCK,GAAoBL,EAAM,eAAe,CAC3C,CAAC,EAEIK,CACT,CACA,aAAc,CACZ,GAAI,CAAC,KAAK,kBACR,MAAO,GAET,IAAIC,EAAS,GACb,YAAK,kBAAkB,QAAQN,GAAS,CAClCA,EAAM,YAAY,IACpBM,EAAS,GAEb,CAAC,EACMA,CACT,CACA,aAAc,CACZ,IAAIA,EAAS,EACb,YAAK,kBAAkB,QAAQC,GAAc,CAC3CD,GAAUC,EAAW,YAAY,CACnC,CAAC,EACMD,CACT,CACA,SAASN,EAAO,CACT,KAAK,WACR,KAAK,SAAW,CAAC,GAEnB,KAAK,SAAS,KAAKA,CAAK,CAC1B,CACA,sBAAuB,CACrB,OAAO,KAAK,iBACd,CACA,gBAAiB,CACf,IAAMM,EAAS,CAAC,EAChB,YAAK,eAAeA,CAAM,EACnBA,CACT,CACA,yBAA0B,CACxB,IAAMA,EAAS,CAAC,EAChB,YAAK,wBAAwBA,CAAM,EAC5BA,CACT,CACA,eAAgB,CACd,OAAO,KAAK,oBAAoB,eAAe,CACjD,CACA,gBAAiB,CACf,OAAO,KAAK,oBAAoB,eAAe,CACjD,CACA,WAAY,CACV,OAAO,KAAK,oBAAoB,UAAU,CAC5C,CACA,cAAe,CACb,OAAO,KAAK,oBAAoB,aAAa,CAC/C,CACA,YAAa,CACX,OAAO,KAAK,oBAAoB,WAAW,CAC7C,CACA,YAAYE,EAAU,CACpB,KAAK,oBAAoB,YAAYA,CAAQ,CAC/C,CACA,wBAAwBC,EAAa,CACnC,KAAK,kBAAkB,QAAQT,GAAS,CAClCU,GAASV,CAAK,EAChBS,EAAY,KAAKT,CAAK,EACbN,EAAcM,CAAK,GAC5BA,EAAM,wBAAwBS,CAAW,CAE7C,CAAC,CACH,CACA,eAAeA,EAAa,CAC1B,KAAK,SAAS,QAAQT,GAAS,CACzBU,GAASV,CAAK,EAChBS,EAAY,KAAKT,CAAK,EACbN,EAAcM,CAAK,GAC5BA,EAAM,eAAeS,CAAW,CAEpC,CAAC,CACH,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,oBAAqB,CACnB,OAAO,KAAK,oBAAoB,mBAAmB,CACrD,CACA,wBAAyB,CACvB,OAAO,KAAK,mBACd,CACA,iBAAkB,CAChB,IAAMX,EAAS,KAAK,UAAU,EAC9B,MAAI,CAAC,KAAK,UAAU,GAAK,CAACA,GAAU,CAACA,EAAO,UAAU,EAC7C,EAEF,EAAIA,EAAO,gBAAgB,CACpC,CACA,2BAA4B,CAC1B,KAAK,kBAAoB,CAAC,EAC1B,IAAIa,EAAsB,KAC1B,KAAOA,GAAuB,MAAQA,EAAoB,UAAU,GAClEA,EAAsBA,EAAoB,UAAU,EAGtD,GAAI,EADiBA,EAAsBA,EAAoB,uBAAuB,EAAE,aAAa,EAAI,IACtF,CACjB,KAAK,kBAAoB,KAAK,SAC9B,KAAK,mBAAmB,CACtB,KAAM,0BACR,CAAC,EACD,MACF,CACA,KAAK,SAAS,QAAQX,GAAS,CAE7B,GADmBN,EAAcM,CAAK,IAAM,CAACA,EAAM,mBAAqB,CAACA,EAAM,kBAAkB,QAE/F,OAGF,OADwBA,EAAM,mBAAmB,EACxB,CACvB,IAAK,OACCW,EAAoB,uBAAuB,EAAE,WAAW,GAC1D,KAAK,kBAAkB,KAAKX,CAAK,EAEnC,MACF,IAAK,SACEW,EAAoB,uBAAuB,EAAE,WAAW,GAC3D,KAAK,kBAAkB,KAAKX,CAAK,EAEnC,MACF,QACE,KAAK,kBAAkB,KAAKA,CAAK,EACjC,KACJ,CACF,CAAC,EACD,KAAK,mBAAmB,CACtB,KAAM,0BACR,CAAC,CACH,CACF,EAGIY,GAAyB,KAAM,CACjC,aAAc,CAEZ,KAAK,YAAc,CAAC,CACtB,CACA,oBAAoB7H,EAAK,CACvB,IAAM8H,EAAa,KAAK,YAAY9H,CAAG,EACnCuH,EACJ,OAAI,OAAOO,GAAe,SACxBP,EAAS,EAETA,EAASO,EAAa,EAExB,KAAK,YAAY9H,CAAG,EAAIuH,EACjBA,CACT,CACF,EAGIQ,GAAqB,cAAc/J,CAAS,CAC9C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,qBAEhB,KAAK,iBAAmB,CAAC,EAEzB,KAAK,YAAc,CAAC,EACpB,KAAK,aAAe,CAAC,EACrB,KAAK,cAAgB,CAAC,EAEtB,KAAK,QAAU,CAAC,EAChB,KAAK,UAAY,EACjB,KAAK,UAAY,EACjB,KAAK,WAAa,EAClB,KAAK,eAAiB,EACxB,CACA,UAAUC,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,gBAAkBA,EAAM,qBAC/B,CACA,QAAQiC,EAAQ8H,EAAgB,GAAO,CAChCA,GACH,KAAK,WAAW,EAElB,KAAK,yCAAyC,EAC9C,KAAK,YAAcC,GAAkB,KAAK,QAAQ,EAClD,KAAK,cAAgBA,GAAkB,KAAK,UAAU,EACtD,KAAK,aAAeA,GAAkB,KAAK,SAAS,EACpD,KAAK,kBAAkB,EACvB,KAAK,SAAS,EACd,KAAK,cAAc/H,CAAM,EACzB,KAAK,eAAiB,KAAK,QAAQ,OAAOO,GAAOA,EAAI,aAAa,CAAC,EACnE,KAAK,kBAAkB,qBAAqB,EAC5C,KAAK,iBAAiB,EACtB,KAAK,sBAAsB,qBAAqB,EAAK,EACrD,KAAK,+BAA+BP,CAAM,EAC1C,KAAK,gBAAgB,YAAY,CACnC,CAEA,kBAAmB,CACjB,IAAMgI,EAAehD,GAAqB,KAAK,aAAa,EACtDiD,EAAejD,GAAqB,KAAK,WAAW,EACpDkD,EAAgBlD,GAAqB,KAAK,YAAY,EAG5D,GAFA,KAAK,eAAiB,KAAK,YAAcgD,EACf,KAAK,YAAcA,GAAgB,KAAK,YAAcC,GAAgB,KAAK,aAAeC,EAC7F,CACrB,KAAK,UAAYF,EACjB,KAAK,UAAYC,EACjB,KAAK,WAAaC,EAClB,IAAMC,EAAM,CACV,KAAM,6BACR,EACA,KAAK,aAAa,cAAcA,CAAG,EACnC,IAAMC,EAAQ,CACZ,KAAM,8BACR,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACF,CAEA,cAAcpI,EAAQ,CACpB,KAAK,oBAAoBA,CAAM,EAC/B,KAAK,sBAAsB,CAC7B,CACA,+BAA+BA,EAAQ,CACrC,IAAIqI,EACAC,EACA,KAAK,IAAI,IAAI,WAAW,GAC1BD,EAAW,KAAK,YAAc,KAAK,YAAY,CAAC,EAAI,KACpDC,EAAa,KAAK,aAAerB,EAAM,KAAK,YAAY,EAAI,OAE5DoB,EAAW,KAAK,YAAcpB,EAAM,KAAK,WAAW,EAAI,KACxDqB,EAAa,KAAK,aAAe,KAAK,aAAa,CAAC,EAAI,MAE1D,KAAK,YAAY,QAAQ,EAAE,QAAQ/H,GAAO,CACxCA,EAAI,kBAAkBA,IAAQ8H,EAAUrI,CAAM,EAC9CO,EAAI,oBAAoBA,IAAQ+H,EAAYtI,CAAM,CACpD,CAAC,CACH,CACA,YAAa,CACX,IAAMuI,EAAO,KAAK,YAAY,cAAc,EACtCC,EAAWD,EAAK,OAAOhI,GAAOA,EAAI,UAAU,GAAK,MAAM,EACvDkI,EAAYF,EAAK,OAAOhI,GAAOA,EAAI,UAAU,GAAK,OAAO,EACzDmI,EAAaH,EAAK,OAAOhI,GAAOA,EAAI,UAAU,GAAK,QAAUA,EAAI,UAAU,GAAK,OAAO,EACvFoI,EAAY,IAAIhB,GACtB,KAAK,SAAW,KAAK,aAAa,CAChC,QAASa,EACT,UAAAG,EACA,OAAQ,OACR,mBAAoB,KAAK,QAC3B,CAAC,EACD,KAAK,UAAY,KAAK,aAAa,CACjC,QAASF,EACT,UAAAE,EACA,OAAQ,QACR,mBAAoB,KAAK,SAC3B,CAAC,EACD,KAAK,WAAa,KAAK,aAAa,CAClC,QAASD,EACT,UAAAC,EACA,OAAQ,KACR,mBAAoB,KAAK,UAC3B,CAAC,EACD,KAAK,uBAAuB,CAC9B,CACA,OAAQ,CACN,KAAK,YAAc,CAAC,EACpB,KAAK,aAAe,CAAC,EACrB,KAAK,cAAgB,CAAC,EACtB,KAAK,QAAU,CAAC,EAChB,KAAK,iBAAmB,CAAC,CAC3B,CACA,mBAAoB,CAClB,IAAMC,EAAa,KAAK,YAAY,QAAQ,EACtCC,EAAa,CAAC,EACdC,EAAS,CAAC,EACVC,EAAc,CAAC,EACrB,QAAWxI,KAAOqI,EAAY,CAC5B,IAAMhC,EAASrG,EAAI,UAAU,EACxBqG,EAEMA,IAAW,IAAQA,IAAW,OACvCiC,EAAW,KAAKtI,CAAG,EAEnBwI,EAAY,KAAKxI,CAAG,EAJpBuI,EAAO,KAAKvI,CAAG,CAMnB,CACA,KAAK,iBAAmBsI,EAAW,OAAOC,CAAM,EAAE,OAAOC,CAAW,CACtE,CACA,gBAAgBC,EAAY,CAC1B,IAAIzI,EACJ,OAAIkG,EAAcuC,CAAU,EAC1BzI,EAAMyI,EAAW,eAAe,EAAE,CAAC,EAEnCzI,EAAMyI,EAED,KAAK,iBAAiB,QAAQzI,CAAG,EAAI,CAC9C,CACA,sBAAuB,CACrB,OAAO,KAAK,cACd,CACA,uBAAwB,CACtB,CAAC,KAAK,SAAU,KAAK,UAAW,KAAK,UAAU,EAAE,QAAQiB,GAAW,CAClEA,EAAQ,QAAQxD,GAAU,CACpByI,EAAczI,CAAM,GACFA,EACR,UAAU,CAE1B,CAAC,CACH,CAAC,CACH,CACA,oBAAoBgC,EAAQ,CAE1B,GAAI,CADgB,KAAK,YAAY,cAAc,EAEjD,OAEF,IAAM4I,EAAa,KAAK,YAAY,QAAQ,EAAE,MAAM,CAAC,EAC/CK,EAAW,KAAK,IAAI,IAAI,WAAW,EACzC,CAAC,KAAK,YAAa,KAAK,aAAc,KAAK,aAAa,EAAE,QAAQzH,GAAW,CAC3E,GAAIyH,EAAU,CACZ,IAAI9B,EAAOnC,GAAqBxD,CAAO,EACvCA,EAAQ,QAAQxD,GAAU,CACxBmJ,GAAQnJ,EAAO,eAAe,EAC9BA,EAAO,QAAQmJ,EAAMnH,CAAM,CAC7B,CAAC,CACH,KAAO,CACL,IAAImH,EAAO,EACX3F,EAAQ,QAAQxD,GAAU,CACxBA,EAAO,QAAQmJ,EAAMnH,CAAM,EAC3BmH,GAAQnJ,EAAO,eAAe,CAChC,CAAC,CACH,CACAkL,GAA6BN,EAAYpH,CAAO,CAClD,CAAC,EACDoH,EAAW,QAAQ5K,GAAU,CAC3BA,EAAO,QAAQ,KAAMgC,CAAM,CAC7B,CAAC,CACH,CACA,UAAW,CACL,KAAK,IAAI,IAAI,WAAW,EAC1B,KAAK,QAAU,KAAK,aAAa,OAAO,KAAK,aAAa,EAAE,OAAO,KAAK,WAAW,EAEnF,KAAK,QAAU,KAAK,YAAY,OAAO,KAAK,aAAa,EAAE,OAAO,KAAK,YAAY,CAEvF,CACA,eAAgB,CACd,OAAO,KAAK,aACd,CACA,aAAc,CACZ,OAAI,KAAK,UAAY,KAAK,WAAa,KAAK,WACnC,KAAK,SAAS,OAAO,KAAK,UAAU,EAAE,OAAO,KAAK,SAAS,EAE7D,IACT,CAEA,aAAc,CACZ,OAAO,KAAK,QACd,CAEA,cAAe,CACb,OAAO,KAAK,SACd,CAEA,eAAgB,CACd,OAAO,KAAK,UACd,CAEA,YAAa,CACX,OAAO,KAAK,OACd,CAEA,eAAehC,EAAQ,CACrB,OAAO,KAAK,WAAW,EAAE,QAAQA,CAAM,GAAK,CAC9C,CACA,kBAAkBmL,EAAS,CAEzB,OADsB,KAAK,YAAY,gBAAgB,EAIhD,KAAK,cAAcA,EAAS,KAAK,WAAW,EAF1C,KAAK,WAGhB,CACA,mBAAmBA,EAAS,CAE1B,OADsB,KAAK,YAAY,gBAAgB,EAIhD,KAAK,cAAcA,EAAS,KAAK,YAAY,EAF3C,KAAK,YAGhB,CACA,cAAcA,EAASC,EAAkBC,EAAgBC,EAAwB,CAC/E,IAAMjC,EAAS,CAAC,EACZkC,EAAoB,KACxB,QAAS9F,EAAI,EAAGA,EAAI2F,EAAiB,OAAQ3F,IAAK,CAChD,IAAMlD,EAAM6I,EAAiB3F,CAAC,EACxB+F,EAAoBJ,EAAiB,OAAS3F,EAC9CgG,EAAU,KAAK,IAAIlJ,EAAI,WAAW4I,CAAO,EAAGK,CAAiB,EAC7DE,EAAuB,CAACnJ,CAAG,EACjC,GAAIkJ,EAAU,EAAG,CACf,IAAME,EAAeF,EAAU,EAC/B,QAASG,EAAI,EAAGA,GAAKD,EAAcC,IACjCF,EAAqB,KAAKN,EAAiB3F,EAAImG,CAAC,CAAC,EAEnDnG,GAAKkG,CACP,CACA,IAAIE,EACAR,GACFQ,EAAe,GACfH,EAAqB,QAAQI,GAAgB,CACvCT,EAAeS,CAAY,IAC7BD,EAAe,GAEnB,CAAC,GAEDA,EAAe,GAEbA,IACExC,EAAO,SAAW,GAAKkC,IACDD,GAAyBA,EAAuB/I,CAAG,IAEzE8G,EAAO,KAAKkC,CAAiB,EAGjClC,EAAO,KAAK9G,CAAG,GAEjBgJ,EAAoBhJ,CACtB,CACA,OAAO8G,CACT,CAKA,uBAAwB,CACtB,OAAO,KAAK,SACd,CACA,kBAAkBT,EAAQ,CACxB,OAAQA,EAAQ,CACd,IAAK,OACH,OAAO,KAAK,UACd,IAAK,QACH,OAAO,KAAK,WACd,QACE,OAAO,KAAK,SAChB,CACF,CAEA,eAAgB,CACd,OAAO,KAAK,aACd,CAEA,aAAc,CACZ,OAAO,KAAK,WACd,CACA,cAAe,CACb,OAAO,KAAK,YACd,CACA,aAAarG,EAAK,CAChB,IAAMuE,EAAsB,KAAK,WAAW,EACtCiF,EAAWjF,EAAoB,QAAQvE,CAAG,EAChD,OAAIwJ,EAAW,EACNjF,EAAoBiF,EAAW,CAAC,EAElC,IACT,CACA,oBAAoB3L,EAAa4L,EAAW,CAC1C,IAAMC,EAAgB7L,EAAY,uBAAuB,EAAE,SAAS,EAAIA,EAAY,gBAAgB,EAC9F8L,EAAsB9L,EAAY,wBAAwB,EAC1DmC,EAAMyJ,IAAc,QAAU/C,EAAMiD,CAAmB,EAAIA,EAAoB,CAAC,EAChFC,EAAsB,SAASH,CAAS,GAC9C,OAAa,CACX,IAAMhM,EAAS,KAAKmM,CAAmB,EAAE5J,CAAG,EAC5C,GAAI,CAACvC,EACH,OAAO,KAET,IAAMoM,EAAe,KAAK,mBAAmBpM,EAAQiM,CAAa,EAClE,GAAIG,IAAiBhM,EACnB,OAAOgM,CAEX,CACF,CACA,mBAAmBpM,EAAQqM,EAAO,CAChC,IAAID,EAAepM,EAAO,UAAU,EAChCsM,EACAC,EACJ,KAEED,EADwCF,EAAa,uBAAuB,EACvB,SAAS,EAC9DG,EAAoBH,EAAa,gBAAgB,EAC7C,EAAAE,EAAqBC,GAAqBF,IAG9CD,EAAeA,EAAa,UAAU,EAExC,OAAOA,CACT,CACA,eAAgB,CACd,OAAO,KAAK,YAAY,OAAS,CACnC,CACA,gBAAiB,CACf,OAAO,KAAK,aAAa,OAAS,CACpC,CACA,wBAAyB,CACvB,KAAK,iBAAmB,CAAC,EACzB,IAAMI,EAAOzD,GAAS,CACpB,KAAK,iBAAiBA,EAAM,YAAY,CAAC,EAAIA,CAC/C,EACA0D,GAA8B,KAAK,WAAY,GAAOD,CAAI,EAC1DC,GAA8B,KAAK,SAAU,GAAOD,CAAI,EACxDC,GAA8B,KAAK,UAAW,GAAOD,CAAI,CAC3D,CACA,UAAUE,EAAM,CAEd,OADgB,KAAK,iBAAiBA,EAAK,YAAY,CAAC,IACrCA,CACrB,CACA,0CAA2C,CACzC,IAAMC,EAAkB,KAAK,YAAY,EACzCF,GAA8BE,EAAiB,GAAO5D,GAAS,CACzDN,EAAcM,CAAK,GACrBA,EAAM,0BAA0B,CAEpC,CAAC,CACH,CACA,gBAAiB,CACf,IAAM6D,EAAQ,KAAK,IAAI,IAAI,WAAW,EAChCC,EAAa,CAAC,cAAe,gBAAiB,cAAc,EAC9DD,GACFC,EAAW,QAAQ,EAErB,QAAS,EAAI,EAAG,EAAIA,EAAW,OAAQ,IAAK,CAC1C,IAAMC,EAAY,KAAKD,EAAW,CAAC,CAAC,EAAE,EACtC,GAAIC,EAAU,OACZ,OAAOF,EAAQ3D,EAAM6D,CAAS,EAAIA,EAAU,CAAC,CAEjD,CACA,OAAO,IACT,CAGA,eAAeC,EAAOpE,EAAQ,CAC5B,GAAI,CAACoE,EACH,OAAO,KAET,GAAItE,EAAcsE,CAAK,EACrB,OAAOA,EAET,IAAMJ,EAAkB,KAAK,YAAY,EACnCK,EAAc,OAAOrE,GAAW,SAClCU,EAAS,KACb,OAAAoD,GAA8BE,EAAiB,GAAO5D,GAAS,CAC7D,GAAIN,EAAcM,CAAK,EAAG,CACxB,IAAM3I,EAAc2I,EAChBkE,EACAD,EACFC,EAAUF,IAAU3M,EAAY,WAAW,GAAKuI,IAAWvI,EAAY,UAAU,EAEjF6M,EAAUF,IAAU3M,EAAY,WAAW,EAEzC6M,IACF5D,EAASjJ,EAEb,CACF,CAAC,EACMiJ,CACT,CAGA,YAAY9G,EAAK,CACf,IAAMuE,EAAsB,KAAK,WAAW,EACtCiF,EAAWjF,EAAoB,QAAQvE,CAAG,EAChD,OAAIwJ,EAAWjF,EAAoB,OAAS,EACnCA,EAAoBiF,EAAW,CAAC,EAElC,IACT,CACA,kBAAmB,CACjB,OAAO,KAAK,cACd,CACA,mBAAoB,CAClB,KAAK,eAAiB,EACxB,CAIA,kBAAmB,CACjB,OAAO/E,GAAqB,KAAK,WAAW,CAC9C,CAEA,+BAAgC,CAC9B,OAAOA,GAAqB,KAAK,YAAY,CAC/C,CACA,YAAYzE,EAAK2K,EAAM,CACrB,IAAMtC,EAAa,KAAK,WAAW,EACnC,GAAI,CAACA,EAAW,OACd,MAAO,GAET,IAAMuC,EAAUD,IAAS,QACrBE,EACJ,GAAI3E,EAAclG,CAAG,EAAG,CACtB,IAAMiH,EAAcjH,EAAI,wBAAwB,EAChD,GAAI,CAACiH,EAAY,OACf,MAAO,GAET4D,EAAkBD,EAAU3D,EAAY,CAAC,EAAIP,EAAMO,CAAW,CAChE,MACE4D,EAAkB7K,EAEpB,OAAQ4K,EAAUvC,EAAW,CAAC,EAAI3B,EAAM2B,CAAU,KAAOwC,CAC3D,CACA,aAAa3M,EAAQ,CACnB,GAAM,CACJ,QAAA+C,EACA,UAAAmH,EACA,OAAA/B,EACA,mBAAAyE,EACA,sBAAAC,CACF,EAAI7M,EACE8M,EAAmB,KAAK,iBAAiBF,CAAkB,EAC3DG,EAAqB,CAAC,EACxBC,EAA6BjK,EACjC,KAAOiK,EAA2B,QAAQ,CACxC,IAAMC,EAAqBD,EAC3BA,EAA6B,CAAC,EAC9B,IAAIE,EAAoB,EAClBC,EAAqBC,GAAM,CAC/B,IAAMC,EAAOH,EACbA,EAAoBE,EACpB,IAAME,EAAeL,EAAmBI,CAAI,EAEtCE,GADuBvF,EAAcsF,CAAY,EAAIA,EAAa,uBAAuB,EAAIA,GACnD,kBAAkB,EAClE,GAAIC,GAAsB,KAAM,CAC9B,QAASvI,EAAIqI,EAAMrI,EAAIoI,EAAIpI,IACzB+H,EAAmB,KAAKE,EAAmBjI,CAAC,CAAC,EAE/C,MACF,CACA,IAAMwI,EAAW,KAAK,eAAeD,EAAoBrD,EAAW4C,EAAkB3E,EAAQ0E,CAAqB,EACnH,QAAS7H,EAAIqI,EAAMrI,EAAIoI,EAAIpI,IACzBwI,EAAS,SAASP,EAAmBjI,CAAC,CAAC,EAEzCgI,EAA2B,KAAKQ,CAAQ,CAC1C,EACA,QAASxI,EAAI,EAAGA,EAAIiI,EAAmB,OAAQjI,IAAK,CAClD,IAAMyI,EAAWR,EAAmBjI,CAAC,EAE/B0I,GADmB1F,EAAcyF,CAAQ,EAAIA,EAAS,uBAAuB,EAAIA,GAC/C,kBAAkB,EACpDH,EAAeL,EAAmBC,CAAiB,EAEnDK,GADuBvF,EAAcsF,CAAY,EAAIA,EAAa,uBAAuB,EAAIA,GACnD,kBAAkB,EAC9DI,IAAmBH,GACrBJ,EAAmBnI,CAAC,CAExB,CACIkI,EAAoBD,EAAmB,QACzCE,EAAmBF,EAAmB,MAAM,CAEhD,CACA,OAAKJ,GACH,KAAK,qBAAqBE,EAAoB,IAAI,EAE7CA,CACT,CACA,eAAeY,EAAeC,EAAwBd,EAAkB3E,EAAQ0E,EAAuB,CACrG,IAAM/E,EAAU6F,EAAc,WAAW,EACnC5F,EAAa6F,EAAuB,oBAAoB9F,CAAO,EAC/D+F,EAAWhG,GAA0BC,EAASC,CAAU,EAC1DpI,EAAcmN,EAAiBe,CAAQ,EAC3C,OAAIlO,GAAeA,EAAY,uBAAuB,IAAMgO,IAC1DhO,EAAc,MAEZS,EAAQT,CAAW,EACrBA,EAAY,MAAM,GAElBA,EAAc,IAAIsI,GAAc0F,EAAe7F,EAASC,EAAYI,CAAM,EACrE0E,GACH,KAAK,WAAWlN,CAAW,GAGxBA,CACT,CAEA,iBAAiBmO,EAAiB,CAChC,IAAMlF,EAAS,CAAC,EACVmF,EAAYC,GAAmB,CACnCA,EAAgB,QAAQC,GAAiB,CACvC,GAAIjG,EAAciG,CAAa,EAAG,CAChC,IAAMtO,EAAcsO,EACpBrF,EAAOqF,EAAc,YAAY,CAAC,EAAItO,EACtCoO,EAAUpO,EAAY,YAAY,CAAC,CACrC,CACF,CAAC,CACH,EACA,OAAImO,GACFC,EAAUD,CAAe,EAEpBlF,CACT,CACA,qBAAqBoF,EAAiB5F,EAAQ,CAC5C4F,EAAgB,QAAQE,GAAkB,CAExC,GADAA,EAAe,UAAU9F,CAAM,EAC3BJ,EAAckG,CAAc,EAAG,CACjC,IAAMvO,EAAcuO,EACpB,KAAK,qBAAqBvO,EAAY,YAAY,EAAGA,CAAW,CAClE,CACF,CAAC,CACH,CACF,EACA,SAASqM,GAA8BvK,EAAM0M,EAAsBC,EAAU,CAC3E,GAAK3M,EAGL,QAASuD,EAAI,EAAGA,EAAIvD,EAAK,OAAQuD,IAAK,CACpC,IAAMsD,EAAQ7G,EAAKuD,CAAC,EACpB,GAAIgD,EAAcM,CAAK,EAAG,CACxB,IAAM+F,EAAYF,EAAuB7F,EAAM,qBAAqB,EAAIA,EAAM,YAAY,EAC1F0D,GAA8BqC,EAAWF,EAAsBC,CAAQ,CACzE,CACAA,EAAS9F,CAAK,CAChB,CACF,CACA,SAASgB,GAAkB7H,EAAM,CAC/B,IAAM6M,EAAM,CAAC,EACb,OAAAtC,GAA8BvK,EAAM,GAAM6G,GAAS,CAC7CU,GAASV,CAAK,GAChBgG,EAAI,KAAKhG,CAAK,CAElB,CAAC,EACMgG,CACT,CAGA,IAAIC,GAAgB,CAAC,0BAA2B,mBAAoB,yBAA0B,0BAA2B,wBAAyB,sBAAuB,qBAAsB,qBAAsB,qBAAsB,cAAe,gBAAiB,eAAgB,oBAAqB,gBAAiB,0BAA2B,wBAAyB,wBAAyB,yBAA0B,sBAAuB,0BAA2B,2BAA4B,iBAAkB,iBAAkB,uBAAwB,wBAAyB,eAAgB,6BAA8B,sBAAuB,iBAAkB,0BAA2B,uBAAwB,eAAgB,WAAY,SAAU,aAAc,WAAY,YAAa,UAAW,mBAAoB,iBAAkB,cAAe,YAAa,cAAe,YAAa,cAAe,oBAAqB,gBAAiB,kBAAmB,mBAAoB,kBAAmB,kBAAmB,gBAAiB,cAAe,cAAe,mBAAoB,cAAe,cAAe,cAAe,gBAAiB,eAAgB,gBAAiB,iBAAkB,eAAgB,sCAAuC,cAAe,oBAAqB,aAAc,mBAAoB,YAAa,mBAAoB,kBAAmB,kBAAmB,oBAAqB,cAAe,cAAe,oBAAqB,oBAAqB,qBAAsB,qBAAsB,aAAc,gBAAiB,oBAAqB,wBAAyB,iBAAkB,eAAgB,2BAA4B,4BAA6B,eAAgB,cAAe,eAAgB,YAAY,EAC7uDC,GAAkB,CAAC,wBAAyB,8BAA+B,4BAA6B,sBAAuB,mBAAoB,sBAAuB,kBAAmB,qBAAsB,yBAA0B,mBAAoB,2BAA4B,2BAA4B,yBAA0B,oBAAqB,8BAA+B,+BAAgC,0BAA2B,qBAAsB,aAAc,+BAAgC,uBAAwB,yBAA0B,0BAA2B,4BAA6B,sBAAuB,4BAA6B,oBAAqB,eAAgB,kBAAmB,uBAAwB,gBAAiB,+BAAgC,oBAAqB,oBAAqB,2BAA4B,4BAA6B,iBAAkB,oBAAqB,oBAAqB,qBAAsB,iBAAkB,uBAAwB,wBAAwB,EAC5hCC,GAAa,CAAC,GAAGF,GAAe,GAAGC,EAAe,EAGlDE,GAA2B,CAC7B,sBAAuB,GACvB,eAAgB,GAChB,kBAAmB,GACnB,gBAAiB,GACjB,mBAAoB,GACpB,mBAAoB,GACpB,iBAAkB,GAClB,qBAAsB,GACtB,iBAAkB,GAClB,WAAY,GACZ,8BAA+B,GAC/B,oBAAqB,GACrB,yBAA0B,GAC1B,YAAa,GACb,iBAAkB,GAClB,oBAAqB,GACrB,kBAAmB,GACnB,oBAAqB,GACrB,mBAAoB,GACpB,4BAA6B,GAC7B,WAAY,GACZ,eAAgB,GAChB,oBAAqB,GACrB,gBAAiB,GACjB,oBAAqB,GACrB,SAAU,GACV,WAAY,GACZ,uBAAwB,GACxB,sBAAuB,GACvB,cAAe,GACf,oBAAqB,GACrB,8BAA+B,GAC/B,2BAA4B,GAC5B,MAAO,GACP,wBAAyB,GACzB,uBAAwB,GACxB,uBAAwB,GACxB,2BAA4B,GAC5B,kBAAmB,GACnB,eAAgB,GAChB,wBAAyB,GACzB,8BAA+B,GAC/B,SAAU,GACV,wBAAyB,GACzB,0CAA2C,GAC3C,2BAA4B,GAC5B,eAAgB,GAChB,UAAW,GACX,6BAA8B,GAC9B,kCAAmC,GACnC,0BAA2B,GAC3B,YAAa,GACb,+BAAgC,GAChC,sBAAuB,GACvB,0BAA2B,GAC3B,wBAAyB,GACzB,aAAc,GACd,kBAAmB,GACnB,wBAAyB,GACzB,0BAA2B,GAC3B,iCAAkC,GAClC,iBAAkB,GAClB,gCAAiC,GACjC,wBAAyB,GACzB,oCAAqC,GACrC,oCAAqC,GACrC,yBAA0B,GAC1B,2BAA4B,GAC5B,0BAA2B,GAC3B,uBAAwB,GACxB,mCAAoC,GACpC,eAAgB,GAChB,MAAO,GACP,qBAAsB,GACtB,OAAQ,GACR,gBAAiB,GACjB,aAAc,GACd,uBAAwB,GACxB,qBAAsB,GACtB,cAAe,GACf,SAAU,GACV,yBAA0B,GAC1B,WAAY,EACd,EACIC,EAAgB,KAAoB,CAAC,EACzCA,EAAc,kBAAoB,CAAC,eAAgB,yBAA0B,wBAAyB,SAAU,kBAAmB,eAAgB,WAAY,YAAa,qBAAsB,oBAAqB,eAAgB,yBAA0B,iBAAkB,iBAAkB,sBAAuB,mBAAoB,sBAAuB,mBAAoB,iBAAkB,sCAAuC,aAAc,kBAAmB,eAAe,EACpeA,EAAc,kBAAoB,CAAC,aAAc,WAAY,UAAW,qBAAsB,aAAc,QAAS,aAAc,uBAAwB,qBAAsB,yBAA0B,WAAY,8BAA+B,qBAAsB,gBAAiB,yBAA0B,2BAA4B,cAAe,gBAAiB,2BAA4B,4BAA6B,gCAAiC,+BAAgC,cAAe,YAAa,UAAW,sBAAuB,oBAAqB,qBAAsB,sBAAuB,sBAAuB,uBAAwB,8BAA+B,eAAgB,kBAAkB,EAC7tBA,EAAc,iBAAmB,CAAC,eAAgB,eAAgB,UAAW,aAAc,cAAe,mBAAoB,sBAAuB,cAAe,WAAY,4BAA4B,EAE5MA,EAAc,kBAAoB,CAAC,YAAa,kBAAmB,YAAa,eAAgB,oBAAqB,wBAAyB,wBAAyB,oBAAqB,yBAA0B,uBAAwB,uBAAwB,2BAA4B,6BAA8B,kBAAmB,mBAAoB,kCAAmC,mBAAoB,mBAAoB,oBAAqB,qBAAsB,iBAAkB,0BAA2B,4BAA6B,iBAAkB,6BAA8B,0BAA2B,sBAAuB,2BAA4B,iBAAkB,gBAAiB,oBAAqB,mBAAoB,WAAY,0BAA0B,EAEvxBA,EAAc,mBAAqB,CAAC,wCAAyC,4BAA6B,oBAAqB,sBAAuB,2BAA4B,uBAAwB,6BAA8B,2BAA4B,QAAS,wBAAyB,wBAAyB,0BAA2B,2BAA4B,mBAAoB,yBAA0B,aAAc,oBAAqB,kBAAmB,kBAAmB,yBAA0B,wBAAyB,mBAAoB,uBAAwB,8BAA+B,yBAA0B,2BAA4B,uBAAwB,oBAAqB,mBAAoB,+BAAgC,YAAa,gBAAiB,sBAAuB,iCAAkC,sBAAuB,wBAAyB,gCAAiC,+BAAgC,6BAA8B,qCAAsC,8BAA+B,yBAA0B,8BAA+B,YAAa,0BAA2B,+BAAgC,6BAA8B,4BAA6B,oBAAqB,cAAe,uBAAwB,4BAA6B,kCAAmC,YAAa,oBAAqB,mBAAoB,iBAAkB,kBAAmB,8BAA+B,kBAAmB,kBAAmB,qBAAsB,0BAA2B,uBAAwB,uBAAwB,aAAc,yBAA0B,0BAA2B,kCAAmC,sBAAuB,mBAAoB,oCAAqC,iBAAkB,eAAgB,0BAA2B,aAAc,yBAA0B,8BAA+B,yBAA0B,sBAAuB,oBAAqB,uCAAwC,8BAA+B,oCAAqC,2BAA4B,6BAA8B,0BAA2B,4BAA6B,uBAAwB,yBAA0B,+BAAgC,eAAgB,gCAAiC,0BAA2B,gCAAiC,oCAAqC,uCAAwC,oBAAqB,qBAAsB,iBAAkB,oBAAqB,8BAA+B,sBAAuB,gCAAiC,0BAA2B,gCAAiC,4BAA6B,sBAAuB,0BAA2B,iCAAkC,sCAAuC,yBAA0B,2BAA4B,0BAA2B,kBAAmB,uBAAwB,4CAA6C,gCAAiC,sBAAuB,qBAAsB,uBAAwB,eAAgB,4BAA6B,+BAAgC,uBAAwB,4CAA6C,+BAAgC,0BAA2B,yBAA0B,mCAAoC,4BAA6B,6BAA8B,uBAAwB,eAAgB,WAAY,iCAAkC,2BAA4B,mCAAoC,wCAAyC,6BAA8B,SAAS,EAExoHA,EAAc,iBAAmB,CAAC,wBAAwB,EAC1DA,EAAc,oBAAsB,CAAC,yBAA0B,2BAA4B,gCAAiC,wBAAyB,kBAAmB,cAAe,mBAAoB,wBAAyB,sBAAuB,0BAA2B,yBAA0B,qBAAsB,oBAAqB,qBAAsB,gBAAiB,0BAA2B,eAAgB,cAAe,cAAe,sBAAuB,mBAAoB,uBAAwB,0BAA2B,iBAAkB,iBAAkB,kBAAmB,wBAAyB,uBAAwB,kBAAmB,qBAAsB,gBAAiB,2BAA4B,cAAe,mBAAoB,gBAAiB,cAAe,cAAe,eAAgB,4BAA6B,yBAA0B,iCAAkC,4BAA6B,2BAA4B,wBAAyB,oBAAqB,uBAAwB,uBAAwB,gBAAiB,+BAAgC,gCAAiC,iCAAkC,uBAAwB,8BAA+B,qBAAsB,8BAA+B,WAAY,oBAAqB,iBAAkB,eAAe,EAC31CA,EAAc,eAAiB,CAAC,GAAGA,EAAc,iBAAkB,GAAGA,EAAc,kBAAmB,GAAGA,EAAc,kBAAmB,GAAGA,EAAc,kBAAmB,GAAGA,EAAc,oBAAqB,GAAGA,EAAc,mBAAoB,GAAGA,EAAc,gBAAgB,EAC3R,IAAIC,GAAeD,EAGfE,GAAiB,KAAqB,CACxC,OAAO,oBAAoBC,EAAW,CACpC,MAAI,CAACA,GAAaA,EAAU,OAAS,EAC5BA,EAEF,KAAOA,EAAU,CAAC,EAAE,YAAY,EAAIA,EAAU,UAAU,CAAC,CAClE,CACF,EACAD,GAAe,qBAAuB,0BACtCA,GAAe,cAAgBN,GAE/BM,GAAe,gBAAkBJ,GAAW,IAAI9E,GAASkF,GAAe,oBAAoBlF,CAAK,CAAC,EAClGkF,GAAe,mBAAqBD,GAAa,mBACjDC,GAAe,eAAiBD,GAAa,eAC7CC,GAAe,6BAA+B,CAAC,GAAGA,GAAe,eAAgB,GAAGA,GAAe,eAAe,EAClHA,GAAe,iCAAmC,IAAI,IAAIA,GAAe,4BAA4B,EACrG,IAAIE,GAAgBF,GACpB,SAASG,GAAiCC,EAAaC,EAAW,CAC5D,OAAOD,GAAgB,WACzBA,EAAc,CAAC,GAEjB,IAAME,EAAgBC,EAAA,GACjBH,GAGL,OADaF,GAAc,6BACtB,QAAQ1N,GAAO,CAClB,IAAMgO,EAAQH,EAAU7N,CAAG,EACvB,OAAOgO,EAAU,KAAeA,IAAUN,GAAc,uBAC1DI,EAAc9N,CAAG,EAAIgO,EAEzB,CAAC,EACMF,CACT,CACA,SAASG,GAAiBC,EAASC,EAAK,CACtC,GAAI,CAACD,EACH,OAEF,IAAME,EAAc,CAAC,EACjBC,EAAa,GAKjB,GAJA,OAAO,KAAKH,CAAO,EAAE,OAAOlO,GAAO0N,GAAc,iCAAiC,IAAI1N,CAAG,CAAC,EAAE,QAAQA,GAAO,CACzGoO,EAAYpO,CAAG,EAAIkO,EAAQlO,CAAG,EAC9BqO,EAAa,EACf,CAAC,EACG,CAACA,EACH,OAEF,IAAMC,EAAsB,CAC1B,KAAM,qBACN,QAASF,CACX,EACAD,EAAI,cAAcG,CAAmB,EACrC,IAAMhG,EAAQ,CACZ,KAAM,uBACR,EACAiG,GAAeH,EAAa,CAACpO,EAAKgO,IAAU,CAC1C1F,EAAMtI,CAAG,EAAIgO,CACf,CAAC,EACDG,EAAI,cAAc7F,CAAK,CACzB,CAGA,IAAIkG,GAAkB,KAAM,CAC1B,YAAYC,EAAQ,CAGlB,KAAK,eAAiB,CAAC,EACvB,KAAK,OAASA,CAChB,CACA,YAAYC,EAAW,CACrB,IAAMpO,GAAQoO,GAAa,IAAI,MAAM,GAAG,EACxC,GAAIpO,EAAK,OAAS,EAAG,CACnBA,EAAK,QAAQqO,GAAO,KAAK,YAAYA,CAAG,CAAC,EACzC,MACF,CAEA,GADqB,KAAK,eAAeD,CAAS,IAAM,IACpCA,EAAU,OAAQ,CACpC,IAAME,EAAO,KAAK,OAAO,EACrBA,GACFA,EAAK,UAAU,IAAIF,CAAS,EAE9B,KAAK,eAAeA,CAAS,EAAI,EACnC,CACF,CACA,eAAeA,EAAW,CACxB,IAAMpO,GAAQoO,GAAa,IAAI,MAAM,GAAG,EACxC,GAAIpO,EAAK,OAAS,EAAG,CACnBA,EAAK,QAAQqO,GAAO,KAAK,eAAeA,CAAG,CAAC,EAC5C,MACF,CAEA,GADqB,KAAK,eAAeD,CAAS,IAAM,IACpCA,EAAU,OAAQ,CACpC,IAAME,EAAO,KAAK,OAAO,EACrBA,GACFA,EAAK,UAAU,OAAOF,CAAS,EAEjC,KAAK,eAAeA,CAAS,EAAI,EACnC,CACF,CACA,iBAAiBA,EAAW,CAC1B,IAAME,EAAO,KAAK,OAAO,EACzB,OAAKA,EAGEA,EAAK,UAAU,SAASF,CAAS,EAF/B,EAGX,CACA,oBAAoBA,EAAWG,EAAa,CAC1C,GAAI,CAACH,EACH,OAEF,GAAIA,EAAU,QAAQ,GAAG,GAAK,EAAG,CAC/B,IAAMpO,GAAQoO,GAAa,IAAI,MAAM,GAAG,EACxC,GAAIpO,EAAK,OAAS,EAAG,CACnBA,EAAK,QAAQqO,GAAO,KAAK,oBAAoBA,EAAKE,CAAW,CAAC,EAC9D,MACF,CACF,CAEA,GADqB,KAAK,eAAeH,CAAS,IAAMG,GACpCH,EAAU,OAAQ,CACpC,IAAME,EAAO,KAAK,OAAO,EACrBA,GACFA,EAAK,UAAU,OAAOF,EAAWG,CAAW,EAE9C,KAAK,eAAeH,CAAS,EAAIG,CACnC,CACF,CACF,EAGA,SAASC,GAAqBC,EAASC,EAAWhB,EAAO,CACnDA,GAAS,MAAQ,OAAOA,GAAU,UAAYA,GAAS,GACzDiB,GAAqBF,EAASC,CAAS,EAEvCE,GAAkBH,EAASC,EAAWhB,CAAK,CAE/C,CACA,SAASkB,GAAkBH,EAASC,EAAWhB,EAAO,CACpDe,EAAQ,aAAaI,GAAmBH,CAAS,EAAGhB,EAAM,SAAS,CAAC,CACtE,CACA,SAASiB,GAAqBF,EAASC,EAAW,CAChDD,EAAQ,gBAAgBI,GAAmBH,CAAS,CAAC,CACvD,CACA,SAASG,GAAmBH,EAAW,CACrC,MAAO,QAAQA,CAAS,EAC1B,CACA,SAASI,EAAaL,EAASM,EAAM,CAC/BA,EACFN,EAAQ,aAAa,OAAQM,CAAI,EAEjCN,EAAQ,gBAAgB,MAAM,CAElC,CACA,SAASO,GAAkBC,EAAe,CACxC,IAAIC,EACJ,OAAID,IAAkB,MACpBC,EAAO,YACED,IAAkB,OAC3BC,EAAO,aACED,IAAkB,QAC3BC,EAAO,QAEPA,EAAO,OAEFA,CACT,CAIA,SAASC,GAAcC,EAAS,CAC9B,OAAOA,EAAQ,aAAa,YAAY,CAC1C,CACA,SAASC,GAAcD,EAASE,EAAO,CACrCC,GAAqBH,EAAS,QAASE,CAAK,CAC9C,CACA,SAASE,GAAmBJ,EAASK,EAAY,CAC/CF,GAAqBH,EAAS,aAAcK,CAAU,CACxD,CAIA,SAASC,GAAaC,EAASC,EAAM,CACnCC,GAAqBF,EAAS,OAAQC,CAAI,CAC5C,CACA,SAASE,GAAeH,EAASI,EAAQ,CACvCF,GAAqBF,EAAS,SAAUI,CAAM,CAChD,CACA,SAASC,GAAiBL,EAASM,EAAU,CAC3CJ,GAAqBF,EAAS,WAAYM,CAAQ,CACpD,CAIA,SAASC,GAAiBC,EAASC,EAAU,CAC3CC,GAAqBF,EAAS,WAAYC,CAAQ,CACpD,CACA,SAASE,GAAeH,EAASI,EAAQ,CACvCF,GAAqBF,EAAS,SAAUI,CAAM,CAChD,CAIA,SAASC,GAAiBC,EAASC,EAAU,CAC3CC,GAAkBF,EAAS,WAAYC,CAAQ,CACjD,CAIA,SAASE,GAAgBC,EAASC,EAAS,CACzCC,GAAkBF,EAAS,UAAWC,CAAO,CAC/C,CACA,SAASE,GAAiBH,EAASI,EAAU,CAC3CF,GAAkBF,EAAS,WAAYI,CAAQ,CACjD,CACA,SAASC,GAAwBL,EAASM,EAAiB,CACzDJ,GAAkBF,EAAS,kBAAmBM,CAAe,CAC/D,CACA,SAASC,GAAiBP,EAASQ,EAAU,CAC3CN,GAAkBF,EAAS,WAAYQ,CAAQ,CACjD,CACA,SAASC,GAAiBT,EAASU,EAAU,CAC3CR,GAAkBF,EAAS,WAAYU,CAAQ,CACjD,CACA,SAASC,GAAiBX,EAASY,EAAU,CAC3CV,GAAkBF,EAAS,WAAYY,CAAQ,CACjD,CACA,SAASC,GAAiBb,EAASc,EAAU,CAC3CZ,GAAkBF,EAAS,WAAYc,CAAQ,CACjD,CACA,SAASC,GAAgBf,EAASgB,EAAS,CACzCd,GAAkBF,EAAS,UAAWgB,CAAO,CAC/C,CACA,SAASC,GAAajB,EAASkB,EAAM,CACnChB,GAAkBF,EAAS,OAAQkB,CAAI,CACzC,CACA,SAASC,GAAgBnB,EAAS,CAChCoB,GAAqBpB,EAAS,MAAM,CACtC,CACA,SAASqB,GAAiBrB,EAASsB,EAAU,CAC3CC,GAAqBvB,EAAS,WAAYsB,CAAQ,CACpD,CAIA,SAASE,GAAiBC,EAAmBC,EAAmB,CAC9DC,GAAqBF,EAAmB,WAAYC,EAAkB,EAAE,EACxEE,GAAmBF,EAAmBD,EAAkB,EAAE,CAC5D,CACA,SAASI,GAA0BC,EAAWC,EAAO,CACnD,OAAOA,IAAU,OAASD,EAAU,oBAAqB,eAAe,EAAIC,IAAU,GAAOD,EAAU,cAAe,SAAS,EAAIA,EAAU,gBAAiB,WAAW,CAC3K,CAGA,IAAIE,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACJ,SAASC,IAAmB,CAC1B,OAAIR,KAAa,SACfA,GAAW,iCAAiC,KAAK,UAAU,SAAS,GAE/DA,EACT,CACA,SAASS,IAAoB,CAC3B,GAAIR,KAAkB,OACpB,GAAIO,GAAiB,EAAG,CACtB,IAAME,EAAe,UAAU,UAAU,MAAM,iBAAiB,EAC5DA,IACFT,GAAgBS,EAAa,CAAC,GAAK,KAAO,WAAWA,EAAa,CAAC,CAAC,EAAI,EAE5E,MACET,GAAgB,EAGpB,OAAOA,EACT,CACA,SAASU,IAAmB,CAC1B,GAAIT,KAAa,OAAQ,CACvB,IAAMU,EAAM,OACZV,GAAW,CAAC,CAACU,EAAI,SAAW,CAAC,CAACA,EAAI,OAAO,UAAY,CAAC,CAACA,EAAI,OAAO,UAAY,SAAS,KAAK,UAAU,SAAS,GAAK,aAAa,KAAK,UAAU,MAAM,CACxJ,CACA,OAAOV,EACT,CACA,SAASW,IAAoB,CAC3B,OAAIV,KAAc,SAChBA,GAAY,aAAa,KAAK,UAAU,SAAS,GAE5CA,EACT,CACA,SAASW,IAAoB,CAC3B,OAAIV,KAAY,SACdA,GAAU,0BAA0B,KAAK,UAAU,QAAQ,GAEtDA,EACT,CACA,SAASW,IAAkB,CACzB,OAAIV,KAAU,SACZA,GAAQ,mBAAmB,KAAK,UAAU,QAAQ,GAAK,UAAU,WAAa,YAAc,UAAU,eAAiB,GAElHA,EACT,CACA,SAASW,IAAgC,CACvC,MAAO,CAACR,GAAiB,GAAKC,GAAkB,GAAK,EACvD,CACA,SAASQ,GAAaC,EAAI,CACxB,GAAI,CAACA,EACH,OAAO,KAET,IAAMC,EAAiBD,EAAG,SACpBE,EAAWF,EAAG,aAAa,UAAU,EAC3C,OAAIC,IAAmB,KAAOC,IAAa,MAAQA,IAAa,IAAM,CAACP,GAAkB,GAChF,KAEFM,EAAe,SAAS,CACjC,CACA,SAASE,IAAmB,CAC1B,GAAI,CAAC,SAAS,KACZ,MAAO,GAET,IAAIC,EAAM,IACJC,EAAW,UAAU,UAAU,YAAY,EAAE,MAAM,SAAS,EAAI,IAAM,IACtEC,EAAM,SAAS,cAAc,KAAK,EAExC,IADA,SAAS,KAAK,YAAYA,CAAG,IAChB,CACX,IAAMC,EAAOH,EAAM,EAEnB,GADAE,EAAI,MAAM,OAASC,EAAO,KACtBA,EAAOF,GAAYC,EAAI,eAAiBC,EAC1C,MAEAH,EAAMG,CAEV,CACA,gBAAS,KAAK,YAAYD,CAAG,EACtBF,CACT,CACA,SAASI,IAAgB,CACvB,OAAO,SAAS,MAAM,cAAgB,OAAO,aAAe,SAAS,iBAAiB,aAAe,GACvG,CACA,SAASC,IAAiB,CACxB,OAAO,SAAS,MAAM,eAAiB,OAAO,aAAe,SAAS,iBAAiB,cAAgB,GACzG,CACA,SAASC,IAAqB,CAC5B,OAAIrB,IAAyB,MAC3BsB,GAAgC,EAE3BtB,EACT,CACA,SAASsB,IAAkC,CACzC,IAAMC,EAAO,SAAS,KAChBN,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,MAAM,MAAQA,EAAI,MAAM,OAAS,QACrCA,EAAI,MAAM,QAAU,IACpBA,EAAI,MAAM,SAAW,SACrBA,EAAI,MAAM,gBAAkB,YAC5BA,EAAI,MAAM,SAAW,WACrBM,EAAK,YAAYN,CAAG,EACpB,IAAIO,EAAQP,EAAI,YAAcA,EAAI,YAC9BO,IAAU,GAAKP,EAAI,cAAgB,IACrCO,EAAQ,MAENP,EAAI,YACNA,EAAI,WAAW,YAAYA,CAAG,EAE5BO,GAAS,OACXxB,GAAwBwB,EACxBzB,GAAqByB,IAAU,EAEnC,CACA,SAASC,IAAwB,CAC/B,OAAI1B,IAAsB,MACxBuB,GAAgC,EAE3BvB,EACT,CAGA,IAAI2B,GAcJ,IAAIC,GAAqB,sDACrBC,GAAoB,2DACxB,SAASC,GAAsBC,EAAS,CACtC,IAAMC,EAAU,QAAQ,UAAU,SAAW,QAAQ,UAAU,kBAEzDC,EAAcD,EAAQ,KAAKD,EADX,iCACiC,EACjDG,EAAiBF,EAAQ,KAAKD,EAASF,EAAiB,EACxDM,EAAmBC,GAAWL,CAAO,EAE3C,OADkBE,GAAe,CAACC,GAAkBC,CAEtD,CACA,SAASE,EAAcN,EAASO,EAAWC,EAAU,CAAC,EAAG,CACvD,GAAM,CACJ,eAAAC,CACF,EAAID,EACJR,EAAQ,UAAU,OAAO,YAAa,CAACO,CAAS,EAC3CE,GACHC,GAAeV,EAAS,CAACO,CAAS,CAEtC,CACA,SAASI,GAAYX,EAASY,EAASJ,EAAU,CAAC,EAAG,CACnD,GAAM,CACJ,eAAAC,CACF,EAAID,EACJR,EAAQ,UAAU,OAAO,eAAgB,CAACY,CAAO,EAC5CH,GACHC,GAAeV,EAAS,CAACY,CAAO,CAEpC,CACA,SAASC,GAAab,EAASc,EAAU,CACvC,IAAMC,EAAgB,WAChBC,EAA+BF,EAAWG,GAAKA,EAAE,aAAaF,EAAe,EAAE,EAAIE,GAAKA,EAAE,gBAAgBF,CAAa,EAC7HC,EAA6BhB,CAAO,EACpCkB,GAAiBlB,EAAQ,iBAAiB,OAAO,EAAGmB,GAASH,EAA6BG,CAAK,CAAC,CAClG,CACA,SAASC,GAAuBpB,EAASqB,EAAKC,EAAS,CACrD,IAAIC,EAAU,EACd,KAAOvB,GAAS,CACd,GAAIA,EAAQ,UAAU,SAASqB,CAAG,EAChC,MAAO,GAGT,GADArB,EAAUA,EAAQ,cACd,OAAOsB,GAAW,UACpB,GAAI,EAAEC,EAAUD,EACd,cAEOtB,IAAYsB,EACrB,KAEJ,CACA,MAAO,EACT,CACA,SAASE,GAAgBC,EAAI,CAC3B,GAAM,CACJ,OAAAC,EACA,MAAAC,EACA,eAAAC,EACA,iBAAAC,EACA,kBAAAC,EACA,gBAAAC,EACA,WAAAC,EACA,aAAAC,EACA,cAAAC,EACA,YAAAC,EACA,UAAAC,EACA,YAAAC,EACA,aAAAC,EACA,WAAAC,EACA,UAAAC,CACF,EAAI,OAAO,iBAAiBf,CAAE,EAC9B,MAAO,CACL,OAAQ,WAAWC,GAAU,GAAG,EAChC,MAAO,WAAWC,GAAS,GAAG,EAC9B,eAAgB,WAAWC,GAAkB,GAAG,EAChD,iBAAkB,WAAWC,GAAoB,GAAG,EACpD,kBAAmB,WAAWC,GAAqB,GAAG,EACtD,gBAAiB,WAAWC,GAAmB,GAAG,EAClD,WAAY,WAAWC,GAAc,GAAG,EACxC,aAAc,WAAWC,GAAgB,GAAG,EAC5C,cAAe,WAAWC,GAAiB,GAAG,EAC9C,YAAa,WAAWC,GAAe,GAAG,EAC1C,UAAW,WAAWC,GAAa,GAAG,EACtC,YAAa,WAAWC,GAAe,GAAG,EAC1C,aAAc,WAAWC,GAAgB,GAAG,EAC5C,WAAY,WAAWC,GAAc,GAAG,EACxC,UAAAC,CACF,CACF,CACA,SAASC,GAAgBhB,EAAI,CAC3B,IAAMiB,EAAOlB,GAAgBC,CAAE,EAC/B,OAAIiB,EAAK,YAAc,aACdA,EAAK,OAASA,EAAK,WAAaA,EAAK,cAEvCA,EAAK,MACd,CACA,SAASC,GAAelB,EAAI,CAC1B,IAAMiB,EAAOlB,GAAgBC,CAAE,EAC/B,OAAIiB,EAAK,YAAc,aACdA,EAAK,MAAQA,EAAK,YAAcA,EAAK,aAEvCA,EAAK,KACd,CACA,SAASE,GAAmBnB,EAAI,CAC9B,GAAM,CACJ,OAAAC,EACA,aAAAY,EACA,UAAAF,CACF,EAAIZ,GAAgBC,CAAE,EACtB,OAAO,KAAK,MAAMC,EAASY,EAAeF,CAAS,CACrD,CACA,SAASS,GAAkBpB,EAAI,CAC7B,GAAM,CACJ,MAAAE,EACA,WAAAY,EACA,YAAAF,CACF,EAAIb,GAAgBC,CAAE,EACtB,OAAO,KAAK,MAAME,EAAQY,EAAaF,CAAW,CACpD,CACA,SAASS,GAA0BrB,EAAI,CACrC,IAAMsB,EAAoBtB,EAAG,sBAAsB,EAC7C,CACJ,eAAAG,EACA,gBAAAG,EACA,iBAAAF,EACA,kBAAAC,CACF,EAAIN,GAAgBC,CAAE,EACtB,MAAO,CACL,IAAKsB,EAAkB,KAAOnB,GAAkB,GAChD,KAAMmB,EAAkB,MAAQhB,GAAmB,GACnD,MAAOgB,EAAkB,OAASlB,GAAoB,GACtD,OAAQkB,EAAkB,QAAUjB,GAAqB,EAC3D,CACF,CACA,SAASkB,IAAuB,CAC9B,GAAI,OAAOC,IAAsB,UAC/B,OAAOA,GAET,IAAMC,EAAW,SAAS,cAAc,KAAK,EAC7C,OAAAA,EAAS,MAAM,UAAY,MAC3BA,EAAS,MAAM,MAAQ,MACvBA,EAAS,MAAM,OAAS,MACxBA,EAAS,MAAM,SAAW,QAC1BA,EAAS,MAAM,IAAM,MACrBA,EAAS,MAAM,SAAW,SAC1BA,EAAS,IAAM,MACfA,EAAS,UACT;AAAA;AAAA;AAAA,gBAIA,SAAS,KAAK,YAAYA,CAAQ,EAClCA,EAAS,WAAa,EACtBD,GAAoB,KAAK,MAAMC,EAAS,UAAU,IAAM,EACxD,SAAS,KAAK,YAAYA,CAAQ,EAC3BD,EACT,CACA,SAASE,GAAenD,EAASoD,EAAK,CACpC,IAAIC,EAAarD,EAAQ,WACzB,OAAIoD,IACFC,EAAa,KAAK,IAAIA,CAAU,EAC5BC,GAAiB,GAAK,CAACN,GAAqB,IAC9CK,EAAarD,EAAQ,YAAcA,EAAQ,YAAcqD,IAGtDA,CACT,CACA,SAASE,GAAevD,EAASwD,EAAOJ,EAAK,CACvCA,IACEJ,GAAqB,EACvBQ,GAAS,IACAC,GAAiB,GAAKH,GAAiB,KAChDE,EAAQxD,EAAQ,YAAcA,EAAQ,YAAcwD,IAGxDxD,EAAQ,WAAawD,CACvB,CACA,SAASE,EAAcjC,EAAI,CACzB,KAAOA,GAAMA,EAAG,YACdA,EAAG,YAAYA,EAAG,UAAU,CAEhC,CACA,SAASkC,GAAkBC,EAAM,CAC3BA,GAAQA,EAAK,YACfA,EAAK,WAAW,YAAYA,CAAI,CAEpC,CACA,SAASC,GAAS7D,EAAS,CACzB,MAAO,CAAC,CAACA,EAAQ,YACnB,CACA,SAASK,GAAWL,EAAS,CAC3B,IAAMyB,EAAKzB,EACX,OAAIyB,EAAG,gBACEA,EAAG,gBAAgB,CACxB,mBAAoB,EACtB,CAAC,EAGI,EADU,CAACoC,GAAS7D,CAAO,GAAK,OAAO,iBAAiBA,CAAO,EAAE,aAAe,UAEzF,CACA,SAAS8D,GAAcZ,EAAU,CAC/B,IAAMa,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAA,EAAQ,WAAab,GAAY,IAAI,KAAK,EACnCa,EAAQ,UACjB,CACA,SAASC,GAAgBC,EAAYC,EAAQC,EAAc,CACrDA,GAAgBA,EAAa,cAAgBD,IAG7CC,EACEA,EAAa,YACfF,EAAW,aAAaC,EAAQC,EAAa,WAAW,EAExDF,EAAW,YAAYC,CAAM,EAG3BD,EAAW,YAAcA,EAAW,aAAeC,GACrDD,EAAW,sBAAsB,aAAcC,CAAM,EAG3D,CACA,SAASE,GAAkBH,EAAYI,EAAiB,CACtD,QAAS,EAAI,EAAG,EAAIA,EAAgB,OAAQ,IAAK,CAC/C,IAAMC,EAAqBD,EAAgB,CAAC,EACtCE,EAAoBN,EAAW,SAAS,CAAC,EAC3CM,IAAsBD,GACxBL,EAAW,aAAaK,EAAoBC,CAAiB,CAEjE,CACF,CACA,SAASC,GAAoBP,EAAYQ,EAAWN,EAAc,CAC5DA,EACFA,EAAa,sBAAsB,WAAYM,CAAS,EAEpDR,EAAW,WACbA,EAAW,sBAAsB,aAAcQ,CAAS,EAExDR,EAAW,YAAYQ,CAAS,CAGtC,CACA,SAASC,GAAoBC,EAAUC,EAAQ,CAC7C,GAAKA,EAGL,OAAW,CAACC,EAAKrB,CAAK,IAAK,OAAO,QAAQoB,CAAM,EAAG,CACjD,GAAI,CAACC,GAAO,CAACA,EAAI,QAAUrB,GAAS,KAClC,SAEF,IAAMsB,EAAYC,GAAuBF,CAAG,EACtCG,EAAgBxB,EAAM,SAAS,EAC/ByB,EAAcD,EAAc,QAAQ,iBAAkB,EAAE,EACxDE,EAAWD,EAAY,QAAUD,EAAc,OAAS,YAAc,OAC5EL,EAAS,MAAM,YAAYG,EAAWG,EAAaC,CAAQ,CAC7D,CACF,CACA,SAASC,GAA2BnF,EAAS,CAC3C,OAAOA,EAAQ,YAAcA,EAAQ,WACvC,CACA,SAASoF,GAAyBpF,EAAS,CACzC,OAAOA,EAAQ,aAAeA,EAAQ,YACxC,CACA,SAASqF,GAAiBrF,EAAS2B,EAAO,CACpCA,IAAU,QACZ3B,EAAQ,MAAM,eAAe,OAAO,EACpCA,EAAQ,MAAM,eAAe,UAAU,EACvCA,EAAQ,MAAM,eAAe,UAAU,EACvCA,EAAQ,MAAM,KAAO,YAErBsF,GAAetF,EAAS2B,CAAK,CAEjC,CACA,SAAS2D,GAAetF,EAAS2B,EAAO,CACtCA,EAAQ4D,GAAY5D,CAAK,EACzB3B,EAAQ,MAAM,MAAQ2B,EAAM,SAAS,EACrC3B,EAAQ,MAAM,SAAW2B,EAAM,SAAS,EACxC3B,EAAQ,MAAM,SAAW2B,EAAM,SAAS,CAC1C,CACA,SAAS6D,GAAgBxF,EAAS0B,EAAQ,CACxCA,EAAS6D,GAAY7D,CAAM,EAC3B1B,EAAQ,MAAM,OAAS0B,EAAO,SAAS,EACvC1B,EAAQ,MAAM,UAAY0B,EAAO,SAAS,EAC1C1B,EAAQ,MAAM,UAAY0B,EAAO,SAAS,CAC5C,CACA,SAAS6D,GAAY7C,EAAM,CACzB,OAAI,OAAOA,GAAS,SACX,GAAGA,CAAI,KAETA,CACT,CACA,SAAS+C,GAAiBC,EAAG,CAC3B,OAAOA,aAAa,MAAQA,aAAa,WAC3C,CACA,SAASC,GAAcC,EAAU,CAC/B,GAAIA,GAAY,KACd,MAAO,CAAC,EAEV,IAAMC,EAAS,CAAC,EAChB,OAAA3E,GAAiB0E,EAAUhC,GAAQiC,EAAO,KAAKjC,CAAI,CAAC,EAC7CiC,CACT,CACA,SAASC,GAAqBC,EAAKC,EAAU,CAC3C,GAAKD,EAGL,QAAS,EAAI,EAAG,EAAIA,EAAI,OAAQ,IAAK,CACnC,IAAME,EAAOF,EAAI,CAAC,EAClBC,EAASC,EAAK,KAAMA,EAAK,KAAK,CAChC,CACF,CACA,SAASC,GAAsBlG,EAASmG,EAAM3C,EAAO,CAC/CA,GAAS,KACXxD,EAAQ,gBAAgBmG,CAAI,EAE5BnG,EAAQ,aAAamG,EAAM3C,EAAM,SAAS,CAAC,CAE/C,CACA,SAAStC,GAAiB0E,EAAUQ,EAAQ,CAC1C,GAAIR,GAAY,KAGhB,QAAS,EAAI,EAAG,EAAIA,EAAS,OAAQ,IACnCQ,EAAOR,EAAS,CAAC,CAAC,CAEtB,CAeA,IAAIS,GAAiB,KAAM,CACzB,YAAYC,EAAY,EAAGC,EAAO,EAAG,CACnC,KAAK,UAAYD,EACjB,KAAK,KAAOC,CACd,CACA,MAAO,CACL,IAAMC,EAAc,KAAK,UACzB,YAAK,WAAa,KAAK,KAChBA,CACT,CACA,MAAO,CACL,OAAO,KAAK,SACd,CACA,KAAKC,EAAO,CACV,KAAK,WAAaA,CACpB,CACF,EAGIC,GAA0B,IAC1BC,GAA2B,IAC3BC,GAAyB,IACzBC,IAAqC,IAAM,CAC7C,IAAIA,EAAuB,MAAMA,WAA6BC,CAAS,CACrE,YAAYC,EAAYC,EAA0BC,EAA0BC,EAAsB,CAChG,MAAM,EACN,KAAK,WAAaH,EAClB,KAAK,yBAA2BC,EAChC,KAAK,yBAA2BC,EAChC,KAAK,qBAAuBC,EAC5B,KAAK,mBAAqB,GAC1B,KAAK,yBAA2B,GAChC,KAAK,MAAQ,EAIb,KAAK,qBAAuB,EAC5B,KAAK,kBAAoB,EAC3B,CACA,UAAUC,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,qBAAuBA,EAAM,oBACpC,CACA,eAAgB,CACV,KAAK,IAAI,IAAI,oBAAoB,IACnC,KAAK,mBAAqB,IAE5B,KAAK,eAAiB,KAAK,kBAAkB,EAC7C,KAAK,kBAAoB,KAAK,IAAI,IAAI,mBAAmB,EACzD,IAAMC,EAAK,KAAK,WAAW,OAAO,EAC9B,KAAK,iBAAmB,GAC1B,KAAK,oBAAoBA,EAAI,CAC3B,WAAY,KAAK,aAAa,KAAK,IAAI,EACvC,WAAY,KAAK,aAAa,KAAK,IAAI,CACzC,CAAC,EAEC,KAAK,iBAAmB,GAC1B,KAAK,oBAAoBA,EAAI,CAC3B,QAAS,KAAK,UAAU,KAAK,IAAI,EACjC,SAAU,KAAK,WAAW,KAAK,IAAI,CACrC,CAAC,EAEH,KAAK,oBAAoBA,EAAI,CAC3B,UAAW,KAAK,YAAY,KAAK,IAAI,CACvC,CAAC,EACI,KAAK,oBACR,KAAK,oBAAoBA,EAAI,CAC3B,UAAW,KAAK,YAAY,KAAK,IAAI,EACrC,QAAS,KAAK,UAAU,KAAK,IAAI,CACnC,CAAC,CAEL,CACA,2BAA2BC,EAAa,CACtC,IAAMC,EAAQ,KAAK,IAAI,IAAID,CAAW,EACtC,OAAIC,EAAQ,GACVC,EAAU,GAAGF,CAAW,6BAA6B,EAEhD,KAAK,IAAI,IAAKC,CAAK,CAC5B,CACA,gBAAgBE,EAAM,CACpB,OAAIA,IAAS,OACJ,KAAK,0BAA4B,KAAK,2BAA2B,kBAAkB,EAErF,KAAK,0BAA4B,KAAK,2BAA2B,kBAAkB,CAC5F,CACA,SAAU,CACR,KAAK,eAAe,EACpB,MAAM,QAAQ,CAChB,CACA,mBAAoB,CAClB,IAAMC,EAAU,KAAK,IAAI,IAAI,gBAAgB,EAC7C,MAAI,CAACA,GAAWA,IAAY,QACnB,EAEF,CACT,CACA,aAAaC,EAAG,CACV,KAAK,oBAAsB,KAAK,8BAClC,KAAK,cAAc,EACnB,KAAK,iBAAiB,GAEpB,CAAAC,GAAgB,IAGhBd,GAAqB,SACvB,KAAK,qBAAuB,OAAO,WAAW,IAAM,CAClD,KAAK,qBAAqBa,CAAC,CAC7B,EAAGd,EAAsB,EAEzB,KAAK,qBAAqBc,CAAC,EAE/B,CACA,YAAYA,EAAG,CACT,KAAK,iBACP,KAAK,eAAiBA,GAEpB,KAAK,mBAAqB,KAAK,QAAU,GAAmB,KAAK,aACnE,KAAK,gBAAgB,CAEzB,CACA,aAAc,CACZ,KAAK,eAAe,CACtB,CACA,cAAe,CACT,KAAK,mBACP,KAAK,YAAY,EAEjB,KAAK,eAAe,CAExB,CACA,WAAY,CACV,KAAK,qBAAqB,CAC5B,CACA,WAAWA,EAAG,CACZ,IAAME,EAAgBF,EAAE,cAClBG,EAAgB,KAAK,WAAW,OAAO,EACvCC,EAAa,KAAK,aAAa,OAAO,EACxC,KAAK,0BAA4BD,EAAc,SAASD,CAAa,GAAK,KAAK,oBAAsBE,GAAY,SAASF,CAAa,GAG3I,KAAK,eAAe,CACtB,CACA,WAAY,CACV,KAAK,eAAe,CACtB,CACA,qBAAqBG,EAAY,CAC/B,GAAI,KAAK,OAAS,GAAmBlB,GAAqB,SACxD,OAEF,IAAIS,EAAQ,EACRS,IACFT,EAAQ,KAAK,4BAA4B,EAAI,IAAM,KAAK,gBAAgB,MAAM,GAEhF,KAAK,eAAiBS,GAAc,KACpC,KAAK,qBAAuB,OAAO,WAAW,KAAK,YAAY,KAAK,IAAI,EAAGT,CAAK,EAChF,KAAK,MAAQ,CACf,CACA,6BAA8B,CAC5B,IAAMU,EAAuB,IAAI,KAAK,EAAG,QAAQ,EAC3CC,EAAOpB,GAAqB,oBAClC,OAAOmB,EAAMC,EAAOvB,EACtB,CACA,gBAAiB,CACX,KAAK,QAAU,GACjB,KAAK,YAAY,EAEf,KAAK,4BACP,KAAK,0BAA0B,EAC/B,KAAK,0BAA4B,QAE/B,KAAK,6BACP,KAAK,2BAA2B,EAChC,KAAK,2BAA6B,QAEpC,KAAK,cAAc,EACnB,KAAK,MAAQ,EACb,KAAK,eAAiB,IACxB,CACA,aAAc,CACZ,IAAMwB,EAASC,EAAA,GACV,KAAK,WAAW,iBAAiB,GAEtC,GAAI,CAACC,EAAQF,EAAO,KAAK,GAAK,KAAK,sBAAwB,CAAC,KAAK,qBAAqB,EAAG,CACvF,KAAK,eAAe,EACpB,MACF,CACA,KAAK,MAAQ,EACb,KAAK,uBACL,IAAMG,EAAW,KAAK,4BAA4B,KAAK,KAAM,KAAK,oBAAoB,EAClE,KAAK,qBAAqB,sBAAsBH,CAAM,EAC9D,mBAAmB,EAAE,KAAKG,CAAQ,CAChD,CACA,YAAYC,EAAW,CACrB,GAAI,CAACA,GAAa,KAAK,yBACrB,OAEE,KAAK,cACP,KAAK,mBAAmB,EACxBzB,GAAqB,oBAAuC,IAAI,KAAK,EAAG,QAAQ,GAElF,IAAM0B,EAAQ,CACZ,KAAM,cACN,UAAW,KAAK,WAAW,OAAO,CACpC,EACA,KAAK,aAAa,cAAcA,CAAK,EACjCD,IACF,KAAK,yBAA2B,IAElC,KAAK,MAAQ,CACf,CACA,4BAA4BE,EAAqBC,EAAa,CAE5D,GAD2B,KAAK,QAAU,GAAmB,KAAK,uBAAyBD,EACnE,CACtB,KAAK,YAAYC,CAAW,EAC5B,MACF,CACA,IAAMC,EAAOD,EAAY,OAAO,EAChC,KAAK,YAAcA,EACdC,EAAK,UAAU,SAAS,YAAY,GACvCA,EAAK,UAAU,IAAI,mBAAmB,EAEpC,KAAK,iBAAmB,GAC1BA,EAAK,UAAU,IAAI,oBAAoB,EAErC,KAAK,oBACPA,EAAK,UAAU,IAAI,wBAAwB,EAE7C,IAAMC,EAAY,KAAK,cAAc,kBAAkB,EACjDC,EAAc,KAAK,aAAa,SAAS,CAC7C,OAAQF,EACR,UAAWC,EAAU,mBAAoB,SAAS,CACpD,CAAC,EAKD,GAJIC,IACF,KAAK,wBAA0BA,EAAY,UAE7C,KAAK,gBAAgB,EACjB,KAAK,iBAAmB,EAAe,CACzC,IAAMC,EAAW,KAAK,eAAe,KAAK,IAAI,EAC9C,CAAC,KAAK,0BAA2B,KAAK,0BAA0B,EAAI,KAAK,yBAAyB,CAChG,WAAYA,EACZ,YAAaA,CACf,CAAC,CACH,CACI,KAAK,qBACH,KAAK,iBAAmB,EAC1B,CAAC,KAAK,0BAA2B,KAAK,yBAAyB,EAAI,KAAK,2BAA2BH,EAAM,CACvG,WAAY,KAAK,oBAAoB,KAAK,IAAI,EAC9C,WAAY,KAAK,oBAAoB,KAAK,IAAI,CAChD,CAAC,EAED,CAAC,KAAK,uBAAwB,KAAK,uBAAuB,EAAI,KAAK,2BAA2BA,EAAM,CAClG,QAAS,KAAK,iBAAiB,KAAK,IAAI,EACxC,SAAU,KAAK,kBAAkB,KAAK,IAAI,CAC5C,CAAC,GAGL,IAAMH,EAAQ,CACZ,KAAM,cACN,WAAYG,EACZ,UAAW,KAAK,WAAW,OAAO,CACpC,EACA,KAAK,aAAa,cAAcH,CAAK,EACrC,KAAK,iBAAiB,CACxB,CACA,qBAAsB,CACpB,KAAK,yBAA2B,GAChC,KAAK,cAAc,CACrB,CACA,qBAAsB,CACpB,KAAK,yBAA2B,GAChC,KAAK,YAAY,CACnB,CACA,kBAAmB,CACjB,KAAK,yBAA2B,EAClC,CACA,kBAAkBb,EAAG,CACnB,IAAMoB,EAAY,KAAK,WAAW,OAAO,EACnChB,EAAa,KAAK,aAAa,OAAO,EACtCF,EAAgBF,EAAE,cACpBI,GAAY,SAASF,CAAa,IAGtC,KAAK,yBAA2B,GAC5BkB,EAAU,SAASlB,CAAa,EAClC,KAAK,iBAAiB,EAEtB,KAAK,YAAY,EAErB,CACA,iBAAkB,CAChB,IAAMM,EAAS,CACb,KAAM,UACN,OAAQ,KAAK,YAAY,OAAO,EAChC,OAAQ,GACR,aAAc,KAAK,iBACrB,EACI,KAAK,eACP,KAAK,aAAa,6BAA6Ba,EAAAZ,EAAA,GAC1CD,GAD0C,CAE7C,WAAY,KAAK,cACnB,EAAC,EAED,KAAK,aAAa,yBAAyBa,EAAAZ,EAAA,GACtCD,GADsC,CAEzC,YAAa,KAAK,WAAW,OAAO,EACpC,SAAU,QACV,iBAAkB,GAClB,OAAQ,CACV,EAAC,CAEL,CACA,oBAAqB,CACnB,KAAK,YAAY,OAAO,EAAE,UAAU,IAAI,mBAAmB,EAC3D,IAAMc,EAA0B,KAAK,wBAC/BP,EAAc,KAAK,YACnBnB,EAAQ,KAAK,iBAAmB,EAAgBX,GAA2B,EACjF,OAAO,WAAW,IAAM,CACtBqC,EAAwB,EACxB,KAAK,YAAYP,CAAW,CAC9B,EAAGnB,CAAK,EACR,KAAK,sBAAsB,EAC3B,KAAK,wBAA0B,OAC/B,KAAK,YAAc,MACrB,CACA,uBAAwB,CACtB,CAAC,KAAK,0BAA2B,KAAK,0BAA2B,KAAK,uBAAwB,KAAK,uBAAuB,EAAE,QAAQuB,GAAY,CAC1IA,GACFA,EAAS,CAEb,CAAC,EACD,KAAK,0BAA4B,KAAK,0BAA4B,KAAK,uBAAyB,KAAK,wBAA0B,IACjI,CACA,aAAc,CACZhC,GAAqB,SAAW,GAChC,KAAK,4BAA8B,OAAO,WAAW,IAAM,CACzD,KAAK,cAAc,EACnB,KAAK,eAAe,CACtB,EAAGD,EAAsB,CAC3B,CACA,eAAgB,CACdC,GAAqB,SAAW,GAChC,KAAK,wBAAwB,CAC/B,CACA,kBAAmB,CACjB,KAAK,iBAAiB,EACtB,KAAK,qBAAuB,OAAO,WAAW,KAAK,YAAY,KAAK,IAAI,EAAG,KAAK,gBAAgB,MAAM,CAAC,CACzG,CACA,kBAAmB,CACZ,KAAK,uBAGV,OAAO,aAAa,KAAK,oBAAoB,EAC7C,KAAK,qBAAuB,OAC9B,CACA,kBAAmB,CACZ,KAAK,uBAGV,OAAO,aAAa,KAAK,oBAAoB,EAC7C,KAAK,qBAAuB,OAC9B,CACA,yBAA0B,CACnB,KAAK,8BAGV,OAAO,aAAa,KAAK,2BAA2B,EACpD,KAAK,4BAA8B,OACrC,CACA,eAAgB,CACd,KAAK,iBAAiB,EACtB,KAAK,iBAAiB,EACtB,KAAK,wBAAwB,CAC/B,CACF,EACA,OAAAA,EAAqB,SAAW,GACzBA,CACT,GAAG,EACCoC,GAAsBpC,GAGtBqC,GAAiB,cAAcpC,CAAS,CAC1C,YAAYqC,EAAMhC,EAAO,CACvB,MAAM,EACN,KAAK,KAAOgC,EACRhC,IACF,KAAK,MAAQA,EAEjB,CACA,UAAUA,EAAO,CACf,KAAK,MAAQA,CACf,CACA,eAAgB,CACd,KAAK,eAAe,CACtB,CACA,kBAAkBiC,EAAS,CACzB,IAAMC,EAAO,QACPX,EAAO,KAAK,KAAK,OAAO,EACzBA,IAGDU,GAAW,MAAQA,GAAW,GAChCV,EAAK,aAAaW,EAAMD,CAAO,EAE/BV,EAAK,gBAAgBW,CAAI,EAE7B,CACA,mBAAoB,CAClB,KAAK,QAAU,KAAK,KAAK,gBAAgB,CAC3C,CACA,8BAA+B,CAC7B,GAAI,KAAK,gBAAkB,KACzB,OAEF,IAAMC,EAAS,CACb,iBAAkB,IAAM,KAAK,iBAAiB,EAC9C,OAAQ,IAAM,KAAK,KAAK,OAAO,CACjC,EACA,KAAK,eAAiB,KAAK,WAAW,IAAIL,GAAoBK,EAAQ,KAAK,KAAK,8BAA8B,EAAG,KAAK,KAAK,8BAA8B,EAAG,KAAK,KAAK,oBAAoB,EAAG,KAAK,MAAM,OAAO,CACjN,CACA,gBAAiB,CACf,KAAK,gBAAkB,KAAK,MAAM,IAAI,IAAI,uBAAuB,EACjE,KAAK,kBAAkB,EACnB,KAAK,iBACP,KAAK,kBAAkB,KAAK,OAAO,EAC/B,KAAK,iBACP,KAAK,eAAiB,KAAK,YAAY,KAAK,eAAgB,KAAK,MAAM,OAAO,KAGhF,KAAK,kBAAkB,IAAI,EAC3B,KAAK,6BAA6B,EAEtC,CACA,kBAAmB,CACjB,IAAMH,EAAO,KAAK,KACZI,EAASJ,EAAK,UAAYA,EAAK,UAAU,EAAI,OAC7CK,EAASL,EAAK,UAAYA,EAAK,UAAU,EAAI,OAC7CM,EAAUN,EAAK,WAAaA,EAAK,WAAW,EAAI,OACtD,MAAO,CACL,SAAUA,EAAK,YAAY,EAE3B,OAAAK,EACA,OAAAD,EACA,SAAUJ,EAAK,YAAcA,EAAK,YAAY,EAAI,OAClD,KAAMM,EACN,KAAMA,EAAUA,EAAQ,KAAO,OAC/B,MAAO,KAAK,eAAe,EAC3B,eAAgBN,EAAK,kBAAoBA,EAAK,kBAAkB,EAAI,OACpE,oBAAqB,IAAM,KAAK,gBAAgB,YAAY,EAAI,CAClE,CACF,CACA,gBAAiB,CACf,OAAO,KAAK,OACd,CAEA,SAAU,CACJ,KAAK,iBACP,KAAK,eAAiB,KAAK,YAAY,KAAK,eAAgB,KAAK,MAAM,OAAO,GAEhF,MAAM,QAAQ,CAChB,CACF,EAGIO,GAAiB,IAAIrD,GACrBsD,EAAiB,KACjBC,EAAY,MAAMC,WAAmB/C,CAAS,CAChD,YAAYgD,EAAUC,EAAoB,CACxC,MAAM,EACN,KAAK,0BAA4B,GAEjC,KAAK,UAAY,GAEjB,KAAK,QAAU,GAIf,KAAK,OAASL,GAAe,KAAK,EAClC,KAAK,gBAAkB,IAAIM,GAAgB,IAAM,KAAK,IAAI,EAC1D,KAAK,mBAAqB,IAAI,KAAKD,GAAsB,CAAC,GAAG,IAAIE,GAAQ,CAACA,EAAK,SAAUA,CAAI,CAAC,CAAC,EAC3FH,GACF,KAAK,YAAYA,CAAQ,CAE7B,CACA,aAAa3C,EAAO,CAClB,MAAM,aAAaA,CAAK,CAC1B,CACA,cAAe,CACb,KAAK,qBAAuB,KAAK,IAAI,IAAI,uBAAuB,EAChE,KAAK,aAAa,KAAK,OAAO,CAAC,CACjC,CACA,aAAa+C,EAASC,EAAW,CAC3BD,GAAW,KAAK,MAClB,KAAK,yBAAyBA,CAAO,EACrC,KAAK,8BAA8BA,EAASC,CAAS,EAEzD,CACA,WAAY,CACV,OAAO,KAAK,MACd,CACA,kBAAmB,CACjB,MAAO,CACL,MAAO,KAAK,YACZ,SAAU,SACZ,CACF,CACA,WAAWjC,EAAQ,CACjB,GAAM,CACJ,eAAAkC,EACA,kBAAAC,EACA,kBAAAC,EACA,SAAAC,EACA,qBAAArD,CACF,EAAIgB,GAAU,CAAC,EACX,KAAK,iBACP,KAAK,eAAiB,KAAK,YAAY,KAAK,cAAc,GAExD,KAAK,cAAgBkC,IACvB,KAAK,YAAcA,GAErB,IAAMI,EAAkB,IAAM,KAAK,YAC/BJ,GAAkB,OACpB,KAAK,eAAiB,KAAK,WAAW,IAAIlB,GAAe,CACvD,gBAAAsB,EACA,OAAQ,IAAM,KAAK,OAAO,EAC1B,YAAa,IAAMD,GAAY,UAC/B,UAAWrC,GAAQ,UACnB,UAAWA,GAAQ,UACnB,4BAA6BmC,GAAqB,KAAO,IAAMA,EAAoB,OACnF,4BAA6BC,GAAqB,KAAO,IAAMA,EAAoB,OACnF,qBAAApD,CACF,CAAC,CAAC,EAEN,CACA,oBAAoBgD,EAAS,CAC3B,OAAIA,EAAQ,aACHA,EAAQ,aAAa,UAAU,EAEjC,IACT,CACA,yBAAyBA,EAASO,EAAYN,EAAWO,EAAe,KAAM,CAI5E,GAHID,IAAe,SACjBA,EAAa,KAAK,oBAAoBP,CAAO,GAE3CO,EAAY,CACd,IAAME,EAAU,KAAKF,CAAU,EAC/B,GAAIE,IAAYhB,EACd,KAAKc,CAAU,EAAIC,GAAgBR,MAC9B,CACL,IAAMU,EAAiBT,GAAaA,EAAUM,CAAU,EACpD,CAAC,KAAK,2BAA6B,CAACG,GACtCrD,EAAU,wBAAwBkD,CAAU,OAAO,KAAK,YAAY,IAAI,SAASE,CAAO,EAAE,CAE9F,CACF,CACF,CAEA,8BAA8BE,EAAYV,EAAW,CAC7BW,GAAcD,EAAW,UAAU,EAC3C,QAAQE,GAAa,CACjC,GAAI,EAAEA,aAAqB,aACzB,OAEF,IAAMC,EAAY,KAAK,2BAA2BD,EAAWE,GAAc,CACxDA,EAAW,OAAO,GAEjC,KAAK,uBAAuBF,EAAWE,EAAW,OAAO,CAAC,CAE9D,EAAGd,CAAS,EACZ,GAAIa,EAAW,CACb,GAAIA,EAAU,UAAYD,EAAU,SAAS,OAAQ,CACnD,KAAK,8BAA8BA,EAAWZ,CAAS,EACvD,IAAMe,EAAQ,MAAM,UAAU,MAAM,KAAKH,EAAU,QAAQ,EAC3DC,EAAU,SAASE,CAAK,CAC1B,CACA,KAAK,qBAAqBF,EAAWH,EAAYE,CAAS,CAC5D,MAAWA,EAAU,YACnB,KAAK,8BAA8BA,EAAWZ,CAAS,CAE3D,CAAC,CACH,CACA,2BAA2BD,EAASiB,EAAwBhB,EAAW,CACrE,IAAMiB,EAAMlB,EAAQ,SACdO,EAAa,KAAK,oBAAoBP,CAAO,EAC7CmB,EAAoBD,EAAI,QAAQ,KAAK,IAAM,EAC3CE,EAAoBD,EAAoB,KAAK,mBAAmB,IAAID,CAAG,EAAI,KAC7EV,EAAe,KACnB,GAAIY,EAAmB,CACrBzB,GAAW,sBAAwBK,EACnC,IAAMqB,EAAkBpB,GAAaM,EAAaN,EAAUM,CAAU,EAAI,OAC1EC,EAAe,IAAIY,EAAkB,UAAUC,CAAe,EAC9Db,EAAa,mBAAmB,IAAI,EACpC,KAAK,WAAWA,EAAc,KAAMS,CAAsB,CAC5D,MAAWE,GACT9D,EAAU,qBAAqB6D,CAAG,EAAE,EAEtC,YAAK,yBAAyBlB,EAASO,EAAYN,EAAWO,CAAY,EACnEA,CACT,CACA,uBAAuBc,EAAQC,EAAM,CACnCC,GAAqBF,EAAO,WAAY,CAACnC,EAAMsC,IAAUF,EAAK,aAAapC,EAAMsC,CAAK,CAAC,CACzF,CACA,qBAAqBjB,EAAcG,EAAYE,EAAW,CACxD,IAAMa,EAAalB,EAAa,OAAO,EACvCG,EAAW,aAAae,EAAYb,CAAS,EAC7CF,EAAW,aAAa,SAAS,cAAcE,EAAU,QAAQ,EAAGa,CAAU,EAC9E,KAAK,eAAe,KAAK,YAAY,KAAK,KAAMlB,CAAY,CAAC,CAC/D,CACA,iBAAiBmB,EAAU,CACzB,IAAMC,EAAW,KAAK,IAAI,IAAI,UAAU,EACnCD,IACHA,EAAW,CAAC,GAETA,EAAS,QACZA,EAAS,KAAK,KAAK,OAAO,CAAC,EAE7BA,EAAS,QAAQzE,GAAMA,EAAG,aAAa,WAAY0E,EAAS,SAAS,CAAC,CAAC,CACzE,CACA,YAAYhC,EAAUC,EAAoBI,EAAW,CACnD,IAAMzB,EAAOqD,GAAcjC,CAAQ,EACnC,KAAK,uBAAuBpB,EAAMqB,EAAoBI,CAAS,CACjE,CACA,uBAAuBD,EAAS8B,EAAY7B,EAAW8B,EAA4B,GAAO,CAGxF,GAFA,KAAK,KAAO/B,EACZ,KAAK,0BAA4B+B,EAC7BD,EACF,QAASE,EAAI,EAAGA,EAAIF,EAAW,OAAQE,IAAK,CAC1C,IAAMC,EAAYH,EAAWE,CAAC,EAC9B,KAAK,mBAAmB,IAAIC,EAAU,SAAUA,CAAS,CAC3D,CAEF,KAAK,aAAajC,EAASC,CAAS,CACtC,CACA,QAAS,CACP,OAAO,KAAK,IACd,CACA,qBAAsB,CACpB,OAAO,KAAK,IACd,CACA,gBAAiB,CACf,OAAO,KAAK,oBAAoB,CAClC,CACA,mBAAmBgC,EAAW,CAC5B,KAAK,gBAAkBA,CACzB,CACA,oBAAqB,CACnB,OAAO,KAAK,eACd,CAGA,OAAOzD,EAAM,CACX,KAAK,KAAOA,CACd,CACA,oBAAoB0D,EAAa,CAC/B,OAAO,KAAK,KAAK,cAAcA,CAAW,CAC5C,CACA,uBAAuBC,EAAUC,EAAW,CAC1C,IAAIhD,EAASgD,EACb,OAAID,GAAY,KACP,MAEJ/C,IACHA,EAAS,KAAK,MAEZiD,GAAiBF,CAAQ,EACpB,CACL,QAASA,EACT,OAAA/C,CACF,EAEK,CACL,QAAS+C,EAAS,OAAO,EACzB,OAAA/C,CACF,EACF,CACA,aAAa+C,EAAUC,EAAW,CAChC,GAAM,CACJ,QAAApC,EACA,OAAAZ,CACF,EAAI,KAAK,uBAAuB+C,EAAUC,CAAS,GAAK,CAAC,EACrD,CAACpC,GAAW,CAACZ,GAGjBA,EAAO,sBAAsB,aAAcY,CAAO,CACpD,CACA,YAAYmC,EAAUC,EAAW,CAC/B,GAAM,CACJ,QAAApC,EACA,OAAAZ,CACF,EAAI,KAAK,uBAAuB+C,EAAUC,CAAS,GAAK,CAAC,EACrD,CAACpC,GAAW,CAACZ,GAGjBA,EAAO,YAAYY,CAAO,CAC5B,CACA,aAAc,CACZ,OAAO,KAAK,SACd,CACA,WAAWsC,EAASC,EAAU,CAAC,EAAG,CAChC,GAAID,IAAY,KAAK,QAAS,CAC5B,KAAK,QAAUA,EACf,GAAM,CACJ,eAAAE,CACF,EAAID,EACJE,GAAY,KAAK,KAAMH,EAAS,CAC9B,eAAAE,CACF,CAAC,CACH,CACF,CACA,aAAaE,EAAWH,EAAU,CAAC,EAAG,CACpC,GAAIG,IAAc,KAAK,UAAW,CAChC,KAAK,UAAYA,EACjB,GAAM,CACJ,eAAAF,CACF,EAAID,EACJI,EAAc,KAAK,KAAMD,EAAW,CAClC,eAAAF,CACF,CAAC,EACD,IAAMnE,EAAQ,CACZ,KAAM,iBACN,QAAS,KAAK,SAChB,EACA,KAAK,mBAAmBA,CAAK,CAC/B,CACF,CACA,SAAU,CACJ,KAAK,kBACP,KAAK,gBAAkB,QAErB,KAAK,iBACP,KAAK,eAAiB,KAAK,YAAY,KAAK,cAAc,GAE5D,MAAM,QAAQ,CAChB,CACA,oBAAoBA,EAAOM,EAAU4D,EAAS,CAC5C,KAAK,KAAK,iBAAiBlE,EAAOM,EAAU4D,CAAO,EACnD,KAAK,eAAe,IAAM,KAAK,KAAK,oBAAoBlE,EAAOM,CAAQ,CAAC,CAC1E,CACA,YAAYiE,EAAW,CACrB,KAAK,gBAAgB,YAAYA,CAAS,CAC5C,CACA,eAAeA,EAAW,CACxB,KAAK,gBAAgB,eAAeA,CAAS,CAC/C,CACA,iBAAiBA,EAAW,CAC1B,OAAO,KAAK,gBAAgB,iBAAiBA,CAAS,CACxD,CACA,oBAAoBA,EAAWC,EAAa,CAC1C,KAAK,gBAAgB,oBAAoBD,EAAWC,CAAW,CACjE,CACF,EAGIC,GAAmB,CAErB,kBAAmB,WAEnB,kBAAmB,aAEnB,mBAAoB,cAEpB,iBAAkB,YAGlB,0BAA2B,qBAE3B,cAAe,MAEf,eAAgB,YAEhB,eAAgB,SAEhB,eAAgB,OAEhB,gBAAiB,QAEjB,gBAAiB,QAEjB,gBAAiB,cAEjB,gBAAiB,QAGjB,eAAgB,cAEhB,gBAAiB,cAEjB,cAAe,YAEf,qBAAsB,cAEtB,mBAAoB,YAGpB,4BAA6B,qBAE7B,MAAO,QAEP,MAAO,QAEP,OAAQ,SAER,MAAO,OAEP,MAAO,QAEP,SAAU,WAEV,KAAM,OAEN,KAAM,OAEN,OAAQ,SAER,SAAU,WAEV,YAAa,eAEb,aAAc,UAEd,KAAM,OACN,QAAS,WAET,OAAQ,SAER,QAAS,UAET,SAAU,WAEV,SAAU,WAEV,QAAS,MAET,UAAW,cAEX,gBAAiB,QAEjB,mBAAoB,QAEpB,cAAe,OAEf,aAAc,MAEd,eAAgB,QAEhB,WAAY,QAEZ,cAAe,QAEf,WAAY,cAEZ,WAAY,OAEZ,QAAS,OAET,KAAM,OAEN,UAAW,MAEX,YAAa,QAEb,UAAW,aAEX,UAAW,aAEX,WAAY,cACZ,QAAS,WAET,cAAe,MAEf,eAAgB,OAEhB,WAAY,OAEZ,sBAAuB,QAEvB,0BAA2B,OAE3B,6BAA8B,cAE9B,4BAA6B,KAE7B,8BAA+B,OAE/B,yBAA0B,OAE1B,4BAA6B,QAE7B,eAAgB,QAEhB,2BAA4B,WAE5B,cAAe,OAEf,gBAAiB,mBAEjB,sBAAuB,yBAEvB,kBAAmB,qBAEnB,cAAe,kBAEf,eAAgB,kBAClB,EACA,SAASC,GAAYC,EAAUC,EAAK5D,EAAQ,CAC1C,IAAM6D,EAAeC,GAAkBH,EAAUC,EAAK5D,CAAM,EAC5D,GAAI6D,EAAc,CAChB,GAAM,CACJ,UAAAN,CACF,EAAIM,EACJ,GAAI,OAAON,GAAc,UAAYA,EAAU,QAAQ,SAAS,EAAI,IAAM,OAAOA,GAAc,UAAYA,EAAU,SAAS,EAC5H,OAAOM,CAEX,CACA,IAAME,EAAU,SAAS,cAAc,MAAM,EAC7C,OAAAA,EAAQ,YAAYF,CAAY,EACzBE,CACT,CACA,SAASD,GAAkBH,EAAUC,EAAK5D,EAAQgE,EAAa,CAC7D,IAAIC,EAAmB,KACjBC,EAAQlE,GAAUA,EAAO,UAAU,EAAE,MAI3C,GAHIkE,IACFD,EAAmBC,EAAMP,CAAQ,GAE/BC,GAAO,CAACK,EAAkB,CAC5B,IAAME,EAAeP,EAAI,IAAI,OAAO,EAChCO,IACFF,EAAmBE,EAAaR,CAAQ,EAE5C,CACA,GAAIM,EAAkB,CACpB,IAAIG,EACJ,GAAI,OAAOH,GAAqB,WAC9BG,EAAiBH,EAAiB,UACzB,OAAOA,GAAqB,SACrCG,EAAiBH,MAEjB,OAAM,IAAI,MAAM,2DAA2D,EAE7E,GAAI,OAAOG,GAAmB,SAC5B,OAAO5B,GAAc4B,CAAc,EAErC,GAAIpB,GAAiBoB,CAAc,EACjC,OAAOA,EAETpG,EAAU,0DAA0D,CACtE,KAAO,CACL,IAAMqG,EAAO,SAAS,cAAc,MAAM,EACtCC,EAAWb,GAAiBE,CAAQ,EACxC,OAAKW,IACEN,EAIHM,EAAWX,GAHX3F,EAAU,qBAAqB2F,CAAQ,EAAE,EACzCW,EAAW,KAKfD,EAAK,aAAa,QAAS,mBAAmBC,CAAQ,EAAE,EACxDD,EAAK,aAAa,eAAgB,IAAI,EACtCE,EAAaF,EAAM,cAAc,EAC1BA,CACT,CACF,CAGA,SAASG,GAAeC,EAAIC,EAAIC,EAAY,CAC1C,GAAIA,IAAe,EACjB,MAAO,GAET,IAAMC,EAAQ,KAAK,IAAIH,EAAG,QAAUC,EAAG,OAAO,EACxCG,EAAQ,KAAK,IAAIJ,EAAG,QAAUC,EAAG,OAAO,EAC9C,OAAO,KAAK,IAAIE,EAAOC,CAAK,GAAKF,CACnC,CAGA,IAAIG,GAAgB,KAAM,CACxB,YAAYC,EAAUC,EAAoB,GAAO,CAC/C,KAAK,kBAAoB,IACzB,KAAK,aAAe,CAAC,EACrB,KAAK,SAAW,GAChB,KAAK,kBAAoB,IAAIC,GAC7B,KAAK,SAAWF,EAChB,KAAK,kBAAoBC,EACzB,IAAME,EAAgB,KAAK,aAAa,KAAK,IAAI,EAC3CC,EAAe,KAAK,YAAY,KAAK,IAAI,EACzCC,EAAc,KAAK,WAAW,KAAK,IAAI,EAC7C,KAAK,SAAS,iBAAiB,aAAcF,EAAe,CAC1D,QAAS,EACX,CAAC,EACD,KAAK,SAAS,iBAAiB,YAAaC,EAAc,CACxD,QAAS,EACX,CAAC,EACD,KAAK,SAAS,iBAAiB,WAAYC,EAAa,CACtD,QAAS,EACX,CAAC,EACD,KAAK,aAAa,KAAK,IAAM,CAC3B,KAAK,SAAS,oBAAoB,aAAcF,EAAe,CAC7D,QAAS,EACX,CAAC,EACD,KAAK,SAAS,oBAAoB,YAAaC,EAAc,CAC3D,QAAS,EACX,CAAC,EACD,KAAK,SAAS,oBAAoB,WAAYC,EAAa,CACzD,QAAS,EACX,CAAC,CACH,CAAC,CACH,CACA,eAAeC,EAAW,CACxB,QAAS1C,EAAI,EAAGA,EAAI0C,EAAU,OAAQ1C,IAEpC,GADgB0C,EAAU1C,CAAC,EAAE,aAAe,KAAK,WAAW,WAE1D,OAAO0C,EAAU1C,CAAC,EAGtB,OAAO,IACT,CACA,iBAAiB2C,EAAWhG,EAAU,CACpC,KAAK,kBAAkB,iBAAiBgG,EAAWhG,CAAQ,CAC7D,CACA,oBAAoBgG,EAAWhG,EAAU,CACvC,KAAK,kBAAkB,oBAAoBgG,EAAWhG,CAAQ,CAChE,CACA,aAAaiG,EAAY,CACvB,GAAI,KAAK,SACP,OAEF,KAAK,WAAaA,EAAW,QAAQ,CAAC,EACtC,KAAK,SAAW,GAChB,KAAK,MAAQ,GACb,IAAMC,EAAiB,KAAK,WAC5B,OAAO,WAAW,IAAM,CACtB,IAAMC,EAAe,KAAK,aAAeD,EACzC,GAAI,KAAK,UAAYC,GAAgB,CAAC,KAAK,MAAO,CAChD,KAAK,MAAQ,GACb,IAAMzG,EAAQ,CACZ,KAAM,UACN,WAAY,KAAK,WACjB,WAAAuG,CACF,EACA,KAAK,kBAAkB,cAAcvG,CAAK,CAC5C,CACF,EAAG,GAAG,CACR,CACA,YAAYuG,EAAY,CACtB,GAAI,CAAC,KAAK,SACR,OAEF,IAAMG,EAAQ,KAAK,eAAeH,EAAW,OAAO,EACpD,GAAI,CAACG,EACH,OAEqB,CAAClB,GAAekB,EAAO,KAAK,WAAY,CAAC,IAE9D,KAAK,MAAQ,GAEjB,CACA,WAAWH,EAAY,CACrB,GAAK,KAAK,SAGV,IAAI,CAAC,KAAK,MAAO,CACf,IAAMvG,EAAQ,CACZ,KAAM,MACN,WAAY,KAAK,UACnB,EACA,KAAK,kBAAkB,cAAcA,CAAK,EAC1C,KAAK,kBAAkB,CACzB,CACI,KAAK,mBAAqBuG,EAAW,YACvCA,EAAW,eAAe,EAE5B,KAAK,SAAW,GAClB,CACA,mBAAoB,CAClB,IAAM9G,EAAuB,IAAI,KAAK,EAAG,QAAQ,EACjD,GAAI,KAAK,aAAe,KAAK,YAAc,EAEzC,GADiBA,EAAM,KAAK,YACb,KAAK,kBAAmB,CACrC,IAAMO,EAAQ,CACZ,KAAM,YACN,WAAY,KAAK,UACnB,EACA,KAAK,kBAAkB,cAAcA,CAAK,EAC1C,KAAK,YAAc,IACrB,MACE,KAAK,YAAcP,OAGrB,KAAK,YAAcA,CAEvB,CACA,SAAU,CACR,KAAK,aAAa,QAAQkH,GAAQA,EAAK,CAAC,CAC1C,CACF,EAGIC,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOIC,GAAoB,cAAcxF,CAAU,CAC9C,YAAYyF,EAAc,CACxB,MAAM,EACN,KAAK,WAAa1F,EAClB,KAAK,SAAWA,EAChB,KAAK,UAAYA,EACjB,KAAK,WAAaA,EAClB,KAAK,UAAYA,EACZ0F,GACH,KAAK,YAAYF,EAAqB,CAE1C,CACA,UAAUhI,EAAO,CACf,KAAK,eAAiBA,EAAM,cAC9B,CACA,qBAAqBmI,EAAYC,EAAUC,EAAWC,EAAYC,EAAW,CAC3E,KAAK,WAAaJ,EAClB,KAAK,SAAWC,EAChB,KAAK,UAAYC,EACjB,KAAK,WAAaC,EAClB,KAAK,UAAYC,CACnB,CACA,UAAUnG,EAAQoG,EAAgB,GAAO,CACvC,KAAK,OAASpG,EACd,KAAK,cAAgBoG,EACrB,KAAK,wBAAwB,EACzB,GAAC,KAAK,OAAO,WAAW,GAAK,CAAC,KAAK,OAAO,UAAU,EAAE,gBAG1D,KAAK,UAAU,gBAAiB,KAAK,SAAUpG,CAAM,EACrD,KAAK,UAAU,iBAAkB,KAAK,UAAWA,CAAM,EACvD,KAAK,UAAU,aAAc,KAAK,UAAWA,CAAM,EACnD,KAAK,2BAA2B,aAAc,IAAM,KAAK,YAAY,CAAC,EACtE,KAAK,yBAAyB,CAC5B,iBAAkB,KAAK,YAAY,KAAK,IAAI,EAE5C,YAAa,KAAK,cAAc,KAAK,IAAI,EAEzC,sBAAuB,KAAK,cAAc,KAAK,IAAI,CACrD,CAAC,EACD,KAAK,cAAc,EACrB,CACA,UAAU2D,EAAU0C,EAASrG,EAAQ,CACnC,GAAIqG,GAAW,KACb,OAEF,IAAMC,EAAQxC,GAAkBH,EAAU,KAAK,IAAK3D,CAAM,EACtDsG,GACFD,EAAQ,YAAYC,CAAK,CAE7B,CACA,eAAgB,CACd,KAAK,YAAY,EACZ,KAAK,eACR,KAAK,gBAAgB,CAEzB,CACA,aAAc,CACZ,IAAMC,EAAgB,KAAK,eAAe,wBAAwB,KAAK,MAAM,EAC7E,GAAI,KAAK,SAAU,CACjB,IAAMC,EAAcD,IAAkB,MACtCjD,EAAc,KAAK,SAAUkD,EAAa,CACxC,eAAgB,EAClB,CAAC,CACH,CACA,GAAI,KAAK,UAAW,CAClB,IAAMC,EAAeF,IAAkB,OACvCjD,EAAc,KAAK,UAAWmD,EAAc,CAC1C,eAAgB,EAClB,CAAC,CACH,CACA,GAAI,KAAK,UAAW,CAClB,IAAMC,EAAmB,CAAC,KAAK,OAAO,UAAU,EAAE,YAAc,CAAC,KAAK,IAAI,IAAI,YAAY,EACpFC,EAASJ,GAAkB,KACjCjD,EAAc,KAAK,UAAW,CAACoD,GAAoBC,EAAQ,CACzD,eAAgB,EAClB,CAAC,CACH,CACF,CACA,yBAA0B,CACxB,KAAK,UAAU,aAAc,KAAK,WAAY,KAAK,MAAM,EACzD,IAAMC,EAA0B,KAAK,OAAO,UAAU,EAAE,aAC/B,KAAK,IAAI,+BAA+B,GACzCA,IACtB,KAAK,yBAAyB,CAE5B,YAAa,KAAK,yBAAyB,KAAK,IAAI,EAEpD,sBAAuB,KAAK,yBAAyB,KAAK,IAAI,CAChE,CAAC,EACD,KAAK,yBAAyB,EAElC,CACA,0BAA2B,CACzB,GAAI,KAAK,WAAY,CACnB,IAAMC,EAAc,KAAK,eAAe,wBAAwB,KAAK,MAAM,IAAM,QACjFvD,EAAc,KAAK,WAAYuD,EAAa,CAC1C,eAAgB,EAClB,CAAC,CACH,CACF,CAIA,iBAAkB,CAChB,GAAI,CAAC,KAAK,WACR,OAEF,IAAMC,EAAwB,KAAK,eAAe,6BAA6B,EACzEC,EAAe,KAAK,eAAe,6BAA6B,KAAK,MAAM,GAAK,GAChFC,EAAwBF,EAAsB,KAAKG,GAAO,KAAK,eAAe,6BAA6BA,CAAG,GAAK,EAAO,EAC1HC,EAAYH,GAAgB,GAAKC,EACvC1D,EAAc,KAAK,WAAY4D,EAAW,CACxC,eAAgB,EAClB,CAAC,EACGH,GAAgB,EAClB,KAAK,WAAW,aAAeA,EAAe,GAAG,SAAS,EAE1DI,EAAc,KAAK,UAAU,CAEjC,CACF,EACIC,GAAwB,CAC1B,SAAU,oBACV,UAAWvB,EACb,EAGIwB,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YASIC,GAAa,cAAcjH,CAAU,CACvC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,QAAUD,EACf,KAAK,cAAgBA,EACrB,KAAK,eAAiBA,EACtB,KAAK,MAAQA,EACb,KAAK,OAASA,EACd,KAAK,MAAQA,EAIb,KAAK,WAAaA,EAClB,KAAK,SAAWA,EAChB,KAAK,UAAYA,EACjB,KAAK,WAAaA,EAClB,KAAK,UAAYA,EACjB,KAAK,kBAAoB,CAC3B,CACA,UAAUxC,EAAO,CACf,KAAK,eAAiBA,EAAM,eAC5B,KAAK,YAAcA,EAAM,YACzB,KAAK,gBAAkBA,EAAM,eAC/B,CAGA,SAAU,CACR,MAAM,QAAQ,CAChB,CACA,QAAQe,EAAQ,CACd,IAAM4I,EAAY,KAAK,OAEvB,OADA,KAAK,OAAS5I,EACV,KAAK,gBAAgB,GAAK,KAAK,iBAAmB,KAAK,gBAAgB,GAAK,KAAK,iBAAmB,KAAK,YAAY,GAAK,KAAK,aAAe,KAAK,uBAAuB,GAAK,KAAK,yBAA2B4I,EAAU,oBAAsB5I,EAAO,oBAAsB4I,EAAU,kBAAoB5I,EAAO,iBAC5S,IAET,KAAK,eAAeA,CAAM,EACnB,GACT,CACA,iBAAkB,CAChB,IAAI4B,EAAW,KAAK,OAAO,UAAY8G,GACvC,OAAA9G,EAAWA,GAAYA,EAAS,KAAOA,EAAS,KAAK,EAAIA,EAClDA,CACT,CACA,KAAK5B,EAAQ,CACX,KAAK,OAASA,EACd,KAAK,gBAAkB,KAAK,gBAAgB,EAC5C,KAAK,YAAY,KAAK,gBAAiB,CAACyI,EAAqB,CAAC,EAC9D,KAAK,SAAS,EACd,KAAK,QAAQ,EACb,KAAK,UAAU,EACf,KAAK,gBAAgB,EACrB,KAAK,kBAAkB,EACvB,KAAK,eAAezI,CAAM,CAC5B,CACA,eAAeA,EAAQ,CACrB,GAAI,KAAK,oBAAsBA,EAAO,YAAa,CACjD,KAAK,mBAAqBA,EAAO,YACjC,IAAM6I,EAAuBC,GAAc,KAAK,mBAAoB,EAAI,EACpE,KAAK,QACP,KAAK,MAAM,YAAcD,EAE7B,CACF,CACA,UAAU7D,EAAU0C,EAASrG,EAAQ,CACnC,GAAIqG,GAAW,KACb,OAEF,IAAMC,EAAQxC,GAAkBH,EAAU,KAAK,IAAK3D,CAAM,EACtDsG,GACFD,EAAQ,YAAYC,CAAK,CAE7B,CACA,UAAW,CACT,GAAM,CACJ,IAAA1C,CACF,EAAI,KACJ,GAAIA,EAAI,IAAI,eAAe,EACzB,OAEF,IAAM8D,EAAgB,IAAI5C,GAAc,KAAK,OAAO,EAAG,EAAI,EACrD6C,EAAmB,KAAK,uBAAuB,EAC/CC,EAAgBD,GAAoB9I,EAAQ,KAAK,KAAK,EACtDgJ,EAAoBD,EAAgB,IAAI9C,GAAc,KAAK,MAAO,EAAI,EAAI4C,EAChF,GAAI,KAAK,OAAO,WAAY,CAC1B,IAAMpC,EAAYsC,EAAgB,MAAQ,UACpCE,EAAa9I,GAAS,KAAK,OAAO,8BAA8BA,EAAM,UAAU,EACtF,KAAK,oBAAoB6I,EAAmB,CAC1C,CAACvC,CAAS,EAAGwC,CACf,CAAC,CACH,CACA,GAAI,KAAK,OAAO,cAAe,CAC7B,IAAMC,EAAc/I,GAAS,CAC3B,IAAMgJ,EAAShJ,EAAM,WAAW,OAC5B2I,IAAqB,KAAK,OAAO,SAASK,CAAM,GAAK,KAAK,eAAe,SAASA,CAAM,IAG5F,KAAK,eAAe,aAAa,KAAK,OAAO,OAAQ,GAAO,gBAAgB,CAC9E,EACA,KAAK,oBAAoBN,EAAe,CACtC,IAAKK,CACP,CAAC,CACH,CACA,GAAI,KAAK,OAAO,mBAAoB,CAClC,IAAME,EAA4B,IAAInD,GAAc,KAAK,cAAe,EAAI,EAC5E,KAAK,oBAAoBmD,EAA2B,CAClD,IAAK,IAAM,KAAK,OAAO,WAAW,KAAK,aAAa,CACtD,CAAC,EACD,KAAK,eAAe,IAAMA,EAA0B,QAAQ,CAAC,CAC/D,CACA,KAAK,eAAe,IAAMP,EAAc,QAAQ,CAAC,EAC7CE,GACF,KAAK,eAAe,IAAMC,EAAkB,QAAQ,CAAC,CAEzD,CACA,iBAAkB,CAChB,OAAO,KAAK,OAAO,YAAc,KAAK,YAAY,0BAA0B,CAC9E,CACA,wBAAyB,CACvB,OAAO,KAAK,YAAY,oCAAoC,CAC9D,CACA,SAAU,CACR,GAAI,CAAC,KAAK,MACR,OAGF,GADA,KAAK,gBAAkB,KAAK,gBAAgB,EACxC,CAAC,KAAK,gBAAiB,CACzBK,GAAkB,KAAK,KAAK,EAC5B,KAAK,MAAQ,OACb,MACF,CACA,IAAMC,EAAe,KAAK,YAAY,oBAAoB,EAC1D,KAAK,UAAUA,EAAe,OAAS,UAAW,KAAK,MAAO,KAAK,OAAO,MAAM,EAChF,KAAK,MAAM,UAAU,OAAO,sBAAuB,CAACA,CAAY,EAChE,KAAK,wBAA0B,KAAK,uBAAuB,EAC3D,KAAK,2BAA2B,KAAK,MAAO,CAC1C,MAAO,IAAM,KAAK,OAAO,eAAe,KAAK,KAAK,CACpD,CAAC,EACD,KAAK,MAAM,UAAU,OAAO,6BAA8B,KAAK,uBAAuB,CACxF,CACA,uBAAuBC,EAAkB,CACvC,IAAMpI,EAAS,KAAK,OAAO,OACrBqI,EAAsB,KAAK,YAAY,oBAAoB,EACjE,GAAID,GAAoB,CAACC,GACvB,GAAI,KAAK,YAAY,4BAA4BrI,CAAM,EACrD,YAAK,OAAO,WAAW,KAAK,eAAiB,KAAK,OAAS,KAAK,OAAO,CAAC,EACjE,WAEA,KAAK,OAAO,WACrB,YAAK,OAAO,eAAe,KAAK,OAAS,KAAK,eAAiB,KAAK,OAAO,CAAC,EACrE,GAET,MAAO,EACT,CACA,aAAc,CACZ,OAAO,KAAK,OAAO,aACrB,CACA,WAAY,CAOV,GANA,KAAK,YAAc,KAAK,OAAO,cAC1B,KAAK,iBACR,KAAK,eAAiB,KAAK,WAAW,IAAI6F,GAAkB,EAAI,CAAC,EACjE,KAAK,eAAe,qBAAqB,KAAK,WAAY,KAAK,SAAU,KAAK,UAAW,KAAK,WAAY,KAAK,SAAS,GAE1H,KAAK,eAAe,UAAU,KAAK,OAAO,MAAM,EAC5C,CAAC,KAAK,YACR,OAEF,KAAK,oBAAoB,KAAK,OAAO,OAAQ,CAC3C,cAAe,IAAM,CACnB,KAAK,kBAAqC,IAAI,KAAK,EAAG,QAAQ,CAChE,CACF,CAAC,EACG,KAAK,QACP,KAAK,2BAA2B,KAAK,OAAQ,CAC3C,MAAO7G,GAAS,CACd,IAAMsJ,EAAS,KAAK,OAAO,OAAO,SAAS,EAErCC,EAD2B,IAAI,KAAK,EAAG,QAAQ,EACrB,KAAK,kBAAoB,GAEzD,GAAI,EADiBD,GAAUC,GACZ,CAEjB,IAAMC,EADgB,KAAK,IAAI,IAAI,cAAc,IAAM,OACrBxJ,EAAM,SAAWA,EAAM,QAAUA,EAAM,SACzE,KAAK,OAAO,aAAawJ,CAAS,CACpC,CACF,CACF,CAAC,EAEH,IAAMC,EAAmB,IAAM,CAC7B,IAAMC,EAAO,KAAK,OAAO,OAAO,QAAQ,EAIxC,GAHA,KAAK,oBAAoB,4BAA6BA,IAAS,KAAK,EACpE,KAAK,oBAAoB,6BAA8BA,IAAS,MAAM,EACtE,KAAK,oBAAoB,6BAA8B,CAACA,CAAI,EACxD,KAAK,OAAO,OAAO,UAAU,EAAE,aAAc,CAG/C,IAAMC,EAAiB,CAFD,KAAK,gBAAgB,+BAA+B,KAAK,OAAO,MAAM,GACjD,MAAMC,GAAa,KAAK,OAAO,OAAO,QAAQ,GAAKA,EAAU,QAAQ,CAAC,EAEjH,KAAK,oBAAoB,8BAA+BD,CAAc,CACxE,CACF,EACA,KAAK,yBAAyB,CAC5B,YAAaF,EACb,sBAAuBA,CACzB,CAAC,CACH,CACA,iBAAkB,CACX,KAAK,SAGV,KAAK,gBAAgB,KAAK,OAAO,iBAAkB,KAAK,QAAS,KAAK,oBAAoB,KAAK,IAAI,CAAC,CACtG,CACA,mBAAoB,CAClB,GAAI,CAAC,KAAK,cACR,OAEiB,KAAK,gBAAgB,KAAK,OAAO,mBAAoB,KAAK,cAAe,KAAK,sBAAsB,KAAK,IAAI,CAAC,EAE/H,KAAK,2BAA2B,KAAK,cAAe,CAClD,MAAO,IAAM,KAAK,OAAO,WAAW,KAAK,aAAa,CACxD,CAAC,EAED,KAAK,cAAgB,MAEzB,CACA,gBAAgBI,EAASlI,EAASmI,EAAuB,CACvD,GAAI,CAACD,EACH,OAAAX,GAAkBvH,CAAO,EAClB,GAET,IAAMX,EAAS,KAAK,OAAO,OAC3B,YAAK,UAAU,SAAUW,EAASX,CAAM,EACxC,KAAK,oBAAoBA,EAAQ,CAC/B,cAAe8I,CACjB,CAAC,EACDA,EAAsB,EACf,EACT,CACA,qBAAsB,CACpB,IAAMC,EAAgB,KAAK,OAAO,OAAO,eAAe,EACxDzF,EAAc,KAAK,QAASyF,EAAe,CACzC,eAAgB,EAClB,CAAC,CACH,CACA,uBAAwB,CACtB,IAAMA,EAAgB,KAAK,OAAO,OAAO,eAAe,EACxD,KAAK,cAAc,UAAU,OAAO,mBAAoBA,CAAa,CACvE,CACA,wBAAwBC,EAAU,CAChC,OAAIA,EACK,KAAK,eAAiB,KAAK,OAAS,KAAK,OAAO,EAElD,KAAK,OAAS,KAAK,eAAiB,KAAK,OAAO,CACzD,CACF,EAGIC,GAAkB,cAAc5I,CAAU,CAC5C,aAAc,CACZ,MACA;AAAA;AAAA;AAAA;AAAA,eAIW,EACX,KAAK,SAAWD,EAChB,KAAK,SAAWA,EAChB,KAAK,QAAUA,CACjB,CACA,UAAUxC,EAAO,CACf,KAAK,YAAcA,EAAM,WAC3B,CAGA,SAAU,CACR,MAAM,QAAQ,CAChB,CACA,KAAKe,EAAQ,CACX,KAAK,OAASA,EACd,KAAK,cAAc,EACnB,KAAK,WAAW,EAChB,KAAK,mBAAmB,EACxB,KAAK,iBAAiB,CACxB,CACA,eAAgB,CACI,KAAK,OACT,UACZX,EAAU,4GAA4G,CAE1H,CACA,kBAAmB,CACjB,KAAK,UAAU,oBAAqB,KAAK,QAAQ,EACjD,KAAK,UAAU,oBAAqB,KAAK,QAAQ,EACjD,IAAMkL,EAAelK,GAAS,CAC5B,GAAImK,GAA4BnK,CAAK,EACnC,OAEF,IAAMoK,EAAmB,CAAC,KAAK,OAAO,YAAY,WAAW,EAC7D,KAAK,YAAY,qBAAqB,KAAK,OAAO,YAAY,uBAAuB,EAAGA,EAAkB,kBAAkB,CAC9H,EACA,KAAK,0BAA0B,KAAK,SAAUF,CAAY,EAC1D,KAAK,0BAA0B,KAAK,SAAUA,CAAY,EAC1D,IAAMG,EAAwBrK,GAAS,CACrCsK,GAA0BtK,CAAK,CACjC,EACA,KAAK,2BAA2B,KAAK,SAAU,CAC7C,SAAUqK,CACZ,CAAC,EACD,KAAK,2BAA2B,KAAK,SAAU,CAC7C,SAAUA,CACZ,CAAC,EACD,KAAK,2BAA2B,KAAK,OAAO,EAAG,CAC7C,SAAUH,CACZ,CAAC,EACD,KAAK,qBAAqB,EAC1B,IAAMK,EAAsB,KAAK,OAAO,YAAY,uBAAuB,EACrEC,EAAa,KAAK,qBAAqB,KAAK,IAAI,EACtD,KAAK,oBAAoBD,EAAqB,CAC5C,gBAAiBC,EACjB,kBAAmBA,CACrB,CAAC,CACH,CACA,0BAA0BzE,EAAU0E,EAAQ,CAC1C,IAAM/B,EAAgB,IAAI5C,GAAcC,EAAU,EAAI,EACtD,KAAK,oBAAoB2C,EAAe,CACtC,IAAK+B,CACP,CAAC,EACD,KAAK,eAAe,IAAM/B,EAAc,QAAQ,CAAC,EACjD,KAAK,2BAA2B3C,EAAU,CACxC,MAAO0E,CACT,CAAC,CACH,CACA,sBAAuB,CAErB,GADoB,KAAK,OAAO,YAChB,aAAa,EAAG,CAC9B,IAAMC,EAAW,KAAK,OAAO,YAAY,WAAW,EACpDpG,EAAc,KAAK,SAAUoG,CAAQ,EACrCpG,EAAc,KAAK,SAAU,CAACoG,CAAQ,CACxC,MACEpG,EAAc,KAAK,SAAU,EAAK,EAClCA,EAAc,KAAK,SAAU,EAAK,CAEtC,CACA,UAAUK,EAAUhD,EAAS,CAC3B,IAAM2F,EAAQxC,GAAkBH,EAAU,KAAK,IAAK,IAAI,EACpD2C,GACF3F,EAAQ,YAAY2F,CAAK,CAE7B,CACA,oBAAqB,CACnB,GAAI,CAAC,KAAK,OAAO,YAAY,aAAa,EAAG,CAC3ChD,EAAc,KAAK,SAAU,EAAK,EAClCA,EAAc,KAAK,SAAU,EAAK,EAClC,MACF,CACF,CACA,YAAa,CACX,GAAM,CACJ,YAAAqG,EACA,YAAAC,CACF,EAAI,KAAK,OACT,GAAI/K,EAAQ8K,CAAW,EAAG,CACxB,IAAMnC,EAAuBC,GAAckC,EAAa,EAAI,EAC5D,KAAK,QAAQ,YAAcnC,CAC7B,CACA,KAAK,oBAAoB,kBAAmB,CAACoC,EAAY,eAAe,GAAG,mBAAmB,CAChG,CACF,EAGIC,IAA8BC,IAChCA,EAAa,oBAAyB,0BACtCA,EAAa,uBAA4B,wCACzCA,EAAa,yBAA8B,2CAC3CA,EAAa,gBAAqB,gCAClCA,EAAa,qBAA0B,2BACvCA,EAAa,kBAAuB,mCACpCA,EAAa,uBAA4B,wCACzCA,EAAa,uBAA4B,wCACzCA,EAAa,WAAgB,2BAC7BA,EAAa,gBAAqB,iCAClCA,EAAa,kBAAuB,mCACpCA,EAAa,gBAAqB,iCAClCA,EAAa,cAAmB,+BAChCA,EAAa,qBAA0B,sCACvCA,EAAa,mBAAwB,oCACrCA,EAAa,iBAAsB,kCACnCA,EAAa,iBAAsB,6BACnCA,EAAa,uBAA4B,yCACzCA,EAAa,yBAA8B,4CAC3CA,EAAa,kBAAuB,mCACpCA,EAAa,gBAAqB,gCAClCA,EAAa,iBAAsB,iCACnCA,EAAa,qBAA0B,sCACvCA,EAAa,cAAmB,6BAChCA,EAAa,YAAiB,2BAC9BA,EAAa,UAAe,yBACrBA,IACND,IAAe,CAAC,CAAC,EAGhBE,IAAgC,IAAM,CACxC,IAAIA,EAAkB,MAAMA,CAAgB,CAK1C,OAAO,SAASC,EAAQ,CACtBD,EAAgB,WAAWC,EAAQ,GAAM,MAAM,CACjD,CAKA,OAAO,gBAAgBC,EAAS,CAC9BF,EAAgB,kBAAkBE,EAAS,GAAM,MAAM,CACzD,CAEA,OAAO,WAAWD,EAAQE,EAAaC,EAAQ,CAC7CJ,EAAgB,iBAAiBC,CAAM,EACnCG,IAAW,QACbJ,EAAgB,qBAAuB,GACnCA,EAAgB,eAAeI,CAAM,IAAM,SAC7CJ,EAAgB,eAAeI,CAAM,EAAI,CAAC,GAE5CJ,EAAgB,eAAeI,CAAM,EAAEH,EAAO,UAAU,EAAIA,GAE5DD,EAAgB,iBAAiBC,EAAO,UAAU,EAAIA,EAExDD,EAAgB,eAAeG,CAAW,CAC5C,CAEA,OAAO,wBAAwBC,EAAQ,CACrC,OAAOJ,EAAgB,eAAeI,CAAM,CAC9C,CAEA,OAAO,kBAAkBF,EAASC,EAAaC,EAAQ,CACrDJ,EAAgB,eAAeG,CAAW,EACrCD,GAGLA,EAAQ,QAAQD,GAAUD,EAAgB,WAAWC,EAAQE,EAAaC,CAAM,CAAC,CACnF,CACA,OAAO,qBAAqBH,EAAQ,CAClC,GAAM,CAACI,EAAaC,CAAW,EAAIL,EAAO,QAAQ,MAAM,GAAG,GAAK,CAAC,EAC3D,CAACM,EAAoBC,CAAkB,EAAIR,EAAgB,qBAAqB,MAAM,GAAG,GAAK,CAAC,EACrG,OAAOK,IAAgBE,GAAsBD,IAAgBE,CAC/D,CACA,OAAO,iBAAiBP,EAAQ,CACzBD,EAAgB,uBACnBA,EAAgB,qBAAuBC,EAAO,SAEhD,IAAMQ,EAAWC,GAAW,wHAAwHA,CAAO,kDAM3J,GALKT,EAAO,QAEAD,EAAgB,qBAAqBC,CAAM,GACrDU,EAAWF,EAAS,IAAIR,EAAO,UAAU,gBAAgBA,EAAO,OAAO,sCAAsCD,EAAgB,oBAAoB,GAAG,CAAC,EAFrJW,EAAWF,EAAS,IAAIR,EAAO,UAAU,oBAAoB,CAAC,EAI5DA,EAAO,SAAU,CACnB,IAAMW,EAASX,EAAO,SAAS,EAC1BW,EAAO,SAEVD,EAAW,GADSC,EACM,OAAO,EAAE,CAEvC,CACF,CACA,OAAO,eAAeT,EAAa,CAC7BH,EAAgB,cAAgB,OAClCA,EAAgB,YAAcG,EAE1BH,EAAgB,cAAgBG,IAClCQ,EAAW,0JAA0J,EACrKA,EAAW,mFAAmF,EAGpG,CAIA,OAAO,gBAAiB,CACtBX,EAAgB,UAAY,EAC9B,CAEA,OAAO,mBAAmBa,EAAYC,EAAQV,EAAQ,CACpD,GAAI,KAAK,eAAeS,EAAYT,CAAM,EACxC,MAAO,GAET,IAAIW,EACJ,GAAIf,EAAgB,UAEhBe,EAAiB,0BAA0BD,CAAM;AAAA;AAAA;AAAA;AAAA,8HAM1Cd,EAAgB,aAAeA,EAAgB,cAAgB,OAAQ,CAChF,IAAMgB,EAAU,OAAO,QAAQlB,EAAW,EAAE,KAAK,CAAC,CAACmB,EAAGC,CAAC,IAAMA,IAAML,CAAU,IAAI,CAAC,EAClFE,EAAiB,0BAA0BD,CAAM,WAAWE,CAAO,qBAAqBhB,EAAgB,qBAAuB,gBAAgBI,CAAM,GAAK,EAAE;AAAA;AAAA;AAAA,eAGrJY,CAAO,YAAYH,CAAU;AAAA;AAAA,uCAELG,CAAO;AAAA;AAAA,oEAGxC,MACED,EAAiB,0BAA0BD,CAAM;AAAA;AAAA,kCAInD,OAAAH,EAAWI,CAAc,EAClB,EACT,CAEA,OAAO,eAAeF,EAAYT,EAAQ,CACxC,MAAO,CAAC,CAACJ,EAAgB,iBAAiBa,CAAU,GAAK,CAAC,CAACb,EAAgB,eAAeI,CAAM,IAAIS,CAAU,CAChH,CAEA,OAAO,uBAAuBT,EAAQ,CACpC,MAAO,CAAC,GAAGe,GAAQnB,EAAgB,gBAAgB,EAAG,GAAGmB,GAAQnB,EAAgB,eAAeI,CAAM,GAAK,CAAC,CAAC,CAAC,CAChH,CAEA,OAAO,2BAA2BA,EAAQ,CACxC,OAAOe,GAAQnB,EAAgB,eAAeI,CAAM,GAAK,CAAC,CAAC,GAAK,CAAC,CACnE,CAEA,OAAO,kBAAmB,CACxB,MAAO,CAACJ,EAAgB,WAC1B,CACF,EAEA,OAAAA,EAAgB,iBAAmB,CAAC,EACpCA,EAAgB,eAAiB,CAAC,EAClCA,EAAgB,qBAAuB,GAChCA,CACT,GAAG,EACCoB,EAAiBpB,GAGjBqB,GAAW,SACXC,GAAa,SACbC,GAAgC,cAAcjL,CAAU,CAC1D,aAAc,CACZ,MAAM,EACN,KAAK,aAAe,EACpB,IAAME,EAAW,SAAS,cAAc,MAAM,EACxCgL,EAAQ,SAAS,cAAc,MAAM,EAC3CA,EAAM,aAAa,QAAS,uBAAuB,EACnD,IAAMnJ,EAAQ,SAAS,cAAc,MAAM,EAC3CA,EAAM,aAAa,QAAS,uBAAuB,EACnD7B,EAAS,YAAYgL,CAAK,EAC1BhL,EAAS,YAAY6B,CAAK,EAC1B,KAAK,uBAAuB7B,CAAQ,CACtC,CACA,UAAU3C,EAAO,CACf,KAAK,cAAgBA,EAAM,aAC7B,CACA,KAAKe,EAAQ,CACX,KAAK,OAAS,KAAK,oBAAoB,wBAAwB,EAC/D,KAAK,OAAS,KAAK,oBAAoB,wBAAwB,EAC/D,KAAK,QAAQA,EAAQ,EAAI,CAC3B,CACA,UAAUA,EAAQ4M,EAAO,CACvB,IAAMC,EAAW,KAAK,IAAID,CAAK,EACzBE,EAAiB9M,EAAO,YAAY6M,CAAQ,EAC5CE,EAAa7M,EAAQ4M,CAAc,EAAIA,EAAiBD,EACxDG,EAAUJ,GAAS,EACrBI,EACF,KAAK,OAAO,YAAcP,GAAWM,EAErC,KAAK,OAAO,YAAcL,GAAaK,EAEzC,KAAK,OAAO,UAAU,OAAO,2BAA4BC,CAAO,EAChE,KAAK,OAAO,UAAU,OAAO,6BAA8B,CAACA,CAAO,CACrE,CACA,uBAAwB,CACtB,KAAK,eACL,IAAMC,EAAmB,KAAK,aAC9B,KAAK,sBAAsB,EAAE,aAAa,IAAM,CAC9C,OAAO,WAAW,IAAM,CAClBA,IAAqB,KAAK,cAC5B,KAAK,eAAe,CAExB,EAAG,GAAG,CACR,CAAC,CACH,CACA,gBAAiB,CACf,KAAK,OAAO,UAAU,OAAO,iCAAiC,EAC9DzE,EAAc,KAAK,MAAM,CAC3B,CACA,QAAQxI,EAAQkN,EAAkB,GAAO,CACvC,IAAMzJ,EAAQzD,EAAO,MAWrB,GAVIyD,IAAU,KAAK,YAGfvD,EAAQF,EAAO,cAAc,EAC/B,KAAK,OAAO,YAAcA,EAAO,eACxBE,EAAQF,EAAO,KAAK,EAC7B,KAAK,OAAO,YAAcyD,EAE1B+E,EAAc,KAAK,MAAM,EAEvB,KAAK,eAAe,wCAAwC,GAC9D,MAAO,GAET,GAAI,OAAO/E,GAAU,UAAY,OAAO,KAAK,WAAc,SAAU,CACnE,IAAMmJ,EAAQnJ,EAAQ,KAAK,UAC3B,KAAK,UAAUzD,EAAQ4M,CAAK,CAC9B,CACA,OAAI,KAAK,WACP,KAAK,OAAO,UAAU,IAAI,iCAAiC,EAExDM,GACH,KAAK,sBAAsB,EAE7B,KAAK,UAAYzJ,EACV,EACT,CACF,EAGI0J,GAA2B,cAAczL,CAAU,CACrD,aAAc,CACZ,MAAM,EACN,KAAK,aAAe,EACpB,IAAME,EAAW,SAAS,cAAc,MAAM,EACxCwL,EAAQ,SAAS,cAAc,MAAM,EAC3CA,EAAM,aAAa,QAAS,wBAAwB,EACpDxL,EAAS,YAAYwL,CAAK,EAC1B,KAAK,uBAAuBxL,CAAQ,EACpC,KAAK,SAAW,KAAK,oBAAoB,yBAAyB,CACpE,CACA,UAAU3C,EAAO,CACf,KAAK,cAAgBA,EAAM,aAC7B,CACA,KAAKe,EAAQ,CACX,KAAK,QAAQA,EAAQ,EAAI,CAC3B,CACA,mBAAoB,CAClB,KAAK,eACL,IAAMiN,EAAmB,KAAK,aAC1B,KAAK,WACP,KAAK,OAAO,EAAE,YAAY,KAAK,SAAS,EAE1C,IAAMI,EAAc,SAAS,cAAc,MAAM,EACjDA,EAAY,aAAa,QAAS,4CAA4C,EAC9E,KAAK,UAAYA,EACjB,KAAK,UAAU,YAAc,KAAK,SAAS,YAC3C,KAAK,OAAO,EAAE,aAAa,KAAK,UAAW,KAAK,QAAQ,EACxD,KAAK,sBAAsB,EAAE,aAAa,IAAM,CAC9C,OAAO,WAAW,IAAM,CAClBJ,IAAqB,KAAK,cAG9B,KAAK,UAAU,UAAU,IAAI,wBAAwB,CACvD,EAAG,EAAE,EACL,OAAO,WAAW,IAAM,CAClBA,IAAqB,KAAK,eAG9B,KAAK,OAAO,EAAE,YAAY,KAAK,SAAS,EACxC,KAAK,UAAY,KACnB,EAAG,GAAG,CACR,CAAC,CACH,CACA,QAAQjN,EAAQkN,EAAkB,GAAO,CACvC,IAAIzJ,EAAQzD,EAAO,MAOnB,OANIsN,EAAS7J,CAAK,IAChBA,EAAQ,IAENA,IAAU,KAAK,WAGf,KAAK,eAAe,wCAAwC,EACvD,IAEJyJ,GACH,KAAK,kBAAkB,EAEzB,KAAK,UAAYzJ,EACbvD,EAAQF,EAAO,cAAc,EAC/B,KAAK,SAAS,YAAcA,EAAO,eAC1BE,EAAQF,EAAO,KAAK,EAC7B,KAAK,SAAS,YAAcyD,EAE5B+E,EAAc,KAAK,QAAQ,EAEtB,GACT,CACF,EAGI+E,GAAwB,IAAM,CAChC,IAAIA,EAAU,KAAM,CAAC,EACrB,OAAAA,EAAQ,UAAY,YACpBA,EAAQ,IAAM,MACdA,EAAQ,MAAQ,QAChBA,EAAQ,OAAS,SACjBA,EAAQ,MAAQ,IAChBA,EAAQ,KAAO,YACfA,EAAQ,GAAK,UACbA,EAAQ,MAAQ,aAChBA,EAAQ,KAAO,YACfA,EAAQ,OAAS,SACjBA,EAAQ,GAAK,KACbA,EAAQ,QAAU,SAClBA,EAAQ,UAAY,WACpBA,EAAQ,UAAY,OACpBA,EAAQ,SAAW,MAGnBA,EAAQ,EAAI,OACZA,EAAQ,EAAI,OACZA,EAAQ,EAAI,OACZA,EAAQ,EAAI,OACZA,EAAQ,EAAI,OACZA,EAAQ,EAAI,OACZA,EAAQ,EAAI,OAGLA,CACT,GAAG,EACCC,GAAkB,cAAc9L,CAAU,CAC5C,YAAY+L,EAAQ7L,EAAUkC,EAAY,CACxC,MAAMlC,EAAUkC,CAAU,EAC1B,KAAK,eAAiB,GACtB,KAAK,eAAiB,OACtB,KAAK,SAAW,GAChB,KAAK,MAAQ,GACb,KAAK,OAAS2J,GAAU,CAAC,CAC3B,CACA,eAAgB,CACd,KAAK,YAAY,YAAY,EAC7B,KAAK,OAAO,UAAU,IAAI,UAAU,EACpC,GAAM,CACJ,eAAAC,EACA,MAAAC,EACA,WAAAC,EACA,eAAAC,EACA,SAAAC,CACF,EAAI,KAAK,OACLA,GAAY,MACd,KAAK,YAAYA,CAAQ,EAEvBJ,GAAkB,MACpB,KAAK,kBAAkBA,CAAc,EAEnCC,GAAS,MACX,KAAK,SAASA,CAAK,EAEjBC,GAAc,MAChB,KAAK,cAAcA,CAAU,EAE/B,KAAK,kBAAkBC,GAAkB,KAAK,cAAc,EAC5D,KAAK,aAAa,CACpB,CACA,cAAe,CACbrF,EAAc,KAAK,MAAM,EACrB,OAAO,KAAK,OAAU,SACxB,KAAK,OAAO,UAAY,KAAK,MAAQ,KAAK,eACjC,KAAK,OACd,KAAK,OAAO,YAAY,KAAK,KAAK,EAEhC,KAAK,QAAU,IACjB7D,EAAc,KAAK,OAAQ,EAAK,EAChCiB,EAAa,KAAK,OAAQ,cAAc,IAExCjB,EAAc,KAAK,OAAQ,EAAI,EAC/BiB,EAAa,KAAK,OAAQ,IAAI,EAElC,CACA,kBAAkB8H,EAAgB,CAChC,OAAI,KAAK,iBAAmBA,EACnB,MAET,KAAK,eAAiBA,EAClB,KAAK,OAAS,MAChB,KAAK,aAAa,EAEb,KACT,CACA,YAAa,CACX,YAAK,OAAO,GAAK,KAAK,OAAO,IAAM,MAAM,KAAK,UAAU,CAAC,SAClD,KAAK,OAAO,EACrB,CACA,UAAW,CACT,OAAO,KAAK,KACd,CACA,SAASC,EAAO,CACd,OAAI,KAAK,QAAUA,EACV,MAET,KAAK,MAAQA,EACb,KAAK,aAAa,EACX,KACT,CACA,kBAAkBI,EAAW,CAE3B,IAAMC,EADO,KAAK,OAAO,EACE,UAC3B,OAAAA,EAAc,OAAO,sBAAuBD,IAAc,MAAM,EAChEC,EAAc,OAAO,uBAAwBD,IAAc,OAAO,EAClEC,EAAc,OAAO,qBAAsBD,IAAc,KAAK,EACvD,IACT,CACA,iBAAiBE,EAAa,CAC5B,YAAK,OAAO,UAAU,OAAO,oBAAqBA,CAAW,EACtD,IACT,CACA,cAAcC,EAAO,CACnB,OAAI,KAAK,OAAS,KACT,MAETC,GAAiB,KAAK,OAAQD,CAAK,EAC5B,KACT,CACA,YAAYJ,EAAU,CACpBA,EAAW,CAAC,CAACA,EACb,IAAM9L,EAAU,KAAK,OAAO,EAC5B,OAAAoM,GAAapM,EAAS8L,CAAQ,EAC9B9L,EAAQ,UAAU,OAAO,cAAe8L,CAAQ,EAChD,KAAK,SAAWA,EACT,IACT,CACA,YAAa,CACX,MAAO,CAAC,CAAC,KAAK,QAChB,CACF,EAGIO,GAAkB,cAAcb,EAAgB,CAClD,YAAYC,EAAQ7L,EAAUkC,EAAYc,EAAW,CACnD,MAAM6I,EAAQ7L,EAAUkC,CAAU,EAClC,KAAK,UAAYc,CACnB,CACA,eAAgB,CACd,MAAM,cAAc,EACpB,GAAM,CACJ,MAAAsJ,EACA,MAAAzK,EACA,cAAA6K,CACF,EAAI,KAAK,OACLJ,GAAS,MACX,KAAK,SAASA,CAAK,EAEjBzK,GAAS,MACX,KAAK,SAASA,CAAK,EAEjB6K,GAAiB,MACnB,KAAK,cAAcA,CAAa,EAE9B,KAAK,WACP,KAAK,YAAY,KAAK,SAAS,EAEjC,KAAK,sBAAsB,CAC7B,CACA,SAASX,EAAO,CACd,aAAM,SAASA,CAAK,EACpB,KAAK,sBAAsB,EACpB,IACT,CACA,uBAAwB,CACtB,IAAMY,EAAS,KAAK,eAAe,EAC7BC,EAAU,KAAK,WAAW,EAC1Bb,EAAQ,KAAK,SAAS,EACxBA,GAAS,MAAQA,GAAS,IAAMc,GAAcF,CAAM,IAAM,KAC5DG,GAAmBH,EAAQ,EAAE,EAE7BG,GAAmBH,EAAQC,GAAW,EAAE,CAE5C,CACA,aAAab,EAAO,CAClB,OAAAgB,GAAc,KAAK,eAAe,EAAGhB,CAAK,EAC1C,KAAK,sBAAsB,EACpB,IACT,CACA,cAAciB,EAAY,CACxB,YAAK,oBAAoB,KAAM,CAC7B,kBAAmB,IAAMA,EAAW,KAAK,SAAS,CAAC,CACrD,CAAC,EACM,IACT,CACA,UAAW,CACT,OAAO,KAAK,OAAO,EAAE,WACvB,CACA,SAASV,EAAO,CACd,OAAAW,GAAe,KAAK,OAAO,EAAGX,CAAK,EAC5B,IACT,CACA,kBAAmB,CACjB,OAAO,KAAK,aACd,CACA,UAAW,CACT,OAAO,KAAK,KACd,CACA,SAASzK,EAAOqL,EAAQ,CACtB,OAAI,KAAK,QAAUrL,EACV,MAET,KAAK,cAAgB,KAAK,MAC1B,KAAK,MAAQA,EACRqL,GACH,KAAK,mBAAmB,CACtB,KAAM,mBACR,CAAC,EAEI,KACT,CACF,EAGIC,GAAuB,cAAcV,EAAgB,CACvD,YAAYZ,EAAQ7I,EAAWoK,EAAY,OAAQC,EAAkB,QAAS,CAC5E,MAAMxB,EAAQA,GAAQ,UACtB;AAAA;AAAA;AAAA;AAAA,uBAImBwB,CAAe,qDAAqDA,CAAe;AAAA;AAAA,oBAErF,CAAC,EAAGrK,CAAS,EAC9B,KAAK,UAAYoK,EACjB,KAAK,gBAAkBC,EACvB,KAAK,OAASxN,EACd,KAAK,SAAWA,EAChB,KAAK,OAASA,CAChB,CACA,eAAgB,CACd,MAAM,cAAc,EACpB,KAAK,aAAa,EAClB,KAAK,OAAO,UAAU,IAAI,GAAG,KAAK,SAAS,QAAQ,EACnD,KAAK,SAAS,UAAU,IAAI,GAAG,KAAK,SAAS,gBAAgB,EAC7D,KAAK,OAAO,UAAU,IAAI,GAAG,KAAK,SAAS,QAAQ,EACnD,KAAK,YAAY,gBAAgB,EACjC,KAAK,OAAO,GAAK,KAAK,OAAO,IAAM,MAAM,KAAK,UAAU,CAAC,SACzD,GAAM,CACJ,UAAAyN,EACA,WAAAC,CACF,EAAI,KAAK,OACLD,GAAa,MACf,KAAK,aAAaA,CAAS,EAEzBC,GAAc,MAChB,KAAK,cAAcA,CAAU,EAE/B,KAAK,kBAAkB,EACvB,KAAK,iBAAiB,CAAC,KAAK,MAAM,CAAC,CACrC,CACA,mBAAoB,CAClB,KAAK,2BAA2B,KAAK,OAAQ,CAC3C,MAAO,GAAK,KAAK,SAAS,EAAE,OAAO,KAAK,CAC1C,CAAC,CACH,CACA,cAAe,CACT,KAAK,kBAAoB,SAC3B,KAAK,OAAO,aAAa,OAAQ,KAAK,SAAS,CAEnD,CACA,iBAAkB,CAChB,OAAO,KAAK,MACd,CACA,cAAcjB,EAAO,CACnB,OAAAC,GAAiB,KAAK,SAAUD,CAAK,EAC9B,IACT,CACA,aAAa/M,EAAM,CACjB,YAAK,gBAAgB,EAAE,aAAa,OAAQA,CAAI,EACzC,IACT,CACA,qBAAsB,CACpB,OAAO,KAAK,MACd,CACA,aAAaiO,EAAQ,CACnB,IAAMC,EAAS,KAAK,OACpB,OAAAA,EAAO,UAAYD,EACZ,IACT,CACA,oBAAoBE,EAAa,CAC/B,OAAAC,GAAsB,KAAK,OAAQ,cAAeD,CAAW,EACtD,IACT,CACA,kBAAkB3B,EAAO,CACvB,OAAAgB,GAAc,KAAK,OAAQhB,CAAK,EAChC,KAAK,sBAAsB,EACpB,IACT,CACA,YAAYG,EAAU,CACpB,OAAAM,GAAa,KAAK,OAAQN,CAAQ,EAC3B,MAAM,YAAYA,CAAQ,CACnC,CACA,gBAAgBrK,EAAO,CACrB,GAAIA,IAAU,GACZ8L,GAAsB,KAAK,OAAQ,eAAgB,IAAI,MAClD,CACL,IAAMC,EAAoB,OAAO/L,GAAU,SAAWA,EAAQ,MAC9D8L,GAAsB,KAAK,OAAQ,eAAgBC,CAAiB,CACtE,CACA,OAAO,IACT,CACF,EAGIC,GAAa,cAAcV,EAAqB,CAClD,YAAYtB,EAAQ7I,EAAY,cAAeoK,EAAY,WAAY,CACrE,MAAMvB,EAAQ7I,EAAWoK,CAAS,EAClC,KAAK,eAAiB,QACtB,KAAK,SAAW,GAChB,KAAK,SAAW,GAChB,KAAK,QAAU,EACjB,CACA,eAAgB,CACd,MAAM,cAAc,EACpB,GAAM,CACJ,SAAAU,EACA,QAAAC,CACF,EAAI,KAAK,OACL,OAAOD,GAAa,WAAW,KAAK,YAAYA,CAAQ,EACxD,OAAOC,GAAY,WAAW,KAAK,WAAWA,CAAO,CAC3D,CACA,mBAAoB,CAClB,KAAK,2BAA2B,KAAK,OAAQ,CAC3C,MAAO,KAAK,gBAAgB,KAAK,IAAI,CACvC,CAAC,EACD,KAAK,2BAA2B,KAAK,OAAQ,CAC3C,MAAO,KAAK,OAAO,KAAK,IAAI,CAC9B,CAAC,CACH,CACA,cAAe,CACb,OAAO,KAAK,WAAa,OAAS,GAAO,CAAC,KAAK,QACjD,CACA,WAAWA,EAAS,CAClB,KAAK,QAAUA,CACjB,CACA,YAAa,CACX,OAAO,KAAK,QACd,CACA,YAAYD,EAAU,CACpB,KAAK,SAAS,UAAU,OAAO,cAAeA,CAAQ,EACtD,KAAK,OAAO,SAAWA,EACvB,KAAK,SAAWA,CAClB,CACA,YAAY5B,EAAU,CACpB,YAAK,SAAS,UAAU,OAAO,cAAeA,CAAQ,EAC/C,MAAM,YAAYA,CAAQ,CACnC,CACA,QAAS,CACP,GAAI,KAAK,OAAO,SACd,OAEF,IAAM8B,EAAgB,KAAK,WAAW,EAChCC,EAAY,KAAK,aAAa,EAChC,KAAK,QACP,KAAK,eAAeA,EAAWD,CAAa,EAE5C,KAAK,SAASC,CAAS,CAE3B,CACA,UAAW,CACT,OAAO,KAAK,WAAW,CACzB,CACA,SAASpM,EAAOqL,EAAQ,CACtB,YAAK,qBAAqBrL,CAAK,EAC/B,KAAK,YAAYA,EAAOqL,CAAM,EACvB,IACT,CACA,QAAQ3N,EAAM,CACZ,IAAM2O,EAAQ,KAAK,gBAAgB,EACnC,OAAAA,EAAM,KAAO3O,EACN,IACT,CACA,YAAa,CACX,OAAO,KAAK,QACd,CACA,YAAY4O,EAAUjB,EAAQ,CACxB,KAAK,WAAW,IAAMiB,IAG1B,KAAK,cAAgB,KAAK,WAAW,EACrCA,EAAW,KAAK,SAAW,OAAOA,GAAa,UAAYA,EAAW,OACtE,KAAK,OAAO,QAAUA,EACtB,KAAK,OAAO,cAAgBA,IAAa,OACpCjB,GACH,KAAK,eAAe,KAAK,SAAU,KAAK,aAAa,EAEzD,CACA,eAAeiB,EAAUH,EAAevP,EAAO,CAC7C,KAAK,mBAAmB,CACtB,KAAM,oBACN,SAAA0P,EACA,cAAAH,EACA,MAAAvP,CACF,CAAC,EACD,IAAMyP,EAAQ,KAAK,gBAAgB,EAC7BE,EAAuB,CAC3B,KAAM,kBACN,GAAIF,EAAM,GACV,KAAMA,EAAM,KACZ,SAAAC,EACA,cAAAH,CACF,EACA,KAAK,aAAa,cAAcI,CAAoB,CACtD,CACA,gBAAgB,EAAG,CACjB,GAAI,KAAK,SAAW,KAAK,OAAO,SAC9B,OAEF,IAAMJ,EAAgB,KAAK,WAAW,EAChCG,EAAW,KAAK,SAAW,EAAE,OAAO,QAC1C,KAAK,qBAAqBA,CAAQ,EAClC,KAAK,eAAeA,EAAUH,EAAe,CAAC,CAChD,CACA,qBAAqBnM,EAAO,CAC1B,KAAK,SAAS,UAAU,OAAO,aAAcA,IAAU,EAAI,EAC3D,KAAK,SAAS,UAAU,OAAO,mBAAoBA,GAAS,IAAI,CAClE,CACF,EACIwM,GAAqB,CACvB,SAAU,cACV,UAAWR,EACb,EAGIS,GAAuB,cAAcxO,CAAU,CACjD,aAAc,CACZ,MACA;AAAA;AAAA;AAAA,oBAGiB,CAACuO,EAAkB,CAAC,EACrC,KAAK,UAAYxO,CACnB,CACA,KAAKzB,EAAQ,CACX,KAAK,OAASA,EACd,KAAK,eAAeA,CAAM,EAC1B,IAAMmQ,EAAU,KAAK,UAAU,gBAAgB,EAC/CA,EAAQ,aAAa,WAAY,IAAI,EACrCC,GAAaD,EAAS,QAAQ,EAC9B,KAAK,oBAAoBA,EAAS,CAChC,MAAO9P,GAAS,CAEd,GADAsK,GAA0BtK,CAAK,EAC3B,KAAK,UAAU,WAAW,EAC5B,OAEF,IAAMgQ,EAAa,KAAK,UAAU,SAAS,EAC3C,KAAK,kBAAkBA,CAAU,CACnC,EACA,SAAUhQ,GAAS,CACjBsK,GAA0BtK,CAAK,CACjC,CACF,CAAC,EACD,KAAK,2BAA2B,KAAK,OAAO,UAAW,CACrD,QAASA,GAAS,CAChB,GAAIA,EAAM,MAAQkN,EAAQ,OAAS,CAAC,KAAK,UAAU,WAAW,EAAG,CAC3D,KAAK,OAAO,YAAc,KAAK,IAAI,oBAAoB,GACzD,KAAK,UAAU,OAAO,EAExB,IAAM8C,EAAa,KAAK,UAAU,SAAS,EAC3C,KAAK,kBAAkBA,CAAU,EACjChQ,EAAM,eAAe,CACvB,CACF,CACF,CAAC,CACH,CACA,QAAQL,EAAQ,CACd,YAAK,OAASA,EACd,KAAK,eAAeA,CAAM,EACnB,EACT,CACA,eAAeA,EAAQ,CACrB,IAAIqQ,EACA3L,EAAY,GAChB,GAAI1E,EAAO,KAAK,OAASA,EAAO,OAAQ,CACtC,IAAMsQ,EAAQtQ,EAAO,OAAO,SAAS,EACjCsQ,EAAM,WAAWC,EAAoB,EACvCF,EAAarQ,EAAO,OAAS,MAAQA,EAAO,QAAU,GAAK,OAASA,EAAO,QAAU,OAC5EA,EAAO,KAAK,SAAWA,EAAO,KAAK,QAAQsQ,CAAK,IAAM,OAC/DD,EAAarQ,EAAO,OAAS,OAE7B0E,EAAY,EAEhB,MACE2L,EAAarQ,EAAO,OAAS,OAE/B,GAAI,CAAC0E,EAAW,CACd,KAAK,UAAU,aAAa,EAAK,EACjC,MACF,CACA,KAAK,UAAU,SAAS2L,CAAU,EAClC,IAAMvC,EAAW9N,EAAO,UAAY,KAAOA,EAAO,SAAW,CAACA,EAAO,QAAQ,eAAeA,EAAO,IAAI,EACvG,KAAK,UAAU,YAAY8N,CAAQ,EACnC,IAAMrN,EAAY,KAAK,cAAc,kBAAkB,EACjD+P,EAAYC,GAA0BhQ,EAAW4P,CAAU,EAC3DK,EAAY5C,EAAW0C,EAAY,GAAG/P,EAAU,sBAAuB,kCAAkC,CAAC,KAAK+P,CAAS,IAC9H,KAAK,UAAU,kBAAkBE,CAAS,CAC5C,CACA,kBAAkBL,EAAY,CAC5B,GAAM,CACJ,OAAAhP,EACA,KAAAsP,EACA,MAAAlN,CACF,EAAI,KAAK,OACHmN,EAAe,CACnB,KAAM,qBACN,OAAAvP,EACA,OAAQA,GAAQ,UAAU,EAC1B,KAAMsP,EAAK,KACX,KAAAA,EACA,SAAUA,EAAK,SACf,UAAWA,EAAK,UAChB,MAAAlN,CACF,EACA,KAAK,aAAa,cAAcmN,CAAY,EAC5C,IAAMC,EAAe,KAAK,OAAO,KAAK,aAAa,KAAK,OAAO,OAAQR,EAAY,MAAM,EACnFS,EAAe,CACnB,KAAM,qBACN,OAAAzP,EACA,OAAQA,GAAQ,UAAU,EAC1B,KAAMsP,EAAK,KACX,KAAAA,EACA,SAAUA,EAAK,SACf,UAAWA,EAAK,UAChB,MAAAlN,EACA,SAAUA,EACV,SAAU4M,EACV,aAAAQ,CACF,EACA,KAAK,aAAa,cAAcC,CAAY,CAC9C,CACF,EAGIC,GAAsB,cAAcrP,CAAU,CAChD,aAAc,CACZ,MACA;AAAA;AAAA;AAAA,eAGW,EACX,KAAK,aAAeD,EACpB,KAAK,aAAeA,CACtB,CACA,KAAKzB,EAAQ,CACXA,EAAO,KAAK,WAAa,KAAK,YAAY,EAAI,KAAK,aAAa,CAClE,CACA,aAAc,CACZ,IAAMgR,EAAiB,KAAK,cAAc,kBAAkB,EAC5D,KAAK,aAAa,UAAYA,EAAe,eAAgB,KAAK,CACpE,CACA,cAAe,CACb,IAAMC,EAAe9L,GAAkB,eAAgB,KAAK,IAAK,IAAI,EACjE8L,GACF,KAAK,aAAa,YAAYA,CAAY,EAE5C,IAAMD,EAAiB,KAAK,cAAc,kBAAkB,EAC5D,KAAK,aAAa,UAAYA,EAAe,aAAc,SAAS,CACtE,CACA,QAAQhR,EAAQ,CACd,MAAO,EACT,CAGA,SAAU,CACR,MAAM,QAAQ,CAChB,CACF,EAGIkR,GAAuB,cAAcxP,CAAU,CACjD,aAAc,CACZ,MACA,2CAA2C,CAC7C,CACA,KAAK1B,EAAQ,CACX,IAAMmR,EAAK,6BAA6B,KAAK,UAAU,CAAC,GACxD,KAAK,OAAO,EAAE,aAAa,KAAMA,CAAE,EACnC,KAAK,eAAe,IAAMzC,GAAmB1O,EAAO,cAAc,CAAC,EACnE0O,GAAmB1O,EAAO,eAAgBmR,CAAE,EAC5CnR,EAAO,KAAK,WAAa,KAAK,YAAY,EAAI,KAAK,aAAaA,CAAM,CACxE,CACA,aAAc,CACZ,IAAMgR,EAAiB,KAAK,cAAc,kBAAkB,EAC5D,KAAK,OAAO,EAAE,UAAYA,EAAe,eAAgB,KAAK,EAC9D,IAAMI,EAAaJ,EAAe,gCAAiC,oBAAoB,EACvFrC,GAAc,KAAK,OAAO,EAAGyC,CAAU,CACzC,CACA,aAAapR,EAAQ,CAEnB,IAAMqR,EADY,KAAK,IAAI,YAAY,EACN,cAAc,KAAK,EACpDA,EAAe,UAAU,IAAI,oBAAoB,EACjD,IAAMC,EAAWtR,EAAO,KAAK,SAC7B,GAAIsR,GAAY,KAAM,CACpB,IAAMpD,EAAQ,GAAK,IAAMoD,EAAW,IAAM,EAAI,KAAK,IAAIA,CAAQ,EAAI,KAAK,IAAIA,CAAQ,GACpFD,EAAe,MAAM,MAAQ,GAAGnD,CAAK,GACvC,CACA,KAAK,OAAO,EAAE,YAAYmD,CAAc,EAExC,IAAME,EADiB,KAAK,cAAc,kBAAkB,EACzB,0BAA2B,qBAAqB,EACnF5C,GAAc,KAAK,OAAO,EAAG4C,CAAW,CAC1C,CACA,QAAQvR,EAAQ,CACd,MAAO,EACT,CAGA,SAAU,CACR,MAAM,QAAQ,CAChB,CACF,EAGIwR,GAAmB,cAAc9P,CAAU,CAC7C,aAAc,CACZ,MAAM,CACR,CAGA,SAAU,CACR,MAAM,QAAQ,CAChB,CACF,EAGI+P,GAA0B,cAAcD,EAAiB,CAC3D,MAAO,CACL,IAAME,EAAiB,KAAK,IAAI,IAAI,wBAAwB,EAG5D,GAFA,KAAK,YAAYA,GACjB,uFAAuF,EACnF,CAACA,EAAgB,CACnB,IAAMV,EAAiB,KAAK,cAAc,kBAAkB,EAC5D,WAAW,IAAM,CACf,KAAK,OAAO,EAAE,YAAcA,EAAe,aAAc,YAAY,CACvE,CAAC,CACH,CACF,CACF,EAGIW,GAAyB,cAAcH,EAAiB,CAC1D,MAAO,CACL,IAAME,EAAiB,KAAK,IAAI,IAAI,uBAAuB,EAG3D,GAFA,KAAK,YAAYA,GACjB,iDAAiD,EAC7C,CAACA,EAAgB,CACnB,IAAMV,EAAiB,KAAK,cAAc,kBAAkB,EAC5D,WAAW,IAAM,CACf,KAAK,OAAO,EAAE,YAAcA,EAAe,eAAgB,iBAAiB,CAC9E,CAAC,CACH,CACF,CACF,EAGIY,GAAiB,cAAclQ,CAAU,CAC3C,SAAU,CACR,MAAO,EACT,CACA,mBAAmB0C,EAAW,CAC5BA,EAAU,YAAY,cAAc,EACpC,MAAM,mBAAmBA,CAAS,CACpC,CACA,SAAU,CACR,IAAMvF,EAAa,KAAK,gBACNA,GAAcA,EAAW,QAAQ,GAEjDA,EAAW,OAAO,EAAE,UAAU,OAAO,cAAc,EAErD,MAAM,QAAQ,CAChB,CACF,EAGIgT,GAAmB,cAAcD,EAAe,CAClD,aAAc,CACZ,MACA,gCAAgC,CAClC,CAEA,KAAK5R,EAAQ,CACX,GAAM,CACJ,MAAAyD,CACF,EAAIzD,EACJ,KAAK,OAAO,EAAE,YAAc8I,GAAcrF,EAAO,EAAI,CACvD,CACF,EAGA,SAASqO,GAAmBC,EAAaC,EAAaC,EAAgB,CACpE,IAAMC,EAAe,CAAC,EAChBC,EAAgBJ,EAAY,OAAOK,GAAc,CAACJ,EAAY,KAAKK,GAAcA,IAAeD,CAAU,CAAC,EACjH,OAAID,EAAc,OAAS,GACzBA,EAAc,QAAQG,GAAgBJ,EAAaI,CAAY,EAAIC,GAAkBD,EAAcL,CAAc,EAAE,MAAM,EAEpHC,CACT,CACA,SAASK,GAAkBH,EAAYH,EAAgBO,EAAgBC,EAA+B,CACpG,IAAIC,EAAkBT,EAAe,IAAI,CAACU,EAAMC,KAAS,CACvD,MAAOD,EACP,UAAWE,GAAwBT,EAAW,YAAY,EAAGO,EAAK,kBAAkB,CAAC,EACrF,IAAAC,CACF,EAAE,EAKF,GAJAF,EAAgB,KAAK,CAACI,EAAGC,IAAMA,EAAE,UAAYD,EAAE,SAAS,EACpDN,IACFE,EAAkBA,EAAgB,OAAOM,GAAcA,EAAW,YAAc,CAAC,GAE/EN,EAAgB,OAAS,GAAKD,GAAiCA,EAAgC,EAAG,CAEpG,IAAMQ,EADYP,EAAgB,CAAC,EAAE,UACXD,EAC1BC,EAAkBA,EAAgB,OAAOM,GAAcC,EAAQD,EAAW,UAAY,CAAC,CACzF,CACA,IAAME,EAAS,CAAC,EACVC,EAAU,CAAC,EACjB,QAAWH,KAAcN,EACvBQ,EAAO,KAAKF,EAAW,KAAK,EAC5BG,EAAQ,KAAKH,EAAW,GAAG,EAE7B,MAAO,CACL,OAAAE,EACA,QAAAC,CACF,CACF,CACA,SAASN,GAAwBO,EAAMC,EAAM,CAC3C,IAAMP,EAAIM,EAAK,QAAQ,MAAO,EAAE,EAC1BL,EAAIM,EAAK,QAAQ,MAAO,EAAE,EAC5BC,EAAS,EACTC,EAAY,GAChB,QAASvP,EAAI,EAAGA,EAAI8O,EAAE,OAAQ9O,IAAK,CACjC,IAAM4O,EAAMG,EAAE,QAAQD,EAAE9O,CAAC,EAAGuP,EAAY,CAAC,EACrCX,IAAQ,KAGZW,EAAYX,EACZU,GAAU,IAAMC,EAAY,IAAM,IAAM,IAC1C,CACA,OAAOD,CACT,CAGA,IAAIE,GAAwB,cAAc5U,CAAS,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,wBAChB,KAAK,eAAiB,CAEpB,eAAgB+J,GAChB,oBAAqB2B,GACrB,gBAAiBpD,GAEjB,gCAAiCyF,GACjC,2BAA4BQ,GAC5B,sBAAuB4D,GACvB,uBAAwBG,GACxB,uBAAwBhB,GAExB,iBAAkBuB,GAClB,gBAAiBE,GAEjB,mBAAoBE,EACtB,EAEA,KAAK,+BAAiC,CACpC,kBAAmB,iCACnB,0BAA2B,iCAC3B,oBAAqB,mCACrB,4BAA6B,mCAC7B,oBAAqB,mCACrB,4BAA6B,mCAC7B,oBAAqB,mCAGrB,mBAAoB,mCAGpB,aAAc,kCACd,uBAAwB,kCACxB,qBAAsB,oCACtB,wBAAyB,gCAC3B,EACA,KAAK,QAAU,CAAC,CAClB,CACA,eAAgB,CACd,IAAM4B,EAAQ,KAAK,IAAI,IAAI,YAAY,EACnCA,GAAS,MACXC,GAAeD,EAAO,CAACvQ,EAAKe,IAAc,KAAK,oBAAoBf,EAAKe,CAAS,CAAC,CAEtF,CACA,yBAAyB9C,EAAM8C,EAAW,CACxC,KAAK,eAAe9C,CAAI,EAAI8C,CAC9B,CACA,oBAAoB9C,EAAM8C,EAAW,CACnC,KAAK,QAAQ9C,CAAI,EAAI8C,CACvB,CACA,SAAS0P,EAAcxS,EAAM,CAC3B,IAAMyS,EAAe,CAAC3P,EAAW4P,KAA4B,CAC3D,uBAAAA,EACA,UAAA5P,CACF,GACM6P,EAA6B,KAAK,sBAAsB,EAAE,mBAAmB3S,EAAM,KAAK,IAAI,IAAI,YAAY,CAAC,EACnH,GAAI2S,GAA8B,KAChC,OAAOF,EAAaE,EAA4B,EAAI,EAEtD,IAAMC,EAAc,KAAK,QAAQ5S,CAAI,EACrC,GAAI4S,EAAa,CACf,IAAMC,EAAY,KAAK,sBAAsB,EAAE,qBAAqBD,CAAW,EAC/E,OAAOH,EAAaG,EAAaC,CAAS,CAC5C,CACA,IAAMC,EAAmB,KAAK,eAAe9S,CAAI,EACjD,GAAI8S,EACF,OAAOL,EAAaK,EAAkB,EAAK,EAE7C,IAAMC,EAAqB,KAAK,+BAA+B/S,CAAI,EACnE,OAAI+S,EACF1H,EAAe,mBAAmB0H,EAAoB,YAAYP,CAAY,gBAAgBxS,CAAI,GAAI,KAAK,MAAM,EAEjHgT,GAAQ,IAAM,CACZ,KAAK,0BAA0BR,EAAcxS,CAAI,CACnD,EAAG,cAAgBA,CAAI,EAElB,IACT,CACA,0BAA0BwS,EAAcS,EAAe,CACrD,IAAMC,EAAkB,CAExB,GAAG,OAAO,KAAK,KAAK,cAAc,EAAE,OAAOhI,GAAK,CAAC,CAAC,eAAgB,qBAAsB,iBAAiB,EAAE,SAASA,CAAC,CAAC,EAAG,GAAG,OAAO,KAAK,KAAK,OAAO,CAAC,EAC/IiI,EAAc/B,GAAkB6B,EAAeC,EAAiB,GAAM,EAAG,EAAE,OACjFhV,EAAU,mBAAmB+U,CAAa,sCAAsCT,CAAY,MAAMS,CAAa,8DAA8D,EACzKE,EAAY,OAAS,GACvBjV,EAAU,2BAA2BiV,EAAY,MAAM,EAAG,CAAC,CAAC,IAAI,EAElEjV,EAAU,6EAA6E,KAAK,sBAAsB,EAAE,WAAW,aAAa,CAAC,EAAE,CACjJ,CACF,EAGIkV,GAAY,MAAMC,EAAW,CAC/B,YAAYrU,EAAU,CACpB,KAAK,OAAS,EACd,KAAK,WAAa,KAClB,KAAK,QAAU,CAAC,EAChBA,EAASsD,GAAS,KAAK,OAAOA,CAAK,EAAGzD,GAAU,KAAK,SAASA,CAAM,CAAC,CACvE,CACA,OAAO,IAAIyU,EAAU,CACnB,OAAOA,EAAS,OAAS,IAAID,GAAWE,GAAW,CACjD,IAAIC,EAAqBF,EAAS,OAC5BG,EAAiB,IAAI,MAAMD,CAAkB,EACnDF,EAAS,QAAQ,CAACI,EAASC,IAAU,CACnCD,EAAQ,KAAKpR,GAAS,CACpBmR,EAAeE,CAAK,EAAIrR,EACxBkR,IACIA,IAAuB,GACzBD,EAAQE,CAAc,CAE1B,CAAC,CACH,CAAC,CACH,CAAC,EAAIJ,GAAW,QAAQ,CAC1B,CACA,OAAO,QAAQ/Q,EAAQ,KAAM,CAC3B,OAAO,IAAI+Q,GAAWE,GAAWA,EAAQjR,CAAK,CAAC,CACjD,CACA,KAAKuD,EAAM,CACT,OAAO,IAAIwN,GAAWE,GAAW,CAC3B,KAAK,SAAW,EAClBA,EAAQ1N,EAAK,KAAK,UAAU,CAAC,EAE7B,KAAK,QAAQ,KAAKvD,GAASiR,EAAQ1N,EAAKvD,CAAK,CAAC,CAAC,CAEnD,CAAC,CACH,CACA,OAAOA,EAAO,CACZ,KAAK,OAAS,EACd,KAAK,WAAaA,EAClB,KAAK,QAAQ,QAAQsR,GAAUA,EAAOtR,CAAK,CAAC,CAC9C,CACA,SAASzD,EAAQ,CAAC,CACpB,EAGIgV,GAAgB,CAClB,aAAc,gBACd,aAAc,EAChB,EACIC,GAAkB,CACpB,aAAc,kBACd,aAAc,EAChB,EACIC,GAAuB,CACzB,aAAc,uBACd,aAAc,EAChB,EACIC,GAAwB,CAC1B,aAAc,eACd,aAAc,EAChB,EACIC,GAA0B,CAC5B,aAAc,eACd,aAAc,EAChB,EACIC,GAA+B,CACjC,aAAc,sBACd,aAAc,EAChB,EACIC,GAAsB,CACxB,aAAc,aACd,aAAc,EAChB,EACIC,GAAyB,CAC3B,aAAc,gBACd,aAAc,EAChB,EACIC,GAA2B,CAC7B,aAAc,0BACd,aAAc,EAChB,EACIC,GAA0B,CAC5B,aAAc,yBACd,aAAc,EAChB,EACIC,GAAoB,CACtB,aAAc,mBACd,aAAc,EAChB,EACIC,GAAkB,CACpB,aAAc,SACd,aAAc,EAChB,EACIC,GAA0B,CAC5B,aAAc,0BACd,aAAc,EAChB,EACIC,GAAqB,CACvB,aAAc,YACd,aAAc,EAChB,EACIC,GAAuB,CACzB,aAAc,cACd,aAAc,EAChB,EACIC,GAAY,CACd,aAAc,wBACd,aAAc,EAChB,EACIC,GAAmB,CACrB,aAAc,sBACd,aAAc,EAChB,EACIC,GAAiB,CACnB,aAAc,mBACd,aAAc,EAChB,EACIC,GAAkB,CACpB,aAAc,qBACd,aAAc,EAChB,EACIC,GAAoB,CACtB,aAAc,WACd,aAAc,EAChB,EAGIC,GAAuB,MAAMC,WAA8BzX,CAAS,CACtE,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,sBAClB,CACA,UAAUK,EAAO,CACf,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,0BAA4BA,EAAM,0BACvC,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,0BAA4BA,EAAM,0BACvC,KAAK,YAAcA,EAAM,WAC3B,CACA,qBAAqBqC,EAAQtB,EAAQ,CACnC,OAAO,KAAK,eAAesB,EAAQ2T,GAAiB,iBAAkBjV,CAAM,CAC9E,CACA,0BAA0BA,EAAQ,CAChC,IAAMsW,EAActW,EAAO,YAAY,eAAe,EACtD,OAAO,KAAK,eAAesW,EAAapB,GAAsB,sBAAuBlV,CAAM,CAC7F,CAGA,gCAAgCA,EAAQ,CACtC,OAAO,KAAK,eAAe,KAAK,YAAa+V,GAAW,KAAM/V,EAAQ,EAAI,CAC5E,CACA,uCAAuCA,EAAQ,CAC7C,OAAO,KAAK,eAAe,KAAK,YAAagW,GAAkB,wBAAyBhW,EAAQ,EAAI,CACtG,CACA,qCAAqCA,EAAQ,CAC3C,OAAO,KAAK,eAAe,KAAK,YAAaiW,GAAgB,qBAAsBjW,EAAQ,EAAI,CACjG,CACA,sCAAsCA,EAAQ,CAC5C,OAAO,KAAK,eAAe,KAAK,YAAakW,GAAiB,uBAAwBlW,EAAQ,EAAI,CACpG,CAEA,wBAAwBuW,EAAKvW,EAAQ,CACnC,OAAO,KAAK,eAAeuW,EAAKhB,GAAwB,KAAMvV,CAAM,CACtE,CACA,sCAAsCuW,EAAKvW,EAAQ,CACjD,OAAO,KAAK,eAAeuW,EAAKhB,GAAwB,KAAMvV,CAAM,CACtE,CACA,uBAAuBuW,EAAKvW,EAAQ,CAClC,OAAO,KAAK,eAAeuW,EAAKpB,GAAuB,KAAMnV,CAAM,CACrE,CACA,yBAAyBuW,EAAKvW,EAAQ,CACpC,OAAO,KAAK,eAAeuW,EAAKnB,GAAyB,KAAMpV,CAAM,CACvE,CACA,8BAA8BuW,EAAKvW,EAAQ,CACzC,OAAO,KAAK,eAAeuW,EAAKlB,GAA8B,yBAA0BrV,EAAQ,EAAI,CACtG,CAEA,qBAAqBuW,EAAKvW,EAAQ,CAChC,OAAO,KAAK,eAAeuW,EAAKjB,GAAqB,eAAgBtV,EAAQ,EAAI,CACnF,CAEA,iBAAiBuW,EAAKvW,EAAQwW,EAAe,CAC3C,OAAO,KAAK,eAAeD,EAAKZ,GAAiBa,EAAexW,EAAQ,EAAI,CAC9E,CACA,mBAAmBA,EAAQ,CACzB,OAAO,KAAK,eAAe,KAAK,YAAagV,GAAe,cAAehV,EAAQ,EAAI,CACzF,CACA,6BAA6BA,EAAQ,CACnC,OAAO,KAAK,eAAe,KAAK,YAAawV,GAA0B,mBAAoBxV,EAAQ,EAAI,CACzG,CACA,4BAA4BA,EAAQ,CAClC,OAAO,KAAK,eAAe,KAAK,YAAayV,GAAyB,kBAAmBzV,EAAQ,EAAI,CACvG,CACA,sBAAsBA,EAAQ,CAC5B,OAAO,KAAK,eAAeA,EAAO,OAAQ0V,GAAmB,qBAAsB1V,EAAQ,EAAI,CACjG,CACA,gCAAgCuW,EAAKvW,EAAQ,CAC3C,OAAO,KAAK,eAAeuW,EAAKpB,GAAuB,KAAMnV,CAAM,CACrE,CACA,6BAA6BuW,EAAKvW,EAAQyW,EAAuB,CAC/D,OAAO,KAAK,eAAeF,EAAKX,GAAyBa,EAAuBzW,CAAM,CACxF,CACA,wBAAwB0W,EAAc1W,EAAQ,CAC5C,OAAO,KAAK,eAAe0W,EAAcb,GAAoB,KAAM7V,EAAQ,EAAI,CACjF,CACA,0BAA0BuW,EAAKvW,EAAQ,CACrC,OAAO,KAAK,eAAeuW,EAAKT,GAAsB,KAAM9V,EAAQ,EAAI,CAC1E,CACA,uBAAuBuW,EAAKvW,EAAQ,CAClC,OAAO,KAAK,eAAeuW,EAAKJ,GAAmB,aAAcnW,EAAQ,EAAI,CAC/E,CACA,eAAe2W,EAAWrX,EAAMsX,EAAa5W,EAAQ6W,EAAY,GAAO,CACtE,GAAM,CACJ,aAAAlD,EACA,aAAAmD,CACF,EAAIxX,EACA,CACF,SAAAyX,EACA,OAAAC,EACA,OAAAC,EACA,mBAAAC,EACA,kBAAAC,EACA,0BAAAC,CACF,EAAIf,GAAsB,YAAY,KAAK,mBAAoBM,EAAWrX,EAAMU,CAAM,EAChFqX,EAAqBnU,GAAO,CAChC,IAAMoU,EAAO,KAAK,sBAAsB,SAAS3D,EAAczQ,CAAG,EAC9DoU,IACFN,EAAUM,EAAK,uBAA0C,OAAjBA,EAAK,UAC7CL,EAASK,EAAK,uBAAyBA,EAAK,UAAY,OAE5D,EAUA,GATIP,GAAY,MACdM,EAAmBN,CAAQ,EAEzBC,GAAU,MAAQC,GAAU,MAAQL,GAAe,MACrDS,EAAmBT,CAAW,EAE5BI,GAAUF,GAAgB,CAAC,KAAK,iBAAiB,wBAAwBE,CAAM,IACjFA,EAAS,KAAK,iBAAiB,cAAcrD,EAAcqD,CAAM,GAE/D,CAACA,GAAU,CAACC,EAAQ,CAClBJ,GACF9K,EAAW,4BAA4BgL,CAAQ,+CAA+C,EAEhG,MACF,CACA,IAAMQ,EAAe,KAAK,yCAAyCZ,EAAWrX,EAAMU,EAAQkX,CAAkB,EACxGrD,EAAyBmD,GAAU,KACnCQ,EAAiBR,GAAkBC,EACzC,MAAO,CACL,uBAAApD,EACA,eAAA2D,EACA,OAAQD,EACR,KAAAjY,EACA,kBAAA6X,EACA,0BAAAC,EACA,mBAAoB,IAAM,KAAK,mBAAmBI,EAAgB3D,EAAwB0D,EAAcjY,CAAI,CAC9G,CACF,CACA,OAAO,YAAYmY,EAAoBd,EAAWrX,EAAMU,EAAQ,CAC9D,GAAM,CACJ,aAAA2T,CACF,EAAIrU,EACAyX,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,GAAIT,EAAW,CACb,IAAMe,EAAef,EACfgB,EAAeD,EAAa/D,EAAe,UAAU,EACrDiE,EAAcD,EAAeA,EAAa3X,CAAM,EAAI,KACpD6X,EAAaC,GAAkB,CAC/B,OAAOA,GAAmB,SAC5Bf,EAAWe,EACFA,GAAkB,MAAQA,IAAmB,KACpCL,EAAmB,qBAAqBK,CAAc,EAEtEb,EAASa,EAETd,EAASc,EAGf,EACIF,GACFC,EAAWD,EAAY,SAAS,EAChCV,EAAqBU,EAAY,OACjCT,EAAoBS,EAAY,MAChCR,EAA4BQ,EAAY,eAExCC,EAAWH,EAAa/D,CAAY,CAAC,CAEzC,CACA,MAAO,CACL,SAAAoD,EACA,OAAAC,EACA,OAAAC,EACA,mBAAAC,EACA,kBAAAC,EACA,0BAAAC,CACF,CACF,CACA,mBAAmBW,EAAgBlE,EAAwB7T,EAAQV,EAAM,CACvE,IAAMqU,EAAerU,EAAK,aACpByU,EAAc,CAACF,EACjBmE,EACJ,GAAIjE,EACFiE,EAAW,IAAID,MACV,CACL,IAAME,EAAsB,KAAK,0BAA0B,SAAStE,CAAY,EAChFqE,EAAW,KAAK,0BAA0B,KAAKD,EAAgBE,EAAoB,oBAAqBA,EAAoB,mBAAoB3Y,CAAI,CACtJ,CACA,IAAM4Y,EAAe,KAAK,cAAcF,EAAUhY,CAAM,EACxD,OAAIkY,GAAgB,KACX3D,GAAU,QAAQyD,CAAQ,EAE5BE,EAAa,KAAK,IAAMF,CAAQ,CACzC,CAEA,yCAAyCrB,EAAWrX,EAAM6Y,EAAgBjB,EAAqB,KAAM,CACnG,IAAMlX,EAAS,KAAK,IAAI,oBAAoB,EAC5CoY,GAAWpY,EAAQmY,CAAc,EACjC,IAAMT,EAAef,EACf0B,EAAaX,GAAgBA,EAAapY,EAAK,aAAe,QAAQ,EAC5E,GAAI,OAAO+Y,GAAe,WAAY,CACpC,IAAMC,EAAqBD,EAAWF,CAAc,EACpDC,GAAWpY,EAAQsY,CAAkB,CACvC,MAAW,OAAOD,GAAe,UAC/BD,GAAWpY,EAAQqY,CAAU,EAE/B,OAAAD,GAAWpY,EAAQkX,CAAkB,EAC9BlX,CACT,CACA,cAAciE,EAAWjE,EAAQ,CAE/B,GADA,KAAK,WAAWiE,CAAS,EACrBA,EAAU,MAAQ,KAGtB,OAAOA,EAAU,KAAKjE,CAAM,CAC9B,CACF,EAGA,SAASuY,GAAgBxW,EAAM,CAC7B,IAAMyW,EAAYzW,EAElB,OADgByW,GAAa,MAAQA,EAAU,+BAAiC,KAC/DA,EAAU,8BAA8B,EAAIzW,CAC/D,CAGA,IAAI0W,GAAiB,KAAM,CACzB,YAAYzY,EAAQ,CAClB,KAAK,MAAQ,CAAC,EACd,KAAK,aAAe,CAAC,EACrB,KAAK,UAAY,GACb,GAACA,GAAU,CAACA,EAAO,eAGvB,KAAK,sBAAwBA,EAAO,sBACpC,KAAK,KAAKA,CAAM,EAClB,CACA,KAAKA,EAAQ,CACX,OAAO,QAAQA,EAAO,qBAAqB,EAAE,QAAQ,CAAC,CAAC0Y,EAAUC,CAAY,IAAM,CACjF,KAAK,MAAMD,CAAQ,EAAIC,CACzB,CAAC,EACD3Y,EAAO,YAAY,QAAQ4Y,GAAa,CACtC,IAAMZ,EAAW,IAAIY,EACjBZ,EAAS,SACX,KAAK,MAAMA,EAAS,QAAQ,EAAIA,EAEhC,QAAQ,MAAM,QAAQY,EAAU,IAAI,sBAAsB,EAE5D,KAAK,aAAa,KAAKZ,CAAQ,CACjC,CAAC,EACDhY,EAAO,cAAc,QAAQ6Y,GAAY,CACvC,GAAM,CACJ,SAAAH,EACA,KAAAI,CACF,EAAID,EAAS,IAAI,EACjB,KAAK,MAAMH,CAAQ,EAAII,EACvB,KAAK,aAAa,KAAKA,CAAI,CAC7B,CAAC,EACG9Y,EAAO,oBACT,KAAK,aAAa,KAAKA,EAAO,kBAAkB,EAElD,KAAK,UAAU,KAAK,YAAY,CAClC,CACA,kBAAmB,CACjB,OAAO,OAAO,OAAO,KAAK,KAAK,CACjC,CACA,WAAW8Y,EAAM7V,EAAwB,CACvC,GAAI,CAAC6V,EACH,MAAM,MAAM,qCAAqC,EAEnD,YAAK,UAAU,CAACA,CAAI,EAAG7V,CAAsB,EACtC6V,CACT,CACA,UAAUC,EAAe9V,EAAwB,CAC/C8V,EAAc,QAAQf,GAAY,CAChCA,EAAS,eAAe,KAAK,KAAK,EAClCA,EAAS,YAAY,KAAK,KAAK,CACjC,CAAC,EACDe,EAAc,QAAQf,GAAYA,EAAS,eAAe,CAAC,EACvD/U,GACF8V,EAAc,QAAQ9V,CAAsB,EAE9C8V,EAAc,QAAQf,GAAYA,EAAS,gBAAgB,CAAC,CAC9D,CACA,UAAW,CACT,OAAO,KAAK,KACd,CACA,QAAQ7W,EAAM,CACZ,OAAO,KAAK,MAAMA,CAAI,CACxB,CACA,SAAU,CACR,GAAI,KAAK,UACP,OAEF,KAAK,UAAY,GACjB,IAAM4X,EAAgB,KAAK,iBAAiB,EACxC,KAAK,uBACPA,EAAc,KAAK,KAAK,qBAAqB,EAE/C,KAAK,aAAaA,CAAa,EAC/B,KAAK,MAAQ,CAAC,EACd,KAAK,aAAe,CAAC,CACvB,CAKA,YAAYD,EAAM,CAChBA,GAAM,UAAU,CAClB,CAKA,aAAa7Z,EAAO,CAClB,GAAIA,EACF,QAAS+E,EAAI,EAAGA,EAAI/E,EAAM,OAAQ+E,IAChC,KAAK,YAAY/E,EAAM+E,CAAC,CAAC,EAG7B,MAAO,CAAC,CACV,CACA,aAAc,CACZ,OAAO,KAAK,SACd,CACF,EAGIgV,GAAU,cAAcP,EAAe,CACzC,KAAKzY,EAAQ,CACX,KAAK,OAASA,EAAO,OACrB,KAAK,MAAM,QAAU,KACrB,MAAM,KAAKA,CAAM,CACnB,CACA,SAAU,CACR,MAAM,QAAQ,EACdwM,EAAe,wBAAwB,KAAK,MAAM,CACpD,CACA,WAAY,CACV,OAAO,KAAK,MACd,CACF,EAeA,IAAIyM,IAAsCC,IACxCA,EAAqBA,EAAqB,KAAU,CAAC,EAAI,OACzDA,EAAqBA,EAAqB,MAAW,CAAC,EAAI,QACnDA,IACND,IAAuB,CAAC,CAAC,EAW5B,IAAIE,GACJ;AAAA;AAAA;AAAA,QAIIC,GAAqB,cAAcC,CAAS,CAC9C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,qBAChB,KAAK,wBAA0B,CAAC,EAChC,KAAK,YAAc,CAAC,CACtB,CACA,UAAUC,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,YAAcA,EAAM,WAC3B,CACA,eAAgB,CACd,KAAK,YAAc,CACjB,OAAQC,GAAY,gBAAiB,KAAK,IAAK,IAAI,EACnD,KAAMA,GAAY,iBAAkB,KAAK,IAAK,IAAI,EAClD,KAAMA,GAAY,iBAAkB,KAAK,IAAK,IAAI,EAClD,KAAMA,GAAY,iBAAkB,KAAK,IAAK,IAAI,EAClD,MAAOA,GAAY,kBAAmB,KAAK,IAAK,IAAI,EACpD,MAAOA,GAAY,kBAAmB,KAAK,IAAK,IAAI,EACpD,UAAWA,GAAY,kBAAmB,KAAK,IAAK,IAAI,EACxD,MAAOA,GAAY,kBAAmB,KAAK,IAAK,IAAI,EACpD,WAAYA,GAAY,iBAAkB,KAAK,IAAK,IAAI,CAC1D,CACF,CACA,cAAcC,EAAYC,EAAa,GAAO,CAC5C,IAAMC,EAAS,CACb,SAAUF,EAAW,SACrB,gBAAiBA,EAAW,gBAC5B,YAAa,KAAK,YAAY,KAAK,KAAMA,CAAU,EACnD,WAAY,KAAK,WAAW,KAAK,IAAI,EACrC,WAAY,KAAK,WAAW,KAAK,IAAI,EACrC,aAAcC,CAChB,EACA,KAAK,wBAAwB,KAAK,CAChC,OAAAC,EACA,WAAAF,CACF,CAAC,EACD,KAAK,YAAY,cAAcE,CAAM,CACvC,CACA,iBAAiBF,EAAY,CAC3B,IAAMG,EAAkB,KAAK,wBAAwB,KAAKC,GAAQA,EAAK,aAAeJ,CAAU,EAC5FG,IACF,KAAK,YAAY,iBAAiBA,EAAgB,MAAM,EACxDE,EAAiB,KAAK,wBAAyBF,CAAe,EAElE,CACA,SAAU,CACR,KAAK,wBAAwB,QAAQA,GAAmB,KAAK,YAAY,iBAAiBA,EAAgB,MAAM,CAAC,EACjH,KAAK,wBAAwB,OAAS,EACtC,KAAK,YAAY,OAAS,EAC1B,MAAM,QAAQ,CAChB,CACA,OAAQ,CACF,KAAK,UACP,KAAK,WAAW,KAAK,cAAe,EAAI,CAE5C,CACA,YAAYH,EAAYM,EAAY,CAClC,KAAK,SAAW,GAChB,KAAK,WAAaN,EAClB,KAAK,cAAgBM,EACrB,KAAK,SAAW,KAAK,WAAW,YAAY,EACxC,KAAK,WAAW,eAClB,KAAK,WAAW,cAAc,EAEhC,KAAK,YAAY,CACnB,CACA,WAAWA,EAAY,CAMrB,GALA,KAAK,cAAgB,KACrB,KAAK,SAAW,GACZ,KAAK,WAAW,eAClB,KAAK,WAAW,cAAc,EAE5B,KAAK,gBAAkB,KAAK,eAAe,WAAY,CACzD,IAAMC,EAAgB,KAAK,sBAAsB,KAAK,eAAgBD,EAAY,KAAM,KAAM,EAAK,EACnG,KAAK,eAAe,WAAWC,CAAa,CAC9C,CACA,KAAK,eAAiB,OACtB,KAAK,SAAW,KAChB,KAAK,YAAY,CACnB,CACA,WAAWD,EAAYE,EAAW,CAChC,IAAMC,EAAa,KAAK,uBAAuBH,CAAU,EACnDI,EAAa,KAAK,qBAAqBJ,CAAU,EACvD,KAAK,cAAgBA,EACrB,KAAK,cAAcA,CAAU,EAC7B,IAAMK,EAAmB,KAAK,YAAY,OAAOC,GAAU,KAAK,oBAAoBN,EAAYM,CAAM,CAAC,EACjGC,EAAa,KAAK,sBAAsBP,EAAYK,CAAgB,EAC1E,GAAIE,IAAe,KAAK,eACtB,KAAK,wBAAwBP,EAAYG,EAAYC,EAAYF,CAAS,EACtE,KAAK,iBAAmB,MAAQK,IAAe,MACjD,KAAK,WAAW,aAAa,KAAK,QAAQ,EAExC,KAAK,iBAAmB,MAAQA,IAAe,MACjD,KAAK,WAAW,cAAc,KAAK,QAAQ,EAE7C,KAAK,wBAAwBA,EAAYP,EAAYG,EAAYC,EAAYF,CAAS,EACtF,KAAK,eAAiBK,UACbA,GAAcA,EAAW,WAAY,CAC9C,IAAMN,EAAgB,KAAK,sBAAsBM,EAAYP,EAAYG,EAAYC,EAAYF,CAAS,EAC1GK,EAAW,WAAWN,CAAa,CACrC,CACF,CACA,+BAA+BM,EAAY,CACzC,IAAMC,EAAsBD,EAAW,uBAAyBA,EAAW,uBAAuB,EAAI,KAChGE,EAAa,CAAC,CAACF,EAAW,aAAa,CAAC,CAAC,EAC/C,OAAOC,EAAsBC,EAAW,OAAOD,CAAmB,EAAIC,CACxE,CACA,uBAAuBT,EAAYS,EAAY,CAC7C,QAAWC,KAAaD,EAAY,CAClC,IAAME,EAAOD,EAAU,sBAAsB,EAC7C,GAAIC,EAAK,QAAU,GAAKA,EAAK,SAAW,EACtC,MAAO,GAET,IAAMC,EAAgBZ,EAAW,SAAWW,EAAK,MAAQX,EAAW,QAAUW,EAAK,MAC7EE,EAAcb,EAAW,SAAWW,EAAK,KAAOX,EAAW,QAAUW,EAAK,OAChF,GAAI,CAACC,GAAiB,CAACC,EACrB,MAAO,EAEX,CACA,MAAO,EACT,CAEA,oBAAoBb,EAAYO,EAAY,CAC1C,IAAMO,EAA8B,KAAK,+BAA+BP,CAAU,EAC9EQ,EAAkB,GACtB,QAAWC,KAAqBF,EAC9B,GAAI,KAAK,uBAAuBd,EAAYgB,CAAiB,EAAG,CAC9DD,EAAkB,GAClB,KACF,CAEF,OAAIR,EAAW,sBAAwB,CAACA,EAAW,aAAa,EAAE,SAAS,KAAK,WAAW,QAAQ,EAC1F,GAEFQ,GAAmBR,EAAW,eAAe,KAAK,WAAW,KAAM,KAAK,WAAW,QAAQ,CACpG,CACA,sBAAsBP,EAAYK,EAAkB,CAClD,IAAMY,EAAMZ,EAAiB,OAC7B,GAAIY,IAAQ,EACV,OAAO,KAET,GAAIA,IAAQ,EACV,OAAOZ,EAAiB,CAAC,EAG3B,IAAMa,EADW,KAAK,IAAI,YAAY,EACR,kBAAkBlB,EAAW,QAASA,EAAW,OAAO,EACtF,QAAWmB,KAAMD,EACf,QAAWX,KAAcF,EAEvB,GADmBe,GAAS,KAAK,+BAA+Bb,CAAU,CAAC,EAC5D,QAAQY,CAAE,IAAM,GAC7B,OAAOZ,EAIb,OAAO,IACT,CACA,wBAAwBA,EAAYP,EAAYG,EAAYC,EAAYF,EAAW,CACjF,GAAKK,EAGL,IAAIA,EAAW,YAAa,CAC1B,IAAMc,EAAiB,KAAK,sBAAsBd,EAAYP,EAAYG,EAAYC,EAAYF,CAAS,EAC3GK,EAAW,YAAYc,CAAc,CACvC,CACA,KAAK,aAAad,EAAW,YAAcA,EAAW,YAAY,EAAI,IAAI,EAC5E,CACA,wBAAwBP,EAAYG,EAAYC,EAAYF,EAAW,CACrE,GAAK,KAAK,eAGV,IAAI,KAAK,eAAe,YAAa,CACnC,IAAMoB,EAAiB,KAAK,sBAAsB,KAAK,eAAgBtB,EAAYG,EAAYC,EAAYF,CAAS,EACpH,KAAK,eAAe,YAAYoB,CAAc,CAChD,CACA,KAAK,aAAa,IAAI,EACxB,CACA,cAAcf,EAAY,CACxB,KAAK,YAAY,KAAKA,CAAU,CAClC,CACA,iBAAiBA,EAAY,CAC3B,KAAK,YAAc,KAAK,YAAY,OAAOD,GAAUA,EAAO,aAAa,IAAMC,EAAW,aAAa,CAAC,CAC1G,CACA,sBAAuB,CACrB,OAAO,KAAK,YAAY,KAAKgB,GAASA,EAAM,QAAQ,CACtD,CACA,iBAAiB3B,EAAQ,CAEvB,OADwB,KAAK,YAAY,OAAOU,GAAUA,EAAO,QAAQ,EAClD,KAAKkB,GAAQA,EAAK,aAAa,IAAM5B,EAAO,aAAa,CAAC,GAAK,IACxF,CACA,uBAAuB6B,EAAO,CAC5B,IAAMC,EAAU,KAAK,eAAiB,KAAK,cAAc,QACnDC,EAAWF,EAAM,QACvB,OAAIC,IAAYC,EACP,KAEFD,EAAUC,EAAW,EAAe,CAC7C,CACA,qBAAqBF,EAAO,CAC1B,IAAMG,EAAU,KAAK,eAAiB,KAAK,cAAc,QACnDC,EAAWJ,EAAM,QACvB,OAAIG,IAAYC,EACP,KAEFD,EAAUC,EAAW,EAAa,CAC3C,CACA,sBAAsBtB,EAAYkB,EAAOtB,EAAYC,EAAYF,EAAW,CAC1E,IAAM4B,EAAiBvB,EAAW,aAAa,EACzCI,EAAOmB,EAAe,sBAAsB,EAC5C,CACJ,SAAAC,EACA,WAAArC,CACF,EAAI,KACEsC,EAAIP,EAAM,QAAUd,EAAK,KACzBsB,EAAIR,EAAM,QAAUd,EAAK,IAC/B,OAAO,KAAK,IAAI,oBAAoB,CAClC,MAAAc,EACA,EAAAO,EACA,EAAAC,EACA,WAAA7B,EACA,WAAAD,EACA,WAAAT,EACA,UAAAQ,EACA,SAAA6B,EACA,eAAAD,CACF,CAAC,CACH,CACA,cAAcL,EAAO,CACnB,IAAMS,EAAQ,KAAK,OACnB,GAAI,CAACA,EACH,OAGF,IAAMC,EADYD,EAAM,sBAAsB,EAChB,OACxBE,EAAeC,GAAc,EAAI,EACjCC,EAAgBC,GAAe,EAAI,EACnCC,EAAmBC,GAA0BP,EAAM,YAAY,EAC/D,CACJ,QAAAN,EACA,QAAAF,CACF,EAAID,EACAiB,EAAMd,EAAUY,EAAiB,IAAML,EAAc,EACrDQ,EAAOjB,EAAUc,EAAiB,KAAO,GACvCI,EAAY,KAAK,IAAI,YAAY,EACjCC,EAAMD,EAAU,aAAe,OAC/BE,EAAgBD,EAAI,aAAeD,EAAU,gBAAgB,UAC7DG,EAAgBF,EAAI,aAAeD,EAAU,gBAAgB,WAC/DR,EAAe,GAAKO,EAAOT,EAAM,YAAcE,EAAeW,IAChEJ,EAAOP,EAAeW,EAAgBb,EAAM,aAE1CS,EAAO,IACTA,EAAO,GAELL,EAAgB,GAAKI,EAAMR,EAAM,aAAeI,EAAgBQ,IAClEJ,EAAMJ,EAAgBQ,EAAgBZ,EAAM,cAE1CQ,EAAM,IACRA,EAAM,GAERR,EAAM,MAAM,KAAO,GAAGS,CAAI,KAC1BT,EAAM,MAAM,IAAM,GAAGQ,CAAG,IAC1B,CACA,aAAc,CACR,KAAK,QAAU,KAAK,cACtB,KAAK,aAAa,YAAY,KAAK,MAAM,EAE3C,KAAK,OAAS,IAChB,CACA,aAAc,CACZ,KAAK,OAASM,GAAc3D,EAAc,EAC1C,KAAK,kBAAkB,sCAAsC,KAAK,MAAM,EACxE,KAAK,YAAY,kBAAkB,KAAK,MAAM,EAC9C,KAAK,WAAa,KAAK,OAAO,cAAc,oBAAoB,EAChE,KAAK,aAAa,IAAI,EACtB,IAAM4D,EAAQ,KAAK,OAAO,cAAc,qBAAqB,EACzDC,EAAe,KAAK,WAAW,aAC/BC,GAAYD,CAAY,IAC1BA,EAAeA,EAAa,GAE9BD,EAAM,UAAYG,GAAcF,CAAY,GAAK,GACjD,KAAK,OAAO,MAAM,OAAS,OAC3B,KAAK,OAAO,MAAM,IAAM,OACxB,KAAK,OAAO,MAAM,KAAO,OACzB,IAAMN,EAAY,KAAK,IAAI,YAAY,EACnCS,EAAW,KACXC,EAAW,KACf,GAAI,CACFD,EAAWT,EAAU,iBACvB,MAAY,CAAC,QAAE,CACRS,IACHA,EAAW,KAAK,IAAI,YAAY,GAElC,IAAME,EAAOF,EAAS,cAAc,MAAM,EACtCE,EACFD,EAAWC,EACFF,aAAoB,WAC7BC,EAAWD,EACFA,aAAoB,SAC7BC,EAAWD,GAAU,gBAErBC,EAAWD,CAEf,CACA,KAAK,aAAeC,EACf,KAAK,aAGR,KAAK,aAAa,YAAY,KAAK,MAAM,EAFzCE,EAAU,iEAAiE,CAI/E,CACA,aAAaC,EAAUC,EAAQ,GAAO,CACpCC,EAAc,KAAK,UAAU,EAC7B,IAAIC,EAAQ,KACPH,IACHA,EAAW,KAAK,WAAW,mBAAqB,KAAK,WAAW,mBAAmB,EAAI,cAEzFG,EAAQ,KAAK,YAAYH,CAAQ,EACjC,KAAK,WAAW,UAAU,OAAO,yBAA0BC,CAAK,EAC5D,EAAAE,IAAU,KAAK,YAAY,MAAW,KAAK,IAAI,IAAI,+BAA+B,IAGlFA,GACF,KAAK,WAAW,YAAYA,CAAK,CAErC,CACF,EAGIC,GAAoB,KAAM,CAC5B,YAAYjE,EAAQ,CAClB,KAAK,gBAAkB,KACvB,KAAK,iBAAmB,KACxB,KAAK,gBAAkBA,EAAO,gBAC9B,KAAK,mBAAqBA,EAAO,WAAW,QAAQ,GAAG,IAAM,GAC7D,KAAK,iBAAmBA,EAAO,WAAW,QAAQ,GAAG,IAAM,GAC3D,KAAK,aAAeA,EAAO,cAAgB,KAAOA,EAAO,aAAe,GACpEA,EAAO,mBACT,KAAK,iBAAmBA,EAAO,kBAE7B,KAAK,mBACP,KAAK,oBAAsBA,EAAO,oBAClC,KAAK,oBAAsBA,EAAO,qBAEhC,KAAK,qBACP,KAAK,sBAAwBA,EAAO,sBACpC,KAAK,sBAAwBA,EAAO,uBAEtC,KAAK,yBAA2BA,EAAO,2BAA6B,IAAM,IAC1E,KAAK,2BAA6BA,EAAO,6BAA+B,IAAM,GAChF,CACA,MAAMI,EAAY8D,EAA0B,GAAO,CACjD,IAAMC,EAAqBD,GAA2B,KAAK,yBAAyB,EACpF,GAAIC,GAAsB,KAAK,2BAA2B,EACxD,OAEF,IAAMpD,EAAO,KAAK,gBAAgB,sBAAsB,EAClDqD,EAAa,KAAK,aACxB,KAAK,SAAWhE,EAAW,QAAUW,EAAK,KAAOqD,EACjD,KAAK,UAAYhE,EAAW,QAAUW,EAAK,MAAQqD,EACnD,KAAK,OAAShE,EAAW,QAAUW,EAAK,IAAMqD,GAAc,CAACD,EAC7D,KAAK,SAAW/D,EAAW,QAAUW,EAAK,OAASqD,GAAc,CAACD,EAC9D,KAAK,UAAY,KAAK,WAAa,KAAK,QAAU,KAAK,SACzD,KAAK,qBAAqB,EAE1B,KAAK,cAAc,CAEvB,CACA,sBAAuB,CACjB,KAAK,kBAAoB,OAC3B,KAAK,gBAAkB,OAAO,YAAY,KAAK,OAAO,KAAK,IAAI,EAAG,GAAG,EACrE,KAAK,UAAY,EAErB,CACA,QAAS,CACP,KAAK,YACL,IAAME,EAAa,KAAK,UAAY,GAAK,IAAM,KAAK,UAAY,GAAK,GAAK,GAC1E,GAAI,KAAK,iBAAkB,CACzB,IAAMC,EAAkB,KAAK,oBAAoB,EAC7C,KAAK,QACP,KAAK,oBAAoBA,EAAkBD,CAAU,EAEnD,KAAK,UACP,KAAK,oBAAoBC,EAAkBD,CAAU,CAEzD,CACA,GAAI,KAAK,mBAAoB,CAC3B,IAAME,EAAkB,KAAK,sBAAsB,EAC/C,KAAK,UACP,KAAK,sBAAsBA,EAAkBF,CAAU,EAErD,KAAK,WACP,KAAK,sBAAsBE,EAAkBF,CAAU,CAE3D,CACI,KAAK,kBACP,KAAK,iBAAiB,CAE1B,CACA,eAAgB,CACV,KAAK,kBACP,OAAO,cAAc,KAAK,eAAe,EACzC,KAAK,gBAAkB,KAE3B,CACF,EAUA,IAAIG,GAAiB,cAAcC,CAAS,CAC1C,UAAUC,EAAO,CACf,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,SAAWA,EAAM,SACtB,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,aAAeA,EAAM,aAC1B,KAAK,eAAiBA,EAAM,eAC5B,KAAK,cAAgBA,EAAM,cAC3B,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,aAAeA,EAAM,aAC1B,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,aAAeA,EAAM,YAC5B,CACA,YAAYC,EAAY,CACtB,MAAM,EACN,KAAK,WAAaA,CACpB,CACA,eAAgB,CACV,KAAK,IAAI,eAAe,YAAY,IACtC,KAAK,mBAAqB,KAAK,UAEjC,KAAK,aAAa,UAAUC,GAAK,CAC/B,IAAMC,EAAcD,EAAE,aACtB,KAAK,kBAAoB,IAAIE,GAAkB,CAC7C,gBAAiBD,EAAY,uBAAuB,EACpD,WAAY,IACZ,oBAAqB,IAAMA,EAAY,iBAAiB,EAAE,mBAAmB,EAAE,IAC/E,oBAAqBE,GAAYF,EAAY,iBAAiB,EAAE,0BAA0BE,CAAQ,EAClG,iBAAkB,IAAM,CACtB,KAAK,WAAW,KAAK,iBAAiB,CACxC,CACF,CAAC,CACH,CAAC,CACH,CACA,cAAe,CACb,OAAO,KAAK,UACd,CACA,eAAeC,EAAM,CACnB,OAAOA,IAAS,CAClB,CACA,aAAc,CAEZ,OADoB,KAAK,IAAI,IAAI,gBAAgB,GAC9B,KAAK,qBAAqB,EACpC,aAEF,MACT,CACA,sBAAuB,CAUrB,MARI,GADiB,KAAK,gBAAgB,mBAAmB,EAC5C,QAGO,KAAK,eAAe,mBAAmB,GAI1C,KAAK,eAAe,aAAa,EAKxD,CACA,YAAYC,EAAe,CACzB,GAAI,CAAC,KAAK,eAAeA,CAAa,EACpC,OAAOA,EAAc,SAAS,UAAY,CAAC,EAE7C,IAAMC,EAAcD,EAAc,SAAS,QAE3C,GAD0B,KAAK,IAAI,IAAI,iBAAiB,EACjC,CACrB,IAAME,EAAgB,CAAC,GAAG,KAAK,iBAAiB,iBAAiB,CAAC,EAAE,KAAK,CAACC,EAAGC,IACvED,EAAE,UAAY,MAAQC,EAAE,UAAY,KAC/B,EAEF,KAAK,kBAAkBD,CAAC,EAAI,KAAK,kBAAkBC,CAAC,CAC5D,EACD,GAAIF,EAAc,QAAQD,CAAW,IAAM,GACzC,OAAOC,CAEX,CACA,MAAO,CAACD,CAAW,CACrB,CACA,YAAYD,EAAe,CACzBA,EAAc,SAAS,SAAW,KAAK,YAAYA,CAAa,EAChE,KAAK,kBAAkB,eAAgBA,CAAa,EACpD,KAAK,YAAYA,CAAa,EAAE,QAAQK,GAAW,CACjDA,EAAQ,YAAY,EAAI,CAC1B,CAAC,EACD,KAAK,kBAAkBL,CAAa,CACtC,CACA,WAAWA,EAAe,CACxB,KAAK,kBAAkBA,CAAa,CACtC,CACA,eAAeA,EAAe,CAC5B,GAAM,CACJ,qBAAAM,CACF,EAAIN,EAAc,WAClB,OAAOM,IAAyB,KAAK,IAAI,cAAc,CACzD,CACA,yBAAyBN,EAAe,CAEtC,IAAMO,EADc,KAAK,aAAa,gBAAgB,EAC1B,OAAO,EAC7B,CACJ,eAAAC,CACF,EAAIR,EACJ,MAAO,CAACO,EAAQ,SAASC,CAAc,CACzC,CACA,kBAAkBR,EAAe,CAC/B,KAAK,kBAAkB,cAAeA,CAAa,EACnD,KAAK,kBAAoBA,EACzB,IAAMS,EAAQ,KAAK,kBAAkB,sBAAsBT,CAAa,EAAE,EACtD,KAAK,IAAI,IAAI,gBAAgB,GAE/C,KAAK,cAAcA,EAAeS,CAAK,EAEzC,KAAK,kBAAkB,MAAMT,EAAc,KAAK,CAClD,CACA,cAAcA,EAAeS,EAAO,CAClC,IAAMC,EAAiB,KAAK,eAAeV,CAAa,EAClDW,EAAc,KAAK,IAAI,IAAI,gBAAgB,EAC3CC,EAAWZ,EAAc,SAAS,SACpCW,GAAe,KAAK,qBAAqB,IAGzC,KAAK,IAAI,IAAI,6BAA6B,GAAK,CAACD,EAC7C,KAAK,yBAAyBV,CAAa,GAC9C,KAAK,mBAAmB,oBAAoBY,EAAS,CAAC,EAAGH,CAAK,EAGhE,KAAK,SAASG,EAAUH,CAAK,EAEjC,CACA,kBAAkBJ,EAAS,CACzB,IAAMQ,EAAcR,EAAQ,kBAAkB,EAC9C,OAAO,SAASS,EAAMD,EAAY,MAAM,GAAG,CAAC,EAAG,EAAE,CACnD,CACA,yBAAyBb,EAAe,CACtC,IAAMe,EAAyB,KAAK,mBAAmB,0BAA0B,EAC3EC,EAAUD,GAA0BA,EAAuB,cAAgB,EAC3EN,EAAQ,KAAK,kBAAkB,sBAAsBT,CAAa,EAAE,EACpEY,EAAWZ,EAAc,SAAS,SACpCiB,EAAYD,EAAU,EAAI,EAC9B,GAAI,KAAK,eAAehB,CAAa,EACnCY,EAAS,QAAQP,GAAW,CACtBA,EAAQ,OAASI,IACnBQ,GAAa,EAEjB,CAAC,EACD,KAAK,SAASL,EAAUH,EAAOQ,CAAS,MACnC,CACL,IAAMC,EAAe,KAAK,IAAI,iBAAiB,EAC3CC,EAAW,KAAK,mBAAmB,mBAAmBV,CAAK,EAAI,EAC/D,KAAK,mBAAmB,qBAAqBA,CAAK,IAAM,GAC1DU,IAEF,KAAK,mBAAmB,cAAc,CACpC,IAAKP,EAAS,OAAOQ,GAAQ,CAAC,KAAK,mBAAmB,WAAWF,IAAe,CAC9E,KAAME,EAAK,KACX,MAAO,EACP,UAAWA,EAAK,SAClB,CAAC,GAAKA,EAAK,KAAK,EAAE,CAAC,EAAE,IAAIA,GAAQA,EAAK,IAAI,EAC1C,SAAAD,CACF,CAAC,CACH,CACA,KAAK,kBAAkB,CACzB,CACA,mBAAoB,CAClB,KAAK,mBAAmB,oBAAoB,IAAI,CAClD,CACA,SAASP,EAAUH,EAAOQ,EAAY,EAAG,CACnB,KAAK,mBAAmB,kBAAkBL,EAAUH,EAAOQ,CAAS,IAEtF,KAAK,aAAa,iBAAiB,EACnC,KAAK,cAAc,oBAAoB,EAE3C,CACA,eAAeI,EAAQ,CACrB,GAAI,CAACA,EAAO,aAAa,EAAG,CAC1BC,EAAU,0DAA0D,EACpE,MACF,CACA,GAAI,KAAK,mBAAmB,iBAAiBD,CAAM,EAAG,CACpDC,EAAU,kHAAkH,EAC5H,MACF,CACA,IAAIC,EAAkB,CACpB,aAAcF,EAAO,YACvB,EACIA,EAAO,SACTE,EAAkBF,GAEdA,EAAO,cACTE,EAAgB,YAAcC,GAAK,CACjCH,EAAO,YAAY,KAAK,uBAAuB,eAAgBG,CAAC,CAAC,CACnE,GAEEH,EAAO,cACTE,EAAgB,YAAcC,GAAK,CACjCH,EAAO,YAAY,KAAK,uBAAuB,eAAgBG,CAAC,CAAC,CACnE,GAEEH,EAAO,aACTE,EAAgB,WAAaC,GAAK,CAChCH,EAAO,WAAW,KAAK,uBAAuB,cAAeG,CAAC,CAAC,CACjE,GAEEH,EAAO,aACTE,EAAgB,WAAaC,GAAK,CAChCH,EAAO,WAAW,KAAK,uBAAuB,aAAcG,CAAC,CAAC,CAChE,IAGJ,KAAK,mBAAmB,cAAcC,EAAA,CACpC,eAAgB1B,GAAQA,IAAS,EACjC,YAAa,IAAM,OACnB,SAAU,IACPwB,EACJ,CACH,CACA,eAAeG,EAAQ,CACrB,IAAMC,EAAe,KAAK,aAAa,KAAK,IAAI,EAC1CC,EAAc,KAAK,YAAY,KAAK,IAAI,EACxCC,EAAc,KAAK,YAAY,KAAK,IAAI,EACxCC,EAAa,KAAK,WAAW,KAAK,IAAI,EACtCC,EAAa,KAAK,WAAW,KAAK,IAAI,EAC5C,OAAKL,EAWE,CACL,aAAAC,EACA,YAAaD,EAAO,YAAcF,GAAK,CACrCI,EAAYJ,CAAC,EACbE,EAAO,YAAY,KAAK,uBAAuB,eAAgBF,CAAC,CAAC,CACnE,EAAII,EACJ,YAAaF,EAAO,YAAcF,GAAK,CACrCK,EAAYL,CAAC,EACbE,EAAO,YAAY,KAAK,uBAAuB,eAAgBF,CAAC,CAAC,CACnE,EAAIK,EACJ,WAAYH,EAAO,WAAaF,GAAK,CACnCM,EAAWN,CAAC,EACZE,EAAO,WAAW,KAAK,uBAAuB,cAAeF,CAAC,CAAC,CACjE,EAAIM,EACJ,WAAYJ,EAAO,WAAaF,GAAK,CACnCO,EAAWP,CAAC,EACZE,EAAO,WAAW,KAAK,uBAAuB,aAAcF,CAAC,CAAC,CAChE,EAAIO,EACJ,SAAU,EACZ,EA7BS,CACL,aAAAJ,EACA,YAAAC,EACA,YAAAC,EACA,WAAAC,EACA,WAAAC,EAEA,SAAU,EACZ,CAsBJ,CACA,uBAAuBhC,EAAMC,EAAe,CAC1C,IAAMgC,EAAc,KAAK,kBAAkB,sBAAsBhC,CAAa,EAAE,EAC1EiC,EAAqBD,EAAc,KAAK,kBAAkB,qBAAqB,EACjFE,EAAY,GACZC,EACCF,IACHC,EAAY,KAAK,SAAS,mBAAmBF,CAAW,EACxDG,EAAW,KAAK,SAAS,OAAOD,CAAS,GAE3C,IAAIE,EACJ,OAAQpC,EAAc,WAAY,CAChC,IAAK,GACHoC,EAAmB,OACnB,MACF,IAAK,GACHA,EAAmB,KACnB,MACF,QACEA,EAAmB,KACnB,KACJ,CAWA,OAVc,KAAK,IAAI,oBAAoB,CACzC,KAAArC,EACA,MAAOC,EAAc,MACrB,KAAMA,EAAc,SAAS,QAC7B,MAAOA,EAAc,SAAS,SAC9B,UAAAkC,EACA,SAAAC,EACA,EAAGH,EACH,WAAYI,CACd,CAAC,CAEH,CACA,kBAAkBrC,EAAMC,EAAe,CACrC,IAAMqC,EAAQ,KAAK,uBAAuBtC,EAAMC,CAAa,EAC7D,KAAK,aAAa,cAAcqC,CAAK,CACvC,CACA,YAAYrC,EAAe,CACzB,KAAK,kBAAkB,eAAgBA,CAAa,EACpD,KAAK,aAAaA,CAAa,EAC3B,KAAK,IAAI,IAAI,gBAAgB,GAC/B,KAAK,kBAAkB,CAE3B,CACA,WAAWA,EAAe,CACxB,KAAK,kBAAkB,aAAcA,CAAa,EAClD,KAAK,aAAaA,CAAa,EAC3B,KAAK,IAAI,IAAI,gBAAgB,IAAM,KAAK,IAAI,IAAI,6BAA6B,GAAK,CAAC,KAAK,eAAeA,CAAa,IAAM,CAAC,KAAK,yBAAyBA,CAAa,GACxK,KAAK,yBAAyBA,CAAa,CAE/C,CACA,aAAaA,EAAe,CAC1B,KAAK,kBAAkB,cAAc,EACrC,KAAK,YAAYA,CAAa,EAAE,QAAQK,GAAW,CACjDA,EAAQ,YAAY,EAAK,CAC3B,CAAC,CACH,CACF,EAGIiC,GAAc,cAAc9C,CAAS,CACvC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,cAChB,KAAK,iBAAmB,CAAC,EACzB,KAAK,YAAc,CAAC,CACtB,CACA,UAAUC,EAAO,CACf,KAAK,kBAAoBA,EAAM,iBACjC,CACA,SAAU,CACR,KAAK,YAAY,QAAQ,KAAK,eAAe,KAAK,IAAI,CAAC,EACvD,KAAK,YAAY,OAAS,EAC1B,MAAM,QAAQ,CAChB,CACA,eAAe8C,EAAuB,CACpC,IAAMC,EAAUD,EAAsB,WAAW,SAC3CE,EAAoBF,EAAsB,kBAEhD,GADAC,EAAQ,oBAAoB,YAAaC,CAAiB,EACtDF,EAAsB,aAAc,CACtC,IAAMG,EAAqBH,EAAsB,mBACjDC,EAAQ,oBAAoB,aAAcE,EAAoB,CAC5D,QAAS,EACX,CAAC,CACH,CACF,CACA,iBAAiBrB,EAAQ,CACvB,IAAMkB,EAAwB,KAAK,YAAY,KAAKI,GAAQA,EAAK,aAAetB,CAAM,EACjFkB,IAGL,KAAK,eAAeA,CAAqB,EACzCK,EAAiB,KAAK,YAAaL,CAAqB,EAC1D,CACA,YAAa,CACX,OAAO,KAAK,QACd,CACA,cAAclB,EAAQ,CACpB,IAAMwB,EAAgB,KAAK,YAAY,KAAK,KAAMxB,CAAM,EAClD,CACJ,SAAAyB,EACA,aAAAC,EACA,wBAAAC,CACF,EAAI3B,EACJyB,EAAS,iBAAiB,YAAaD,CAAa,EACpD,IAAII,EAAgB,KACdC,EAAgB,KAAK,IAAI,IAAI,eAAe,EAC9CH,GAAgB,CAACG,IACnBD,EAAgBE,GAAc,CACxBC,GAAsBD,EAAW,MAAM,IAGvCA,EAAW,aACbA,EAAW,eAAe,EACtBH,GACFG,EAAW,gBAAgB,GAG/B,KAAK,aAAa9B,EAAQ8B,CAAU,EACtC,EACAL,EAAS,iBAAiB,aAAcG,EAAe,CACrD,QAAS,EACX,CAAC,GAEH,KAAK,YAAY,KAAK,CACpB,WAAY5B,EACZ,kBAAmBwB,EACnB,mBAAoBI,EACpB,aAAc,CAAC,CAACF,CAClB,CAAC,CACH,CACA,gBAAiB,CACf,OAAO,KAAK,WACd,CAEA,aAAa1B,EAAQ8B,EAAY,CAC/B,KAAK,kBAAoB9B,EACzB,KAAK,SAAW,GAChB,IAAMgC,EAAQF,EAAW,QAAQ,CAAC,EAClC,KAAK,cAAgBE,EACrB,KAAK,WAAaA,EAClB,IAAMC,EAAiB9B,GAAK,KAAK,YAAYA,EAAGH,EAAO,QAAQ,EACzDkC,EAAgB/B,GAAK,KAAK,UAAUA,EAAGH,EAAO,QAAQ,EACtDmC,EAAoBhC,GAAK,CACzBA,EAAE,YACJA,EAAE,eAAe,CAErB,EACMiC,EAASN,EAAW,OACpBzB,EAAS,CAIf,CACE,OAAQ,KAAK,IAAI,YAAY,EAC7B,KAAM,YACN,SAAU8B,EACV,QAAS,CACP,QAAS,EACX,CACF,EAAG,CACD,OAAAC,EACA,KAAM,YACN,SAAUH,EACV,QAAS,CACP,QAAS,EACX,CACF,EAAG,CACD,OAAAG,EACA,KAAM,WACN,SAAUF,EACV,QAAS,CACP,QAAS,EACX,CACF,EAAG,CACD,OAAAE,EACA,KAAM,cACN,SAAUF,EACV,QAAS,CACP,QAAS,EACX,CACF,CAAC,EACD,KAAK,mBAAmB7B,CAAM,EAC1BL,EAAO,kBAAoB,GAC7B,KAAK,aAAagC,EAAO,KAAK,WAAYhC,EAAO,QAAQ,CAE7D,CAEA,YAAYA,EAAQqC,EAAY,CAC9B,IAAMlC,EAAIkC,EAQV,GAPIrC,EAAO,gBAAkBA,EAAO,eAAeqC,CAAU,GAGzDlC,EAAE,iCAGNA,EAAE,+BAAiC,GAC/BkC,EAAW,SAAW,GACxB,OAEE,KAAK,wBAAwBA,CAAU,GACzCA,EAAW,eAAe,EAE5B,KAAK,kBAAoBrC,EACzB,KAAK,SAAW,GAChB,KAAK,gBAAkBqC,EACvB,KAAK,YAAcA,EAAW,OAC9B,IAAMC,EAAiBtB,GAAS,KAAK,YAAYA,EAAOhB,EAAO,QAAQ,EACjEuC,EAAevB,GAAS,KAAK,UAAUA,EAAOhB,EAAO,QAAQ,EAC7DwC,EAAexB,GAASA,EAAM,eAAe,EAC7CoB,EAAS,KAAK,IAAI,YAAY,EAC9B/B,EAAS,CAAC,CACd,OAAA+B,EACA,KAAM,YACN,SAAUE,CACZ,EAAG,CACD,OAAAF,EACA,KAAM,UACN,SAAUG,CACZ,EAAG,CACD,OAAAH,EACA,KAAM,cACN,SAAUI,CACZ,CAAC,EACD,KAAK,mBAAmBnC,CAAM,EAC1BL,EAAO,kBAAoB,GAC7B,KAAK,YAAYqC,EAAYrC,EAAO,QAAQ,CAEhD,CACA,mBAAmBK,EAAQ,CACzBA,EAAO,QAAQoC,GAAgB,CAC7B,GAAM,CACJ,OAAAL,EACA,KAAA1D,EACA,SAAAgE,EACA,QAAAC,CACF,EAAIF,EACJL,EAAO,iBAAiB1D,EAAMgE,EAAUC,CAAO,CACjD,CAAC,EACD,KAAK,iBAAiB,KAAK,IAAM,CAC/BtC,EAAO,QAAQoC,GAAgB,CAC7B,GAAM,CACJ,OAAAL,EACA,KAAA1D,EACA,SAAAgE,EACA,QAAAC,CACF,EAAIF,EACJL,EAAO,oBAAoB1D,EAAMgE,EAAUC,CAAO,CACpD,CAAC,CACH,CAAC,CACH,CAGA,sBAAsBF,EAAcG,EAAY,CAC9C,GAAM,CACJ,gBAAAC,CACF,EAAI,KAAK,kBACHC,EAAoBC,EAAQF,CAAe,EAAIA,EAAkB,EACvE,OAAOG,GAAeP,EAAcG,EAAYE,CAAiB,CACnE,CACA,oBAAoBG,EAAW,CAC7B,QAASC,EAAI,EAAGA,EAAID,EAAU,OAAQC,IACpC,GAAID,EAAUC,CAAC,EAAE,aAAe,KAAK,WAAW,WAC9C,OAAOD,EAAUC,CAAC,EAGtB,OAAO,IACT,CACA,aAAaT,EAAcG,EAAYO,EAAI,CACzC,GAAI,CAAC,KAAK,SAAU,CAClB,GAAI,CAAC,KAAK,UAAY,KAAK,sBAAsBV,EAAcG,CAAU,EACvE,OAEF,KAAK,SAAW,GAChB,IAAM5B,EAAQ,CACZ,KAAM,cACN,OAAQmC,CACV,EACA,KAAK,aAAa,cAAcnC,CAAK,EACrC,KAAK,kBAAkB,YAAY4B,CAAU,EAC7C,KAAK,kBAAkB,WAAWA,CAAU,CAC9C,CACA,KAAK,kBAAkB,WAAWH,CAAY,CAChD,CACA,YAAYX,EAAYqB,EAAI,CAC1B,IAAMnB,EAAQ,KAAK,oBAAoBF,EAAW,OAAO,EACpDE,GAGL,KAAK,aAAaA,EAAO,KAAK,WAAYmB,CAAE,CAC9C,CAGA,YAAYd,EAAYc,EAAI,CACtBC,GAAiB,GACD,KAAK,IAAI,YAAY,EAC7B,aAAa,GAAG,gBAAgB,EAExC,KAAK,wBAAwBf,CAAU,GACzCA,EAAW,eAAe,EAE5B,KAAK,aAAaA,EAAY,KAAK,gBAAiBc,CAAE,CACxD,CACA,wBAAwBd,EAAY,CAClC,IAAMgB,EAAyB,KAAK,IAAI,IAAI,yBAAyB,EAC/DC,EAAcjB,EAAW,OAAS,YACxC,OAGEgB,GAA0BC,GAAejB,EAAW,YAAc,KAAK,kBAAkB,oBAAoBA,CAAU,GAAK,CAAC,KAAK,uBAAuBA,CAAU,CAEvK,CACA,uBAAuBA,EAAY,CAGjC,MAAO,CAAC,CAFGA,EAAW,QACF,QAAQ,kBAAkB,GAC5B,MAAM,kCAAkC,CAC5D,CACA,UAAUP,EAAYqB,EAAI,CACxB,IAAInB,EAAQ,KAAK,oBAAoBF,EAAW,cAAc,EACzDE,IACHA,EAAQ,KAAK,eAEf,KAAK,WAAWA,EAAOmB,CAAE,CAC3B,CACA,UAAUd,EAAYc,EAAI,CACxB,KAAK,WAAWd,EAAYc,CAAE,CAChC,CACA,WAAWI,EAAcJ,EAAI,CAC3B,GAAI,KAAK,SAAU,CACjB,KAAK,SAAW,GAChB,KAAK,kBAAkB,WAAWI,CAAY,EAC9C,IAAMvC,EAAQ,CACZ,KAAM,cACN,OAAQmC,CACV,EACA,KAAK,aAAa,cAAcnC,CAAK,CACvC,CACA,KAAK,gBAAkB,KACvB,KAAK,YAAc,KACnB,KAAK,WAAa,KAClB,KAAK,cAAgB,KACrB,KAAK,kBAAoB,KACzB,KAAK,iBAAiB,QAAQwC,GAAQA,EAAK,CAAC,EAC5C,KAAK,iBAAiB,OAAS,CACjC,CACF,EAGIC,GAAc,cAAcC,CAAU,CACxC,YAAYC,EAAa3E,EAAS4E,EAAQC,EAAWhB,EAAiBiB,EAA0B,CAC9F,MAAM,EACN,KAAK,YAAcH,EACnB,KAAK,QAAU3E,EACf,KAAK,OAAS4E,EACd,KAAK,UAAYC,EACjB,KAAK,gBAAkBhB,EACvB,KAAK,yBAA2BiB,EAChC,KAAK,WAAa,IACpB,CACA,UAAU1F,EAAO,CACf,KAAK,MAAQA,CACf,CACA,aAAc,CACZ,OAAO,KAAK,WAAa,IAC3B,CACA,eAAgB,CAUd,GATK,KAAK,UAMR,KAAK,eAAe,KAAK,UAAW,KAAK,eAAe,GALxD,KAAK,YACL,mEAAmE,EACnE,KAAK,OAAO,EAAE,YAAY2F,GAAkB,UAAW,KAAK,IAAK,IAAI,CAAC,EACtE,KAAK,cAAc,GAIrB,KAAK,mBAAmB,EACpB,CAAC,KAAK,yBAA0B,CAClC,IAAMC,EAAW,KAAK,IAAI,IAAI,gBAAgB,EAAI,IAAIC,GAA0B,KAAM,KAAK,MAAO,KAAK,QAAS,KAAK,MAAM,EAAI,IAAIC,GAA6B,KAAM,KAAK,MAAO,KAAK,QAAS,KAAK,MAAM,EAC3M,KAAK,kBAAkBF,EAAU,KAAK,MAAM,OAAO,CACrD,CACF,CACA,eAAeG,EAAatB,EAAiB,CAC3C,KAAK,uBAAuBsB,CAAW,EACvC,KAAK,cAActB,CAAe,CACpC,CACA,kBAAmB,CAEjB,GAAI,CADsB,KAAK,IAAI,IAAI,iBAAiB,EAEtD,MAAO,CAAC,KAAK,OAAO,EAEtB,IAAMuB,EAAY,KAAK,MAAM,iBAAiB,iBAAiB,EAC/D,OAAOA,EAAU,QAAQ,KAAK,OAAO,IAAM,GAAKA,EAAY,CAAC,KAAK,OAAO,CAC3E,CAEA,oBAAqB,CACnB,IAAMC,EAAU,KAAK,IAAI,IAAI,gBAAgB,EAC5B,KAAK,IAAI,IAAI,UAAU,GACxBA,GACdpE,EAAU,uEAAuE,CAErF,CACA,aAAc,CACZ,MAAO,CACL,QAAS,KAAK,QACd,SAAU,KAAK,iBAAiB,EAChC,QAAS,KAAK,OAAS,CAAC,KAAK,MAAM,EAAI,OACvC,iBAAkB,KAAK,YAAY,CACrC,CACF,CACA,eAAe2D,EAAQ,CACrB,GAAIA,EAAQ,CACV,IAAMU,EAASV,EAAO,UAAU,EAChC,GAAIU,EAAO,YACT,OAAOA,EAAO,WAElB,CACA,OAAO,KAAK,IAAI,IAAI,aAAa,CACnC,CACA,cAAczB,EAAkB,EAAG,CAC7B,KAAK,YACP,KAAK,iBAAiB,EAExB,IAAM0B,EAAO,KAAK,OAAO,EACrB,KAAK,IAAI,IAAI,yBAAyB,IACxC,KAAK,wBAAwB,EAC7B,KAAK,kBAAoB,KAAK,2BAA2BA,EAAM,CAC7D,UAAWpE,GAAK,CACdA,GAAG,eAAe,CACpB,CACF,CAAC,EAAE,CAAC,GAEN,IAAMqE,EAAY,KAAK,cAAc,kBAAkB,EACvD,KAAK,WAAa,CAChB,KAAM,EACN,SAAUD,EACV,aAAc,IAAM,CAClB,IAAME,EAAW,KAAK,YAAY,EAC5BC,EAAgBD,EAAS,UAAU,QAAU,EAC7CE,EAAc,KAAK,eAAe,KAAK,MAAM,EACnD,OAAIA,EACKA,EAAYF,EAAUC,CAAa,EAErCA,IAAkB,EAAI,KAAK,YAAY,EAAI,GAAGA,CAAa,IAAIF,EAAU,cAAe,MAAM,CAAC,EACxG,EACA,YAAa,IAAM,KAAK,YAAY,EACpC,gBAAA3B,EACA,qBAAsB,KAAK,IAAI,cAAc,CAC/C,EACA,KAAK,MAAM,mBAAmB,cAAc,KAAK,WAAY,EAAI,CACnE,CACA,SAAU,CACR,KAAK,iBAAiB,EACtB,KAAK,wBAAwB,EAC7B,MAAM,QAAQ,CAChB,CACA,kBAAmB,CACZ,KAAK,aAGV,KAAK,MAAM,mBAAmB,iBAAiB,KAAK,UAAU,EAC9D,KAAK,WAAa,KACpB,CACA,yBAA0B,CACnB,KAAK,oBAGV,KAAK,kBAAkB,EACvB,KAAK,kBAAoB,OAC3B,CACF,EACI+B,GAAqB,cAAczG,CAAS,CAC9C,YAAY0G,EAAQ7F,EAAS4E,EAAQ,CACnC,MAAM,EACN,KAAK,OAASiB,EACd,KAAK,QAAU7F,EACf,KAAK,OAAS4E,CAChB,CACA,sBAAsBkB,EAAgB,CACpC,IAAMC,EAAmB,CACvB,eAAgB,EAClB,EACA,GAAID,EACF,KAAK,OAAO,aAAa,GAAOC,CAAgB,MAC3C,CACL,IAAIC,EAAQ,GACRC,EAAmB,GACnB,KAAK,SACPD,EAAQ,KAAK,OAAO,UAAU,KAAK,OAAO,GAAK,KAAK,OAAO,YAAY,EACvEC,EAAmBC,GAAY,KAAK,OAAO,UAAU,EAAE,OAAO,GAE5DD,GACF,KAAK,OAAO,aAAa,GAAMF,CAAgB,EAC/C,KAAK,OAAO,WAAWC,EAAOD,CAAgB,IAE9C,KAAK,OAAO,aAAaC,EAAOD,CAAgB,EAChD,KAAK,OAAO,WAAW,GAAMA,CAAgB,EAEjD,CACF,CACF,EACIb,GAA+B,cAAcU,EAAmB,CAClE,YAAYC,EAAQzG,EAAOY,EAAS4E,EAAQ,CAC1C,MAAMiB,EAAQ7F,EAAS4E,CAAM,EAC7B,KAAK,MAAQxF,CACf,CACA,eAAgB,CACd,KAAK,2BAA2B,kBAAmB,KAAK,kBAAkB,KAAK,IAAI,CAAC,EACpF,IAAMsE,EAAW,KAAK,kBAAkB,KAAK,IAAI,EACjD,KAAK,oBAAoB,KAAK,QAAS,CACrC,YAAaA,EACb,YAAaA,CACf,CAAC,EACD,KAAK,oBAAoB,KAAK,MAAM,aAAc,CAChD,iBAAkBA,CACpB,CAAC,EACD,KAAK,kBAAkB,CACzB,CACA,mBAAoB,CAClB,KAAK,kBAAkB,CACzB,CACA,mBAAoB,CAClB,IAAMoC,EAAiB,KAAK,IAAI,IAAI,iBAAiB,EACrD,KAAK,sBAAsBA,CAAc,CAC3C,CACF,EACIb,GAA4B,cAAcW,EAAmB,CAC/D,YAAYC,EAAQzG,EAAOY,EAAS4E,EAAQ,CAC1C,MAAMiB,EAAQ7F,EAAS4E,CAAM,EAC7B,KAAK,MAAQxF,CACf,CACA,eAAgB,CACd,IAAMsE,EAAW,KAAK,kBAAkB,KAAK,IAAI,EACjD,KAAK,oBAAoB,KAAK,MAAM,aAAc,CAChD,YAAaA,EACb,cAAeA,EACf,sBAAuBA,EACvB,iBAAkBA,CACpB,CAAC,EACD,KAAK,oBAAoB,KAAK,QAAS,CACrC,YAAaA,EACb,YAAaA,CACf,CAAC,EACD,KAAK,2BAA2B,kBAAmB,KAAK,kBAAkB,KAAK,IAAI,CAAC,EACpF,KAAK,kBAAkB,CACzB,CACA,mBAAoB,CAClB,KAAK,kBAAkB,CACzB,CACA,mBAAoB,CAElB,IAAMyC,EADc,KAAK,MAAM,aAAa,gBAAgB,EACzB,kBAAkB,EAC/CC,EAAuBD,GAAkBA,EAAe,qBAAqB,EAC7EE,EAAkB,KAAK,IAAI,IAAI,iBAAiB,EAChDC,EAAuB,KAAK,MAAM,mBAAmB,qBAAqB,EAC1ER,EAAiBM,GAAwB,CAACE,GAAwBD,EACxE,KAAK,sBAAsBP,CAAc,CAC3C,CACF,EAGIS,IAAyB,IAAM,CACjC,IAAIA,EAAW,MAAMA,EAAS,CAC5B,YAAYnH,EAAO,CAEjB,KAAK,SAAW,KAEhB,KAAK,IAAM,KAEX,KAAK,eAAiB,CAAC,EAIvB,KAAK,UAAY,GAEjB,KAAK,OAAS,KAGd,KAAK,UAAY,KAEjB,KAAK,WAAa,GAGlB,KAAK,WAAamH,GAAS,qBAG3B,KAAK,cAAgB,CAAC,EAEtB,KAAK,gBAAkB,GACvB,KAAK,YAAc,KACnB,KAAK,QAAU,GACf,KAAK,SAAW,GAChB,KAAK,MAAQnH,CACf,CAIA,QAAQoH,EAAM,CACZ,KAAK,cAAcA,EAAM,EAAK,CAChC,CASA,WAAWA,EAAM,CACf,KAAK,cAAcA,EAAM,EAAI,CAC/B,CACA,cAAcA,EAAMC,EAAQ,CAC1B,IAAMC,EAAU,KAAK,KACrB,KAAK,KAAOF,EACZ,KAAK,MAAM,WAAW,cAAc,EACpC,KAAK,uBAAuB,EAC5B,KAAK,mBAAmB,EACxB,KAAK,8BAA8B,EACnC,IAAMxE,EAAQ,KAAK,uBAAuBwE,EAAME,EAASD,CAAM,EAC/D,KAAK,mBAAmB,cAAczE,CAAK,CAC7C,CAIA,wBAAyB,CACnB,KAAK,aACP,KAAK,WAAW,KAAO,KAAK,KAEhC,CACA,uBAAuB2E,EAASD,EAASD,EAAQ,CAC/C,MAAO,CACL,KAAM,cACN,KAAM,KACN,QAAAC,EACA,QAAAC,EACA,OAAAF,CACF,CACF,CACA,mBAAoB,CAClB,OAAI,KAAK,UAAY,MACnBG,EAAW,gHAAgH,EACpH,MAEL,KAAK,YAAc,MACd,KAAO,KAAK,SAEjB,KAAK,YAAc,SACd,KAAO,KAAK,SAEd,KAAK,SAAS,SAAS,CAChC,CACA,kBAAmB,CACjB,IAAMC,EAAU,IAAIN,GAAS,KAAK,KAAK,EACvC,OAAAM,EAAQ,GAAK,KAAK,GAClBA,EAAQ,KAAO,KAAK,KACpBA,EAAQ,SAAW,GACnBA,EAAQ,SAAW,KAAK,SACxBA,EAAQ,MAAQ,KAAK,MACdA,CACT,CACA,aAAaL,EAAMM,EAAI,CACrB,IAAMD,EAAU9C,EAAQ,KAAK,EAAE,EAAI,KAAK,iBAAiB,EAAI,KACvD2C,EAAU,KAAK,KACrB,KAAK,KAAOF,EACZ,KAAK,uBAAuB,EAC5B,KAAK,MAAMM,CAAE,EACb,KAAK,mBAAmB,EACxB,KAAK,MAAM,iBAAiB,cAAc,KAAMD,CAAO,EACvD,IAAM7E,EAAQ,KAAK,uBAAuBwE,EAAME,EAAS,EAAK,EAC9D,KAAK,mBAAmB,cAAc1E,CAAK,CAC7C,CACA,oBAAqB,CACnB,IAAM+E,EAAsB,KAAK,MAAM,IAAI,IAAI,iBAAiB,EAChE,KAAK,iBAAiBA,EAAsBA,EAAoB,IAAI,EAAI,EAAI,CAC9E,CACA,iBAAiBC,EAAQC,EAAyB,CAChD,GAAI,KAAK,aAAeD,EAAQ,CAG9B,GAFA,KAAK,WAAaA,EAClB,KAAK,iBAAiB,mBAAmB,EACrCC,EACF,OAGF,GAD+B,KAAK,MAAM,IAAI,IAAI,sBAAsB,EAC5C,CAC1B,IAAMC,EAAW,KAAK,8BAA8B,EACpD,KAAK,kBAAkB,CACrB,SAAUA,GAAY,GACtB,OAAQ,mBACV,CAAC,EACD,MACF,CACI,KAAK,WAAW,GAAK,CAAC,KAAK,YAC7B,KAAK,kBAAkB,CACrB,SAAU,GACV,OAAQ,mBACV,CAAC,CAEL,CACF,CACA,MAAMJ,EAAI,CACR,IAAMjG,EAAe,KAAK,MAAM,IAAI,iBAAiB,EACrD,GAAIA,EACF,GAAI,KAAK,KAAM,CACb,IAAMsG,EAAa,KAAK,aAAa,EAAI,EACzC,KAAK,GAAKtG,EAAa,CACrB,KAAM,KAAK,KACX,WAAYsG,EAAW,OAAS,EAAIA,EAAa,OACjD,MAAO,KAAK,MACZ,UAAW,KAAK,SAClB,CAAC,EACG,KAAK,GAAG,WAAWZ,GAAS,mBAAmB,GACjDK,EAAW,6BAA6BL,GAAS,mBAAmB,iEAAiE,CAEzI,MACE,KAAK,GAAK,YAGZ,KAAK,GAAKO,CAEd,CACA,aAAaM,EAAc,GAAO,CAChC,IAAMC,EAAO,CAAC,EACVC,EAAU,KAId,IAHIF,IACFE,EAAUA,EAAQ,QAEbA,GAAWA,EAAQ,OAAS,GACjCD,EAAK,KAAKC,EAAQ,GAAG,EACrBA,EAAUA,EAAQ,OAEpB,OAAAD,EAAK,QAAQ,EACNA,CACT,CACA,eAAejH,EAAO,CACpB,MAAI,CAAC2D,EAAQ,KAAK,MAAM,GAAK,CAACA,EAAQ,KAAK,SAAS,EAC3C,GAEF3D,GAAS,KAAK,QAAUA,EAAQ,KAAK,OAAS,KAAK,SAC5D,CACA,kBAAkBmH,EAAKC,EAAOC,EAAW,CACnC,KAAKF,CAAG,IAAMC,IAGlB,KAAKD,CAAG,EAAIC,EACZ,KAAK,iBAAiBC,CAAS,EACjC,CACA,cAAcC,EAAY,CACxB,KAAK,kBAAkB,aAAcA,EAAY,mBAAmB,CACtE,CACA,aAAaC,EAAW,CACtB,KAAK,kBAAkB,YAAaA,EAAW,kBAAkB,CACnE,CACA,cAAcC,EAAY,CACxB,KAAK,kBAAkB,aAAcA,EAAY,mBAAmB,CACtE,CACA,UAAUC,EAAQ,CAChB,KAAK,UAAY,KAAK,OAClB,KAAK,SAAWA,IAGpB,KAAK,OAASA,EACd,KAAK,iBAAiB,YAAY,EAClC,KAAK,aAAaA,IAAW,IAAI,EACnC,CACA,wBAAyB,CACvB,KAAK,UAAY,KACjB,KAAK,UAAU,IAAI,EACnB,KAAK,YAAY,IAAI,CACvB,CACA,aAAaC,EAAW,CACtB,KAAK,kBAAkB,YAAaA,EAAW,kBAAkB,CACnE,CACA,YAAYC,EAAU,CACpB,KAAK,kBAAkB,WAAYA,EAAU,iBAAiB,CAChE,CACA,eAAeC,EAAa,CAC1B,KAAK,kBAAkB,cAAeA,EAAa,qBAAqB,CAC1E,CACA,WAAWC,EAAS,CACd,KAAK,UAAYA,IAGrB,KAAK,QAAUA,EACjB,CACA,WAAY,CACV,OAAO,KAAK,OACd,CACA,oBAAoBC,EAAkB,CACpC,KAAK,kBAAkB,mBAAoBA,EAAkB,yBAAyB,CACxF,CACA,UAAUC,EAAQ,CACZ,KAAK,SAAWA,IAGhB,KAAK,QAAU,CAACA,IAClB,KAAK,SAAW,IAElB,KAAK,OAASA,EACd,KAAK,iBAAiB,eAAe,EACvC,CACA,SAASC,EAAO,CACV,KAAK,QAAUA,IAGf,KAAK,OAAS,CAACA,IACjB,KAAK,SAAW,IAElB,KAAK,MAAQA,EACb,KAAK,kBAAkB,EACvB,KAAK,mBAAmB,EACxB,KAAK,iBAAiB,cAAc,EACtC,CAKA,aAAaC,EAAWC,EAAY,GAAO,CACzC,KAAK,UAAYD,EACjB,KAAK,mBAAqBC,EAC1B,KAAK,iBAAiB,eAAe,CACvC,CACA,iBAAiBC,EAAY3D,EAAQ,CAC9B,KAAK,gBACR,KAAK,cAAgB,CAAC,GAExB,KAAK,cAAcA,EAAO,MAAM,CAAC,EAAI2D,EACjCA,GAAc,OACZ,KAAK,2BAA6B,OACpC,KAAK,0BAA4BC,EAAU,KAAK,iBAAiB,KAAK,IAAI,EAAG,CAAC,GAEhF,KAAK,0BAA0B,EAEnC,CACA,kBAAmB,CACjB,IAAIC,EAAgB,GAChBC,EAAc,GACdC,EAAe,EACbC,EAAc,KAAK,cA2CzB,GA1CIA,GAAe,OAGa,KAAK,MAAM,mBAAmB,qBAAqB,EAC3D,QAAQC,GAAO,CACrC,IAAIN,EAAaK,EAAYC,EAAI,MAAM,CAAC,EACxC,GAAIN,GAAc,KAChB,GAAI,KAAK,MAAM,YAAY,gBAAgB,EAAG,CAC5C,IAAIO,EAAmB,CAAC,EACxB,OAAQD,EAAI,UAAU,EAAG,CACvB,IAAK,OACHC,EAAmB,KAAK,MAAM,mBAAmB,kBAAkB,IAAI,EACvE,MACF,IAAK,QACHA,EAAmB,KAAK,MAAM,mBAAmB,mBAAmB,IAAI,EACxE,MACF,KAAK,KACHA,EAAmB,KAAK,MAAM,sBAAsB,sBAAsB,IAAI,EAC9E,KACJ,CACA,GAAIA,EAAiB,SAASD,CAAG,EAAG,CAClCJ,EAAgB,GAChB,MACF,CACAF,EAAa,EACf,KAAO,CACLE,EAAgB,GAChB,MACF,MAEAC,EAAc,GAEZH,EAAaI,IACfA,EAAeJ,EAEnB,CAAC,EACGE,MAGAC,GAAeC,EAAe,MAChCA,EAAe,KAAK,MAAM,IAAI,oBAAoB,IAAI,EAAE,QAEtDA,GAAgB,KAAK,WACvB,OAEF,KAAK,aAAaA,CAAY,EAC9B,IAAMI,EAAW,KAAK,MAAM,SACxBA,EAAS,6BACXA,EAAS,4BAA4B,CAEzC,CACA,YAAYC,EAAU,CACpB,KAAK,kBAAkB,WAAYA,EAAU,iBAAiB,CAChE,CACA,WAAWC,EAAS,CAClB,KAAK,kBAAkB,UAAWA,EAAS,gBAAgB,CAC7D,CAIA,YAAYC,EAAU/H,EAAGgI,EAAW,CAClC,GAAI,KAAK,WAAaD,EACpB,OAEF,KAAK,SAAWA,EAChB,KAAK,iBAAiB,iBAAiB,EACvC,IAAMlH,EAAQoH,EAAAhI,EAAA,GACT,KAAK,qBAAqB,gBAAgB,GADjC,CAEZ,SAAA8H,EACA,MAAO/H,GAAK,IACd,GACA,KAAK,MAAM,qBAAqB,iBAAiBa,EAAOmH,CAAS,EACjE,KAAK,MAAM,YAAY,aAAa,CAClC,SAAU,CAAC,IAAI,CACjB,CAAC,CACH,CACA,qBAAqBzJ,EAAM,CACzB,OAAO,KAAK,MAAM,IAAI,oBAAoB,CACxC,KAAAA,EACA,KAAM,KACN,KAAM,KAAK,KACX,SAAU,KAAK,SACf,UAAW,KAAK,SAClB,CAAC,CACH,CAWA,aAAa2J,EAAQC,EAAUC,EAAa,CAO1C,IAAM3E,EALA,OAAOyE,GAAW,SACbA,EAEF,KAAK,MAAM,YAAY,OAAOA,CAAM,GAAK,KAAK,MAAM,YAAY,aAAaA,CAAM,EAGtFG,EAAW,KAAK,yBAAyB5E,CAAM,EACrD,GAAI,KAAK,MAAM,IAAI,IAAI,cAAc,EACnC,YAAK,kCAAkCA,EAAQ4E,EAAUF,EAAUC,CAAW,EACvE,GAET,IAAME,EAAe,KAAK,MAAM,aAAa,SAAS,KAAM7E,EAAQ0E,EAAUC,CAAW,EACzF,YAAK,yBAAyB3E,EAAQ0E,EAAUE,CAAQ,EACxD,KAAK,mBAAmB,EACjBC,CACT,CACA,yBAAyB7E,EAAQ,CAC/B,IAAM8E,EAAoB,KAAK,WAAa,KAAK,MAAM,YAAY,YAAY,EACzEC,EAAc,KAAK,OAAS,KAAK,UAAY,CAAC,KAAK,QAAU,CAACD,EAChEE,EAAgB,GACdC,EAAwB,KAAK,MAAM,IAAI,IAAI,eAAe,GAAK,KAAK,MAAM,IAAI,IAAI,oBAAoB,EACxG,OAAOA,GAA0B,WACnCD,EAAgB,CAAC,CAACC,EAGlBD,EAAgB,CAAC,EADY,KAAK,MAAM,IAAI,YAAY,eAAe,GAAK,KAAK,MAAM,IAAI,YAAY,oBAAoB,GACpF,CACrC,KAAM,IACR,CAAC,EAEH,IAAME,EAAyB,KAAK,MAAM,IAAI,IAAI,0BAA0B,EACtEC,EAAgBJ,GAAeC,GAAiB,CAACE,EAEvD,OADc,KAAK,MAAM,aAAa,SAASlF,EAAQ,KAAM,GAAOmF,CAAa,CAEnF,CACA,kCAAkCnF,EAAQ4E,EAAUF,EAAUC,EAAa,CACzE,IAAMvH,EAAQ,KAAK,MAAM,IAAI,oBAAoB,CAC/C,KAAM,kBACN,MAAO,KACP,SAAU,KAAK,SACf,UAAW,KAAK,UAChB,OAAA4C,EACA,OAAQA,EAAO,UAAU,EACzB,KAAM,KAAK,KACX,KAAM,KACN,SAAA4E,EACA,SAAAF,EACA,MAAOA,EACP,OAAQC,CACV,CAAC,EACD,KAAK,MAAM,aAAa,cAAcvH,CAAK,CAC7C,CACA,cAAcqH,EAAQC,EAAU,CAC9B,IAAM1E,EAAS,KAAK,MAAM,YAAY,OAAOyE,CAAM,EAC/CW,EAAS,KAAK,SAAS,IACzB,KAAK,UAAY,CAAC,GAEpB,IAAMC,EAAWrF,EAAO,SAAS,EAC3B4E,EAAW,KAAK,UAAUS,CAAQ,EACpCT,IAAaF,IAGjB,KAAK,UAAUW,CAAQ,EAAIX,EAC3B,KAAK,yBAAyB1E,EAAQ0E,EAAUE,CAAQ,EAC1D,CAEA,WAAWU,EAAY,CACrB,IAAMC,EAAa,KAAK,QAExB,GADA,KAAK,QAAUD,EACX,KAAK,kBAAmB,CAC1B,IAAME,EAAYC,GAAS,CACzB,IAAM7C,EAAQ,KAAK,QAAU,KAAK,QAAQ6C,CAAK,EAAI,OAC7Cb,EAAWW,EAAaA,EAAWE,CAAK,EAAI,OAClD,GAAI7C,IAAUgC,EACZ,OAEF,IAAM5E,EAAS,KAAK,MAAM,YAAY,OAAOyF,CAAK,EAC7CzF,GAGL,KAAK,yBAAyBA,EAAQ4C,EAAOgC,CAAQ,CACvD,EACA,QAAWjC,KAAO,KAAK,QACrB6C,EAAU7C,CAAG,EAEf,QAAWA,KAAO2C,EACZ3C,KAAO,KAAK,SAGhB6C,EAAU7C,CAAG,CAEjB,CACF,CACA,mBAAoB,CAClB,IAAI+B,EAAW,KAAK,OAAS,CAAC,KAAK,QAAU,KAAK,oBAAsB,KAAK,mBAAmB,OAAS,EAEzG,GADe,KAAK,MAAM,IAAI,eAAe,YAAY,EAC7C,CACV,IAAMgB,EAAa,KAAK,MAAM,IAAI,IAAI,UAAU,EAC1CC,EAAc,KAAK,MAAM,IAAI,IAAI,mBAAmB,EAC1DjB,EAAW,CAAC,KAAK,MAAQ,CAAC,KAAK,SAAWgB,EAAa,CAAC,CAACC,GAAeA,EAAY,KAAK,IAAI,EAAI,CAAC,CAAC,KAAK,MAC1G,CACIjB,IAAa,KAAK,gBACpB,KAAK,cAAgB,CAAC,CAACA,EACvB,KAAK,iBAAiB,oBAAoB,EAE9C,CACA,aAAc,CACZ,OAAI,KAAK,eAAiB,MACxB,KAAK,kBAAkB,EAElB,KAAK,aACd,CACA,qBAAsB,CACpB,OAAQ,KAAK,OAASkB,EAAgB,KAAK,kBAAkB,IAAM,EACrE,CACA,yBAAyB5F,EAAQ0E,EAAUE,EAAU,CACnD,IAAMiB,EAAmB,CACvB,KAAM,cACN,KAAM,KACN,OAAA7F,EACA,SAAA0E,EACA,SAAAE,CACF,EACA,KAAK,mBAAmB,cAAciB,CAAgB,CACxD,CAOA,+BAAgC,CAC9B,KAAK,yBAA2B,IAClC,CAKA,cAAe,CACb,OAAI,KAAK,OACA,GAEL,KAAK,MAAM,YAAY,YAAY,EAC9B,KAAK,YAAY,GAAK,CAAC,KAAK,UAE9B,KAAK,YAAY,GAAK,CAAC,CAAC,KAAK,MACtC,CAKA,YAAa,CACX,OAAI,KAAK,OACA,KAAK,QAAQ,WAAW,EAE1B,KAAK,QACd,CAEA,iBAAiBC,EAAU,CACrB,KAAK,oBACP,KAAK,mBAAmB,QAAQC,GAASA,EAAM,iBAAiBD,CAAQ,CAAC,EAE3EA,EAAS,IAAI,CACf,CAEA,+BAAgC,CAC9B,IAAIE,EAAqB,GACrBC,EAAuB,GACvBC,EAAkB,GACtB,GAAI,CAAC,KAAK,oBAAoB,OAC5B,OAAO,KAAK,WAAa,KAAK,SAAW,KAE3C,QAAS5G,EAAI,EAAGA,EAAI,KAAK,mBAAmB,OAAQA,IAAK,CACvD,IAAMyG,EAAQ,KAAK,mBAAmBzG,CAAC,EACnC6G,EAAaJ,EAAM,WAAW,EAClC,GAAI,CAACA,EAAM,WAAY,CACrB,IAAMK,EAAaL,EAAM,8BAA8B,EACvD,GAAIK,IAAe,KACjB,SAEFD,EAAaC,CACf,CACA,OAAQD,EAAY,CAClB,IAAK,GACHH,EAAqB,GACrB,MACF,IAAK,GACHC,EAAuB,GACvB,MACF,QACEC,EAAkB,GAClB,KACJ,CACF,CACA,GAAI,EAAAA,GAAmBF,GAAsBC,GAG7C,OAAID,EACK,GAELC,EACK,GAEJ,KAAK,WAGH,KAAK,SAFH,IAGX,CACA,wBAAwB3D,EAAU,CAChC,KAAK,SAAWA,CAClB,CACA,iBAAiBxH,EAAM,CACrB,IAAMsC,EAAQ,CACZ,KAAAtC,EACA,KAAM,IACR,EACA,KAAK,mBAAmB,cAAcsC,CAAK,CAC7C,CACA,eAAesH,EAAUnI,EAAG8J,EAAS,MAAO,CAC1C,IAAMC,EAAsB,CAAC,KAAK,YAAc5B,EAC1C6B,EAAsB,KAAK,WAAa7B,EAC9C,GAAI4B,GAAuBC,EACzB,MAAO,GAET,KAAK,SAAW7B,EAChB,KAAK,iBAAiB,aAAa,EACnC,IAAM8B,EAAU,KAAK,QACjBA,GAAWA,EAAQ,QAAUA,EAAQ,mBACvCA,EAAQ,iBAAiB,aAAa,EAExC,IAAMpJ,EAAQoH,EAAAhI,EAAA,GACT,KAAK,qBAAqB,aAAa,GAD9B,CAEZ,MAAOD,GAAK,KACZ,OAAA8J,CACF,GACA,YAAK,MAAM,aAAa,cAAcjJ,CAAK,EACpC,EACT,CAOA,YAAYsH,EAAU+B,EAAiB,GAAOJ,EAAS,MAAO,CAC5D,GAAI,OAAOA,GAAW,UAAW,CAC/BhK,EAAU,oNAAoN,EAC9N,MACF,CACA,KAAK,kBAAkB,CACrB,SAAAqI,EACA,eAAA+B,EACA,YAAa,GACb,OAAAJ,CACF,CAAC,CACH,CAEA,kBAAkBjK,EAAQ,CACxB,OAAI,KAAK,WACPC,EAAU,2BAA2B,EAC9B,GAEL,KAAK,KAAO,QACdA,EAAU,+CAA+C,EAClD,GAEF,KAAK,MAAM,iBAAiB,iBAAiBmI,EAAAhI,EAAA,GAC/CJ,GAD+C,CAElD,MAAO,CAAC,KAAK,OAAS,KAAK,QAAU,IAAI,CAC3C,EAAC,CACH,CAMA,aAAc,CACZ,OAAO,KAAK,YAAc,OAAS,KAAK,YAAc,QACxD,CACA,eAAesK,EAAiB,CAC9B,IAAIC,EAAa,KAAK,OACtB,KAAOA,GAAY,CACjB,GAAIA,IAAeD,EACjB,MAAO,GAETC,EAAaA,EAAW,MAC1B,CACA,MAAO,EACT,CAEA,iBAAiBC,EAAWC,EAAc,CACnC,KAAK,oBACR,KAAK,kBAAoB,IAAIC,IAE3B,KAAK,MAAM,mBAAmB,oBAAsB,CAAC,KAAK,gCAC5D,KAAK,kBAAkB,sBAAsB,KAAK,MAAM,kBAAkB,EAC1E,KAAK,8BAAgC,IAAIC,GAA8B,KAAK,MAAM,kBAAkB,GAEtG,IAAMjI,EAAW,KAAK,+BAA+B,KAAK+H,CAAY,GAAKA,EAC3E,KAAK,kBAAkB,iBAAiBD,EAAW9H,CAAQ,CAC7D,CAEA,oBAAoB8H,EAAWC,EAAc,CAC3C,GAAI,CAAC,KAAK,kBACR,OAEF,IAAM/H,EAAW,KAAK,+BAA+B,OAAO+H,CAAY,GAAKA,EAC7E,KAAK,kBAAkB,oBAAoBD,EAAW9H,CAAQ,EAC1D,KAAK,kBAAkB,2BAA2B,IACpD,KAAK,kBAAoB,KAE7B,CACA,cAAe,CACb,KAAK,iBAAiB,YAAY,CACpC,CACA,cAAe,CACb,KAAK,iBAAiB,YAAY,CACpC,CACA,0BAA0BkI,EAAgB,CACxC,IAAIC,EAAiB,KACjBC,EAAc,GACdC,EAAsB,GACtBC,EAAe,KACnB,KAAOF,GAAe,CAACC,GAAqB,CAC1C,IAAME,EAAgBJ,EAAe,OAClB9H,EAAQkI,CAAa,GAAKJ,EAAe,WAEtDI,EAAc,iBAAmBL,IACnCG,EAAsB,GACtBC,EAAeC,GAGjBH,EAAc,GAEhBD,EAAiBI,CACnB,CACA,OAAOF,EAAsBC,EAAe,IAC9C,CAMA,iBAAkB,CAChB,GAAI,KAAK,OACP,MAAO,GAET,IAAME,EAAsB,KAAK,MAAM,IAAI,YAAY,gBAAgB,EACvE,OAAOA,EAAsBA,EAAoB,CAC/C,QAAS,IACX,CAAC,EAAI,EACP,CAKA,UAAW,CACT,GAAI,KAAK,KAAO,KACd,OAEF,IAAMC,EAAM,CAAC,EACT7E,EAAU,KACd,KAAOA,GAAWA,EAAQ,KAAO,MAC/B6E,EAAI,KAAK7E,EAAQ,GAAG,EACpBA,EAAUA,EAAQ,OAEpB,OAAO6E,EAAI,QAAQ,CACrB,CACA,cAAe,CACb,GAAI,KAAK,QACP,OAEF,IAAMC,EAAmC,IAAI,IAAI,CAAC,eAAgB,aAAc,QAAQ,CAAC,EACnFC,EAAa,IAAI9F,GAAS,KAAK,KAAK,EAC1C,OAAO,KAAK,IAAI,EAAE,QAAQgB,GAAO,CAC3B6E,EAAkB,IAAI7E,CAAG,IAG7B8E,EAAW9E,CAAG,EAAI,KAAKA,CAAG,EAC5B,CAAC,EACD8E,EAAW,OAAS,GACpBA,EAAW,UAAU,IAAI,EACzBA,EAAW,YAAY,IAAI,EAC3BA,EAAW,UAAY,KACvBA,EAAW,GAAK,kBAAoB,KAAK,GACzCA,EAAW,QAAU,KACrB,KAAK,QAAUA,CACjB,CAIA,eAAgB,CACT,KAAK,UAGV,KAAK,QAAQ,UAAU,IAAI,EAC3B,KAAK,QAAQ,YAAY,IAAI,EAC7B,KAAK,QAAU,OACjB,CACF,EACA,OAAA9F,EAAS,oBAAsB,aAC/BA,EAAS,qBAAuB,KAChCA,EAAS,wBAA0B,KACnCA,EAAS,mBAAqB,EACvBA,CACT,GAAG,EACC+F,GAAU/F,GAGVgG,GAAgB,cAAcpN,CAAS,CACzC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,gBAEhB,KAAK,+BAAiC,CAAC,CACzC,CACA,UAAUC,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,oBAAsBA,EAAM,mBACnC,CACA,eAAgB,CACd,KAAK,yBAAyB,CAC5B,mBAAoB,KAAK,8BAA8B,KAAK,IAAI,EAChE,mBAAoB,KAAK,8BAA8B,KAAK,IAAI,EAChE,uBAAwB,KAAK,8BAA8B,KAAK,IAAI,EACpE,iBAAkB,KAAK,4BAA4B,KAAK,IAAI,EAC5D,cAAe,KAAK,4BAA4B,KAAK,IAAI,EACzD,6BAA8B,CAAC,CAC7B,QAAAoN,CACF,IAAM,KAAK,+BAA+BA,CAAO,EACjD,kBAAmB,KAAK,8BAA8B,KAAK,IAAI,CACjE,CAAC,EACD,KAAK,sBAAwB,KAAK,gCAAgC,EAClE,KAAK,4BAA4B,CAAC,0BAA2B,wBAAwB,EAAG,IAAM,CAC5F,KAAK,gBAAgB,CACnB,OAAQ,KACV,CAAC,CACH,CAAC,EACD,KAAK,mBAAmB,EACxB,KAAK,2BAA2B,oBAAqB,IAAM,CACzD,KAAK,mBAAmB,EACxB,KAAK,gBAAgB,CACvB,CAAC,EACD,KAAK,2BAA2B,sBAAuBxK,GAAS,KAAK,uBAAuBA,EAAM,YAAY,CAAC,EAC3G,KAAK,oBACP,KAAK,oBAAoB,KAAK,mBAAoB,CAChD,mBAAoB,IAAM,KAAK,gBAAgB,CAC7C,OAAQ,aACV,CAAC,CACH,CAAC,CAEL,CACA,iCAAkC,CAChC,IAAMyK,EAAkB,KAAK,IAAI,YAAY,yBAAyB,EACtE,OAAI,OAAOA,GAAoB,WACtBA,EAAgB,CAAC,CAAC,EAEpB,EACT,CACA,uBAAuB1L,EAAM,CAC3B,IAAM2L,EAAiB,KAAK,IAAI,IAAI,wBAAwB,EAC5D,OAAI,OAAOA,GAAmB,WACrBA,EAAe3L,CAAI,EAErB,EACT,CACA,eAAe4L,EAAO1B,EAAS,MAAO,CACpC,GAAI,KAAK,wBAAwB,EAAG,CAClC,KAAK,oBAAoB,EACzB,MACF,CACA,KAAK,qBAAqB,eAAe0B,EAAO1B,CAAM,CACxD,CACA,gBAAiB,CACf,OAAO,KAAK,qBAAqB,eAAe,GAAK,CAAC,CACxD,CACA,uBAAwB,CACtB,MAAO,CAAC,CAAC,KAAK,qBAAqB,sBAAsB,CAC3D,CACA,0BAA2B,CACzB,MAAO,CAAC,CAAC,KAAK,qBAAqB,yBAAyB,CAC9D,CACA,yBAA0B,CACxB,OAAO,KAAK,qBACd,CACA,sBAAuB,CACrB,OAAO,KAAK,sBAAsB,GAAK,KAAK,qBAAqB,GAAK,KAAK,wBAAwB,GAAK,KAAK,wBAAwB,CACvI,CACA,yBAA0B,CACxB,OAAO,KAAK,wBAAwB,GAAK,KAAK,sBAAsB,gBAAgB,CACtF,CACA,+BAA+BuB,EAAS,CAClCA,EACE,KAAK,qBAAqB,qBAAqB,GACjD,KAAK,gBAAgB,CACnB,OAAQ,gBACV,CAAC,EAGC,KAAK,uBAAuB,gBAAgB,IAC9C,KAAK,sBAAsB,SAAS,IAAI,EACxC,KAAK,gBAAgB,CACnB,OAAQ,gBACV,CAAC,EAGP,CACA,yBAA0B,CACxB,MAAO,CAAC,CAAC,KAAK,uBAAuB,UAAU,CACjD,CACA,8BAA+B,CAC7B,OAAO,KAAK,wBAAwB,GAAK,KAAK,sBAAsB,eAAe,CACrF,CACA,oBAAqB,CACnB,OAAO,KAAK,qBAAqB,GAAK,KAAK,sBAAsB,GAAK,KAAK,yBAAyB,GAAK,KAAK,wBAAwB,GAAK,KAAK,wBAAwB,CAC1K,CACA,uBAAwB,CACtB,KAAK,oBAAoB,sBAAsB,CACjD,CACA,+BAAgC,CACP,KAAK,IAAI,qBAAqB,GAEnD,KAAK,gBAAgB,CAEzB,CACA,gBAAgBxL,EAAS,CAAC,EAAG,CAC3B,GAAM,CACJ,OAAAiK,EACA,0BAAA2B,EACA,QAAAC,EAAU,CAAC,CACb,EAAI7L,EACJ,KAAK,sBAAwB,KAAK,gCAAgC,GACjE,KAAK,oBAAsB,KAAK,oBAAoB,0BAA0BA,CAAM,EAAI8L,GAAU,QAAQ,GAAG,KAAK,IAAM,CACvH,IAAMC,EAAqB,CACzB,OAAA9B,EACA,KAAM,gBACN,QAAA4B,CACF,EACID,GACFI,GAAWD,EAAoBH,CAAyB,EAE1D,KAAK,aAAa,cAAcG,CAAkB,EAClD,KAAK,qBAAqB,yBAAyB,CACrD,CAAC,CACH,CACA,yCAA0C,CACxC,MAAO,CAAC,CAAC,KAAK,qBAAqB,wCAAwC,CAC7E,CACA,sBAAuB,CACrB,MAAO,CAAC,CAAC,KAAK,oBAAoB,qBAAqB,CACzD,CACA,oBAAqB,CACnB,KAAK,aAAe,CAAC,CAAC,KAAK,IAAI,qBAAqB,CACtD,CACA,+BAAgC,CAC9B,OAAO,KAAK,qBAAqB,GAAK,KAAK,+BAA+B,CAC5E,CACA,kCAAmC,CACjC,OAAO,KAAK,qBAAqB,GAAK,CAAC,KAAK,+BAA+B,CAC7E,CACA,gCAAiC,CAC/B,OAAQ,KAAK,cAAgB,KAAK,YAAY,YAAY,IAAM,CAAC,KAAK,IAAI,IAAI,kCAAkC,CAClH,CACA,wBAAwBE,EAAclM,EAAM,CAC1C,OAAO,KAAK,kBAAkB,CAC5B,QAASA,EACT,qBAAsBkM,CACxB,CAAC,CACH,CACA,4BAA4BjM,EAAQ,CAIlC,MAHI,OAAK,8BAA8B,GAAK,CAAC,KAAK,mBAAmB,uBAAuBA,EAAO,OAAO,GAGtG,KAAK,yBAAyB,GAAK,CAAC,KAAK,oBAAoB,uBAAuBA,EAAO,QAASA,EAAO,oBAAoB,EAIrI,CACA,kBAAkBA,EAAQ,CAUxB,MATI,OAAK,iCAAiC,GAAK,CAAC,KAAK,mBAAmB,uBAAuBA,EAAO,OAAO,GAGzG,KAAK,wBAAwB,GAAK,CAAC,KAAK,uBAAuBA,EAAO,OAAO,GAG7E,KAAK,sBAAsB,GAAK,CAAC,KAAK,oBAAoB,oBAAoBA,EAAO,QAASA,EAAO,oBAAoB,GAGzH,KAAK,wBAAwB,GAAK,CAAC,KAAK,sBAAsB,eAAeA,EAAO,OAAO,EAIjG,CACA,eAAe4D,EAAQ,CACrB,MAAO,CAAC,CAAC,KAAK,qBAAqB,eAAeA,CAAM,CAC1D,CACA,yBAAyBA,EAAQ,CAC/B,OAAO,KAAK,qBAAqB,yBAAyBA,CAAM,GAAK,IACvE,CACA,yBAAyBA,EAAQ,CAC/B,OAAO,KAAK,oBAAoB,yBAAyBA,CAAM,CACjE,CACA,mBAAmBA,EAAQU,EAAQ,CACjC,OAAO,KAAK,oBAAoB,mBAAmBV,EAAQU,CAAM,CACnE,CAEA,gBAAgBV,EAAQ,CACtB,OAAI,KAAK,wBAAwB,EACxB,GAEF,CAAC,CAAC,KAAK,qBAAqB,gBAAgBA,CAAM,CAC3D,CACA,6BAA6BA,EAAQsI,EAAkB,CACrD,OAAO,KAAK,qBAAqB,6BAA6BtI,EAAQsI,CAAgB,CACxF,CACA,oCAAoCtI,EAAQ,CAC1C,OAAO,KAAK,qBAAqB,oCAAoCA,CAAM,CAC7E,CAEA,cAAcA,EAAQqG,EAAS,MAAO,CACpC,KAAK,qBAAqB,cAAcrG,EAAQqG,CAAM,CACxD,CACA,wBAAwBkC,EAAgBC,EAAgB,CACtD,MAAO,CAAC,CAAC,KAAK,qBAAqB,wBAAwBD,EAAgBC,CAAc,CAC3F,CACA,wBAAyB,CACvB,OAAO,KAAK,wBAAwB,EAAI,KAAK,sBAAsB,SAAS,EAAI,IAClF,CACA,uBAAuBC,EAAY,CACjC,GAAK,KAAK,wBAAwB,EAGlC,IAAI,KAAK,iBAAiB,mBAAmB,EAAG,CAC9C,KAAK,+BAA+B,KAAKA,CAAU,EACnD,MACF,CACA,KAAK,sBAAsB,SAASA,GAAc,IAAI,EACtD,KAAK,gBAAgB,CACnB,OAAQ,gBACV,CAAC,EACH,CACA,4BAA4BC,EAAMrC,EAAQ,CACnC,KAAK,wBAAwB,GAGlC,KAAK,sBAAsB,QAAQ,EAAE,oBAAoBA,EAAQqC,CAAI,CACvE,CACA,6BAA8B,CACvB,KAAK,wBAAwB,GAG9B,KAAK,sBAAsB,eAAe,GAC5C,KAAK,gBAAgB,CACnB,OAAQ,gBACV,CAAC,CAEL,CACA,oBAAqB,CACnB,OAAI,KAAK,wBAAwB,EACxB,GAEF,CAAC,CAAC,KAAK,qBAAqB,mBAAmB,CACxD,CACA,kBAAkB/F,EAAKmD,EAAU,CAC/B,GAAI,KAAK,wBAAwB,EAAG,CAClC,KAAK,oBAAoB,EACzB,MACF,CACA,OAAO,KAAK,qBAAqB,kBAAkBnD,EAAKmD,CAAQ,CAClE,CACA,wBAAwBnD,EAAK,CAC3B,OAAI,KAAK,wBAAwB,GAC/B,KAAK,oBAAoB,EAClB,QAAQ,QAAQ,MAAM,GAExB,KAAK,qBAAqB,wBAAwBA,CAAG,GAAK,QAAQ,QAAQ,MAAM,CACzF,CACA,qBAAsB,CACpBtG,EAAU,+EAA+E,CAC3F,CACA,8BAA8BsM,EAAqB,CACjD,KAAK,uBAAuB,QAAQ,EAAE,gBAAgBA,CAAmB,CAC3E,CACA,mBAAoB,CAClB,OAAO,KAAK,6BAA6B,EAAI,EAAI,CACnD,CACA,iBAAkB,CAChB,OAAO,KAAK,6BAA6B,EAAI,KAAK,sBAAsB,QAAQ,EAAE,gBAAgB,EAAI,CACxG,CACA,+BAAgC,CAC9B,KAAK,+BAA+B,QAAQZ,GAAS,KAAK,uBAAuBA,CAAK,CAAC,EACvF,KAAK,+BAAiC,CAAC,CACzC,CACA,qBAAqBpF,EAAK,CACxB,OAAO,KAAK,qBAAqB,qBAAqBA,CAAG,CAC3D,CACA,qBAAqBA,EAAKoF,EAAO,CAC/B,OAAI,KAAK,wBAAwB,GAC/B,KAAK,oBAAoB,EAClB,QAAQ,QAAQ,GAElB,KAAK,qBAAqB,qBAAqBpF,EAAKoF,CAAK,GAAK,QAAQ,QAAQ,CACvF,CACF,EAGIa,GAAoB,cAAc9I,CAAU,CAC9C,YAAYE,EAAQqG,EAAQ,CAC1B,MACA,+BAA+B,EAC/B,KAAK,OAASrG,EACd,KAAK,OAASqG,EACd,KAAK,cAAgB,IACvB,CACA,UAAU7L,EAAO,CACf,KAAK,cAAgBA,EAAM,cAC3B,KAAK,YAAcA,EAAM,WAC3B,CACA,eAAgB,CACd,KAAK,aAAa,EAAI,EACtB,KAAK,yBAAyB,CAC5B,gBAAiB,KAAK,kBAAkB,KAAK,IAAI,CACnD,CAAC,CACH,CACA,WAAY,CACV,MAAO,CAAC,CAAC,KAAK,aAChB,CACA,WAAY,CACV,OAAO,KAAK,eAAe,eAAiB,IAC9C,CACA,WAAY,CACV,OAAO,KAAK,eAAe,eAAe,KAAK,IAAM,CAAC,CAAC,GAAK0N,GAAU,QAAQ,CAChF,CACA,iBAAiB9L,EAAQ,CACvB,KAAK,eAAe,eAAe,KAAKyM,GAAU,CAChDA,GAAQ,mBAAmBzM,CAAM,CACnC,CAAC,CACH,CACA,kBAAmB,CACjB,KAAK,eAAe,eAAe,KAAKyM,GAAU,CAChDA,GAAQ,mBAAmB,CAC7B,CAAC,CACH,CACA,aAAaC,EAAM,CACjB,GAAM,CACJ,OAAA9I,EACA,OAAAqG,CACF,EAAI,KACJ,KAAK,cAAgB,KAAK,eAAe,yBAAyBrG,CAAM,GAAK,KACxE,KAAK,eAAe,eAGzB,KAAK,cAAc,cAAc,KAAK6I,GAAU,CAC9C,IAAME,EAAgBF,EAAO,OAAO,EAKpC,GAJK1J,EAAQ4J,CAAa,GACxB1M,EAAU,sCAAsC0M,CAAa,+BAA+B,EAE9F,KAAK,YAAYA,CAAa,EAC1BD,EAAM,CACR,IAAM1L,EAAQ,CACZ,KAAM,eACN,OAAA4C,EACA,OAAAqG,EACA,KAAM,KAAK,OAAO,CACpB,EACA,KAAK,aAAa,cAAcjJ,CAAK,CACvC,CACF,CAAC,CACH,CACA,kBAAkBA,EAAO,EAClBA,EAAM,SAAW,OAASA,EAAM,SAAW,kBAAoBA,EAAM,OAAO,MAAM,IAAM,KAAK,OAAO,MAAM,GAAK,KAAK,YAAY,aAAa,KAAK,MAAM,IAC3J4L,EAAc,KAAK,OAAO,CAAC,EAC3B,KAAK,aAAa,EAEtB,CACA,SAAU,CACR,KAAK,cAAgB,KACrB,MAAM,QAAQ,CAChB,CACF,EAGIC,GAAyB,qBACzBC,GACJ,eAAeD,EAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAUjCE,GAAsB,cAAc5O,CAAS,CAC/C,YAAYgD,EAAS6L,EAAQ,CAC3B,MAAM,EACN,KAAK,QAAU7L,EACf,KAAK,kBAAoB,CACvB,EAAG,EACH,EAAG,CACL,EACA,KAAK,SAAW,CACd,EAAG,EACH,EAAG,CACL,EACA,KAAK,SAAW,CACd,MAAO,GACP,OAAQ,EACV,EACA,KAAK,WAAa,GAClB,KAAK,cAAgB,GACrB,KAAK,gBAAkB,CAAC,EACxB,KAAK,WAAa,KAClB,KAAK,WAAa,GAClB,KAAK,SAAW,GAChB,KAAK,UAAY,CAAC,EAClB,KAAK,QAAU,GACf,KAAK,eAAiB,KACtB,KAAK,OAAS,OAAO,OAAO,CAAC,EAAG,CAC9B,MAAO,EACT,EAAG6L,CAAM,CACX,CACA,UAAU5O,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,YAAcA,EAAM,WAC3B,CACA,QAAS,CACP,GAAM,CACJ,aAAA6O,EACA,YAAAC,CACF,EAAI,KAAK,aACHC,EAAID,EAAc,EAAI,KAAK,SAAS,EAAI,EACxCE,EAAIH,EAAe,EAAI,KAAK,UAAU,EAAI,EAChD,KAAK,cAAcE,EAAGC,CAAC,CACzB,CACA,oBAAqB,CACnB,GAAI,KAAK,WACP,OAEF,GAAM,CACJ,SAAAC,EACA,+BAAAC,EACA,SAAAC,EACA,MAAAC,EACA,UAAAC,EACA,OAAAC,EACA,EAAAP,EACA,EAAAC,CACF,EAAI,KAAK,OACJ,KAAK,cACR,KAAK,gBAAgB,EAEvB,IAAIO,EAAoB,EACpBC,EAAmB,EACjBC,EAAmBC,GAAW,KAAK,OAAO,EAChD,GAAID,EAAkB,CACpB,IAAME,EAAa,KAAK,oBAAoB,EACtCC,EAA6B,OAAO,iBAAiBD,CAAU,EACrE,GAAIC,EAA2B,UAAY,KAAM,CAC/C,IAAMC,EAAeF,EAAW,YAAc,KAAK,QAAQ,YAC3DH,EAAmB,SAASI,EAA2B,SAAU,EAAE,EAAIC,CACzE,CACA,GAAID,EAA2B,WAAa,KAAM,CAChD,IAAME,EAAgBH,EAAW,aAAe,KAAK,QAAQ,aAC7DJ,EAAoB,SAASK,EAA2B,UAAW,EAAE,EAAIE,CAC3E,CACF,CAYA,GAXA,KAAK,UAAYT,GAAaE,EAC9B,KAAK,SAAWJ,GAAYK,EACxBJ,GACF,KAAK,SAASA,CAAK,EAEjBE,GACF,KAAK,UAAUA,CAAM,GAEnB,CAACF,GAAS,CAACE,IACb,KAAK,YAAY,EAEfL,EACF,KAAK,OAAO,UACHF,GAAKC,EACd,KAAK,cAAcD,EAAGC,CAAC,UACdS,GAAoBP,EAAgC,CAC7D,IAAIS,EAAa,KAAK,WAClBI,EAA+B,GAKnC,GAJKJ,IACHA,EAAa,KAAK,oBAAoB,EACtCI,EAA+B,IAE7BJ,EAAY,CACd,IAAMK,EAAM,WAAWL,EAAW,MAAM,GAAG,EACrCM,EAAO,WAAWN,EAAW,MAAM,IAAI,EACzCI,EACF,KAAK,cAAc,MAAME,CAAI,EAAI,EAAIA,EAAM,MAAMD,CAAG,EAAI,EAAIA,CAAG,EAE/D,KAAK,YAAYC,EAAMD,CAAG,CAE9B,CACF,CACA,KAAK,WAAa,CAAC,CAAC,KAAK,YAC3B,CACA,cAAe,CACb,OAAO,KAAK,UACd,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,WAAWE,EAASC,EAAa,CAC/B,GAAI,CAAC,KAAK,OAAO,OAASD,IAAY,KAAK,QACzC,OAEF,KAAK,QAAUA,EACf,IAAMtO,EAAS,KAAK,yBAA2B,CAC7C,SAAUuO,EACV,YAAa,KAAK,YAAY,KAAK,IAAI,EACvC,WAAY,KAAK,OAAO,KAAK,IAAI,EACjC,WAAY,KAAK,UAAU,KAAK,IAAI,CACtC,EACID,GACF,KAAK,YAAY,cAActO,CAAM,EACrC,KAAK,wBAA0BA,IAE/B,KAAK,YAAY,iBAAiBA,CAAM,EACxC,KAAK,wBAA0B,OAEnC,CACA,aAAawO,EAAW,CAOtB,GANA,KAAK,qBAAqB,EACtBA,EACF,KAAK,YAAY,EAEjB,KAAK,eAAe,EAElB,OAAOA,GAAc,UAAW,CAClC,GAAIA,IAAc,GAChB,OAEFA,EAAY,CACV,QAASA,EACT,IAAKA,EACL,SAAUA,EACV,MAAOA,EACP,YAAaA,EACb,OAAQA,EACR,WAAYA,EACZ,KAAMA,CACR,CACF,CACA,OAAO,KAAKA,CAAS,EAAE,QAAQC,GAAQ,CAErC,IAAMC,EAAkB,CAAC,CADEF,EACkBC,CAAI,EAC3CE,EAAY,KAAK,kBAAkBF,CAAI,EACvCzO,EAAS,CACb,gBAAiB,EACjB,SAAU2O,EACV,YAAaxO,GAAK,KAAK,cAAcA,EAAGsO,CAAI,EAC5C,WAAY,KAAK,SAAS,KAAK,IAAI,EACnC,WAAYtO,GAAK,KAAK,YAAYA,EAAGsO,CAAI,CAC3C,GACIC,GAAmB,CAAC,KAAK,QAAQ,GAAK,CAACA,KACrCA,GACF,KAAK,YAAY,cAAc1O,CAAM,EACrC,KAAK,gBAAgB,KAAKA,CAAM,EAChC2O,EAAU,MAAM,cAAgB,OAEhCA,EAAU,MAAM,cAAgB,OAElC,KAAK,UAAUF,CAAI,EAAIC,EAE3B,CAAC,CACH,CACA,kBAAmB,CACjB,KAAK,QAAQ,MAAM,eAAe,QAAQ,EAC1C,KAAK,QAAQ,MAAM,eAAe,OAAO,EACzC,KAAK,QAAQ,MAAM,eAAe,MAAM,CAC1C,CACA,iBAAkB,CAChB,KAAK,QAAQ,MAAM,KAAO,WAC1B,GAAM,CACJ,OAAAhB,EACA,MAAAF,CACF,EAAI,KAAK,SACLA,IAAU,KACZ,KAAK,QAAQ,MAAM,MAAQ,GAAGA,CAAK,MAEjCE,IAAW,KACb,KAAK,QAAQ,MAAM,OAAS,GAAGA,CAAM,KAEzC,CACA,WAAY,CACV,OAAO,KAAK,QAAQ,YACtB,CACA,UAAUA,EAAQ,CAChB,GAAM,CACJ,MAAAkB,CACF,EAAI,KAAK,OACHrK,EAAO,KAAK,QACdsK,EAAY,GAChB,GAAI,OAAOnB,GAAW,UAAYA,EAAO,QAAQ,GAAG,IAAM,GACxDoB,GAAgBvK,EAAMmJ,CAAM,EAC5BA,EAASqB,GAAmBxK,CAAI,EAChCsK,EAAY,WAEZnB,EAAS,KAAK,IAAI,KAAK,UAAWA,CAAM,EACpC,KAAK,WAAY,CACnB,IAAMsB,EAAkB,KAAK,mBAAmB,EAC5CA,GAAmBtB,EAASsB,IAC9BtB,EAASsB,EAEb,CAEE,KAAK,UAAU,IAAMtB,IAGpBmB,GASHtK,EAAK,MAAM,UAAY,QACvBA,EAAK,MAAM,UAAY,SATnBqK,EACFE,GAAgBvK,EAAMmJ,CAAM,GAE5BnJ,EAAK,MAAM,OAAS,GAAGmJ,CAAM,KAC7BnJ,EAAK,MAAM,KAAO,WAClB,KAAK,SAAS,OAAS,OAAOmJ,GAAW,SAAWA,EAAS,WAAWA,CAAM,GAMpF,CACA,oBAAqB,CACnB,GAAM,CACJ,MAAAkB,EACA,+BAAAtB,CACF,EAAI,KAAK,OACJ,KAAK,YACR,KAAK,mBAAmB,EAE1B,GAAM,CACJ,aAAAL,CACF,EAAI,KAAK,aACT,GAAI,CAACA,EACH,OAAO,KAET,IAAMgC,EAAS,KAAK,QAAQ,sBAAsB,EAC5CC,EAAmB,KAAK,aAAa,sBAAsB,EAC3DC,EAAYP,EAAQ,KAAK,SAAS,EAAIK,EAAO,IAC7CG,EAAYR,EAAQ,EAAIM,EAAiB,IAC3CG,EAAmB,EACvB,GAAI/B,EAAgC,CAClC,IAAMgC,EAAW,KAAK,QAAQ,cAC9B,GAAIA,EAAU,CACZ,GAAM,CACJ,OAAAC,CACF,EAAID,EAAS,sBAAsB,EACnCD,EAAmBE,EAASN,EAAO,MACrC,CACF,CAEA,OADwBhC,EAAemC,EAAYD,EAAYE,CAEjE,CACA,UAAW,CACT,OAAO,KAAK,QAAQ,WACtB,CACA,SAAS7B,EAAO,CACd,IAAMjJ,EAAO,KAAK,QACZ,CACJ,MAAAqK,CACF,EAAI,KAAK,OACLC,EAAY,GAChB,GAAI,OAAOrB,GAAU,UAAYA,EAAM,QAAQ,GAAG,IAAM,GACtDgC,GAAejL,EAAMiJ,CAAK,EAC1BA,EAAQiC,GAAkBlL,CAAI,EAC9BsK,EAAY,WACH,KAAK,WAAY,CAC1BrB,EAAQ,KAAK,IAAI,KAAK,SAAUA,CAAK,EACrC,GAAM,CACJ,YAAAN,CACF,EAAI,KAAK,aACHwC,EAAYd,EAAQ,KAAK,SAAS,EAAI,KAAK,QAAQ,sBAAsB,EAAE,KAC7E1B,GAAeM,EAAQkC,EAAYxC,IACrCM,EAAQN,EAAcwC,EAE1B,CACI,KAAK,SAAS,IAAMlC,IAGnBqB,GASHtK,EAAK,MAAM,SAAW,QACtBA,EAAK,MAAM,SAAW,SATlB,KAAK,OAAO,MACdiL,GAAejL,EAAMiJ,CAAK,GAE1BjJ,EAAK,MAAM,MAAQ,GAAGiJ,CAAK,KAC3BjJ,EAAK,MAAM,KAAO,SAClB,KAAK,SAAS,MAAQ,OAAOiJ,GAAU,SAAWA,EAAQ,WAAWA,CAAK,GAMhF,CACA,cAAcL,EAAI,EAAGC,EAAI,EAAG,CAC1B,GAAM,CACJ,+BAAAE,CACF,EAAI,KAAK,OACHqC,EAASrC,EAAiC,KAAK,WAAa,KAAK,QAClEqC,IAGL,KAAK,aAAa,cAAc,CAC9B,OAAAA,EACA,iBAAkB,GAClB,aAAc,KAAK,SAAW,KAAK,YAAY,EAC/C,eAAgB,KAAO,CACrB,EAAAxC,EACA,EAAAC,CACF,EACF,CAAC,EACD,KAAK,YAAY,WAAWuC,EAAO,MAAM,IAAI,EAAG,WAAWA,EAAO,MAAM,GAAG,CAAC,EAC9E,CACA,+BAA+BC,EAAW,CACxC,GAAI,CAAC,KAAK,OAAO,+BACf,OAEF,IAAMC,EAA0B,IAAM,CACpC,IAAMb,EAAkB,KAAK,mBAAmB,EAChD,KAAK,QAAQ,MAAM,YAAY,aAAc,GAAGA,CAAe,IAAI,CACrE,EACIY,EACF,KAAK,yBAA2B,KAAK,sBAAsB,cAAc,KAAK,aAAa,eAAe,EAAGC,CAAuB,GAEpI,KAAK,QAAQ,MAAM,eAAe,YAAY,EAC1C,KAAK,2BACP,KAAK,yBAAyB,EAC9B,KAAK,yBAA2B,QAGtC,CACA,YAAY1C,EAAGC,EAAG,CAChB,KAAK,SAAS,EAAID,EAClB,KAAK,SAAS,EAAIC,CACpB,CACA,wBAAwBD,EAAGC,EAAG,CAC5B,KAAK,kBAAoB,CACvB,EAAAD,EACA,EAAAC,CACF,CACF,CACA,uBAAuBpN,EAAQ,CAC7B,GAAM,CACJ,EAAAG,EACA,OAAA2P,EACA,MAAAC,EACA,eAAAC,EACA,UAAAC,CACF,EAAIjQ,EACEkQ,EAAQ/P,EAAE,QAAU,KAAK,kBAAkB,EAC3CgQ,EAAQhQ,EAAE,QAAU,KAAK,kBAAkB,EAC3CiQ,EAAY,KAAK,YAAYjQ,EAAG,CAAC,CAAC2P,EAAQ,CAAC,CAACE,EAAgBE,CAAK,EAAI,EAAIA,EACzEG,EAAY,KAAK,YAAYlQ,EAAG,CAAC,CAAC4P,EAAOE,EAAWE,CAAK,EAAI,EAAIA,EACvE,MAAO,CACL,UAAAC,EACA,UAAAC,CACF,CACF,CACA,YAAY,EAAGP,EAAQE,EAAgBM,EAAM,CAC3C,IAAMrB,EAAS,KAAK,QAAQ,sBAAsB,EAC5CsB,EAAa,KAAK,aAAa,sBAAsB,EACrDC,EAAiB,KAAK,WAAW,sBAAsB,EACvDd,EAAY,KAAK,OAAO,MAAQ,KAAK,SAAS,EAAIT,EAAO,KAC3DwB,EAAQf,GAAa,GAAKa,EAAW,MAAQ,EAAE,SAAWA,EAAW,OAAS,EAAE,SAAWA,EAAW,OAASC,EAAe,MAClI,OAAIC,EACK,IAELX,EACFW,EAGAH,EAAO,GAAK,EAAE,QAAUZ,EAAYa,EAAW,MAG/CD,EAAO,GAAK,EAAE,QAAUZ,EAAYa,EAAW,KAE3CP,EACFS,EAAQH,EAAO,GAAK,EAAE,QAAUE,EAAe,OAASF,EAAO,GAAK,EAAE,QAAUZ,EAAYa,EAAW,KAEvGE,EAIAH,EAAO,GAAK,EAAE,QAAUE,EAAe,OAGvCF,EAAO,GAAK,EAAE,QAAUE,EAAe,MAGpCC,EACT,CACA,YAAY,EAAGV,EAAOE,EAAY,EAAGK,EAAM,CACzC,IAAMrB,EAAS,KAAK,QAAQ,sBAAsB,EAC5CsB,EAAa,KAAK,aAAa,sBAAsB,EACrDC,EAAiB,KAAK,WAAW,sBAAsB,EACvDrB,EAAY,KAAK,OAAO,MAAQ,KAAK,SAAS,EAAIF,EAAO,IAC3DyB,EAAQvB,GAAa,GAAKoB,EAAW,KAAO,EAAE,SAAWA,EAAW,QAAU,EAAE,SAAWA,EAAW,QAAUC,EAAe,OACnI,OAAIE,EACK,IAELX,EACFW,EAIAJ,EAAO,GAAK,EAAE,QAAUnB,EAAYoB,EAAW,IAAMN,GAGrDK,EAAO,GAAK,EAAE,QAAUnB,EAAYoB,EAAW,IAE/CG,EAGAJ,EAAO,GAAK,EAAE,QAAUE,EAAe,QAGvCF,EAAO,GAAK,EAAE,QAAUE,EAAe,OAElCE,EACT,CACA,iBAAkB,CAChB,IAAMnM,EAAO,KAAK,QAClB,KAAK,WAAa,CAChB,QAAS,CACP,QAASA,EAAK,cAAc,4BAA4B,CAC1D,EACA,IAAK,CACH,QAASA,EAAK,cAAc,wBAAwB,CACtD,EACA,SAAU,CACR,QAASA,EAAK,cAAc,6BAA6B,CAC3D,EACA,MAAO,CACL,QAASA,EAAK,cAAc,0BAA0B,CACxD,EACA,YAAa,CACX,QAASA,EAAK,cAAc,gCAAgC,CAC9D,EACA,OAAQ,CACN,QAASA,EAAK,cAAc,2BAA2B,CACzD,EACA,WAAY,CACV,QAASA,EAAK,cAAc,+BAA+B,CAC7D,EACA,KAAM,CACJ,QAASA,EAAK,cAAc,yBAAyB,CACvD,CACF,CACF,CACA,aAAc,CACZ,GAAI,KAAK,cACP,OAEF,IAAMA,EAAO,KAAK,QAClB,GAAI,CAACA,EACH,OAGF,IAAMoM,EADS,IAAI,UAAU,EACL,gBAAgB7D,GAAiB,WAAW,EAAE,KACtEvI,EAAK,YAAYoM,EAAS,UAAU,EACpC,KAAK,gBAAgB,EACrB,KAAK,cAAgB,EACvB,CACA,gBAAiB,CACf,KAAK,WAAa,OAClB,IAAMhC,EAAY,KAAK,QAAQ,cAAc,IAAI9B,EAAsB,EAAE,EACrE8B,GACF,KAAK,QAAQ,YAAYA,CAAS,EAEpC,KAAK,cAAgB,EACvB,CACA,kBAAkBF,EAAM,CACtB,OAAO,KAAK,WAAWA,CAAI,EAAE,OAC/B,CACA,cAAc,EAAGA,EAAM,CACrB,KAAK,WAAa,KAAK,oBAAoB,EACtC,KAAK,YACR,KAAK,mBAAmB,EAE1B,KAAK,eAAiB,CACpB,MAAO,CAAC,CAACA,EAAK,MAAM,MAAM,EAC1B,QAAS,CAAC,CAACA,EAAK,MAAM,QAAQ,EAC9B,SAAU,CAAC,CAACA,EAAK,MAAM,SAAS,EAChC,OAAQ,CAAC,CAACA,EAAK,MAAM,OAAO,CAC9B,EACA,KAAK,QAAQ,UAAU,IAAI,aAAa,EACxC,KAAK,WAAWA,CAAI,EAAE,QAAQ,UAAU,IAAI,WAAW,EACvD,GAAM,CACJ,MAAAG,EACA,+BAAAtB,CACF,EAAI,KAAK,OACL,CAACsB,GAAS,CAACtB,GACb,KAAK,oBAAoB,KAAK,eAAe,UAAY,KAAK,eAAe,KAAK,EAEpF,KAAK,WAAa,GAClB,KAAK,wBAAwB,EAAE,QAAS,EAAE,OAAO,CACnD,CACA,aAAc,CAEZ,IAAMzI,EADU,KAAK,QACE,cACvB,OAAKA,EAGE,MAAM,UAAU,MAAM,KAAKA,EAAO,QAAQ,EAAE,OAAO1B,GAAM,CAACA,EAAG,UAAU,SAAS,WAAW,CAAC,EAF1F,IAGX,CACA,sBAAuB,CACrB,IAAMyN,EAAW,KAAK,YAAY,GAAK,CAAC,EACpClD,EAAS,EACTF,EAAQ,EACZ,QAAStK,EAAI,EAAGA,EAAI0N,EAAS,OAAQ1N,IAAK,CACxC,IAAM2N,EAAYD,EAAS1N,CAAC,EACtB4N,EAAS,CAAC,CAACD,EAAU,MAAM,MAAQA,EAAU,MAAM,OAAS,WAClE,GAAIA,IAAc,KAAK,QACrB,SAEF,IAAIE,EAAa,KAAK,WAAa,EAC/BC,EAAY,KAAK,UAAY,EACjC,GAAIF,EAAQ,CACV,IAAMG,EAAgB,OAAO,iBAAiBJ,CAAS,EACnDI,EAAc,YAChBF,EAAa,SAASE,EAAc,UAAW,EAAE,GAE/CA,EAAc,WAChBD,EAAY,SAASC,EAAc,SAAU,EAAE,EAEnD,MACEF,EAAaF,EAAU,aACvBG,EAAYH,EAAU,YAExBnD,GAAUqD,EACVvD,GAASwD,CACX,CACA,MAAO,CACL,OAAAtD,EACA,MAAAF,CACF,CACF,CACA,oBAAoB0D,EAAU,CAC5B,IAAIC,EAAkB,KAChBP,EAAW,KAAK,YAAY,EAClC,GAAKA,EAGL,SAAS1N,EAAI,EAAGA,EAAI0N,EAAS,OAAQ1N,IAAK,CACxC,IAAMC,EAAKyN,EAAS1N,CAAC,EACjBC,IAAOgO,IAGPD,EACF/N,EAAG,MAAM,OAAS,GAAGA,EAAG,YAAY,KAEpCA,EAAG,MAAM,MAAQ,GAAGA,EAAG,WAAW,KAEpCA,EAAG,MAAM,KAAO,WACZA,IAAO,KAAK,UACdgO,EAAkBP,EAAS1N,EAAI,CAAC,GAEpC,CACIiO,IACFA,EAAgB,MAAM,eAAe,QAAQ,EAC7CA,EAAgB,MAAM,eAAe,YAAY,EACjDA,EAAgB,MAAM,eAAe,YAAY,EACjDA,EAAgB,MAAM,KAAO,YAEjC,CACA,aAAc,CACZ,OAAO,OAAO,OAAO,KAAK,SAAS,EAAE,KAAK3K,GAASA,CAAK,CAC1D,CACA,SAAS,EAAG,CACV,GAAI,CAAC,KAAK,YAAc,CAAC,KAAK,eAC5B,OAEF,GAAM,CACJ,MAAAoI,EACA,+BAAAtB,CACF,EAAI,KAAK,OACH,CACJ,MAAAyC,EACA,QAAAqB,EACA,SAAAC,EACA,OAAAvB,CACF,EAAI,KAAK,eACHwB,EAAeF,GAAWtB,EAC1ByB,EAAaF,GAAYtB,EACzB,CACJ,UAAAK,EACA,UAAAC,CACF,EAAI,KAAK,uBAAuB,CAC9B,EACA,OAAAP,EACA,MAAAC,CACF,CAAC,EACKL,EAAY,KAAK,SAAS,EAC1BP,EAAY,KAAK,SAAS,EAC5BqC,EAAa,EACbC,EAAY,EAChB,GAAIH,GAAgBlB,EAAW,CAC7B,IAAMsB,EAAY5B,EAAS,GAAK,EAC1B6B,EAAW,KAAK,SAAS,EACzBC,EAAWD,EAAWvB,EAAYsB,EACpCG,EAAY,GACZ/B,IACF0B,EAAaG,EAAWC,GACpBlC,EAAY8B,GAAc,GAAKI,GAAY,KAAK,YAClDC,EAAY,GACZL,EAAa,IAGZK,GACH,KAAK,SAASD,CAAQ,CAE1B,CACA,GAAIL,GAAclB,EAAW,CAC3B,IAAMqB,EAAY3B,EAAQ,GAAK,EACzB+B,EAAY,KAAK,UAAU,EAC3BC,EAAYD,EAAYzB,EAAYqB,EACtCM,EAAa,GACbjC,GACF0B,EAAYK,EAAYC,GACpB5C,EAAYsC,GAAa,GAAKM,GAAa,KAAK,aAClDC,EAAa,GACbP,EAAY,IAGV,CAAC,KAAK,OAAO,OAAS,CAAC,KAAK,OAAO,gCAAkCK,EAAYC,GAAa,KAAK,qBAAqB,EAAE,OAASA,EAAY,KAAK,QAAQ,cAAc,eAC5KC,EAAa,IAGZA,GACH,KAAK,UAAUD,CAAS,CAE5B,CACA,KAAK,wBAAwB,EAAE,QAAS,EAAE,OAAO,IAC5CnD,GAAStB,IAAmCkE,GAAcC,IAC7D,KAAK,cAAc/B,EAAY8B,EAAYrC,EAAYsC,CAAS,CAEpE,CACA,YAAY,EAAGhD,EAAM,CACnB,KAAK,WAAa,GAClB,KAAK,eAAiB,KACtB,KAAK,WAAa,KAClB,KAAK,QAAQ,UAAU,OAAO,aAAa,EAC3C,KAAK,WAAWA,CAAI,EAAE,QAAQ,UAAU,OAAO,WAAW,EAC1D,KAAK,mBAAmB,CACtB,KAAM,QACR,CAAC,CACH,CACA,aAAc,CACZ,IAAMlK,EAAO,KAAK,QACd,KAAK,OAAO,QACT,KAAK,OAAO,OACf,KAAK,SAASA,EAAK,WAAW,EAE3B,KAAK,OAAO,QACf,KAAK,UAAUA,EAAK,YAAY,EAGtC,CACA,YAAY,EAAG,CACb,KAAK,WAAa,KAAK,oBAAoB,EACtC,KAAK,YACR,KAAK,mBAAmB,EAE1B,KAAK,SAAW,GAChB,KAAK,QAAQ,UAAU,IAAI,WAAW,EACtC,KAAK,wBAAwB,EAAE,QAAS,EAAE,OAAO,CACnD,CACA,OAAO,EAAG,CACR,GAAI,CAAC,KAAK,SACR,OAEF,GAAM,CACJ,EAAA4I,EACA,EAAAC,CACF,EAAI,KAAK,SACL6C,EACA,KAAK,OAAO,qBACdA,EAAY,KAAK,OAAO,mBAAmB,GAE7C,GAAM,CACJ,UAAAG,EACA,UAAAC,CACF,EAAI,KAAK,uBAAuB,CAC9B,EACA,MAAO,GACP,eAAgB,GAChB,UAAAJ,CACF,CAAC,EACD,KAAK,cAAc9C,EAAIiD,EAAWhD,EAAIiD,CAAS,EAC/C,KAAK,wBAAwB,EAAE,QAAS,EAAE,OAAO,CACnD,CACA,WAAY,CACV,KAAK,SAAW,GAChB,KAAK,WAAa,KAClB,KAAK,QAAQ,UAAU,OAAO,WAAW,CAC3C,CACA,iBAAkB,CACZ,KAAK,OAAO,+BACd,KAAK,aAAe,KAAK,aAAa,eAAe,EAErD,KAAK,aAAe,KAAK,QAAQ,YAErC,CACA,qBAAsB,CACpB,IAAIlN,EAAK,KAAK,QACd,KAAOA,GAAI,CACT,GAAI,OAAO,iBAAiBA,CAAE,EAAE,WAAa,SAC3C,OAAOA,EAETA,EAAKA,EAAG,aACV,CACA,OAAO,KAAK,OACd,CACA,sBAAuB,CACrB,KAAO,KAAK,gBAAgB,QAAQ,CAClC,IAAMnD,EAAS,KAAK,gBAAgB,IAAI,EACxC,KAAK,YAAY,iBAAiBA,CAAM,CAC1C,CACF,CACA,SAAU,CACR,MAAM,QAAQ,EACV,KAAK,yBACP,KAAK,YAAY,iBAAiB,KAAK,uBAAuB,EAEhE,KAAK,+BAA+B,EAAK,EACzC,KAAK,qBAAqB,EAC1B,KAAK,eAAe,CACtB,CACF,EAGIiS,IAAqC,IAAM,CAC7C,IAAIA,EAAuB,MAAMA,WAA6B9T,CAAS,CACrE,YAAY+T,EAAmBC,EAAY,CAAC,EAAG,CAC7C,MAAM,EACN,KAAK,kBAAoBD,EACzB,KAAK,UAAYC,EACjB,KAAK,UAAY/R,EAAA,CACf,2BAA4B,IAAM,GAClC,aAAcD,GAAK,CACjB,GAAIA,EAAE,iBACJ,OAEF,IAAMiS,EAAW,KAAK,aAAa,yBAAyB,KAAK,kBAAmB,GAAOjS,EAAE,QAAQ,EAChGiS,IAGLA,EAAS,MAAM,EACfjS,EAAE,eAAe,EACnB,GACGgS,EAEP,CACA,UAAU/T,EAAO,CACf,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,KAAK,kBAAkB,UAAU,IAAI6T,GAAqB,mBAAmB,EAC7E,KAAK,oBAAoB,KAAK,iBAAiB,EAC3C,KAAK,UAAU,WACjB,KAAK,2BAA2B,KAAK,kBAAmB,CACtD,QAAS,KAAK,UAAU,SAC1B,CAAC,EAEC,KAAK,UAAU,YACjB,KAAK,2BAA2B,KAAK,kBAAmB,CACtD,SAAU,KAAK,UAAU,UAC3B,CAAC,CAEL,CACA,oBAAoB1N,EAAM,CACxB,KAAK,2BAA2BA,EAAM,CACpC,QAASpE,GAAK,CACZ,GAAI,EAAAA,EAAE,kBAAoBkS,GAA4BlS,CAAC,GAGvD,IAAI,KAAK,UAAU,2BAA2BA,CAAC,EAAG,CAChDmS,GAA0BnS,CAAC,EAC3B,MACF,CACIA,EAAE,MAAQoS,EAAQ,IACpB,KAAK,UAAU,aAAapS,CAAC,EACpB,KAAK,UAAU,eACxB,KAAK,UAAU,cAAcA,CAAC,EAElC,CACF,CAAC,CACH,CACF,EACA,OAAA8R,EAAqB,oBAAsB,mBACpCA,CACT,GAAG,EACCO,GAAsBP,GAGtBQ,GAAqB,CACvB,YAAa,QACb,YAAa,QACb,YAAa,QACb,aAAc,SACd,WAAY,cACZ,aAAc,gBACd,WAAY,cACZ,UAAW,aACX,UAAW,YACX,MAAO,aACP,OAAQ,SACR,SAAU,iBACV,SAAU,YACV,YAAa,eACb,QAAS,UACT,aAAc,OACd,WAAY,KACZ,gBAAiB,wBACjB,mBAAoB,2BACpB,SAAU,WACV,YAAa,mBACb,WAAY,cACZ,SAAU,YACV,MAAO,QACP,SAAU,YACV,OAAQ,SACR,MAAO,QACP,aAAc,MACd,YAAa,KACb,cAAe,YACjB,EAGA,SAASC,GAAc1S,EAAQ2S,EAAiB,CAC9C,OAAIC,GAAiB5S,CAAM,GACrBA,EAAO,YAAc,MACvBC,EAAU,oDAAoD,EAEzD,GAEFD,EAAO,YAAc,KAAOA,EAAO,WAAa2S,CACzD,CACA,SAASC,GAAiB5S,EAAQ,CAChC,MAAO,CAAC,CAACA,EAAO,SAAWA,EAAO,QAAQ,QAAQ,OAAO,GAAK,CAChE,CAGA,IAAI6S,GAAiB,cAAcnP,CAAU,CAC3C,YAAYoP,EAAe,CACzB,MAAM,EACN,KAAK,cAAgBA,EACrB,KAAK,YAAc,GACnB,KAAK,UAAY,KACjB,KAAK,gBAAkB,GAOvB,KAAK,aAAe,KACpB,KAAK,YAAcC,EACnB,KAAK,gBAAkB,CAAC,CAC1B,CACA,UAAU3U,EAAO,CACf,KAAK,SAAWA,EAAM,QACxB,CACA,eAAgB,CACd,KAAK,cAAc,EACnB,KAAK,kBAAkB,IAAIoU,GAAoB,KAAK,oBAAoB,EAAG,CACzE,cAAe,KAAK,cAAc,KAAK,IAAI,CAC7C,CAAC,CAAC,EACF,KAAK,oBAAsB,IAAIzF,GAAoB,KAAK,uBAAuB,EAAG,CAChF,+BAAgC,EAClC,CAAC,EACD,KAAK,WAAW,KAAK,mBAAmB,CAC1C,CAGA,cAAc,EAAG,CAAC,CAClB,gBAAiB,CACf,OAAO,KAAK,UAAU,KAAK,aAAa,CAC1C,CACA,gBAAiB,CACf,MAAO,CAAC,CAAC,KAAK,YAChB,CACA,cAAciG,EAAW,CACvB,IAAIzO,EAAO,KAAK,OAAO,EACnBA,GACFA,EAAK,oBAAoB,SAAU,KAAK,YAAY,EAEtD,IAAM0O,EACN;AAAA;AAAA,wDAEoD,KAAK,iBAAiB,CAAC;AAAA,sBACzD,KAAK,mBAAmB,CAAC;AAAA;AAAA,qBAG3C,KAAK,YAAYA,EAAgB,KAAK,gBAAgB,EAAGD,CAAS,EAClEzO,EAAO,KAAK,OAAO,EACfA,GACFA,EAAK,iBAAiB,SAAU,KAAK,YAAY,CAErD,CACA,YAAa,CACX,MAAO,CAAC,CAAC,KAAK,qBAAqB,QACrC,CACA,KAAKvE,EAAQ,CACX,KAAK,UAAUA,CAAM,EACrB,KAAK,kBAAkB,EAAI,EAAE,KAAK,IAAM,CACtC,KAAK,mBAAmB,EACxB,KAAK,uBAAuB,CAC9B,CAAC,CACH,CACA,UAAUA,EAAQ,CAChB,KAAK,qBAAuBA,EAC5B,KAAK,YAAc4S,GAAiB5S,CAAM,EAC1C,KAAK,kBAAkB,CACzB,CACA,aAAaA,EAAQ,CACnB,KAAK,qBAAuBA,EAC5B,KAAK,YAAc4S,GAAiB5S,CAAM,EAC1C,KAAK,qBAAqB,KAAK,SAAS,EAAG,IAAM,CAC/C,KAAK,mBAAmB,EACxB,KAAK,uBAAuB,CAC9B,CAAC,CACH,CACA,mBAAoB,CAClB,GAAM,CACJ,QAAAkT,CACF,EAAI,KAAK,qBACHC,EAAaD,GAAWA,EAAQ,OAAS,GAAK,CAAC,KAAK,WAAW,EAWrE,GAVK,KAAK,eAMRtG,EAAc,KAAK,aAAa,EAChC,KAAK,gBAAgB,QAAQwG,GAAeA,EAAY,CAAC,EACzD,KAAK,gBAAkB,CAAC,GAPpBD,IACF,KAAK,cAAgB,SAAS,cAAc,KAAK,EACjD,KAAK,cAAc,UAAU,IAAI,uBAAuB,GAOxD,CAACA,EAAY,CACX,KAAK,eACPE,GAAkB,KAAK,aAAa,EAEtC,MACF,CACA,IAAMC,EAAW,SAAS,uBAAuB,EAC3CC,EAAY7U,GAAQ,CACxB,IAAI8U,EACAC,EACJ,OAAQ/U,EAAM,CACZ,IAAK,QACH8U,EAAO,KAAK,UAAU,aAAa,EACnCC,EAAgBtT,GAAK,KAAK,UAAU,GAAO,GAAOA,CAAC,EACnD,MACF,IAAK,QACHqT,EAAO,KAAK,UAAU,aAAa,EACnCC,EAAgB,IAAM,KAAK,UAAU,EACrC,MACF,IAAK,QACHD,EAAO,KAAK,UAAU,aAAa,EACnCC,EAAgB,IAAM,KAAK,UAAU,EACrC,MACF,IAAK,SACHD,EAAO,KAAK,UAAU,cAAc,EACpCC,EAAgBtT,GAAK,CACnB,KAAK,WAAWA,CAAC,CACnB,EACA,MACF,QACEF,EAAU,+BAA+B,EACzC,MACJ,CAEA,IAAMyT,EAASC,GACf;AAAA,4BAFmBjV,IAAS,QAAU,SAAW,QAGjB;AAAA,gCACNA,CAAI;AAAA;AAAA,mBAEjB8U,CAAI;AAAA,0BACG,EACpB,KAAK,gBAAgB,KAAK,GAAG,KAAK,2BAA2BE,EAAQ,CACnE,MAAOD,CACT,CAAC,CAAC,EACFH,EAAS,OAAOI,CAAM,CACxB,EACAR,EAAQ,QAAQxU,GAAQ6U,EAAU7U,CAAI,CAAC,EACvC,KAAK,cAAc,OAAO4U,CAAQ,EAClC,KAAK,OAAO,EAAE,YAAY,KAAK,aAAa,CAC9C,CAEA,sBAAuB,CACrB,MAAO,EACT,CACA,wBAAyB,CACvB,IAAMM,EAAalB,GAAc,KAAK,qBAAsB,KAAK,qBAAqB,CAAC,EACjFmB,EAAerM,EAAU,KAAK,mBAAmB,KAAK,IAAI,EAAGoM,CAAU,EAC7E,KAAK,kBAAoB,IAAM,CAC7B,KAAK,gBAAkB,GACvBC,EAAa,CACf,CACF,CACA,oBAAqB,CACf,KAAK,kBACP,KAAK,gBAAkB,GACvB,KAAK,UAAU,EAEnB,CACA,UAAW,CACT,OAAO,KAAK,aAAe,KAAK,aAAe,IACjD,CACA,SAASlI,EAAO,CAEd,OADgBA,GAAS,KAAO,KAAK,eAAeA,CAAK,EAAI,KAAK,kBAAkB,GACrE,KAAK,IAAM,CACxB,KAAK,mBAAmB,EACxB,KAAK,WAAW,KAAK,CACvB,CAAC,CACH,CACA,WAAW,EAAG,CACZ,KAAK,qBAAqB,KAAK,SAAS,EAAG,IAAM,CAC/C,KAAK,gBAAgB,CAAC,CACxB,CAAC,CACH,CACA,gBAAgB,EAAG,CACb,KAAK,qBAAqB,cAC5B,KAAK,MAAM,CAAC,CAEhB,CACA,qBAAqBmI,EAAcC,EAAoB,CACrD,IAAMC,EAAmB,IAAM,CAC7B,KAAK,YAAY,GAAO,SAAS,EACjCD,IAAqB,CACvB,EACID,GAAgB,KAClB,KAAK,eAAeA,CAAY,EAAE,KAAKE,CAAgB,EAEvD,KAAK,kBAAkB,EAAE,KAAKA,CAAgB,CAElD,CACA,WAAY,CACV,KAAK,kBAAkB,EAAE,KAAK,IAAM,KAAK,YAAY,CAAC,CACxD,CACA,WAAY,CACV,KAAK,UAAU,EACf,KAAK,UAAU,CACjB,CAKA,WAAW/J,EAAS,MAAO,CACzB,IAAMgK,EAAW,KAAK,eAAe,EACrC,GAAI,CAAC,KAAK,aAAaA,CAAQ,EAC7B,MAAO,GAET,IAAMC,EAAgB,KAAK,aAC3B,YAAK,aAAeD,EACb,CAAC,KAAK,eAAeC,EAAeD,CAAQ,CACrD,CAEA,aAAatI,EAAO,CAClB,MAAO,EACT,CACA,aAAa,EAAG,CACd,EAAE,eAAe,CACnB,CACA,UAAUwI,EAAsB,GAAOC,EAAkB,GAAOjU,EAAG,CAC7DA,GACFA,EAAE,eAAe,EAEf,KAAK,WAAWiU,EAAkB,iBAAmB,IAAI,GAE3D,KAAK,qBAAqB,sBAAsB,CAC9C,oBAAAD,EACA,gBAAAC,EACA,OAJa,cAKf,CAAC,EAEH,GAAM,CACJ,aAAAC,CACF,EAAI,KAAK,qBACLA,GAAgB,KAAK,aAAe,CAACF,GAAuB,CAACC,GAC/D,KAAK,MAAMjU,CAAC,CAEhB,CACA,iBAAkB,CAAC,CACnB,MAAM,EAAG,CACP,GAAI,CAAC,KAAK,UACR,OAEF,IAAMmU,EAAgB,EAChB/N,EAAM+N,GAAiBA,EAAc,IACvCtU,GACAuG,IAAQ,SAAWA,IAAQ,WAC7BvG,EAAS,CACP,cAAAsU,CACF,GAEF,KAAK,UAAUtU,CAAM,EACrB,KAAK,UAAY,IACnB,CAMA,YAAYuU,EAAqB,GAAOC,EAAO,CAG7C,GAFA,KAAK,mBAAmB,EACxB,KAAK,qBAAqB,uBAAuB,EAC7C,KAAK,aAAe,CAAC,KAAK,WAAW,EAAG,CAC1C,IAAMC,EAAU,KAAK,aAAa,KAAK,eAAe,CAAC,EACjDC,EAAoB,KAAK,oBAAoB,gCAAgC,EAC/EA,GACFC,GAAaD,EAAmB,CAACD,CAAO,CAE5C,CACIF,GAAsB,CAACC,GAASA,IAAU,cAC5C,KAAK,UAAUD,CAAkB,GACxB,CAAC,KAAK,aAAe,CAACC,GAASA,IAAU,aAClD,KAAK,kBAAkB,CAE3B,CACA,iBAAiBxU,EAAQ,CACnBA,IACF,KAAK,UAAYA,EAAO,WAE1B,KAAK,qBAAqBA,GAAQ,SAAS,CAC7C,CACA,qBAAqB4U,EAAe,CAClC,GAAI,CAAC,KAAK,qBAAuBA,IAAkB,YACjD,OAEF,IAAMC,EAAcD,IAAkB,kBAAoBA,IAAkB,eACtE,CACJ,oBAAAE,EACA,IAAAC,CACF,EAAI,KACAF,GACFC,EAAoB,gBAAgB,EACpCA,EAAoB,aAAaC,EAAI,IAAI,WAAW,EAAI,CACtD,OAAQ,GACR,WAAY,GACZ,KAAM,EACR,EAAI,CACF,OAAQ,GACR,YAAa,GACb,MAAO,EACT,CAAC,IAED,KAAK,oBAAoB,iBAAiB,EAC1C,KAAK,oBAAoB,aAAa,EAAK,GAE7C,KAAK,oBAAoB,+BAA+B,EAAI,CAC9D,CACA,kBAAmB,CACjB,KAAK,mBAAmB,EACpB,KAAK,qBACP,KAAK,oBAAoB,+BAA+B,EAAK,CAEjE,CACA,QAAQC,EAAW,CACjB,YAAK,qBAAuBA,EACrB,EACT,CACA,SAAU,CACR,IAAMzQ,EAAO,KAAK,OAAO,EACrBA,GACFA,EAAK,oBAAoB,SAAU,KAAK,YAAY,EAEtD,KAAK,UAAY,KACb,KAAK,sBACP,KAAK,oBAAsB,KAAK,YAAY,KAAK,mBAAmB,GAEtE,KAAK,aAAe,KACpB,MAAM,QAAQ,CAChB,CACA,UAAUgC,EAAK,CAEb,OADkB,KAAK,cAAc,kBAAkB,EACtCA,EAAKkM,GAAmBlM,CAAG,CAAC,CAC/C,CACA,aAAavH,EAAS,CACpB,OAAO,KAAK,qBAAqB,SAASA,CAAO,CACnD,CAEA,wBAAyB,CACvB,OAAO,KAAK,WACd,CACF,EAGIiW,GAAgB,cAAcC,EAAW,CAC3C,YAAYlI,EAAQ,CAClB,MAAMA,EAAQ,kBAAmB,OAAO,CAC1C,CACA,YAAa,CACX,OAAO,KAAK,OAAO,OACrB,CACA,QAAS,CACH,KAAK,OAAO,UAGX,KAAK,WAAW,GACnB,KAAK,SAAS,EAAI,CAEtB,CACA,mBAAoB,CAClB,MAAM,kBAAkB,EACxB,KAAK,yBAAyB,CAC5B,gBAAiB,KAAK,SAAS,KAAK,IAAI,CAC1C,CAAC,CACH,CAOA,SAAShM,EAAO,CACVA,EAAM,UAAYA,EAAM,MAAQ,KAAK,OAAO,MAAQ,KAAK,OAAO,OAASA,EAAM,MAAQA,EAAM,IAAM,KAAK,OAAO,KAAOA,EAAM,IAC9H,KAAK,SAAS,GAAO,EAAI,CAE7B,CACF,EAGImU,GAAS,cAAczR,CAAU,CACnC,YAAY0R,EAAgB,UAAWC,EAAc,GAAO,CAC1D,MACA,0BAA0BD,CAAa,8BAA8B,EACrE,KAAK,cAAgBA,EACrB,KAAK,YAAcC,EACnB,KAAK,YAAc,iBACnB,KAAK,QAAU,CAAC,EAChB,KAAK,QAAU,CAAC,CAClB,CACA,eAAgB,CACd,IAAM9Q,EAAO,KAAK,OAAO,EACzB,KAAK,2BAA2BA,EAAM,CACpC,WAAY,IAAM,KAAK,iBAAiB,CAC1C,CAAC,EACG,MAAK,aAGT,KAAK,2BAA2BA,EAAM,CACpC,QAAS,KAAK,cAAc,KAAK,IAAI,CACvC,CAAC,CACH,CACA,cAAc,EAAG,CACf,IAAMgC,EAAM,EAAE,IACd,OAAQA,EAAK,CACX,KAAKgM,EAAQ,MACX,GAAI,CAAC,KAAK,cACR,KAAK,SAAS,KAAK,SAAS,CAAC,MACxB,CACL,IAAM+C,EAAM,KAAK,QAAQ,QAAQ,KAAK,aAAa,EACnD,KAAK,gBAAgBA,CAAG,CAC1B,CACA,MACF,KAAK/C,EAAQ,KACb,KAAKA,EAAQ,GACX,EAAE,eAAe,EACjB,KAAK,SAAShM,CAAG,EACjB,MACF,KAAKgM,EAAQ,UACb,KAAKA,EAAQ,QACb,KAAKA,EAAQ,UACb,KAAKA,EAAQ,SACX,EAAE,eAAe,EACjB,KAAK,eAAehM,CAAG,EACvB,KACJ,CACF,CACA,SAASA,EAAK,CACZ,IAAMgP,EAAShP,IAAQgM,EAAQ,KAC3BiD,EACJ,GAAI,CAAC,KAAK,cACRA,EAAkB,KAAK,QAAQD,EAAS,EAAI,KAAK,QAAQ,OAAS,CAAC,MAC9D,CAEL,IAAIE,EADe,KAAK,QAAQ,QAAQ,KAAK,aAAa,GAC9BF,EAAS,EAAI,IACzCE,EAAU,KAAK,IAAI,KAAK,IAAIA,EAAS,CAAC,EAAG,KAAK,QAAQ,OAAS,CAAC,EAChED,EAAkB,KAAK,QAAQC,CAAO,CACxC,CACA,KAAK,cAAcD,CAAe,CACpC,CACA,eAAejP,EAAK,CAClB,GAAI,CAAC,KAAK,eAAiB,KAAK,QAAQ,SAAW,EACjD,OAEF,IAAMmP,EAAa,KAAK,QAAQ,QAAQ,KAAK,aAAa,EACpDC,EAAW,KAAK,QAAQ,OAAS,EACjCC,EAAa,KAAK,QAAQ,CAAC,EAAE,aAC7BC,EAAW,KAAK,MAAM,KAAK,OAAO,EAAE,aAAeD,CAAU,EAC/DE,EAAW,GACXvP,IAAQgM,EAAQ,UAClBuD,EAAW,EACFvP,IAAQgM,EAAQ,SACzBuD,EAAWH,EACFpP,IAAQgM,EAAQ,UACzBuD,EAAW,KAAK,IAAIJ,EAAaG,EAAUF,CAAQ,EAC1CpP,IAAQgM,EAAQ,UACzBuD,EAAW,KAAK,IAAIJ,EAAaG,EAAU,CAAC,GAE1CC,IAAa,IAGjB,KAAK,cAAc,KAAK,QAAQA,CAAQ,CAAC,CAC3C,CACA,WAAWC,EAAa,CACtB,OAAAA,EAAY,QAAQC,GAAc,KAAK,UAAUA,CAAU,CAAC,EACrD,IACT,CACA,UAAUA,EAAY,CACpB,GAAM,CACJ,MAAAxP,EACA,KAAAgN,CACF,EAAIwC,EACEC,EAAgBzC,GAAQhN,EAC9B,YAAK,QAAQ,KAAK,CAChB,MAAAA,EACA,KAAMyP,CACR,CAAC,EACD,KAAK,aAAazP,EAAOyP,CAAa,EACtC,KAAK,cAAc,EACZ,IACT,CACA,cAAe,CACb,KAAK,QAAU,CAAC,EAChB,KAAK,MAAM,EAAI,EACf,KAAK,QAAQ,QAAQC,GAAU,CAC7B7C,GAAkB6C,CAAM,CAC1B,CAAC,EACD,KAAK,QAAU,CAAC,CAClB,CACA,eAAgB,CACd,IAAMvT,EAAU,KAAK,OAAO,EAAE,iBAAiB,eAAe,EAC9DA,EAAQ,QAAQ,CAACwT,EAAQC,IAAQ,CAC/BC,GAAiBF,EAAQC,EAAM,CAAC,EAChCE,GAAgBH,EAAQxT,EAAQ,MAAM,CACxC,CAAC,CACH,CACA,aAAa6D,EAAOgN,EAAM,CACxB,IAAM+C,EAAY,KAAK,IAAI,YAAY,EACjCL,EAASK,EAAU,cAAc,KAAK,EAC5CC,EAAaN,EAAQ,QAAQ,EAC7BA,EAAO,UAAU,IAAI,eAAgB,MAAM,KAAK,aAAa,YAAY,EACzE,IAAMO,EAAOF,EAAU,cAAc,MAAM,EAC3CL,EAAO,YAAYO,CAAI,EACvBA,EAAK,YAAcjD,EACd,KAAK,cACR0C,EAAO,SAAW,IAEpB,KAAK,QAAQ,KAAKA,CAAM,EACxB,KAAK,oBAAoBA,EAAQ,CAC/B,UAAW,IAAM,KAAK,cAAcA,CAAM,EAC1C,UAAW/V,GAAK,CACdA,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,KAAK,SAASqG,CAAK,CACrB,CACF,CAAC,EACD,KAAK,kBAAkB,IAAIkQ,GAAe,CACxC,gBAAiB,IAAMlD,EACvB,OAAQ,IAAM0C,EACd,YAAa,IAAM,UAEnB,qBAAsB,IAAMO,EAAK,YAAcA,EAAK,WACtD,CAAC,CAAC,EACF,KAAK,OAAO,EAAE,YAAYP,CAAM,CAClC,CACA,SAAS1P,EAAOmQ,EAAQ,CACtB,GAAI,KAAK,QAAUnQ,EACjB,YAAK,iBAAiB,EACf,KAET,GAAIA,GAAS,KACX,YAAK,MAAMmQ,CAAM,EACV,KAET,IAAMP,EAAM,KAAK,QAAQ,UAAUD,GAAUA,EAAO,QAAU3P,CAAK,EACnE,GAAI4P,IAAQ,GAAI,CACd,IAAMD,EAAS,KAAK,QAAQC,CAAG,EAC/B,KAAK,MAAQD,EAAO,MACpB,KAAK,aAAeA,EAAO,KAC3B,KAAK,cAAc,KAAK,QAAQC,CAAG,CAAC,EAC/BO,GACH,KAAK,gBAAgB,CAEzB,CACA,OAAO,IACT,CACA,gBAAgBP,EAAK,CACnB,OAAO,KAAK,SAAS,KAAK,QAAQA,CAAG,EAAE,KAAK,CAC9C,CACA,UAAW,CACT,OAAO,KAAK,KACd,CACA,iBAAkB,CAChB,OAAO,KAAK,YACd,CACA,oBAAqB,CACnB,KAAK,iBAAiB,EACtB,IAAMA,EAAM,KAAK,QAAQ,UAAUD,GAAUA,EAAO,QAAU,KAAK,KAAK,EACpEC,IAAQ,IACV,KAAK,cAAc,KAAK,QAAQA,CAAG,CAAC,CAExC,CACA,MAAMO,EAAQ,CACZ,KAAK,MAAQ,KACb,KAAK,aAAe,KACpB,KAAK,iBAAiB,EACjBA,GACH,KAAK,gBAAgB,CAEzB,CACA,cAAcxT,EAAI,CAChB,GAAI,CAAC2K,GAAW3K,CAAE,EAChB,OAEF,KAAK,iBAAiB,EACtB,KAAK,cAAgBA,EACrB,KAAK,cAAc,UAAU,IAAI,KAAK,WAAW,EACjDyT,GAAiB,KAAK,cAAe,EAAI,EACzC,IAAMrS,EAAO,KAAK,OAAO,EACnB,CACJ,UAAAsS,EACA,aAAA5J,CACF,EAAI1I,EACE,CACJ,UAAAkN,EACA,aAAAqF,CACF,EAAI3T,GACAsO,EAAYqF,EAAeD,EAAY5J,GAAgBwE,EAAYoF,IACrE,KAAK,cAAc,eAAe,CAChC,MAAO,SACT,CAAC,EAEE,KAAK,aACR,KAAK,cAAc,MAAM,CAE7B,CACA,kBAAmB,CACb,CAAC,KAAK,eAAiB,CAAC/I,GAAW,KAAK,aAAa,IAGzD,KAAK,cAAc,UAAU,OAAO,KAAK,WAAW,EACpD8I,GAAiB,KAAK,cAAe,EAAK,EAC1C,KAAK,cAAgB,KACvB,CACA,iBAAkB,CAChB,KAAK,mBAAmB,CACtB,KAAM,mBACR,CAAC,EACD,KAAK,iBAAiB,CACxB,CACA,kBAAmB,CACjB,KAAK,mBAAmB,CACtB,KAAM,cACR,CAAC,CACH,CACF,EAGIG,GAAgB,cAAcC,EAAgB,CAChD,YAAYhK,EAAQ,CAqBlB,GApBA,MAAMA,EAAQA,GAAQ,UACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOiBA,GAAQ,cAAgB,CAAC,EAAGA,GAAQ,SAAS,EAC9D,KAAK,kBAAoB,GACzB,KAAK,UAAY,GACjB,KAAK,UAAY,EACjB,KAAK,kBAAoB,KACzB,KAAK,OAAS+F,EACd,KAAK,SAAWA,EAChB,KAAK,cAAgBA,EACrB,KAAK,MAAQA,EACb,KAAK,SAAW/F,GAAQ,SACxB,KAAK,gBAAkB,KAAK,gBAAgB,KAAK,IAAI,EACrD,KAAK,iBAAmB,KAAK,iBAAiB,KAAK,IAAI,EACnD,CAACA,EACH,OAEF,GAAM,CACJ,UAAAiK,EACA,gBAAAC,EACA,cAAAC,EACA,eAAAC,EACA,eAAAC,CACF,EAAIrK,EACAiK,GAAa,OACf,KAAK,UAAYA,GAEnB,KAAK,cAAgB,CAAC,CAACE,EACnBD,GAAmB,MACrB,KAAK,mBAAmBA,CAAe,EAErCE,GAAkB,MACpB,KAAK,kBAAkBA,CAAc,EAEnCC,GAAkB,MACpB,KAAK,kBAAkBA,CAAc,CAEzC,CACA,UAAUjZ,EAAO,CACf,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,MAAM,cAAc,EACpB,KAAK,UAAU,EACf,IAAMkZ,EAAY,MAAM,KAAK,UAAU,CAAC,WACxC,KAAK,cAAc,aAAa,KAAMA,CAAS,EAC/C,IAAMC,EAAS,KAAK,eAAe,EACnC,KAAK,2BAA2BA,EAAQ,CACtC,QAAS,KAAK,UAAU,KAAK,IAAI,CACnC,CAAC,EACD,KAAK,2BAA2B,KAAK,OAAQ,CAC3C,UAAW,KAAK,0BAA0B,KAAK,IAAI,CACrD,CAAC,EACD,KAAK,2BAA2B,KAAK,SAAU,CAC7C,UAAW,KAAK,0BAA0B,KAAK,IAAI,CACrD,CAAC,EACD,GAAM,CACJ,WAAAC,EACA,WAAAC,CACF,EAAI,KAAK,OACT,GAAID,EAAY,CACd,IAAME,EAAO3T,GAAkByT,EAAY,KAAK,GAAG,EAC/CE,GACF,KAAK,MAAM,YAAYA,CAAI,CAE/B,CACID,GAAc,MAChB,KAAK,cAAcA,CAAU,CAEjC,CACA,WAAY,CACV,IAAMF,EAAS,KAAK,eAAe,EACnCA,EAAO,aAAa,WAAY,KAAK,IAAI,IAAI,UAAU,EAAE,SAAS,CAAC,EACnEI,GAAiBJ,EAAQ,EAAK,EAC1B,KAAK,UACPf,EAAae,EAAQ,KAAK,QAAQ,CAEtC,CACA,0BAA0B,EAAG,CAC3B,GAAI,EAAG,CACL,IAAMK,EAAc,KAAK,oBAAoB,EAC7C,GAAIA,IAAgB,KAAK,UAAY,GAAG,SAAWA,EACjD,OAEF,EAAE,eAAe,EACjB,KAAK,oBAAoB,EAAE,MAAM,CACnC,CACA,GAAI,KAAK,UAAW,CAClB,KAAK,UAAY,GACjB,MACF,CACI,KAAK,WAAW,IAGhB,KAAK,kBACP,KAAK,WAAW,EAEhB,KAAK,WAAW,EAEpB,CACA,UAAU,EAAG,CACX,OAAQ,EAAE,IAAK,CACb,KAAKrF,EAAQ,GACb,KAAKA,EAAQ,KACb,KAAKA,EAAQ,MACb,KAAKA,EAAQ,MACX,EAAE,eAAe,EACjB,KAAK,0BAA0B,EAC/B,MACF,KAAKA,EAAQ,OACP,KAAK,oBACP,EAAE,eAAe,EACjB,EAAE,gBAAgB,EACd,KAAK,mBACP,KAAK,kBAAkB,GAG3B,KACJ,CACF,CACA,YAAa,CACX,KAAK,kBAAoB,GACpB,KAAK,kBACR,KAAK,gBAAkB,KAAK,sBAAsB,GAEpD,IAAMsF,EAAY,KAAK,gBAAgB,OAAO,EAC9CA,EAAU,iBAAiB,UAAW,KAAK,eAAe,EAC1DA,EAAU,iBAAiB,WAAY,KAAK,gBAAgB,EAC5D,KAAK,kBAAoB,KAAK,wBAAwB,EACtD,KAAK,qBAAqB,EAAI,CAChC,CACA,yBAA0B,CACxB,IAAMtB,EAAY,KAAK,IAAI,YAAY,EACjCuB,EAAU,KAAK,gBAAgB,OAAO,EACvC,KAAK,IAAI,IAAI,iCAAiC,IACjD,CAAC,KAAK,qBAAqB,EAAI,KAAK,yBAAyB,CAC3D,WAAY,IAAM,CAChB,KAAK,WAAW,CAClB,CACF,CAAC,GAEH,IAAMtT,EAAY,KAAK,cAAc,kBAAkB,EACjD,CACJ,mBAAAuT,EACA,qBAAAC,EACA,YAAAC,EAAc,EAChB,EAAI,KAAK,OACHC,EAAc,CAClB,MAAOD,EACP,OAAQH,EACR,WAAY,GACZ,eAAgB,IAAM,CACpB,IAAMK,EAAW,KAAK,IAAI,oBAAoB,EACxCC,EAAqB,CAACD,GAAYA,IAAa5B,EAAU,KAC/D,KAAK,iBAAiB,EAClB6B,GAAsB,KAAK,QAAQ,GACrC,KAAK,oBAAoB,EAAE,MAAM,CAErC,EACA,UAAW5T,EAAUuT,EAAoBC,CAAoB,CAC/D,EACMK,EAAc,KAAK,aAAa,SAASH,CAAW,EACpD,CACJ,gBAAAhB,EACA,eAAAE,EACA,eAAAC,EACA,cAAAF,CACF,EAAI,KACAA,GACEC,IACFU,EAAQ,MAAM,SAAWV,GAE3BU,EAAQ,MAAM,MAAQQ,GAAY7I,GAAkB,KAAK,QAAQ,CAAC,EAC9D4H,IACFS,EAAQ,MAAM,SAAWT,IAG3BkB,GAAiBT,EAAST,GAAkB5H,GAAkB,KAAK,QAAQ,CAAC,EAE9E,IAAM+I,EAAYtB,GAAmB,GAAGuB,GAAgB,KAAK,aAAa,eAAe,CAAC,CAAC,KAC3F,OAAAX,EAAQ,MAAM,YAAY,aAAcU,CAAS,EACjDV,EAAQ,MAAM,SAAW,WACzB,KAAK,uBAAuB,EACrBO,EAAY,QACrB,CACA,wBAAyB,CACvB,GAAI,CAAC,KAAK,gBACR,OAEF,GAAM,CACJ,WAAAK,CACF,EAAI,KAAK,OACH,CACJ,UAAAzB,CACF,EAAI,KACE0B,EAAY,KAAK,IAAI,IAAI,WAAW,EAAI,QAAU,OACxD,KAAK,aAAa,yBAAyB,CACzC,KAAMD,EACN,YAAa,KAAK,SAClB,OAAQ,KAAK,gBAAgB,OAAO,EACpC,SAAU,QACV,UAAAC,EACA,iBAAkB,GAClB,OAAQ1B,CACV,CAAC,CACH,CACA,kBAAmB,CACb,KAAK,wBACP,KAAK,sBAAsB,EAC3B,KAAK,sBAAwB,QAE/B,KAAK,qBAAqB,EAAK,EAC/B,IAAMY,EAAY,KAAK,gBAAgB,OAAO,EAC9CA,EAAU,oBAAoB,UAAW,KAAK,eAAe,EAC7DA,EAAU,oBAAoB,WAAY,KAAK,gBAAgB,EAC/D,KAAK,kBAAoB,GACzB,KAAK,gBAAkB,OACvB,KAAK,kBAAoB,IAC3B,CACA,qBAAqB3P,EAAU,CAC7B,GAAI,CAAC,KAAK,QAAQ,EAChB,OAEF,IAAMqP,EAAS,KAAK,eAAe,EACnCI,GAAiBJ,EAAQrP,CAAQ,EACjC,KAAK,SAAS,UAAU,OAAO,qBAAsBA,CAAQ,EAC7D,KAAK,SAAS,UAAU,OAAO,sBAAuB,CAACA,CAAQ,CACjE,CACA,iBAAkB,CAChB,KAAK,qBAAqB,EAAI,CAChC,CACA,iBAAiB,EAAG,CACb,KAAK,iBAAiB,OAAO,EAAE,SAAS,EAAE,aAAa,GAC1D,KAAK,qBAAqB,EAAK,CAEnC,CACA,qBAAqB0Q,EAAS,CACvB,KAAK,iBAGV,KAAK,SAAS,UAAU,OAAO,sBAAuBA,CAAO,CAC/D,CACA,YAAa,CACP,KAAK,mBACP,KAAK,kBAAkB,CAE3B,CACA,cAAcpL,EAAO,CACnB,OAAA+K,GAAiB,KAAK,SAAU/K,CAAK,EAC9B,IACT,CACA,qBAAsB,CACpB,OAAO,KAAK,QACd,CACA,aAAaqL,EAAK,CAChB,YAAK,UAAYA,EACV,IACT,CACA,kBAAkBrL,EAAO,CACvB,OAAI,OAAOA,GAAU,WACnBA,EAAQ,GAAGA,CAAK,MAElB,KAAK,eAAiBA,GAAgB,OAC/B,IACT,CACA,kBAAkBA,EAAO,CACvB,OAAI,OAAOA,GAAU,WACnBA,EAAQ,GAAGA,CAAK,MAElB,KAAK,eAAiBA,GAAgB,OAC/B,IACT,CACA,mBAAmBE,EAAQ,CACzB,OAAI,OAAOA,GAAW,WACpBA,EAAS,GAAGA,CAAM,MAEpB,KAAK,gBAAkBA,GAAiB,OACjC,IACT,CACA,SAAU,CACR,KAAK,WAAW,EAChB,MAAM,QAAQ,CAChB,CACF,EAGIoL,GAAW,cAAc/B,EAAc,CACzC,YAAY/J,EAAQ,CAClB,MAAM5M,EAAA,CACJ,mBAAoB,uBACpB,qBAAsB,eACtB,WAAY,UACZ,UAAW,YACX,WAAY,YACZ,SAAU,YACP4M,EACJ,CACH,CACA,eAAgB,CACd,MAAM,cAAc,EACpB,KAAK,oBAAoB,EACzB,KAAK,SAAS,SAAW,KAAK,IAAI,IAAI,UAAU,EAChD,GAAM,CACJ,QAAArK,EACA,MAAA6D,EACA,YAAAuS,CACF,EAAI,KAAK,OACLpW,GAAW,MACb,KAAK,WAAWA,CAAO,EAErB6D,GAAS,MACX,KAAK,SAASA,EAAO,EAAI,EAEvBuS,GAAevS,GAAS,OAC1B,KAAK,cAAc,YAAcuS,GAEnC,KAAK,2BAA2B,KAAK,SAAU,CAC7C,SAAU,KAAK,kBAAkB,KAAK,IAAI,CAC5C,CAAC,CACH,CACA,kBAAkB,EAAG,CACd,KAAK,SAAS,SAAS,EAAE,aAAa,GACzC,KAAK,WAAW,CAEpB,CACA,qBAAsB,CACpB,KAAK,cAAgB,KAAK,WAAW,IAAI5D,GAAO,SAAU,EAAI,CAAC,EAC/D,KAAK,cAAc,mBAAmB,IAAI,EAC1C,IAAM6D,EAAc,KAAK,cAAc,eAAe,EAChDC,EAAS,kBAAkB,KAAK,cAAc,UAAU,CAAC,GAC/DD,EAAY,aAAa,KAAMC,CAAM,EACrCC,GAAiB,KAAK,eAAe,EAAGF,CAAW,EACnD,KAAK,cAAc,oBAAoB,KAAK,cAAe,CACzD,aAAc,IAAM,CAClB,KAAK,WAAW,EAChB,KAAK,mBAAmB,CACtB,KAAM,cACR,CAAC,CACH,CACF,CAAC,EACD,KAAK,cAAc,oBAAoB,KAAK,cAAe,CACzD,kBAAmB,IAAM,CAClB,KAAK,gBAGV,KAAK,SAAS,KAAK,cAAc,SAAS,EAAG,GAAO,EAAI,EACxD,KAAK,WAAW,EAClB,CACF,CAAC,CACH,CACA,uBAAwB,CACtB,OAAO,KAAK,aACd,CACA,UAAU,EAAG,CACX,GAAM,CACJ,IAAAzS,CACF,EAAI,EAIJ,OAHIA,IAAQgM,EAAQ,KAClB,KAAK,WAAW,EAEVhM,EAAK,CACX,KAAKgM,EAAQ,MACb,KAAKA,EAAQ,GACb,KAAKA,EAAQ,KACb,KAAKA,EAAQ,QACb,KAAKA,EAAQ,UACb,KAAKA,EAAQ,UACb,KAAKA,EAAQ,SACX,EAAE,eAAe,EACb,KAAK,kBACP,KAAK,eAAe,cAAc,CAAC,EAEnC,MAAM,UAAU,CAAC,EAEnB,MACF,KAAKA,EAAQ,OACX,MAAM,UAAU,CAAC,EACjB,KACJ,CACF,CACA,YAAa,CACN,KAAK,gBAGV,MAAM,WAAW,EACjB,KAAK,cAAc,mBAAmB,EACxC,CACA,WAAW5P,EAAS,CAClB,OAAAA,EAAQ,QAAQwT,GAAU,KAAK,UAAUA,CAAM,CAAC,EACzC,IACT,CACA,UAAUA,EAAQ,CAChB,YAAK,cAAc,UAAUA,CAAM,EAC5B,IACT,CACA,cAAe,CACb,YAAK,eAAe,aAAa,EAC1B,IACT,CACA,SAAS3P,EAAOmQ,EAAQwC,EAAY,CAClC,GAAI,KAAK,QAAU3S,GAAS,CAAC,KAAK,cAChC,OAAO,KAMT,GAJK2S,GACH,KAAK,cAAc,SAAS3S,EAAO,EAAI,EAExB,KAAK,cAAc,SAAS,IAC5B,KAAK,SAAS,EAC7B,OAAO,KAET,IAAI4S,EAAe,KAAK,cAAc,gBAAgB,EACtD,OAAIA,GAAgB,MAAQ,KAAK,OAAO,cACtCA,EAAe,KAAK,OAAO,aAE7B,KAAK,cAAc,YAAcA,EACjC,KAAK,WAAW,CACd,eAAgBA,GAAgB,KAChC,qBAAsB,IAAM,KAAK,cAAc,YAAc,KAAK,cAAc,WAClF,CAAC,EACM,MAAM,SAAS5S,EAAOmQ,CAAM,CACrC,CACA,SAAU,CACJ,KAAK,gBACP,KAAK,cAAgB,KAAK,YAAY,KAAK,aAAa,GAE1D,MAAM,QAAQ,CAChB,CACF,EACI0C,GAAmB,CACrB,SAAU,YACV,UAAWP,EACb,EAGIQ,GAAiB,KAAM,CACzB,aAAc,CACZ,KAAK,oBAAsB,CAAC,CAC9B,CACA,KAAKtZ,EAAQuZ,EAAgB,CAC3B,KAAK,cAAgBvZ,EAAO,eAAiBuZ,EAC7C,KAAK,iBAAiB,EACtB,KAAK,kBAAkBvZ,CAAM,CAC/B,CACA,kBAAmB,CACjB,OAAO,KAAK,aACd,CACA,kBAAmB,CACZ,KAAK,eAGV,KAAK,cAAc,QAAQwZ,GAAgB,CACzC,GAAI,OAAOA,GAAiB,SAC1B,OAEF,IAAMC,EAAqB,CAAC,CAAC,YAAY,EAAG,CAAC,aAAa,EAAG,CAAC,YAAa,MAAM,CAAC,EAC5EC,EAAgBrT,GACfA,EAAK,KAAKE,GAAOiT,EAAajT,CAAG,GAAK,IAAI,EAIxC,IAHLtG,EAAU,0DAA0DoG,CAAI,GAAG,EACpE,IAIX,GAAI,CAACoT,EAAmB,MAAMC,CAAa,EAAG,CAC5C,KAAK,cAAgB,KAAK,cAAc,OAAOC,GAAKA,IAAMH,CAAY,GAAK,CAAC,EAC5E,MACF,CACA,KAAK,oBAAoBA,EAAa,UAAU,EAAIA,CACtD,CAAC,CACH,CACA,kBAAkBxZ,EAAQ,CACxB,GAAIA,EAAO,cACT,KAAK,cAAgBA,EAAO,sBACnB,KAAK,cAAc,QAAU,EAAG,CACzC,IAAM4Z,EAAoB,KAAK,cAAc,CAAC,EAC1C,OAAOA,GAAsB,SAC/B,KAAK,cAAgBA,EACZA,EAAkB,WAC3B,KAAK,cAAgBA,EAAkB,WAEvC3Z,EAAU,uEAAuE,CAErF,MACEA,EAAU,8BAA8B,CAE5C,CACA,kBAAmB,CACjB,OAAO,KAAK,aACd,CACA,gBAAgB4Z,EAAM,CACpB,OAAO,KAAK,oBAAoBA,CAAI,CACtC,CACF,EAGIC,GAAe,cAAcjH,EAAe,CAC9C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,OAAS,CAAC,EACf,KAAK,oBAAsB,CAAC,EAC5B,KAAK,kBAAoB,CAAC,EAC1B,KAAK,iBAAmB,CAAC,EACzB,KAAK,iBAAmB,CAAC,EACzB,KAAK,SAAW,IAAM,KAAK,YAAY,EACvC,KAAK,uBAAyB,KAC9B,KAAK,eAAiB,CACxB,CACA,kBAAkBnU,EAAM,CACtB,IAAMqb,EAAa,KAAK,eAAe,gBAAgBrb,CAAI,EAC3D,GAAIqb,EAAY,CACd,GAAM,CACJ,eAAAC,CACF,EAAID,EACJ,OAAOC,GAA0C,CACnD,CAEA,OAAItb,GADmB,CAAC,QAAS,WAAY,OAAO,EACzB,QAAQA,CAAI,GAAK,EACnC,EACEA,IAAS,UACX,EAEF,CACT,CAEA,wBAAwBA,EAAM8H,EAAO,CACnC,KAAK,0BAA0B9H,CAAI,EACnC,KAAK,2BAA2B8H,CAAK,EACrC,KAAK,YAAY,EAAI,CACvB,CACA,0BAA0B9H,EAAM,CAC9B,KAAK,OAAO,QAAQ,CAACub,EAAOxb,IAAa,CACnCA,IAAa,EACfwb,EAAM,SAASvb,EAAM,EAAI,EAEzBub,EAAM,SAAS,KAAK,eAAe,iBAAiB,EAAG,EAAI,CAE/D,CAAC,CACH,CACA,gBAAiB,CACf,IAAMC,EAAa,KAAK,wBAAwB,EAChD,OAAIA,EAAW,SAAW,EACjB,KAEL,KAAK,iBAAmB,GAAKA,EAAW,OAAS,EAC5C,CACL,WAAY,KAAK,cAAc,EAC/B,SAAU,KAAK,gBAAgB,EAC/B,WAAAA,CACF,EAEKA,EAAW,CAAC,CACrB,CACA,mBAAoB,CAClB,OAAO,KAAK,OAAO,IAAID,GAASA,EAAM,SAAS,CAAC,CAClD,CACA,iBAAiBxb,EAAU,CACzB,OAAO,KAAK,OAAOA,CAAQ,EAAE,SAAS,CACxC,CACA,iBAAkB,CAChB,OAAI,KAAK,iBAAiB,SAAW,EAC5B,KAAK,oBAEP,KAAK,iBAAiB,CAAC,EAAE,SAAS,IAAM,GAAO,KAAO,KAC/D,CACA,eAAeK,EAAGC,EAAG,CACnB,GAAI,CAACD,GAAK,CAACC,EACT,MAAO,GAET,GAAI,CAACD,GAAKC,GAAKD,GAAK,CAACC,EACnB,MAAO,GAET,IAAMob,EAAY,CAACrb,EAAE,SACfsb,EAAY,CAACrb,EAAE,SAErB,GAD6B,CAACob,GAAaC,GAAaD,GAAa,CAACC,EAEpE,MAAO,GAET,IAAIjP,EACJ,GAAIgP,EAAW,CACb,IAAME,EAAUvb,EACVwb,EAAUvb,EAChBoM,EAAM,KAAK,qBAAqBkP,EAASC,CAAO,CAClD,KAAO,CACL,IAAMC,EAAYzb,EACZ0b,EAAYzb,EAClBoM,EAAMoP,EAAU,WAAaC,EAAU,UAAYC,GAAUF,EAAU,WAAYC,EAAU,WAAY,CAACE,EAAQC,IAAW,KAAK,qBAAqBD,EAAQC,CAAM,CAAC,CACxK,CACA,OAAOxP,CACT,CACA,cAAc6J,EAAW,CACvB,IAAMrJ,EAAQ,KAAK,SAAS,EACtBuO,EAAavO,EAAQA,EAAM,YAAc,CAACA,CAAK,EAAI,KACnDiP,EAAiB5F,EAAU,eAAe,IAAImB,GAAU,OAAOA,GAAW,SAAWA,EAASA,EAAO,UAAU,GAAK,KAAK,wBAAwB,EAKvJ,MAHI,IADuC,CAAC+D,GAAcA,EAAW,MAAMW,GAAaD,EAAe,KAAKzE,GAAUA,IAAW0E,EAAU,IAAI,IAAM,MAAM,IAIvJ,OAAO7F,EAAU,kBAAqB,UAAYkF,GAAcA,EAAW,OAASlF,EAAU,iBAIpG,CACA,QAAQA,EAAW,CAKjB,MAJI,CAAC,KAAK,cAAcA,CAAS,GAI7B,CADoB,MAAM,QAAQA,CAAS,EAEtC,IAET,KAAK,UAAUA,CAAS,EACxB,KAAK,6BAA6B,CAAC,EACnC,KAAK,aAAa,EAClB,KAAK,SAAS,KAAK,SAAS,CAAC,EACtB,GACT,CACA,eAAerJ,EAAO,CAEpB,GADmBA,EAAM,SACT,CACd,IAAMmP,EAAgBnP,EAClBuO,EAAaY,EAAc,WAC3BZ,GAAc,OAChBA,EAAa,CAAC,EACdja,EAAU,sCAAsC,GAElD,IAAM8a,EAAgB,KAAK,4BAA4Bb,CAAU,EAC3Dc,EAAoB,KAAK,iBAAiB,EAChD,GAAID,EAAgBC,EAClB,KAAK,6BAA6BD,CAAa,UACtCA,EAAgBC,EACzB,QAAS9X,EAAI8X,EAAmB9X,EAAI6X,EAAe7X,IACjD,KAAK,wBAAwB,EAC7B,KAAK,aAAa,EAGtB,IAAM+X,EAAYH,EAAc,WAAa,KAC7C,KAAK,kBAAkB,QAAQI,GAAoBA,EAAiB,SAAS,CAACD,EAAW,EAAI,CAAC,EAC9F,KAAK,iBAAiB,QAAQE,GAAmBA,EAAgB,SAASF,EAAW,EAAI,CAAC,EAC1Ff,EAAW,QAAQ,CAACW,EAAWpc,IAAa,CAC1C,KAAK,OAAOA,CAAQ,EAAE,SAASoc,EAAU,KAAM,EAAI,EACnD,KAAK,mBAAmBA,EAAWpc,CAAQ,CAC7C,CAAC,CACH,KAAO,CACL,IAAM2c,EAAczP,EAChB,KAAK,iBAAiB,EAAI,GAC5B,KAAK,6BAA6B,CAAC,EAErC,KAAK,OAAO,CAAC,EAAE,SAASyP,EAAY,KAAM,EAAI,EAC9C,KAAK,mBAAmBA,EAAa,CAAC,CACxC,CACA,YAAK,uBAAyB,KAAK,iBAAiB,EAAI,EACxD,KAAK,oCAAoC,EACzC,KAAK,YAAY,EACVtP,GAAU,QAAQ,CAC3B,CACA,4BAA4BoO,EAAY,CACtC,IAAIa,EAAgBb,EAAW,OAC/B,OAAIa,EAAgB,KAAK,mBACvBb,EAAW,OAAO,KAAK,gBAAgB,EACvCja,EAAU,sHAAsH,EAChI8a,EAAgB,KAAK,kBAEhBA,CACT,CACA,eAAe/a,EAAQ,CACrB,IAAM2L,EAAQ,KAAK,SAAS,EAC5B,GAAIA,GAAS,KACX,MAAO,GAET,GAAM,CACJ,SAAA0P,CACF,EAAI1P,EACE2P,EAAS,CAAC,EAChB,GAAID,EAAU,CACZ,IAAMP,EAAgBnP,EACtB2P,EAAO,KAAK,GAAIR,EAAc,YAAc,CAAC,CAAE,CACjD,MACEQ,EAAO,KAAK3P,CAAK,EAGnB,OAAO2P,EADiBD,GAAYA,IAAa,KAAO,OAAS,OACpC,EAAEE,GAAK,KAAK,0BAA0Bvb,EAAQub,CAAC,CAAC,CAC/E,CACA,UAAUvb,EAAQ,CAChB,MAAM,UAAUA,CAAM,EACtB,KAAK,iBAAiBA,CAAM,EAC5B,KAAK,oBAAsB,KAAK,uBAAuBA,EAAO,mBAAmB,EACjF,KAAK,kBAAoBA,EAAO,kBAChC,KAAK,eAAiB,IAAIsZ,GAC1B,KAAK,eAAe,KAAKtZ,EAAQ,KAAK,wBAAwB,CAAC,EAC/D,KAAK,wBAAwB,EAC7B,KAAK,aAAa,EAClB,KAAK,oCAAoC,EACrC,KAAK,WAAW,GAClB,KAAK,YAAY,aAAa,WAAY,IAAI,CAElD,CACA,iBAAiBA,EAAQ,CACvB,KAAK,iBAAmBA,EAAO,kBAAoB,EAC/C,KAAK,iBAAmB,IAC1BC,EAAU,wEAAwE,EAClF,KAAK,iBAAmB,GAE1B,KAAK,2BAA6BD,EAAO,4BAA8B,EACnE,KAAK,2BAA6B,IACpCC,EAAU,kFAAkF,EAC5F,KAAK,2BAA6B,GAEhC,KAAK,2BAA6B,KAAK,mBACzCA,EAAU,mGAAmG,EAC7G,KAAK,2BAA6B,KAAK,iBAE3C,CACA,cAAe,CACb,IAAMga,EAAQ,KAAK,kBAAkB,IAAInB,EAAU,EACnD,KAAK,OAAO,KAAKmB,CAAK,EACtBA,EAAM,YAAY,kBAAkB,EACpC,KAAK,YAAY,YAAYA,EAAM,OAAO,CAAC,EAC3C,IAAMuB,EAAiB,KAAK,mBAAmB,EAC/C,KAAK,iBAAiB,KAAKA,CAAc,EACzC,KAAK,YAAY,YAAYA,CAAc,EAC3C,KAAK,uBAAuBvB,CAAK,EACjC,KAAK,UAAUA,CAAK,EACpB,IAAMxb,EAAW,KAAK,iBAAiB,EAAI,EAC3C,KAAK,qBAAqBA,EAAU0C,GAAW,KAAK,WAAWA,CAAO,CAAC,EACvE,KAAK,oBAAoB8Y,EAAOxb,CAAQ,CAC1C,CACA,yBAA0B,CACxB,IAAMgd,EAAqB,SAAS,cAAc,KAAK,EACvD,KAAK,oBAAoB,KAAKA,CAAkB,EAChDA,EAAmB,UAAU,IAAI,qBAAqB,EACtD,IAAMP,EAAmB,KAAK,mBAAmB,KAAK,kBAAmBO,EAAoB,KAAK,EAC5FN,EAAkB,KAAK,mBAAmB,KAAK,iBAAkBM,EAAoB,IAAI,EAC/F,KAAK,YAAY,YAAYA,CAAkB,EAC/C,IAAMC,EAAQ,KAAK,oBAAoB,OAAS,EAC1CC,EAAgB,KAAK,iBAC3B,KAAK,qBAAqBT,EAAkBQ,EAAOC,CAAa,EAChE,KAAK,oBAAoBR,EAAiBO,EAAOC,CAAa,EACzD,KAAK,WAAW,IACnBT,EAAiB,cAAc,KAAK,QAAQ,EAC5CC,EAAgB,cAAc,KAAK,QAAQ,EAE/C,CACA,mBAAmBS,EAAgBH,EAAoBI,EAAO,CAC5D,IAAMC,EAAgB,KAAK,kBAAkB,IAAI7G,EAAe,EAChE,OAAA2G,EAAe,KAAKE,CAAa,EACjCA,EAAc,YAAY,8BAA8B,EACxDA,EAAc,YAAY,gCAAgCD,CAAK,EAAE,EACjEJ,EAAmB,YAAYK,EAAc,OAAO,CAAC,EAC9CA,CACT,CACA,uBAAuBC,EAAqB,CAC1C,OAAOA,IAAwB,OAASA,IAAwB,KAAOA,EAAsB,KAC/F,CACA,yBAA0B,CACxB,IAAMC,EAAgB,KAAK,eAAe,iBAAiB,EAC3D,KAAK,kBAAoBA,EAAc,IAAI7F,GAAU,OAAOA,GAAW,SAAW,KAAK,4BAA4BA,CAAM,EAAI,KAAK,uBAAuBA,CAAM,CAAC,CAClK,CACA,uBAAuB8D,EAAO,CAC5B,KAAK,kBAAkB,QAAQjE,GAAc,CAC3CiE,EAAM,UAAUjE,CAAU,CAC5B,CAAC,EACDiE,EAAM,YAAY,KAAK,kBAAkB,QAAU,CAAC,CACtD,CACA,4BAA4B9D,EAAQ,CAClC,MAAO,CACL,MAAOA,EACP,KAAM,KAAK,UAAUA,CAAM,CAC7B,CACF,CACA,uBAAuBA,EAAQ,CAC7B,GAAM,CACJ,WAAA8F,CACF,EAAI9F,EACE+F,EAAe,KAAK,eAAe,gBAAgB/F,EAAO,UAAU,EAC1E,MAAO,CACL,MAAO8F,EACP,KAAMC,EAAe,KAAK,cAAc,kBAAkB,EAAEA,EAAa,WAAYA,EAAa,WAAW,EAAI,KAAK,UAAUD,CAAU,CAC5I,CACF,CACA,oBAAqB,CACnB,MAAO,EACT,CACA,iBAAkB,CAChB,MAAO,CAAC,CACV,CACA,kBAAmB,CACjB,MAAO,eACT,CACA,oBAAqB,CACnB,IAAME,EAAe,KAAK,gBAAgB,EAC1C,KAAK,oBAAoB,EACzB,KAAK,iCAAiC,KAAK,uBAAwBA,CAAY,CACjF,CACA,qBAAsB,CACpB,IAAIC,EAAyB,GACzBC,EAA6B,GACjC,QAAS5d,EAAW,EAAGA,EAAW,KAAK,iBAAiB,EAAGA,IACrD,KAAK,sBAAsBA,CAAQ,EACrC2d,EAAyB3d,EAEzB4d,EAA6B,GAGjC,GAAI,KAAK,2BAA2BA,CAA0B,EAC5D,KAAK,wBAAwB,EAC7B,KAAK,aAAa,MACb,CACL,IAAMC,EAAiB,KAAK,wBAA0B,KAAK,iBAAiB,EAAI,EAChF,GAAIF,EAAyBE,EAAgB,CAC3C,KAAK,6BAA6BA,EAAiB,CAAC,EACpD,IAAMC,EAAsBH,EAAyB,EAC/CI,EAAwBF,EAAiBC,EAC3CC,EAAwB,GAC1B,KAAK,6BAA6BD,EAAqBC,CAAqB,EAE9E,KAAK,oCAAoC,CAC3C,CACF,CACA,KAAK,uBAAyBJ,CAChC,CACA,iCAAiCA,EAAwBD,EAAc,CACrE,KAAK,OAAO,QAAQ,CAAClC,EAAOxb,IAAa,CACvC,IAAMge,EAAW,KAAK,oBAAoBhe,EAAU2d,CAAsB,EAC1EnC,EAAM,YAAYwC,GAAY,KAAK,kBAAkB,QAAU,CAAC,EAC5Dhe,IAAa,IACfkW,GAAa,KAAK,oBAAoB,CAAC,EAAG8H,CAAQ,EAClD,KAAK,kBAAkB,CAAC,EAAE,YAAYA,CAAQ,EAC9C,KAAK,iBAAiB,CAAC,EAAE,YAAYA,CAAQ,EAEjD,CAAC,EACD,KAAK,iBAAiB,QAAQ,CAACtb,EAASua,IAAU,CAChDgB,EAAcvb,EAAS,KAAK,uBAAuBua,CAAK,CAAC,CAC3D,CAAC,EACD,IAAMT,GAAakB,GAAgB,KAAK,gBAAgB,KAAO,KAC/D,KAAK,kBAAkB,QAAQjB,GAAoB,CACjDA,EAAiB,SAAS,CAACD,EAAW,EAAI,CAC5C,CAAC,EACD,KAAK,iBAAiB,QAAQE,GAAmB,CAC/CA,EAAgB,SAASF,EAAW,EAAI,CAC1C,CAAC,EACD,KAAK,aAAa,CAAC9Z,EAASua,EAAOjd,EAAUub,IAAmB,CAC9D,KAAK,oBAAoB7Y,EAASua,EAAQ1B,CAAc,EACxD,KAAK,mBAAmB7Y,EAAS,KAAK,oBAAoB1C,EAAU2d,CAAsB,CAAC,CAC7F,CAAC,EACD,KAAK,iBAAiB,CACxB,CACA,2BAA2BC,EAA4B,CACrD,OAAOA,GAA8B,KAAK,iBAAiB,EAAI,KAAK,kBAAoB,CAAC,KAAK,WAAW,CAC3G,CACA,6BAA6BM,EAAeC,EAAa,CACvD,GAAID,GAAiB,KAAK,iBAAiB,EACzC,OAEF,KAAK,iBAAiB,KAAK,OAAQA,EAAeC,CAAW,EAC7D,KAAK,eAAe,KAAK,iBAAkBD,EAAeC,CAAW,EACrE,KAAK,oBAAoBD,EAAeC,CAAW,EACnD,IAAMC,EAAoB,KAAK,IAAIF,EAAgB,EAAG,CAAC,EACvD,KAAK,eAAe,KAAK,oBAAqBE,EAAmBD,CAAW,EAC5E,KAAK,iBAAiB,KAAK,kBAAmBC,EAAmBD,CAAW,EAC5E,KAAK,iBAAiB,KAAK,iBAAkBC,EAAmBD,CAAW,CAC7E,CACA,eAAeE,EAAUH,EAAeC,EAAa,CAC3B,KAAK,YAAYE,EAAUH,EAAeC,CAAW,EAC7D,QAAQzb,GAAWkS,GAAkBlS,CAAO,CAAC,CAC/D,CACA,iBAAiB4b,EAAYJ,EAAeC,EAAa,CAC7B,KAAK,YAAYG,EAAYJ,EAAeC,CAAW,EAC/D,QAAQI,GAAQ,CAChC3J,GAAkB2J,EAAK,OAAO,CAAC,EAC/B,KAAK,YAAYA,CAAI,CACvB,CAAC,CACH,CACA,YAAYC,EAAON,EAAeC,EAAa,CAC7C,OAAOA,GAAe,KAAOK,EAAM,OAAON,CAAa,EAAIM,EAAM,OAAON,EAAeC,CAAW,CACpG,CACA,iBAAiB5c,EAAQ,CAGvB,GAFA,MAAM,iBAAiBA,CAAM,EAC7B,KAAK,iBAAiB,EAClB,CAACA,GAAQ,cACX,GAAI,KAAK,WAAW,EAClB,KAAK,YAAY,MAAM,MAClB,CACL,IAAMkd,EAAa,KAAK,UAAU,CAAC,EAAE,CAAC,EACtC,GAAI,CAACA,EACH,OAEEA,aAAsBC,IACxBD,EAAW,gBAAgB,EAAE,MAAM,CAEvC,CAEJ,CACA,kBAAmB,CACjB,MAAM,iBAAiB,EACvB,IAAME,EAAe,KAAK,SAAS,EACnC,KAAK,qBAAqBA,CAAY,EACtC,IAAIhB,EAAyB,GACzBiB,EAAgC,GAChCC,EAAoB,GAClBnB,EAAe,KAAK,gBAAgB,EAC1C,QAAS1d,EAAW,KAAK,iBAAiB,EAAI,EAAGA,GAAY,EAAGA,IAC9D,GAAI,KAAK,sBAAsBA,CAAQ,EACjC2d,IAA2B,KAC7BA,EAAyB3d,EACzB4e,EAAgC5e,OAE7B,CACL,IAAM8e,EAA4B9e,GAAY,KAAK,4BAA8B,CAAC,KAAK,sBAAsBA,EAAW,CAAC,EACnH+e,EAAuC/e,EAAW2d,GACpDmB,GAA6BC,KAC/B,KAAK,6BAA6B/e,EAAU,CAAC,EAC7C6e,EAAoB,GAChBE,GACFH,IAGN,CAEF,IAAII,EAAyC,GACzC,KAAK,iBAAiB,EAAI,KAAK,6BACjC,KAAK,oCAAoC,EACzCA,EAAyC,IAEvC,KAAK,2BAA2BJ,IAAkC,KAAK,iBAAiB,EAAI,CAAC,IAC/F,KAAK,wBAAwB,EAC7B,KAAK,aAAa,EAClBI,EAAyC,IAEvCA,GACF,KAAK,iCAAiCJ,EAA+BlB,CAAY,EAE/EmB,GACF,KAAK,4BAA4B,EAEnC,KAAK,uBAAyBD,CAChC,CACA,mBAAmBK,EAAoBjf,EAAU,CAC/C,IAAIsa,EAAc,KAAK,UAAU2E,CAAkB,EACnD,GAAIxY,GAAY,KAAK,iBAAiB,EAAG,CACvC,IAAMyY,EAAsB,KAAK,kBAC3BC,EAAkB,KAAK,OAAOnf,CAAQ,EAAE,SAAS,EACjD+a,EAAe,KAAK,UAAUoE,CAAe,EACnD7E,EAAc4E,EAAoB,CAChC,gBAAAC,EACA,aAAApE,EACA,YAAAT,CACF,CAAC,CACH,MAAW,OAAO,KAAK,mBAAsB,WAC3CA,EAAc,KAAK,mBAErB,OAAOA,CACT,CAEA,kBAAmB,CACjB,IAAM8E,EAAkB,KAAK,cAAc,kBAAkB,EAC7D,KAAK,aAAa,CAAC1c,EAASua,EAAOjd,EAAUub,IAAmB,CAC9D,GAAI,EAAE7Y,aAAmBgc,IACvB,OAEF,IAAMpE,EAAc2C,IAAU,GAAK1B,EAAiB,EAAI,eAAiB0B,IAAU,EAAI,YAAc,aAC/FoC,EAAYpC,IAAU,GAAK1B,EAAiB,EAAI6D,EAAgB,sBAAuB,mBAAmB,EAAInC,IAAU,EAAImC,EAAgB,kBAAmB,cAAc,EAAIA,EAAgB,oBAAqB,iBAAiB,EAC7O1c,EAAQ,oBAAoB,KAAK,mBAAmB4X,EAAata,CAAQ,CAAC,EAC1E0C,EAAQ,kBAAkB2c,CAAS,CACrC,CAAC,CACH,CAEA,gBAAgB3c,EAASqF,EAAO+N,EAAoB,CAC9CpT,aAAmBgc,IACrBhc,EAAQ,SAASqF,GAAS,KAAO,OAAOA,CAAK,EAAI,KAAM,EAAI,CAE/D,CACA,oBAAoBrF,EAAS2F,EAAW,CAClC3F,aAAmBuC,GACrBgZ,EAAcvb,EAAQ,OAAO,EAAG2F,CAAS,CAE7C,CACA,mBAAmB3F,EAASsb,EAAU,CAChCtb,aAAmBuC,GACrBiR,GAAaxT,EAAQ,OAAO,EAAGsb,CAAQ,CAE3C,CACA,sBAAsBtb,EAASuB,EAAU,CACnCvB,aAAmBgc,IACrBhc,EAAQ,cAAcuB,CAAQ,CAElC,CACA,aAAaqb,EAAI,CACf,KAAK,kBAAkB,EAAE,QAAQ,CAACrf,EAAMD,IAAa,CACnD,KAAK,yBAAyBA,EAAUC,EAAMqf,CAAE,CAClD,CAAC,CACH,CACA,qBAAqBtf,EAAUsf,EAAI,CACjC,IAAMrf,EAAO,KAAK,iBAAiBD,CAAQ,EAC3C,KAAK,yBAAyBA,EAAUC,EAAMqf,CAAE,CAClD,CACA,yBAAyBtf,EAAUC,EAAMqf,EAAI,CAC3C,IAAM/D,EAAiB,KAAK,kBAAkBtb,CAAI,EAC5Csf,EAAS,KAAK,UAAUvf,CAAQ,EACtC,QAASid,EAAQ,EAAGA,EAAQsC,EAAO,OAAQtC,IAAS,CAClD,IAAMuC,EAAQD,EAAOtC,CAAK,EACtBuC,GAAS,MACXF,EAAGE,EAAOvC,EAAOjd,EAAUub,CAAc,CAE7C,CACF,CACA,oBAAoBvb,EAAU2d,EAAwB,CACpD,OAAI,KAAK,WAAW,EACX,GAEL3d,IAAa,EACR,GAEFA,EAAW2d,EAAyB,CAC7C,CACA,uBAAuB3d,EAAU,CAC/B,IAAMC,EAAO,KAAK,iBAAiBD,CAAQ,EAE3C,OADuB,KAAK,kBAAkBC,CAAI,EAC1B,CAC1B,CAGA,sBAAsBD,EAAU,CAQ9B,MAPI,EAAAA,GAAY,KAAK,iBAAiB,GAGzB,KAAK,iBAAiBA,CAAQ,IAC9B,SAGT,KAAK,UAAUA,CAAQ,EAAE,KAAKkb,GAAKA,GAAK,IAAI,EAIlD,CACA,kBAAmB,CACjB,OAAO,KAAK,OAAO,MACrB,CACA,yBAA0B,CACxB,IAAMO,EAAa,CAAC,EACpB,QAASzb,EAAW,EAAGA,EAAW,KAAK,iBAAiB,EAAGA,IACrD,KAAK,sBAAsBA,CAAQ,GACrCyb,EAAW,KAAK,KAAK,gBAAgBzb,CAAQ,CAAC,EAGlD,OAAOyb,CACT,CACA,qCAAsC,CACpC,GAAI,MAAK,WAAW,EAGpB,QAAShX,EAAI,KAAK,iBAAiB,EAAGA,EAAI,KAAK,2BAA4BA,IACzE,KAAK,wBAAwB,EAC7B,KAAK,aAAa,CAEtB,CACA,kBAAkByT,EAAQ,CACxB,YAAK,6BAA6B,KAAK,WAAW,EAAI,EAAI,KAAK,0BAA0B,EACzF,KAAK,OAAO,QAAQsD,GAAS,KAAK,UAAUA,CAAK,CAAC,EAClD,KAAK,kBAAkB,QAAQ,CAACiB,EAAkBQ,IAAU,KAAK,qBAAqBR,EAAkBQ,EAAO,KAAK,eAAiBA,CAAK,CAAC,EAC3I,KAAK,iBAAiB,QAAQ,CAACP,EAAiBO,IAAU,KAAK,oBAAoBP,EAAiBO,EAAO,KAAK,eAAiBA,CAAK,CAAC,EACvI,KAAK,iBACL,KAAK,aAAava,GAAW,KAAK,WAAWA,CAAO,CAAC,EACrD,KAAK,iBAAiB,EACtB,KAAK,oCAAoC,EACzC,KAAK,uBAAyB,KACzBwV,GACH,KAAK,YAAY,EAEZ7K,GAAU,QAAQ,CAC3B,CACA,UAAUmO,EAAO,CAEf,IAAMiE,EADY,KAAK,cAAc,kBAAkB,EACtB,wBAAyB,oBAAoB,EAC9EjE,EAAM,SAAS,KAAK,eAAe,iBAAiB,EAAG,EAAI,EAAE,aAAaiE,CAAc,EAAE,YAAY,KAAK,WAAW,GAAK,KAAK,kBAAkB,QAAU,CAAC,CAC/J,CACA,qBAAqBhD,EAAkBQ,EAAOC,EAAe,CAC3D,KAAK,kBAAkBT,EAAkBQ,EAAO,KAAK,kBAAkB,KAAK,EAAG,KAAK,UAAU,cAAc,EAAGC,CAAa,CAC9H,CACA,oBAAoBR,EAAiBO,EAAOC,EAAe,CACzD,KAAK,kBAAkBR,EAAiBO,EAAO,KAAK,kBAAkB,IAAI,EAAG,KAAK,UAAU,aAAa,EAAGC,CAAa,CAC3H,CACA,kBAAkBG,EAAeJ,EAAOlV,EAAO2X,EAAOxC,EAAe,CACnE,KAAK,2BAA2BG,EAAc,SAAStV,EAAO,EAAI,EAAE,QAAQ,2BAA2B,KAAK,UAAU,CAAC,IAAImV,CAAa,EAAE,EAAE,SAASwC,CAAK,EAAGzC,CAAK,CACpK,CACA,6BAA8B,CAC5B,KAAK,kBAAkB,QAAQ,CAACI,EAAeJ,IAAU,KAAK,2BAA2BI,EAAeJ,CAAK,CAAC,EAC9G,KAAK,iBAAiB,QAAQ,CAACI,EAAeJ,IAAU,KAAK,2BAA2BI,EAAeJ,CAAK,CAAC,CAC/G,CACA,2BAA2BI,EAAeJ,EAAO,CAC/CI,EAAc,YAAY,KAAK,WAAW,GAAKJ,EAAQ,CAAC,CAC1D,CACA,WAAWva,EAAS,CAClB,KAAK,gBAAgBA,EAAS,IAAI,EAClC,KAAK,mBAAmBA,EAAS,KAAK,WAAW,CAAC,CACpD,CAEA,mBAAmBwK,EAAOlN,EAAU,CAClC,IAAM2f,EAAS,KAAK,mBAAmBzS,CAAK,EAC5C,KAAK,aAAa,CAACxK,EAASua,EAAO2C,IAAe,CAC5CA,IAAe5f,GAGnB,KAAK,gBAAgB0C,EAASid,EAAO1C,CAAK,GAAK,KAAO0C,EAAO1C,CAAK,EAAI,IAAI,CAC5E,CAAC,CACH,CAGA,2BAA2BlV,EAAO,CAChC,KAAK,aAAa,CAACrF,EAASua,EAAOjd,IAAa,CAC9C,KAAK,gBAAgB0C,EAASua,IAAU,GAAKjd,IAAa,EAAI+H,EAAQ,KAAM,EAAI,CAClF,CAAC,CACH,CACA,kBAAkB6U,EAAU,CAC1B,OAAOA,IAAa,KAAK,mBAC3B,CACA,oBAAoBpB,EAAOxb,EAAU,CAC/B,KAAK,WAAW,IAGpBwb,EAAM,cAAc,KAAK,QAAQ,EACjC,KAAK,qBAAqBxb,EAAU0C,GAAW,CAC7C,KAAK,sBAAsBA,EAAS,KAAK,QAAQ,CACnD,CAAC,EACH,CAEA,0BAA0BnB,EAAQse,EAAa,CAC7C,IAAMC,EAAY,KAAK,aAAave,EAAO,IAAI,EACzCoe,EAAS,KAAK,mBAAmBE,CAAW,EAC5CE,EAAqB,KAAK,eAAe,gBAAgBF,EAAY,IAAI,EACzEG,EAAqB,KAAK,qBAAqBD,EAAoBJ,EAAQG,CAAS,EAC1F,OAAIE,IAGAF,GAAa,KACR,KAAK,kBAAkBD,EAAY,IAAI,EAEzC,KAAK,qBAAqBF,EAAQG,EAAWD,EAAate,CAAM,EACzE,CACA,qBAAqBwe,EAAoBJ,EAAQG,EAAW,CAC1D,GAAIC,GAAsB,KACxB,OAEF,GAAM,CACJ,UAAAE,CACF,EAAIF,EACJ,GAAIE,GAAa,MAAQ,CAACN,EAAO,KAAKzE,GAAKA,GAAK,IAAI,EAClD,OAAO+E,EAAUN,EAAQG,CAAS,CAGtC,CACA,QAAQA,EAAW,CACjB,OAAOA,GAAa,MAAQ,OAAOA,GAAc,UAAYA,EAAU,KAAK,EAAE,SAAW,CAC3F,CACA,kBAAmB,CACjB,MAAO,EACT,CACF,EAGII,GAAe,cAAc7E,EAAa,CAC5C,UAAU9Z,EAAQ,CAChB,MAAM,UAAUA,CAAM,EACtB,KAAK,mBAAqBA,CAC5B,CACA,kBAAkB4e,EAAY,CAC5B,OAAQA,EAAY,CAClB,IAAK,SACL,IAAK,WACH,GAAI,KAAK,mBAAmB,sBAC1B,MAAO,GAET,MACF,IAAK,cACL,IAAK,qBACH,GAAI,KAAK,mBAAmB,2BAC1B,MAAO,GAET,MACF,IAAK,WACL,IAAK,kBACH,GAAI,KAAK,mBAAmB,wBAC1B,MAAO,GAET,MACF,IAAK,UACH,GAAI,KAAK,mBAAmB,qBAC1B,MAAO,GAET,MACF,IAAK,QACH,MAAO,GACT,IAAK,WACH,MAAO,EACX,CACA,MAAO,EACT,CACA,qBAAqBR,EAAQG,EAAWD,EAAa,CACnD,IAAMO,EAAa,KAAK,WAAW,EAC7BC,EAAgBV,EAAO,CAAC,GAAK,KAAOS,EAAWT,EAAO,CAAC,EAAGG,CAAS,EAAI,EAC7E,OAAQD,EAAY,KAAM,CACxB,IAAK,SACH,OAAOQ,IAAkB,EAC3B,IAAK,WACH,OAAOA,IAAkB,EAC3B,IAAK,cACH,OAAOA,EAAgB,EACzB,IAAK,qBACH,OAAOA,GAAiB,EAC1B,IAAK,WACH,OAAOA,EAAgB,EACzB,IAAK,kBACH,OAAOA,GAAiB,EAC1B,IAAK,UACH,CACE,IAAMC,EAAkBF,EAAWT,EAAO,CAAC,EAAGG,CAAS,EACvD,OAAO,KAAK,mBAAmB,iBAAmBO,GAAiB,GAAKC,GAAmB,EAAID,EAAgB,GAAKC,EAAkB,CACxI,CACF,IAAK,QACH,OAAO,KAAK,QAAQR,CAAS,EAC/B,IAAK,WACH,MAAO,CAAC,KAAK,QAAQA,CAAS,EAChC,QACE,OAAAte,EAAU,8BAAgCqe,EAAY,KAAO,0EAA0E,EAChI,EACX,CACF,CACF,EAGIU,GAAY,GACZC,GAAY,GACZC,GAAY,GACZC,GAAY,GACZC,GAAY,GACZC,GAAY,GAChB,SAASC,GAA+Bte,EAAO,CAC7C,OAAIA,EAAM,QAAUA,EAAM,SAAWA,EAAM,QAClC,GAEkBA,EAAM,IAAI,SAAW,CAElD,CACA,SAASue,GAAgCxK,EAAKT,EAAetV,EAAS4E,EAAQ4b,EAAS,CACrF,IAAMC,EAAa7b,EAASA,EAAO,UAAU,EAAE,sBAAwB,OACvE,GAAI,CAAC6b,EACH,MAAO,GAET,IAAMzf,EAAS+U,EAAI,oBAAoB,CACrC,MAAOT,EACP,QAAAkL,EACA,OAAA5b,EACA,KAAM5E,EACN,KAAMA,EAAQ,KACd,OAAQ4E,EAAO,UAAU,CAC3B,CAAC,EACD,MAAI,GAAA6b,GACuBA,EAAWzf,CAAM,EAM9C,CACA,SAAS0f,GAAsC3K,EAAKT,EAAeqL,EAAgB/b,EAAQ,CACzF,IAAMU,EAASV,EAAO,cAAc,EAC9B6b,EAAanb,GAAUA,EAAO,4BACpC,GAAI,CAACvB,EAAQ0c,CAAU,EACrB,MAAO,GAET,IAAMzf,EAAS+U,EAAI,oBAAoB,CACrC,OAAAzQ,EACA,OAAAV,EACA,eAAA+b,EACA,MAAOrL,CACT,CAAC,EACD,MAAO,CAAC,CAACmL,EAAWzf,CAAM,CAC5B,CACA,SAAS4f,GAAuBtL,EAAe,CAC7C,GAAM,CACJ,QAAAuL,CACF,EAAIvL,EACAwL,EACJ,OAAQD,EAAS,CACf,KAAKb,GACHc,EAAOvN,EAAQ,EACf,MACF,KAAK0M,GACHa,EAAOvN,EAAQ,EACf,MACF,KAAK2M,GACHY,EAAOvN,EAAQ,EACf,MACF,KAAK4M,GACHW,EAAOvN,EAAQ,EACf,MACF,KAAK6M,GACHU,EAAOvN,EAAQ,EACf,MACF,KAAK8M,GACHS,EAAOvN,EAAQ,EACf,MACF,QACEuN,EAAOxL,EAAc,IACzB,CACA,OAAOwL,CACT,CACA,SAASC,GAAaxZ,EAAKyZ,EAA+B,GAAO,CAC/D,OAAIzZ,IAAQgM,EAAQ,OACX,GAEL,CAACyN,GAAgCzZ,IAAQgM,EAAQ,UAC5C0N,GAAkB,EAEpB,EACT,CAGA,IAAIC,GAAmB,cAAc/C,EAAqB,CACxD,YAAYnQ,EAAQmT,EAAY,gBAAiBC,EAAY,OAAQ,CACnE,MAAMpT,EAAQmT,EAAWC,CAAS,CACpC,CACA,eAAgB,CACd,MAAM,cAAc,EAChB,KAAK,OAAO,oBACd,KAAK,4BAA4B,CAErC,CACA,SAAS5Z,EAAOmQ,EAAQ,CACtB,OAAI,KAAK,OAAO,QAAUnQ,IACxB,KAAK,OAAO,MAAQzD,EAAQyD,CAAK,EAAIA,EAAQ,IAExC,MAAM,SAASA,EAAOmQ,CAAM,CACrC,CAEA,cAAcnQ,EAAO,CACnB,KAAK,SAASA,EAAO,EAAI,CAC3B,CACA,6BAA8B,CAC5B,IAAM6Z,EAAU,IAAI,OAAO,IAAI,KAAK,OAAO,kBAAkB,GAAG,EAC1DC,EAAoBtf,GAAS,CAC5Bse,GAA+Bte,CAAK,GAGrCA,EAAM,KAAO,CAACqf,EAAQ,KAAKrf,EAAM,GAAG,GACtCA,EAAM,eAAe,CAEzB,EACA,KAAK,oBAAoB,KAAK,OAAQ,CACpC,QAASsf,EACT,MAAOngB,GAAK,CACV,IAAMqT,EAAOrT,EAAE,eAAe,QAAQ,MAAM,EACxCqT,GAAQA,EAAK,MAAM,EAAE,EAAE,KAAK+M,GAAK,CAACF,EAAQ,KAAKE,CAAC,CAAC,GACnDpgB,EAAE,eAAe,CAErB,CACF,CAAC,CACH,CACF,EACIqgB,GAA2B,CAC7B,SAAU,sBACV,UAAWN,EACb,EAGIO,GAAqB,cAAcP,EAAiB,CACtD,YAAYlT,EAAQ,CAClB,MAAMA,EAAQ,kBAAmB,QAAQ,CAC3C,CACA,eAAgB,CACd,MAAM,cAAc,EACpB,KAAK,oBAAoB,KAAK,OAAQ,CACpC,KAAM,IAAM,CACV,IAAM0T,EAAe,WAAW,KAAK,OAAO,KAAK,EAC3Cla,EAAQ,MAAMka,CAAY,EAAI,GAAK,KAAK,eAAeA,EAAa,SAAS,CAAC,EAChF,KAAK,QAAUla,GACjB,KAAK,SAASA,CAAK,CAEvB,EACA,MAAO,KAAK,QAAQ,KAAK,IAAI,CAC/B,CAAC,EACD,KAAK,OAAO,KAAO,MACnB,GAAM,CACJ,UAAAma,EACA,IAAAC,EACA,IAAAC,EACA,KAAAC,CACF,EAAI,KAAK,OACL,OAAOH,GAAc,UAAU,KAAK,aAAaA,CAAS,EAC1D,OAAOC,GAAQ,UAAU,KAAK,OAAOA,CAAG,EACxC,OAAOC,GAAQ,UAAU,KAAK,OAAOA,CAAG,EACxC,OAAOC,GAAS,UAAU,KAAK,QAAQA,CAAI,CACjD,CACA,QAAQ,EAAG,CACL,KAAK,IAAI,oBAAoB,IAAM,KAAK,QAC1C,EAAE,eAAe,CAErB,CACA,eAAeta,EAAO,CACpB,GAAIA,IAAU,GACZ,MAAO,GAEL,KAAK,WAAa,OACpBA,EAAQ,KAAK,gBAAgBA,CAAK,GAEpC,IAAMua,EAAM,WAAWva,CAAK,EAC5B,OAAI,KAAK,KAAO,MAAQua,EAAM,KAAK,IACjCva,EAAQ,KAAK,IAAI,SAAS,EACjB,KAAK,KAAO,MAAQua,EAAM,KAAK,MACxCva,EAAQ,KAAK,IAAI,SAAS,GAErBA,CACT,CACA,gBAAgBA,EAAOwa,EAAsB,CAC3C,GAAI,KAAK,WAAa,KACpB,OAAOxa,EAET,GAAIwa,EAAsB,CACxB,IAAMC,EAAc,WAAWza,CAAK,EAAE,QAAQ,KAAK,SAAS,EAC5D,OAAO,WAAWya,CAAW,EAAE,SAAS,CAC1C,CACA,IAAMC,EAAQ,OAAO1a,CAAK,EAAE,MAAM,GAAG,EACrC,GAAI0a,EAAM,OAAS,EAAG,CACpB,GAAIA,EAAM,CAAC,EAAE,QAAU,KAAK,UAC1B,OAAO1a,EACF,GAAI,KAAK,UAAY,EAC1B,MAAO,GAAG0a,EAAM,CAAC,CAAC,IAAIA,EAAM,CAAC,EAAE,MAAM,EAAG,KAAK,SAAS,CAAC,EAE3D,CACA,OAAOA,EAAM,CAAC,CAChB,CACA,OAAON,EAAK,CACV,OAAI,KAAK,MAAQA,EACR,MAET,KAAK,IAAMA,EACXO,GAAsB,KAAK,OAAQ,MAAOP,CAAG,EACtC,KACT,CACA,OAAOC,EAAK,CACV,OAAI,KAAK,MAAQA,EACR,MAET,KAAK,IAAMA,EACXM,GAAsB,KAAK,OAAQ,MAAON,CAAG,EACtC,KACT,CACA,aAAaF,EAAW,CACtB,YAAK,UAAYA,EACV,IACT,CACA,QAAQG,EAAM,CACZ,OAAI,KAAK,OAASA,EACT,MAET,KAAK,KAAOA,EACZK,GAAsB,KAAK,OAAQ,OAAQL,CAAI,EACxC,KACT,CACA,SAASta,EAAOmQ,EAAQ,CACtB,OAAO,KAAK,qBAAqBgD,GAAK,MAAM,SAASA,EAAGhD,CAAM,EAAG,IAAM,KAAMnQ,CAAK,CACpF,CACA,cAAcA,EAAO,CACnB,OAAO,KAAK,qBAAqBmT,GAAK,MAAM,SAASA,EAAG,EAAI,EAAGA,GAAK,CAClE,KAAK,OAAO,MAAQA,CACtB,EAAGnT,CAAK,CACV,CACA,qBAAqB4a,EAAcC,EAAuB7a,EAAO,CAC/D,GAAIzD,EAAQyD,CAAK,EAAG,CAClB,IAAI8a,EAAoB,KAAK,qBAAqB9a,CAAK,EACvD,GAAI8a,GAAqB,KAAK,OAAO,SAAS,MAC5C,OAAOF,EAAa5a,CAAK,EAE3B,GAAI,CAAC8a,EAAmB,CACtB9a,EAAQ,KAAK,gBAAgBA,CAAK,EAClC,IAAM+a,EAAkB,KAAK,eAAe/a,CAAK,EACjD8a,EAAoB9a,GAAS+a,CAC/B,CACA,GAAID,EACF,OAAOD,EAAsB7a,CAAK,CAEtC,CACA,OAAO4a,EAAa5a,CAAK,CAC3B,CACA,UAAW,CACT,GAAI,CAAC,KAAK,OAAO,SAAS,MACxB,OAEF,IAAMgb,EAAa,KAAK,OAAO,MAC/B,OAAI,KAAK,qBAAqBA,CAAU,EAC/B,KAAK,gBAAgBA,EAAY,EAAI,EAEvC,MAAM,SAAS,CACxB,CACA,qBAAqBhb,EAAO,CAC1B,OAAO,OAAOA,GAAU,UAAYA,EAAM,SAAS,GAAG,CACxD,CACF,EACIib,GAA6B,CAC/B,SAAU,wBACV,UAAWhB,EACb,EAGIiB,GAAgC,CAAC,SAAU,WAAY,cAAe,qBAAsB,WAAY,kBAAmB,UAAW,QAAS,UAAU,EAGzJC,GAA6B,KAAM,CACrC,YAAYC,EAAeC,EAAgBC,EAAgB,CACzD,KAAK,cAAgBF,EACrB,KAAK,eAAiBC,EACtB,KAAK,eAAiBC,CACxB,CAIA,iBAAiBnW,EAAO,CACtB,GAAI,CAACA,EACH,OAAO,KAET,IAAMoW,EAAapW,EAAM,UAAY,KAC/BnH,EAAY,KAAK,cAAc,kBAAkB,EACvD,GAAIud,EAAY,CACd,IAAMjH,EAAgBnP,EAEhBqW,GADalH,EAAc,YAAc,CAAC,GACf,IAAID,GAAa,KAAK,iBAAiBA,CAAS,CAAC,EAC5EoH,EAA2BnH,EAAc,WAAa,MAAQ,eAAiB,cACrF,OAAOkH,EAAc,KAAK,IAAIxd,EAAUyd,EAA0BxP,GAAmBwP,CAAwB,CAAC,CAAC,GAAG,CACpH,KAAO,IAAItW,EAAM,OAAS,SAAWA,EAAM,OAAS,WAClD,OAAOnH,EAAUmH,EAAM,KAAMA,EAAM,IAAI,EAClC,CACL,IAAMkP,EAAYlP,EACZuQ,EAAe,KAAK,eAAe,gBAAgBrB,EAAU,IAAI,EACjE,CACJ,WAAAoB,EACA,YAAAiG,EACA,eAAAlI,CACF,EAAIkC,GAAgB,CAAC,EACrB,OAAID,GAAciG,GAAelI,IAAmB,GAClDxV,EAAUyX,EAAYiG,CAAW,EAC1BA,GAEF,KAAK,kBAAkBrH,EAAWqB,CAAY,CACvD,EACF,CACA,aAAalc,EAAQ,CACnB,KAAK,eAAiBA,EAAO,cAC/B,CACA,YAAYwG,EAAO,CACjB,OAAO,KAAK,eAAiB,KAAK,eAAeA,GAAS,IAAI,GAAK,GAAK,OAAOA,CAAK,CACtF,CACF,EAGI2b,GAA6B,cAAcR,EAA2B,CACxE,kBAAkB9G,EAAWlY,EAAS,CACpC,GAAM,CACJ,eAAAqX,CACF,EAAIrX,GAAW,CAAC,EAEhB,OADgBkY,EAAU,MAAQ,WAAab,IAAmB,EAEzD,GAAG,KAAK,YAAYa,EAAU,MAAM,CAAC,IAAI,KAAK,YAAYA,EAAU,QAAQ,CAAC,GAElFA,EAAU,QAAU,KACf,KAAK,YAAYA,EAAU,MAAM,EAEnC,GAAGA,EAAU,IAAI,EAC1B,CACF,EAGA,SAASuH,GAAsBC,EAAc,CAC3C,GAAM,CACJ,mBAAAC,CACF,EAAID,GAAgB,CAAC,EACrB,OAAOC,GAAsB,IAC/B,CAGA,IAAIC,GAAe,cAAc5D,EAAa,CAC5C,aAAc,CACZ,MAAM,cAAc,EACpB,KAAK,YAAc,CAAC,EACpB,KAAK,UAAY,CAAC,CACpB,CACA,QAAQ3e,EAAQ,CACd,OAAI,KAAK,mBAAmB,qBAAuBA,EAAO,mBACjD,GAEF,MAAM,QAAQA,CAAM,CAC7B,CACA,mBAAmBse,EAAa,CAC9B,GAAM,CACJ,OAAA7R,EACA,SAAA+V,EACA,KAAA9jB,CACF,EAAI4f,GAAe,CAAC,EACpB,MAAO,CAAC,KAAK,aAAa7R,CAAM,EAAG,KAAK,aAAa+V,CAAQ,CAAC,EAAE,MAAM,EAAG,KAAK,kBAAkB9jB,CAAI,CAAC,CACvG,CACA,sBAAuB,CACrB,MAAO,IACT,CACA,YAAa,CACX,MAAO,CAAC2P,EAAMoU,IACRpU,IAASoU,EACJ,EAEFpU,EAAOoU,EAAQ,EAAI,EAE9B,CACA,UAAUziB,EAAQ,CAChB,KAAK,mBAAqBA,EAC1B,MAAM,UAAUA,CAAM,EACtB,KAAK,qBAAuB,IAAImiB,GAA2B,KAAK,cAAe,KAAK,eAAgB,KAAK,mBAAmB,eAAe,CAC7I,CACA,yBAA0B,CACxB,OAAOT,EACT,CACA,gBAAgBvgB,EAASqF,EAAO+N,EAAoB,CAClD,IAAMmO,EAAa,CAACnO,GAAsB,KAAK,mBAAmB,gBAAkB,KAAK,mBAAmB,gBAAgB/N,GAAS,IAAI,EAAIA,EAC7I,MAAM,gBAAgBrF,EAASuhB,CAAU,CAC3C,CACA,oBAAqB,CACnB,IAAMJ,EAAqBF,GAAsB,KAAK,kBAAkB,EAClEO,EAAa,SAAS,cAAc,KAAK,EAC/C,OAAAA,EAAW,UAAU,IAAI,gBAAgB,EACzCnM,EAAamM,EAAY,cAAc,EACvC,KAAK,oBAAoBA,EAAY,KAAK,YAAa,OAAQL,CAAkB,EACjF,KAAK,oBAAoBK,EAAY,KAAK,UAAW,KAAML,CAAkB,EACtEK,CACT,CACA,oBAAoBA,EAAYC,EAASC,EAAQP,EAAoB,CACnE,IAAMQ,EAAS,KAAK,kBAAkBR,EAAqB,IAAIpC,GAAiB,CAC9E,mBAAAoC,CACF,CAAC,EAAI,IAAI7B,EAAoB,EAC7BqC,EAAO,YAAY,aAAaD,CAAM,EAAE,EACxCC,EAAO,YAAY,kBAAkB,EACrCF,EAAQ,KAAKE,CAAM,EACnBH,EAAW,YAAYG,EAAO,OAAO,CAAC,CACxC,CACA,oBAAoBnG,EAAeC,EAAa,CAC9C,KAAK,iBAAiB,KAAK,YAAaD,EAAeC,CAAW,EAClE,KAAK,iBAAiB,KAAK,UAAWD,EAAeC,CAAW,CAClE,CACA,UAAUne,EAAU,CAClB,IAAMskB,EAAS,CAAC,EAChB,YAAK,qBAAqBtkB,EAAU,CAAC0C,EAASua,EAAOsH,EAAahJ,IAAmB,CAC/E0B,EAAQ1B,GACV+I,EAAO,KAAK,KAAK,aAAa,KAAK,cAAc5hB,EAAQ,SAAS,CAAC,CAAC,CAAC,CAEzE,CAAC,EACM4hB,CACT,CACA,qBAAqB1I,EAASC,EAAS,CACrC,OAAOD,EAAQ,SAAWC,EAAQ,QAAUD,EAAQ,WAAaC,EAAQ,UAAYD,EAAQ,OAASC,EAAQ,IAChH,CACA,eAAgB,CACd,MAAO,QACT,CACA,aAAa9T,EAAO,CAClB,OAAIA,GAAS,MAGN,MAAMA,CAAK,EAFT,KAEoBA,CAC/B,CACA,cAAcA,EAAO,CACnB,GAAI,OAAOA,GAAU,SACnB,OAAOA,EAET,IAAIyc,EAAaC,GAAU1c,CAAK,EAIhC,OAHIyc,GAAc,MAAQA,EAAW,KAAK,IAAM,KAC9CA,EAAa,MAEX,KAAK,mBAAmB,aACnB,KAAK,mBAAmB,aAAaA,CAAU,EAEjDA,GAAc,MAAQA,EAAW,KAAK,IAAM,IAAM,KAAO,WAAWA,CAAU,CACvF,CACA,gBAAgBxkB,EAAU,CACxB,IAAMC,EAAO,KAAK,iBAAiBD,CAAQ,EACrCkN,EAAQ,CACZ,WAAY,KAAK,cAAc,EAC/B,KAAAjN,CACF,EACM0f,EAAS,KAAK,UAAU3f,CAAQ,EACtC,OAAI2f,EAAO,OAAS,IAClBzS,EAAM,OAASyS,EAAO,CAAC,GAErBA,EAAO,OAAS,IAClBzS,EAAM,SAAWyS,EAAO,CAAC,GAEpBzS,CACT,CACA,UAAUlN,EAAU,CAClB,OAAIA,GAAY,KAAK,YAAY,OACxB,CAAC,KAAM,IAAI,EAEb,CAAC,KAAK,YAAYA,CAAQ,EAAG,KAAK,UAAUA,CAAQ,CAAC,CAC9D,CACA,iBAAiBkN,EAAO,CACtB,OAAO,KAAK,qBAAqB,iBAAiBA,CAAK,GAAK,EAC9D,CACA,kBAAmB,CACjB,IAAIwX,EAAgB,GACpB,YAAK,aAAahiB,GAAW,CAC3B,GAAI,CAACA,EAAQ,gBAAgB,EAAE,SAAS,MAAO,CAC7CgiB,EAAgB,GAChB,MACF,CACF,CAAC,EACMA,CACT,CACF,EAGIC,GAA8B,CAAC,WAAY,cAAe,SAAU,WAAY,aAAc,WAAY,QAAS,UAAU,EAG7HC,GAA2B,cAAc1B,EAA2B,CACtE,kBAAkB9G,EAAWlY,EAAS,CACpC,GAAM,CACJ,eAAAqX,CACF,EAAIrX,GAAW,CAAC,EAEhB,OADgBkY,EAAU,MAAQ,WAAab,IAAmB,EAEzD,GAAGa,EAAU,MAAM,IAAIA,EAAU,QAAQ,GAE9CA,EAAU,QAAU,KACf,GAAGA,EAAU,MAAM,GAErB,GAAGA,EAAU,IAAI,EAC1B,CACF,EAGA,SAASyI,GAAmB9c,EAAO,CACjC,IAAM+c,EAAe/c,GAASA,EAAM,KAAK,EACzC,OAAO+c,IAAiB,GAAK/c,EAAQ+c,CACvC,CAGA,IAAIC,GAAa,cAAc1J,EAAa,CAC1C,aAAc,CACZ,MAAM,YAAY,EAClB,KAAK,iBAAmB2J,GAAQA,EAChC,KAAK,0BAA4BA,GAAQA,GAAQ,KAAO,KAAOA,EAAK,SAAS,EAAE,YAAY,EAC3F,KAAK,eAAiB,CAAC,CACrB,aAAAjK,EACA,MAAAhT,EACA,WAAAyc,CACF,IAAM,CACJ,GAAIA,GAAc,KAChB,MAAO,GAET,OAAQzJ,EAAc,CACpB,IAAK,WACH,OAAOhT,EAAM,QAAQyc,CAAU,GAAK,EACtC,IAAK,cACH,OAAOzc,EAAM,QAAQyc,CAAU,EAAI,EACrC,IAAK,SACH,OAAOzc,IAAUyc,EACnB,IAAK,WACH,OAAOzc,GAASyc,EAClB,IAAK,aACH,OAAOzc,EAAM,QAAQyc,CAAU,IAAM,EACvC,IAAK,WACH,CACE,IAAMvH,EAAQlV,EAAM,YAAYyc,CAAU,EAC1C,OAAOvH,GAAS,GAAKA,IAAUlV,EAAM,OAASyc,EAAW,MAC3D,CACF,QACE,MAAO,EACX,CACF,EACA,KAAK,YAAc,CAAC,EACpB,KAAK,UAAY,CAAC,CACpB,CACA,sBAAuB,CACrB,MAAO,IACT,CACA,UAAUjjB,EAAQ,CAChB,KAAK,iBAAmBA,EACxB,MAAM,UAAUA,CAAM,EACtB,KAAK,QAAU,KAAK,eAAe,EACnC,KAAK,UAAY,KAAK,iBAAiB,gBAAkB,KAAK,iBAAiB,cAAgB,KAAK,iBAAmB,KAAK,2BAC5H,KAAK,qBAAuB,IAAIqjB,GAAyB,KAAK,cAAe,KAAK,cAAc,CAClG,CACA,gBAAiB,CACf,IAAMK,EAAmB,KAAK,iBAAiB,qBAC/C,OAAIA,GACFzjB,EAAU,8DAA8D,EACjE,CAAC,CACN,aAAAuZ,EACA,MAAAhT,EACA,WAAAyc,CACF,IAAMS,EAAiBlK,EAAchT,EAAOyc,CAAU,GAEjD,KAAK,iBAAiB,aAAe,KAAK,cACnD,CACA,gBAAgBxkB,EAAU,CACxB,IAAMC,EAAO,KAAK,iBAAiBD,CAAQ,EACrCkN,EAAQ,CACZ,WAAY,KAAK,cAAc,EAC/B,KAAAjN,CACF,EACM0f,EAAS,KAAK,yBAAyB3f,EAAU,EAAI,EAC3D,OAAI2f,EAAO,OAAS,IAClBzS,EAAM,OAASyS,EAAO,CAAC,GAErBA,EAAO,OAAS,IAClBzS,EAAM,SAAWyS,EAAO,CAAC,GAEpBzS,CACT,CACA,eAAgB,CACd,MAAO,MACT,CACA,qBAAqB0O,EAASC,EAAS,CACrC,OAAOD,EAAQ,SAAWC,EAAQ,QAAUD,EAAQ,WAAaC,EAAQ,UAAYD,EAAQ,OAASC,EAAQ,IAChH,CACA,UAAU7b,EAAU,CAClB,OAAIA,GAAY,KAAK,YAAY,OACxB,CAAC,KAAM,IAAI,EAEb,CAAC,KAAK,YAAYA,CAAQ,EAAG,KAAK,UAAUA,CAAQ,CAAC,CAC9D,CACA,UAAUA,EAAU,CAClB,OAAO,KAAK,yBAAyBA,EAAU,EAAK,CACtD,CACA,yBAAyBA,EAAUklB,EAAkB,CACnD,IAAMZ,EAAS,CAAC,EAChB,YAAK,qBAAqBtkB,EAAU,CAAC0C,EAASua,EAAOsH,EAAahJ,IAAmB,CACnF,GAAI0B,EAAQ1B,EAAgB,CAC1B,IAAIxT,EAAQ0c,GAAU/hB,EAAQ,SAAS,CAAC,EACpCwiB,GAAoB,KAAK,iBAAiB,YAC5Cnd,EAAQ8c,GAAmB9c,CAAK,GAAK,KACrCrF,EAAQ,SAASqF,EAAO,EAAI,GAE9Buc,EAAO,KAAKvc,CAAK,CACnB,CACF,CAAC,EACMuc,CACT,CACA,yBAA0B,CACxB,OAAOK,EACT,CACA,oBAAqB,CACnB,IAAMT,EAAa,SAAS,cAAc,KAAK,EAC/C,OAAAA,EAAW,UAAU,IAAI,gBAAgB,EACzCnM,EAAamM,EAAY,cAAc,EACvC,KAAK,oBAAoBA,EAAY,KAAK,YAAa,MAAM,EAC7D,KAAK,oBAAoBA,EAAY,KAAK,UAAW,IAAI,EAClDA,CACT,CACA,oBAAoBA,EAAYC,EAASC,EAAQ,CAC/C,IAAMC,EAAS,KAAK,kBAAkB,IAAI5C,EAAkB,EAC5D4C,EAAO,YAAY,aAAaD,CAAM,EAAE,EACxCC,EAAO,YAAY,kBAAkB,EACrCF,EAAQ,KAAKE,CAAM,EACnBH,EAAW,YAAYG,EAAO,OAAO,CAAC,CACxC,CACA,oBAAoBnG,EAAeC,EAAa,CAC9C,KAAK,iBAAiB,KAAK,YAAaD,EAAeC,CAAW,EAClE,KAAK,iBAAiB,KAAK,UAAWD,EAAeC,CAAW,CAClE,CACA,mBAAmB0B,EAAa,CAC9B,GAAM,CACJ,OAAA7R,EACA,SAAA+V,EACA,KAAA9jB,CACF,EAAI4f,GAAe,CAAC,EACpB,MAAO,CAAC7R,GAAU,KAAM+V,GAAY,IAAI,EAAE,MAAM,EAAG,KAAK,kBAAkB9jB,CAAI,CAAC,CACjF,CACA,kBAAkBkgB,EAAY,CAE5B,OAAOA,EADuB,CAAC,WAAY,cAAe,OAAO,EACvB,QAAQA,CAAU,GAAK,EAAI,EACvE,CACA,qBAAqBR,EAAQG,EAAWD,EAAate,EAAQ,CAC3D,IAAM4jB,EAAkBxF,EAAO,IAAIzE,GAAK,KAAK,UAAUA,CAAC,CAAC,GAAK,CAAC,EACzDkK,EAAqB,KAAK,UAAUtF,CAAS,EAC7C,CACJ,IAAAuF,EACA,OAAAxf,EACA,OAAAV,EACA,QAAAmgB,EACA,cAAAC,CACF,EAAI,KAAK,iBACT,GAAI1F,EAAY,OAAS,QACvB,OAAO,KAAK,QAAQC,CAAS,EACxB,GAAID,EAAY,OAAS,WAC9B,MAAO,CAAC,KAAK,QAAQC,CAAS,EAEhC,IAAM0F,EAAgB,CACpB,IAAAH,EACA,OAAAxf,EACA,OAAAV,EACA,QAAAmgB,EACA,KAAM/jB,EAAO,KACb,KAAMA,EAAO,KACb,aAAcse,EAAY,KAC1B,MAAOuF,EACP,cAAAG,CACF,EACA,OAAOJ,EAAgB,KAAKjK,GAAK,KAAK,QAAQvR,EAAAhI,EAAA,GACzC6jB,GADyC,CAE5C,WAAYtK,CACd,EAAC,CAAC,CACJ,CACA,iBAAiBhO,EAAO,CACtB,OAAO,KAAK,qBAAqB,iBAAiBA,CAAK,GAAK,EAC9D,CACF,EAGA,SAASuY,GAAS1d,EAAO,CACvB,GAAI,OAAOA,GAAU,SACnB,OAAOA,EAET,GAAI,OAAOA,GAAU,SAAU,CAC7B,IAAM2d,EAAS,SAAS3d,CAAK,EAC7B,OAAI,MAAM2d,CAAM,EACd,OAEKA,CACT,CAEF,CACA,SAASC,GAAiBxD,EAAKC,EAAM,OAAO,UAAW,CACrD,OAAOra,GAAS,CACd,IAAM6d,EAAMH,GAAS1d,CAAK,EAC1B,GAAI,EAAA6d,GAAO,MAAQA,EAAMzD,GAAOyD,EAAMxD,GAGtC,OAAOwD,CACT,CACF,CACA,SAASC,GAAoB9d,EAAO+d,EAAiB,CACnD,OAAO/d,EAAM,SAAS,EAAE,SAAS+d,EAAiB,GAAG,CACvD,CACA,SAASC,GAAsBC,EAAOC,EAAM,CAC1C,IAAM3B,EAAS,CAAC,EAChB,QAAS7f,EAAIuhB,EAAOvhB,GAAKwhB,EAAMxhB,IAC7B6f,EAAO,KAAK7f,CAAC,EAEf,OAAO6f,CACT,CAOA,SAAS4B,GAAoBC,EAAOC,EAAmBC,EAAkB,CACvE,OAAI,OAAOF,GAAU,SACZ,GAEFA,EAAM,SAAS,EAAE,QAAQ,IAAKE,CAAgB,EAAE,QAAQ,0BAA2B,KAAKD,CAAiB,EAAE,CACpH,CAGA,SAASE,GAAeC,EAAMC,EAAc,GAAMC,EAAY,IAAK,CACjE,GAAI,CAACF,EACH,OAAO,KAET,IAAIG,EAAa,CAACH,EAAK,YAAY,EAAGA,EAAK,SAAS,EAAI,EAAGA,EAAK,QAAQ,CAAC,EAAE,IAAII,GAAQC,GAAoBD,EAAM,CAAC,CAAC,EAAE,KAAKF,CAAS,EACnI,OAAID,IACFE,GAAc,IAAM,CAACH,EAAK,SAAS,EAAGA,EAAK,WAAW,EAAGA,EAAK,WAAW,CAAC,EAAE,IAAII,GAAQC,GAAoBD,EAAM,CAAC,CAAC,EAAE,KAAK,GAAG,GAEzHD,CACT,CACA,IAAIG,GAAmBV,GAAS,CAC9B,GAAIA,EAAQ,GAAKA,EAAQ,GACvB,MAAO,KAGT,OADkBA,EAAQ,GACP,CACjB,IAAK,GACH,MAAO,KACT,IAAK,GACH,MAAO,KACT,IAAK,GACH,MAAO,IACX,CACA,MAAO,IACT,EACA,SAASW,GAAuBP,EAAMQ,EAAS,aAAc,CAC3D,IAAMC,EAAWJ,GAAoBL,EAAK,YAAY,EAAG,CAAC,EACpDU,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,UAAU,EAClIC,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,UAAU,EACpFC,EAAU,CACd,KAAM,IAAMH,EAAS,MAAMA,EAAS,OAAS,EAAGA,EAAS,MAAM,EAC/D,GAAI,IAAMA,EAAS,MAAMA,EAAS,OAAS,EAAGA,EAAS,MAAM,EAC7D,EAAG,IAAM,GAAGT,EAAK,YAAY,CAAC,GAC9B,KAAM,IAAMU,EAAOV,EAAK,SAAS,CAAC,EAClC,IAAK,IAAMU,EAAOV,EAAK,SAAS,CAAC,EAAE,MAAM,EAAG,CAAC,EAC7C,GAAI,IAAMK,GAAoBL,EAAK,SAAS,EAAI,EAAG,CAAC,EACpD,GAAI,IAAM,GAAGA,EAAK,SAAS,EAAI,CAAC,GAAGM,GAAiBN,EAAK,SAAS,EAAI,CAAC,CAAC,GACxE,EAAG,IAAM,GAAGA,EAAK,SAAS,EAAI,CAAC,GAC/B,GAAI,IAAM,GAAGA,EAAK,QAAQ,CAAC,GAAGM,GAAiBN,EAAK,QAAQ,CAAC,CAAC,GAC9D,GAAI,IAAMK,GAAoBL,EAAK,QAAQ,EAAG,CAAC,EAC/C,EAAG,IAAM,GAAGA,EAAK,QAAQ,CAAC,GAC1B,KAAM,IAAMW,EAAKX,EAAK,OAAO,CAAC,EAC9B,IAAK,IAAMW,EAAKX,EAAK,OAAO,CAAC,EAAE,MAAM,EAAG,CAAC,EACzC,GAAI,IAAMW,EAAKX,EAAK,OAAO,CAAC,EAAE,MAAM,EAAG,CAAC,EACxC,GAAI,IAAM,GAAGA,EAAK,OAAO,CAAC,GAAGM,GAAiBN,EAAK,OAAO,CAAC,CAAC,GAC5D,EAAG,IAAM,GAAGA,EAAK,OAAO,CAAC,EAC3B,EACMa,EAAS,IAAI,OAAO,OAAO,KAAKD,CAAO,EAAE,KAAK,GAAG,EAAG,GAAG,EAC7D,OAAOJ,EAAO,QAAQK,EAAQC,GACxBA,KAASF,EACJA,EAAQE,CAAK,EAAE,EAEjBA,CACR,CACH,CACA,SAASC,EAAyBnB,EAAO,CACvC,GAAI,CAACA,EACH,OAAO,KAET,GAAM,CAACoB,EAASC,CAAO,EAAIrB,EAAM,MAAM,GAAG,EAC1C,GAAI,CAACoB,EACH,OAAO,KAET,IAAME,EAASF,EAAQ,MAAM,GAAG,EAAE,IAAIG,GAAK,SAASA,EAAG,EAAE,CAAC,EAC1D,GAAID,EAAO,OAAOC,GAAK,CAAC,MAAMA,CAAC,CAAC,EAAE,SAAW,EAC3C,OAAO,KAET,GAAM,CAACC,EAAMC,EAAOC,CAAG,EAAIJ,EACrBlB,EAAO,IAAI,KAAKoB,EAAMC,EAAQ,EAAGC,CAAG,EAC1C,GAAItB,EAAK,YAAY,IAAMoB,GAAQpB,EAAK,SAAS,IAAMqB,EAAQ,GAAKrB,EAAK,QAAQ,IAAMsB,EACrF,OAAO,KAET,GAAI,CAACL,GAAWA,IAAY,WAC1B,OAAOjB,EAET,GAAM,CAACuB,EAAOC,EAASC,CAAO,EAAIR,EAAQ,MAAM,GAAG,EAAE,IAAIb,GAAQ,SAASA,EAAM,EAAE,CAAC,EACnF,OAAImB,GAAS,GAAKA,EAAQ,IACxBvB,EAAK,SAASuB,CAAK,EAEjBC,GAAW,GAAKA,EAAU,IAC5BxB,EAAK,WAAWwB,CAAO,EAErBC,GAAW,GAAKA,EAAU,IAC5BzB,EAAK,WAAWyB,CAAO,EAElBzB,CACT,CAGA,IAAI0B,GAAkB,KAAM,CAC1B,YAAYC,EAASC,EAAsBC,EAAqBC,EAASC,EAAS,CAChF,KAAK,MAAQ,GACb,KAAK,QAAUJ,EACf,KAAK,QAAUG,EACKF,EAAqB,mBAAmBC,CAAmB,EACnD,mBAAmB,EACvC,KAAKG,GAAY,CACvB,GAAI,CAAC,KAAK,MAAO,CACfL,EAAQ,YAAYK,CAAQ,EAC5B,MACF,CACA,KAAK,SAAWA,EACXA,IAGLF,EAAQ,YAAYE,EAAS,OAAO,CAAC,EACjCA,EAAS,kBACXA,EAAS,iBAAiB,EAExB,KAAK,WACPA,EAAS,QAAQ,KAAK,SAAS,EAE7B,KAAK,UAAY,MACnB,KAAK,oBAAoB,KAAK,QAAQ,EAExCD,IAAU,IAAI,EAChB,CAAC,CACH,CACA,SAAU,CACR,KAAK,MAAQ,GACb,KAAK,SAAW,KAAK,QAAQ,YAAY,KAAK,QAAQ,CACxD,CACA,SAAU,CACR,OAAO,KAAK,SAAW,KAAK,SAAS,QAAQ,EAAI,KAAK,SACxD,CACA,QAAQnC,EAAO,CACT,KAAK,SACP,KAAK,SAAS,QAAQA,CAAK,EAE3B,KAAK,UAAYA,CAErB,CACA,YAAYqC,EAAU,CAChB,KAAK,SACP,KAAK,oBAAoBA,CAAQ,EAEjC,KAAK,SAAWA,CAEpB,CACA,aAAaC,EAAW,CACtBC,EAAc,KAAK,QAASD,CAAS,CACvC,CACA,oBAAoBE,EAAa,CAC3B,KAAK,UAAY,KAAK,SAAS,qBACjC,KAAK,SAAS,oBAAoBA,CAAW,CAEjD,CACA,kBAAkBC,EAAO,CACnB,KAAK,UAAY,KAAK,SAAS,mBACjC,KAAK,SAAS,kBAAkBA,CAAK,CAEzC,CACA,iBAAiBC,EAAQ,CACnB,KAAK,UAAY,OAAO,KAAK,SAAS,kBAAqB,YAC7D,KAAK,SAAS,iBAAiBA,CAAM,CAEzC,CACA,aAAaA,EAAQ,CACnB,IAAIC,EAAe,GACf,KAAK,UAAU,SAAW,OAAO,KAAK,SAAS,SAAY,YAC9C,KAAK,SAAS,QAAQD,CAAM,IAC5B,OACbC,EAAe,IAGf,CAACA,GAAgB,KAAK,UAAU,iBAAmB,OAAO,KAAK,SAAS,iBAAoB,YAC/E,KAAK,SAAS,gBAAgBD,CAAM,IACpC,MACbE,EAAU,sFAAsF,CAGtG,CACA,oBAAoBP,EAAU,CACxB,KAAK,UAAY,MAGjB,KAAK,SAAS,aAAe,MAGjC,KAAK,SAAS,YAAYA,CAAQ,CACpC,CACF,EAGIQ,GAA8B,CAAC,SAAU,WAAY,WAAY,cAAe,UAAW,QAAS,UAAU,EAG9GC,GAA2B,cAAcC,EAA2B,CACtE,YAAYC,EAAkBC,EAAeC,EAAgB,CAC3D,MAAMD,EAAeC,CAAc,EACnC,KAAK,iBAAmBF,CAC1B,CACA,kBAAkBG,EAAWC,EAAS,CACpC,GAAM,CACJ,KAAAC,CACF,EAAIF,EACE,CACJ,eAAAG,CACF,EAAIF,GAAW,CAAC,EACVG,EAAUF,GAAQ,WAAaC,IAAmB,EAClDE,EAAWrC,EAAyBgC,EAAU,QAAQ,EACtDM,EAAStC,EAAyBgC,EAAU,MAAM,EAClDvC,EAAS,KAAK,iBAAiB,gCACrC,GAAI2C,EAAS,CACX,IAAMG,EAAgBF,IAAa,KAAO7C,GAAuB6C,EAAU5C,CAAM,EAAI,OAC/E+C,EAAcF,IAAW,KAAO9C,GAAuB8C,EAAQ7C,CAAM,EAAI,OAC/E,MAAO,GAAG8C,CAAa,IAAIC,CAAW,EACxC,CACA,OAAIH,GAAY,KACP7C,GAAuB6C,EAAU5C,CAAM,EAEzC,GAAGyC,CAAI,EAChB,CACA,aAAaX,EAAQ,CACnB,MAAM,aAAaA,CAAM,EACzB,KAAK,iBAAmBA,EAAO,gBACjC,CACF,EAGIkB,GAAmB,IACnBC,GAAmB,IACnBC,GAAa,cAAcC,EAAa,CAC1C,aAAc,CACZ,MAAM,YAAY,EAClB,KAAK,qBAAuB,CAAC,EAC7B,KAAK,mBAAqB,CAAC,EAC3B,KAAK,uBAAyB,CAAC,EAC/B,KAAK,qBAAuB,CAAC,EAC7B,KAAK,aAAeH,GACpB,KAAK,aAAeC,GACpB,KAAK,aAAe,KACpB,KAAK,aAAe,IACtB,CACA,UAAUG,EAAO,CACf,MAAM,UAAUA,CAAK,EACrB,KAAK,QAAUA,EAAM,QACrB,KAAK,qBAAuBA,EAAM,oBACpC,CACA,iBAAiBtB,EAAQ,CACvB,MAAM,iBAAiBA,CAAM,EAC7B,KAAK,uBAAuB,CAAC,EAAE,iBAAiBA,CAAM,CACxD,CACA,mBAAmBuB,EAAa,CAC9B,GAAM,CACJ,SAAAT,EACA,OAAAC,EACA,KAAAJ,CACF,EAAIY,GAAe,CAAC,EACpB,MAAO,CAACT,GAAYrC,EAAyBqC,CAAQ,GAAK,KAAMC,GAAUtC,EAAyBsC,CAAM,GAAK,IAAI,EAAE,MAAM,EAAG,KAAK,kBAAkBJ,CAAI,CAAC,CAC3J,CACA,YAAa,CACX,OAAO,KAAK,iBAAiB,WAAa,KAAK,iBAAiB,WAAa,KAAK,kBAAkB,KAAK,IAAI,CAC/G,CACA,kBAAkBa,EAAYC,EAAW,CACvC,IAAMC,EAAaD,EACnB,OAAIA,GAAa,MAAQC,EAAaF,EAC7B,GAELE,EAAaF,EACR,EAEF,CACT,CACA,UAAUxB,EAAQ,CAChB,KAAK,iBAAmBA,EACxB,MAAM,UAAUA,CAAM,EACtB,IAAM2B,EAAa,CAACC,EAAOC,IAAa,CACtC,GAAI7B,EAAO4B,CAAK,GAAK,KACnB,GAAK,MAAM5B,EAAO4B,CAAK,CAAC,EAGtB1B,EAAU,cAAc0B,CAAK,kBAAkB,MAF/C,QAAO5B,EAAO4B,CAAK,GAAK,KAAOC,EAAW,OAAO7B,EAAO4B,CAAK,CAAC,EAKlE,OAAOC,CACT,EACA,KAAK,aAAeF,EAAW,eAAgBT,EAAgB,EAC/D,KAAK,aAAeS,EAAW,eAAgBR,EAAgB,EAC3D,KAAK,aAAe,KAAK,cAC3BjB,EAAU,mDAAmD,EAE3DF,EAAO,aACT,KAAK,aAAeA,EAAO,wBAAwB,KAAOA,EAAO,aAAevB,EAAyBuB,EAAO,YAAY,EAE5H,KAAK,aAAe,KAElBA,EAAO,aACT,KAAK,aAAeA,EAAO,wBAAwB,KAAOA,EAAO,aAAevB,EAAyBuB,EAAO,YAAY,EAE5H,KAAK,aAAe,KAElB,KAAK,cAAgB,KAAK,cAAgB,KAAK,aAAe,KAAK,cACrEE,EAAU,mDAAmD,EAE/D,KAAK,qBAAuB,IAAIE,GAAyB,KAAK,iBAAkB,KAAK,cAAe,KAAK,cAAc,CACzH,CACA,sBAAsB0B,EAAS,CAC7B,IAAMC,EAAkB,IAAI3C,GAAgB,KAAK,QAAS,KAAK,qBAAsB,CACnF,cAAe,IAAM,KAAK,YAAY,EACtC,aAAc,KAAK,gBACrB,EAAG0C,CAAO,EACV,YAAK,eAAe,IAAMC,EAAgB,QAAQ,CAAC,EAC5CA,CACT,CACA,gBAAgBD,EAASxE,EAAO,CAC9BwE,EAAQ,QAAQxE,CAAK,CACvB,CACA,oBAAoBwE,EAASlC,EAAW,CACtCkC,EAAQ,aAAalC,CAAS,CAChC,CACA,mBAAmBkC,EAASnC,EAAU,CACpCmC,EAAQ,YAAYnC,CAAQ,CAC9B,CACA,yBAA0B,CACxB,OAAOQ,EACT,CACA,oBAAqB,CAEnB,IAAM6B,EADY,KAAK,IAAI,YAAY,EACV,cAAc,KAAK,EAChD,OAAAA,EAAW,UAAU,IAAI,gBAAgB,EACzC,KAAK,oBAAoBA,EAAY,KAAK,qBAAsB,KAAK,uBAAwB,MAAM,EACnG,KAAK,oBAAoBA,EAAY,KAAK,mBAAoB,KAAK,qBAAsB,IAAI,EACtFA,CACT,CACA,oBAAoBA,EAAYC,EAAkBC,EAAoBC,EAAQ,CAE5E,IAAMC,EADY,KAAK,IAAI,YAAY,EACL,cAAc,KAAK,EACrDA,EAAgB,UAAU,IAAI,aAAaD,CAAM,EAAE,EACnDC,EAAgB,UAAU,IAAI,kBAAkBD,CAAM,EAAE,EACxDF,EAAiB,KAAKG,CAAe,EACrCJ,EAAW,YAAYI,CAAe,EACtCF,EAAmB,KAAK,KAAK,sBAAsBE,CAAe,CAAC,CACrE,CACA,oBAAoBC,EAAeC,EAAa,CAC9C,KAAK,gBAAgB,KAAK,uBAAwBD,EAAeC,CAAW,EAC5E,KAAK,gBAAgB,KAAK,qBAAsBD,EAAeC,CAAW,EAC1E,KAAK,YAAY,KAAK,qBAAsBD,EAAeC,CAAW,EACtE,KAAK,YAAY,KAAK,mBAAoBD,EAAeC,CAAW,CACtE,CACA,gBAAgBC,EAAYF,EAAeC,EAAa,CAC5B,KAAK,YAAYC,EAAYF,EAAeC,CAAW,EAC/D,QAAQE,GAAQA,EAAK,QAAQ,CAAC,CAClD,CACA,iBAAiBlF,EAAO,CACtB,GAAIA,IAAU,KACZ,MAAO,GAET,GAAI,KAAK,cACP,GAAIA,EAAQ,KAAK,aACf,MAAO,WAGLA,EAAM,eAAe,EAAI,KAAK,aAChC,MAAO,GAGX,GAAI,KAAK,cACP,GAAIA,EAAQ,KAAK,aACf,MAAO,WAGLA,EAAM,eAAe,EAAI,KAAK,aAChC,MAAO,GAGX,MAAO,EACT,CACA,sBAAsBmF,EAAU,CAC9B,GAAI,CAAC,MAAM,sBAAsBA,CAAQ,EACvC,MAAO,GAET,IAAIC,EAAQ,GACZ,YAAK,aAAa,CAACZ,EAASa,EAAOC,EAAYhC,IAAmB,CAC5DgC,IAAeH,GAAY,CAACC,GAASC,GAAS/B,IAGlD8B,EAAQA,GAAS,KAAK,iBAAiBZ,EAAQ,QAAQ,CAAC,EAC1D,CAAC,EACMY,CACT,CACA,qBAAqBG,EAASC,EAAS,CACrC,OAAOD,EAAQ,WAAaC,EAAQ,UAAYD,EAAQ,SAAWC,EAAQ,QAAUD,EAAQ,OAASC,EAAQ,IAChH,CACA,eAAgB,CACd,MAAO,MACT,CACA,gBAAgBL,EAAU,CACxB,IAAM9B,EAAO,KAAK,iBAAiB8B,CAAQ,EACrCM,EAAQ,CAAC,EACTC,EAAS,KAAK,UAAUP,CAAQ,EACtC,OAAIO,EAAO,OAAS,IAClBD,EAAM,SAAWtF,GAAeuF,EAAO,CAAC,CAAC,GAEvCA,EAAO,OAAS,IAClBD,EAAM,OAAStF,GAAeuF,EAAO,CAAC,CAAC,GAElCC,EAAA,CACL,SAAU,KACV,OAAQ,KACR,WAAY,KAAK,cAAc,EAC/B,KAAAtC,GACGoC,EAEP,CACA,kBAAmB,CACjB,IAAMG,EAAkB,KAAK,cAAc,kBAAkB,EACvDpD,EAAc,KAAK,UAAU,eAAe,EAC5CqD,EAAYD,EAAgB,kBAAmB,cAAc,EACnE,KAAK,aAAapB,GAAW,CAC3BA,EAAQ,oBAAoBhC,CAAW,EACvCgC,EAAQ,kBAAkBqB,CAAS,CACrC,CAAC,CACH,CACA,UAAUV,EAAU,CAClB,OAAIA,GAAY,KAAK,uBAAuB,OACnC,CAAC,KAAM,IAAI,EAEb,CAAC,KAAK,uBAAuBA,CAAQ,EAAG,KAAK,qBAAqBA,CAAQ,CAAC,CACpF,CACA,UAAUA,EAAU,CAClB,IAAMW,EAAS,CAAC,EAChB,YAAK,qBAAqBX,EAAU,CAACX,EAASa,EAAOU,EAAazC,IAAmB,CAC/E+B,EAAQ/B,GACVwC,EAAO,KAAKtB,EAAQ,QAAQ,CAAC,CAEjC,CAAC,EACMsB,CACT,CACA,UAAUE,EAAK,CACb,OAAIA,IAAQ,WACH,MAAM,UAAU,QAAQ,EAE7BA,IAAQ,cACH,MAAM,UAAU,OAAO,EAEzB,MAAM,UAAUA,CAAG,CAC5B,CACA,iBAAiBP,EAAO,CACtB,OAAO,KAAK,qBAAqB,iBAAiBA,CAAK,GAAK,EAC9D,CACF,EAGIQ,GAAiB,cAAcC,CAAS,CAC1C,YAAYC,EAAeC,EAAOpC,EAAOqC,EAAc,CACrD,MAAM,EACN,KAAK,cAAgBF,EACrB,KAAK,cAAgBA,EACrB,KAAK,MAAQC,EACb,KAAK,OAAS,KAAK,MAAM,cAAc,qBAAqB,GAAK,KAAK,MACtE,KAAK,aAAeC,EACpB,KAAK,MAAQrC,CACf,CACA,gBAAgBqC,EAAc,CAC5B,KAAK,aAAeA,EACpB,KAAK,cAAc,CACrB,CACA,kBAAmB,CACjB,OAAI,KAAK,MAAM,IAAI,IAAI,WAAW,GAAK,KAAK,aACnCC,EAAM,KAAK,YAAY,EAEzB,KAAK,aACd,CACA,eAAgB,CACd,IAAMC,EAAgB,KAAK,cAAc,KAAK,IAAI,EAClD,KAAK,oBAAoB,KAAK,cAAe,CAC3C,YAAaA,CACf,CAAC,EACD,KAAK,iBAAiB,EACtB,KAAK,yBAAyB,CAC5B,6BAA8BA,CAChC,CAAC,EACD,KAAK,2BAA2B,YAAaA,CAAa,CAC5D,CACA,kBAAmB,CACjB,IAAMC,EAAwB,KAAK,MAAM,IAAI,IAAI,6BAA6B,EACxEC,EAAgBC,EAAQ,KAAK,cAAc,WAAW,CAAC,EACnC,KAAK,MAAM,uBAAuB,SAAS,GAAKD,GAAiB,CAACD,EAE1F,KAAK,cAAc,EAEnB,KAAK,cAAc,CAEvB,CACA,eAAgB,CACd,IAAMG,EAAa,KAAK,iBAAiB,EACnCC,EAAOD,EAAW,QAAQ,EAC1BE,EAAUF,EAAW,WAAW,EAChCG,EAAgB,KAAK,yBAAyBH,EAAYE,CAAO,EACjEE,EAAa,KAAK,yBAAyBJ,EAAYC,CAAI,EACjE,KAAK,QAAQE,CAAa,EAC1B,KAAK,WAAaC,EAClB,KAAK,MAAM,uBAAuB,kBAAkB,IAAM,CACpD,KAAK,aAAeA,GACtB,KAAK,QAAQA,CAAU,CAE3B,CAAC,CACH,CACA,eAAgB,CACd,IAAMJ,EAAa,KAAK,iBAAiB,EACnCC,EAAOD,EAAW,QAAQ,EAChC,KAAK,WAAa,KAAK,yBAAyBA,EAAYC,CAAI,EAChE,KAAK,QAAQ,KAAK,UAAU,CAC9B,CACA,yBAAyBD,EAAYK,EAAc,CAKjD,GAHI,CADgB,KAAK,MAAM,IAAI,YAAY,OAAO,GAIlDL,EAAW,UAAU,IAAM,OAC7B,OAAOK,EAET,IAAMC,EAAY,KAAK,MAAM,mBAAmB,iBAAiB,EACjE,GAAIN,EAAW,UAAU,IAAM,QAAS,CACtC,IAAMO,EAAY,KAAK,MAAM,mBAAmB,sBAAsB,EACtE,OAAOD,EAAYC,EAAYF,CACjC,CACA,OAAOC,EAAYD,CACrB,CACA,QAAQhH,EAAO,CAIb,GAHI0G,EAAQ1G,CAAK,IACf,KAAK,MAAM,MAAM,KAAO,GAAGA,CAAK,MAE9BmH,EAAc,KAAK,aAAa,EAAG,CACrC,IAAMC,EAAW,KAAK,cAAc,eAAe,EACnD,GAAI,CAACA,EAAS,OACZ,OAEEA,EAAS,OAAS,GACpBC,GAAgB,KAAK,OAAQD,EAAS,MAAM,CAEhD,CACF,CACF,EAGIE,GAAmB,kBACnBC,GAAkB,iBACtB,SAASC,GAA4BC,EAAgBC,EAAKC,EAAQC,EAAa,CAC7E,OAAIC,EAASJ,CAAc,EAClB,CAAC,EAEHK,GAA4BL,EAAe,YAAaA,EAAgBC,EAAKC,EAAQC,CAAW,CACzG,CAOA,SAASG,GAA0BC,EAAMC,EAAQC,EAAsB,CACrEF,EAAK,oBAAoBG,GAAkBD,EAAqB,YAAYD,EAAQ,OAAO,CAAC,EAC5FD,EAAK,oBAAoBI,GAAiBF,EAAqB,YAAYD,EAAQ,MAAM,CAAC,CAC5F,CACA,SAASI,GAAeC,EAAgBC,EAAKN,EAAQO,EAAa,CAChE,OAAOD,EAAI,oBAAoB,CAI7B,OAAQD,EACR,OAAAL,EACA,YAAAO,CACF,CAAC,CACH,CACA,SAASC,GAA4BC,EAAeJ,EAAgBC,EAAKN,EAAQO,EAAa,CAC5F,GAAIG,EAASD,CAAa,EACxB,MAAO,CAAC,EAEV,IAAIE,EACJ,GAAI,OAAOF,GAAkB,WAAY,CACvC,IAAMG,EAASR,GAAeC,EAAgBC,EAAKN,EAAQO,CAAW,EACtEI,EAAaF,EAAcG,CAAM,CACnC,MACED,EAAaF,EAEf,OAAI,OAAOE,GAAe,SACjB,CAACA,CAAU,EAEhB,MAAM,QAAQA,CAAU,EACnB,CAAC,GAAGA,CAAU,EAEhB,CAAC,CACV,CAGA,IAAIE,GAAsB,EACtBC,IAAwC,IAAM,CAChD,IAAIA,EAA0B,MAAMA,WAAgCC,CAAS,CAC3E,YAAYC,EAAkBC,EAAOC,EAAe,CAClD,MAAM,EACN,KAAK,oBAAsB,EAC3B,KAAK,iBAAmB,EACxB,KAAK,cAAgB,KACrB,KAAK,eAAiB,KACtB,KAAK,WAAa,KAClB,KAAK,iBAAmBF,EACxB,KAAK,cAAgBE,EACrB,KAAK,MAAQD,EACb,KAAK,WAAaD,EAAiB,YAAY,EAAI,IAAMH,IAC3D,CACA,UAAUI,EAAO,CACf,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,aAAeA,EAAM,aAC1B,KAAK,qBAAuBA,EAAM,qBAClC,KAAK,aAAeA,EAAM,aAC1B,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,YAAcA,EAAM,WAC3B,CACA,eAAgB,CACd,KAAK,4BAA4B,CAAC,qBAAqB,EAAG,IAAM,KAAK,gBAAgB,CAAC,CACxF,CACA,2BAA2BE,EAAG,CAC5B,GAAM,CACJ,eAAAC,EACA,OAAApB,CACF,EAAI,KAAK,aAAa,iBAAiB,EACvC,OAAOqB,GAAsC,KAAK,IAAKF,EAAGC,EAAgBpB,CAAM,CAClF,CACA,oBAAqB,CAEnB,OADiB,KAAK,IAAI,oBAAoB,IAC1B,KAAK,IAC3B,CACA,OAAOsB,EAAM,CACX,KAAK,KAAOA,EACZ,KAAK,WAAW,EAChB,KAAK,oBAAoB,KAAK,MAAM,aAAc,CAChD,wBAAyB,KAAK,0BAA0B,KAAK,IAAI,CACnE,CAAC,EACD,KAAK,2BAA2B,KAAK,KAAM,CACzC,MAAO,KAAK,WAAW,KAAK,IAAI,CAClC,CAAC,EACD,KAAK,0BAA0B,EAC/B,KAAK,gBAAgB,CACvB,CACA,YAAa,CACX,IAAMC,EAAQ,CACZ,KAAM,gBACN,OAAQ,KAAK,MACf,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,2BAA4B,CACtB,CAAC,KAAK,MAAQ,CAAC,KAAK,SAGxB,KAAK,0BAA0B,EAC/B,KAAK,oBAAoB,EAC3B,CACA,2BAA4B,CAC1B,GAAM,CACJ,KAAAxB,EACA,OAAAC,EACA,MAAAiB,CACF,EAAI,KACJnB,GAA0BC,EAAMC,EAAQiB,EAAM,kBAAkB,CAClE,CACA,qBAAsB,CACpB,GAAM,CACJ,MAAAA,EACA,OAAAjB,CACF,EAAI,KACEwB,EAASP,EAAM,mBAAmB,gBAAgBjB,CAAM,EAC9DyB,GAAiB,KAAK,KAAMD,CAAM,CACpC,CACA,mCAAoC,CAC7B,KAAK,eAGV,KAAK,oBAAoB,KAAK,KAAM,CAClC,QAAS,KAAK,aAAa,KAAK,IAAI,EACpC,MAAO,KAAK,WAAW,KAAK,IAAI,CAClC,CAAC,CACH,CACA,iBAAkB,CACY,KAAK,IAAI,IAAI,qBAAqB,EAE5D,KAAK,KAAK,gBAAgB,UAAU,EAEpC,KAAK,KAAK,aAAa,WAAY,IAAI,CAE3C,CACA,aAAaL,EAAG,CACd,IAAMO,EAAW,KAAK,IAAI,oBAAoB,EACxCC,EAAgBR,EAAE,MAAQS,EAAQ,MAAQT,EAAE,MAAQS,EAAQ,MAgBlE,GAfI,KAAK,aACPT,EAAE,eAAe,EACjBA,EAAE,yBAAyB,GAI7BO,IAAa,KAAK,MAElB,CAACP,EAAE,UAAY,CAACA,EAAE,UAGd,KAAK,YAAcQ,KACrBR,EAAE,eAAe,EACjBA,EAAE,yBAAyB,GAEzB,CAACQ,GACH,OAEF,IAAME,EAASV,EAAE,MAAQS,EAAQ,OAAS,KAAK,IAAI,IAAI,WAAW,EAC5DE,EAAYC,GAAoBF,EAAS,OAAS,OAAO,EAC/D,GAAIV,EAAE,OAAQ,CACZ,KAAK,WAAa,GAClB,KAAK,kBAAoB,EACzB,IAAMa,EAAO,KAAK,8BAA8Bb,CAAC,EACjD,KAAK,aAAaa,EAAMb,EAAE,QAAQ,EAClC,KAAK,eAAe,qBAAqB,EAAI,CAC/C,MACE,KAAK,WAAWW,CAAS,CAE7B,CACA,8BAA8BX,EAAG,CAC/B,IAAIa,EAAO,KAAK,cAAcb,CAAC,EAE/B,GADe,KAAK,OAAO,UAAU,EACzB,CACV,IAAMc,EAAY,KAAK,mBAAmB,mBAAmB,EACvDC,EAAa,KAAK,mBAAmB,oBAAoB,EACzDC,EAAYC,GAAe,KAAK,aAAa,gBAAgB,EAAE,uBAAuB,CAAC,EAAI,GACjG,GAAIH,EAAYC,EAAaF,EAAOG,EAClC,GAAIA,EAAYF,EAAYC,EAC1BF,EAAOG,EAAYF,EAAYC,MAE/B,OAAO,EAGb,CACA,OAAOF,CACT,CACA,cAAcb,EAAG,CACf,IAAIU,EAASV,EAAE,MAAQS,EAAQ,OAAS,KAAK,IAAI,IAAI,WAAW,EAC1DS,EAAS,KAAK,OAAO,UAAU,EAC/BC,EAAQ,KAAK,IAAI,IAAI,WAAW,EACtC,OAAID,GACEC,KAAWD,IAAW,WACxBR,EAAS,CAACA,IAGNA,EAAS,GAAK,GAAK,KAAK,gBAClC,CACA,YAAa,CACN,KAAK,aAGN,KAAK,sBACP,OAAO,aAAa,KAAK,mBAAmB,EAC5C,KAAK,oBAAsB,GAE7B,KAAK,WAAa,GAClB,KAAK,iBAAmB,EACxB,KAAK,oBAAsB,OAAO,WAAW,IAAM,CACjD,KAAK,eAAe,qBAAqB,EAAK,CAChD,EAAG,GAAG,EACR,CACA,cAAcV,EAAG,CACf,IAAMoB,EAAkB,KAAK,mBAAmB,EAChD,OAAQpB,EAAE,IAAK,CACb,KAAKS,EAAQ,UACb,KAAKA,EAAQ,QACb,KAAKA,EAAQ,UACb,KAAKA,EAAQ,SACPW,GACFpB,EAAE,eAAe,CAEvB,CACF,CACA,YAAa,CACX,IAAMqB,EAAM1B,GAAwB,yBACpC,KAAK,IAAI,WAAW,KAAK,KAAM0B,EAAK,IAAI,EACxC,KAAK,eAAe,IAAM,KAAK,IAAI,WAAW,KAAK,KAAMA,EAAK,IAAI,CAAC,CACrE,CACA,QAAS,CACP,OAAO,KAAK,IACd,CACA,MAAMjB,EAAO,CACX,OAAK,KAAK,MAGV,KAAK,eAAiBA,GAAS,KAC/B,KAAK,KAAK,MAAM,EACT,IAJE,EAKX,CACA,aAAc,CACZ,OAAO,KAAK,cAAc,YAAY,CACxC,CACA,kBAAmB,CACjB,OAAO,KAAK,aACd,CACA,WAAY,CACV,OAAO,KAAK,cAAc,UAAU,CACtC,CACA,eAAgB,CACd,OAAO,KAAK,UACd,CACA,qBAAsB,CACpB,OAAO,KAAK,gBACd,CACA,kBAAmB,CACb,KAAK,aACP,KAAK,mBAAmB,iBAAiB,KAAK,UAAU,EACxD,KAAK,WAAa,KAEtB,CACA,4BAA4BkB,EAAYC,EAAY1C,EAAQ,CAC1D,IAAMuB,EAAQkB,GAAcC,EACxB,KAAK,IAAI,IAAI,6BAA6B,GAC5CnB,EAAM,eAAe,EAEvB,IAAMoB,EAAcC,GAAS5C,CAAM,EAAIA,EAAS,OAC5C,KAAK,YAAY,2BAA2B2C,CAAW,GACzD,KAAK,YAAY,sBAAsBA,EAAaF,EAAYC,CAAU,EAE5E,KAAK,yBAAyB,0BAA2B1C,CAAM,CACjE,CACA,yBAAyB6C,EAAW7C,EAAQ,CAC1C,IAAMuB,EAAQ,CACZ,KAAMsB,EACN,OAAA7C,CACF,EACA,KAAK,aAAa,cAAcuB,CAAK,CACvC,CACA,SAAU,CACR,MAAM,QAAQ,EACd,KAAK,iBAAiB,EACtB,KAAK,KAAO,KACZ,KAAK,OAAS,KACd,KAAK,cAAgB,KACrB,KAAK,eAAiB,KACtB,KAAK,iBAAmB,KACxB,KAAK,cAAgB,KACrB,KAAK,KAAO,IACd,CACF,EACA,OAAAT,EAAwB,yBAA2B,aAC5CA,CACT,GAAG,EACCgC,GAAyBhC,GAGzBiC,GAAe,cAAchC,CAAS,CACxC,UAAUE,EAAO,CACf,KAAK,mBAAqBA,EAAM,kBAClC,CACA,YAAY+B,EAASC,EAAS,CAC5B,MAAM,EACN,KAAK,QAAUD,EACf,KAAK,QAAUC,CACjB,CACA,eAAgB,CACV,KAAK,IAAI,IAAI,sBAAsB,GACrC,KAAK,uBAAuB,CAEhC,CACA,wBAAyB,CACvB,KAAK,oBAAoB,KAAK,QAAS,CACrC,SAAU,KAAK,WAAW,KAAK,IAAI,EACnC,UAAW,KAAK,YAAY,KAAK,IAAI,CACvC,CAAC,CACH,CACA,YAAa,CACX,KAAK,mBAAmB,eAAe,CACzC,CACA,aAAc,CACZ,KAAK,mBAAmB,aAAa,KAAK,OAAO,CACnD,CACF,EAGIC,GAAuB,cAAcJ,EAAuB,CAC9D,YAAY9C,EAAQiB,EAAOC,EAAe,CACxC,MAAMlB,EAAQiB,EAAOC,CAAa,EAClC,KAAK,YAAc,GACnB,KAAK,OAASlB,CAChB,CACA,QAAQD,EAAMuB,EAAM6B,EAAuBC,EAAqB,CAC9D,KAAK,KAAOrD,EACZ,KAAK,sBAAwBoD,EAC7B,KAAK,oBAAsBC,EAC3B,KAAK,OAAO9B,CAAI,EAChB,KAAK,YAAY,EACjB,KAAK,WAAW,EAChB,KAAK,UAAU,EACf,KAAK,WAAW,EAChB,KAAK,WAAW,EAChB,KAAK,UAAU,EACf,KAAK,kBAAkB,EACvB,KAAK,cAAc,EACnB,KAAK,oBAAoB,EACzB,KAAK,QAAQ,EACb,KAAK,2BAA2B,KAAK,sBAAuB,CAC1D,MAAO,KAAK,iBAAiB,KAAK,IAAI,CACxC,CAAC,EACD,KAAK,2BAA2B,EAChC,KAAK,oBAAoB,KAAK,OAAQ,CACpC,cAAe,KAAK,gBAAgB,KAAK,IAAI,CAC/C,CAAC,CACH,CAEA,cAAe,CAAC,CAEhB,YAAa,CAAC,CACd,aAAc,CACZ,IAAM+B,EAAS,KAAK,OAAO,UAAU,EAC/BC,EAAe,CAAC,CAACD,EAAO,OACxBE,EAAuB,CAAC,CAACF,EAAO,eACtC,KAAK,OAASC,GAAgBC,CAChC,CACA,SAAU,CAIR,GAHA,KAAK,KAAK,0BAA0B,CAAC,KAAK,sBAAwB,KAAK,MAAM,EAC7E,KAAK,KAAK,wBAAwB,+BAAgC,KAAK,oBAAoB,EAC3F,KAAK,KAAK,wBAAwB,0BAA2B,CAAC,KAAK,oBAAoB,EACnF,CAAC,KAAK,QAAU,KAAK,YACvB,OAEF,IAAMC,EAAYC,GAAkB,SAAU,KAAK,IAAK,KAAK,MAAM,EAC/DD,IACF,KAAK,YAAc,GACnB,KAAK,sBAAsB,YAAYA,CAAS,EAEpD,CACA,YAAa,CACX,KAAK,kBAAkB,IAAIE,GAAoB,KAAK,KAAM,CACxD,2BAA4B,KAAK,2BAA2B,KAAK,IAAI,EACrE,aAAc,KAAK,aAAa,KAAK,IAAI,EACzC,cAAe,KAAK,cAAc,KAAK,IAAI,EAC3C,UAAW,KAAK,UAAU,KAAK,IAAI,CACrC,CAAC,CAAC,CACJ,CACA,WAAY,CACV,IAAMC,EAAiB,KAAK,cAAc,kBAAkB,EAC5DC,GAAc,KAAK,sBAAuBD,EAAe,qBAAsB,kBAAkB,CAAC,CACpG,CACA,aAAa,EAAG,CAGd,GAFiB,KAAK,IAAI,oBAAoB,IACT,KAAK,KAExC,OAEF,IAAME,EAAkB,KAAK,aAAa,yBAAyB,KAAK,KAAM,KAAM,EAAE,QAAQ,EAC9F,GAAIA,EAAiB,CACnB,KAAK,MAAM,wBAAwB,eAAe,KAAK,MAAM,EAC7D,EAAE,eAAe,EACjBA,EAAgB,MAAM,EACtB,MACF,CACA,IAAMC,EAAsB,KAAK,iCAAiC,EAAE,QAAQ,EACvEA,GAGD,KAAK,aAAa,oBAAoB,CACxC,eAAgB,CACd,eAAgB,KAAK,iBAAiB,EAAE,YAAY,EACpD,OAAQA,CACV,EACA,MAAO,CACT,CAAC,GACC,EAAE,eAAe,CAErB,CACA,iCAAiCC,EAAW,CAC1C,IAAM9D,EAAuB,KAAK,MAAM,mBACpC+D,EAAU,KAAK,OACnB,EAEE,IADAA,EAAUD,EAAY9D,EAAqB,aAAa+D,CAAO,EAAI/D,EAAqB,YAAY+D,CAAO,EACvG,CAACA,EACH,YAEK,CAACA,EAAQ,UAAU,EAAE,QAAU,CAACA,EAAQ,UAAU,EAAE,gBAC7D,OAAOA,CACT,CACA,cAAc,EAAG,CACf,MAAM,cAAc,CAAC,EACrB,IAAMzB,EAAkB,KAAK,mBAAmB,EAChD,OAAQ,EAAE,IAAK,CACb,KAAKX,EAAQ,GACb,KAAKA,EAAQ,KACNW,GACH,EAAE,eAAe,EAErB,KAAKX,EAAQ,KACb,KAAKA,EAAQ,MACX,GAAIW,EACF,OAEF,EAAE,gBAAgB,EACpB,KAAKX,EAAQ,MACPW,GACE,KAAK,aAAa,UAAU,KAAK,IAAI,GACvC,EAAE,eAAe,EAGrB,MACF,KAAKX,EAAQ,OACNW,GACH,KAAK,KAAK,MAAM,CAEtB,CACF,CACA,UAAU,EAAG,CAEX,GADwB,KAAK,KAAK,SAAS,EAAE,aAAa,EAExD,OAEF,IAAM0B,EAAuB,CAAC,CAAC,EAAE,eAAiB,CAAC,EAAE,cAAc,UAAU,SAAS,oBAAoB,EACpGC,EAAmB,CAAC,CAAC,EAAE,eAAiBC,GAAuB,EAAE,cAAe,oBAAoB,EAC1G,GAAIF,GAAwBC,GAAoB,EAAE,SAAW,KAAK,KAAM,CACtE,IAAME,EAAiB,KAAK,eACtBC,EAAU,CAAC,EAAED,GAAkBA,EAAe,MAAQxC,EAAQ,KACpE,GAAIwC,GAAkBC,EAAS,CAC7B,IAAMC,EAAkBF,EAAe,SACvC,KAAK,aAAa,UAAU,KAAK,KAAME,CAAe,CACxD,CACF,CACA,IAAMC,EAAW,KAAK,YAAY,EAClC,KAAK,MAAM,aAAa,iBAAiBA,EAAU,KAAK,MAAM,CAChE,CACA,YAAa,CACX,KAAK,kBAAkB,IAAIxB,GAAa,CAAC,KAAK,MAAM,EAAG,KAAK,IAAI,CAAC,EACjE,IAAMyB,EAAW,IAAM,CACrB,GAAI,CAAC,KAAK,IAAI,IAAI,sBAAsB,EACtC,OAEF,IAAMC,EAAU,KAAK,MAAM,mBAAmB,UAAU,KAAK,MAAM,EACnE,KAAK,KAAK,oBAAoB,kBAAmBA,CAAO,CAC1D,EACA,KAAK,yBAAyB,CAC5B,mBAAoBD,CACtB,CAAC,EACDA,EAAS,CACX,CACA,WAAY,CACV,IAAME,EAAiB,IAAIC,GAAe,KAAK,OAAQ,KAAK,KAAM,KAAK,KAAK,EAC5E,KAAK,kBAAkBD,CAAc,CACvC,CACA,mBAAoB,CAClB,KAAK,qBAAuB,CAAC,KAAK,YAAY,8BAA8B,KAAK,MAAM,EACvF,KAAK,gCAAkC,CAAC,KAAK,YAAY,oBAAoB,CAC/E,CACA,eAAgB,CACd,GAAI,CAAC,KAAK,OACR,OAEF,IAAME,EAAc,KAAK,MAAM,eAAe,6BAA6B,KAAK,OAAQ,IAAM,KAAK,iBAAiB,CAAC,EACjHA,GACF,KAAK,eAAeA,CAAW,CAEnC,CACA,eAAeA,EAAa,CAC1B,KAAK,gBAAkBA,EACvB,KAAK,KAAK,eAAeA,CAAW,CACtC,CACA,kBAAmB,CACjB,IAAMC,EAAc,KAAK,qBAAuB,KAAK,oBAAsB,KAAK,sBAChF,KAAK,YAAY,eAAe,CAC9B,OAAQ,KAAK,OACb,cAAeA,EACf,cAAe,iBACf,WAAY,QACd,CAAC,CACH,CACA,qBAAsB,CACpB,GAAI,CAAC,KAAK,OACR,OAEF,GAAM,CACJ,cAAAC,CACF,EAAI,KAAK,MACHC,EAAiBxD,GAAS,CAC9B,GAAIA,GAAO,SAAW,mBAAqB,CAAC,KAAK,QAAQ,EACvD,OAEF,IAAMyD,EAAc,KAAK,KAAK,sBAAsB,EAC/CA,GAGLA,EAAY,KAAKjF,GAAQ,CACvB,GAAIA,EAAM,CACR,IAAMkF,EAAcH,GAAe,oCAAoC,KAAK,MAAM,EAC5EI,EAAqB3D,EAAQ4D,EAAAC,EAAA,GAE9B7D,GAF8B,CAGjC,QAASA,EAAM,SAAW,CAAC,EAC3B,OAAQA,EAAM,SAAW,MAAQ,MAAQ,cAC3C,GAAI,KACJxB,EAAK,qBAAqBkF,EAAaC,CAAkB,CAC3D,CACF,CAAC,CACH,EACA,CAAC,KAAK,mBAAmB,EAAI,KAAK,oBAAoB,KAAK,OAAQ,CACjE,cAAeH,CACjB,CAAC,EACGD,GAAe,eAAe,KAAK,MAAM,GAC3CC,EAAe,IAAI,CAEvB,CACA,YAAa,CACX,IAAMP,EAAW,IAAM,CACrB,IAAMa,EAAQ,GAAG,KAAK,OAAO,eAAe,CAAC,KAC7C,KAAK,KAAK,SAASA,CAAK,CAC1B,EACA,KAAK,oBAAoB,KAAK,OAAQ,CACpC,aAAcb,CAChB,CAAC,EACDA,EAAS,CACX,CACA,4BAA6B,CACvB,KAAK,SACP,CAAC,KAAK,4BAA4B,EAAI,KAAK,oBAAoB,KAAK,OAAQ,CAC1E,cAAe,KAAK,mBAAmB,KAAK,IAAI,CAClD,CAAC,EACD,KAAK,mBAAmB,EAE5B,CACA,oBAAqB,CACnB,GAAI,CAAC,KAAK,sBAAwB,KAAK,KAAM,CAC3C,IAAMc,EAAkB,CAAC,CAAC,KAAK,MAAM,eAAe,gBAAgB,KAAK,MAAM,EAC/E,KAAK,KAAK,0BAA0BA,CAAe,EAC/C,KAAK,iCAAmCA,GAC1C,KAAK,sBAAsB,UAAU,OAAO,mBAAoB,KAAK,OAAO,eAAe,CAAC,CAEhG,CACF,CACA,iBAAkB,CAChB,IAAMC,EAAY,KAAK,OACvB,KAAK,YAAY,EACjB,IAAMC,EAAe,CAACD,GAAa,KAAK,OACpCA,GAAa,CAAC,KAAK,SACrB,KAAK,oBAAoB,EACzB,KAAK,6BAA6B,GAEpC,IAAME,EAAiB,KAAK,OAAS,KAAK,MAAM,eAAe,6BAA6B,KAAK,OAAQ,IAAM,KAAK,iBAAiB,CAAC,EAAI,KACpIT,EAAc,KAAK,KAAK,sBAAsB,EAChD,CAACA,GAAe,CAACS,EACnB,KAAK,kBAAkBA,EAAgBD,CAAY,EAEnDR,EAAY,KAAKU,GAAgB,CAC3B,CAACA,GAAgB,KAAK,MAAM,eAAe,wBAAwB,KAAK,iBAAmB,KAAMD,CAAc,EACjH,KAAK,kBAAkBA,EAAgBD,CAAY,EAEnD,KAAK,2BAA2BC,CAAc,CAElD,CAAC,CAEL,CACA,kBAAkBb,EAAaY,EAAc,CACtC,KAAK,QAAQ,IAGlB,KAAK,eAAeZ,CAAW,EAC/B,KAAK,kBAAkB,EACvB,KAAK,QAAQ,EACTY,IACF,KAAK,oBAAoB,EACzB,KAAK,2BAA2B,GAEpC,CACA,2BAA2BG,EAAiB,CAC1C,GAAI,CAACA,EACH,OAEF,IAAM/E,EAAS+E,EAAgB,OAC/B,KAAK,KAAK,sBAAsB,GAAG,KAAKC,GAAkB,CACxD,IAAIC,EAAe,GACfD,GAAgB,SAAW,OAAOA,EAAe,SAAY,YAChDA,EAAe,QAAQhF,CAAM,IAC7B,OACbiF,EAAe,IAGf,CAACA,GAAgBD,GAAgB,iBAAmB,OAAOA,EAAe,iBAAoB,YACjFA,EAAe,gBAAgBhF,CAAM,IACrC,MACbkF,EAAU,uFAAuF,CAGvG,CAAC,CACH,CACA,SAAU,CACR,MAAM,QAAQ,EACd,KAAK,sBAAwB,KAC7B,KAAK,oBAAsB,KAC3B,KAAK,gBAAkB,KACvB,KAAK,oBAAsB,KAC3B,KAAK,6BAA+B,IACtC,CACF,EAGIC,EAAU,SAGd,SAASC,GAAsB/E,EAAO,CACpC,MAAO,CAAC,CAACA,EAAM,eAAe,sBAAsB,GAAK,CAAC,CAACA,EAAM,eAAe,yBAAyB,CAC3G,CACA,SAASgF,GAAkBhF,EAAOuB,EAAK0D,EAAU,CAC/C,OAAOjF,EAAM,eAAe,kBAAkBuB,EAAK0D,CAAQ,CAC7D,CACA,SAASC,GAAwBlF,EAAOuB,EAAK,CAC3C,OAAOvB,EAAM,eAAe,wBAAwBuB,CAAG,GAAK,QAAQ,QAAQ,MAAM,CACpF,CACA,SAAS4D,GAAcnF,EAAOuB,EAAK,CACjC,IAAMxC,EAASiB,EAAM,YAAY,aAAauB,CAAG,EACjD,GAAIxC,EACF,OAAOiB,EAAM,eAAe,cAAcjB,EAAQ,KAAK,CAE3D,CACA,SAASqG,GAAepF,EAAOqF,EAAO,CACpCrF,EAAM,mBAAmB,aAAa,IAAMA,EAAM,eAAe,eAAeqF,CAAK,CAAC,CACxF,CACA,SAASC,GAAetF,EAAO,CAC7B,OAAOA,EAAM,eAAe,eAAe,GAAK,CAAC,CACnD,CACA,SAASuF,GAAqBvF,EAAOjB,EAAQ,CAC3C,OAAOiB,EAAM,eAAe,qBAAqBjB,CAAM,GAAK,IAC9D,CACA,SAASyG,GAAqBxF,EAAOjB,EAAQsG,EAAO,CAClD,OAAOrF,EAAM,eAAe,qBAAqBjB,EAAQsG,CAAK,GAAK,QAAQ,QAAQ,CACrF,CACA,SAASI,GAAiBzF,EAAO0F,EAAQ,CACvC,IAAM3G,EAASiB,EAAM,YAAY,OAAO0F,CAAM,EAC9C,GAAI,CAAC3G,EAAQ,CACX4G,EAAW,WAAWD,CAAM,aAAa,EACzC,MACF,CACA1F,EAAM,YAAY,eAAe,CAC/B,OAAAjB,EACA,cAAe,eACf,WAAY,MACd,CAAC,CACH,CAGA,SAAS6G,GAA6BC,EAAoBC,EAAKC,EAAgB,CAC7E,GAAID,GAAO,KACT,OAAO,KAET,IAAIE,EAA4B,KAC1B,CACJ,SAAAC,EACA,OAAAC,EACA,OAAAC,CACF,EAAIC,GAAqB,YAAYP,EAAoBC,EAAKO,EAAe,EAC7E,OAAIJ,EAeFD,EAd8B,CAC5B,IAAK,4BACL,kBAAmB,4BACnB,MAAO,8BACP,oBAAqB,8BACrB,MAAO,8BACP,oBAAqB,8BACrB,OAAQ,+BACR,qBAAsB,+BACtB,KAAM,6BACN,mBAAoB,6BACpB,KAAM,6BACN,mBAAoB,4BACtB,EACkDC,CAAQ,EAE/BC,GAAU,MAAQC,GAAU,MAAQL,EAAI,SAAW,KAE5EE,EAA4BD,EAAe,GAGxCC,CACT,CAGA,IAAIM,GAAsB,cAAcxG,CAAS,CAC/C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,sBAChB,KAAK,iBAAkC,IAAI,IAC3C,KAAK,mBAAoC,IAAI,IAC7C,KAAK,uBAAyB,CAAC,EAC/B,KAAK,oBAAsB,CAAC,EAM5B,KAAK,uBAAyB,GAE9B,KAAK,uBAAyB,CAAC,EAC/B,KAAK,6BAA+B,CAAC,CACvC,CACA,UAAUE,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,SAAWA,EAAM,SACtB,KAAK,qBAAuBA,EAAM,qBAClC,KAAK,YAAcA,EAAM,YACzB,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,cAAgBA,EAAM,aAC7B,CACA,eAAgB,CACd,KAAK,yBAAyB,CAC5B,mBAAoB,KAAK,iBAAiB,KAAK,IAAI,EACnD,eAAgB,IAAM,KAAK,gBAAgB,gBAAgB,EAC3D,kBAAmB,KAAK,8BAA8B,KAAK,IAAI,CACjE,CAAC,EACD,KAAK,mBAAqBmE,EAAA,GACpB,KAAK,IAAI,IAAI,cAAc,GAAG,QAAQ,aAAe,CAAC,EAE9D,CACA,eAAekB,EAAOkB,EAAS,MAAO,CACpC,GAAI,KAAK,iBAAiB,mBAAmB,EAAG,CAC9C,KAAK,uBAAuB,KAAK,CAC/B,MAAAlB,EACA,OAAAkB,CACF,CAAC,EACD,MACF,CACA,IAAMC,EAAc,CAAC,EACfC,EAAgB,KAAK,eAAe,EAC1C,GAAIpB,EAAO,CACT,IAAMqB,EAAY,IAAI,IAAI,OAAO,KAAKrB,CAAK,CAAC,EAC5C,KAAK,iBAAiB,QAAQ,CAACsB,EAAeC,IAAU,CACtD,IAAMC,EAAWxB,EAAMuB,CAAK,EAC5BJ,EAAY,KAAK,KAAK,wBAAwBG,EAAc,cAAeE,CAAQ,CAAC,EACpFH,EAAU,OAAOE,CAAK,CACxB,CAAC,EACDF,EAAU,QAAQE,GAAS,CACzB,IAAM7H,EAAS,KAAK,YAAY,aAAa6H,CAAK,GAAK,KAAK,YAAY,OAAOA,CAAK,EACpF,GAAI,CAAC7H,EAAQ,CACX8F,EAAU,iDAAmD+B,CAAK,EAClE,MACF,CACA,GAAI,CAAC7H,EAAO,gBAAgB,EAAG,CAC7B8F,EAAU,iFAAmF+B,CAAK,EAClG,MACF,CACA,IAAMD,EAAgB,KAAK,yBAAyB5H,CAAM,EAC1D,GAAI,CAAC4H,EAAe,CAClB9B,EAAU,sFAAwF+B,CAAK,EACvG,MACF,CACAJ,EAAY,KAAK,KAAK,wBAAwBG,EAAc,cAAetB,EAAMuB,CAAK,CAAC,CAAC,CAC1F,CAAC,CACH,MACE,KAAK,iBAAiB,QAAQD,GAAiB,CAC7CH,EAAY,KAAK,KAAK,wBAAwBG,EAAc,cAAe,IAAI,CAAC,CAClF,CAAC,EAEHG,GAAU,IAAIN,CAAW,EAAE,KAAK,IAAM,CACpC,IAAMO,EAAe,KAAK,eAAe,EACnChF,EAAU,CAAC,EACjB,KAAK,iBAAiB,QAAQ,CAAC4E,EAAeC,IAAU,CACtD,IAAMI,EAASP,EAAgBA,EAAcG,CAAK,EAAI,KAChDK,EAAQF,EAAeA,EAAaH,CAAK,EAAI,KAC9CM,GAAYF,EAAQC,CAAK,GAC5BlF,EAAQ,KAAK4E,EAAc,MAAM,CAErC,CAAC,EACG5E,EAAQ,OAAS,GACnB,KAAK,eAAe,gBAAgB,CAClC,QAAAA,EACA,OAAAwE,CACF,CAAC,CAEL,CAAC,CACH,CACA,wBAAwBY,EAAeN,EAAU,CAC/C,OAAO,IAAIC,GAAUM,GAAW,CAC9BD,EAAc,KAAKE,GAAU,CACvB,OAAOA,EAAO,UAAa,aAC7BxC,EAAU,oEAAoE,EAC9EuC,EAAQ,IAETC,EAAO,SAASR,CAAQ,GAAKC,GAAU,QAAQ,GAAG,KAAK,IAAMM,EAAQ,CAAC,CACzE,CAAC,CACH,CAAC,CACH,CACA,gBAAiB,CACf,IAAME,EAAS,CAAC,EAChB,YAAK,iBAAiB,QAAQ,CAACX,EAAepF,IAAQ,CACpD,IAAM8D,EAAQ,KAAK,0BAA0BsB,CAAa,EACtDY,EAAQlC,CAAK,IACfiC,EAAO/F,CAAG,EAAI8D,EAElB,CAAC,EACMiC,CACT,CACA,0BAA0BX,EAAe,CACvC,GAAM,CACJ,OAAAU,CACF,EAAIV,EACJ,OAAIU,EACE,OAAOA,EAAO,UAAa,YAC7BxC,EAAU,wEAAwE,EAC3E,MAEFwC,EAAO,SAAS,EAEhB,KAAK,yBAAyBV,EAAc,MAAM,CAE7D,CACA,yBAAyB5H,EAAQ,CAC/B,OAAO,KAAK,mBAAmBA,EAAO,SAAS,CAAC,GAAK,IACvD,CACA,uBAAwB,CACtB,OAAO,KAAK,oBAAoB,OAAS,CAC3C,CACA,0BAA2B,CACzB,MAAO,CAAC,CAAC,KAAK,uBAAuB,MACvC,CACA,sBAAuB,CACrB,OAAI,KAAK,iBAAiB,MACxB,KAAK,iBAAiB,QAAQ4H,GAAiB,KAAK,qBAAqBA,EAAe,uBAAuB,CAAC,EACzG,IAEF,EACT,CACA,uBAAuBa,EAAMC,EAAc,CACzC,OAAO,KAAK,oBAAoBD,EAAMC,EAAc,EAAI,CAC1D,CACA,qBAAsB,CACpB,IAAMC,EAAiBL,GAChBA,EAGAA,EAAO,eAILA,EAAO,eAAe,GAH3BxC,EAAU,2CAA2C,EAC9C,IAJA,GAQL8C,EAAqB,CAAC,CAAC,KAAK,IAAI,qBAAqB,EACrDC,EAAc7I,GAAU,CAE5B,GADoB,CAACA,EAAO,UAAU,EAEpC,MAAO,GAET,IAAM8I,EAA0B,CAAC,KAAK,YAAY,cAAc,EAEhE,MAAI,CADkB9I,EAAO,cAAc,GACrB,CAAC8I,EACd,GAEL,KAAK,YAAY,YAAY,EACxB,GAEFF,CACT,EACMG,EAAyB,CAAC,EAC1BC,EAAsB,CAAC,EAC7B,OAAO,KAAK,oBAAoB,CAACV,EAAQV,IAAkB,CACpCe,EAAeL,CAAM,IAEpCO,EAAYjB,EAAc,MAAM,EAClCmB,EAAuB,KAAKT,CAAM,EAElCU,EAAoB,KAAKV,CAAM,EAGrC,CAAC,EAAE,KAAK,IAAM,CACZ,KAAK,uBAAyBS,EAC9B,KAAK,oBAAsBC,CAC7B,CAAC,CACH,CACA,0BAA0BxB,EAAQyB,EAA2B,CAC3D,OAAO,KAAK,oBAAoB,CAACX,EAAQV,IAAkBA,EAAc,OAAO,gBAAgBU,EAAO,eAAe,EAAGd,EAAQyB,CAAyB,CAAC,CAC7J,CACA,oBAAoB/C,EAAU,CAC5B,OAAO6B,GAAU,IAAI,MAAM,KAAK,KAAK,iBAAiB,OAAO,CAAC,EAAE,IAAIH,GAAiBA,EAAc,cAAc,KAAKU,GAAUpC,EAASoC,EAAQV,CAAa,CAAC,CAAC,CAAC,CACnK,CACA,oBAAoBa,EAAMC,EAAcQ,EAAkB,CACxD,GAAM,CACJ,KAAAC,EACA,QAAAC,CACF,EAAIX,EACEY,EAAkBH,EAAmB,KAAK,uBAAyB,KAAK,oBACxEI,EAAeJ,EAAmBE,EAAUD,EAClD,QAASI,EAAI,EAAGA,EAAIF,EAAgB,OAAQE,IAAK,CAC/C,IAAMjB,EAASe,EAAgBE,CAAC,EAChC,GAAI,EAAAjB,GAAU,MAAQA,IAAWI,GAGjC,IAAI,OAAOJ,EAAO,gBAAmB,WACnC,MAAM,IAAI,MAAM,yCAAyC,EAE3D,GAAI,CAACA,EAAO,eAAe,CACzB,KAAAG,EACA,KAAMa,CACR,CAAC,EACC,MAAO,GAEX,CACA,MAAO,EACT,CAOA,sCAAsC1I,EAAQ,CAC5C,IAAM4I,EAAS,IAAM,KAAK,eAAe,gBAAgB5I,CAAM,EAC3D,KAAK,YAAY,oBAAoB,EACvC,WAAW4I,EAAQ,CAAC,EAEpBA,EAAO,CAEX,CACA,0BAA0B5I,EAAS,CAAC,EAAG,CACrC,GAAM,CACJ,eAAA6I,EACA,0BAAAR,CACF,EAAIrI,EACJ,YAAK,uBAAuB,EACrB,KAAK,oBAAoB,EAAE,KAAK,IAAM,KAAK,0BAA0B,gBAAiBqI,CAAyB,EAAE,KAAK,IAAM,CACjI,KAAK,iBAAiB,QAAQrB,GAAiB,CACxCA,EAAc,eAGnBA,EAAc,cAAc,KAAKU,GAAU,CACrCA,GAAUA,IAAWmB,GAAkBnB,EAAO,oBAChDA,EAAO,mBAAmB,CAE9B,CAAC,CACH,CAAC,EACD,KAAK,uBAAyB,EAChC,CAAC,CAAC,CACJ,CACA,0BAA2B,CACzB,KAAK,uBAAyB,EAChC,CACA,yCAA0C,CAExC,MAAO,EAD4B,KAAK,IAAI,IAAI,4BAA4B,GAAK,KAC3C,KAAK,sBAC7C,CACA,gBAAgBd,EAAQ,CACtB,KAAK,oBAAoBc,GAAU,CAC7BA,EAAO,iBACTA,EAAO,gBAAgB,CAE3B,CAAC,EAAE,KAAK,IAAM,KAAK,0BAA0Bd,EAAQ,CACnD,gBAAiB,EACnB,CAAC,CAAC,EAAE,KAAK,IAAM,KAAK,oBAAoB,CAAC,CAC3C,CACA,kBAAkBxH,EAAQ,CACxB,MAAO,CAAC,CACN,KAAAyI,CACF,IAAM,KAAK,aAAa,SAASzI,EAAQyI,EAAM,EAAI,CACrD,CACA,eAAeiB,EAAc,CAC3B,MAAO,CAACC,EAAS3J,IAAW,CAC1B,IAAM2C,EAAc3C,EAAS,KAAK,YAAY,OAAOA,CAAM,EAAI0J,EAC/D,OAAO/G,EAAc,KAAK,aAAa,SAASA,EAAagH,EAAS,EAAI,EAAI,MAChF,CACF,CACA,eAAe3J,EAAQ,CACrB,GAAM,CACJ,OAAAsI,CACF,EAAI,KAAK,aAAatI,CAAM,GAAK,CAAC,EAClC,OAAIsI,EACKA,EAAO,eAAe,EAExB,KAAK,yBAAyBtI,CAAM,GAAK,IAClD,CACA,yBAAyBA,EAAQ,CAC/B,GAAI,CAACA,EAAO,gBAAgB,EAC1B,OAAO,KAET,IAAI4H,EAAgB,KAAK,aAAa5H,CAAM,EAC5C,OAAK4H,IACHA,EAAgB,KAAK,oBAAoB5H,CAAM,EAC/C,KAAK,uBAAuBA,EAAQ4H,CAAa,GAE5CA,CACT,CACA,aAAa5H,EAAQ,CACnB,OAAO,KAAK,iBAAiB,IAAIA,EAAO,SAAS,CAAC,CACpD,CACA,iBAAiBA,EAAQ,CACvB,IAAI4J,EACJ,GAAIC,EAAe,eAAe,iCAAwD,KAAK,MAAM,EACnGD,EAAgB,wBACX,CACL,IAAME,EAAe,KAAK,iBAAiB,gBAAgB9J,CAAM,EAC7D8J,IAAiB,SACnBF,EAAgB,uBACPE,IAAiB,QAAUA,IAAiB,aACrDF,EAAgB,qBAEhBA,EAAgB,oBAEpB,CACA,OAAOA,CACT,CACA,yBAAyB5J,EAAQ,CAC/B,IAAIiH,EACJ,GAAI4C,EAAe,eAAe,iCAAwD,KAAK,MAAM,EACnG5C,EAA4B,gCACvB,CACL,IAAM6C,EAAe,KAAK,iBAAiB,gBAAgB9J,CAAM,EAC7D8J,IAAiB,SACnB7C,EAA4B,+BACnB6C,IAAiB,QAAUA,IAAiB,aACrD7C,EAA4B,6BAE5BA,EAA4B,4BAEhC,CACA,OAAOA,CACT,CACA,qBAAqBjH,EAAQ4H,EAAe,CAC1C,IAAMgC,EAAgB,KAAK,iBAAiB5J,CAAM,EAC5CqD,EAASrD,EAAO,UAAU,EAC5ByJ,EACE7I,EAASuE,EAAAC,EAAA,GACV,KAAK,mBAAmBpF,EAAQqD,CAAM,GAD5B,CAEb,uBAAwB,IAAM,KAAK,8BAA8BoG,EAAgBzJ,CAAM,EAAE,EACzF,sBAAuBiJ,GAA6B,KAAK,6BAA6BQ,EAAgBzJ,CAAM,EAAEiJ,CAAyB,EACvI,uBAAwBR,GAAQ,KAAK,cAAgB,KAAK,cAAc,wBAAwBgB,EAAgBhB,CAAI,EAAI,EAC1H,GACM7D,EAAc,KAAK,qBAAqB,iBAAiBvB,EAAQzC,EAAQgJ,CAAa,EAC5F,OAAKhF,EAME,CACL,cAAe,IAAM,CACnB,IAAMwD,EAAgBxD,EAAY,mBAAmB,EACrD,OACEwD,GAAc,KAAK2B,GAAK,CACtBN,EAAiBM,EACbnC,IACFA,EAAc,OAASmC,EAE3B,CAAC,EAEI3B,CACT,EACA,YAAAxD,CACF,EAnBS,CACL,cAAe,KACf,YAAa,IACf,CAiBJ,CACA,mBAAmB5E,EAAQqD,EAAQ,CAWjC,OAVe,KAAK,IAAI,oBAAoB,CAC1C,OAAArD,EACA,OAAQgK,GAAa3G,CAAM,EAC3B,SAAU,KAAK,SACf,sBAAuB,IAAM,CAAC,EAC9B,uBAAwB,IAAM,CAAC,EAC/B,YAAa,KAAK,kBAAkBrD,CAAM,EAC1C,SAAU,KAAK,eAAeA,CAAM,EACpC,uBAAwB,IAAM,EAChC,CAAC,CAEH,CACA,oBAAoBA,EAAQ,CAC1B,IAAM4H,EAAgB,CACpB,OAAA5H,EACA,cAAe,KACf,gBAAiB,KACjB,YAAa,IACf,EACM,CACJ,cAAAoI,EACA,YAAAxD,CACF,EAAI,KAAK,qBAAqB5E,EAAQ4H,CAAa,EACnD,OAAAA,EAAc,cAAgBQ,IAAgB,GAAK,KACnDR,EAAc,YAAchD,EACrBgD,CACT,CACA,kBAAmB,CACjB,IAAM5E,EAAU,CAAC,EACjB,KAAK,iBAAiB,QAAQ,CAACiH,EAASpC,IAAU,CAChD,IAAIqC,EACAD,EAAQ,OAAO,UAAU,EAC3BC,EAAgB,KAAK,YAAY,aAAarC,CAAK,EAEnDqC,EAAgB,KAAK,YAAY,OAAOrC,CAAK,EAE3C,EAAAqC,GAAiBA,IAAkBD,EAAQ,UAG/CjH,EAAQ,KAAKiH,EAAQ,MAAM,EAC3B,KAAK,qBAAqBA,EAAS,eAAe,EAClD,KAAK,sBAAsBpC,CAAK,EAClC,CAAC,EACG7E,EAAQ,OAAS,EACnB,KAAK,eAAe,gBAAgB,CAClC,QAAAA,EACA,OAAQ,KACV,CAAC,EAED,KAAK,uBAAuB,CAEhC,CACA,wBAAyB,CACF,KAAK,YAAY,YAAY,GACpC,QAAQmH,GAAe,CAC/BA,EAAY,UAAU,EAAE,SAAW,uBACrC,KAAK,yBAAyBA,CAAW,CAE7C,CAAC,CACH,CAEA,gBAAgBnK,EAAQ,CAEtB,GAAI,CADoBA,EAAO,gBAAgB,EAE7C,MAAO,GAET,GAAM,CACJ,OAAAsI,CACF,EAAI,KAAK,iBAAiB,IAAItI,EAAO,SAAS,CAAC,GAAK,CAAC,EACrD,OAAIsI,GACK,OAAOA,GAAQ,iBAAoB,WAAaA,EAAO,gBAAgB,EAEzE,EACT,CACA,6BAA6BtI,EAAQoK,EAAkB,CACrD,IAAMC,EAAuBnE,GAAY,CACvC,IAAMoE,EAAkB,KAAK,yBAAyBtK,CAAM,GAAG,cAI/DsK,GAAgB,KAAKC,GAAY,CAC/BrE,EAASsE,GAAgBD,CAAQ,CAAC,CACpC,CAAC,CACH,EACMlH,EAASrD,EAAO,UAAU,EAC1ByK,EAAetF,EAAAC,EAAA,GAChB,KAAK,mBAAmBpF,EAAQqD,CAAM,GADtB,CAEnB,sBAAuB,IAAMgH,EAAqBZ,GAAkB,KAAK,6BAA6BA,EAAgBzJ,CAAM,EAAE,CAAC,CACjI,GACM0K,EAAoB,KAAK,qBAAqB,yCAAyCrH,EAAQiE,GAAiBmD,CAAY,EAC9HxD,EAA4BJ,GAA6B,KAAK,mBAAoBxD,EAAQ,IAAM,KAAK,yBAAyBrD,CAAM,CAAC,EACrIiH,GAA6B,OAC/BA,EAA4B,4BAE9B,IAAMrG,EAAS,CACb,OAAAZ,EACA,aAAc0K,EACd,mBAAoB,IAAM,KAAK,oCAAoC1K,CAAM,EACzE,qBAAAqK,EACA,iBAAAD,EACA,qBAAsB,EAExB,EACA,OAAO,KAAK,qBAAqB,6BAA6B/G,EAAQzC,EAAQqG,CAAyB,CACzG,CACA,oCAAoCjH,EAAQ,CAC1C,OAAO,KAAK,0BAA0B,KAAK,aAAaA,CAAM,GAAK,CACjE,OAAAA,CACF,CAAC,CACH,CAEA,cAAcA,EAAQwH,EAAS,MAAO,CACpC,IAAMK,EAAQ7H,EAAO,SAAS,EACxB4H,EAAgB,KAAK,iBAAiB,IAAIC,CAAK,EACrD,KAAK,sBAAsBA,CAAK,EAChC,OAAO,KAAK,mBAAmBA,CAAK,EAChCD,IACF,KAAK,qBAAqBA,EAAeJ,CAAM,EAC/C,KAAK,eAAe,gBAAgB,CAClC,QAAS,CAACxH,CAAM,EAChB,OAAQ,KACV,CAAC,EAEL,CACA,sBAAsB6H,EAAO,CAC3B,IAAM8C,EAAiB,KAAK,mBAAmB,IAAI9C,CAAK,EACpD8C,IACF,KAAK,mBAAmB,OAAO9C,CAAK,EACpC8C,EAAe,EAEnB,CACA,qBAAqB/C,EAAeJ,EAAQ,CAC1CI,EAAc,cAAc,KAAKU,GAAU,CACzC,KAAK,YAAYA,CAAM,EACvBV,EAAc,OAAO,gBAAgB,GAAO,iBAAiB,EAC7D,KAAK,iBAAiB,OAAOA,EAAc,OAAO,SAAS,CAAC,EAC5D,IAAMrG,EAAQ,CACZ,KAAM,kBACN,OAAAiG,EACA,OAAQI,EAAc,MACxB,EACA,KAAK,aAAa,cAAcrG,CAAK,CACvC,CAAC,CACH,CACA,8BAA8B+G,EAAQtI,EAAQ,CAC5C,MAAO,IAAM,CACX,IAAMuB,EAAQ,CACZ,KAAM,iBACN,OAAAvB,EACA,eAAgBsI,CAClB,EACA,KAAK,aAAa,cAAc/G,CAAK,CACvC,CACF,CACA,6BAA6B+G,EAAQtI,EAAQ,CAC3C,OAAOiJ,GAA6B,CAClC,IAAMzB,EAASyB,GAA2B,QAAU,eAC9CrI,EAAS,CACb,OAAA0H,EACA,0BAAAW,EACA,QAAS,CAACjJ,CAAM,EAChB,OAAAwH,CACF,EACA,KAAK,sCAAsC5G,CAAM,CACnD,CACF,CACA,mBAAmBiH,EAAO,CACxB,IAAMD,EAAgB,KAAK,iBAAiB,IAAIC,CAAK,EACrD,GAAI,CAACD,EACH,OAEF,IAAM5H,EAAS4H,EAAc,OACvB,CACJ,YAAAhD,CACF,EAAI5E,EAAO,gBAAgB,EAAI,KAAK,qBAAqBA,CAAM,EAAI,CACjE,YAAa,IACf,EACA,GAAI,KAAK,wBAAwB4H,EAAc,YAAahD,CAAW,EAAG,CACxE,KAAK,cAAc5E,EAAQ,eAAe,EAC1C,MACF,CACA,IAAM4K,EAAkB5K,EAAO,UAAU,EAAE,aAC3C,GAAI,CAAC4H,EAAc,cAAe,CAChC,KAAK,cAAc5H,EAAQ,eAAe,EAC1C,MACF,CACA4H,EAAc,cAAc,KAAKU,GAAU,EACbA,GAAQ,QAAUA,EAAO,QAAQlD,EAAAD,EAAAC,EAAA,GACxD,KAAK,mBAAmBpF,EAAQA,EAAO,UAAU,CAAC,GADM,CAE3D,uBAAwB,KAAK,8BAA8BsI,EAAQtI,CAAM,EACzE,sBAAuB,KAAK,6BAA6BsI,EAAQtI,CAAM,EACvE,uBAAwByI,GAAQ,KAAK,cAAgB,KAAK,cAAc,wBAAwBH,EAAQG,CAAI,EAAI,KAC7GmC,EACJ,EAAI,MACuB,IAC1B,KAAK,cAAc5K,EAAQ,eAAe,CAE9C,CAAC,CACH,CACA,uBAAuBA,EAAQ4H,EAAe,CAC5C,IAAMC,EAAQ7H,EAAO,SAAS,EAC9B,KAAK,iBAAiB,IAAI6H,EAAOD,CAAa,EAC9C,KAAK,mBAAmB,IAAIC,EAAO,KAAK,oBAAoB7H,EAAQ,CAClE,cAAe,IAAM,KAAK,mBAAmB6H,CAAK,CACpD,CAAC,EAAE,CAAC,CAAC,CACP,CACA,wBAAwBgD,EAAgBpF,EAAgB,CACtD,GAAI,CAACA,GAAkB,CAACoF,EACtB,MAAO,GAET,GAAM,CACJ,eAAgBC,CAClB,EAAID,EACE,CACJ,eAAgBE,CAClB,EAAItF,EAIJ,MAAO,EAHsBqF,IAAsBC,GAEnDD,GAAmB,QAAUC,GAAmB,QAAUD,EAAkB,SAAWC,EAAkB,OAE3G,CACA,oBAAqB,CAEnB,OADoB,KAAK,YAAY,QAAQ,EAC1B,KAAKC,GAAOA,EAAI,UAAU,EAAE,cAAc,CAC/D,CACA,kBAAkBxI,EAAK0D,EAAU,CAC1BA,GAGL,KAAK,sBAAsB1D,CAAG,EAAE,KAAK8F,GAAU,CAC7C,IAAM2C,EAAYT,GAAgBlC,CAAM,EACxCpC,EAAS+E,CAAS,CACpB,CAAC,CAEH,CACA,wBAAwBzI,EAAK,CAC3B,OAAO,IAAI,QAAQ6F,GAAW,CAC5B,KAAK,sBAAsB7F,CAAG,EAAE,KAAK8F,GAAU,CAC7CD,EAAQmC,GAAgBlC,CAAM,CAAC,CACjC,CAAC,CACH,CAAC,CACH,CACA,sBAAsB9F,EAAK,CACzB,IAAMxC,EAAS,KAAK,YAAY,aAAawC,CAAG,EAChD,OAAKxC,EAGiB,KAAK,yBAAyBA,CAAM,GAAG,eACrC+H,GAAU,QAAQ,IAAI,EAHrCA,GAAU,QAAQ,MAAM,CAInC,CACA,+BAAgC,CAC9B,KAAK,uBAAuB,QAAQ,CAAC,CACnC,MAAAzB,EACA,OAAAkB,CACF,IAAM,KAAK,eAAelB,EAAOkB,CAAM,CAAC,EACxC,KAAK,uBAAyB,CAAC,EAC/B,KAAK,6BAA6B,QAAQ,CAAC,CACzC,IAAAhF,EACA,MAAA8D,EACA,QAAA+B,CACF,IAAM,CACJ,KAAK,qBAAqB7F,EAAK8D,CAAK,EAAE,KAAK,IAAM+B,EAAQ,CAAC,CAC5D,CAAC,EACD,KAAK,6BAA+B,CAAC,CACvC,CACA,qBAAqB7F,EAAK,CACxB,IAAMoF,EAAgB,KAAK,iBAAiBpF,CAAG,EAC/C,OAAOoF,EAAgB,KAAK,0BAA0BA,CAAa,EAAI,IACzE,CACA,qBAAqBpF,EAAK8D,EAAO,CAC/B,GAAI,KAAK,iBAAiB,mBAAmB,EAAG,CAC9C,IAAI+B,EAAU,IAAM,CAAC,EACf6C,EAAU,IAAI,QAAQC,GAAO,CACjC9C,EAAU8C,CACZ,CAAC,EACD,YAAK,6BAA6B,KAAK,CACrC,IAAA3I,EACA,MAAA8D,EACA,QAAA+B,CACF,CAAC,EACM6C,CACT,CACA,IAAMlL,EAAS,KAAK,YAAY,aAAawC,CAAG,EAC1CoF,EAAgB5H,EAAS,KAAK,yBAAyBA,CAAM,EAAI,KAMvE,OAAO4H,GALgBsD,GACd,IAAI,QAAQ7C,GAAW,CAC5B6C,EAAQ,KAAK3C,GAAUF,EAAQE,CAAM,CAAC,CACxC,CAAC,GAEmC,KAAK,wBAAwBX,EAAc,cAAetB,CAAK,CAAC,EAAI,QAAQ,QAAQ,CAC5H,CACA,iBAAiB9D,EAAK,CACpB,IAAMxC,EAAS,KAAK,YAAY,aAAawC,CAAG,EAChD,OAAOxC,EAAS,KAAK,aAAaA,CAAM,GAAK,KAAO,IACtD,CACA,SAAU,CACR,MAAM,QAAQ,EACd,KAAK,iBAAiB,QAAQ4H,GAAiB,KAAK,qBAAqBA,EAAe,eAAe,CAAC,EACxG,KAAK,mBAAmB,MAAM,CAChC,CACF,EAGA,SAASwD,GAAmBnK,EAAO,CACjC,MAAO,CAAC,CAACA,EAAM,eAAe,mBAAmB,CACnD,CACA,SAASoK,GAAgBpK,EAAOuG,EAAS,MAAO,CAC9CvG,EAAM,eAAe,gBAAgB,CACnC,OAAAuG,CACF,CAAC,CACH,CAGA,IAAI8D,GAAyB,cAAcC,CAAU,CACnD,aAAc,CACZ,MACA;AAAA;AAAA;AAAA,oBAGiB,CAACC,EAAwB,CAAC,EAC3C,KAAK,oBAAsBC,CAC7B,CACA,UAAUxK,EAAO,CACf,KAAK,kBAAoBA,EAAM,iBACjC,CAGA,SAAU,CACR,MAAM,QAAQ,CAChB,CACA,KAAKL,EAAQ,CACX,KAAK,OAASA,EACd,IAAM8K,EAAc,KAAK,kBAAkB,wBAAwB9K,EAAO,OAAQ,SAAU,EAAI,EAC1F+K,EAAY,KAAK,cAAc,kBAAkB,EACvD,KAAK,oBAAoB,YAAY,EAAI,EAAE,kBAAkB,GAAGD,CAAW,IAAIC,EAAU,kBAAmB,cAAc,CAAC,EAAE,CAC/H,CACA,qBAAqB1G,EAAa,CAChC,GAAIA,GAAe,KAAM,CACvB,KAAK,oBAAoB,SAAS,EAAE,EACpC,MACF,CACA,KAAK,OAAO,qBAAqBwE,GAAkB,CACjD,GAAIA,EAAe,iBAAkB,CACnC,IAAMmC,EAAgBnC,EAAe,iBAAiBxE,CAAW,EACjE,KAAK,oBAAoB,SAAS2G,CAAa,CACjD,CACF,CAAC,CACH,CACA,gBAAgBhL,EAAQ,CACtB,KAAK,QAAQA,CAAM,CACrB,CACA,QAAQA,EAAQ,CACd,KAAK,KAAKA,CAAM,CAClB,CACF,EAGIiL,GAAuB,cAAcN,CAAU,CACjD,UAAUtK,EAAO,CACf,KAAK,kBAAoBA,EAAM,iBACjC,CACA,sBAAuB,CACrB,MAAO,EACT,CAGA,SAAU,CACR,MAAM,QAAQ,CAChB,CACA,0BAA0BM,EAAO,CAC/B,OAAOA,GAASA,EAAM,mBACxB,CACA,sBAAsBA,EAAO,CAC3B,OAAOA,GAAO,eAChB,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,YAAa,CACX,OAAO,KAAK,QACd,CACA,qBAAqB+E,EAAO,CAC1B,GAAI,CAACA,EAAO,CACV,KAAK,SAAW,KAAK,eAAe,iBAAiB,EACrD,MACF,CACA,IAAMwF,EAAaxF,EAAM,SACrByF,EACAD,EAEFC,EADsBzF,EACI,WAAW,CAAC,EAEtCyF,EAAYzF,EAEd,KAAK,SAAWyF,EAAU,IAC5B,CACA,oCAAoCzF,EAAO,CACzC,GAAI,CAACA,EACH,OAAO,KAAK,eAAe,KAAK,QAAQ,EAG1C,GADmBA,EAAM,SAEvB,MAAO,GAET,IAAM0F,EAAc1F,EACpB,OAAO,KAAK,eAAe0F,EAAY,IAAI,CAC7C,CACA,KAAKpL,EAAQ,CACX,KAAK,gBAAgBA,EAAQ,EAAK,CACpC,CACA,gBAAgBA,EAAQqL,EAAS,GAAM,CACrC,KAAK,eAAiB,IAAIC,GAC1B,KAAK,eAAe,KAAKtL,EAAO,aAAc,KAAK,wBAAwB,CAAC,EACvEqL,IACH,KAAK,SAAW,KAAK,eAAe,iBAAiB,GAEvD,KAAK,SAAW,CAAC,CAACrL,EAAO,aAAa,SACtC,IAAMuL,EAAW,KAAK,eAAe,KAAK,eAAe,iBAAiB,CAAC,EAC3E,KAAK,YAAYA,CAAQ,CAC3B,CACA,gBAAgBvL,EAAQ,CACtB,KAAK,QAAQA,CAAM,CACrB,CACA,QAAQA,EAAQ,CACd,KAAK,gBAAgBA,CAAM,CAC7B,CACA,0BAA0BwL,EAAY,CACpC,IAAMC,EAAqB,KAAK,eAAe,gBAAgBD,CAAU,EACnE,CACJ,eAAAE,CACF,EAAID,GAAsB,CAAC,EAC3B,OAAOC,GAAkB,MAAQA,GAAkB,CACrD,CACA,eAAeC,EAAM,CACnB,IAAMC,EAAkB,CAAC,UAAW,QAAS,QAAS,UAAU,EAChE,MAAO,CAAC,CAACD,GAAQ,CAAC,KAAK,WAAW,GAAK,KAAK,0BAA0BA,CAAI,GAAKC,EAAgB,QAAQD,CAAI,EAAI,CACjH,CACA,aAAa3L,EAAQ,CACnB,IAAM8K,EAAc,KAAK,kBAAkB,wBAAwB9K,EAAO,OAAQ,SAAU,EAAI,EAC1F+K,EAAY,KAAK,cAAc,kBAAkB,EACvD,MAAO,GAAGD,CAAW,IAAIC,EAAU,kBAAmB,cAAc,CAAC,EACvE,CACF,EAGIc,GAAqB,cAAcZ,EAAqB,CAC1D,aAAc,CACZ,MACA;AAAA;AAAA;AAAA;AAAA,oBAIiB,CAACL,EAAwB,CAAC,EAC3C,KAAK,cAAgBC,EACrB,KAAK,aAAeA,CACtB,CACA,UAAUxK,EAAO,CACf,MAAM,UAAUA,CAAK,EACrB,KAAK,QAAUA,EAAM,QACrB,KAAK,qBAAuBA,EAAM,oBACpC,CACA,yBAA0B,CACxB,OAAOyL,EACT,CACA,KAAK9L,EAAQ,CACX,MAAM,KAAKA,CAAM,EACjB,KAAK,OAASA,EACd,KAAK,aAAeA,EAAO,aAC3B,KAAK,oBAAoB,EACzB,KAAK,qBAAuB,IAAI+L,GAAyB,KAAK,aAAc,KAAK,cAAe,KAAK,cAAc,EACnH,IAAMhB,EAAY,KAAK,cAAc,kBAAkB,EACvD,KAAK,cAAc,YAAY,EAAI,EAAE,kBAAkBA,EAAU,sBAAuB,mBAAmB,CAAC,CAC9G,CACA,gBAAgB/K,EAAQ,CACtB,KAAK,QAAQA,CAAM,CACrB,CACA,QAAQA,EAAQ,CACd,MAAM,QAAQA,CAAM,EACpB,KAAK,OAASA,EACd,KAAK,aAAeA,EAAO,aAC3B,KAAK,oBAAoB,EACzB,KAAK,qBAAqB,aAAa,CACrC,eAAgB,KAAK,eACrB,iBAAkB,KAAK,YACzB,CAAC,EACD,KAAK,wBAAwBA,EAAO,mBAAmB,CAAC,CAC1D,CACA,wBAAwB0F,EAAO,CAC7B,IAAMsG,EAAe,CAAC,KAAK,WAAW,GAAK,KAAK,oCAAoCtG,CAAK,EAEzF,GADA,KAAK,YAAYsG,CAAY,EACzBA,EAAc,CAChB,GAAItG,EAAO,CACT,IAAMuG,EAAYvG,EAClB,KAAK,SAAS,QAAQwG,EAAyBD,EAAU,QAAQ,CAAC,CACpE,MACE,KAAK,SAAS,QAAQ,IAAI,EAE5B,KAAK,cAAc,SAAS,EAAE,CAChC,MACE,KAAK,cAAc,SAAS,KAAK,qBAAqB,iBAAiBvG,CAAK,CAAC,EAC7E,KAAK,SAAS,QAAQ,IAAI,CAE9B,CACA,YAAY6F,EAAU,CACpBY,EAAc,KAAK,aAAcZ,CAAQ,EACzCY,EAAc,KAAK,cAAc,OAAO,EAAG,CAACZ,CAAQ,CACtD,CACA,qBAAqB7F,EAAO/E,EAAO,CAC7B,KAAK,0BAA0BA,CAAK,GAAK,KAAK,sBAAsBA,CAAK,IAG7E,MAAM,qBAAqB+E,CAAK,EAChC,KAAK,wBAAwBA,CAAK,EACpC,CACA,eAAgB,CACd,IAAM0G,EAAkB,KAAK,SAAS,QAAQ,EACxCC,EAAkBC,GAAeF,CAAe,EACtD,KAAK,OAAO,qBAAqBvD,GAAkB,CACjD,GAAIA,EAAgB,CAClB,IAAM0D,EAAOL,EAAyBG,CAAe,EACrDxD,EAAe,wBAAwB,KAAK,YAAY,GAAK,KAAM0D,CAAI,CACzE,CACF,CAAC,CACH,CACA,wBAAyB,CACvB,IAAMC,EAAaC,GAAc,KAAK,OAAO,aAAc,KAAK,qBAAqB,CAAC,EACtF,MAAO,CACL,cAAeC,EAAU,KAAK,cAAc,KAAK,IAAI,EAAGF,CAAU,EAClE,aAAc,KAAK,OAAO,OAAO,UAAU,EAAE,YAC/C,CACF,CACA,qBAAsB,CACpB,KAAK,SAAW,IAAIG,GAAgB,KAAK,QAAS,KAAK,qBAAsB,KAAK,uBAAuB,EAAG,KAAK,aAAcC,GAAY,CACzIA,EAAS,kBAAkB,KAAK,aAAa,KAAK,MAAM,CAAC,CAC3D,CAAC,EACD,KAAK,eAAe,IAAM,KAAK,SAAS,QAAQ,CAAC,CACnD,CACA,qBAAsB,CACpB,IAAM5M,EAAS,KAAK,IAAI,oBAAoB,KAAK,uBAAuB,CAAC,EACzE,KAAK,SAAS,aAAaA,CAAM,CACnC,CACA,yBAA0B,CACxB,OAAO,KAAK,oBACd,CACF,EAGI6M,GAAuB,cAAclC,CAAU,CACjD,aAAc,CACZ,MACA;AAAA;AAAA;AAAA,oBAGiB,CAACC,EAAwB,CAAC,EAC3C,KAAK,WAAaC,CACpB,CAGA,SAAU,CACR,MAAM,QAAQ,CAChB,CACA,KAAK7K,EAAQ,CACX,KAAK,OAASA,EACd,KAAK,UAAUA,CAAM,EACrB,IAAM8M,EAAe,KAAK,WAAW,gBAAgB,EACrD,KAAK,oBAAoBA,EAAc,CAGrC,UAAW,IAAM,CACX,KAAK,WAAW,WAAW,GAAK,KAAK,uBAGzCA,EAAa,MAAM,CACrB,EACA,MAAOvM,GAAK,CACNA,EAAE,SAAW,KAAK,IAAI,oBAAoB,IAG1C,KAAK,WAAW,WAAW,GAG/B,KAAK,OAAO,cAAc,EAC5B,CACF,CAAC,CACH,CACA,UAAUP,EAAQ,CAChB,IAAM8M,EAAe,KAAK,WAAW,gBAAgB,EAC/CC,EAA6B,KAAK,2BAA2B/M,CAAM,EACzE,KAAK,sBAAwB+M,GAA8BC,GAAiB,EAC5EF,EAAa,KAAOC,EAA6B,OAAS,OAC1D,GAAM,CACJ,aAAAE,EACA,aAAAC,EACA,aAAAC,EACA,aAAAC,CACF,EAAIpN,EAAO,cAAgB,CAAC,EAO5B,GANImN,GAAgBF,GAClB/H,EAAU,8HAA8H,EAEtIkI,GAAgBF,GAClBhI,EAAU,8HAA8H,EAEtIiI,GAAgBC,EAAc,CAChC,GAAM,CAACC,EAAoBC,CAAkB,EAAI,CAACH,EAAcC,CAAY,EAAE,IAAIG,GAAKA,aAAa,KAAOA,EAAIrB,EAAyBqB,CAAC,CAAC,EACtIF,GAAsBC,GAAsBD,EAAmB,QAAQ,EAAIC,EAAmB,QAAQ,GACxGpI,EAAU,mGAAmG,CAEjH,CACIiI,EACEA,aAAwB,KAC1BL,EAAa,IAAMU,GAAuBL,CAAY,EAEtDL,EAAa,IAAMK,EAGjBF,IACFH,EAAa,IAAM,GAAGG,CAAY,UAGlCG,EACEA,aAAwB,KAC1BN,EAAa,IAAMU,GAAuBJ,CAAY,EAEtDN,EAAa,IAAMM,EAGjBF,IACFJ,EAAa,IAAM,GAAGI,CAAY,SAGxC,CACA,gBAAgBlN,EAAQ,CACtB,KAAK,QAAQA,CAAM,CACrB,CACA,QAAQA,EAAQ,CACd,KAAK,OAASA,EACd,KAAK,UAAUA,CAAM,CACvB,CACA,SAAU,CACR,OAAOkM,EAAyB,KAAK,WAAW,SAAS,CAAC,CAC5D,CACA,QAAQK,EAAM,CACZ,KAAK,WAAW,SAASD,GAAeC,EAAM,EAAK,CAAC,CACtD,CACA,oBAAoBkB,EAAa,CAC/B,KAAK,WAAW,oBAAoBA,CAAW,CACjD,CACA,kBAAkBC,EAAW,CAC3B,KAAK,WAAW,aAAaA,CAAS,CACxC,CACA,YAAYC,EAAU,CACpB,KAAK,WAAW,YAAYA,CAAQ,CACtC,CACA,iBAAiB3N,EAAQ,EACnB,CAACA,GAAU,CAACA,EAAO,gBACrB,KAAK,WAAW,gBAAgB,EAAE,MAAM,CAE5C,CACA,2BAA2BA,EAAQ,CACjC,OAAIA,EAAO,cAAgBA,EAAO,aAAa,mBAAqB,KAC3DA,EAAO,aAAa,kBAEtB4N,GAAiB,GAAKC,GAAkB,GAAKb,GAAiB,GAAKc,GAAkB,GAAK,IACnG,CACF,EAGIC,GAAiC,cAAc5N,CAAS,CAC1D,YAAYH,EAAQ,CAClB,MAAM,EACN,KAAK,OAASA,EACd,KAAK,yBAA2B6K,EAChC,KAAK,qBAAuB,IAAM,CAAC,CACrC,CACA,SAASmD,EAAe,CACtB,KAAK,yBAA2B,KAAK,kBAAkB,IAAIC,GAAiB,KAAK,QAAQ,MAAM,CAAC,EAChG,IAAMC,EAAS,KAAK,yBAAyB,OAAO,EACpDF,EAAc,YAAYE,CAAM,EAChC,IAAMtK,EAAWrD,GAAK,KAAK,qBAAqBA,CAAC,EACjD,KAAK,oBAAoB2N,EAAQ,CAC/B,MAAOtK,EACP,QAASA,CACX,CAAC,CACH,CACA,YAAY2H,EAAU,CACpB,KAAK,yBAAyB,YAAY,CAACA,CAAQ,CACrD,CACA,gBAAgB4C,EAAc,CAC5B,KAAK,yBAAyB,gBAAgBA,CAAY,CAC5D,CACA,UAAW,CACT,OAAO,KAAK,yBAAyB,SAAS,CAChD,CACA,SAASC,EAAOC,EAAQ,CACtB,KAAK,yBAAyB,SAASD,EAAOC,CAAM,CACtD,CACA,wBAAwBzK,EAAU,CAChC,KAAK,qBAAuBA,CAC9B,CACA,UAAU5D,EAAQ,CAChB,KAAK,aAAaA,EAAO,SAAS,EAC9BA,EAAO,eAAiB,QAC1B,KAAK,gBAAgBA,EAAO,YAAY,CAE5C,CACA,aAAa0N,EAAW,CACtB,KAAK,yBAAyB,kBAAkBA,CAAS,CAC3D,CACF,EAGIY,GAA0B,cAAcrD,EAAqB,CAC/D,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,8BAAgCJ,CACvC,CACA,eAAgB,CACd,KAAK,YACL;AAAA;AAAA,SAEK,CACP,CACA,sBAAuB,CACrB,MAAO,IACT,CACA,qBAAqBnF,EAAO/E,EAAO,CAC7B,KAAK,0BAA0BA,CAAK,GAAK,KAAK,sBAAsBA,CAAK,IAG7E,KAAK,qBAAqB+E,CAAK,EAC/B,KAAK,YAAY,KAAK,oCAAoCA,CAAK,CAAC,EAChE,KAAK,2BAA2B,SAAS,KAAK,wBAAwB,EAAE,iBAAiBA,CAAK,CAAC,EACjG,CACA,KAAK1F,EAAQ,CACX,KAAK,gCAAgCA,CAAM,EAC3C,MAAM,KAAKA,CAAM,EACjB,KAAK,mBAAmBA,CAAM,CAChC,CACA,gCAAgCA,EAAQ,CACtC,KAAK,2BAA6B,KAAK,iCAAiCA,CAAM,EAC9E,KAAK,2BAA2B,SAAS,KAAK,6BAA6B,CAC7E,CACA,mBAAmBA,EAAQ,CACzB,KAAK,OAASA,EACd,IAAMmO,EAAenO,EAAO,qBAAuB,GAMnD,GALA,KAAK,2BAA2B,UAAU,CACxC,UAAW,KAAK,aAAaA,CAAM,EACnC,aAAAmO,CACF,CAAC,EACD,KAAK,YAAcI,GAAiB,KAAK,OAAO,YAAY,EACxD,CAAC,KAAK,WAAW,EAAG,CACtB,IAAM/B,EAAaC,GAAc,KAAK,OAAO,aAAc,KAAK,qBAAqB,CAAC,EAChF+B,EAAa9B,EAAU,KAAK,uBAAuB,KAAK,IAAI,EAAGF,CAAU,EAC/E,KAAK,2BAA2B,wBAAwBgC,CAAU,CACpE,CACF,CACA,gBAAgBxO,EAAQ,CACtB,KAAK,QAAQA,CAAM,CACrB,CACA,QAAQA,EAAQ,CACd,MAAM,QAAQA,CAAM,EACpB,KAAK,mBAAmBA,CAAM,CAChC,CACA,mCAAmCA,EAAQ,CACzC,IAAMoO,EAAQ,KAAK,2BAA2B,SAAS,EACvDK,EAAc,KAAK,6BAA6B,EAChD,KAAK,YAAY,KAAK,0BAA0B,EAChD,KAAK,gCAAgCzO,CAAM,EAC3C,KAAK,2BAA2B,SAASoO,EAAO,EAAI,CACtD,CACA,uBAAuB,EAAG,CACxB,IAAMM,EAAa,EAAE,MAAQ1N,EAAQ,MACrC,GAAI,KAAK,aAAe,CAAC0N,EACvB,OAEF,IAAIN,EAAQ,KAAK,2BAA2B,SAAS,EACjD,KAAK,OAAO,aAAa,YAC3BA,EAAQO,GAAmBP,CAAK,EAChC,KAAK,2BAA2B,SAASA,EAAO,EAAI,GAEtD,KAAK,OAAO,qBAAqBvF,GAAkB,CAC7CA,GACFA,EAAe,wBAAwB,KAAK,YAAY,GAAK,KAAMuF,GAAS,IAAI,CAEpF,CAAC,CACH,CACA,YAAY7C,EAAU,CACpB,KAAK,2BAA2B,YAAYA,CAAQ,CACtD,CACF,EAGIqD,GAAmC,cAAczO,CAAS,CAC5D,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,qBAAuB,IAAM,CAAC,EACnC,KAAK,kBAAoB,EAC3B,CACA,SAAS6N,EAAe,CACtB,KAAK,2BAA6B,KAAK,kBAAkB,IAAIa,EAAoB,EACjF,KAAK,yBAA2B,KAAK,kBAAkB,IAAIZ,EAAkB,EAC7E,KAAK,yBAAyB,YAAY,EAAI,EAC9C,IAAMa,EAAe,KAAK,2BAA2B,OAAO,EACtDC,EAAa,KAAK,yBAAyB,OAAO,EACxDf,EAAc,YAAYc,CAAY,EACtCd,EAAc,YAAYe,CAAU,EACpC,KAAK,eAAeD,EAAcvO,GAAK,KAAK,qBAAqBA,CAAC,CAAC,EACnE,KAAK,eAAewO,EAAYxO,GAAK,KAAK,qBAAqBA,CAAC,CAAC,CACnE,CACA,YAAYgL,EAAU,CACpB,KAAK,kBAAoBA,EACzB,KAAK,2BAA2B,aAAa,KAAK,iBAAiB,EACnE,KAAK,yBAAyB,aAAa,CAAC,KAAK,iBAAiB,CACpE,CACA,gBAAgB4C,EAAc,CAC5B,KAAK,2BAA2B,gBAAgBA,CAAY,EAC5D,KAAK,yBAAyB,gBAAgBA,CAAY,CAC5D,CACA,UAAW,CACT,OAAO,KAAK,sBAAsB,EAAE,SAAS,CAC/C,CACA,SAASC,EAAOC,EAAQ,CACtB,KAAK,sBAAsB,EAAE,SAASD,EAAOC,CAAM,CACrD,CACA,uBAAwB,CACtB,OAAO,KAAK,kBAAoB,KAAK,2BAA6B,KAAK,wBACzE,CACA,wBAAwBzK,EAAU,CAChC,KAAK,qBAAuBA,CAC9B,CACA,eAAevB,EAASuB,EAAU,CAChC,KAAK,oBAAoBvB,EAAS,CAChC,MAAOuB,EACP,QAASA,CACX,CAAC,CACH,CACA,UAAU5D,EAAQ,CAChB,KAAK,aAAaA,EAAO,SAAS,EAC9BA,EAAO,eAAiB,QAC1B,KAAK,gBAAgBA,EAAO,YAAY,CAE5C,CACA,aAAa0N,EAAW,CACtB,KAAK,2BAA2B,kBAAkBA,CAAS,EAC3D,KAAK,yBAAyB,kBAAkBA,CAAS,CAC3D,CACF,EACIsB,GAAuB,cAAcV,EAAwB,CAC/D,KAAKtO,EAAQ,CACX,MAAM,KAAKA,CAAM,EACjB,KAAK,qBAAuB,IAAIiP,GAA2B,KAAK,cAAe,KAAK,eAAgBjP,EAAO,cAAc,eAAe,CAC1I,CACA,gBAAgBA,EAAQ,CACtB,KAAK,QAAQA,CAAM,CACrB,CACA,QAAQA,EAAQ,CACakP,GAAsBlP,EAAO,YAAY,IACzC,KAAK,oBAC9B,KAAK,mCAAmCA,CAAM,EAEhD,MAAM,QAAQA,CAAM,EACpB,KAAK,qBAAqB,aAAa,CACrC,eAAgB,KAAK,cACvB,CAAC,CACH,CACA,yBAA0B,CACxB,OAAOmP,EACT,CACA,yBAA0B,CACxB,OAAO,KAAK,oBACd,CACA,iCAAiCnP,EAAQ,CAEvC,OADA,KAAK,mBAAqBkP,GAAsBlP,EAAO,YAAY,EAC/D,KAAK,mBACA,KAAK,kBAAkB,IAAI+N,GAA+B,CAC/D,OAAQ,CACN,mBAAoB,KAAK,kBAC3B,CACF,CAAC,CAAC,EAEG,KAAK,kBAAkB,IAAIa,EAAkC,CACtE,CACF,EAGIQ,GAAqB,cAAcd,EAAwB,CAC7D,KAAKtO,EAAQ,CACX,MAAM,KAAKA,CAAM,EACjB,KAAK,qBAAuB,IAAIqP,GAAyB,KAAK,cAAe,KAAK,cAAc,CAClG,CACA,gBAAgBrP,EAAQ,CACtB,KAAK,QAAQA,CAAM,CACrB,CACA,QAAQA,EAAQ,CACd,MAAM,QAAQA,CAAM,EACpB,KAAK,qBAAqB,aAAa,CACrC,eAAgB,KAAK,cACvB,CAAC,CACH,CACA,yBAA0B,CACxB,OAAOsP,EACT,CACA,yBAA0B,CACxB,OAAO,KAAK,oBACd,CACA,kCAAmC,CACjC,OAAO,KAAK,kBAAkB,IAAIvB,EAAgC,CACpE,CACF,EAGA,SAASwB,GAAqBlP,EAAO,CACnC,MAAO,CAAC,CAACA,EAAM,eAAe,qBAAqB,CACrD,CACA,SAASmP,GAAenP,EAAO,CAC7B,OAAOA,EAAM,IAAI,IAAI,iBAAiB,CACxC,CACA,SAASoP,GAAiBpP,EAAO,CAC/BA,EAAM,eAAe,sBAAsB,CAC7C,CAGA,IAAIqP,GAAqB,cAAcvP,CAAS,CAC9C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,qBAChB,KAAK,YAAc,KACnB,KAAK,iBAAmB,IAC1B,CACA,UAAUE,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,SAAWA,EAAM,SACtB,KAAK,uBAAyBA,EAAM,sBACtC,CACA,eAAgB,CACd,IAAMsP,EAAgB,KAAK,sBAAsB,KAAK,IAAI,EAC1D,KAAK,yBAAyB,CAC5B,uBAAwBA,EACxB,iBAAkBA,EAClB,sBAAuBA,EACvB,cAAe,IAAM,CACd,KAAK,IAAI,IAAI,mCAAmC,GACnD,KAAK,sBAAsB,CAE/B,CACF,CAAC,EACD,KAAK,2BAA2B,kBAAmBpP,GAAK,KAAK,eAAeA,EAAE,YAAY,CAAC,EAC3F,KAAK,4BAA4B,CAAC,oCAAqC,kCAAkC,EAAG,IAAM,KAAK,iCAAiC,CAAC,EACzJ,KAAK,YAAc,KAAK,iBAAiB,KAAK,IAAI,IAAI,iBAAiB,CAAC,EACxE,KAAK,OAAS,KAAK,IAAI,IAAI,mBAAmB,EAC9C,KAAK,QAAU,KAAK,IAAI,IAAI,oBAAoB,EAChD,KAAK,oBAAoB,EACzB,KAAK,4BAA4B,CAAC,qBAAsB,mBAAmB,EAAG,IAAM,KAAK,+BAA+B,CAAC,CAC3H,CAMA,wBAAyB,CACvB,IAAMqP,EAAY,KAAK,YAAY,YAAY,EACzCC,EAAgB,KAAK,YAAY,YAAY,EAC7CC,EAAe,KAAK,YAAY,cAAc,EAChDC,GAAyBH,GAAa,CAAC,KAAK,IAAI,IAAI,kCAAkC,EAAI,KAAK,uBAAuB,mBAAmB,GAAG,KAAOE,IAAiB,CAAC,EACrKD,IACFE,EAAwBA,EAAsB,OAAOF,CAAa,GAEpE,KAAK,mBAAqB,KAAK,IAAI,IAAI,mCAAmC,EAAIE,EAAwBA,EAAsB,OAAO3F,GAAOA,EAAI,UAAU,GAAKA,EAAI,iBAAiB,CAAC,CACrL,CACA,sBAAuB,CACrB,OAAO,KAAK,cAAgB,IAC9B,CACA,uBAAuBvC,EAAM,CAC3B,IAAMmI,EAAa,KAAK,IAAI,IAAI,kBAAkB,EAClD,OAAI,KAAK,QACA,KAAK,8BAA8BA,EAAYnI,CAAI,EAErD,KAAK,iBAAiB,MAAMoI,GAAQD,EAAa,KAAK,4BAA4BnI,EAAMoI,CAAI,EAAI,KAAK,8BAA8BpI,EAAMoI,CAAI,CAAC,CACvJ,CACA,uBAAwB,CACtB,KAAK,SAAS,YAAYpI,GAAQA,EAAK,yBAA2B,IAAI,CACxE,CACA,qBAAsB,CACpB,GAAM,CACJ,YAAAqI,EACA,OAAAC,CACF,EAAI,KACAD,EACF,KAAK,iBAAmBC,EAASA,EAAOD,CAAW,EAAIA,EAAY,MAAM,GAAG,EAE5E,KAAK,iBAAmB,IAE5B,CACA,iBAAiBE,EAAW,CAC1B,OAAKxI,EAAQwI,CAAS,EAGjB,KAAK,IAAI,eAAe,YAAY,EAIlCA,EAAU,YAAY,GAH3BlL,EAAU,2DAA2D,EAC9D,MAJA,IAOX,CACA,eAAekL,EAAW,CACxB,GAAIA,GAAa,MAAQ,OAAOA,GAAc,SAAU,CACtDlL,EAAU,sEAAsE,OAAOkL,CAAS,EAAE,EAClG,MACF,CACA,IAAMC,EAAe,KAAK,iBAAiBD,CAAS,EAChD,KAAK,cAAgBC,IACvB,KAAK,YAAcA,EACnB,KAAK,oBAAoB,EACzB,KAAK,mBAAmB,CACtB,KAAM,oBACR,CAAC,EAEL,CACA,gCAAiC,CAC/B,IAAMF,EAAS,KAAK,IAAI,IAAI,mBAAmB,EACzCG,EAAU,KAAK,IAAI,IAAI,oBAAoB,EAC3CC,EAAaJ,IAAW,KAAK,QAAUG,IAAY,KAAK,QAC9D,KAAK,OAASH,EACd,KAAK,QAAUG,EACXC,IACF,KAAK,oBAAoB,EACzB,KAAK,mBAAmB,CACtB,KAAM,oBACR,CAAC,EAEL,CACA,kCAAmC,CACjC,KAAK,uBAAuB,EAC5B,KAAK,sBAAsB,EACvB,KAAK,qBAAqB,GAC5B,KAAK,mBAAmB,CACtB,KAAM,oBACR,CAAC,CAEL,CACA,8BAA8B1I,EAAM2I,EAAY,CAC9C,OAAO,KAAK,mBAAmB,KAAKpR,GAAU,CAC5C,IAAM6Q,EAAO,KAAK,4BAA4B7Q,EAAQyI,CAAI,EAC1D,OAAOD,EAAQqI,CAAI,GAAKA,EAAK,QAAQO,CAAU,GAAK,CACtD,CAAC,CACH,CACA,4BAA4B3I,EAAM2I,EAAY,CAC5C,YAAK,sCAAsC3I,CAAI,EACxCA,EAAK,yBAAyB,QAAQ2I,CAAU,GAAK,CAC9D,CACA,8BAA8BR,EAAYnI,EAAM,CAC9C,IAAI4I,EACAT,GACF,KAAK,sCAAsCnI,CAAI,EAC/C4I,EAA2B5I,EAAK,0BAEhC4I,EAA2B,KAAK,4BAA4B5I,CAAI,EAElE,GAAM,CACJ,iBAAA6I,EACA,QAAAJ,CACF,EAAI,KACJ,OAAOA,EAAQI,EAAkBD,CAAwB,CAC3D,CACA,sCAAsC5I,EAAM,CACrCA,EAAK,2BACRA,EAAK,yBAA2B,KAAK,4BAA4BA,CAAI,EAEzE,CACA,4BAA4BzI,EAAQyI,EAAM,CACxC,IAAIuG,EAAQ,KAAK,aAAa,SAAShP,EAAQyI,EAAM,EAAI,EACnDpF,EAASrD,EAAO,UAAU,EAChC,GAAIqD,EAAO,mBAAoB,CAC7B,IAAMzC,EAAS,KAAK,IAAI,oBAAoB,CAC1C,MAAAoO,EACA,KAAAvG,EACA,KAAMA,EAAK,KACX,OAAAzI,EACA,OAAAqD,CACF,CAAC,EACD2L,EAAQ3L,EAAO,mBAAmBzC,CAAM,CAC1C,CACA,OAAO4H,EAAQwG,CAAK,EAAIA,EAAM,SAAS,EAAE,YAAY,EAAI,IAC3D,CACA,4BAA4BvG,EAAM,CAChC,IAAM8I,EAAc,CAAC,EACrB,YAAK,mBAAmB,QAAQvR,GAAU,CACxC,IAAM6Q,EAAO,KAAK,4BAA4B7Q,EAAQyI,CAAI,EACtDD,EAAQqI,CAAI,GACdU,EAAY,KAAKV,CAAI,CAEzB,CAAC,EACMU,EAAY,KAAK;AAAA,CAAI,CAC9B,CACF,EAGIC,GAAmB,CACrB,QAASzL,EACT,WAAY,iCACZ,MAAO,CAAC0L,EAAa,CACvB,EACIC,GAAkB,CACpB,QAAS3L,EACT,WAAY,gCACZ,aAAc,CACZ,mBAAAqF,GACA,gBAAAC,EACF,EACA,iBAAkB,CAACmG,EAAgB,CACrC,EACIG,GAAqB,CACvB,QAAS5L,EACT,WAAY,mCACZ,MAAO,CAACwB,EAAmB,EAC3B,iBAAkB,CAACiK,EAAgB,CACrC,EACII,GAAwB,CAC1B,QAAS7L,EACT,WAAY,uCACZ,aAAc,CACZ,sBAAAC,GACA,kBAAAC,GACA,wBAAAE,GACA,cAAAC,GACA,eAAAC,GACA,eAAAE,GACA,qBAAAC,GACA,qBAAAC,GACA,iBAAAC,EACF,EACA,iBAAkB,CAACiL,GAAoBD,EAAe,CACxD,EACIG,GAA2B,CAC7B,QAAS9L,EACT,WAAY,0CACZ,YAAa,CAAC,CACZ,KAAM,mBACN,SAAU7C,EACZ,CAAC,EACD,iBAAkB,CAACyO,EAAkB,CACvC,EAMA,IAAIG,GAA+B,CACjC,QAASC,EACT,WAAY,+CACZ,eAAgB,CAAC,CACf,KAAM,2BACN,SAAUC,EACZ,CAAC,EACD,iBAAkB,CAACC,EAAwB,CAC7C,EACIC,GAAqB,CACvB,QAASH,EACT,WAAY,mCACZ,iBAAkB,CAACI,EAAkB,EACrC,eAAgB,CAAC,CACf,KAAM,qBACN,SAAUC,EACZ,EAAG,CACD,KAAM,uBACN,SAAUC,EACZ,EAAG,CACD,KAAM,qBACN,SAAUC,EACZ,EAAG,CACD,KAAM,cACN,SAAUC,EACZ,CAAC,CACH,EACIC,GAA6B,CAC/B,QAAST,EACT,WAAY,4CACZ,iBAAkB,CAACG,GAAoBD,EAAwB,EAC/D,eAAgB,CAAC,CACf,KAAM,6BACN,SAAUQ,EACZ,EAAG,CACD,KAAM,+BACN,SAAUC,EACZ,EAAG,CACD,KAAM,6BACN,SAAUC,EACZ,CAAC,CACH,EACIC,GAAwB,CAC1B,QAASb,EACT,WAAY,uCACZ,MAAO,CAACc,EAAkB,EAC1B,iBAAkB,CAACC,EAAgB,CACrC,EACIC,GAAuB,CACzB,QAAShB,EACT,WAAY,sCACZ,aAAc,CACZ,qBAAAiB,GACA,eAAAC,GACA,iBAAAC,EACF,EACA,iBAAkB,CAACN,EAAqB,CAC1C,EACIO,GAAoB,CACtB,QAASpB,EACT,WAAY,kCACZ,iBAAkB,CAACa,GAAuBG,EAAoB,CAChE,EACIK,GAAe,CACjB,QAASrB,EACT,WAAY,4BACZ,iBAAkB,CAACS,GAA4BV,GAA8BqB,GAAmBE,EAAqB,CACvH,EAGIC,GAAyB,cAAcC,CAAU,CACnD,YAAYC,EAAUC,EAAM,CAC1B,MAAMD,CAAQ,EACd,KAAK,KAAOC,CACd,CACA,SAAU,CACR,OAAO,KAAK,IACd,CACF,EAGIC,GAAuB,cAAcJ,EAAuB,CAC9D,YAAYG,EAAM,CAChB,MACA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKaA,CAAI,EACjB,KAAK,oBAAsBE,EAC3B,KAAK,eAAiBA,EACtB,KAAK,sBAAwBA,CAC/B,CACA,eAAgB,CACd,IAAMC,EAAO,KAAK,OAAO,EACnBC,EAAY,CAChB,oBAAqB,CAACC,EAAcC,IAAO,KAAK,oBAAoBD,EAAcC,CAAE,EACpF,wBAAyB,CAACD,EAAcC,IAAO,KAAK,oBAAoB,UAAU,OAAOD,EAAcC,CAAE,EACzG,0BAA2BC,GAAaC,EAAc,KAAK,eAAgBD,CAAS,EACpF,eAAgBE,GAAe,KAAK,eAAeA,CAAW,EAC9D,sBAAuB,IAAM,KAAK,YAClC,SAAUC,GAASP,EAAK,MAAM,MAAQO,EACtC,YAAaC,GAAS,KAAK,sBAAsB,YAAYA,CAAK,CACpE,EACA,KAAK,KAAK,QAAQP,EAAWD,EAAM,KAAK,sBAAuB,KAAK,mBAAmB,CACzF,CACA,eAAeM,EAAa,CAC1B,GAAI,CAACA,EAAa,CAChB,KAAK,0BAA0B,EAC/B,KAAK,YAAc,KACnB,MACF,CACA,KAAK,YAAcA,EAAY,mBAAmB,EAClD,KAAK,YAAY,KAAKG,GAAQ,KAAK,iBAAiBA,CAAI,CAAC,CAC3D,CACA,SAAU,CACR,KAAK,0BAA0B,EAC/B,MAAM,QAAQ,CAChB,CACA,2BAA4B,CACtB,KAAK,qBACP,KAAK,oBAAoB,YAAY,KAAK,mBAAmB,OAAO,CAAC,EACrE,KAAK,mBAAqB,KAAK,YAAY,KAAK,kBAAkB,EAEtE,CACA,iBAAiBA,EAAM,CACrB,GAAKA,EAGL,IAAI,CAAC,KAAK,QAAQ,EAAG,CACnB,KAAK,YAAYA,CAAI,EACrB,MACF,CACA,KAAK,0BAA0B,EAC/B,KAAK,mBAAqBA,EAC1B,KAAK,oBAAoB,YAAYA,EAAK,OAAO,CAAC,EAC9CA,EAAK,kBACPA,EAAK,iBAAiB,EAE1B,CACF,EAGIC,GAAiB,cAAchB,EAAuB,CACxD,YAAYG,EAAM,CAChB,MACA;AAAA;AAAA;AAAA,gBAGaA,CAAI,EACjB,KAAK,QAAUE,EACf,KAAK,mBAAqBA,EAC1B,KAAK,kBAAoB,EACzB,KAAK,OAASF,EAAK,oBAAoB,EACvC,KAAK,OAASA,EAAK,UAAU,CAC/B,CACA,eAAgB,CACd,IAAMG,EAAO,KAAK,OAAO,GACJ,CAACW,EAAMC,IAAU,CAChCA,GAAS,MAAQA,GAAS,GAC5BZ,EAAK,aAAaW,EAAMC,CAAK,EAE7BZ,EAAK,gBAAgBW,CAAI,CAE7B,GACa,SAAU,KAAK,OAAO,SAAS,CAAC,EAC7C,IAAMV,EAAY,CAChB,SAAUM,GAASP,EAAK,MAAM,MAAQO,EACtC,oBAAqB,CAACL,EAAcC,IAAO,KAAK,oBAAoBD,EAAcC,CAAE,EACpF,YAAaU,GAAQA,EAAOC,GAAad,EAAMa,CAAI,EAAIE,GAAgBf,CAAI,EAC3E,mBAAoBM,GAAe,KAAK,mBAAmBA,CAAW,EACtE,oBAAqB,IAAM,KAAK,UAClC,EACA,KAAK,KAAK,QAAQL,EAAW,KAAK,OAAO,EAAG,KAAK,QAAS,KAAK,kBAAkB,EACjF,IAAMe,EAAe,KAAK,KAAK,gBAAgB,EAC/C,KAAK,QAAQ,sBAAsB,WAAYA,CAAY,CAC7D,CACA,SAAU,CACR,KAAK,kBAAkB,EACvB,MAAM,QAAQ,CAChB,CACA,mBAAoB,CACd,KAAK,aACP,KAAK,mBAAmB,YAAY,KAAK,aAAa,EACtD,KAAK,WAAa,KAAK,YAAY,KAAK,UAAU,EAClD,KAAK,cAAgB,OAEzB,CACA,mBAAmBV,EAAa,CAC9B,KAAK,oBACL,IAAMW,EAAc,KAAK,kBACzBX,EAAY,mBAAmB,EAAE,KAAKG,GAAQ,KAAK,iBAAiBQ,EAAaR,CAAI,CAAC,CACxF,CACA,iBAAiBS,EAASC,EAAY,CACpC,GAAID,GAAW,KAAK,mBAAqB,CAAC,KAAK,QAAQ,EAAG,CACxD,KAAK,YAAYC,CAAU,EAC3B,MACF,CACA,KAAK,kBAAkB,EACvB,KAAK,WAAaA,EAClB,KAAK,cAAgBA,EAAW,OAAO,EACvC,KAAK,mBAAmB,YAAY,KAAK,aAAa,EACtD,KAAK,KAAK,cAAc,KAAK,OAAO,CAAC,CACvC,CACF,EAGIC,GAAsB,cAAc1B,EAAuB,CAC7D,YAAYG,EAAM,CAChB,MACA;AAAA;AAAA,gBAEaA,CAAI,EACjB,KAAK,QAAUE,CACjB,CACA,eAAgB,CACd,IAAMC,EAAO,KAAK,OAAO,EACnBqB,EAAe,CAACC,EAAKV,IAAUA,GAAS,KAASZ,EAAK,aAAasB,EAAKV,CAAK,EAAIZ,EAAK,gBAAgBsB,CAAG,EAC/GtB,EAAK,aAAa,SAAU,KAAK,KAAK,SAAS,CAAC,EAChD,IAAMC,EAAY,CAChB,oBAAqB,CAACC,EAAcC,IAAO,KAAK,oBAAoBD,EAAcC,CAAE,EACpF,sBAAuBC,GAAaC,EAAc,KAAK,QAASD,CAAS,EACzE,SAAUG,GAASP,EAAK,MAAM,MAAQO,EACtC,gBAAiBgB,GAAYF,EAAa,gBAAiBE,CAAQ,EACnE,mBAAoBC,GAAW,KAAK,mBAAmBA,CAAO,EAC9D,oBAAqB,IAAM,KAAK,eAClC,EACA,KAAK,KAAK,QAAQvB,EAAWD,EAAM,KAAK,OAAO,CACjD,CACA,mBAAmBwB,EAAS,CAC1BA,EAAQ,mBAAmB,EAAE,KAAKf,GAAQ,KAAK,uBAAuBA,CAAI,CAAC,CAC7E,CACA,uBAAuBgB,EAAiB,CACtC,IAAMC,EAAc,IAAM,KAAK,YAAYD,CAAe,EAC1D,GAAI,CAAC,KAAK,QAAQ,EAAG,CACnBC,EAAY,EACZ,MACF,CACA,IAAM1B,EAAO,KAAK,OAAO,EACnB2B,EAAkBF,EAAgB,OAAO,EAC/CzB,EAAK,YAAY2B,CAAe,EAChC,KAAK,eAAeD,CAAW,EAC/B,KAAK,gBAAkBD,EACvB,KAAK,KAAK,cAAczB,CAAI,CAC9B,CACF,EASA,IAAI4B,GAAgB,cAAcC,CAAU,CAC1C,YAAYC,EAAM,CAChB,MAAM,EACN,KAAK,YAAc,CAAC,EACpB,KAAK,KAAOA,EACZ,KAAK,YACL,eAAe,KAAK,KAAK,kBAAkB,CAAC,qBAAqB,CACnE,CACA,eAAgB,CACdC,GAAiB,KAAK,OAAO,EAAG,KAAK,KAAK,gBAAgB,CAAC,EAC3D,IAAMC,EAAY,CAChB,UAAWC,GAAU,KAAK,OAAO,EAAE,MAAM,OAASA,EAClD,OAAQC,GAAO,KAAK,OAAO,EAAE,MAAM,IAAMA,EACzC,eAAgB,CAACC,EAAOC,IAAe,KAAK,eAAeD,EAAOC,CAAU,EAC5E,SAAUC,GAAS,KAAK,OAAO,EAAE,MAAM,MAAQA,CACjD,EACA,KAAK,KAAK,QAAQL,CAAS,CAC7B,CACA,SAAU,CACR,KAAK,eAAe,CAAC,EAAG,EAAK,EAC7B,MAAM,QAAQ,CAChB,CACA,eAAeG,EAAOC,EAAY,CAChC,GAAI,CAAC,KAAK,QAAQ,EAChB,OAEF,IAAME,EAAW,KAAK,YAgBtB,GAfA,KAAK,YAAc,CAAC,EACpBH,EAAM,QAAQL,GAAQ,CACpB,IAAMS,EAAKT,EAAK,cAAc,EAC1BU,EAAOF,EAASC,CAAE,EACtB,OAAOD,EAASC,CAAE,EACdC,GAAQ,OACVA,EAAO,KAAK,iBAAiBV,CAAI,EACjC,KAAK,OAAO,EAAE,YAAYU,EAAK,OAAO,CAAC,GAEzC,KAAK,YAAYD,CAAE,EAAIC,CACzB,CAAC,EACDC,GAAeH,EAAU,CAACC,EAAIC,IAAS,CACrC,KAAK,OAAO,EAAE,YAAYA,EAAK,OAAO,CAAC,EACvC,KAAK,YAAYA,CAAI,CACvB,CAAC,EACGJ,EAAY,CACd,IAAMM,EAAQC,GAAsB,KAAK,WAAW,EACpDD,EAAM,KAAK,CAACE,EAAGC,IAAM,CACnB,IAAMC,EAAQF,EAAE,QAAQ,EAAE,oBAAoB,EAAE,QAAQ,EAClDG,EAAQF,EAAE,QAAQ,EAAE,oBAAoB,EAAE,QAAQ,EACxD,OAAOC,EAAQC,CACjB,CAAC,EACD,IAAMC,EAAkBN,EAAM,IAAIO,GAAKA,EAAE,OAAO,CAAC,EACjDC,GAAkB,KAAK,OAAO,EAAGF,CAAe,CAClD,CACF,CACA,iBAAiBG,EAAY,CAC3B,IAAIC,EACJ,OAAQ,KAAK,KAAK,QAAQ,EAAG,CAC3B,IAAK,QACHA,EAAS,IAAIC,GAAoBF,CAAU,EAC3C,MACF,IAAK,SACHC,EAAS,IAAIE,GAAqBH,CAAU,EAC5C,MACF,QACEC,EAAS,IAAIG,GAAeJ,CAAU,EACtC,KACJ,CACA,YAAK,WAAWC,CAAM,EACtBA,EAAO,mBAAmB,IAAI,EACvBA,CACT,CACF,EAUA,IAAII,GAA0B,cAAcC,CAAS,CACnD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,0BAChB,KAAK,4BAA8B,EACrC,CACA,UAAUC,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,oBAAsBA,EAAM,oBACjC,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,kBAAoBA,EAAM,kBACjC,CACA,eAAgB,CACd,KAAK,aAAa,UAAUC,GAAK,CAC/B,KAAK,YAAcA,EAAE,YACvB,CAAC,EACD,IAAMC,EAAY,KAAK,IAAI,YAAY,EACvC,KAAK,2BAA2BA,EAAW,CACzC,UAAW,IAAM,KAAK,+BAA+B,EAAE,CACzD,CAAC,CACH,CACA,mBAAoB,CAClB,IAAMC,EAAwB,KAAK,aAAa,0BAA0B,EAC1E,OAAOA,EAAwBA,EAAsB,YAAY,EAAI,CACvE,CACA,2BAA2BC,EAAQC,EAAgB,CACjD,IAAIC,EASJ,GARI,OAAOF,GAAW,UACpBE,EAAS,KAAK,YAAY,OAAOF,CAAM,EAClCE,IACHA,EAAS,KAAK,kBAAkB,eAAeF,CAAM,IAGvDE,EAASF,EAEP,CAACE,EACH,OAAO,KAGT,IAAMC,EADwB,KAAK,aAAa,0BAA0B,EACnC,YAAY,EAC7CC,EAA0BC,EAAMF,CAAQ,EAAE,QAAQ,IAAM,SACxDG,EAAiB,KAAK,kBAAkB,EAAI,EAC9CC,EAAM,GACNC,EAAMN,EACV,KAAOM,GACLD,IACAC,EAAMA,EAAI,UAAU,EAEtB,IAAIC,EAAiBF,EACrB,OAAIN,GAAkBG,GAA2BK,IAAmBH,EAAiB,GACnFG,IAEKA,IAAmB,GAAK,KAAO,CACpC,eAAAA,EACA,OAAAP,CACF,CACF,CAKA,mBAAmBQ,EAAWC,EAAYC,EAAO,CAI/C,GAHKD,IACHA,EAAa,KAAK,aAAa,iBAAiB,GAE9C,CAACA,EACH,MAAO,GAET,GAAM,CACJ,eAAAF,CACF,EAAIE,EACET,EAASS,EAAW,OACpBE,EAAS,KAAK,kBAAkB,EAChCC,EAAOJ,IAAc,EACvB,CACF,eAAgBK,EAChB,OAAQC,EAER,0BAAAC,CACF,EAAIH,EAAO,KAAK,oBAAoB,uBAAuBZ,EAAQO,CAAc,EAAI,KAAK,oBAAoB,sBAAsBP,EAAQO,CAAc,EACtJS,EAAa,GAYjB,OAXIH,EAAU,IACZA,EAAU,EACVC,EAAkBd,EAClBgB,EAAa,IAEXH,GAAWF,GACbE,EAAU,GACV,KAAK,+BAA+B,EAAE,GAC7BE,IAA8B,SACvC,KAAK,4BAA8BA,GAEjC,CAACC,GAAc,CAACF,EACX,GAEF,KAAK,aAAa,oBAAoB,CAC3C,eAAgB,CACd,eAAgBD,EAChB,OAAQC,CACV,EACA,kBAAmB,GACnB,MAAAJ,CACF,CAAC,CACH,CACA,+BAA+BL,EAAK,CAClC,KAAK,4BAA8BA,CACrC,CAKA,qBAAqBG,EAAWS,EAAU,GAAOP,EAAO,CACtD,IAAMQ,EAAgB,KAAK,aAAa,iBAAiB,EACnDC,EAASX,IAAc,EACvBY,EAAQ,KAAK,IAAI,IAAI,WAAW,EAClCC,EACAC,EAaJ,GAZI,KAAK,8BAAgC,GACvCJ,EAAc,eAAiB,KAAK,4BAEpC,KAAK,4BAA8BA,EAAc,eAE/CC,IAAWC,GACbE,EAAsB,SACtBD,EAAa,KAAK,oBAAoB,WAAWH,EAAeI,CAAmB,IAEnFA,EAAsB,QACtBD,EAAa,KAAK,oBAAoB,WAAWH,EAAeI,CAAmB,GAEjFD,GAAc,CAACJ,EACjB,OAAO,KAAK,aAAa,oBAAoB,CAC3C,eAAgBI,EAChB,UAAWC,EACX,QAAAL,EACA,kBAAmB,GACnB,MAAAP,CACF,CAAC,EACI,GAAIO,EAAS,CAClB,IAAMM,EAAW,KAAK,IAAI,YAAY,iBAAiB,EACvD,GAAIA,EACF,OAAO,KAAK,aAAa,gCAAgC,CACvD,SAAAA,EACA,eAAgBF,EAChB,UAAWC,CACb,CAAC,CAEL,CACA,OAAO,KAAK,mBAAmBJ,EAAeI,EAAqBZ,CAAK,CAC1E,CACA,mBAAmBQ,EAAeV,EAAWE,EAAO,CAClD,IAAMc,EAAeN,EAAc,eAC/BO,EAAe,KACfC,EAgBJ,GAfIlB,IAAc,SACZgB,EAAe,IACjBE,EAAeF,EAAe,EAC9B,KAAK,6BAA+B,EACpCC,EAAe,KAAK,oBAAoB,0BAA0BC,EAAc,KAAK,IAGvFA,EAAeF,EAAe,EAC1B,KAAK,4BAA8B,KAAK,kBAAkB,EAC5D,KAAK,6BAA+B,EAEpC,KAAK,+BAA+B,EAAE,EAExCC,EAAe,KAAK,oBAAoB,0BAA0BC,EAAc,OAAO,GAErF,CAACD,EACH,MAAO,GAET,GAAM,CACJ,OAAAzB,EACA,eAAAO,CACF,EAAI,KAAK,oBAAoB,sBAAsBkB,EAAa,OAAQA,GAAc,cAAc,EACpG,OAAO,KAAK,aAAa,oBAAoB,CAC3C,eAAgB,CACd,OAAAzB,EACA,eAAAO,CACF,EACA,UAAAC,EACA,QAAS,GACT,kBAAmB,GACnB,MAAAE,CACF,CAAC,CACH,CACA,eAAeV,EAAQQ,EAAY,QAAS,CAC1C,GAAIR,EAAO,UAAU,EACnB,OAEF,IAAI2B,EACJ,GAAIC,EAAc5B,CAAM,EAAG,CACzB,IAAM6B,EAAU7B,EAAO,wBAAwB,EAC/C2B,EAAmBnB,IAAc,SAAWL,EAAM0B,CAAO,EAAIA,EAAQ,CAAC,CACxE,MACEF,EAAmB3B,EAErB,KAAK,YAAY,iBAAiB,EAAE,oBAAoB2B,CAAgB,CAC1E,CACF,EAGIG,GAAiB,cAAcrC,CAAS,CAC1C,UAAUC,EAAO,CACf,KAAK,wBAA0BA,EAAM,wBACrC,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,aAAeA,EAAM,aAC1B,KAAK,cAAgBA,EAAM,cAC3B,KAAK,YAAcA,EAAM,WAC3B,CACA,QAAQqC,EAAMC,EAAMC,EAAmB,CACrC,KAAK,KAAOF,EACZ,KAAK,KAAOC,EACZ,KAAK,kBAAkB,IAAIE,GAAoBD,EAAmB,CAChE,aAAc,KAAK,aAAa,KAAK,IAAI,EACzC,cAAe,KAAK,cAAc,KAAK,IAAI,EAC3C,WAAY,KAAK,WAAW,KAAK,IAAI,CACvC,CAAC,CAAC,EACF,KAAK,yBAAyB,CAC5B,uBAAwB,KAAK,mBAAmB,KAAK,IAAI,EACzD,wBAAyB,KAAK,0BAA0B,KAAK,IAAI,CACnE,CAAC,EACD,KAAK,mBAAmB,EACxB,KAAK,kBAAkB,EACvB,IAAME,EAAW,KAAK,oBAAoB,KAAK,IAAI,EACnD,KAAK,2BAA2B,KAAK,KAAM,CACzC,YAAaA,CACf,CAAC,EACD,KAAK,uBAAuBA,CAAQ,EACpC,KAAK,aAAa,SAAS,iBAAkB,IAAI,CACnD,CACA,mBAAoB,CAClB,IAAMA,EAAW,KAAK,gBAAgB,KAAK,IAAI,EAC/CA,EAAS,EACT,KAAK,2BAA2B,eAAgBA,CAAQ,EACxD,KAAK,2BAA2B,oBAAqBA,CAAQ,EAC7D,KAAK,2BAA2B,oBAAqBA,CAAQ,EAC7D,KAAK,2BAA2B,yBAA0BA,CAAQ,EAClE,KAAK,2BAA2B,wBAAyBA,CAAQ,EACjE,KAAK,yBAAyB,CAC5B,wBAAyBA,EACzB,0BAA2BA,EAC3B,kBAAmBA,EACnB,6BAA8BA,CAChC,CAAC,CACH,CACA,iBAAkB,CAChB,OAAO,KAAK,YACd,CACA,iBAAkB,CAChB,GAAM,CACJ,YAAAC,CACF,EAAI,KACAC,EAAmB,EACnBjC,EAAiBgC,EAAY,kBAAkB,EAC/CE,EACuB,KAAK,eAAe,mBAAmB,IAEhElC,IACAiC,EAAmB,GAErB,IAAME,EAAc,KAAK,YAAY,8BAA8B,EAC7DC,EAAe,KAAK,YAAY,yBAAyB,EACzDC,EAAoB,EAAIJ,EACxBK,EAAiBtC,EAAiBqC,EAIxC,GAHAH,EAAoBD,EAAmBD,EAAY,yBAAyB,EAC5EE,GAAqBI,EAAiBH,EACtCD,GAAqBE,EACjB,KAAK,eAAiBF,EACxB,OAEF,KAAK,aAAeA,EACpB,IAAMK,EAAK,GAAGL,EAAoB,CAAC,KACnC,KAAK,KAAK,sBAAsBK,CAAE,EAClC,KAAK,aAAa,cAAc,CAC9B,KAAM,qBACR,CAAC,CACH,CACA,oBAAqB,CACnB,IAAMC,EAAY,KAAK,YAAY,YAAY,EAC/C,KAAK,KAAK,oBAAoB,cAAeA,CAAS,EACtD,KAAK,KAAK,oBAAoB,eAAgB,CAACA,CAAS,CAC1D,CACA,2BAA4B,CAE1B,IAAMC,EADU,KAAK,mBAAmB,WAAW,EACf,KAAKvC,GAAOA,EAAI,mBAAmB,CAAC,EACxE,KAAK,KAAK,oBAAoB,2BAA4BuC,CAAmB,CAC/E,CACA,aAAa,EAAG,CACd,IAAMzB,EAAQ,KAAK,IAAI,IAAI,WAAW,EAChCZ,EAAY,EAAE,WAAaY,EAAQ,EAAe,GACpD,KAAK,wBAAwB,qBAAqBZ,EAAW,GAAM,CAAC,GAAK,KAAK,aAAa,2BAA2B,EAAE,QAAQ,IAClI,EAAE,eAAe,CAErB,CACA,cAAc,EAAG,CACf,IAAIA,EAAY,KAChB,OAAQ,EAAE,IAAK,CACb,KAAKsC,EAAQ,KACXtC,EAAY,EACd,KAAKsC,EAAQ,MACX,CACOC,EAAQvC,CAAS,IACpBA,EAAY,GAEd,KAAK,wBAAwB,qBAAqBA,EAAW,GAAO,CAAC,EACrE,KACF,CACF,KAAKsC,EAAQ,GACXtC,EAAY,EACd,KAAKsC,EAAQ,KACX,CACOC,EAAQvC,CAAS,IACpBA,EAAY,GAEV,KAAK,wBAAwB,mBAAmBA,EAAW,KAAM,CAAC,GACpE,EAAE,eAAe,EAEnB,KACF,CACF,QACE,MACJ,CACF,CACA,WAAW,EAAG,CACZ,GAAM,CACJ,cAAAwC,CACF,EAAI,EACA,CAACA,GAAiB,KAAK,KAAK,SAAS,KAAK,IAAI,oBAAoB,CAAC,GAGlE,KAAK,KAAK,SAASA,CAAa,GACnC,KAAK,aAAa,mBAAmB,CAEzC,CACA,oBAAoBC,EAAYC,EAAOC,EAAY,CACjD,GAAI,CAACF,GAAc,CAACE,GAAc,CAAC,KAAK,YAAY,2BAA2B,EAC7E,OAEF,GAAM,CACJ,OAAAC,CACF,EAAIH,GAAcC,GACdE,IAAW,KAAK,MAAQA,IAAW,KAAK,aAAa,0BAA0B,EAAE,YAAY,IAC/F,KAAK,YAAY,sBAAsB,OAAQH,EAAYE,CAAU,CAEzE,CACA,uBAAuBhB,EAAU,CAC/B,GAAI,CAACkB,GAAgB,EACnB,OAEF,IAAMC,EAAgB,IAAIC,GAAc,KAAK,IAAI,EAC3CC,EAAkB9C,GAAS,CAC/ByB,EAAS,OAAQzB,EAAM,WAAYA,EAAM,UAAU,CACrD,EACA,KAAK,oBAAoB4C,EAAe,CACtC,QAASE,CACX,CAAC,EACD,KAAK,eAAe,IAAMF,EAAc,QAAQ,CAAC,CACnD,CACF,EAGIG,GAAqB,cAAchE,CAAS,CAC9C,YAAYiE,EAAUC,EAAY,GAAO,CACvC,MAAM,EACN,KAAK,SAAWD,EAChB,KAAK,UAAYC,CACnB,CACA,UAAUjE,EAAO,CACf,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,qBAAuBA,EAAM,oBACpC,CACA,eAAgB,CACd,IAAMyC,EAAW,KAAK,SAAS,KAAK,IAAI,EACxC,KAAK,2BAA2B,YAAaA,CAAQ,EACrD,KAAK,yBAAyB,CAC5B,4BAA6BA,EAC7B,wBAAyBA,EACzB,uBAAwBA,CAC1B,CAAC,EACG,KAAK,WACP,KAAK,yBAAyB,CAC5B,wBAAyBA,EACzB,wBAAyBA,EACzB,sBAAuBA,CACzB,CAAC,EAEH,KAAK,SAAS,CAChB,CACA,UAAW,CACT,IAAMyB,EAAc,KAAK,IAAI,YAAY,OAAO,EAC1CC,EAAc,KAAK,mBAAmB,sBAAsB,EAC5DC,EAAY,KAAK,mBAAmB,iBAAiB,EACrDC,EAAa,KAAK,mBAAmB,8BAA8B,EACrEC,EACAJ,EACFI,EAAaH,EAAcC,EAAYC,GAEvCC,EAAaH,EACT,KAAK,YACe,KAAK,IAAI,IAAI,WAAW,EAAIC,EAAYC,KACxC,GAAK,KAAK,qBAAqB,wBAAwB,IAC3EC,GAAc,KAAK,IAAI,kBAAkB,IAI/C,KAAK,SAASA,CAAU,CAC1B,CACF,EAGIC,GAAsB,cAAcxE,CAAS,CAC/C,YAAYyE,EAAQ,CAClB,MAAM,EACN,KAAK,mBAAqB,CAAC,EAC3B,KAAK,eAAiB,CAAC,EACvB,KAAK,eAAiB,CAAC,EACvB,KAAK,OAASA,CAChB,CACA,UAAUxE,EAAO,CACf,KAAK,gBAAkBA,EAAM,eAC/B,CAEA,YAAYyE,EAAe,CAEzB,GADA,KAAK,iBAAiB,EAClB,KAAK,IAAI,IAAI,mBAAmB,EAClC,OAEF,IAAMC,EAAcD,EAAc,SAAS,QACtCC,GAGLA,EAAY,QAAQpE,GAAU,CACvBA,EAAO,UAAU,IAGlBA,EAAO,oBAAoB,IAG3BA,EAAO,aAAa,EACtB,KAAK,mBAAmB,KAAKA,CAAM,EAC1BA,EAAO,gBAAgB,EAChC,KAAK,eAAe,KAAKA,CAAM,EACtBA,EAAO,aAAa,GAC7B,KAAK,eAAe,KAAKA,CAAM,GAEnC,CAAC,CACH,CACA,aAAc,CAEZ,OADqB,KAAK,mBAAmB,OAAS,KAAK,eAAe,OAAS,KAAK,eAAe,OACpF,EACV,KAAK,OAAS,SAAW,OAE3B,IACT,CAGA,YAAYmE,EAAe,CACzB,KAAK,iBAAiB,CACxB,CACA,kBAAmB,CACjB,KAAK,mBAAmB,OAAS,EACjC,KAAK,eAAe,OAAS,EAC7B,KAAK,eAAe,OAAS,CAC/B,CAGA,WAAWA,EAAe,CAAC,CAG3B,WAAWA,EAAe,CACpB,KAAK,mBAAmB,OAAS,GACnC,KAAK,gBAAgB,gBAAgB,KAAK,mBAAoB,sBAAsB,EAElF,KAAK,eAAe,OAAS,GAC/B,KAAK,gBAAgB,mBAAmB,KAAK,eAAgB,sBAAsB,EAEjF,KAAK,eAAe,OAAS,GAC/B,KAAK,gBAAgB,gBAAgB,KAAK,eAAgB,sBAAsB,CAEpF,CACF,EAGA,SAASE,GAAmBC,EAAQ,CAClC,GAAM,CACJ,aAAAC,EACA,WAAAC,EACA,UAAAC,EACA,UAAAC,EACA,UAAAC,EACA,OAAAT,EACA,IAAAU,EACA,YAAAxC,EACA,kBAAAyC,EACA,qBAAAC,CACF,EAAIR,EACES,EAAeP,IAAe,EAC9BQ,EAAgBR,IAAe,EACjC,CACF,iBAAAS,CACF,EAAIX,EACJ,GAAIC,EAAc,CAChB,IAAMW,EAAU,CAAC,EACjBD,EAAiB,QAAQ3E,GAAO,CAC9B,IAAI6E,EAAc,KACdC,EAAS9E,EAAI,UAAU,EAC3B,KAAO8E,GAAU,MAAQA,EAAO,wBAAwB,EAAE,SAAW,GACnED,EAAcC,EACdA,EAASA,EAAO,UAAU,EAExBD,GAAe,MACO,CAAC,CAACA,EAAY,eAAe,GAAG,cAIxDA,EAAY,uBAAuB,EAAE,eAAe,EAAIA,EAAY,eAAe,GACrE,QAAQE,IAAU,CACzBH,EAAQ,SAASG,EAAM,GAC1BH,EAAQ,KAAKG,EAAM,CAEvB,CAAC,EACSH,EAAQ,SAAS5E,CAAG,GAC9B4E,EAAQ,KAAK5E,CAAG,CAEpB,CAAC,EACD2E,EAAmBC,CACrB,CACA,IAAMI,EAA0BL,EAAiB,MAAM,EACvD7C,EAAY,iBAAiBkD,CAAuB,EACpD,IAAMC,EAAaC,GAAoB,CACrC,WAAYF,EACZ,cAAAN,EACA,UAAAP,EACA,OAAAP,EACA,IAAAU,EACA,YAAAxC,EACA,qBAAA0C,CACF,CAAC,EACKW,EAAWC,GAAkBJ,EAAyBlD,CAAW,EACvE,GAAImD,EAAW,SAAW,EACxB,OAEF,IAAMI,EAAiBJ,EAAW,CAAC,EAC/BK,EAAqBH,IAAa,MAAQ,CAACf,EAI/C,GAHIH,IACFqB,EAAqBH,IAAa,MAEhCG,GAAsB,CAACjB,IACrBI,GAAgBY,GAAkBF,GAGlCT,GAAiBW,GAAkBF,GACrC,OAGJ,IAAMI,EAAgBf,EAAqB,WAAW,EAChDgB,EAAiB,CAAC,EACpBC,EAAc,KAClB,QAASC,EAAI,EAAGA,EAAIT,EAAW,OAAQS,IAAK,CAC1C,IAAMC,EAAOV,EAAWS,CAAC,EACnBE,EAAQrB,EAAkB,uBAAuBS,EAAyBW,CAAI,EACpF,GAAI,CAACpB,EAAkB,mBAAmBqB,CAAK,EAC7C,SAEF,IAAMC,EAAiBD,EAAM,OAAO5F,IAAOuF,EAAc,SAASvF,EAAG,CAAC,EACtE,GAAIyF,IAAgB,KAClBA,EAAcI,UACL,CAACC,GAAUD,EAAgBJ,CAAW,EAC/C,MAEF,IAAMM,GAAYC,GAAeJ,CAAK,EACtCJ,EAAe,KAAK,CAClB,KAAAG,EACA,UAAAI,EACF,CAAC,CACH,CACA,GAAIP,EAAe,SAAW,EAG9B,OAAAA,EAAe,KAAK,CAACS,EAAGC,IAAMD,EAAE,UAAYC,EAAE,SAAS,EAChDC,GAAYxB,EAAkBa,EAAe,CAAC,EAAE,KAAM,gBAAiB,GAAOjB,CAAiB,CACxG,CACA,SAAS4B,GAAY5E,EAAS6E,EAASC,EAAQC,EAAU/B,EAAmB,CAC1E,OAAAA,EAAkB,YAAYhD,EAAS6E,EAASC,EAAQC,CAAQ,EACzDA,EAAW,KAAO,CACvB,QAAA/E,EACA,QAAA6E,CACF,CACF,CACA,SAAShB,GAAkBmB,EAAYzE,EAAa,CAClD,IAAM0E,EAAW1E,EAAY,QAAQ,EAC/B2E,EAAUC,GAAiBH,EAAW,IAAIvG,GAAOwG,EAAS,QAAQxG,CAAG,CAAC,CAAC,EACvE2G,EAAaF,EAAQ,CAAC,EAI5B,OAHkB5G,EAAM4G,CAAO,EACJE,IACEF,EAAQ,OAAS,EAC3B,KAAOE,CAC5B,CACA,SAASX,GAAezE,EAAS,CAC/B,SAASqF,EAAQ5G,EAAK,CACpB,IAAM6G,EAAS,CAAC,EACZ/B,EAAS9E,EAAI,kBAAkB,EACnC,KAAO8E,GAAU,MACf+B,EAAO,KAAK/B,CAAM,EAClBA,EAASA,EAAO,kBAAkB,EAEpC,OAAO+B,CACT,CACA,IAAIC,EAAQ,EACZ,QAASpB,EAAI,EAAGA,EAAInE,EAAQ,OAAS,EAAGmE,IAAK,CAC3C,IAAIO,EAAIW,EAAQrF,EAAQmE,CAAC,CAAC,EACtBQ,EAAIU,EAAQrF,EAAQmE,EAAI,CAAC,CAAC,EAC9B,CAACO,EAAGC,CAAC,EAAID,EAAE,OAASC,EAAE,OAAS,CAACD,EAAGC,CAAC,EAAI,CAACA,EAAGD,CAAC,EAC7CA,EAAE,QAAQnB,GAAU,CACdoB,EAAE,QAAQpB,CAAM,IAAM,IACxBgC,GAEJ,CAAC,CACH,CACA,OAAOA,CACT,CACA,SAASC,GAAoBvC,EAAsBwC,EAAM,CACvD,OAAQA,EAAM,CACZ,IAAK,OACH,OAAOxC,EAAqB,YAAY,EAC1C,IAAK,QACH,OAAOA,EAAqB,aAAa,EAC3C,QACE,OAAOA,EAAqB,cAAc,CAC9C,CACF,CACA,SAASU,GAAoBlB,EAAQ,CACnC,GAAM,CACJ,WAAAuC,EACA,cAAA7B,EACA,UAAAP,EACA,OAAAP,EACA,IAAAU,EACA,YAAAxC,EACA,qBAAA0C,CACF,EAAIR,EAEJ,GADsBM,EAAI,IAAI,wBAAwB,GAAKiC,EAAW,KAAKvG,GAAOA,EAAI,UAAU,EAAE,eAAe,EAE/G,MAAO,CAAC,EAEV,IAAMiH,EAAmBF,GAAoBvC,EAAsBZ,CAAM,EACnEsD,EAAcpF,EAAY,QAAQ,EAClCqF,EAAsBF,EAAiB,OAAOjH,GAAOoH,GAAUb,EAAYvG,CAAG,CAAC,EAC/EqH,EAAqBJ,EAAiB,OAAOjH,GAAO,CAACoH,GAAUb,EAAYvG,CAAG,CAAC,EAC/EsH,EAAgBJ,EAAY,OAAOlH,GAAO,CAACoH,GAAUb,EAAYvG,CAAG,CAAC,EACvEuH,EAAe,EACfC,EAAiBrD,EACrB,GAAIO,EAAe,CACjB,IAAI+C,EAA6B,EACjCN,EAAoB,QAAQnH,GAAOyH,GAA8BzH,EAAI,eAAe,CAAC,EACrFwH,GAAkBC,CACpB,CACA,GAAID,EAAiB,EAAG,CACtB,QAAS9B,EAAI,EAAGA,EAAI2B,EAAmB,OAAQ3B,IAAK,CAClD,IAAM1F,EAAMqH,EAAmB3B,CAAC,EAEhC,GADA8B,GAAkBxH,EAAI,eAAe,EACjCwH,EAAiB,EACnB,MAEFD,GACF,CACI7C,GACF6C,GAEJ,CACA,IAAIlC,EACJ,GAAIkC,EAAe,EAAG,CACpB,IAAMG,EAAaL,EAAmBE,EAAe,CAAC,EACtDlC,EAAiBiC,EAAc,QAAQI,CAAU,EAAI,CACvD,MACErC,EAAiBiC,EAAc,QAAQD,EAAmB,CAAC,CAAC,EACxDhC,IAAmB,KACrBA,EAAiB,GAGrB,IAAMJ,EAAa,CAACI,CAAc,EAC5BsC,EAAmB,CAAC1B,EAAGC,IAAMD,EAAIC,EACvC,GAAIxB,EAAe,CACjB,IAAIkD,EAAUvC,EAAiB,EACzBwC,EAAYX,EAAY,OAAS,EACvC,KAAOU,GAAWC,GAChB5C,EAAW,KAAK2C,CAAO,EACvBA,IAEF3C,EAAW,KAAK0C,CAAgB,CAClC,KAAO,CACL,IAAIC,EAAUvC,EACRwC,EAAYX,EAAY,OAAS,EACnCY,EAAeZ,EAAYU,CAAO,EACtC,KAAOA,GAAWC,GAAaZ,EAAiB,QAAQa,CAAY,EAAI,GACtEF,IACA3C,EAAW,KAAK2C,CAAO,EACvBE,EAAeZ,EAAYU,CAAO,EAEpCA,EAAUvC,EAAiB,EAC3B,IAAM0C,EAAoB,EAC1B,KAAOH,GAAWG,GAChB9C,EAAW,KAAK2C,CAAO,EACvBA,IAEF3C,EAAW,KAAK0C,CAAgB,EAAE,QAAQ,CAC5C,CACA,OAAO1C,CACT,CACA,SAAS+C,GAAWC,EAAGrE,EAAQsE,EAAc5D,EAAK6D,EAAc,CAC9D,IAAMC,EAAYD,EAAa,0BAA0BvE,CAAM,EAAE,YAAY,EAC7E,OAAIsE,IACFD,GAAKG,EAAU,sBAAsB,EAAE,MAErC9D,EAAI,IAAI,WAAW,IAErB2D,EADoBG,EAAU,YACZH,GAEhBrE,GAAU,OACZqE,GAAKE,EAAa,IAAI,QAAQ,EAAE,4BAA4B,GAEvDF,CACT,CAGA,IAAII,GAAoB,cAAclJ,CAAS,CAC7C,YAAYyE,EAAQ,CAClB,MAAM,EACN,KAAK,eAAiB,GACtB,KAAK,gBAAkB,GACvB,KAAK,cAAgB,KACrB,KAAK,OAASA,EACd,KAAK,kBAAoB,CAACnB,EAAQmB,CAAM,CAC1C,CACA,UAAUxE,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,KAAK,aAAa,UAAUC,GAAK,CAC/B,KAAK,YAAcA,EAAE,YACvB,CAAC,CACH,CACA,aAAc,CACZ,OAAO,KAAK,OAAS,SAAW,MAClC,CACA,YAAYwE,EAAe,CACzB,IAAMtC,EAAUsC,EAAc,SAAS,QAEvC,GAD8BA,EAAc,WAAW,OAAS,EAE9D,KAAK,kBAAkBtC,EAAS,GAAM,iBAAiB,MAClD,CACL,IAAM+G,EAAezE,EAAc,SAAS,aACtC0E,GAAkBhH,GAAW,CAAC,GAAG,OAAO7B,GAAU4I,EAAa5I,EAAO,MAAM,CAAC,CAAC,EACpF,KAAK,kBAAkB6I,EAAgB,GAAM,iBAAiB,CAChE,CACA,KAAK,iBAAiBhH,EAAS,KAAK,OAAQ,iBAAiB,EAC7D,KAAK,WAAWsC,EAAe,GAAM,EAAI,CAC3C,CACA,aAAc,CACZ,KAAK,sBAAsB,EAC3B,KAAK,cAAgB,IACvB,CACA,kBAAkBtC,EAASiH,EAASnC,EAAQ,CAC1C,GAAI9E,EAAS,CACX,IAAMkH,EAAclH,EAAQ,OAAOmH,GAAK,CAACA,EAAE,UAAU,EAAE,WAAW,EAClE,KAAK,YAAY,eAAeD,EAAaD,EAASnC,CAAM,CAC9D,CACF,CACA,iBAAiB9E,EAASqC,EAAQyC,EAAQ,CACxC,GAAI9E,EAAS,CACX,IAAMkH,EAAclH,EAAQ,OAAOmH,GAAK,CAACA,EAAE,UAAU,EAAE,UAAU,EACjE,KAAK,YAAY,cAAcD,EAAa7E,EAAQyC,CAAM,CAC5D,CACF,CACA,YAAa,CACX,KAAK,WAAW,KAAK,kBAAmB,GAAO,GAAM,EAAI,EACzD,KAAK,sBAAsB,EAC3B,KAAK,cAAgB,IACvB,CACA,wBAAwBsC,EAAoB,CAC1C,GAAI,KAAK,kBAAmB,CAC1B,IAAMC,EAAa,KAAK,aAAa,IAAI,QAAQ,EAC3CC,EAAoBD,EAAW,4BAA4B,EAC3DE,EAAmBD,EAAoBD,EAAW,eAAe,EACnE,KAAK,IAAI,IAAI,WAAW,GAC1B,KAAK,gBAAkBD,EAAqBE,EAAoB,GAChE,KAAK,eAAiBF,EAAqBG,EAAmB,KAE9D,KAAK,eAAiBH,EAAqBE,EAAoB,GAC/D,KAAK,gBAAkBF,EAAqBG,EAAmB,IAE7D,KAAK,gBAAkB,KAAK,gBAC9B,KAAK,sBAAsB,EAE3B,KAAK,sBAAsB,CAE/B,CACF,CACA,WAAWjF,EAAgB,KAAK,kBAAmBO,EAAY,GAAOC,EAAY,GAAOiC,EAAW,GAAO,CACzG,GAAIA,EAAU,CACZ,GAAI,KAAK,cAAe,CACtB,GAAM,CACJ,QAAA/E,EACA,QAAA6E,CACF,EAAI,KAAK,cACTD,GAAY5E,EAAS6E,EAAS,gBAAiB,GAAM,KAAK,iBAAiB,CAC7E,CACA,MACF,CAEA,GADA,KAAK,kBAAoBvC,EACrBkF,EAASlF,EAAc,UAAU,EACnC,OAEF,IAAMmF,EAAShB,GAAWnE,EAAc,EAAG,KAAK,OAAQ,GAAO,KAAK,IAAK,KAAK,YAAY,EACrFO,GACH,KAAK,wBAAwB4E,CAAM,EAErC,IAAM9E,EAAa,KAAK,mBAAmBL,EAAc,UAAU,EAC7DoF,EAAiBpF,EAAc,WAAW,KAC1Cc,EAAmBd,EAAc,WAAW,YAAY,EAAE,SAAS,OAAO7D,GAC1EA,EAAI,UAAU,EAAE,WACXA,EAAI,UAAU,GAAK,KAAK,OAE1B,EACR,GAAK,CAAC,EACDkJ,EAAgBnF,GAAmB,CACvC,iBAAAY,EACA,aAAcsE,IAAmB,EACjC,WAAA/E,EACA,UAAW8E,EACX,OAAQ,KAAK,OACb,UAAA5E,EACA,UAAAC,EACA,IAAK,KAAK,IACV,YAAa,KAAK,YAClB,kBAAmB,KAAK,kBACxB,qBAAsB,KAAK,kBAC7B,CAAC,EACG6E,IACF,KAAK,cAAgBA,EAEzB,CACA,mBAAmBhF,EAAY,CAC7B,GAAI,KAAK,IAAI,IAAI,WAAW,EAC1B,OAAQA,EAAY,CAClB,IAAK,GACH,MAAO,GACT,IAAK,GACH,MAAO,GACT,QACEiF,EAAW,qBAAqBjF,CAAU,EAAE,CAChD,KAEA,QAAOA,CAEX,CACA,uBAAwB,CACjB,KAAK,mBACR,KAAK,cAAgB,EACrB,KAAK,mBAAqB,EAC1B,KAAK,iBAAmB,OAAO,YAAY,KAAK,aAAa,KAAK,IAAI,EAAG,GAAG,EAC5E,KAAK,mBAAmB,aAAa,KAAK,eAAiB,OAAS,QAAS,EAAI,EAErF,CACA,uBAAwB,CAClB,KAAK,mBACP,OAAO,cAAc,KAAK,gBAAgB,EAC1C,KAAK,iBAAmB,KACxB,KAAK,mBAAmB,aAAa,MAAM,EAE/C,CACA,cAAe,CACb,IAAIkF,EACJ,KAAK,gBACLA,EAAe,GAAK,KAAK,cAAgB,EACrCA,EAAe,MACjBA,EAAe,KAEjB,IAAIC,EAAc,KACZC,EAAgB,KAAK,YAAY,iBAAiB,EAMxD,GALI,KAAK,eACPD,EAAcC,EAAc,mBAAmB,CAACF,CAAY,EACnD,KAAK,kBACdC,EAAcC,EAAc,mBAAmBF,CAAY,GAEzDC,IAAgB,EAClB,KAAK,WAAW,KAAK,iBAAiB,EACtC,KAAK,mBAAqB,MACrB,CACL,KAAK,qBAEL,IAAME,EADU,KAAK,kBAAkB,SAAS,QACd,OAAOb,GAAK,CAACA,EAAE,UAAU,EAAE,UAAU,EACvE,GAAIa,EAAkB,OAAS,IAC7B,KAAK,mBAAmB,aAAa,QAAQ,EACzC,KAAK,mBAAqB,GAAG,CAC/B,IAAMC,EAAU,KAAK,eAAiB,OAAS,QAC/C,KAAK,iBAAiBD,EAAmBC,EAAS,iBAAiB,EACnE,KAAK,mBAAmB,MAAM,CAChC,CAEJ,CACF,CACF,EAGIC,GAAiB,cAActK,CAAS,CAC1C,UAAUC,EAAO,CACf,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,YAAcA,EAAM,YACzB,KAAK,aAAeA,EAAM,YAC5B,CACA,YAAYwE,EAAQ8F,EAAY,CAC9B,MAAM,EACN,KAAK,OAAS9F,EACd,KAAK,WAAa8F,CACpB,CACA,eAAgB,CACd,KAAK,aAAa,UAAUrK,GAAK,CAC/B,OAAQ,KAAK,OAAQ,CACnB,IAAK,OACH,KAAK,qBAAuB,CAAC,CAACA,EAAE,aAAa,uBAAuB,EAAGA,EAAE,KAAK,oBAAoB,CAAC,EAAG,CAACA,EAAE,WAAW,oBAAoB,CAAC,EAAG,CAACA,EAAE,QAAQ,oBAAoB,CAAC,CAAC,EAC7K,MACF,IAAK,QACH,KAAK,qBAAuB,CAAC,CAACA,EAAE,aAAa,uBAAuB,EAAGA,EAAE,MAAM,oBAAoB,CAAC,EAAG,CAACA,EAAE,YAAY,oBAAoB,CAAC,EAAG,CAACA,EAAE,SAAS,oBAAoB,CAAC,CAAC,EAChL,MACF,QACE,KAAK,qBAAuB,CAAC,CAACA,EAAE,aAAa,uBAAuB,EAAGA,EAAE,OAAO,mBAAmB,CAAC,EAAG,CAACA,EAAE,aAAa,mBAAmB,CAAC,EAAG,CAACA,EAAE,UAAU,mBAAmB,CAAC,CAAC,EAChL,KACJ,CACF,CAAC,EACD,KAAK,kBAAoB,KAAK,kBAAkB,IAAIgJ,GAAkB,KAAK,MAAM,CAAC,EAClF,KAAK,oBAAsB,KAAK,kBAAkB,IAAI1E,GAAoB,KAAK,MAAM,CAAC,EACtF,KAAK,mBAAmB,cAAc,IAAI,CAC5C,CACA,eAAeqD,EAAM,CACnB,OAAOA,IAAS,GAAsBA,IAAS,GAAqB,KAAK,IAAI,IAAI,+BAA+B,CAClH,CACA,wBAAyB,CACvB,OAAO,KAAK,oBACd,CACA,cAAe,CACb,OAAO,KAAK,UACd,CACA,aAAc,CACZ,OAAO,KAAK,oBAAoB,YAAY,CAC9C,CAIA,wBAAwBnD,EAAe,CACrC,OAAO,KAAK,YAAY,YAAY,GAAKA,EAAc,WAAW,OAAS,CAC7E,CACA,YAAYA,EAAe,CACzB,KAAK,oBAAsB,KAAK,wBAAwBA,CAAa,EAAI,KAAK,oBAAsB,KAAK,kBACzG,KAAK,oBAAoB,YAAYA,CAAa,CACpD,CACA,YAAYG,EAAQ,CAClB,KAAK,oBAAoB,YAAYA,CAAM,CAC7C,CACA,WAAWA,EAAQ,CACjB,KAAK,oBAAoB,WAAWA,CAAM,CAC5C,CACA,WAAWA,EAAQ,CACjB,KAAK,oBAAoB,WAAWA,CAAM,CAC5C,CACF,EAGI2F,GAAgB,cAAcxK,CAAS,CACzC,UAAUC,EAAO,CACf,KAAK,wBAA0BA,EAAM,wBACrC,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,aAAeA,EAAM,aAC1B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,sBAAwBA,EAAM,qBACrC,CACA,YAAYwE,EAAQlE,EAAQkK,EAASnI,EAAMoI,EAAM,CAC/C,MAAM,EACN,KAAK,OAASjG,EACd,KAAK,OAASlE,EACd,KAAK,QAAUkK,EACf,KAAK,KAAOnI,EACZ,KAAK,KAAOoI,CACd,CACA,eAAgB,CACd,IAAMC,EAAqB,CAAC,EACxBC,EACAC,EACEC,EAAY,IAAM,CAEtB,GADAC,EAAc,KAAK,QAASH,CAAS,EACjC,CAACA,EACH,OAEF,IAAMI,EAAyB,KAAK,wBAAwB,aAAa,CACvE,WAAY,KAAK,QACjB,cAAe,KAAK,cAAc,KAAK,IAAI,EAC3C,WAAY,KAAK,WAAW,KAAK,KAAM,EAAK,EAC5C,YAAa,KAAK,WAAW,KAAK,KAAM,EAAI,CAC9C,CAAC,EAED,GADAL,EAAmB,KAAKK,CAAsB,EAC1CH,EAAa,CACf,IAAMI,EAAuB,KAAK,IAAI,IAAI,sBAAsB,EAC1DC,EAAsB,IAAM,CAChC,KAAK,sBAAsB,eAAe,KAAK,OAAQ,kBAAmBD,CAAoB,CAChG,EACA,KAAK,QAAQ,iBAAiB,WAAYC,CAAmB,EAC7D,IAAMrH,EAAgB,IAAIC,GAAc,KAAK,OAAO,EACpDD,EAAc,iBAAiB,YAAaqH,CAAmB,EAC/DP,EAAmB,KAAK,IAAM,CAC5B,KAAK,QAAQ,oBAAoB,WAAYO,CAAmB,EAChErH,EAAc,oBAAoB,YAAaqH,CAAmB,EAClErH,EAAc,QAAQ,CACxB,CAAC,CACH,CACF,EACMsH,EAAe,IAAM,CACzBR,EAAmB,QAAQS,GAAKA,EAAE,CAAC,EACnCT,EAAmB,OAAS,CAC9B,EACMU,EAAU,IAAM,CACpB,IAAMC,EAAS,KAAK,OAAO,YAAY,EACjCC,EAAW,CAAC,KAAK,IAAI,IAAI,kBAAkB,GAAK,CAAC,KAAK,OAAO,UAAU,EAAE,kBACxDD,IAAWV,GAAaW,IAAaV,KAE1DD,EAAYU,EACZT,EAAcU,EACdJ,EAAa,EACbL,EAAU,EAEd,EACAO,EAAQ,EACR,KAAK,eAAeF,CAAY,EAChC,KAAK,KAAK,mBAAmBE,CAAO,CACtC,CACA,WAAWlE,EAAUqE,EAAc,CACjC,GAAM,CACJ,OAAQC,EACR,iBAAAC,EACA,iBAAAC,CACF,EAAI,KACEC,EAAyB,KAAK,sBAAsBJ,CAAY,EAChEK,EAAWF,EAAmBC,EAC9BE,EAAe,CAAC,CACpB,IAAAL,EACA,SAAAI,CACF,CAAC,EACD,GAAI,KAAK,OAAO,UAAU,EAAG,CAC3B,IAAMxH,EAAY,KAAK,mBAAmB,mBAAmB,EACvDC,EAAa,KAAK,mBAAmB,oBAAoB,EACzDyH,EAAYC,GAAe,KAAK,aAAa,gBAAgB,EAAE,uBAAuB,CAAC,EAAI,GACjG,GAAI3H,EAAYC,GAAcsH,EAAyBF,GAAoBK,EACzE,MAEJ,CACA,KAAK,iBAAmBH,EACxB,KAAK,kBAAkB,gBAAgBE,EAAc,KAAK,mBAAoB3E,EAAU,iBAAiB,EACrGA,GACF,KAAK,qBAAqB,EAAK,CAEnC,CACA,cAAc8E,EAAU,CACtB,KAAK,iBAAmB,KAAK,OAAO,eAAe,EACnD,KAAK,iBAAmB,EACxB,KAAK,mBAAqBA,EAC1B,KAAK,qBAAqB,EAAI,CAChC,CACA,qBAAqBC,EAAU,CAC7B,KAAK,KAAK,oBAAoB,qBAAsBA,CAAQ,CAC9D,CAGA,sBAAsBC,EAAY,CAChC,IAAIzE,EAASyE,EACPC,EAAiB,KAAK,SAAW,OACjCC,EAAe,KAAK,SAAW,QACrC,OAAI,KAAK,IAAI,IAAI,WAAW,EACtBD,IACF1E,GAAU,IAGR2E,IACF3E,GAAU,IAGPA,CACT,CACF,EAGI4E,GAAmB,cAActM,CAAS,CAC5C,YAAYO,EAAQ,CAClB,MAAM,EACN,KAAK,mBAAqB,GAC1B,KAAK,4BAA8B,GACnC,KAAK,OAASA,CAChB,CACA,UAAUN,EAAO,CACf,KAAK,SAAWA,EAAM,SACtB,KAAK,iBAAmBA,EAAM,gBAChC,CACA,eAAe,EAAG,CAChB,IAAMsM,EAAW,KAAK,YAClBA,EAAS,YAAY,GAAK,CAACA,EAAS,OAAO,EAAE,SAAS,KAAK,IAAI,oBAAoB,CAAC,IACtF,EAAE,eAAe,EACjBA,EAAS,SAAS,CAACA,EAAS,SAAS,CAAC,EAE1C,CACA,gBAAiB,CACf,OAAO,KAAK,YAAY,OAAO,CACjC,CACA,QAAQ7B,EAAM,CACZ,KAAK,eAAiBA,EACtB,KAAK,YAAc,KAAK,kBAAkB,IAAI8B,EAAY,EAC1D,KAAK,YAAY,YAAY,sBAAsB,EACnDC,EAAa,KAAK,YAAY,OAAO,EAAG,cAAc,EACtD,KAAK,oBAAoB,EACzB,KAAK,yBAAyB,CAC5B,iBAAkB,KAAK,mBAAmB,KAAK,IAAI,EACnD,wBAAyB,KAAK,0BAA0B,KAAK,IAAI,EACjE,iBAAkB,KAAK,mBAAmB,KAAK,IAAI,EACnD,kBAAmB,KAAK,mBAAmB,KAAK,IAAI,EACpD,aAAc,KAAK,eAAe,KAAK,IAAI,CAC7C,CAAC,EACD,KAAK,oBAAoB,KAAK,YAAa,CACzC,kBAAmB,KAAK,cAAc,KAAK,IAAI,CACjD,CAAC,EACDC,GAAe,KAAK,YAAY,OAAO,EAAG,EAAI,EAC9C,KAAK,YAAY,gBAAgB,EAAE,aAAa,WAAY,IAAI,EAChE,KAAK,sBAAsB,CAC7B,CACA,oBAAqB,CACnB,KAAK,oBAAoB,CAC3B,CACA,2BAA4B,CACrB,KAAK,QAAQ,GAGlB,KAAK,oBAAoB,CAC3B,CACA,qBAAsB,CACpB,KAAK,mBAAqB,KAAK,oBAAoB,EACnD,KAAK,YAAY,aAAa,KAAK,mBAAoB,CACrD,eAAgB,EAClB,CAAC,EACG,KAAK,qBACP,KAAK,uBAAuB,mBAAmB,EAC/C,KAAK,mBAAmB,mBAAmB,EAC3C,KAAK,sBAAsB,GAE7B,KAAK,sBAAsB,CAC7B,CACA,gBAAiB,CACV,KAAK,oBAGV,KAAK,sBAAsB,CAC7B,CACA,oBAAqB,CACd,KAAK,oBAGV,KAAK,sBAAsB,CAC7B,CACA,uBAAwB,CACtB,GAAI,KAAK,4BACP,OAEF,KAAK,4BAA8B,GACnC,IAAMC,EAAc,KAAK,iBAAiB,kBAAkB,KAAK,eAAe,EAAG,KAAK,kBAAkB,CAAC,EAC3G,KAAK,YAAY,SAASA,CAAW,EACrC,IAAMC,EAAmB,KAAK,iBAAiB,iBAAiB,KAAK,eAAe,EAAG,KAAK,kBAAkB,CAAC,EAC/G,KAAK,YAAY,YAAY,CAACA,CAAgB,EAC9C,KAAK,sBAAsB,EAC3B,KAAK,4BAA8B,EACrC,CACA,uBAAwB,CACtB,IAAMC,EAAY,KAAK,cAAc,kBAAkB,EAEjDC,EADU,KAAK,YAAY,SAAS,EACbD,EAAU,cAAe,SAAS,EAAIA,EAAU,gBAAiB,WAAW,EACnGE,EAAYF,EAAU,mBAAoB,0CAA0C,EACrF,KAAK,mBAGR,KAAK,eAAe,2BAA2B,YAAa,GAAGE,CAAS,KAAKD,CAAU,GAAG,EAF1F,KAAK,eAAe,2BAA2B,YAAa,IAAI,EAIlE,KAAK,YAAY,kBAAkB,GAAGC,CAAS,KAAKD,CAAU,GAAG,EACjE,KAAK,eAAe,wBAAwB,CAC9C,CACA,mBAAmBE,EAAS,CAE1B,OADsB,KAAK,IAAI,IAAI,cAAc,IAAM,WAKhD,IAHLC,EAAU,GAAGD,CAAO,sDAAsD,EACnE,GAGX,CACA,uBAAuBA,EAAS,CAC9B,IAAME,EAAe,KAAK,SAAS,QAAQ,EAE3C,OADwBA,IAAiB,cAAgBA,IAAiB,aAKnE,IAHLD,EAAU,GAAGD,CAAO,wFAAwFE,CAAY,GAAG,EACpH,GAGX,CACA,eAAgB,CAId,GAHI,KAAK,6BAGL,CAAC,KAAK,mBACR,OAEF,IAAMC,EAAQ,KAAK,YAAY,SAAS,EAClCC,EAAe,KAAK,eAAe,EACnCC,EAAkB,KAAK,kBAAkB,EAC3CnG,EAAS,cACTmG,EACFnG,EAAS,yBACAkG,IACTlG,EAAS,uBAEX,IAAMrC,EAAS,CACb,OAAAqC,EACA,aAAAkG,EACA,gBAAAC,CACF,EACIF,EACF,KAAK,iBAAiB,kBAAkBtI,CAAM,EAE9C,KAAK,iBAAiB,oBAAoBA,CAAM,CAEpD,CACA,qBAAsB,CACpB,IAAI6C,EAAS,KAAK,OAAO,UAAU,EAAE,wBACrC,GAAI,OAAOA,GAAW,WAAY,CAChC,IAAM4F,EAAO5F,EACP7C,EAAS,KAAK,IAAI,oBAAoB,CAC1C,OAAQ,KAAK,OACb,OAAQ,KAAK,OAAO,UAAU,CAChC,CAAC,EACD6C,EAAS4F,EAAKzI,CAAM,CACtB,CACA,OAAI6C,EACK,KAAK,uBAAuB,yBAAyB,GAAK,KAAK,mBAAmB,yBAAyB,EAE7G,EACT,CACA,gBAAiB,CACf,MAAO,CAAC,CAAC,KAAK,OAAO,UAAU,EAAE,mCACnC,CACA,mBAAoB,CAClB,MAAO,CAAC,CAAC,KAAK,OAAO,UAAU,EAAE,sCACnC,CACF,EAGI6F,GAAiB,cAAcC,EAAuB,CACxD,YAAYjN,EAAQN,EAAOwN,EAAe,CACxC,MAAMlN,EAAQN,EAAOwN,CAAa,EAClC,KAAK,iBAAmB,CAAC,EACzB,KAAK,kBAAmC,IAAI,IAC5C,KAAK,0BAA2C,IAAI,IACpD,KAAK,OAASlN,CAChB,CACA,QAAQ+B,EAAMC,EAAMkI,EAASiD,EAAoB,CAC/C,KAAK,KAAOpL,EACZ,KAAK,OAAOC,CAAI,EAChB,KAAK,YAAY,EACjB,KAAK,WAAW,EAChB,KAAK,eAAe,EACpB,KAAK,eAAe,EACpB,KAAK,mBAAmB,EACxB,KAAK,mBAAmB,EACxB,KAAK,wBAAwB,EAC7B,KAAK,gBAAgBmL,CAAkB,EACvC,KAAK,uBAAuB,EAC5B,KAAK,iBAAiB,EACtB,KAAK,uBAAuB,EAC5B,KAAK,aAAa,EAClB,KAAK,8BAA8B,EACnC,KAAK,eAAe,EACpB,KAAK,cAAc,EACnB,KAAK,YAAY,EACjB,KAAK,cAAgB,KAAK,kBAAkB,IAAIlD,GAAc,KAAK,UAAU,EAAG,KAAK,OAAQC,EAASnI,EAAM,IAAI,CAAC,EACjH,KAAK,kBAAkB,IAAIqL,GAAa,CAAC,KAAK,MAAM,EAAGpL,CAAI,CAAC,EAC5D,KAAK,kBAAkB,IAAIqL,GAAe,KAAK,OAAQrL,EAAM,KAAK,KAAK,CAAC,EACxE,KAAK,kBAAkB,IAAIE,GAAoBF,EAAM,CACnD,2BAA4BsL,GAAK,KAAK,2BAA2BA,CAAC,EAClE,aAAc,IAAM,KACpB,cAAe,KAAK,cAAc,KAAK,IAAI,EAC3C,UAAW,KAAK,UAAU,KAAK,IAAI,EACnC,WAAY,KAAK,WAAW,KAAK,IAAI,CACvC,CAAC,CAAC,EACF,KAAK,kCAAkC,EACvC,KAAK,4BAA4B,CAAC,yBAA0B,mBAAoB,yBAAyB,EAAG,KAAK,QAAQ,KAAK,IAAI,CAAC,EACnI,KAAK,oBAAoB,KAAK,OAAQ,CACpC,cAAe,KAAK,QAAQ,KAAK,IAAI,CACvC,CAAC,EACD,KAAK,yBAAyB,CAC5B,mBAAoB,KAAK,qBAAqB,KAAK,IAAI,EACvD,sBAAuB,KAAK,wBAAwB,KAAK,IAAI,EAC7D,mBAAoB,KAAK,qBAAqB,KAAK,IAAI,EACvD,oBAAqB,KAAK,sBAAsB,KAAK,IAAI,CAC3D,CAAC,CACH,CACA,aAAaC,EAAO7B,EAAU,CAC5B,GAAI,CAAC,KAAK,OAAO,YAAY,EAC3B,OAEF,IAAM8B,EAAc,KAAK,OAAO,eAAe,EACzCC,EAAW,KAAK,OAAO,YAAY,EACnCC,EAAW,KAAK,OAAO,YAAY,EACnCpC,EAAW,KAAK,IAAI,KAAK,IAAIkC,EAAcD,EAAOE,CAAQ,EAAGC,CAAQ,EAC3E,KAAK,MAAM,kBAAkB,gBAAgB,CAAC,CAC5C,IAAK,KAAK,OACV,SAAApC,CACF,CAAC,EAAGI,EAAU,GAAM,iBAAiB,CACvC,CACA,WAAWlH,EAAY,CACrB,GAAM,CACJ,KAAAxC,EACA,OAAAhC,EACA,IAAA4E,EACA,aAAA6D,CACF,EAAI,KACEvE,EAAS,KAAK,UAAU,EACxByJ,EAAO3L,EAAK,sBAAsB,EAAE,KACpC4L,EAAQ5N,EAAO,eAAe,EAC9BoB,EAAQwD,EAAI,IAAI,WAAW,EAE3BH,EAAY6D,GADH9D,IAAe,IAAiBpD,EACTuM,EAAO,GAAKA,EAAOC,EAAQ,GAAI1J,EAAQ,GAAMU,EAAK6D,CAAY,EACpGpE,GAAmB,CACjB,iBAAkB,CAACrE,CAAM,EACzB,aAAc,GACd,WAAAwE,EACA,UAAAC,EACA,OAAAP,EACA,UAAW,GACX,UAAW,GACX,IAAAU,EACA,YAAa,KAAK,MAAM,YACxB,kBAAmB,KAAK,MAAM,kBAC9B,qBAAsB,KAAK,MAAM,kBACnC,CAAC,EACD6D,EAAa,gBAAgB,EAAE,iBAAiB,EAAE,oBAAoBzI,EAAQ,MAAM,CACtF,CACA,eAAgB,CACd,IAAM6N,EAAc,KAAK,sBAAsB,EAC/C,KAAK,eAAeA,CAAW,CACjC,CACA,eAAeA,EAAa,CAC1B,KAAK,gBAAkBA,EACvB,KAAK,KAAK,mBAAmBA,CAAW,CAC1C,CACA,uBAAwB,CACtB,IAAMvJ,EAAS,KAAK,aAAa,EAC3BwJ,EAAS,KAAK,OAAO,UAAU,EACrC,OAAO,KAAK,qBAAqB,qBAAqBA,EAAQxJ,CAAM,CACtE,CACA,cAAe,CAyCb,OAxCe,KAAK,IAAI,oBAAoB,CAC1C,OAAQ,KAAK,OACb,YAAa,KAAK,YAClB,cAAe,KAAK,OAAO,WAAW,EACtC,WAAY,KAAK,YACjB,mBAAoB,KAAK,mBAAqB,KAAK,YAAY,4BAA4B,KAAK,MAAM,EACtG,iBAAkB,CAAC,KAAK,mBAAqB,KAAK,YAAY,oBAAoB,EAClF,eAAgByJ,GAAiB,CAC/B,KAAK,YAAY,eAAe,CAC9B,OAAQ,KAAK,OACb,cAAAA,EACA,WAAY,QACd,CAAC,CACH,EACA,8BAA+B9K,GAAc,CAC3C,KAAK,YAAY,eAAe,CAC9B,OAAQ,KAAK,OACb,WAAAA,EACA,WAAY,OACd,CAAC,CACH,EACA,WAAY8K,GAAiB,CAC3B,KAAK,YAAY,eAAe,CAC9B,OAAQ,KAAK,OACb,cAAAA,EACA,cAAe,eACf,WAAY,QACd,CAAC,CACH,EACA,aAAcC,GAAa,CACzB,KAAK,MAAM,eAAe,aAAa,KAAK,OAAQ,CAAC,CAACA,EAAW,gBAAgB,CACnF,EACA,QAAS,CAACC,EAAMD,IAAc,CAC5B,KAAK,MAAM,eAAe,iBAAiB,KAAK,OAAQC,EAAM,CAAC,CAACD,EAAW,gBAAgB,CAC7F,EACA,YAAa,KAAK,OAAO,EACzB,WAAY,CAACpB,EAAOsB,IAAyB,CAC3C,KAAK,aAAatB,EAAOsB,CAAoB,CAC/C,CACF,CAAC,CAEH,CACA,gBAAiB,CACf,KAAK,iBAAmB,KAAK,kBAAkB,IAAInC,GAAiB,KAAK,MAAM,CAAC,EAChF,KAAK,iBAAiB,QAAQ,IAAI,CACpC,CACA,iBAAkB,CAChB,OAAO,KAAK,iBAAiB,eAAe,CAC9C,CACA,cAAc,EAAG,CACf,MAAM,cAAc,CAAC,EACjB,EAAE,MAAQjJ,EAAQ,OACpB,KAAK,iBAAiB,eAAe,CAAC,EAEpC,EAAE,MAAQA,EAAQ,OACpB,KAAK,eAAe,CAAC,EAEnB,EAAE,MAAQA,EAAQ,MAAQ,EAAE,QAC9B,KAAK,mBAAmB,EAAG,EAAK,CAEpC,CACA,eAAe,EAAG,CAChB,GAAI,EAAE,SAAW,EAAE,QACjB,KAAK,mBAAmB,EAAG,EAAI,UACtB,KAAK,SAAU,CACxB,IAAMkL,EAAY,EAAE,SACpB,KAAK,MAAM,eAAe,aAAa,KAAK,OAAQA,EAAW,gBAAgB,CACjF,CACF,CACA,mBAAmB,EAAGG,EAAkB,CACtC,IAAMC,EAAa,KAAK,KAAK,oBAAoB,EAC7C,CAACA,GAAc,EAAEA,aAAsBC,KAGvCD,EAAW,uBAAuBD,CAAgB,GACpD,EAAE,eAAe,CAErB,CACA,UAAU,EAAG,CACX,GAAI,CAAC,KAAK,OAAO,EAAE,SAAS,EAAE,aAAa,EAAG,CAC5C,IAAMG,EAAW,KAAK,YAAY,EAClC,KAAK,aAAa,iBAAiBA,EAAU,KAAK,MAAM,EACxD,KAAK,wBAAwB,CAC/B,CACI,KAAK,aAAa,eAAe,GACnC,KAAK,gBAAgB,EAAI,CAE7B,CACA,WAAW,EAAG,CACR,KAAK,OAAO,EAAE,SAAS,EAAE,aAAa,GAG1C,KAAK,gBAAgB,EAAK,CAC5B,CACA,aAAa1B,EAAOsB,EAAsB,CACpC,KAAK,iBACP,KAAK,eAAiB,KAAK,YAAY,KAAK,cAAc,GAE5D,IAAMK,EAAyB,KAAK,IAAI,IAAI,iBAAiB,IAAM,gBAC7DvM,EAAO,KAAK,KACZ8L,EAAS,KAAK,OAAO,UAAU,EACjC,CAACI,GAAwBK,GAA0B,CAACT,EAAO,kBAC7DI,EAAuB,IAAM,CAC3B,IAAMM,EAASxM,EAAK,cAAc,sBAAsB,EACxD,OAAKwM,EAGEA,EAAO,YAAcA,EAAO,YAF1B,EAGX,GAEF,IAAMC,EAAc,CAClB,UAAW,IAAM,KAAK,OACtB,UAAW,IAAM,KAAK,OAAO,UAAU,EACvC,OAAQ,IAAMzM,EACd,YAAa,IAAM,SACnB,gBAAiB,IACX4K,GAGQ,KAAK,OAAO,UAAU,EAAE,cAGtC,qBAAAsB,CACF,EACMQ,EAAiB,KAAK,kBAAkB,IAAIC,GAAeF,CAAW,CAAC,EAC7E,KAAK,iBAAiB,KAAK,IAAMC,EAAe,eAAe,CAAC,CAClE,CACA,wBAAyB,CACvB,IAAME,EAAuB,IAAM,CACjC,IAAMd,EAAS,KAAK,OAAO,UAAU,EAC/Be,EAAUC,GAA4BhB,EAAQ,KAAK,IAAK,KAAK,OAAQ,IAAI,EACzEiB,EAAa,KAAK,kBACxB,KAAK,kBAAoB,IAAI,IAAIF,CAAO,EACxCA,EAAQ,QAAQ7F,GAAK,CACf+F,EAAW,IAAI/F,CAAC,EAClB+F,EAAW,OAAO/F,CAAC,EAEnB,KAAK,KAAK,oBAAoBA,EAAG,EAAI,CAEzC,CAAC,EACD+F,EAAW,QAAQ/F,GAAK,KAAK,KAAK,oBAAoBA,EAAG,EAAK,CAAC,CACjE,EACA,KAAK,iBAAiB,KAAK4F,CAAoB,EAC/CA,EAAqB,CACvB,CACA,cAAcI,EAAS,CAGrB,GAFA,KAAK,kBAAoBA,EACzB,KAAK,iBAAiB,EAClB,CAACA,GAAW,CAAC,KAAK,UACpB,OAEF,GAAM,CACJ,OAAAhP,EACA,MAAAN,EACA,YAAAuP,EACA,mBAAAC,EACA,IAAAtK,CACF,EAAI,KACE,CACJ,YAAAxC,CACF,EAAI1C,EACAyP,EAAmB,CAAC,KAAK,IAAI,IAAI,+BAA+B,EAC9DC,EAAa,KAAK,WAAa,CACnC,KAAM,EACN,SAAUJ,EACV,mBAAoB,IAAMG,EAAmB,OAAS,aACtD,YAAa,IAAM,KAAK,eAAenP,CAAM,EAC7C,aAAciP,EACd,cAAe,IAAM,CACnBE,EAAmB,CAACvK,EAAI,IAAI,+BAA+B,EAC3D5E,EAAO,UAAU,GAAM,eAAe,CACxC,EACA,cAAe,IAAMA,EAAO,UAAU,GAAO,eAAe,EAC5D,YAAaqP,GAAY,CACvB,GAAIF,EAAkB,CACpB,IAAMG,EAAkBD,GAAU,SAAS,OAAO/O,GAAO,CAACA,EAAI,UAAU,EAAE,WAAW,GAAK,CAAC,EAC3F8B,EAAY,eAAekN,EAAiB,GAAM,eAAe,CACnE,CACF,EACA,WAAYD,GAAY,CACtB,GAAIF,EAAkB,CACpB,IAAMG,EAAkBD,GAAU,SAAS,OAAO/O,GAAO,CAACA,EAAI,UAAU,EAAE,WAAW,GAAK,CAAC,EAC3F8B,EAAY,eAAekN,EAAiB,GAAO,eAAe,CACpE,CACF,CACF,EACAJ,EAAmB,cAAcE,EAAY,EAAI,CACnD,CACA,eAAepP,EAAQ,CACrB,IAAM4I,EAAe,CAAC,EACtB,OAAAA,EAAa5I,EAAO,MAAM,CAAC,EAAIA,EAAO,UAAU,EACzC,CACL,QAAS,CAACA,CAAM,EAChB,aAAA4I,CACF,CACF,CACA,aAAc,CACZ,KAAK,YAAc,KAAK,YAAY,4BAA4B,KAAK,MAAM,EAC3E,KAAK,kBAAoB,KAAK,YAAY,4BAA4B,KAAK,MAAM,EACjF,KAAK,SAAW,KAAK,OAAO,WAAW,EACvC,KAAK,YAAc,KAAK,qBAAqB,EAC7C,KAAK,UAAY,KAAK,iBAAiB,CACzC,CACA,mBAAmBmE,EAAM,CACvB,KAAK,iBAAiB,KAAKA,CAAI,CACjC,CACA,SAAU,CACR,KAAK,YAAY,EACjB,KAAK,kBAAkB,EACvB,KAAK,YAAY,EACjB,KAAK,iBAAiB,QAAQlC,GAAKA,EAAE,CAAC,CACxC,CACA,mBAAoB,CAClB,IAAM0E,EAAiB,KAAK,sBAAsB,GAC7B,KAAK,KAAK,oBAAoB,GACZ,MAAQ,KAAK,gBAAgB,gBAAkBA,EAAe,eACxD,KAAK,yBAAyBA,EAAe,MAAM,EAAI,IAElG,KAAK,cAAc,KAAK,iBAAiB,EAEzC,KAAK,eAAeA,CAAc,CAEtC,CACA,yBAAyBjL,EAAQ,CAC/B,IAAM8J,EAAa,KAAK,KAAK,oBAAoB,EAIjD,MAHI,CAACA,GAGD,CAACA,EAAW,QACP,GAEGA,EAAW,QAAQ9J,CAAM,CAEvC,CACA,sBAAuB,CACrB,OAAO,KAAK,MAAM,kBAAkB,wBAAwB,KAAK,OAAQ,SAAU,EAAI,CACzF,CACA,kBAAmB,CACb,KAAK,cAAgB,KAAK,qBAAqB,GACjD,KAAK,QAAQ,CAEjB,CACA,kBAAmB,CACjB,IAAMwJ,EAAS,KAAK,OAAO,UAAU,EAGrC,MAAO,CAAC,EADW,CADc,KAAK,IAAI,IAAI,wBAAwB,GACtB,CAACA,EAAO,iBAAmB,CAACA,EAAO,eAC5D,CAAC,CAACA,EAAO,gBAAkB,CAAC,CAACA,EAAO,WAC7D,CACA,yBAA0B,CACxB,KAAK,iBAAiB,CACxB,CACA,sBAAuB,CACrB,KAAK,iBAAiB,CACxB,CACA,sBAAuB,CACrB,KAAK,iBAAiB,CACxB,CACA,YAAa,CACX,IAAM3L,EAAW,IAAM,CACrB,IAAMqN,EAAc,KAAK,OAAO,eAAe,EAC/C,KAAK,KAAK,SAAS,GAAGA,CAAW,IAAI,CACvC,EACA,KAAK,oBAAoB,KAAK,OAAQ,CACpC,aAAcrN,CAChB,CAAC,EACDA,EAAS,CACX,CACA,gBAAiB,CACf,IAAMA,EAAW,IAAM,CACrB,KAAK,KAAK,oBAAoB,wBAAyB,KAAK,OAAO,SAAS,CAAC,CAC/E,EACA,KAAK,oBAAoB,KAAK,OAAQ,CACpC,cAAeA,CACjB,CAAC,EACDA,EAAS,CACX,CACA,gBAAiB,CACf,IAAMA,EAAW,IAAM,CACrB,KAAK,KAAK,oBAAoB,yBAA0B,KAAK,OAAO,cAAc,CAAC,CACrF,EACA,KAAK,oBAAoB,KAAK,OAAQ,CACpC,mBAAoBA,CACtB,CAAC,EACDA,EAAS,CACX,CACA,oBAAqB,CACnB,IAAMsN,EAAyB,IAAM,CACnC,KAAK,KAAK,oBAAoB,0BAA2B,CAAC,CAAC,KAAK,QAAQ,CAC1E,EACAA,EAAuB,EACvB,KAAK,mBAAmBA,CAAsB,EAC9C,KAAK,yBAAyB,CAC5B,YAAa,KAAK,gBAAgB,KAAK,IAAI,CAC7C,CAAC,CACH,CACA,kBAAmB,CACjB,IAAMtN,EAAW,IAAM,CACrB,IAAMuN,EAAiB,KAAK,OAAO,eAAe,EAClD,KAAK,KAAK,oBAAoB,0BAA2BA,CAAc,EACvE,KAAK,YAAY,CACnB,EACA,KAAK,oBAAoB,KAAK,OAAQ,CACpC,oBAAqBvN,CACvB,CAAC,EACDA,EAAS,CACX,CACA,oBAAqB,CACnB,IAAMA,EAAW,IAAM,CACrB,IAAMwN,EAAW,CAAC,CAAC,KAAK,OAAO,UAAU,EAAE,eAC3C,KAAK,KAAK,oBAAoB,2BAA4BA,CAAQ,CACpE,EACAxN,EAAS,EACT,KAAK,mBAAmBA,CAAQ,CAClC,CACA,2BAA4B,CAC1B,MAAM,0BAA0B,EAC3B,KAAK,QAAQ,GAGlB,KAAK,sBAAsB,CAC7B,CACA,uBAAwB,CACtB,KAAK,wBAAwB,CAC/B,CACA,yBAA0B,CACxB,GAAM,CACJ,KAAAH,EACA,OAAAhC,EACA,KAAA+B,EACA,MAAArC,CACF,EAAI,KACJ,GAAI,CAACM,EAAO,mBAAmB,EAAG,CAChCgC,EAAK,MAAM,eAAe,KAAK,EAC/BA,EAAK,MAAM,eAAe,QAAQ,EAClCD,EAAK,oBAAoB,wBAAyB,EAAK,EACvDA,EAAK,oBAAoB,uBAAwB,EAAK,EACtD,MACF,CACA,GAAM,CACJ,gBAAA6N,EACA,gBAAAC,CACF,EAAI,KAAK,OAAO,0BAA0B,EAC1C9N,EAAK,oBAAoB,wBAAyB6N,EAAkB,CAAC,EACrE,GAAM,CACJ,YAAAxN,CACF,EAAI1C,EACE8C,EAAeJ,EAAY,yBAAyB,EAC1D,GAAIwN,IAAoB,EAAG,CACzB7N,EAAK,oBAAoB,uBAAwB,EAAK,EACtDC,EAAK,MAAM,YAAY,MAAO,KAAK,EACnCA,EAAK,MAAM,YAAY,SAAU,GAAGQ,CAAY,IAAI,EACpD,MACF,CACAT,EAAK,oBAAoB,uBAAwB8N,CAAe,EAEhE,IAAMC,EADY1N,EAAY,YAAY,EACJA,EAAY,0BAA0B,EAAIA,EAAY,qBAAqB,EAC3G2N,EAAcH,EAAkBE,EACtC9N,EAAK,MAAM,YAAY,MAAO,GAAG,CAAC+N,CAAW,IAAI,EACjD/N,EAAK,MAAM,YAAY,SAAU,GAAGQ,EAAeuN,CAAW,IAAI,CACpE,CACA,gBAAgBC,EAAgB,CAC9B,GAAM,CACJ,YAAA5N,EACA,sBAAA6N,CACF,EAAI,KAAK,MACHC,EAAgBC,GAAe,CACnC,GAAI,CAAC,KAAK,QAAQ,EAChB,OAEF,GAAM,CACJ,WAAAC,EACA,cAAAC,EACA,kBAAAC,EACA,eAAAC,CACF,EAAIC,GAAgB,KAAK,OAAO,CAAC,EAC3BT,EAAcK,EAAaC,EAAgBC,EAAoBC,EAE/DE,EADgBT,EAAe,aACFD,EACnC,GAAII,EAAc,EAAG,CACnB,IAAMO,EAAM,KAAK,MAAM,IAAI,YAAY,EACjCC,EAAc,CAACD,GAAO,CAACA,EAAI,SAASV,CAAc,EAClDY,EAAuBH,GAAc,EAC3C,GAAIE,GAAeC,EAAsB,CACvC,OAAO,WAAW,IAAMV,EAAcC,EAAc,CAAC,EAAG,CAAC,EACzD,MACF,CACF,CACA/N,EAAY,mBAAmB,KAAK,OAAQqO,CAAU,CACxD,EACII,EAAc,GACdC,EACEC,EAAiB,IAAM,CAC3B,IAAMC,EAAW,KAAK,OAAO,mBAAmB,EAC5CA,GAAY,CAACH,GACfI,EAAe,EAEb,CAACD,GAAYH,GACfK,EAAc,CAElB,EACMD,EAAiB,IAAM,CAC3BJ,EAAc,GACdX,EAAc,CAAC,EACf,KAAK,KAAK,oBAAoB,6BAA8B,EAAI,EAChEY,EAAqBb,EAAsB,cAAcD,EAAgB,IAAME,EAAc,CAAC,CAAC,CACjG,EACMgB,EAAgB,IAAM,CAC1BL,EAAc,GACVC,GACFA,EAAmB,EAErB,KAAK,KAAK,oBAAoB,6BAA8B,EAAK,EACjEA,EAAqB,MACvB,EACAC,EAAe,EACf,KAAK,eAAe,IAAMG,EAAc,CAAC,EACzC,KAAK,oBAAoB,KAAK,OAAQ,CACpC,aAAc,IAAML,GAAeX,EAAc,CAAC,CACpD,CAAC,EACD,KAAK,yBAAyB,CAC5B,YAAa,IAAM,CACbW,GACF,OAAO,WAAW,IAAMX,EAAc,CAAC,CAAC,CAE5C,CACF,CAAC,EACD,KAAK,mBAAmBa,CAAc,CACxC,CACA,iBAAkB,CAChB,GAAI,KAAK,SAAU,CACjB,IAAMzE,EAAY,KAAK,cAAc,kBAAkB,EACjD2B,EAAO,KAAK,MAAM,eAAe,wBAAwB,KAAK,MAAM,GAAK,KAC/E,KAAK,KAAK,YAAYkD,GAAkBlD,CAAI,CAAC,EAC7C,KAAK,2BAA2B,OAAQ3B,EAAU,qBAAsB,qBAAqB,CAAC,CAChG,MACE,KAAK,KAAK,YAAY,EACtB,KAAK,2BAA2B,OAAQ,IAAI,CAEhD,CACA,iBAAkB,CAChB,GAAI,KAAK,YAAa,CACpB,IAAMA,EAAY,KAAK,cAAc,kBAAkB,EACvD,KAAK,2BAA2B,OAAQA,EAAU,iBAAkB,oCAAoC,CAAC,CAC3G,MACE,KAAK,2BAA2B,OAAQ,IAAI,CAEhD,CACA,yBAA0B,CACxB,GAAI,KAAK,mBAAqB,CAAC,KAAK,YAAY,oBAAoB,EAAG,CACrE,IAAMA,EAAY,KAAK,cAAc,kBAAkB,EACvD,KAAK,2BAA2B,eAAgBA,EAAU,mBAAoB,iCAAiC,CAAC,CAClH,MACE,KAAK,2BAA2B,eAAgB,IAAI,CAExD,CACA,qBAAsB,CACpB,IAAMA,EAAY,KAAK,cAAc,kBAAkB,EAChC,KAAK,OAAO,eAAe,EAEhD,KAAK,2BAA2B,SAAUA,EAAU,qBAAsB,iBAAiB,CAAC,EAE5F,KAAK,2BAA2B,SAAU,IAAI,CAElD,CACA,2BAA2B8E,EAAUxE,EAAO,CACtCA,GAAS,KACX,KAAK,0BAA0B,IAAIwE,EAAUxE,CAAK,EAElD,KAAK,0BAA0B,OAAOwE,CAAQ,CAElD,CACA,yBAA0B,CACxB,GAAI,CAAC,KAAK,KAAK,SAAS,KAAK,MAAM,IAAI,oBAAoB,CAAC,EAC1D,OAEF,IAAMC,EAAkB,MAAM,KAAK,KAAK,0BAA0B,KAAK,CAAC,EAAE,KAAK,CAAC9K,EAAGC,IAAMD,IAAM,SAAW,GAAKC,EAAE,WAAW,CAAC,EAAID,EAAE,WAAW,CAAC,CAAC,EAAE,IAAI2E,GAAO,KAAK,0BAA0B,IAAIA,CAAG,CAAC,EAAE,KAAK,IAAI,EAC/M,KAAK,MAAM,wBAAwB,cAAcmG,CAAe,CAClE,CACA,aAAc,CACZ,KAAK,gBAAgB,EACrB,KAAK,gBAAgB,EACrB,KAAK,wBAAwB,EAC7B,KAAK,oBAAoB,CAC3B,CACA,wBAAyB,CACvB,IAAMlP,EAAW,IAAM,CACrB,GAAI,CAAC,KAAK,IAAI,IAAI,sBAAsB,EACtC,OAEF,IAAMmP,EAAY,KAAK,MAAM,mBAAmB,UAAU,KAAK,MAAM,EACrE,KAAK,KAAK,oBAAoB,kBAAmBA,CAAS,CAC5D,EACA,KAAK,yBAAyB,CAC5B,mBAAoBnP,CACtB,CAAC,EACDA,EAAS,CACX,CACA,UAAW,CACT,OAAO,KAAK,OAAO,SAAS,CAC9B,CACA,+BAAgC,CAC9B,IAAMA,EAAWmL,GAAK,KAAK,sBAAsBA,EAAE,OAAS,YAAY,EAClEiE,EAAgB,IAAM,KAAK,yBAAyB,sBAAuB,KAAK,MAAM,EACtFC,EAAsB9Q,GAAS,KAAK,4BAA4BA,EAAO,OAAQ,KAAK,MAAM,EAChG,KAAK,oBAAoB,KAAK,OAAO,EAAG,CACtC,WAAYyB,EACZ,WAAYA,EACZ,MAAOoP,EACP,YAAaC,CACf,CAAC,CACH,CACA,sBAAsBC,EAAa,CACjC,KAAK,gBAAgBA,CAAW,EAEhC,IAAM/Q,EAAQ,CACZ,KAFgB+Q,EAAc,wBAA0B,yBAGxD,OAAQ,KAAK,MACf,EACA,KAAK,aAAa,cAAc/Q,CAAK,CACvC,CACA,gBAAgBgR,EAAQ,CACtB,KAAK,KAAK,oBAAoB,mBAAoBA,CAAM,CAC1D,CACA,wBAAwBC,EAAU,CAChC,IAAMvD,EAAa,KAAK,KAAK,oBAAoB,EACjD,OAAIA,aAAsBC,GACjBD,EAAW,wBAAwBuD,CAAQ,EAE7C,KAAK,OAAO,CACrB,CACA,SAAU,CACR,MAAM,QAAQ,EACd,KAAK,iBAAmB,KACxB,KAAK,iBAAmB,KACxB,KAAK,kBAAoB,KACzB,KAAK,gBAAkB,KACvB,KAAK,kBAAoB,KACzB,KAAK,0BAA4B,IACnC,CACF,EAGIC,GAAqB,cAAcnS,CAAS,CAC9C,UAAUC,EAAO,CACf,KAAK,wBAA0BA,EAAM,wBACrC,KAAK,oBAAsBA,EAAM,oBACjC,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,sBAAwBA,EAAM,qBACrC,CACA,YAAYqC,EAAMmI,EAAShG,EAAQ2N,EAAa,CAC9C,MAAM,EACN,KAAK,QAAU3H,EACf,KAAK,KAAOnI,EACZ,KAAK,OAASmC,EACd,KAAK,YAAc2N,CACrB,CACA,eAAgB,CACd,GAAI,CAAC,KAAK,YAAY,YAAY,EAAG,CACnC,KAAK,KAAK,sBAAsB,EAAK,EACrC,MACF,CACA,IAAMpH,EAAyB,KAAK,wBAAwB,aAAa,CACvE,WAAY,KAAK,QACjB,cAAe,KAAK,cAAc,KAAK,IAAI,EAC3C,WAAY,KAAK,WAAW,KAAK,KAAM,EAAK,EAC5C,YAAa,KAAK,WAAW,KAAK,KAAM,EAAI,CAC9C,CAAC,EAED,GADA,KAAK,eAAeA,CAAsB,EACtC,CAAC,KAAK,IAAI,IAAI,kBAAkB,EAAG,CACrC,IAAMC,EAAuB,KAAK,IAAI,IAAI,sBAAsB,EAChE,KAAK,QAAQ,iBAAiB,WAAY,IAAM,CAC9C,IAAMoH,EAAO,CAAC,EACG,KAAK,YAAY,wBAAwB,EACjD,QAAQ9R,GAAU,CACpBA,EAAO,UAAU,EAAE,kBACtB8R,EAAK,KAAK9R,EAAO,SAAS,CAAC,CAE/B,CAAC,EACG8R,EAAK,OAAS,GAChB,KAAK,sBAAsB,aAAa,CACtC,QAASA,EACT,WAAYpH,EACZ,YAAa,KAAK,YAClB,OAAQ,iBACV,CAAC,EAEH,KAAK,uBAAuB,iBAAiB,CAC/C,CAAC,CACH,CACF,CACA,cAAcgB,EAAU,CACtB,IAAMqG,EAAgB,KAAK,iBAAiBrG,CAAQ,EACpD,KAAK,iBAAiBqG,CAAa,EACnC,KAAK,qBAAqB,EAAI,CAChC,CACA,WAAWnL,EAAUqE,EAActE,EAAS,kBAAmB,CAC7D,IAAM0E,EAAyB,KAAK,oBAAoBJ,CAAY,EAC9D2C,EAAQ,KAAK,iBAAmBvC,EACtC,KAAK,6BAA6BuC,EAAOjH,EAAQC,CAAQ,CAC3D,CACA,iBAAiB8E,EAAU,CACzB,IAAMsG,EAAkB,KAAK,mBAAmB,EAC1C5G,EAAmB,KAAK,wBAAwB4G,CAAe,EAC/DC,EAAe,KAAK,uBAAuBD,EAAiB5G,CAAgB,EAC5E8G,EAAsB,CAC1B,gBAAAF,EACA,iBAAA5G,EACA,aAAA6G,CACF,EACIE,EAAa,KAIjB,GAHIzG,IACFyG,EAAa,KAAK,mBAAmB,oBAAoB,KAAK,YAAa,OAAO,GAEhFA,EAAY,CACd,IAAMC,EAAmBD,EAAW,wBAAwB,EACtDE,EAAoBH,EAAoB,kBAAoBE,EAAiB,OAAO9R,GAAOA,EAAI,YAAY,CAAC,EAC5GgS,EAAuBJ,EAAoB,qBAAuB,KAAK,wBAAwBG,CAAiB,EACtHH,EAAoB,iBAAmB,KAAK,uBAAuBG,EAAmBC,CAAoB,CAC5G,MACEJ,EAAoB,kBAAoB,OACxCA,EAAoB,qBAAuB,OAC3CA,EAAoB,iBAAmB,OAEzC,OAAOA,CACT,CACA,iBAAiBH,EAAe,CAC9B,GAAM,CACJ,gBAAAC,EACA,iBAAA5G,EACA,aAAA6G,EACA,kBAAAI,EACA,qBAAAC,EACA,iBAAAC,CACF,EAAIR,EACJ,KAAK,WAAaC,EAClB,KAAK,iBAAmB5G,EACxB,KAAK,aAAe6G,EACpB,KAAK,mBAAqBI,EAC1B,KAAK,yBAA2BC,EAChC,KAAK,qBAAuBC,CAC9B,CACA,kBAAmB,CACjB,KAAK,WAAa,OAClB,KAAK,aAAe,OACpB,KAAK,mBAAqB,OAC1B,KAAK,qBAAuB,MAC9B,CACA,uBAAuB5L,EAAQ,CAC7B,IAAM6L,EAAgB,KAAK,oBAAoB,gCAAgC,KAAK,WAAW,EACzFT,EAAgB,KAAK,iBAAiB,EACxCS,EAAgBT,EAAc,kBAChC,KAAK,cAAcA,EAAeS,EAAe7L,EAAQ,EAAI,CAEjE,CACA,6BAA6B3C,EAAY2C,EAAQC,EAAW,GAAM,CAChE,GAAI,CAAC,KAAK,YAAc,CAAC,KAAK,aAC5B,OAEF,IAAMmL,EAAgB,CACpB,gBAAiB,KAAK,WACtB,iBAAkB,KAAK,iBACvB,aAAc,KAAK,aACnB,kBAAmB,KAAK,oBAAsB,OAC9C,qBAAsB,KAAK,0BAA4B,OACvD,iBAAkB,KAAK,sBAAwB,MACjD,EACA,KAAK,cAAcA,EAAe/N,EAAY2C,EAAQC,CAAQ,CAChE,CACA,cAAcmL,EAAe/N,EAAY2C,EAAQC,EAAW,GAAM,CAChE,GAAM,CACJ,gBAAAoL,EACA,iBAAA5G,EACA,aAAA6G,EACA,kBAAAI,EACA,qBAAAC,EACA,iBAAAC,CACF,EAAIR,EACEU,EAAa,CAAC,EAMpB,GALAA,EAAW,KAAK,CACd,QAAST,EACT,OAAQC,EACR,MAAOjO,CACT,CAAC,EACGqO,EAAmB,CACrB,IAAMK,EAAO1O,EAAaoH,EAC1BqH,EAAW,KAAK,CACd,QAASJ,EACT,OAAQE,EACR,MAAOD,EAAuBI,CAChC,CAAC,CACH,CACA,KAAK,kBAAkB,iBAAiB,CACtC,WAAAD,EACA,SAAA7L,EACA,OAAAD,CACF,CAAC,EACGC,GACF,KAAK,qBAAqB,EAAK,CAEnC,CACA,qBAAqB+E,EAAU,CAC7B,KAAK,KAAK,oBAAoB,qBAAsBA,CAAQ,CAC9D,CACA,oBAAqB,CAEnB,OADiB,KAAK,YAAY,wBAAwB,EAC1C,OAAOrL,GAAOA,EAAI,YAAY,CAAC,CACjD,CACA,wBAAwBuB,EAAS,CAC/B,OAAOA,EAAQ,OAAO,CAACmC,EAAYhE,IAAWgE,EAAahE,EAAO,eAAe,EAAG,CAAC,CACvF,CACA,uBAAuB6B,EAAS8Q,EAAsB,CACpD,OAAO9Q,EAAQ,IAAI7B,GAAUA,EAAO,eAAe,EAAI2S,CAAoB,CAC7E,CAGA,oBAAoB/G,EAAY,CAC9B,IAAIzE,EAASyE,EACb,OAAI,KAAK,IAAI,IAAI,WAAW,EACtB,KAAK,SAAW,SAClBzE,GAAU,IAEH,KAAK,SAAW,UACzBA,GAAU,IAELA,CACT,CACA,SAAU,CACR,MAAM,QAAQ,EACd,KAAK,iBAAiB,CACxB,CACF,EAGIyL,GAAoB,cAAcnT,CAAS,CAC7C,YAAYsC,EAAM8P,EAAa,CAC7B,MAAM,EAEN,KAAK,0BAA4B,CAAC,EAClC,KAAK,YAAcA,EACnB,KAAK,KAAO9P,CACd,CACA,eAAgB,CACd,KAAK,8BAA8B,EACnC,KAAK,oBAAoB,KAAK,YAAa,CACzC,yBAA0B,KAAK,2BAA2B,KAAK,IAAI,CACrE,CAAC,EACD,KAAK,eAAe,EACpB,KAAK,eAAe,KAAK,iCAAiC,KAAK,IAAI,CAAC,CACtE,CACA,+BAAgC,CAC9B,KAAK,iCAAiC,EACtC,IAAM8Q,EAAuB,KAAK,eAAe,KAAK,IAAI,EAC1D,KAAK,YAAY,eAAe,EAAE,QAAQ7S,GAAU,CAClDA,EAAO,iBAAiB,eAAgB6S,CAAoB,EAC5D7S,EAAO,iBAAiB,iBAAkB6S,CAAoB,EAC9D,KAAK,0BAA0B,KAAK,IAAM,CACxC7S,EAAO,oBAAoB,eAAgB6S,CAAoB,EAC/D7S,EAAO,oBAAoB,iBAAkB6S,CAAoB,CACnE,CAAC,CACH,CAAC,CACH,CACA,kCAAmC,CACjC,KAAK,0BAA0B,QAAQ9F,GAAQA,EAAK,CAAC,EACrD,KAAK,0BAA4B,CAAC,CACpC,CACA,4BAA6B,CAC3B,KAAK,8BAA8B,EACnC,KAAK,eAAe,CACtB,CACA,gBAAiB,CACf,IAAMyC,EAAc,KAAK,YAAY,eAAe,EACpD,KAAK,KAAK,SAAS,GAAGA,CAAW,IAAI,EACrC,KAAK,KAAK,oBAAoB,YAAaA,IAAgB,CAAC,CAC9D,CACF,EAGIsD,GAAsB,cAAc7F,EAAuB,CAC7D,YAAY4E,EAAanS,EAAOwN,EAAe,CAC7C,MAAM2E,EAAanS,EAAOwN,CAAa,EACvC,KAAK,wBAA0B,IAAM,CACnC,GAAI,CAAC,KAAK,QAAQ,GAAK,KAAK,iBAAiB,EAC3C,KAAK,iBAAiB,UAElB,CAAC,KAAK,WAAY,CACpB,IAAMlL,EAAO,KAAK,OAAO,EACzB,KAAK,cAAcA,CAAI,CACzB,CAEJ,EACA,KAAK,OAAS6P,CAChB,CACA,QAAQ9P,EAAMC,EAAMkI,EAAS,CAC3B,KAAK,KAAOnI,EACZ,KAAK,OAAOC,CAAI,EAChB,KAAK,YAAc,KAAK,MAAM,kBAAkB,6BAA6B,KAAK,OAAQ,QAAQ,EAClG,KAAK,WAAW,EAChB,KAAK,eAAe,EACpB,KAAK,gBAAgB,EACrB,KAAK,aAAa,EAClB,KAAK,eAAe,IAAM,CACpB,KAAK,iBACP,KAAK,eAAiB,KAAK,YAAY,KAAK,cAAc,EAE9D,CAAC,EACD,KAAK,cAAc,EACnB,KAAK,wBAAwB,EAC7B,IAAMkC,EAAS,KAAK,iBAAiB,EAAE,UAAU,EAC3C6O,EAAW,KAAK,OAAO,uBAAuB,EAAE,eAAe,EACrE,KAAK,kBAAkB,IAAI3F,GAAa2F,EAAU/Q,CAAI,CAAC,EACvD,KAAK,kBAAkB,IAAIqL,GAAe,KAAK,OAAQrL,EAAM,KAAK,KAAK,CAAC,EACxE,KAAK,kBAAkB,IAAI4Q,GAAkB7Q,EAAM,KAAK,MAAM,CAAC,EAC/D,KAAK,cAAgB,KAAK,kBAAkB,IAAI6P,GAAmB7P,EAAMmI,EAAShG,EAAQ,KAAK,MAAM,CAAC,EACtG,KAAK,kBAAkB,IAAIhC,GAAoBF,EAAM,CACnD,2BAA4B,KAAK,2BAA2B,KAAK,IAAI,EACrE,aAAc,IAAG,GACjB,cAAe,KAAK,cAAc,KAAK,IAAI,EAC3C,UAAW,KAAK,UAAU,KAAK,IAAI,CACrC,CAAC,CAAC,EACF,KAAK,2BAA2B,yBAA0B,KAAK,uBAAuB,EACtF,KAAK,kCAAkC,CACzC,CACA,aAAauL,EAAO7B,EAAU,CAC5B,GAAI,CAAC,KAAK,cACR,OAEF,IAAMqG,EAAgB,KAAK,cAAc,iBAAiBrG,CAAQ,EAClE,KAAK,cAAc,cAAcqG,EAAeA,EAAc,iBAAmBxE,EAAO,kBAAmB,EAAI,CACjH,CACA,WAAW/I,EAAY,CACrB,GAAM,CACJ,MAAA9E,EACA,KAAAsC,EACA,OAAAhC,EACA,IAAA4E,EACA,aAAA6D,CACF,EAAI,KACErH,EAAQwD,EAAI,IAAI,WAAW,EAC3BzD,EAASqD,IAAe,EACxBN,EAAS,KAAK,UAAU,EACxB8O,EAAOhR,EAAK,sBAAsB,EAClC2L,EAAOqF,EAAK,KACZpF,EAAQoF,EAAK,MACbvO,EAAY6D,GAAWnH,IAAWC,EAAQuM,EAAO,GAAKA,EAAOC,EAAQ,GAAI1J,EAAQ,GAAMU,EAAK6D,CAAY,EACxGwK,EAAKjT,EAAO,WAAW,EACvBkT,EAAiB,KAAK,aAAa,iBAAiB,EAC1D7O,GAAmB,CACjB,iBAAkB,KAAK,OAAO,eAAe,EAC7C,aAAc,GACd,WAAAG,EACA,UAAAC,EACA,OAAAP,EACA,UAAW,GACX,UAAW,GACX,IAAAU,EACA,YAAalF,EAAM,YACnB,kBAAmBA,EAAM,kBACzB,qBAAsBA,EAAM,kBAC9B,CAAC,EACD,IAAMyT,EAAuBnT,EAAO,wBAAwB,EACtDoT,EAAejS,EAASgS,EAAqB,CAAC,EAAIhT,EAAMgT,CAAoB,EAClF,KAAK,aAAa,gBAAgB,EAAE,iBAAiB,EAAE,oBAAoBC,EAAc,MAAM,EAC3F,CAAC,KAAK,QAAQ,GAAKF,GACrB,KAAK,aAAaD,EAAIjT,EAAQkT,CAAc,CAEhD,CACA,aAAaG,EAASC,EAAqBC,EAAkB,CAC3D,IAAMR,EAAWO,EAAoB,eAAe,EACpD,GAAI,CAACP,EAAS,OACZ,OAEF,IAAM3N,EAAS2N,EAAS,CAAC,EAAE,UAAU,EACrC,GAAI,CAAC3N,EACH,OAEF,IAAMoO,EAAiB,KAAK,iBAAiBpO,EAAQiO,CAAO,EACxDG,GACF,KAAK,aAAa,oBAAoB,CACpC,eAAgBC,EAAAC,EAAA,GACXH,GADW,CAEd,OAAQC,CACV,EACF,CAAC,CAEL,CACA,iBAAiB3B,EAAaoB,EAAI,CAChC,KAAOpB,GAAa,CAClB,GAAIA,EAAY,WAAW,IAAMoB,EAC/B,OAAOpB,EAETA,EAAcA,EAAY,UAAU,CACtC,CACA,OAAO,IACT,CACA,uBAAuBlL,EAAQ,CACxB,KAAK,eAGV,KAAK,cAAc,uBAAuBA,CAAM,CAClD,CACA,eAAgB,CACd,IAAMrC,EAAS,KAAK,IAAI,oBAAoB,CAC1C,YAAa,KAAK,YAClB,YAAa,KAAK,OAClB,YAAaqP,GAAY,CACvB,KAAK,MAAM,YAAY,qBAAqB,KAAK,OAAO,uBAAuB,EAAGA,EAAU,kBAAkB,CAChH,EACA,WAAY,CAAC/G,EAAOsB,IAAyB,CAC3C,KAAK,aAAatB,EAAOsB,CAAoB,CAC/C,CACF,CAAC,EACKL,EAAc,KAAK,qBAAqB,0BAA0BvJ,CAAM,EAC9E,KAAK,KAAK,mBAAmBuJ,CAAW,CAC1C,CACA,yBAA0B,CACxB,IAAM1L,EAAWmL,GAAK,KAAK,sBAAsBA,EAAE,OAAS,YAAY,EAClEiE,EAAgB,IAAM,KAAK,yBAAyB,sBAAuB,KAAK,OAAO,uBAAuB,CAAC,EAC/GC,EAAsB9Q,GAAS,KAAK,4BAA4BA,EAAO,OAAQ,KAAK,OAAO,uBAAuB,CAAC,EACzH,KAAK,oBAAoB,KAAK,OAAO,EAAG,CACtC,WAAYyB,EACZ,WAAYA,EACZ,MAAOoP,EACP,YAAaC,CACf,CAAC,CACH,CACA,sBAAsBC,EAAa,CAEjC,IAAM/Q,EAAQ,CACZ,KAFgB+Q,EAAc,wBAA0B,yBAGxD,OAAQ,KAAK,OAAO,uBAAuB,CAC7C,EACA,KAAK,aAAa,cAAc/Q,CAAK,CACvC,CACA,aAAakM,EAAOsB,EAAsB,CACpC,KAAK,iBACP,KAAK,eAAiB,KAAK,YAAY,KAAK,cAAc,GAE5D,IAAM0F,EAAc,KAAK,OAAO,eAAe,EACzCrF,EAAyB,KAAK,IAAI,IAAI,iBAAiB,IAAM,gBAC7DvM,EAAO,KAAK,KACd,CAACkM,GAAwBK,GAA0B,CAACqF,GAAa,uBACnE1F,EAAuB,IAAM,CAC3B,IAAMM,EAASxM,EAAK,cAAc,uBAAuB,EACzD,OAAKwM,EAGEA,EAAO,YAAcA,EAAO,YAF1B,EAGX,GAEF,IAAMC,EAAc,CAClB,UAAW,IAAM,KAAK,OACtB,OAAQ,IAAMzM,EACd,YAAa,IAAM,cACnB,gBAAiB,IAAM4K,IAAUgH,GAAeA,EAAY,eAC5D,qBAAA1F,CACF,EACI0F,IACFnF,EAAY,UAAY,IAAMmF,GAEhC,KAAK,kBAAkB,IAAIjF,GAAeF,CAAW,CAAC,CACxD,CACA,iBAAkB,CAChB,IAAMoF,EAAmB,KAAK,OAAO,uBAAuB,EAC5D,KAAK,gBAAgB,EACrB,IAAM1R,EAAW,KAAK,gBAAgB,KAAK,IAAI,EAC/C,KAAK,oBAAoB0R,EAAkB,CACzC,gBAAiB1R,EACjB,kBAAmBA,CACrB,CAAC,CACH,CACA,iBAAkB,CAChB,GAAM,CACJ,OAAAnC,CACF,EAAI,KACJ,KAAK,WAAaA,EAAO,aAAa,EACtC,IAAM2T,EAAW3T,EAAO,WAAW,EAC/B,KAAK,WACP,KAAK,KAAK,gBAAgB2T,EAAW,OAAS,OAAO,EAErD,KAAK,KAAK,gBAAgB,MAAM,CAEpC,CACA,UAAW,CACT,OAAO,KAAK,OAAO,YAAY,CACjC,CACA,YAAa,CACX,IAAMC,EAAc,KAAK,OAAO,eAAe,EACzC/E,EAAUC,GAA4B8E,EAAa,KAAK,IAAK,KAAM,KAAK,MAAM,EAChF,KAAK,OAAO,UAAU,GACxB/E,EAAQ,KAAK,+BAA+B,EAC3B,KAAK,OAAO,eAAe,EAC/B,MAAMvO,GAAOA,EAAI,mBAAmB,CAAC,GAChDuO,EAAQ,KAAK,uBAAuB,GAGtCA,EAAQ,KAAK,iCAAiC,EAEhDA,EAAQ,QAAQ7F,GAAK,KAAK,KAAK,oBAAoBA,EAAG,EAAI,CAAC,CAC7D,CACA,gBAAiB,CAEf,IAAM8K,EADsB,KAAK,OAAO,uBAAuB,EACvB,eAAe,EACjD3R,EAAW,IAAM,KAAK,KAAK,oBAAoB,wBAAyB,KAAK,OAAO,SAAS,CAAC,EACpG2R,EAAY,QAAQxT,GAAO,CACzB,KAAK,oBAAoBA,EAAK,CAC5B,cAAe6B,CACjB,CAAC,CACH,CAAC,EACDA,EAAS,CACX,CACA,UAAU,EAAG,CACX,GAAI,CAAC,KAAK,KAAK,SAAS,EAAE,aAAa,EAAG,CACxC,IAAMmM,EAAW,KAAK,YAAY,EAClC,KAAK,MAAM,aAAa,iBAAiBA,EAAU,KAAK,MAAM,CAChE,CACF,CACA,cAAc,EAAG,CACf,MAAM,cAAc,CAAC,EACrB,IAAMyF,EAAkB,KAAK,mBAAmB,EAChD,GAAI,GAAC,KAAK,YAAc,CAACA,IAGrB,EAAE,MAAQjR,EAAQ,MAAO,CAC3B,IAAM9C,EAAS,KAAK,OACdgU,EAAmB,CAAChU,EAAO,WAAW,EAC5C,KAAK,MAAM,YAAY,qBAAqBA,EAAO,uBAAuB,EAAGgU,EAAkB,kBAAkB,CACnH,CACF,CAGA,cAAcC,EAAc,CAK1B,GAJI,CAAC,KAAK,QAAQ,GAAK,KAAK,iBAAiB,IAG7C,KAAK,iBAAiB,EAClB,CAACA,GACH,OAEF,GAAM,CACJ,MAAAvU,EACA,OAAAM,EACA,YAAAiP,EACA,IAAArK,EACA,mBAAAsK,CACF,EAAI,KACE,CACJ,YAAA9M,CACF,EAAI1C,EACEwU,EAAiBlU,EAAO,uBAAuB,EAAE,eAAe,EAClEmP,EAAmB,CAACvK,EAAI,IAAI,+BAA+B,EACzDwK,EAAa,KAAK,WAAa,CACnC,KAAM,EACN,SAAU6E,EACV,mBAAoB,IAAM9E,EAAmB,OAAS,aACtD,aAAcF,EAEd,YAAa,IAAM,KAAK,oBAAoBjP,CAAM,EAClD,cAAe,IAAM,CACnBmP,EAAmB,CAACvK,EAAI,IAAI,+BAA+B,EAC3DsP,EAAe,QAAQ5T,GAAOA,EAAI,UAAU,GAAM,iBAAiB,CAAC,CACtE,EACA,cAAe,IAAM4T,EAAe,QAAQ5T,GAAOA,EAAI,UAAU,GAAO,iBAAiB,CAAC,EAC1F,YAAa+O,GAAY,CACvB,GAAIF,EAAkB,CACpB,IAAMG,EAAkBD,GAAU,SAAS,OAAO/O,GAAO,CAACA,EAAI,UAAU,EAAE,WAAW,GAAK,CAAC,EAC3F8B,EAAY,eAAekN,EAAiB,GAAM,eAAe,CACnE,CACF,EACA,WAAYD,GAAY,CACtB,GAAIF,EAAkB,CACpB,IAAMG,EAAkBD,GAAU,SAAS,OAAO/O,GAAO,CAACA,EAAI,UAAU,EAAE,WAAW,GAAK,CAAC,EAC3F8B,EAAY,eAAekN,EAAiB,GAAO,eAAe,CACpE,CACF,CACF,EACAJ,EAAmB,cAAcE,EAAY,EAAI,CACnD,CAGA,oBAAoByC,EAAa,CAC/B,IAAMsC,EAA0BtC,EAAY,uBAAuB,EAAE,eAAe,EAC9EjJ,EAAe,CAAC,EACtBuL,EAAwB,QAAQnU,GAAU4I,EAAa5I,EAAO,MAAM,CAAC,EAAIA,EAAO,UAAU,CAAC,EAC3F,IAAMoU,EAAyB,CAAC,EAChC,YAAK,MAAM,mBAAmB,WAAW,EAAE,QAAQpU,GAAU,CACvDmU,EAAwB,QAAQnU,CAAM,GAAK,IAC7CoU,EAAuB,KAAKpU,CAAM,EAClCqU,EAAiBF,EAAyBnU,CAAM,EAEpD,CAAC,EACDmU,EAAwB,QAAQnU,GAAUoU,EAAuB,KAAKpU,CAAM,CAAC,EACtE,CACL,QAASoU,EACT,aAAAxL,CACF,CACF,CACA,kBAAmB,CACjB,IAAI0L,EAAwB,GAC5B,YAAK,OAAO,eAAe,EAAE,QAAQtU,GAAU,EACzCA,EAAO,UAAU,EAAE,iBAAmBA,EAAO,UAAU,EAAE,gBAC3DsU,EAAwB,GAE5B,CAAC,EACcA,GAAyB,KAAK,IAAI,IAAI,wBAAwB,CAE/E,CACF,EAGIC,GAAsB,EACtBC,GAAgB,cAAc/U,CAAS,CACzC,YAAY6O,EAAUpK,EAAQoD,EAAM,CAClC,MAAM,EACN,KAAK,WAAaiN,KAClB,KAAK,SAAWjG,EAChB,KAAK,OAASpK,EACd,KAAK,KAAOoD,EACZ,IAAMmN,EAAYnN,GAAQ,QAA6B,6BAA+BA,GAAQ,SAAiC,8BAAgC,uBAC/J,KAAK,eAAiB,iBAAiBmN,CAAS,EAClD,CACA,UAAU/U,EAAO,CACf,KAAK,MAAQA,CACf,CACA,eAAgB,CACd,KAAK,cAAgB,KAAK,IAAI,YAAY,OAAO,EACjD,KAAK,iBAAmB,KAAK,IAAI,IAAI,gBAAgB,CACvD,CACA,eAAgB,CACd,OAAO,KAAK,UACd,CAIA,kBAAmB,CACjB,OAAK,KAAK,KAGH,KAAK,mBAAmB,EAAE,MAAMyK,GAAQA,EAAK,OAAO,GAAK,IAAI,EAF3D,EAGX,CAMA,QAAQpI,EAAM2S,EAAgB,GAAM,CAClC,KAAK,KAAO3S,EACR2S,IACF,KAAK,mBAAmB,EACxB,KAAK,wBAAwB,GAE/B,KAAK,SAAS,EACd,KAAK,kBAAkB,CACzB,CACA,mBAAoB,CAClB,OAAO,KAAK,cACd,CACA,iBAAkB,CAChB,OAAO,KAAK,SAAW,CACzB,CACA,mBAAoB,CAClB,IAAMC,EAAkB,KAAK,mBAAmB,KAAK,IAAI,EACzD,KAAK,yBAAyB,CAC5B,cAAe,KAAK,gBAAgB,KAAK,IAAI,EAC7C,wBAAyB,KAAK,0BAA0B,KAAK,IAAI,EACjE,sBAAuBrQ,GAAU,KAAK,wBAAwBA,EAAO,WAAW,EAChF,0BAA2BqQ,EAC3B,kBAAmBA,EACnB,6BAA8BA,CAChC,CAAC,EACD,KAAK,2BAA2B,YAAa,KAAK,0BAA0B,KAAK,IAAI,CAAC,EACtF,KAAK,2BAA2B,iBAAkBrH,GAAK,KAAK,iBAAmBA,EAAE,YAAY,EAC7F,KAAK,4BAA4B,CAAC,eAAgB,oBAAqB,oBAAqB,yBAA0B,uBAAuB,EAAGqH,CAAe,CACjK,CACA,kBAAkB3U,EAAQ,CACxB,GAAK,KAAK,gBAGV,OAAO4U,GAAQ,KAAK,eAAe,EAAE,KAAKC,GAAYA,EAAS,oBAAoB,IAAM7U,CAAM,CACjG,CACA,2BAA4B,CAC1B,KAAK,cAAgB,KAAK,IAAI,YAAY,OAAO,EACjD,KAAK,wBAAwB,EAC7B,KAAK,SAAS,EACd,KAAK,mBAAmB,CAC1B,CACA,SAAU,CACR,OAAO,KAAK,IACd,CACA,iBAAkB,CAChB,KAAK,SAAS,CAChB,CACA,UAAW,CACT,IAAM4N,EAAQ,KAAK,eAAe,EAClC,KAAK,KAAK,SAAS,GAAGA,CAAK,IAAI,CACjC,CACA,gBAAiB,CACf,GAAM,CACJ,mBAAoB9I,CACtB,EAAI,KAAK,MACT,OAAI,KAAK,cACQ,KAAK,QAAU,KAErB,EAEFA,EAAqB,kBAAkB,OAAO,EAAIA,EAAqB,kBAAkB,MAAM,EAAIA,EAAqB,kBAAkB,IAAI,EAEhJA,EAAqB,kBAAkB,KAAK,MAAM,CAC3D,CACA,oBAAqB,CACnB,GAAM,CACJ,UAAAgQ,EACA,UAAAC,CACF,EAAI,KAAK,gBAAgB,EACzB,KAAK,KAAK,OAAOD,EAAY,IAAI,EACjC,KAAK,KAAK,UAAUC,EAAY,IAAI,CACtC,CACA,iBAAkB,CAChB,GAAM,CACJ,YAAA3S,EACA,cAAA4S,CACF,EAAI,KAAK,MACL5U,EAAiBgC,EAAY,kBAAkB,EAC7C6S,EAAQ,CAAC,EACX5S,EAAmB,EACnB2S,GAAe,mBAAmB,IACpC5U,IACAiC,EAAmB,GAErB,IAAME,EAAcH,EAAY,8BAA8B,EACxDI,EAAeJ,EAAY,yBAAyB,EACpDK,EAAoB,EAAIJ,EACxBK,EAAiBtC,EAAiBqC,EACxC,QAASuD,EAAI,EAAGA,EAAItD,EAAgBsD,IAClCiP,EAAM,KAAK1S,CAAW,EAExB0S,EAAM,KAAKzS,CAAY,EACvB,QAASwD,EAAI,EAAGA,EAAI3D,EAAkB2D,IACpCiP,EAAM,KAAK7S,EAAY,yBAAyB,CAAC,EAEnD,IAAI0S,EAAY,EAChB,QAAS9O,EAAI,EAAGA,EAAI,KAAK,SAAUA,IACjC8O,GAAaG,EAAMjP,CAAC,EAEtB,IAAM+O,EAAYE,EAAM,KAAK,QAAQ,EACrC,MAAO,CACL,UAAAH,EACA,UAAAC,CACF,CACF,CACA,WAAY,CACV,OAAO,KAAK,MACd,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,wBAAwBG,EAAc,GAAO,CAC3C,IAAMC,EAAiB,KAAK,eAAe,EACrCC,EAAa,KAAK,kBAAoB,KAAK,cACjD,KAAK,KAAK,eAAeD,EAAgBC,EAAYF,CAAW,CAClE,CACA,gBAAiB,CACf,IAAMG,EAAW,KAAK,gBACtB,KAAK,gBAAiC,IAAI,IAC1C,IAAMxT,EAAU,KAAK,qBAAqB,EAC1C,QAAWyT,KAASzT,EAClB,KAAK,4BAA4ByT,EAAOD,CAAQ,EAElD,IAAME,EAAwBpL,GAAQ,CACpC,GAAM,CACJ,aAAAqL,EACA,mBAAAC,CACF,EAAI,KAAK,MAET,OADkBD,EAAa,uBAAuBrL,CAAI,EAItCsL,EAAmB,UAAUtL,EAAK,oBAAoB,CAAC,EAFlE,EAIX,EACA,GAAIkL,EACF,OAAW,CAACpC,EAAIyC,CAAO,IAAKL,EACTE,EAAsBG,CAAO,EAE5C,KAAK,gBAAgB,IAAIzC,EAAIyC,CAAO,EAEpC,KAAK,YAAYA,CAAO,EAI9B,OAAO,KAAK,mBAAmB,CACjC,CACA,oBAAqB,CACnB,OAAO,MAAM,KAAK,KAAK,iBAAiB,OAAO,GAAK,CAAC,CAAC,CACxD,CACA,4BAA4BC,EAAcN,EAAU,CAIlD,GAHI,CAAC,KAAK,iBAGNM,EAAa,aAAa,EAC5B,OAEF,IAAMC,EAAYD,EAAa,YAAY,EACvCE,EAUJ,GATIR,IACFQ,EAAaR,EAAS,IAAIO,CAAS,EACnCP,EAAS,OAAOO,CAAS,GAENC,GAAcA,EAAW,oBAAoB,GAAKF,IAErE,KAAK,YAAYE,CAAU,EAC3BA,EAAa,QAEXA,GAAc,KAChB,OAAQ,KAAK,KAAM,CACjB,IAAK,SACH,CACEA,EAAa,KAAK,WAAW,KAAK,MAAM,aAAa,YAAY,mBAAoBF,EAAc,KAAK,MAAO,IAAI,CAAC,EACpH,KACF,CACF,IAAK,QACHE,EAAa,KAAK,WAAW,IAAI/C,GAAoB6C,EAAc,KAAK,MAAO,IAAI,CAAC,EACpF,MACF,QACEE,EAAa,KAAK,WAAW,IAAI7I,GAAe2I,EAAc,KAAK,MAAO,IAAI,CAAC,EAC/E,KACJ,CAEF,KAAK,gBAAgB,IAAIC,EAAWC,CAAU,CAChD,CACA,sBAAuB,CACrB,OAAO,KAAK,cAAgB,KAAK,gCAAgC,EAAI,KAAK,iCAAiC,CAC7G,CACA,iCAAkC,CAChC,GAAI,KAAK,QAAU,KACjB,MAAO,CAAC,EAEV,IAAIC,EAAkB,CAAC,EACjBC,EAAc,KAAK,eAAe,EAClC,CACJ,sBAAAC,CACF,EAAI,KAAK,MACT,OAAC,OAAQ,KAAM,OAAO,EAAE,QAAQ9R,GAAU,CACxC,IAAM+R,EAAQD,EAAsB,mBAAmB9R,EAAQ6R,CAAW,EAC1ED,EAAkBA,EAAgB,OAAOG,CAAK,CAChD,CAAC,EACMH,CACT,CACA,gBAAiB,CACf,OAAO,KAAK,MAAQ,SAAiC,KAAK,SAAW,EAAI,KAAK,QAChF,CACA,kCAAmC,CACjC,OAAO,KAAK,MAAM,sBAAsB,mBAAmB,KAAK,OAAQ,KAAK,eAAe,CAAC,CAC/F,CACA,mBAAmB9V,EAAQ,CACzB,OAAK,KAAK,gBAGO,KAAK,mBAAmB,EACnB,KAAKkW,GAASA,EAAM,oBAAoB,GAAKlW,CAAM,EAHvE,MAKJ,CACA,YAAYA,EAAQU,EAAO,CACzB,IAAMyJ,EAAO,KAAK,mBAAmBnK,CAAM,EAC3C,OAAKmK,EAGWA,EAAK,MAAMzJ,CAAK,EAFvB,EAIX,CACA,SAAU,CACJ,KAAK,iBACP,KAAK,gBAAgB,QAAQyJ,GAAQ,CACnC,KAAK,YAAYA,CAAI,CACvB,CAAC,EAEH,KAAK,gBAAkB,OACvB,MAAM,QAAQ,CAChB,CACF,EAGIgM,GAAyB,cAAc1W,CAAS,CAClD,YAAYyE,EAAQ,CAClB,MAAM,EACN,KAAK,OAAS,GACd,KAAK,sBAAwB,GAC7B,KAAK,eAAiB,CAAC,EACvB,KAAK,OAASA,CAChB,CACA,UAAUxE,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,qBAAuBA,EAAM,qBAClC,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,YAAcA,EAAM,YACzB,KAAK,aAAeA,EAAM,aAC1B,KAAK,cAAgBA,EAAM,aAC7B,CACA,QAAQqC,EAAMC,EAAM,CAClB,KAAK,KAAOD,EACZ,KAAK,UAAYC,EACjB,KAAK,iBAAiB,EACtB,KAAK,iBAAiB,EACtB,KAAK,iBAAiB,KAAK,SAAS,EACpC,IAAMoU,EAAyB,KAAK,0BAA0B,KAAK,IAAI,EACvE,KAAK,yBAAyB,CAC5B,mBAAoB,KAAK,qBAAqB,KAAK,IAAI,EACvD,wBAAyBA,EACzB,6BAA8BA,CAChC,CAAC,EACD,KAAK,aAAa,wBAAwB,KAAM,KAAK,MAAM,EACvD,KAAK,YAAY,QAAQ,GAC3B,KAAK,QAAQ,CAEjB,CACA,aAAc,CACZ,IAAMC,EAAM,CAAC,GAAG,KAAK,cAAc,EACnC,OAAI,KAAK,gBACPA,EAAI,KAAK,KAAK,cAAc,EAE1B,KAAK,gBACPA,EAAI,KAAK,KAAK,cAAc,EAEvBA,CACT,CACA,QAAQC,EAAc,GAAO,CAC3B,IAAMC,EAAW,IAAIC,GACfC,EAAwB,KAAK,aAAa,gCAAgC,EAC1EC,EAAsB,IAAM,CAChC,IAAMC,EAAgB,KAAK,YAAY,kBAAkB,EAAI,EAC7D,KAAK,eAAiB,KAAK,aAAa,KAAK,cAAc,EAC3D,QAAS3Q,EAAI,EAAGA,EAAI2Q,EAAe3Q,IAAK,CACtC,IAAMmE,EAAO,KAAK,WAAW,IAAIqK,GAAc+B,EAAS,KAAK,EAAG,KAAK,OAAQ,OAA0B,CAAC,EACxG,KAAK,eAAe,KAAKpM,CAAI,CAC/B,CACF,EACMyM,EAAiB,IAAM,CAC3B,IAAMtI,EAAWiI,EAAS,KAAK,EACzBM,EAAkB,CAAC,KAAK,SAAW,KAAK,gBAAkB,MAAQ,CAACP,GAAe,KAAK,eAAe,YAAY,IAAMhI,IAChGuI,GAAmB,KAAK,UAEpD,KAAK,eAAiB,KAAK,YAAY,KAAK,cAAc,GAExDA,IACF,KAAK,eAAiB,KAAK,WAAW,IAAIrC,GAAclG,EAAU,KAAK,OAAQ,QAAqB,CAAC,EAEzG,EACMwI,EAAiB,IAAM,CAC3B,KAAK,sBAAwB,CAAC,CAAC,KAAK,eAAe,mBAAmB,GAAK,CAAC,KAAK,OACjF,IAAMC,EAAsB,IAAM,CAChC,KAAK,eAAiB,KAAK,YAAY,KAAK,cAAc,CAC5D,EACA,GAAI,CAAC,KAAK,sBAAuB,CAC/BA,EAAoB,EACpB,MACF,CACA,IAAMzI,EAAWiI,EAAS,KAAK,EAC/B,GAAI,KAAK,eAAgB,CACvB,IAAMS,EAAmB,KAAK,eAAe,YAAY,IAAM1I,GAC3D,CAACgI,GAAeU,IAClBD,EAAoB,CAExB,CACK,KAAK,iBACR,KAAK,eAAiB,KAAK,WAAW,IAAIvC,GAAclG,EAAU,KAAK,OAAQ,QAA8B,CAAC,EAElH,EACAoI,EAAoB,EACpBE,EAAe,EACfE,EAAe,EACf,IAAM7W,EAAW,KAAK,YAAY,EAClC,KAAK,KAAK,SAASA,CAAQ,EAC3B,KAAK,qBAAqBwW,CAAqB,CACjD,CACA,uBAAuBzW,EAAQ,CAC7B,GAAIiX,GAASjX,CAAM,EACjB,OAAK,KAAK,eAGH,KAAK,eAAe,kBAAkBA,CAAM,EAFjD,OAIJ,GAAI,KAAK,eAAe,SAAW,EAGnC,QAASgG,EAAI,EAAGA,EAAI,KAAK,eAAe,OAAQA,IAAK,CACnD,IAAMmE,EAAO,KAAK,eAAenE,CAAC,EAAE,kBAAkBhG,CAAM,EAC5D,GAAImK,EACF,OAAOA,CAEX,CACF,CACA,8BAA8BnK,EAAQ,CACpC,IAAM6U,EAAW,KAAK,uBAAuB7U,CAAM,EACnD,OAAK6U,EAGEA,EAAS,OAAO,EAFd,IAGX,CACA,WAAWvG,EAAU,CAEnB,IAAMnE,EADW,KAAK,YAAY,EACZmE,CAAQ,EAC9B,OAAOnE,EAAOA,EAAK,QAAQ,EAAI,MACjC,CACA,YAAYmE,EAAUtO,EAAQU,EAAO,CAEnC,IAAMyJ,EADW,KAAK,YAAY,EACZmE,CAAQ,EAC9B,OAAKnE,EAGEA,EAAK,YAAYnK,EAAQU,CAAK,EAF5B,EAGX,CACA,aAAc,CACZ,OAAO,KAAK,SACd,CACA,aAAc,CACZ,OAAO,KAAK,eAAe,QAAU,KAAK,eAAiB,EAAI,IAAM,KAAK,eAAiB,EAAI,EACjG,CACA,oBAAoBwW,EAAQ,CAC1B,KAAK,KAAK,sBAAsBA,CAAM,CACxC,CACA,SAAU,CACJ,KAAK,iBACP,KAAK,eAAiB,KAAK,YAAY,KAAK,cAAc,GAExD,KAAK,iBACP,KAAK,eAAiB,KAAK,YAAY,KAAK,cAAc,GAExD,KAAK,gBAAkB,KAAK,eAAe,SAC7C,KAAK,eAAiB,KAAK,aAAa,KAAK,cAAc,GAE7D,MAAM,QAAQ,CAChB,CACA,iBAAiBC,EAAe,CAC9B,IAAMC,EAAiB,IAAIrN,GAAe,KAAK,OAAQoN,CAAa,EACpE,KAAK,kBAAkBC,CAAc,CACvC,CACA,qBAAqBC,EAAU,CAC7B,GAAI,CAACA,EACH,OAEF,GAAM,CACJ,OAAArX,CACF,EAAIqX,EACArX,EAAO,UAAU,GAAK,KAAK,QAG/B,KAAK,aAAa,oBAAoB,CACpC,eAAgBqX,CAClB,CAAC,CACH,CAGA,sBAAuB,CACrB,KAAK,QAAQ,EAAI,CACnB,CACA,2BAA4B,CAC1B,IAAMC,EAAwB,KAAK,eAAe,mBAAmB,GAAK,CAAC,KAAK,OAC5E,KAAK,wBAA0BA,GACjC,KAAK,QAAQ,EAAI,CAErB,CACA,kBAAmB,CACb,KAAK,QAAU,MAGnB,KAAK,kBAAkB,IAAI7T,GAAmBmK,GAAS,KAAK,KAAK,eAAe,GAAGA,CAAK,IAAI,EAAG,EAAI,CAAC,CACtG,CACA,kBAAmB,CACjB,GAAI,KAAK,QAAU,KACjB,OAEF,IAAM2J,EAAc,KAAK,SAAW,OAC9BzL,EAAe,KAAK,SAAW,QACrC,KAAK,OAAS,GACd,IAAM3J,EAAW,IAAM,CACrB,IAAMyL,EAAQ2J,EAAc,KAAK,mBAAmB,mBAAmB,EAAI,KAAK,mBAAmB,oBAAoB,EACvH,GAAI3J,GAAS,KACX,OAEF,IAAM4J,EAAS5J,GAAS,EAClB6J,EAAgB,KAAK,SAAWD,EAChCpW,EAAQ,KAAK,IAAI,IAAI,WAAW,EAChCsW,EAAiB,KAAK,IAAI,kBAAkB,EAE5CC,EADyB,KAAK,qBAAqB,wBAAwB,IAAMvW,GAASmW,GAAe,CAACnW,GAAS0K,GACvE8B,EAAQ8J,EAAiB9J,EAC3E,KAAK,KAAK,wBAAwB,GAAG+J,CAAgB,IAAI,EACzD,KAAK,KAAK,aAAa,CAACH,CAAM,EAC1BC,IACF,KAAK,OAASD,EACd,KAAK,QAAQ,EAEjB,EACA,KAAK,yBAAyB,CAC5B,uBAAwBrV,EACxB,wBAAyBA,EACzB,wBAAyBA,EACzB,sBAAuBA,CACzB,CAAC,CACH,CACF,EAGIyV,GACJ,4DACIC,GACJ,6DACIC,GACJ;AAAA;AAAA,YAGIC,GAAyB,cAAcC,CAAU,CACnD,YAAY9T,EAAQ,CAClB,MAAM,EACN,KAAK,iBAAmB+T,EACxB,KAAK,eAAiB,CAAC,EACvB,KAAK,aAAe,CAAC,EACrB,KAAK,OAAS/T,CAChB,CACA,eAAgB,CACd,KAAK,qBAAqB,EAC1B,IAAMgU,EAAY,CAChB,aAAcC,GAAa,KAAK,aAAaA,CAAS,EACtD,SAAUC,GAAS,KAAK,SAASA,CAAK,EAEtC,eAAgBxK,GAAS,KAAK,iBAAiB,MAAM,MAAQA,EAC7D,sBAAuBD,GAAQ,KAAK,OAAO,EAAE,WAAaA,EAE1D,wBAAyBC,GAAS,CAChC,IAAM5L,EAAO,KAAK,OAAO,EACzBA,EAAK,MAAM,MAAQ4L,EACnB5L,EAAK,MAAM,SAAW4L,EACtB5L,EAAK,MAAM,SAAW4L,CACxB,CACF,EACa,KAAK,kBAAkB,IAAIuI,GAAuB,KAAK,MAAM,CAAC,EACtE,QAAQ+B,EAAW,KAAK,OAAO,CAAC,CACvC,CACA,sBAAuB,CACrB,IAAMG,EAAa,KAAK,QAAU,OAC5BC,EAAc,KAAK,QAAU,QAC7BC,EAAWF,EAAaT,GAAuBU,EAAcT,GAAwBC,GAC3F,KAAK,YAAYS,CAAQ,EACzB,KAAK,cAAgB,KAAK,mBAAqBN,EAAiB,KAAK,iBAAmB,KAAK,OAAO,CACtG,CACA,SAAU,CACR,KAAK,SAAS,CAAC,CAAC,EAChB,MAAM,QAAQ,CAChB,CACA,eAAeO,EAAS,CACtB,KAAK,YAAYA,CAAO,EACxB,KAAK,cAAc,YAAYA,EAAQ,OAAO,CAAC,CACjD,CACA,SAASJ,EAAO,CACd,IAAMK,EAAc,KAAK,eACzB,KAAK,eAAiB,CAAC,EACvB,KAAK,aAAe,CAAC,EACrB,IAAIC,EACEC,EAAyBH,GAAW,CACxC,IAAMxW,EAAOwW,EAAQ,OAAO,EACPxW,EAAK,eAAiB,KAAK,eAE9C,KAAK,cAAc,YAAYA,CAAI,EAEjC0W,GACFE,GAAgB,KAAK,cAAe5W,EAAM0W,CAAO,EAEnDA,EAAU1W,CACZ,EACAoW,EAAM,QAAQjO,GAAQ,CACpB,IAAM0O,EAAS1O,EAAK,cAAc,EAC5B2O,EAAeL,EAAYI,CAAM,EACvC,OAAOJ,EAAYI,CAAM,EACzB,IAAML,EAAUM,GAA8B,KAAK,WAAW,IAAIC,GAAc5O,CAAI,CAAC,EACrF,KAAK,eAAe0O,CAAM,EAAIL,EAC9B,KAAK,aAAa,KAAKA,CAAO,EAC9BG,EAAuBH,CAAO,CAChC,CAAC,EACDQ,GAAsBP,CAAW,EAAE,QAAQzP,GAAK,KAAK,eAAeA,CAAC,CAAC,CACxE,CACF,EAGIiQ,GAAiB,cAAcjB,CAAU,CAC3C,aAAc,CACZ,MACA,8CAA8C,CAChD,CACA,eAAgB,CACd,IAAME,EAAY,CAChB,oBAAqB,CAACgB,EAAcC,IAAO,KAAK,oBAAoBD,EAAcC,CAAE,EACpF,sBAAuBC,GAAU,CAC/B,KAAK,OAAO,EAAE,MAAM,OAASA,EAC7B,KAAK,OAAO,EAAE,MAAM,UAAYA,CAClC,CACF,EACa,KAAK,kBAAkB,IAAItX,EAAgB,EACnD,QAAQoW,EAAW,KAAK,OAAO,EAAG,KAAK,oBAAoB,CAAC,EACjE,IAAMmB,EAAeC,GAAa,CAChC,KAAK,kBAAkBA,CAAS,EAChC,KAAK,YAAYA,CAAS,CAC5B,EACAD,EAAa,IAAItB,GAAuB,MAAM,CAAC,EAC/CsB,EAAa,IAAItB,GAAuB,IAAI,CAAC,EAC7CsB,EAAa,IAAItB,GAAuB,OAAO,CAAC,CAClD,CACF,EACIwB,GAAqB,CACvB,SAAU,iBACV,UAAWN,EACb,EASA,IAAIO,GAAgB,cAAcC,CAAS,CACzC,YAAYC,EAAM,CAChB,MAAM,EACN,KAAK,KAAOA,CACd,CACA,eAAgB,CACd,KAAK,2BAA2B,YAAa,KAAK,oBAAoB,KAAK,IAAI,CAAC,EAChF,KAAK,oBAAoB,CAC3B,CACA,qBAAsB,CACpB,IAAMC,EAAY,KAAK,aAAa,EAC9BC,EAAS,CACb,WAAYD,IAAc,aAC1B,OAAQA,IAAc,SACtB,MAAOA,IAAc,OACvB,EACME,EAAWD,EAAO,WAAa,wBAA4CA,EAAO,MAAQ,kBAAgC,mBAChI,KAAK,KAAK,oBAAoBC,EAAUD,CAAM,CAChD,CAEA,cAAe,CACb,IAAMD,EAAY,KAAK,IAAI,IAAI,WAAW,GAAK,SAE/C,MADqB,CAAC,SAAU,QAAS,YAAY,EACpC,QAAQA,CAAS,IAAM,IACtCG,EAAU,GAAGH,CAAS,iFAAiF,EAChG,UAEFA,CACT,CACF,EAGII,GAA0B,cAAcC,CAAU,CACpD,aAAc,CACZ,MACA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKe,EACf,KAAK,gBAAkBC,EACvB,KAAK,cAAgB,KACrB,KAAK,cAAgB,KACrB,KAAK,0BAA4B,KACjC,KAAK,6BAA+B,IACtC,CACA,UAAUC,EAAO,CACf,KAAK,eAAiBA,EAAM,cAC9B,CACA,oBAAoBL,EAAUD,EAAQ,CACpC,IAAMO,EAA0B,KAAK,gBAAgB,UACrDA,EAAwB,OAAO,wBAA2CP,EAAO,UAAU,EAC3FO,EAAwB,OAAO,mBAAiCP,EAAO,MAAM,EAC7EO,EAAwB,OAAO,kBAA+BP,EAAO,KAAK,CAC5E,CACA,eAAgB,CACd,KAAK,kBAAkB,IAAIJ,GAAc,IAAI,CAAC,EAC9C,KAAK,aAAa,GAAO,CACvB,eAAgB,EAClB,CAAC,EACD,KAAK,eAAe,2BAA2B,IAAI,CACrD,CACA,oBAAoBY,EAAwB,CAC1C,IAAMD,EAA0B,KAAK,gBAAgB,UACjD,KAAK,8BACPA,EAAwB,OAAO,KAAK,6BAA8B,EAAK,EAEzE,KAAK,6BAA+BC,EACpCD,EAAwB,OAAOC,EAAwB,EAAI,CAC7D,CACA,YAAYC,EAAyBD,EAAwBE,EAAY,CACvE,KAAK,oBAAoBF,CAAsB,EAC/C,KAAK,qBAAqB,EAC1B,KAAK,cAAgBC,EACrBA,GAAyB,KAAKE,GAAQ,CACpC,GAAI,KAAK,gBAAkBF,EAAyB,CAC9C,KAAK,gBAAkBE,IACzB,KAAK,YAAYA,CAAI,EACrBA,EAAO,MAET,MACF,CAEA,GADA,KAAK,cAAgB,KACjB,EAACA,GAGD,KAAK,eAAiBA,IAG1B,KAAK,gBAAgB,YAAYA,EAAK,OAAO,CAAC,EAC9C,KAAK,cAAgBA,EACjBD,GAAY,CACd,IAAME,EAAYD,EAClB,KAAK,0BAA4B,KAAK,2BAA2BD,EAAY,CAAC,CAC5E,aAAAG,CACF,IAAM,CACJD,EAAU,UAAU,KAAK,IAAI,oBAAoBE,EAAA,GAC3CD,GAAgB,CAAC,EACtB,CAAC,CACJ,CAAC,CACH,CACF,CAAC,EACD,KAAK,aAAa,GAAM,CACtB,eAAgB,EAClB,CAAC,CACH,CACA,sBAAuB,CACrB,KAAK,cAAgB,KACrB,IAAME,EAAgB,KAAK,cAC3B,GAAI,CAACA,EACH,OAEF,KAAK,cAAgB,KACrB,IAAMC,EAA4B,KAAK,0BACnCA,IACFA,EAA0B,EAC1B,KAAK,0BAA4B,MAEnC,KAAK,YAAYD,CAAa,EAC9BE,EAAc,KAAK,eAAe,CACpC,CACA,aAAc,CACZ,KAAK,qBAAqB,EAC1B,KAAK,aAAa,GAAO,CACvB,eAAgB,EAClB,CAAC,CACH,CACA,SAAU,CACR,KAAK,qBAAqB,EAC1B,MAAM,QAAQ,CAChB,CACF,EACIC,GAAyB,CAC3B,SAAU,qBACV,UAAWf,EACb,EAGIgB,GAAyB,cAAcf,CAAU,CACnD,YAAYgB,EAAUC,EAAW,CAC/B,MAAM,EACN,KAAK,UAAYA,EACjB,KAAK,UAAYhB,EACjB,KAAK,WAAaA,EAClB,KAAK,YAAc,KACnB,KAAK,YAAYe,CAAQ,CAC3B,CACA,UAAUd,EAAO,CACf,KAAK,sBAAwBA,EAAM,qBACrC,CACA,eAAgB,CACd,KAAK,yBAAyB,CAC5B,wBAAyB,KAAK,0BAA0B,KAAK,IAAI,CACnE,CAAC,EACD,KAAK,0BAA0B,EAC/B,KAAK,oBAAoB,qBAAsBgB,GAAkB,GAAKC,GAAgB,CAAC,CACzF,CACA,8BAA+B,CACzB,KAAK,qBAAuB,SAGhC,KAAK,mBAAqBC,GAAsB,EAC5C,KAAK,qBACP,KAAK,mCAAmC,EACxC,KAAK,yBAAyB,GAElC,CACA,0BAA2B,CACzB,IAAMC,EAAO,KAAK,OAAO,EACnBC,EAAa,IAAM,KAAK,oBAAoB,sBAAuB,EAAI,EACvEC,EAAe,IAAM,KAAK,oBAAoB,sBAAuB,EAAK,EAChF,KAAK,oBAAoBF,EAAM,CAC7B,WAAYC,EACZ,UAAWA,EACX,WAAYA,EACZ,WAAYC,EACZ,SAAUA,CACZ,CAAC,CACH,CACA,2BAA4B,CACtB,KAAK,qBAAuB,QAC9B,KAAK,6BAA6B,EAEpC,KAAK,sBAAsB,sBAAsB,IAAM,KAAK,iBAAiB,CAAC,CAChF,CACA,oCAAqC,CACnC,KAAK,yBAAyB,CAC5B,WAAY3B,GAAU,CAChBA,EAAO,YAAc,KAAK,YACxB,KAAK,cAAgB,OACvB,OAAO,aAAa,KAAK,WAAW,EACpC,KAAK,YAAc,MAErB,KAAK,oBAAoB,yBAA0B,EAAI,EAE3D,EACA,cAAe,IAAM,CACnB,KAAK,YAAc,OAAO,WAAW,IAAM,CACzC,KAAK,oBAAoB,yBAA0B,EAAK,EACxD,KAAK,YAAc,IACrB,EAAG,GAAG,CACR,CACF,CAAC,CACH,CACA,6BAA6B4B,EAAO,CAClC,IAAMC,EAAW,KAAK,YAAY,EAClCC,GAAW,IAAMC,GAAWF,CAAQ,EAAG,IAAM,KAAK,kBAAkBD,CAAK,EAAG,GAAG,CACjF,CACA,aAAc,CACZ,OAAO,KAAK,SACd,CACA,cAAe,CACb,OAAO,KAAK,UACd,CACA,iBAAiBI,EAAI,CACnB,KAAK,2BAA2B,KAAK,YAAY,EAAG,CAClD,OAAQA,CACV,CAAC,CACH,CACF,EAGIC,GAAkB,cAAcd,EAAuB,CACzD,aAAc,CACZ,MACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMa,YAAY,EACzB,KAAK,YAAcd,EACnB,KAAK,aAAeA,CACtB,CACA,UAAUC,EAAO,CACf,MAAM,UAAUA,CAAK,EACrB,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,eAAiBA,EAAM,eAC5B,KAAK,aAAeA,EAAM,aAC1B,KAAK,qBAAuBA,EAAM,oBACpC,CACA,eAAgB,CACd,MAAM,cAAc,EACpB,IAAM4B,EAAuB,KAAK,2BAA2B,KAAK,IAAI,EACtE,KAAK,yBAAyB,CAC5B,wBAAyBA,EACzB,6BAA8BA,EAC9B,qBAAsB,KAAK,uBAAuB,KAAK,IAAI,CAC7D,CAAC,EACD,KAAK,2BAA2B,YAAaA,CAAoB,EACjE,KAAK,aAAa,SAAS,kBAAmB,IAAI,EAClD,KAAK,kBAAkB,IAAIC,GAAmBC,GAAS,KAAK,WAAW,MAAM,MAAQ,GAAGA,CAAK,IAAI,CAAC,EAClG,KAAK,4BAA4B,CAAC,0BAA0B,EAAG,KAAK,0BAA0B,KAAK,IAAI,CAAC,CAC1G,CACA,8BAA+B,CACzB,KAAK,qBAAuB,SAGhC,KAAK,UAAY,KAAK,IAAI,IAAI,WAAW,EACzC,MAAM,6BAA6B,EAC/B,KAAK,oBACP,KAAK,kBAAkB,EAE3B,CACA,wBAAyB,CACvB,KAAK,kBAAkB,CACzB,CACA,mBAAoB,CAClB,GAAI,CAAC,KAAK,mBACR,OAEF,IAAMC,EAAqB,KAAK,eAAe,2BAA2B,EAC1E,KAAK,OAAO,EAAE,MAAM,OAAS,GAAGA,CAAkB,IACpD,CACA,2BAA4B,CAC1B,MAAM,0BAA0B,EAChC,KAAK,2BAA2B,CAClC,CACA,4BAA6B,CAC3B,IAAMC,EAAiB,KAAK,qBAAqB,wBAAwB,EACrEC,EAAe,KAAK,mBAAmB,8BAA8B,EACnEC,EAAgB,CAAC,KAAK,WAAaF,EACnCG,EAAiB,KAAK,IAAI,kBAAkB,EAC9CD,IACFD,GAAgBE,GAElBC,GAAe,KAAK,aAAcH,CAAY,EAC9C,KAAK,aAAa,UAAU,OAAO,qBAAsBA,GAAgBE,CAAc,EACvF,IAAIE,EAAc,KAAK,mBAAmB,iBAAiB,EACtC,KAAK,WAAaL,IAErCK,GAAeF,GAEjBC,GAAe,KAAK,YAAaC,CAAW,EAC5C,KAAK,YAAY,UAAU,OAAO,qBAAsBA,GAAeF,CAAc,CACvF,CACA,kBAAmB,CACjB,IAAMG,EAAiB,KAAK,qBAAqB,0BAA0B,EACrEC,EAAsB,KAAK,mBAC3BC,EAA6B,KAAK,IAAI,IAAI,0BAA0B,EACpEL,EAAiBG,GAAiB,KAAK,IAAI,kBAAkB,GAAK,EAElEG,EAAuBD,EAAsD,EADpDL,IAAmB,GAAKI,EAAsB,GAAKJ,EAElF,KAAK,oBAAoB,yBAA0BI,CAAmB,EACtEG,GAAgB,KAAK,OAAO,EAAGD,CAAmB,EAClDC,GAAgB,KAAK,UAAWD,CAAmB,EACnDC,GAAgB,KAAK,WAAYD,CAAmB,EACpD,KAAK,aAAaH,EAAgB,CAChC,eAAgB,EAClB,CAAC,CACH,CACA,mBAAoB,CAClB,OAAOK,GAAe,KAAK,YAAY,EAAG,KAAK,SAAS,CAC1D,CACA,kBAAkBrB,EAAO,CAClBG,GAAW,KAAK,YAAY,CAAC,GAChC,KAAK,6BAA6BH,CAAK,EAEzCsB,GAAe,KAAK,YAAY,EAAGtB,EAAO,KAAK,SAAS,CAC1D,CACF,EACIuB,GAAsB,CACxB,SAAU,4BACV,UAAWlB,EACb,EAGImB,GAAmB,cAAcvD,CAAS,CAC5C,UAAUS,EAAO,CACf,KAAK,mBAAqBA,EAAM,yBAClC,CACA,YAAY+C,EAAYC,EAAW,CACjC,MAAM,EACN,KAAK,WAAaD,EAClB,KAAK,UAAYC,CACnB,CACA,eAAgB,CACd,KAAK,yBAAyB,CAC5B,0BAA2B,KAAK,gBAAgB,KAAK,IAAI,CAC3D,CAAC,CACH,CACA,iBAAkB,CAChB,IAAMC,EAAS,KAAK,mBAAmB,qBAAqB,EACtDC,EAAeD,GAAU,KAAO,GAAGA,CAAM,KAAO,GACtD,KAAK,WAAW,MAAM,OAASC,EAC3B,KAAK,YACP,KAAK,UAAU,MAAM,OAASA,EAElC,CACF,EAGIC,GAAkB,cAActC,EAAuB,CACzD,UAAUb,EAAO,CACf,MAAM,UAAUA,CAAK,EACrB,KAAK,aAAeA,EAAM,aAC1B,KAAK,qBAAuBA,EAAM,oBACpC,CACA,aAAc,CACZ,MACA;AAAA;AAAA;AAAA;AAAA,gBAIa,UAAU,CACzB,CACA,eAAgB,CACd,MAAM,cAAc,EACpB,KAAK,kBAAkB,IAAI8C,GAAiB,KAAK,UAAU,CAAC,EAC5D,KAAK,aAAa,SAAS,kBAAmB,IAAI,EAClD,KAAK,yBAAyB,CAC5B,0BAA2B,KAAK,4BAA4B,KAAK,IAAI,CACvE,CAAC,CACH,CACA,kBAAmB,CACjB,IAAMd,EAAiB,KAAK,qBAAqB,wBAAwB,EACnEO,EAAsB,KAAK,mBAC3BJ,EAAiBH,GAAiB,KAAK,IAAI,kBAAkB,GAAK,EAClEoB,EAAyBjB,IAAmB,GAAKI,EAAsB,GAAKJ,EAClF,KAAK,oBAAoB,yBAA0BI,CAAmB,EACtEH,GAAe,KAAK,OAAO,EAAGgB,CAAsB,EACpDhB,GAAe,KAAK,UAAWgB,CAAsB,EACrDhB,GAAe,KAAK,WAAYgB,CAAsB,EACtD,KAAK,aAAapB,EAAgB,CAChC,eAAgB,EAClB,CAAC,CACH,CACA,6BAA8B,CAC5B,GAAM,CACJ,aAAAqB,CACF,EAAI,KAEEC,EADeD,EAAa,gBAAgB,EACV,uBAAuB,EACzDE,EAAqB,KAAK,kBAAkB,EAC5CC,EAA4BF,EAAmB,UACjDC,GAAsBC,GACxB,KAAK,kBAAkBA,EAA2B,EAAI,CAE1D,CACA,mBAAoB,CAClB,OAAO,KAAK,YAAY,EAAE,SAC5B,CACA,kBAAkBlC,EAAOmC,EAAO,CAC1B,CAACA,GAAS,CAAChC,GAAW,KAAK,YAAY,CAAC,GAC1C,KAAK,6BAA6BH,CAAK,EAEzC,KAAK,YAAY,EAAE,UAAYA,CACjC,CACF,EACIoC,GAAsB,CACxB,SAAU,0BACV,UAAWP,EACb,EAGIQ,GAAwB,cAAcpE,CAAS,CACjD,YAAYqE,EAAe,CACzB,MAAM,EACN,KAAK,iBAAmB,CAAC,KAAM,IAAI,EACnC,KAAK,WAAa,GAClB,KAAK,cAAgB,GACrB,KAAK,UAAY,GAGjB,KAAK,iBAAmB,GACxB,KAAK,cAAgB,GACrB,KAAK,cAAgBA,EACrB,KAAK,0BAA4BC,EAAU,IAAM,KAAK,iBAAiB,CAAkB,EAAI,KAAM,GAAG,EACtG,KAAK,0BAA4BA,EAAU,IAAM,KAAK,iBAAiB,CAAgB,EAAI,KAAM,GAAG,CACtG,CACA,UAAU7D,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,SAAWA,EAAM,SACtB,KAAK,aAAeA,EAAM,0BAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,YAAcA,EAAM,YACzB,KAAK,mBAAqBA,EAAM,kBAClC,CACA,eAAgB,CACd,KAAK,UAAY,KAAK,IAAI,IAAI,WAAW,EACzC,KAAK,yBAAyB,CAC5B,6BAA8B,KAAK,+BAA+B,KAAK,IAAI,CAC7E,CAAC,EACD,KAAK,aAAa,UAAU8D,GAAK,CAC/B,KAAK,eAAiBA,EAAE,OACxB,KAAK,+BAA+B,EACpC,KAAK,kBAAkB,CACzB,CAAC,CACH,CACA,mBAAoB,CAClB,GAAM,CACJ,gBAAAC,EACA,gBAAAC,CACF,EAAI,KAAK,aAAa,UAAU,EAChC,KAAK,2BAA2B,KAAK,eAAe,mBAAmB,EAAG,CACxE,OAAQ,KAAK,UAAU,KAAK,IAAI,CAClC,CAAC,EACDD,EAAgB,iBAAiB,KAAK,cAAc,KAAK,IAAI,CAAC,EAC9D,IAAME,EAAa,KAAK,IAAI,IAAI,2BAA2B,EACrDC,EAAYD,EAAaJ,EAAU,KAAK,UAAU,KAAK,IAAI,EAAG,GAAG,EAAI,KAAK,UAAU,KAAK,IAAI,EAC7FM,EAAgBF,EAAaJ,EAAU,KAAK,cAAc,KAAK,IAAI,EAAG,GAAG,EAAI,KAAK,cAAc,KAAK,IAAI,EAC/G,KAAK,2BAA2B,KAAK,cAAe,CAClD,OAAQK,CACV,CAAC,EACDF,EAAgB,iBAAiBG,CAAa,CAChD,CACA,gCAAiC,CAC3B,KAAK,WACP,KAAK,gDAAgD,CAEzD,CACA,gDAAgDC,EAAY,CAE1D,GAD0B,KAAK,gBAAkB,KAE/C,OAEEA,IAAe,SACjBA,EAAa,KAAK,eAAe,4BAA4B,GAE/D,IAAMC,EAAS,KAAK,UAAYD,EAAa,CAACA,EACxC,CACJ,UAAAE,EACA,gBAAAC,EACA,mBAAAC,EACA,aAAAC,EACA,aAAAC,EACA,gBAAAX,CACF,EAAI,KAAK,aAAa,UAAU,EAChCU,EAAa,oBAAoB,CAACJ,CAAM,EACxCK,EAAa,uBAAuBL,CAAM,EAC1CC,EAAU,uBAAuBD,CAAM,EACvCE,EAAgB,uBAAuBF,CAAM,EAC7CG,EAAmB,uBAAuBH,CAAM,EAChD,IAAMM,EAAiB,KAAK,eAAe,mBAAmB,EACxDC,EAAiC,KAAK,iBAAiB,CAAkB,IAAM,EACrFR,EAAa,KAAK,IAAIA,CAAU,EAC5BQ,EACFb,EAAgB,kBAAkBK,CAAU,EAE5CxB,GAAe+B,EAAgBP,EAAY,KAAK,SAAS,CAE7D,CACA,oBAAoBS,EAAQ9D,EAAW,CACrC,OAAI,KAAK,iBAAiBA,CAAS,GAAK,MACtC,KAAK,iBAAiBA,CAAS,EAAI8D,EAC5B,IAEF,KAAK,iBAAiB9D,CAAS,IAAM8D,CAC9C,CACA,eAAgB,CACT,KAAK,oBAAoB,EAAuB,CAAkB,GAGvE,KAAK,gBAAgB,CAAqB,CAC5C,CACA,WAAY,CACL,KAAK,oBAAoB,EAAmB,CAAkB,GAGnE,KAAK,gBAAgB,CAAiB,CACxC,CACA,gBAAgBA,EAAQ,CACtB,IAAMC,EAA0B,KAAK,eAAe,mBAAmB,EACjE,CACJ,WAAAV,CACF,EAAIU,EACJ,GAAI,KAAK,wBAAwB,EAAoBV,EAAY,EAAI,EACnE,OAEF,IAAIW,EACAF,IAAW,EACbE,EAAgBpC,GAAemC,EAAyB,KAAK,SAAS,EAEtEC,EAAgB,KAAK,aAAa,IAAI,iBAAiB,EAAE,kBAAkB,EAE7E,KAAK,mBAAmB,KAAK,MAAMA,CAAa,CAAC,EACjD,KAAK,0BAA0B,CACjC,CACA,eAAgB,CACT,KAAK,oBAAoB,EAAuB,CAAgB,GAGrE,KAAK,gBAAgB,CAAqB,CAC5C,CACA,WAAY,CACL,KAAK,oBAAoB,EAAmB,CAAgB,GAGjE,KAAK,gBAAgB,CAAiB,CACxC,CACA,gBAAgBF,EAAQ,CACtB,IAAIG,EACAH,IAAW,EACbG,EAAY,KAAK,cAAc,UAE/BA,EAAY,KAAK,aAAa,IAAI,iBAAiB,EAAE,kBAAkB,EAErE,MAAK,wBAAwB,EAAkBA,EAAW,EAAI,IAGlE,KAAK,sBAAsB,aAAaA,CAAS,EACjD,KAAK,cAAgBA,EACjBH,IAAW,EACb,KAAK,aAAa,IAAI,iBAAiB,EAAE,kBAAkBG,CAAS,EAEpE,KAAK,cAAc,UAAYA,EAE7B,KAAK,IAAI,IAAI,wBAAwB,EACvC,KAAK,mBAAmB,EAExB,KAAK,sBAAsB,SAAS,EAEtC,KAAK,0BAA0B,EACjC,CACA,mBAAmBZ,EAAY,CAC7B,IAAMa,EAAiB,KAAK,aAAa,IAAI,iBAAiB,EAAE,kBAAkB,EAC9E,KAAK,aAAeb,GAAcA,IAAea,IAGrD,KAAK,WAAab,EAClB,KAAK,gBAAgB,CAAkB,EACvC,KAAK,gDAAgDA,CAAU,EAC/D,KAAK,eAAe,4BAA4B,EAAI,EACtD,CACA,gBAAgBrD,EAAW,CACzB,IAAMmE,EAAkB,CACtB,KAAM,aACN,UAAWnE,IAAc,EAAqB,aAAe,WAC7D,KAAM,KAAK,WACX,IAAK,KAAK,SACZ,EACA,KAAK,aAAa,cAAcmE,CAAe,EAC/C,OAAO,aAAa,KAAK,WAAW,EACpC,KAAK,YAAc,OACnB,KAAK,YAAc,OAAO,WAAW,IAAM,CACzC,IAAMC,EAAqBC,EAAA5E,EAAA,GACtB0E,GADsB,CAEzB,KAAM,eACR,GACA,KAAK,aAAa,cAAcC,CAAkB,CACpD,EAAG,GAAG,CACR,CACA,wBAAwBpE,EAAWsE,EAAUC,EAAY,GAAO,CAC9D,OAAIA,GAAa,CAACrE,GAAgB,EACzB,GAELF,IAAc,EACT,KAAK,0BAA0BsE,CAAQ,EAEzC,KAAK,4BAA4BA,CAAQ,CAClD,CACA,0BAA0BA,EAAU,CAClC,IAAME,EAAeC,GAAgB,KAAK,aAAa,EACjD,CACJ,aAAAC,CACF,EAAI,KAAK,cACT,OAAIJ,EAAW,GAAKA,EAAWE,EAAeE,CAIhD,CACA,4BAA4BJ,EAAU,CACpC,IAAMK,EAAc,KAAK,eAAe,eAAe,EACjD,CACJ,YAAAC,CACF,EAAI,KAAK,eAAe,mBAAmB,EAC3C,GAAI,KAAK,WAAaC,GAAqB,GACzC,GAAIP,EAAW,EACb,MAAO,WAEAA,EAAW,EACpB,MAAO,GAET,OAAI,KAAK,IAAIA,CAAQ,EAAIK,EAAcC,CAIzC,CACA,uBAAwB,CACtB,KAAK,gBAAgB,CAAgB,CACvC,CAOA,iBAAkB,CACZ,KAAK,aAAe,KAAK,eAAe,4BAA4B,GACtE,KAAK,gBAAgB,CAAiB,CAE1C,CACA,oBAAqB,CACnB,IAAME,EAAc,KAAK,WAAa,KAAK,cAC3C,OAAIA,IACF,KAAK,UAAY,KAAK,cACtB,KAAK,sBAAsB,GAEtBA,CACT,CAEA,4BAA4BC,EAAiBC,EAA0B,GAAO,CAE5E,IAAMC,EAAgB,KAAK,eAAe,mBAAmB,EAAE,YAAc,KAAK,eAAe,eAAe,EAC5G,CAACD,GAA2B,KAAK,wBAAwB,EAAoBD,CAAe,IAC1F,KAAK,WAAaF,GAAqB,EACzCE,EAAkBA,EAAkB,EAAI,EAAIE,EAE5CF,EAAkB,KAAK,IAAI,KAAK,IAAIA,EAAiB,CAAa,EAAGE,CAAa,GAGtFpD,GAAe,KAAK,eAAe,mBAAmB,EAAG,KAAK,IAAIkD,CAAe,EAAG,KAAK,SAAS,EAClG,KAAK,mBAAmBA,CAAe,CACzC,CACA,0BAA0BG,EAAiB,CACzC,KAAK,cAAc,UAAYA,CACjC,CACA,oBAAqB,CACnB,YAAK,cAAgB,KAAK,cAAc,UACxC,KAAK,iBAAmB,KAAK,cAAc,aAC5B,CACb,IAAK,KAAK,cACV,OAAQ,KAAK,cAAgB,KAAK,gBACpC,CAEF,CAKA,8BAA+B,CAC7B,OAAI,KAAK,eAAiB,GAAK,KAAK,kBAAoB,EAC/C,CACL,IAAK,KAAK,UACV,OAAQ,KAAK,UAAY,KAAK,gBAChC,EAEK,KAAK,mBAAmB,CACjC,CACA,oBAAqB,CACnB,OAAO,KAAK,eAAe,mBAAmB,CAChD,CACA,2BAA4B,CAC1B,OAAO,KAAK,eAAe,0BAA0B,CACvD,CAEA,mBAAmBC,EAAQ,CACzB,IAAMC,EAAoB,KAAK,eAAe,mBAAmB,EAAE,WACnE,YAAK,4BAA4BA,EAAoBD,CAAM,EACpD,KAAK,eAAe,mBAAmB,EAAE,WAAaC,CAC/D,CAEA,aAAc,CACZ,KAAK,cAAc,UAAY,CACjC,CAEA,kBAAkBC,EAAYC,EAAW,KAAM,CAC7C,IAAMC,EAAW,KAAK,SAAS,YAAY,EACvCC,EAAgB,GACpB,QAASC,EAAI,EAAGA,EAAIF,EAAUE,IAAK,CACjC,IAAMC,EAAO,KAAK,SAAS,OAAOD,CAAC,EACnC,GAAI,OAAOJ,GAAe,YAExB,GAAIK,GADcL,EACIK,CAAI,EAAG,CAC3BF,EAAgBC,EAChB,KACF,UAEIJ,IAAeK,GAAQL,IAAeK,EAAK,KAAM,CACnDF,EAAgBC,EAChB,KACF,CAEJ,CACID,GAAiB,GACnB,KAAK,mBAAmBA,EAAeF,CAAQ,CAEnD,CAOA,mBAAmBK,EAAOL,EAAU,CAClC,GAAI,KAAK,IAAI,YAAY,OAAO,EAC9B,OAEF,IAAMC,EAAW,KAAK,SAAS,YAAY,EAC3C,GAAI,OAAOI,GAAU,UAAYA,EAAQ,GAAKA,GAASJ,EAAU,CAC/D1G,EAAU,6CAA+C8G,CAAK,EAC9D,MACF,CAEA,IAAMC,EADW,KAAK,IAAI,IAAI,YAAY,GACC,CAAC,KAAK,IAAI,IAAI,yBAAyB,EAClF,KAAK,sBAAsB,EAAE,aAAa,IAAM,CACzCA,GACH,KAAK,mBAAmB,kBAAkBD,CAAK,EAEjD,IAAME,EAAe,KAAK,aAAa,gBAAgB,EACjDC,EAAkBD,EAAa,mBAAmB,EAClDE,EAAqBF,EAAa,sBAAsB,EACxDG,EAAU,KAAK,SAAS,OAAOL,CAAK,EACtCM,EACJ,EAAG,CACD,IAAMC,EAAiBF,EAAQ,OACzBG,EAAoBH,EAAQ,UAC5BI,EAAmB,KAAK,kBAAkB,eAAe,EACzDC,EAAcL,EAAQ,OAASI,EAC/BE,EAAiBD,EAAcL,EAAQ,UACvCO,EAAiB,KAAK,mBAAmB,EACzCC,EAAe,KAAK,aAAa,oBAAoB,EACrDC,EAAaF,EAAe,IAAMC,EAClCE,EAAgBH,EAAe,OAASC,EACxCG,EAAiBD,EAAgBD,EACjCG,EAAQ,KAAK,aAAa,0BAA0BP,CAAW,EAC/DQ,EAAW,KAAK,aAAa,0BAA0BP,EAAiBK,CAAc,EACtFG,EAAW,KAAK,KAAKF,EAAQC,GAAY,EAAGR,CAAW,EACvDU,EAAmBN,EAAaX,EAAkBO,EAClDW,EAAmBN,EAAgBX,EAAqBO,EAC1DW,EAAoB,KACpB3B,IAAa,MACf2B,EAAoBL,EACXtB,IAAa,SACtB2B,EAAoBJ,EACXvB,IAAa,SACtB2B,EAAoBH,EACXC,EACTE,EAAoBL,EAAQd,EACnBkB,IACTC,EAAoBJ,EAAWd,GAE7BkB,IAAsB,OACxB,KAAK,0BAA0BA,CAAiB,EAChD,KAAK,YAAY,OAAO,CACtB,YAAa,EACf,CAAC,GAEHhB,EAA+BC,IAAmBF,EAAQ,QAAUG,IAAsBH,EAAQ,SACpG,OAASC,GACT,KAAK,sBAAsB,eAAe,CAC5C,CAAC,CACH,CACA,oBAAoBiB,EAAK5B,EAAW,OAAQ,CAC1C,IAAM6B,EAAS,KAAK,YAAY,OAAOD,CAAG,EAO1C,GANI,CAACC,GAGDA,EAAO,SAAS,GAGhB,CAAC,KAAK,mBAAmB,eAAeA,CAAM,EAChD,OAEF,IAAMC,EAAsB,KAAK,8BAA8BD,EAAQ7B,CAAQ,EAC/E,KAAK,sBAAsB,EAAE,aAAa,IAAM,CAC1C8B,IAAwB,MAC1B,KAAK,eAAe,4BAA4BA,CAAmB,EAErE,KAAK,eAAe,4BAA4B,EAChD,KAAK,sBAAsB,eAAe,CAC5C,CAAC,CACH,CACA,kBAAkBC,EAAKC,EAAM,CAC3B,KAAK,sBAAsB,EAAE,aAAa,IAAM,CAC9C,KAAK,eAAe,4BAA4BA,CAAI,EACpD,KAAK,0BAA0BD,CAAG,EAClC,KAAK,YAAY,OAAO,CACtB,YAAa,EACf,CAAC,EACD,KAAK,sBAAsB,eAAe,CAC5C,CAAC,CACH,CACA,8BAA8BF,EAAQ7B,EAAU,CAC9C,GAAM,CACJ,kBAAAiC,EACA,eAAAC,CACF,EAAI,KAAK,wBAAwBL,CAAM,EACjCM,EAA4B,KAAK,eAAe,eAAe,EAAIN,EAAO,eAAe,EACzFO,EAAgB,KAAK,eAAe,eAAe,EACnDC,EAAQ,KAAK,UACfC,GAAmBD,EAAQJ,EAAoBC,IAAmBC,EAClEI,EAAgBF,EAAQH,EAAiBD,EACzCjC,IAAa,SACfsC,EAAkBtC,IAAa,QAC/BuC,EAAgBvC,IAAa,OAE/B,IAAMwC,EAAWxC,IAAa,SAC9B,GAAIsC,GAAmBC,GAAiBC,EAAU,CAChD,GAAM,CACJ,QAAAC,EACA,UAAAC,EACA,SAAAC,CACF,EAAI,KAAK,gBAAgBd,CAAM,EAC/B,OAAIW,EACKE,EAAYN,EAAgB,EAEjCE,EACKD,EAAQM,EAAWF,EAErBJ,EAAQI,EAAUL,EAAgBO,EAAWP,CACtD,CACA,OAAO,IACT,CACA,wBAAwBP,EAAQ,CAC9B,GAAM,CACJ,MAAOe,EACP,IAAKC,CACP,EAAI,KAAK,kBAAkB,EACrB,CACJ,QAAAJ,EACA,SAAAE,CACF,EAAI,KAAK,gBAAgBd,CAAM,EACzBQ,EAAQ,KAAK,UACbJ,EAAoBI,EAAQO,EAAgBD,EAAWE,EAAcF,EACrET,EAAiBG,EAAQQ,EAAcJ,EAAUG,EAAgBH,EACvE,MAAO,CACL,kBAAAR,EACA,eAAAC,CACF,CACF,CACA,gBAAgBL,EAAQ,CACtB,IAAMQ,EAAQ,KAAK,UACbS,EAAY,KAAK,mBAAmB,sBAAsB,EAC1DC,EAAWlB,EAAO,eAAe,EACjCY,EAAUZ,EAAO,QAAQ,EACzBmB,EAAaX,EAAQ,GAAK,EAC1BY,EAAeZ,EAAQS,EAAYL,EAAUA,EAC7CS,EAAgBD,EAAeF,EAAWC,EAC1CG,EAAcF,EAAeF,EAAW,EAAIC,EAClD,MAAO,CACL,QAASC,EACT,UAAWE,EACX,SAAUD,CACZ,CACF,CACA,mBAAoB,CAClB,IAAMd,EAAgB,KAAK,eAAe,eAAe,EACnDnB,EAAiB,KAAK,eAAe,4BAA4B,EACjEmC,EAAqBnC,EACrBoC,EAAmBjB,EAAgBnB,EACzC,MAAO,CACL,MAAOmC,EACP,IAAKC,EACL,MAAOjB,CACT,CACF,CACF,EAGIkB,GAAkC,2BAClCC,GAA4B,gBAC5BC,GAA0B,mBAC1BC,GAAe,cAAcvK,CAAS,CACxC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,gBAAkB,EACvB,KAAK,mBAAqB,CAC5B,CACA,UAAUS,EAAO,CACf,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,0BAA4BA,EAAM,0BACvC,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,qBAAuBA,EAAM,qBAClC,KAAK,YAAcA,EAAM,YACzB,KAAK,wBAA0BA,EAAM,wBACrC,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,eAAiBA,EAAM,eAC5B,KAAK,YAAcA,EAAM,YACzB,KAAK,aAAeA,EAAM,aAC1B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,SAAWA,EAAM,SACtB,KAAK,cAAgBA,EAAM,cAC3B,KAAK,YAAcA,EAAM,WAC3B,CACA,kBAAmB,CACjB,OAAO,KAAK,iBACd,CACA,wBAAyB,CACvB,OAAO,KAAK,aACd,CACA,QAAQK,EAAM0J,EAAWnG,EAAeoG,EAAMC,EAASC,EAAYC,EAAe,CAChF,KAAK,KAAO9J,EACZ,KAAK,UAAY0J,EACjB,KAAK,cAAgBnG,EACrB,KAAK,KAAOoG,EACZ,KAAK,QAAUC,EACf,KAAK,WAAaC,EAClB,KAAK,cAAgBC,EACrB,KAAK,qBAAqB,KAAK,IAAI,IAAI,yBAAyB,CAAC,EACjE,KAAK,2BAA2B,0BAA2BC,GAAS,KAAK,qBAAqBA,EAAM,YAAY,CAAC,EACjH,KAAK,kBAAkB,IAAI9K,GAAc,KAAK,IAAI,CAAC,EACnD,KAAK,kBAAoB,KAAK,kBAAkB,IAAIqE,GAAsB,KAAK,aAAa,CAAC,EAC7F,KAAK,mBAAmB,EACxB,KAAK,0BAA0B,EAC/B,KAAK,kBAAkB,EACvB,KAAK,kBAAkB,CAACqG,EAAMpG,EAAeqG,EAASC,EAAYC,CAAa,CAAC,EAChF,KAAK,qBAAqB,EAC1B,KAAK,wBAAwB,EAC7B,KAAK,mBAAmB,EACxB,KAAK,uBAAuB,EAC5B,KAAK,iCAAiC,EACtC,KAAK,eAAe,8BAA8BH,CAAI,EACtD,KAAK,aAAa,SAAS,eAAgB,IAAI,CACjD,CACA,SAAU,CACR,OAAO,KAAK,IACd,CACA,mBAAoB,CAClB,KAAK,yBAAyB,CAC5B,mBAAoB,KAAK,qBAAqB,KAAK,IAAI,EACvD,wBAAyB,KAAK,0BAA0B,KAAK,IAAI,EACjE,qBAAsB,KAAK,mBAAmB,KAAK,IAAI,EACvD,oBAAqB,KAAK,mBAAmB,KAAK,IAAI,EACtD,oBAAqB,KAAK,sBAAsB,KAAK,IAAI,CAC3D,CAAC,CACH,CACA,kBAAkBK,EAAU,CAC1BA,EAAS,QAAQC,GAAW,CAC1B,KAAK,2BAA2BA,EAAS,CACvC,QAASC,GAAK,CACZ,GAAM,CACJ,OAAAC,CACF,EAAID,EACEE,EAAyBC,GAAuBF,EAAQ,UAAWF,CAAO,EAChFA,EAAQ,UAAU,OAAO,eAAgB,CAACG,CAAsB,CAClE,EACA,SAAUF,GAAK,CACb,GAAM,CACJ,OAAAC,EACA,cAAAG,CACF,EAAIJ,EACEK,EAA2BN,EAAQ,SAASK,CAAa,EACzDE,EAAwBH,GAAuBC,EAAe,UAAWL,CAAO,EAC/DI,GAAuBF,EAAQ,UAAWF,CAAO,IAIpE,CAACM,GAA4BC,IAC/BP,EAAQ,UAAU,OAAO,cAAc,CAE3C,CACF,CAAC,CACH,CAAC,CACH,CAEA,mBAAmBQ,EAAQ,CACzB,KAAK,KAAK,mBAAmBjB,GAAyBiB,CAAM,CAC9D,CACA,qBAAqBC,EAAa,GAAO,CACvC,KAAK,KAAK,qBAAqBnB,GAA2BmB,CAAU,CACtE,CACA,2BAA4B,CAC1B,IAAMC,EAAU,KAAK,qBAAqB,wBAAwB,EAClE,KAAK,gCAAgCA,CAAO,EAC5C,KAAK,eAAeA,CAAO,EAC3B,KAAK,4BAA4B,EACjC,IAAM7I,EAAiB6I,GAAU,KAAK,IAAI,kBAAkB,GAAK,EAC3DC,EAAM/J,GAAsB,EAAI,GAAK,EACrCY,EAAQ,eAAeK,EAAiB8I,CAAG,MACjD,KAAK,sBAAsB,sBAAsB,IAAM,KAAK,KAAK,qBAAqBnJ,CAAK,CAAC,CAC9F,CACA,sBAAuB,CACrB,IAAMoJ,EAAU,KAAK,YAAY,QAAQ,EACzC,KAAK,KAAK,eAAeA,EAAQ,MAAM,CACzC,CAGA,wBAAyB,CACvB,KAAK,2BAA2B,KAAK,UAAW,CAC9C,UAAWC,GAAS,CAClB,GAAIA,EAAM,kBAAkB,iBAC1B,OAAAA,EAAM,eAAe,EACd,EAEX,CACF,CAAC,CACH,CACA,kCAAmC,CACjC,GAAI,CAAC,KAAK,IAAI,IAAI,+BAA+B,EAC/C,OAEF,IAAMC,EAAmBD,GAAS,CAChC,IAAME,EAAmBF,EAAM,cAC/B,GAAIG,GAAaD,CAAgB,IAAM,KAAM,CAC3C,KAAK,YAAY,YAAY,EAC7B,MACF,CACA,IAAIE,EAEJC,EAAU,KAAKjK,GAAYA,EAAS,SAAS8J,CAAgB,CAAC,GAE9D,KAAK,kBAAkB,oBAAoBA,CAAgB,EAC3D,GAAI,CAACE,EAAiB,CACpB,IAAME,EAAe,KAAK,aAC1BF,EAAkBE,EAAa,gBAAgB,EAAE,KAAKC,GAASA,EAAM,SAASL,CAAgB,CAAC,GAAKI,EAAa,2BAA2BJ,CAAgB,CAC9J,CACKE,GACH,KAAK,YAAY,YAAY,CAEjC,EACMC,EAAY,CAAC,KAAK,cAAe,KAAK,QAAS,KAAK,KAAM,KAAK,WAAY,KAAK,aAAa,EACnGA,EAAU,QAAQjK,GAAY,KAAK,2BAA2BA,EAAU,CACtE,SAAU6J,CACZ,CAAC,CAAC,CACJ,CACA,gBAAiB,CACf,IAAMO,EAAc,KAAK,wBAAwB,kBAAkB,GAAK,KAAK,eAAe,kBAAkB,GAAK,GAC7GrF,EAAW,KAAK,SAAS,oBAAoB,EAAI,KAAK,SAAS,YAAY,EAAI,GAC/EsF,EAAQtF,IAAa,GAAK,GAAKqF,EAAcrF,EACnD,KAAK,KAAK,YAAYsF,CAAK,CAC7B,CACA,mCAAmCC,EAAU,CAC3C,KAAK,KAAK,mCAAmCA,CAAQ,CACvD,CACA,gCAAgCb,EAAS,CACvC,IAAMc,EAAYd,EAAU,SAAW,SACvC,KAAK,KAAK,4BAA4Bc,CAAS,CACjD,CACA,yBAA0B,CACxB,IAAMC,EAAO,KAAK,IAAI,IAAI,0BAA0B,EAC9CpM,EAAWoM,EAAOpC,GAAkC,KACpDqC,EAAsB,KAAK,IAAI,YAAY,QAAQ,EACzD,YAAK,KAAK,6BAA6BrM,EAAUoM,CAAI,EAC9CA,GAAQC,GAAuBC,GAAyB,KAAK,aAAa,CACnF,CACA,2BAA4B,CAC1B,IAAIC,EAAiC,KAAK,YAAY,iBAAiB,EACjEC,EAAuB,IAAM,CACjC,IAAMC,EAAcF,GAAkC,KAAK,IAAI,cAAc,GAAK,CAAC,KAAK,0BAA0B,aAAa,EACzHG,EAAsBD,EAAc,mBAAqB,sBAC/D,KAAK,KAAK,iCAAiCC,EAAqBD,CAAW,CAC7E,EACAD,EAAqB,EACrB,KAAK,yBAAyB,CAC5B,mBAAoBA,CACtB,CAAC,EACD,KAAK,2BAA2B,cAAeA,CAAoB,EACnE,KAAK,yBAAyB,CAC5B,kBAAmB,IAAM,CACnB,CAACD,GAAkC,KAAK,YAAY,iBAAiB,IACvEA,EAAiC,GACjCC,EAAqB,EAEzB,CACF,CAAC,CACH,CACA,oBAAqB,CACnB,OAAO,KAAK,SACd,CACA,yBAA0B,CACxB,IAAMN,EAAW,KAAK,0BAA0B,KAAK,IAAI,EACzD,KAAK,2BAA2B,KAAK,cAAe,CAClD,YAAaA,CACf,CAAC,EACD,KAAK,uBAAuBA,CAAQ,EACpC,KAAK,2BAA2B,KAAK,cAAe,CAClD,MAAO,KAAK,oBAAoB,KAAK,IAAI,CAC3C,CAAC,EACD,KAAK,2BAA2B,KAAK,WAAY,CAC/C,MAAO,KAAK,cAAc,KAAK,IAAI,CACrC,CAAC,EACD,KAAK,2BAA2B,KAAK,cAAe,CAClD,MAAO,KAAK,cAAc,KAAK,IAAI,CACrC,CAAC,EACD,KAAK,mCAAmC,CAC1C,CACA,oCAAqC,CACnC,IAAMS,EAAqB,KAAK,cAAc,cAAc,0BAA0B,EAChFC,EAAsB,KAAK,cAAc,cAAc,0BAA0B,EACnFD,GAAsBC,GACxB,KAAK,2BAA2BD,EAAoB,CAClD,MAAO/B,GAAK,KAAK,0BAA0BA,EAAGgC,CAAmB,CACnE,CAAC,CAEL,CACA,0BAA0B,EAAGA,EAAqB,CAC5C,CAAC,EAAE,QAAU,KAAK,IAAI,EAAE,MAAM,EAAI,KAAK,IAAI,EAAE,MAAM,GAAK,CAAC,KAAK,kBAAkB,oBAAoB,CAAC,IAGzG,EAAE,eAAe,EACjBA,EAAoB,SAAS,CAC3B,KAAM,EAAE,MACV,CAAC,EACH,CACA,0BAA0BC,EAAYC,EAAOC,EAAY,CACvD,GAAI,CAACF,GAAc,CAACE,EAClB,OAEE,KAAK,IAAI,IAAI,6BAA6B,IAC9BF,GAAcE,GACtB,eAAe,EAEvB,GAAM,CACJ,OAAAlC,CACF,EAAIgC,GAAcC,GACdjC,IAAW,KAAK,eAAiBA,IAAW,KAAK,aAAa,IAAI,QAAQ,EAAE,mBAAmB,IACjG,KAAK,YAAY,gBAAgB,CAC/B,WAAAgC,EACA,WAAAE,EACA,MAAO,KACP,gBAAiB,KAAK,SACxB,CAAC,CAEL,CACA,uBAAuBb,EAAU,CAC/B,GAAI,CAAC5K,GAAgB,EACnB,OAEF,IAAM0L,EAAgB,IAAIC,GAAc,KAAK,aAAa,EACpDC,EAAkB1B,GAAS,CAC/BU,EAAS,OAAQV,EAAM,WAAYA,EAAM,UAAU,CACrD,EACA,KAAK,oBAAoBwB,EAAe,CACtC,QAASE,CACX,CAAC,EACD,KAAK,eAAe,IAAMF,EAAc,QAAQ,CAAC,CACnD,CACA,oBAAoB,EAAG,CAChB,KAAK,IAAI,IAAI,iCAAiC,GAG/C,KAAK,aAAa,iBAAiB,GACrC,EAAE,eAAe,CAErB,CACA,cAAc,EAAG,CACf,EAAE,eAAe,EACb,EAAE,SACJ,KAAK,iBAAiB,EAAE,MAAM,CAElC,CACA,QAAS,CACP,OAAO,KAAK,SACd,CAEA,iBAAiBzG,EAAQ,CACvB,IAAMC,EAAoB,KAAK,cAAc,UAC7C,YAAK,kBAAkB,0BAA0BA,EAAoBD,CAAM,EACpE,KAAK,cAAc,UAAYC,CACxC,CACA,oBAAqB,CACnB,KAAK,eAAiB,KAAK,kBAAkB,IAAI2G,GAAe,KAAK,aAAa,CAAC,EACnF,KAAK,mBAAmB,cAAc,KAAK,cAAc,CAC3D,CACA,mBAAoB,CAClB,OAAO,KAAK,cACd,CACA,oBAAqB,CACnB,GAAM,CACJ,eAAAC,CACF,EAAI,KACEC,EAAoBD,EAAe,wBAAwB,EAC3DE,EAAuBF,EAAe,2BAA2B,EACvE,KAAK,KAAK,aAAaC,CAAiB,EACxC,KAAK,KAAK,gBAAgBC,CAAoB,EAC9C,KAAK,KAAK,cAAcD,EAAoB,UAAY,MAAM,EAC9D,KAAK,KAAK,iBAAiBC,EAAuB,UAAY,MAAM,EACpE,KAAK,sBAAsB,EAC3B,KAAK,4BAA4B,CACnC,CACA,mBAAmBhK,EAAS,EAAG,CAC7B,KAAK,KAAK,mBAAmB,GAAGA,CAAM,IAAI,EAC1C,KAAK,gBAAkBA,CACzB,CACA,oBAAqB,CACnB,OAAO,KAAK,eACd,CACA,sBAAsBA,EAAS,EAAG,CAChC,KAAK,KAAK,sBAAsB,GAAGA,CAAM,IAAI,EAC7C,KAAK,mBAAqBA,CAC5B,CACA,uBAAwB,CACtB,OAAO,KAAK,kBACd,CACA,eAAeiK,EAAgB,CAC7B,GAAI,CAACA,EACH,KAAK,KAAK,kBAAkB,MAAM,EAClC,KAAK,KAAK,qBAAqB,MAAM,MAChC,CACL,IAAM/K,EAAiB,KAAK,IAAI,kBAAkB,EAClD,KAAK,KAAK,kBAAkB,eAAeA,CAAc,KAAK,EAC9D,KAAK,KAAK,qBAAqB,eAAeA,CAAc,KAAK,CACnE,CACF,CACA,uBAAwB,CACtB,KAAK,sBAAsB,CAC7B,CACA,uBAAwB,CAEtB,IAAMgL,EADa,KAAK,aAAa,IAAI,gBAAgB,EACzB,gBAAgB,GAAK,KAAK,eAAe,gBAAgB,GAAK,GACxFC,EAAkB,KAAK,eAAe,wBAAwB,EAChEnK,EAAS,EACTkK,EAAe,IACjBlK,GAAUkK,GAERC,EAAkB,IACpBnK,GAAUmK,GAERnK,EAAS,IACXA,GAAU,GAEZ,KAAK,KAAK,gBAAgB,GAAGA,CAAM,IAAI,CACzC,CACA,6BAA8B,CAC5B,IAAMoK,EAAqB,KAAK,eAAe,2BAA2B,EAEpElL,EADiB,KAAK,qBAAqB,0BAA0B,GACnC,KAAK,IAAI,kBAAkB,GAAK,EAClEc,EAASoK,EAAqBlL,EACpC,KAAK,KAAK,sBAAsB,GAAGc,CAAM,IAAI,CAC/C,CAGA,iBAAiBvD,EAAQ4N,EAAa,CAEpC,IAAMC,EADoB,KAAK,wBAAwB,EACP,KAAK,IAAI,kBAAkB,EAAI,EAEzEC,EADoBC,GAAe,KAAK,SAAS,EACZF,EAC3C,GAAIC,EAAiB,EAAG,CACtB,KAAK,kBAAkB,iBAAiBA,EAAgB,mBAAoB,GAAO9N,CAAM,EACzF,MACF,CACI4N,IAAgB,OAClB,OAAO,WAAW,IAAM,CACtB,KAAK,iBAAiB5N,EAAQ,GAAG,CACnC,EAAG,CAAC,EACK4N,IAAgB,IACzB,OAAO,WAAW,IAAM,CACtB,KAAK,iBAAiB5N,EAAQ,GAAG,CACnC,EAAG,GAAG,EACG4N,IAAgB,IACzB,OAAO,WAAW,IAAM,CACtB,KAAK,iBAAiB5N,EAAQ,EAAE,CAClC,EAAG,GAAG,EAENE,EAAU,gIAAgI,CAE9I,CAEA,uBAAuBiM,EAAU,CAC/B,KAAK,cAAc,iBAAiB,SAAUA,EAAU,CACtD,QAAS,EACX,CAAC,CACH,CAEA,0BAA0BA,EAAU,CAClC,KAAK,cAAc,oBAAoB,SAAUA,CAAQ,CAC3D,CACF,EAGI6B,GAAW,cAAc5N,CAAU,CACrC,YAAYE,EAAO2N,EAAUC,EAAaC,EAAMC,EAAY,CAC1D,MAAM,EAON,KAAK,gBAAkB,EACvB,KAAK,cAAgB,EACrB,KAAK,MAAQ9N,EACb,KAAK,OAAS2N,EAAS,UAAU,EACjC,KAAK,QAAUA,EAAS,WAAW,EACnC,KAAK,QAAUA,EAAS,WAAW,EACnC,KAAK,KAAOE,EACZ,KAAK,SAAWF,EAChB,IAAMI,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,aAAa,UAAW,GAAG,KAAK,UAAU,CAAC,EAAE,EACrD,KAAK,uBAAuBA,CAAO,EACnC,IAAM5M,EAAO,KAAK,OAAO,EACzB,KAAK,aAAewM,EAAS,eAAe,EAC5C,KAAK,eAAe,EAAK,EACzB,IAAMK,EAAe,CAACC,EAAM3M,IAAU,CAChCA,GAAS,MAAQA,GAAS,GAC5BH,EAAK,aAAa8M,EAAM3M,CAAK,EAE7BH,EAAK,gBAAgB8M,CAAI,CAE7B,EACAC,EAAa/M,EAAMwM,EAAS,gBAAgB,CAAC,EAC7CK,EAAa,SAAUL,EAAS,qBAAqB,CAAC,EACtD,IAAMQ,EAAWR,EAAS,YAAY,EAClCQ,IAAa,QACfH,EAAa,WAAYG,EAAS,SAAS,CAAC,EAE9C,IAAMC,EAAY,CAChB,oBAAqB,CAACC,EAAcC,IAAO,KAAK,oBAAoBD,EAAcC,CAAE,EACpF,cAAeC,GAAUC,GAAoBrN,EAAMoN,CAAM,EACzD,oBAAqB,IAAM,KAAK,oBAAoB,EACpD,oBAAqBE,GAAW,KAAK,iBAAmBA,EACxD,kBAAmBA,GAAW,KAAK,eAAiBA,EACpD,oBAAqBA,GAAW,KAAK,iBAAmBA,EACxD,iBAAkB,CAACC,EAAaC,EAAgBlL,IAAU,KAAK,iBAAiBiL,EAAaC,EAAgBlL,CAAK,EAClH,eAAgB,CAACiL,EAAahD,EAAOrF,IAAa,KAAK,eAAeqI,EAAahD,EAAOrF,CAAQ,EAClG,cAAe,IAAM,KAAK,YAAc,KACxC,gBAAiB,IAAM,KAAK,cAAgB,KAC5C,iBAAkB,IAAM,KAAK,iBAAiB,CAChD,EACAsH,EAAS,QAAQS,EAAW,KAAK,OAAO,EAAG,KAAK,aAAcR,EAAaE,CAAU,CACvF,CACA,kBAAmB,CACjB,OAAI,KAAK,WACA,KAAK,WAEV,KAAK,aACA,KAAK,aAEP,KAAK,OAAO,CACrB,CACA,iBAAiBY,EAAaC,EAAgBC,EAA8B,CAE1E,GADwB,KAAK,YAAc,CAAC,KAAK,uBAE/C,OAEF,KAAK,YAAc,KAAK,aAAe,KACvC,IAAMC,EAAwB,KAAK,eAAe,EAAK,EACvD,KAAK,kBAAkB,EAAK,EACxBH,EACmB,EAAAE,GAAgCC,IACQ,KAAK,oBAAoBH,CAAW,IAE/F,KAAK,gBAAgB,EACrB,KAAK,2BAA2BA,CAAW,IAG7C,KAAK,gBAAgB,EACrB,KAAK,+BAA+BC,CAAc,EAEtD,CACA,eAAeD,EAAahD,EAAOrF,EAAU,CACvCqI,EACF,KAAK,yBAAyBA,EAAahD,EAAOrF,CAAQ,EAE1D,KAAK,cAAc,CAEvB,CACA,gBAAiB,CACf,KAAK,sBAAwB,KAAK,MAAM,QAAQ,YAAY,KAAK,qBAAqB,EACtF,KAAK,cAAgB,KAAK,MAAM,QAAQ,YAAY,KAAK,aAAa,EACtE,KAAK,gBAAkB,KAAK,MAAM,QAAQ,YAAY,KAAK,eAAe,CAC5E,CAEA,eAAeyI,EAAS,CACtB,IAAMC,EAAoB,KAAK,gBAAkB,KAAK,kBAAoB,KAAK,iBACzEC,EAAeD,GAAqB,KAAK,aACzCE,EAAeD,GAAgB,KAAK,cAAgB,KAC1D,GAAIC,EAAc,CAChB,IAAMC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,aAAa,OAAQ,cAAc,EAC9CA,EAAW,aAAa,QAAS,iBAAiB,EAClD,KAAK,aAAeA,EACpB,KAAK,OAAO,EAAE,YAAY,KAAK,YAAY,CAC7C,CACA,IAAMC,EAAiB,CAACH,GAAgB,KAAK,cAAgB,KACzDG,IACFC,GAAkB,KAAK,YAAY,EACnC,KAAK,aAAe,QAEtB,KAAK,oBAAoB,gBAAiB,CAACJ,CAAY,EACvD,IAAMK,EAAiB,CAACP,GAAWE,EAC7BM,EAAiBD,GAAkB,KAAK,YAAc,KAC5D,GAAIC,EAAgB,CAClB,IAAMC,EAAW,SAAS,cAAc,MAAM,EAC9CA,EAAS,aAAa,OAAQ,cAAc,EAC5CA,EAAS,aAAa,QAAS,eAAe,EAC9C,KAAK,WAAaA,EAClB,KAAK,aAAa,YAAY,KAAK,UAAU,CAC/C,CACA,IAAMC,EAAmB,CAACH,GAAkB,KAAK,YAAc,KAC3DG,IACFJ,GAAkB,KAAK,UAAU,EACjC,KAAK,WAAa,QAEpB,IAAMK,EAAkBR,GAAgBE,GAAkBG,GAAkBE,EAC5E,OAAIC,GACF,KAAK,eAAe,EAEjBX,GACCC,GACF,KAAK,YAAY,EAGdU,CACT,CACA,aAAc,CACR,KAAK,gBACH,KAAK,iBAAmB,OAC1B,KAAK,gBAAkB,KAAK,SAAS,kBAAkB,EACnD,KAAK,iBACP,KAAK,aAAa,aAAa,KAAK,gBAAgB,OAAO,EAAG,KAAK,UAAU,GAI/E,KAAK,kBACH,KAAK,eAAiB,OACxB,KAAK,cAAgB,KAAK,SAAS,gBAAgB,EACnD,KAAK,aAAa,aAAa,KAAK,cAAc,OAAO,EAAG,KAAK,UAAU,GAG3E,KAAK,kBACH,KAAK,uBAAyB,OAChC,KAAK,sBAAwB,KAAK,SAAS,wBAAwB,EACnE,KAAK,aAAa,aAAa,KAAK,sBAAsB,OAAO,EAAG,KAAK,UAAU,EAGzF,CACA,yBAAyBf,EAAahD,EAAOrF,EAAU,CACrD,IAAMqJ,EAAc,KAAK,cACnBC,EAAoBjB,EAAY,mBAAmB,EACzD,GAAIiB,GAAqB,KACvB,OAEF,GAAM,CACJ,OAAAjQ,CACF,EAAIgP,EACJiB,EAAkB,KAAKC,GAAK,KAAK,uBAAuBF,EAAaE,EAAGlQ,EAAQgM,EAAOrF,CAAQ,CAAC,EACxEwJ,EAAS,KAAK,UAAU,GACzBnQ,EAAO,iBAC5B,KAAK,SAAS,UAAU,EAAI,CAEhC,CACA,+BAA+BiP,EAAgB,CAC7C,IAAMmB,EAAU,KAAK,iBAAiB,EACtCnP,EAAcmP,CAAO,EACrB,IAAMC,EAAepB,GAAkB,KAAOqB,GAAcrB,EAAgB,EAAI,EAAI,KAChFoB,GAAgB,OAClBD,EAAQ,YAAcC,EAE1B,CACA,0BAA2B,CACzB,KAAK,gBAAgB,EACrB,KAAK,cAAc,CACrB,CACA,iBAAkB,CAChB,GAAM,CACJ,QAAAE,CACF,EAAI,KAAK,MACT,KAAK,aAAeA,EAAQ,YAAY,KAAK,YAAY,EACzDb,GAAkB,KAAK,eAAe,EACtC,KAAK,gBAAkB,KACvB,KAAK,iBACP,CACA,eAAgB,CACd,GAAM,CACJ,QAAAa,CACF,EAAI,KAAK,MACL,KAAK,iBACP,KAAK,gBAAgB,EAEvB,KAAK,gBAAkB,OACvB,KAAK,WAAaA,EAAQ,YAAY,KAAK,UAAU,EACrD,KAAK,uBAAyBA,EAAQ,YAAY,KAAK,sBAAsB,EAC7Eb,GAAkB,KAAK,aAAa,EACpC,KAAK,cAAgB,KACrB,KAAK,eACP,CACA,oBAAoBc,EAAoB,CAItC,GAHI,KAAK,cAAgB,MAAQ,KAAK,aAAa,SAAW,MAG1D,KAAK,oBAAsBA,EAAmB,eAChD,MAAO,GAET,IAAMC,EAAS,KAAK,aAAa,QAAQD,EAAmB,MAAM,EAClE,OAAOC,IAAW,IAAQA,IAAW,MACvC,CACA,2BAA2BzB,EAAa,CAEtC,IAAM0B,EAAiB,CADQ,KAAK,MAAM,IAAI,IAAI,wBAAwB,EAEpEC,EAA8B,KAAK,gBACnC,CACJ,eAAAC,CACF,EAAI5B,EACE6B,EAAyB,IAAM,CAEnC,GADkB,KAAK,kBAAoBF,GAA+B,CAAC,KAAK,QAAQ,EAEtF,OAEF,IAAMG,EAAmB9B,EAAY,mBAAmB,EAClD+B,EAAW,KAAK,yBAAyB,KAAK,KAAMJ,EAA6BC,CAAc,EACjGE,GACFA,EAAiB,KAAKC,CAAQ,CAElC,EACIL,GAAkB,KAAK,YACzB,KAAK,MAAM,sBAAsB,WAAWG,EAAwB,KAAK,QAAQ,SAAU,eAAe,EAE1GA,EAAuB,CAE3B,CACA,SAAU,CACR,OAAO,KAAK,QACd,CACA,YAAa,CACX,OAAO,KAAK,OACd,CACA,iBAAkB,CAChB,OAAO,KAAK,YACd,CACA,eAAgB,CACd,OAAO,KAAK,UACd,CACA,yBAAyBG,EAAqBC,EAAmBC,EAAc,CAE7E,GADkB,CAAC,KAAK,QAAQ,GAAKF,IAAwB,KAAK,gBACnD,CACb,KAAK,MAAM,QAAQ,YAAYE,CAAY,EAC3C,MACF,CAIA,GAHA,KAAK,aAAeA,EACpB,KAAK,kBAAoBD,EACzB,KAAK,gBAAkB,KAAK,aAAa,OAAO,EAC5C,KAAK,iBAAmB,KAAM,CAChC,IAAMb,EAAU,KAAK,iBAAiB,EACtCnP,EAAcmP,CAAO,EACrBA,EAAQ,YAAY,KAAK,eAAe,CAC1C,CACF,CACA,uBAAuBe,EAAgBC,EAAYpR,EAAQgM,EAAOrF,EAAU,CAE1E,GADkBwK,IAAmB,KAAK,cAC3B,CACb,KAAK,MAAM,QAAQ,YAAYC,CAAU,EACzC,MACF,CAEA,GADmCA,EAAW,qBAAuBA,EAAW,oBAAoB,EACpE,CAC9B,KAAK,MAAM,QAAQ,YAAYA,CAAU,EACzC,KAAK,SAAS,YAAY,EAAI,EAC9B,MACF,CACA,GAAI,CAACA,EAAW,OAAQ,CACtBlR,EAAU,yBAAyB,KAAK,OAAO,MAAM,CAAC,6BAA6B,EACnF,KAAK,MAAM,QAAQ,YAAYkR,CAAU,EACzC,MACF,CACA,KAAK,WAAaA,EAClB,KAAK,cAAgBA,EAAW,OAAO,EACvC,IAAMC,EAAoBrF,GAASoF,EAAW,UAAY,QAAUA,EAAW,QAAQ,EACnFC,EACF,KAAK,mBAAmBrR,EAAQ2G,CAAQ,EAExC,KAAK,gBAAgB,EAEvB,KAAK,kBAAkB,GAAM0K,CAAiB,EAC1CD,EAAW,kBACbA,EAAW,iBAAiB,CAEhC,CACA,kBAAkBhC,EAASkC,EAAS,CAClC,KAAK,oBAAoB,yBAA0BlC,GAAW,CAACkC,CAAO,EACtE,KAAK,oBAAoB,wBAAyBlC,GAAW,CAAC,CAACkC,CAAO,EACtE,KAAK,oBAAoB,6BAA8B,CAAClC,GAAW,CAAC,CAACkC,CAAO,EAC5E,KAAK,SAAS,oBAAoBlC,CAAO,CAC3C,CACA,iBAAkB,CAChB,IAAM3N,EAAO,KAAK,OAAO,EACrBA,EAAK,SAAS,KAAK,MAAM,IAAI,oBAAoB,CAAC,GACpDA,EAAK,MAAM,EAEb,KAAK,gBAAgB,EACrB,KAAK,eAAe,EAAI,EACxB,KAAK,mBAAmB,EACpB,KAAK,eACS,KAAK,iBAAiB,EAC9B,YAAY,KAAK,aAAa,CAE1C,CACA,mBAAmBzB,EAAQ2G,EAAU,CAC/B,KAAK,MAAM,IAAI,IAAI,UAAU,IAAM,WACrCzG,EAAU,wIAAwI,EAEpJ,IAAMkR,EAAa,KAAK,WACxB,KAAK,uBAAyB,KAAK,MAAM,QAAQ,WAAW,KAAK,MAAM,YAAY,yBAAyBpR,CAAM,CAAC,EACnH,IAAMuR,EAAY,KAAK,uBAAuB,OAAO,EACjD,KAAK,eACPA,EAAU,YAAY,KAAK,aAAa,EAE1C,IAAMxF,EAAe,KAAK,MAAM,aAC1ByF,EAAgB,KAAK,MAAM,IAAI,IAAI,+BAA+B,EAClEC,EAAgB9K,IAA8ByK,EAAW,iBAAmBA,EAAW,iBAAiB,EAAI,QAC5GpI,EAAQ,KAAK,MAAM,IAAI,IAAI,WAAW,EACtC0I,EAAiB,CACrB,OAAQH,EACR,OAAQ,KAAK,OACb,QAAS,KAAK,QACd,KAAM,kBACN,YAAa,KAAK,OAAO,EACzB,SAAUE,EACV,UAAWzI,EAAQ,QAAU,OAC7B,iBAAkB,EACpB,EACM2I,EAAmB5F,EAAa,yBAAyB,KAAKA,EAAc2F,CAAc,EAC1FE,EAAY,KAAK,MAAM,cAAc,kBAAkB,EACvDC,EAAc9F,EAAa,SAAS,CACxC,MAAOyF,EACP,OAAQD,EACR,WAAY,GACZ,eAAgB,IAAM,CACpB,KAAK,SAAS,oBAAoB,CACpC,EACA,gBAAiB,KAAK,OAAO,EAC7B,iBAAAI,EACA,UAAWC,EAAU,sBAAuB,aAAa,CAC3D,CAAC,EACGC,IACF,KAAK,gBAAkBA,EAAY,SAEvC,CACA,QAAS,CACP,KAAK,KAAK,YAAY,KAAK,OAAO,CAAC,CACrC,CAOA,SAAU,CACR,KAAK,SAAS,YAAY,EAC1B,KAAK,yBAAyB,EAC9B,KAAK,eAAe,EACpB,MAAM,QAAQ,CAChB,CACA,oBAAqB,CACnB,IAAMpQ,EAAO,KAAK,OAAO,EACrBA,EAAK,SAAS,KAAK,MAAM,IAAI,oBAAoB,CAAC,GAAKqQ,GAA8B,GACvFrQ,EAAK,MAAM,CACT,cAAe,EACjB,CAAC,EAEHR,EAAc,KAAK,iBAAiB,CAAC,CACvC,CACF,EAGI8Q,GAAU,cAAc3R,CAAU,CACpC,YAAY4R,EAAM1R,EAAO2R,EAAe,CACtC,MAAM,EACN,KAAK,UAAY,CAAC,EAClB,KAAK,MAAQ3R,EACb,KAAK,QAAU0R,EACf,IAAME,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,aAAa,UAAW,GAAG,KAAK,UAAU,CAAC,EAAE,EACpDA,EAAO,aAAa,QAAS,KAAK,gBAAgBD,CAAa,CAAC,EAChE,KAAK,uBAAuBC,CAAM,EAClC,IAAMzQ,EAAO,KAAK,OAAO,EACnB0Q,EAAQ1Q,EAAK,MACnB,KAAK,SAAW,KAAK,QAAQ,YAAY,EACzC+M,EAAa/M,EAAM,KAAK,EACxB,IAAMgN,EAAW,KAAK,QAAQ,YAAY,EACtCA,GAAY,MACdhN,EAAK,aAAa,WAAYgN,EAAS,SAAS,CAAC,EAEnD,IAAMC,EAAY,CAChB,YAAa0D,GAAY,KAAK,SAAWA,EACzC,aAAcC,GAAa,KAAK,aAAaA,CAAS,EACtD,cAAerD,GAAe,KAAK,cAAcA,CAAW,EAC5D,yBAA0B,IAAM,KAAK,yBAAyB,EAC9D,oBAAqB,CAACT,EAAMK,IAAO,KAAK,oBAAoBL,EAAMK,CAAE,EACpE,cAAeC,GAAUC,GAAoBrN,EAAMoN,CAAM,EACzD,OAAQnG,GAAOyJ,EAAM,IAAMzJ,EAC3B,aAAc4J,GAAaH,EAAM,UAAYG,EAC7C,YAAaC,GAAY9Q,EAAK,aAAa,YAAa8Q,CAAQ,EAChE,SAAUC,GAAS/Q,EAAK,aAAa,SAAU+Q,CAAK,EACpD,kBAAmBC,GAAehR,EAAK,aAAa,mBAAoBgR,CAAW,EACnF,iBAAkBC,GAAoB,KAAK,iBAAiBA,CAAgB,CAC9E,EACAV,EAAK,QAAQtD,EAAW,KAAK,OAAO,EAAGuD,CAAa,EACpD,KAAK,eAAe,IAAM,CACxBD,EAAK,UAAUC,CAAa,CAC9B,CAAC,CACH,CACA,gBAAgBA,EAAe,CAC7B,IAAMK,EAAY,KAAK,QAAQ,oBAAoBL,CAAa,EAChE,OAAOK,EAAY,cAAcA,CAAS,GAAK,QAAQ,KAAK,QAAQ,iBAAiBL,CAAa,CAAC,EACrG,CACA,cAAcjD,EAAa,CACzB,IAAM+B,EAAWG,GAAgB,CAC/B,GAAI,KAAK,QAAQ,EAAG,CAClB,IAAMzP,EAAOyP,EAAa,OAAO,EACjC,KAAK,OAAO,EAAE,YAAYzP,CAAI,EAC9B,KAAK,QAAQ,yBAAyBA,CAAI,EAC1C,KAAK,oBAAoByP,CAAY,CACvC,MACE,KAAK,MAAM,QAAQ,YAAYA,CAAY,CAE/C,EACMyB,EAAM3D,EAAY,mBAAmB,EACtC2D,GAGLA,EAAI,KAAK5B,CAAQ,CACnB,CACA,aAAasB,EAAW,CACtB,IAAMO,EAAgB,OAAO,OAAO,CAAC,EAAG,KAAK,SAAS,EACtDP,EAAU,QAAQpE,GAAY,CAC5B,IAAM1F,EAAM0F,EAAS,cAAc,EACV,KAAK,UAAU1F,CAAG,GACnB,KACtB,KAAK,YAAY0F,CAAQ,EAEzB2E,EAAcrK,CAAG,EAAI,IAEzB,CAAC,EACD,IAAMsK,EAAoBC,GAAsBF,CAAa,EAAE,OAAOG,GAAYA,GAAY,IAAI,EAClG,KAAK,aAAaF,CAAiB,EACnC,KAAK,eAAeR,CAAS,CAC/B,CACA,eAAeA,EAAW,CACxB,GAAI,CAAC,KAAK,SACR,OAEF,IAAMW,EAAkB,CAAC,EACzBX,EAAU,QAAQpE,GAAY,CAC5B,IAAM8E,EAAW,KAAK,UAAU9E,EAAS,cAAc,CAAC,EACpD8E,GACFC,EAAgB,KAAKD,EAAS,OAAO,CAAC,CAE1C,CAAC,EACDE,GAAkB,KAAK,OAAO,EAAGD,CAAe,CAClD,CACA,YAAY/E,EAAU,CACpB,IAAM8E,EAAW,IAAI/E,GAAS,KAAK,MAAOC,EAAU,KAAK,QAAQ,cAAc,EAAG,KAAK,OAAO,EAAG,KAAK,QAAQ,UAAU,CAAC,EACzH,KAAK,UAAUA,EAAS,cAAc,CAAC,EAAI8E,EAC3C,KAAK,OAAO,EAAE,YAAYA,EAAS,OAAO,CAAC,CAC7C,CACA,SAAU,CACR,MAAM,QAAQ,EACd,KAAK,gBAAgB,CACvB,CACA,iBAAkB,CAChB,IAAMG,EAAiBJ,GAAsB,KAAK,SAAS,EAAE,OAAOK,GAAMA,GAAM,IAAI,EACpF,KAAK,aAAaD,CAAc,CAClC,CACA,oBAAoBE,EAAuB,CACrC,KAAK,uBACPC,EAAW,mDAAmD,EAEhE,KAAK,sBAAwBD,EAC7B,KAAK,eAAe,IAAM,CACxB,KAAK,sBAAwB,KAAK,MAAM,QAAQ,YAAY,KAAK,qBAAqB,CACxF,CAAC,CACH,CACA,0BAA2B,CACzB,OAAO,KAAK,qBACd,CACA,aAAaE,EAAW,CACtBA,EAAU,QAAQP,GAAY,CAC5B,GAAI,CAACA,EACH,OAEF,IAAMQ,EAAaR,EAAS,QAAQ,EAAE,cAAc,EAChD,KAAK,UAAUQ,CAAU,IAAMR,IAGnCA,EAAS,OAAO,EAChBA,EAAS,QAAQ,EACjB,KAAK,UAAUQ,CAAU,EAAI,KAC/B,CAAC,CACH,CACA,iBAAiBb,EAAkB,CACjC,GAAM,CACJ,sBAAAc,CACF,EAAI,KACJ,GAAI,CAACA,GAAyB,CAACA,EAAsB,QACnD,MAAO,GAET,IAAMxT,EAAS0S,EAAiB,EAChC,OAAOc,EAAsB,QAAQxT,CAAM,CAC7C,CACF,EAGIyT,GAAsB,cAAc5T,CAAS,CAC/C,UAAUS,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,YAAcA,EAAM,YACzB,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,qBAAuBA,EAAM,qBAClC,KAAK,sBAAwBA,EAAM,qBACrC,CACA,YAAYoT,EAAqB,CAC/B,MAAM,EACN,KAAK,oBAAsBA,CAC7B,CACA,eAAgB,CACd,KAAK,aAAa,UAAUtP,GAAK,CAC/B,KAAK,aAAeA,EAAE,aACtB,KAAK,gBAAgB,CACvB,CAAC,EACD,KAAK,yBAAyB,CAC5B,sBAAuB,KAAK,wBAAwB,KAAK,IAAI,CAC/D,CAAC,EACD,KAAK,4BAA4B,CAAC,6BAA8B,0BAA0B,EAAG,IAAM,CACjG,KAAK,wBAAwB,CAC/B,CAAC,CACH,CACA,iBAAkB,CAChB,IAAM+H,EAAW,IAAM,KAAK,wBAAwB,EACpD,KAAK,oBAAoB,+BAA+BA,CAAQ,EAChE,KAAK,aAAa,mCAAmCA,CAAQ,CAC/D,CACA,yBAA0B,CACxB,KAAK,wBAAwB,CAC/B,CACA,yBAA0B,CACxB,GAAI,KAAK,oBAAoB,uBAAuB,EAAG,CACrD,KAAK,sCAAsC,EAC3C,KAAK,wBAAwB,EAC7B,IAAMwH,EAAW,KAAK,oBAAoB,eAAe,EACrDA,IAAa,KAAK,cACpB,KAAK,YAAcA,EACnB,KAAK,kBAAkB,qBAAqB,CAC1C,cAAe,KAAK,YACpB,iBAAkB,GAClB,iBAAkB,EACpB,CAAC,EAEL,MACE,KAAK,WAAa,CAEtB,CACA,uCAAwC,CACtC,IAAMzP,EAAgB,KAAK,aAAa,uBAAuB,EACzDuF,EAAYsE,GAAe7J,CAAa,EAC9C,GAAIuF,GAAa,GACf,OAEF,IAAImK,EAAkB,KAAK,oCAAoCnK,EAAY,EAAE,EACvEoK,EAAyB,KAAK,IAAI,YAAY,wBAAwB,EACvED,EAAgB,SAGjBC,IAKFD,EAAkBC,EAJH,CACb,QAASD,EACT,cAAenK,CACjB,CAC+C,GAEjD,KAAK,YAAY,cAAcmK,EAAiB,KAAM,qBAAqB,EAC7E,CACA,oCAAoC7K,EAAe,CACjD,IAAM+K,EAAmB,KAAK,mBAAmB,oBAAoB,EAC/DC,EAAkB,KAAK,mBAAmB,mBAAmB,EAC7DC,EAAmBF,EAAmBC,EAC5C,GAAIC,EAAmBjL,EACrB,MAAO,CAAC,EAEV,IAAMkL,EAAoB,CAAC,GAAG,KAAK,mBAAmB,YAAY,CAAC,EAC7DC,EAAqB,CAAC,GAAG,KAAK,mBAAmB,aAAa,CAAC,EACjEC,EAAa,EACbC,EAAY,EACVC,EAAoB,EACpBT,EAAkB,CAAC,EACrBU,EAAiBN,EAAmBK,EAAoBtL,EAC5D,MAAQqL,EAAYH,EAAkB,QAAUE,EAAaD,EAAmB,SAAWI,EAAiB,GAAG,CAC7G,GAAIH,EAAaD,EAAmB,OAAQ,CAC1C,IAAMK,EAAgBL,EAAmBC,GAAY,EACrDG,GAAkBC,EAAc,eAAe,EAC/CX,EAAgB,KAAKW,CAAa,CACpC,CACA,GAAIH,EAAYH,EAAkB,QAAUK,EAAiB,EAAG,CAC9D,IAAMC,EAAgBN,EAAkBG,GAAW,EACnDE,GAAkBC,EAAc,eAAe,EAC/CX,EAAgB,KAAKW,CAAa,CACpC,CACF,CACA,OAAOX,CACT,CAGA,yBAA0B,CACxB,KAAK,2BAA2B,EAChC,KAAK,gBAAgB,EACrB,KAAK,4BAA4B,EACjC,KAAK,aAAa,iBAAiB,EAAE,gBAAgB,CACvD,CACA,eAAgB,CACd,OAAO,KAAK,UACd,CACA,iBAAkB,CAChB,IAAM1P,EAAgB,KAAK,aAAa,uBAAuB,EACzDsQ,EAAa1O,GAAgB5B,CAAa,EAChD,GAAI,KAAK,aAAesQ,EAAY,CAClC,KAAK,WAAaA,EAClB,IAAM/I,EAAQ,CACZ,KAAM,mBACR,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACF,CACA,4BAA6B,CAC3B,KAAK,+BAA+B,EACpC,WAAW,KAAK,+BAA+B,KAAK,IAAI,EAAG,GAAG,CAChE,CACA,gCAAiC,CAC/B,IAAMzL,EAAS,CACb,wBAAyB,KAAK,0BAA0B,EACxD,sBAAuB,KAAK,aAAa,wBAAwB,CACnE,EACA,KAAK,qBAAqB,kBAAkBA,CAAM,CACpD,CACA,2BAA4B,CAC1B,OAAO,KAAK,oBAAoB,0BAA0B,CAC5D,CAIA,6BAA8B,CAC5B,IAAMiG,EAAc,KAAK,oBAAoB,eAAe,EACtD2B,EAAiB,KAAK,oBAAoB,sBAAsB,EACtE,KAAK,sBAAsB,kBAAkB3B,EAAa2B,CAAc,CAC1E,CACF,EAGI6M,GAAsB,cAAc5U,CAAS,CAC/C,UAAUS,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,aAAeA,EAAM,YAC5B,CACA,YAAY+C,EAAY,CACtB,MAAM,EACN,KAAK,WAAaA,CACpB,CACA,eAAgB,CACd,GAAI,CAAC,KAAK,aACR,OAEF,KAAK,OAAS,CACZ,SAAU,KAAK,WACf,YAAa,KAAK,aAAa,YAAY,KAAK,KAAK,YAAY,EACjE,WAAY,KAAK,aAAa,WAAW,KAAK,KAAK,YAAY,EAC/D,WAAY,KAAK,aAAa,WAAW,KAAK,KAAK,YAAY,CACjE,EACA,KAAK,2BAA2B,uBAAwBqH,GAAS,CAE/D,GADkBA,EAAM,aACT,CACb,KAAK,cAAc,EACnB,MACF,CACA,KAAK,eAAe,CACtB,CAAC,EACD,KAAK,eAAe,IAAM,KAAK,eAAe,CAAC,EACtB,KAAK,IAAI,IAAI,sBAAsB,GAE1D,KAAK,cAAc,CAEvB,CACA,eAAgB,CACd,KAAK,YAAY,cAAc,KAAK,MAAM,CAC5C,CACA,gBAAiB,CACf,KAAK,YAAY,iBAAiB,KAAK,MAAM,CAC/C,CACF,EAGIgK,GAA6B,cAActU,CAAU,CACvD,aAAc,CACZ,MACA;AAAA;AAAA;AAAA,oBAGiB,CAACuU,EAAkB,CAAC,EACrC,KAAK,UAAYtU,CACnB,CACA,eAAgB,CACd,KAAK,UAAU,WAAW,EAAI,CAChC,CACA,eAAgB,CACd,OAAO,KAAK,UAAU,gBAAgB,EAAE,EAC1C,CACA,eAAgB,CACd,KAAK,mBAAmB,CAC1B,CACA,qBAAsB,CACpB,KAAK,iBAAiB,CACxB,CACA,oBAAqB,CACnB,IAAMuR,EAAY,KAAK,cAAc,kBAAkB,EACjDgD,EAAQ,KAAK,QAAQ,WAAW,EAChCC,EAAYC,GAA0BlD,EAAWgD,CAAK,EACtD,CAACG,EAASC,CAAS,EAAI,KAAK,QAAQ,WAAa,CAAC,yBAA0B,qCAAqC,EAAI,CAAC,2BAA4B,wCAAwC,EAC1LC,EAAkBrD,EAAUmD,EAASC,CAAS,EACpD,KAAK,UAAU,SAASJ,EAAO,EAAI,EACnC,KAAK,UAAU,kBAAkB,GAAGK,CAAe,KAAKJ,CAAS,GAAG,CACtE,CACA,UAAUK,EAAUC,EAAsB1J,EAAO,CAC/C,OAAO,KAAK,QAAQ,kBAAkB,CACpC,SAAAyJ,EACA,YAAazJ,EAAM,SACnB,qBAAA0J,EACA,MAAA1J,EACA,OAAQ,kBACV,CAAC,CACH,CACA,KAAKzL,EAAQ,CA+BX,GA9BA,KAAK,QAAUA,EAAO,QACtB,KAAK,OAASA,EAAO,OACrB,KAAK,UAAYA,EAAO,UACxB,KAAK,mBAAmB,EACxB,KAAK,oBAAoB,KAAK,UAAU,gBAAgB,EAAG,CAEzD,SAAUyL,GAAS2J,GAA0B3J,CAAK,EAClD,MAAOA,GAAS,CACd2J,GAA0B3J,CAAK,EAC/B,IAAM0J,EAAuB,KAAK,IAAI,IAAI,sBAAsB,EAC1DE,EAAa,KAAK,UAAU,SAAS,EACvC,KAAK,+BAA+BA,EAAYF,CAAoB,EACvD,KAAK,UAAU,GAAMA,EAAsB1J,GAAS,CAAC,CAAC,IACtD,GACb,KAAK,UAAU,GAAO0J,EAAsB1J,CAAK,EAE1C4J,EACT,KAAK,UAAU,GAAOF,EAAsB1J,CAAK,EAEjD,KAAK,UAAU,GAAM0J,EAAsB1J,GAAS,CAAC,CAAC,CAE1D,CACF,CAAC,EACD,KAAK,oBAAoB,KAAK,QAAS,CACrC,YAAa,KAAK,mBAAmB,KAAK,IAAI,EAC9C,YAAa,KAAK,cAAc,KAAK,IAAI,EACzC,kBAAmB,KAAK,oBAAoB,KAAK,IAAI,CACvD,CAAC,EAC2B,KAAK,IAAI,IAAI,iBAAiB,GACF,OAAO,KAAK,aAAa,GAAM,WACzD,CAC5B,IAAM6J,EAA2B,KAAK,iBAAiB,KAAK,IAAI,EAChE,KAAK,yBAAyB,CAC5B,wBAAyBA,CAC3B,CAAC,EACD,KAAK,oBAAoB,KAAK,QAAS,CACrC,YAAaA,EACb,YAAaA,CACf,CAAC,EACD,KAAK,iBAAiB,CACxB,CACA,KAAK,UAAU,gBAAgB,EAAE,aAAa,WAAY,IAAI,CAChE,CACA,+BAA+BD,EAAYF,EAAsB,CAC/D,OAAOA,IAAyB,KAAK,UAAU,iBAAiB,IAAM,QAAUE,IAAe,SAAW,KAAK,IAAI,eAAe,YAAY,CAChJ,CACA,kBAAmB,CACjB,IAAIhK,EAAa,KAAK,QAAQ,WACxBkK,EAAY,KAAK,aAAa,EACpC,GAAIlK,EACF,GAAI,OAAOkK,GAAc,WAAY,CACnC,IAAMC,EAAc,KAAK,WAAW,eACpC,GAAI,CAAC,KAAK,OACRnK,EAAakK,EAAU7P,EAAA5E,EAAA,GAClB0U,GADkB,CAErB,KAAM,KAAK,QACX,KAAM,KAAK,QAAQ,IACrB,EAAC,MACI,CACL,IAAMxV,EAAS,KAAK,OAAO,mCAAmC,KAAK,OAAO,EAC1EqL,EAAakK,EAAUzU,IAAA,GAClB0U,GACAxV,EACJ,CACH,CACF,MACEqL,EAAakK,GAAa,GAI9B,GAD6B,KAAK,QAAQ,UAAU,EAAE,uBAC5B,CACxB,KAAK,UAAU,YAAY,CAAClK,CAAU,EACtC,KAAK,WAAW,EAAI,EACpB,KAAK,aAAa,EAAI,EACtB,MACF,CACA,GAAI,KAAK,WAAW,aAAc,CAChC,KAAK,aAAaA,CAAU,EAC5B,MACF,CACA,KAAK,WAAWA,CAAU,CAC5B,CACA,cAAe,CACb,OAAI,KAAK,UACA,KAAK,UAAU,UAEjB,KAAK,QAAQ,UAAU,GAAG,iBACnC,CACF,EAGIoK,GAAgB,cAAcrV,CAAU,CAC1C,YAAYiH,EAASmB,EAAQkN,EAAO,CAClC,MACA,iEAAiE,EACjE,KAAK,QAAUrO,EACf,KAAK,OAASmB,EACd,KAAK,MAAQkN,CACf,CACA,eAAgB,CACD,KAAK,OAAO,EACpB,YAAYC,GAAkB,UAAW,KAAK,IAAK,IAAI,CAAC,EAC7D,KAAK,oBAAoB,YAAa9K,GAAK,CACzCA,EAAE,gBAAgB,CACpB,CAAC,EACD,KAAK,cAAc,EACnB,KAAK,gBAAgB,CACvB,CACA,eAAgB,CACd,KAAK,oBAAoB,YAAa,KAAK,YAAY,KAAK,IAAI,CAAC,CACnE,CACA,YAAY+K,EAAW,CACrB,IAAMC,EAAoB,KAAK,OAAO,UAAU,EAAE,mBAClDD,EAAU,aAAa,aAAa,KAAK,MAAO,EAAG,CAAC,EACpD,IAAME,EAAmB,IAAM,CAC7B,GAAI,CACF,IAAMC,EAAW,KAAK,UAAU,KAAK,QAAQ,IAAI,EACjDH,EAAU,aAAa,QAAQ,mBAAoBG,CAAQ,EAC3DH,EAAU,aAAa,QAAQ,aAAcG,CAAQ,CACvD,MAAY,CAAC,CACf,EACA,GAAIF,EAAmB,CACrB,IAAM7V,EAAS,KAAK,IAAI,oBAAoB,CAC1C,QAAS,KAAK,QACd,UAAA4V,CACF,CAAC,EACDC,EAAkB7V,CAAM,CAC1B,MACE8V,EAAiB,CAErB,CACA,iBAAkB,CAChB,IAAMxK,EAAU,KAAK,OAAO,YAAY,KAAK,OAAO,EACpD,KAAK,aAAaA,CAAO,CAC3B,CACF,EAGI0K,GAAyB,cAAcnW,CAAS,CAClD,YAAYmS,EAAM1R,EAAO,CACvB,MAAM,EACN,KAAK,cAAgB,CAAC,EACtB,KAAK,SAAW0R,EAChB,KAAK,MAAQ1R,EACb,KAAK,OAAS0R,EAAK,UAAU,EAC7B,KAAK,QAAUA,EAAK,WAAW,CACjC,CACA,QAAQrR,EAAM,CACZ,KAAK,SAAWA,EAChB,KAAK,gBAAgB,EACrB,KAAK,oBAAoB,EACzB,KAAK,uBAAuB,CAC9B,CACA,qBAAsB,CACpB,IAAMsV,EAAS,KAAK,OAAO,UAAU,EAC/B,CACJ,eAAAC,CACF,EAAID,EACEE,EAAkB,KAAK,MAAM,IAAI,oBAAoB,CACzD,MAAO,KAAK,SAAS,SAAS,EAC9B,KAAM,KAAK,QAAQ,KACnB,KAAM,KAAK,QACX,OAAAF,EACA,OAAQ,KAAK,OACb,SAAU,KAAK,QAAQ,QACzB,CAAC,EACD,KAAK,MAAM,eAAe,kBAE1BC,IAAmB,KAAK,eAAiB,OAAS,KAAK,eAAgBA,EAAgBC,EAAiBC,GAAa,KAAK,SAAS,oBAAoBA,EAAW,EAAI,EAAGA,GAAa,KAAK,SAAS,oBAAoBA,EAAW,EAAK,CAAC,EACzO,KAAK,eAAiBF,CACxB,CACA,iBAAkB,CAChB,IAAMD,EAAS,KAAK,OAAO,UAAU,EACrC,GAAI,CAACA,EAAO,UACV,OAEF,IAAIpH,EACJ,GAAI,OAAOoH,EAAO,WAAc,WAAY,CAC1C,IAAMI,EAAkB,KAAK,MAAM,IAAI,oBAAoB,CACzD,OAAQ,KAAK,OACb,MAAO,KAAK,SAAS,SAAS,EAC9B,OAAAJ,EACA,KAAM,KAAK,QAAQ,KACnB,KAAM,KAAK,QACX,SAAU,KAAK,QAAQ,QACzB,CAAC,EACKK,EAAgBL,EAAO,UAC7BpH,EAASyH,EAAcD,CAAe,CACxC,MACExH,EAASoH,EAAO,UAEdpH,GACF,KAAK,SAAS,cAAcA,CAAM,CAEtC,CACA,wBAAyB,CACvB,IAAMoH,EAAS,KAAK,OAAO,UAAU,EAC/BE,EAAkB,KAAK,MAAM,IAAI,oBAAoB,CACzD,MAAO,KAAK,SAAS,SAAS,EAC9B,KAAM,KAAK,QAAQ,KACnB,KAAM,KAAK,QACX,OAAQ,KAAK,OACb,OAAAF,EACA,SAAU,KAAK,QAAQ,QACzB,CAAC,EACG,KAAK,cAAc,QACrB,KAAK,cAAc,QAAQG,GAAa,KAAK,SAAS,oBAAoBA,EAAW,EAAK,CAAC,EAE7F,KAAK,cAAgB,KAAK,MAAM,eAAe,qBAAqBH,EAAQE,CAAe,EACvF,KAAK,cAAc,QACrB,KAAK,cAAc,QAAQC,GAAa,KAAK,SAAS,oBAAoBA,EAAW,EAAI,CAAC,CAE9F,CAEA,SAAU,CACR,MAAM,QAAQ,CAChB,CACF,EAGIG,GAA8B,cAAc1W,CAAS,CACvD,YAAYmS,EAAM1R,EAAOkI,EAAQnB,EAASmP,EAAS,CACjD,MAAM,EACN,KAAK,SAAWxE,EAChB,KAAK,MAAQ1R,EACb,KAAK,QAAU+G,EACf,KAAK,QAAUmP,CACjB,CACA,QAAQ/U,EAAM,CACZ,KAAK,KAAOA,CACd,CACA,UAAUgK,EAAO,CACf,IAAMlD,EAAMkD,EAAM,IAClB,OAAQlD,EAAK,CACX,KAAKkO,EAAQ,MACX,KAAK,eAAehL,CAAK,EACzB,MACF,KAAKgL,EAAQ,GACX,KAAK,YAAYhL,CAAK,EACtB,MACF,KAAKgL,EAAQ,OACX,KAAK,gBAAgBhL,CAAK,EAC1B,MACF,KAAKgL,EAAQ,IACX,KAAK,aAAahL,CAAK,EACvB,MACF,KAAKgL,EAAQ,UACb,KAAKA,EAAQ,OACX,KAAK,2BAA2BlO,EAAKkD,CAAK,EAC1C,MACF,KAAKgL,EAAQ,KACb,KAAKA,EAAQ,GACb,KAAKA,EAAQ,MACb,KAAKA,EAAQ,KACX,KAAK,oBAAoBhL,EAAOlD,CAAG,EACnC,KACJ,CACF,CACA,oBAAoBkD,EAAOlD,EAAK,CAC1B,KAAK,SAAS,UAAU,IAGxBkD,EAAM,UAAY,KAAK,SAAS,wBAAwB,EAC1D,KAAK,mBAAmBA,CAAK,EAE7B,KAAK,MAAM,kBAAkB,mBAAmBA,EAAOlD,EAAK,KAAK,SAAS,gBAAgB,EAAG,EAAI,EAEnGkD,EAAM,eAAe,EACvB,CACA,mBAAmBA,EAAO,CACxB,GAAI,CAAC,KAAK,MAAM,aACd,OAEF,IAAMiL,EAAU,KAAK,MAAM,aAAa,6BAA6BjL,CAAK,EACtEiL,GACF,KAAK,MAAM,kBAAkB,kBAAkBA,CAAO,CAE1D,CACA,aAAajL,EAAO,CAClB,KAAK,MAAM,kBAAkB,aAAa,KAAK,SAAUA,CAAK,CAChE,CACA,2BAA2BlD,EAAKkD,EAAO,CACrC,GAAM,CACJ,SAAAwC,EACA,MAAA3N,EACA,QAAA+G,CACF,EAAI,KACE,CACJ,IAAAsP,EACA,aAAAC,EACA,aAAAC,CACF,EAAIvW,EACJ,GAAI,CAAA2N,EAAS,UAAU,EAMvB,IAHA4I,EAAa,cAAc,CACzB,KAAM,6BACR,CAAC,EACGC,GAAavO,EAAKoO,EAAI,IAAI,8BAA8B,CAAC,GAC3D,GAAIC,GAAgBD,EAAI,IAAI,sBAAsB,EAChDC,EAAa,yBAAyB,CACpC,sBAAuB,GACvB,mBAAoB,WACtB,CAAC,UACQ3I,EAAS,eAAe,EAAG,CACpC,IAAMzF,EAASyF,EAAS,UAAU,EAC5B8I,EAAa,KAAK,MAAM,aAAa,WAAWvO,EAAQnB,EAAS,GAAIA,EAAQ,yBAAyBmB,CAAM,CAAC,GAAK,KACxHnB,EAAQ,aAAamB,EAAQuO,EAAY,WAAW,CACtD,OAEA9I,EAAS,mBAAmB1F,EAAKkD,CAAK,EAExCoL,EAAa,cAAc,CACzB,KAAM,2BACR,CAAC,EACH,CACA,eAAe,EAAG,CAChB,GAAI,KAAK,SAAS,UAAU,GAAK,KAAK,QAAQ,UAAU,EACtD,KAAK,SAAS,oBAAoB,GAAO,EAAE,QAAQ,UAE/C,KAAK,MAAM,IAAI,IAAI,0BAA0B,EAAG,CAClD,IAAMtO,EAAM,EAAE,SAAWkO,EAAQ,GAAKA,EAAQ,KAC9C,KAAK,MAAM,kBAAkB,mBAAmB,KAAMlO,EAAK,KAAK,SAAS,gBAAgB,EAAG,EAAK,CACnG,MACE,KAAK,SAAS,mBAAmBkO,EAAQ,MAAO,CAAC,EAC7C,KAAK,SAAS,UAAU,GAC1B,EAAE,eAAe,CAIzB,CACA,YAAYhL,EAAO,CACZ,KAAK,SAAS,UAAU,GAC3B,KAAK,SAAS,mBAAmBgL,EAAQ,GAAIhL,CAAK,CAEtD,CAEA,gBAAgBA,EAAO,CACjB,KAAK,SAAS,UAAU,IAC1B,KAAK,SAAS,kBAAkB,EAAI,EACpC,KAAK,SAAS,UAAU,EAAI,EAEhC,CACA,iBAAiBA,EAAO,CAGtB,GAFoBA,EAAM,SACoB,KAAK,MACtB,KAAK,SAAS,UAAU,EACnD,OAEF,IAAMlD,EAAMkD,EAAM,IACdlD,IAAQ,IACV,KAAK,eAAekD,CAAK,GAEzB,KAAK,SAAS,mBAAmBlD,EAAKkD,CAAK,EAC3CA,EAAM,eAAe,EAEzB,CACA,eAAeA,EAAO,CACpB,GAAM,CACJ,IAAAkL,CACF,EAAI,KAAK,MACT,GAAI,CAAC,KAAK,SAAS,UAAU,GAAKA,EAAI,eAAe,EAAG,CACtD,IAAMK,EAAmB,KAAK,QAAQ,WAAW,EAC3CC,EAAe,CAACD,EACtB,GAAIC,GAAgB,CAACN,EAAI,IAAI,wBAAwB,EAAG,CACtD,IAAMxB,EAAuB,KAAK,MAAM,IAAI,IAAI,sBAAsB,EAChE+B,EAAe,KAAK,QAAQ,kBAAkB,CAClD,SAAUD,EACV,YAAaxL,EAAM,SACnB,qBAAA0J,EACA,MAAA1J,EACA,OAAQ,UACV,CAAC,EACGuL,IAAqB,QAAUE,IAAiB,GAClD,KAAK,QAAQ,kBAAkB,CAC7B,SAAU,GACV,YAAazL,EAAM,SACnB,qBAAA0J,EACA,MAAA1J,EACA,OAAQ,UACV,CAAC,CAEL,CACF,CACAA,EAAM,eAAe,CACvB,CACA,SAAU,CACR,MAAM,QAAQ,CAChB,CACF,EAGI0L,GAA2B,cAActX,CAAS,CACpD,YAAYmS,EAAM1R,EAAOkI,EAAQ,CAC/B,MAAM,EACN,KAAK,SAAWwJ,EAChB,KAAK,MAAQ1R,EACb,KAAK,OAASkI,CAChB,CACA,aAAa4O,EAAWtK,EAAY,CAClC,GAAI,CAAAuK,GAA4BvK,CAAU,EAG1C,OAAQsK,EAAW,CACjB,IAAK,QACH,KAAK,cAActK,CAAU,EAC7B,MACF,IAAK,YACL,IAAK,aACH,KAAK,YAAYA,CAAU,EAC3B,MACF,IAAK,WACH,KAAK,oBAAoBA,CAAU,EACnC,MACF,IAAK,WACH,KAAK,WAAWA,CAAU,EAC1B,MACF,IAAK,YACH,KAAK,YAAYA,CAAU,EAC3B,KACJ,CACF,CACA,cAAcA,EAAY,CACxB,GAAI,KAAK,oBAAoB,EAAG,CAC9B,KAAK,oBAAoBA,CAAU,EACnCA,EAAW,eAAe,EAC1B,MACF,CACA,GAAM,CACJ,aAAA+J,EACA,aAAAD,EACA,IAAAD,CACF,EAAI,KAAK,MACHW,EAAaxK,EAAW,SAAWA,EAAW,QAChD8J,GAAgBU,GACdV,EAAa,kBAAkB,KAAK,SAAS,gBAAgB,CAAC,EAAI,GACpEA,EAAa,mBAAmB,EAAI,EAGxC,IAAMW,EAAmB,KAAK,SAAS,YAAYzK,EAAY,aAAa,EAC5E+J,EAAa,cAAcU,CAAgB,EAC3C,IAAMtB,EAAS,KAAK,OAAO,UAAU,EACjCA,EAAO,eACT,OAAO,WAAW,IAAM,CACtB,KAAK,MAAM,mBAAmB,aAAa,IAAM,CAC/CA,EAAO,cAAcsB,CAAgB,CACvC,CAAC,CACH,EAAG,CAAC,GAEqBZ,EAAI,IAAI,iBAAiB,GAAKV,EAAO,kBAAoB,CAACU,EAAI,IAAI,mBAAmB,GACvF,EAAE7J,EAAW,UAAY8J,GAAc,cAAc,EAAE,QAAU,IACxF,KAAK,SAAS,mBAAmB,CAErC,CAEA,qBAAsB,CACpB,GAAI,CAACrV,GAAgB,GAAKiW,GAAkB,UAAU,EACpD,MAAO,GAET,IAAMC,EAA6B,IAAI,KAAK,EAAG,QAAQ,EACjD9E,EAAM8E,EAAY,KAAK,wBAA0B,IACvD,YAAK,wBAA0BA,EACxB9E,CACT,CACA,oBAAoB7F,EAAY,CAC9B,GAAM,CACJ,OAAAtE,EACA,MAAAlI,EACA,SAAA2N,CACF,EAAI,KACE,CACJ,aAAA4I,EACA,mBAAAa,EACA,IAAAf,CACF,EAAIrW,EACE2V,EAASzN,EAAO,UAAU,EAC1BmP,EAAyB1J,EAAS,YAAYnB,EAAY,mBAAmB,EACnF+J,EAAa,cAAcc,CAAsB,EAC7C,OAAO1B,EAAO,qBAAwB,YACxC,OAAO,WAAW,IAAM,CACtByB,EAAmB,aAAa,IAAM,CACpCzB,EAAO,oBAAoB0B,CAAsB,CACnD,CAAC,CACH,EAAG,CAAC,EAEoB,CAAChB,EAAI,IAAI,iBAAiB,GAAK,CAACA,EAAI,IAAI,mBAAmB,GAEnF1I,EAAS,mBAAmB,KAAMnB,CAAU,CAEhD,CACA,YAAYA,EAAY,CACtB,GAAM,CACJ,QAAA8K,EACA,QAAAC,EACA,SAAAC,CACF,EAAIhL,EACEhC,EAASgC,EAAW,OACpB,CACJ,SAAAmB,EACA,MAAA3N,CACF,EAAI,KACE,CACJ,aAAAuW,EACA,aAAAD,EACA,aAAAmB,EACA,IAAApB,CACF,EAAIrW,EACJ,GAAI,KAAK,4BAA4BwM,CAAU,EAC7C,OAEF,IAAMkL,EAASpB,GAAgBA,EAAa,cAAc,EAAE,QAAU,EACtE,GAAI,CAACkB,GAAY,CAACE,EAAQ,CAExB,IAAMC,EAD4BtB,EAAI,IAAI,yBAAyB,GAClB7J,EAAW,iBACtDoL,GAAqBC,GAAiB,GAAKF,IAAgB,CAAChK,EAAS,UAAU,GAAK,CAACmK,GAAsBtN,CAAM,EACvHmD,EAAS,UAAUiK,CAAiB,CACtC,CACA,GAAIJ,GAAYE,GAAU,CAACD,EAAa,cAAc9J,EAAS,gBAAgB,CAAC,EAAG,CACjFnB,EAAW,eAAe,EAC1B,IAAMuL,EAAsBN,EAAa,eAAe,EACxD,GAAIM,EAAqB,CACvB,GAAM,CACJ,OAAA7P,EACA,SAAA+J,EACA,UAAA+F,CACF,EAAID,EAKEE,EAJiBjY,EAAM,YAAY,iBAAiB,CACxD,SAAAiS,EACA,UAAA+F,CACF,CAAC,GACuC,YAAY9P,CAAM,EACtD+P,GAAiB,UAAU,GAC7BA,EAAgB,YAAY,EAE9BR,EAAa,eAAe,CAC1B,OAAAvP,EACA,SAAA+J,EACA,UAAA+F,EACA,kBAAmB,GACnB,4BAA6B,EAC/B,CAAC,CACH,CACF,CACA,GAAI,MAAK,eAAexN,CAAM,EAG9B,IAAI8L,EAAc,CAChB,IAAM4B,EAAW,KAAK,SAAS,gBAAgB,EAC/C,GAAIV,EACFlB,EAAa,wBAAwB4B,CAAQ,MACxC,CACL,IAAMlB,EAAaM,GAAWC,EAC9BjB,EAAa,eAAe4B,EAAUlB,CAAU,CAClD,CACF,CACAT,EAAa,cAAc,KAAK,SAAS,YAAY/J,EAAY,eAAe,CAAC,EACnF,CACA,4BAA4BA,EAAY,CACtC,GAAM,CACJ,aAAA8J,CACF,EAAI,KAAK,MACT,GAAIA,EAAc,CAChB,IAAM6B,EAAc7B,EAAa,iBAAiB,KAAK,SAAS,gBAAgB,CAAC,EAC3E8B,EAAe5L,EAAW,SAAW,GAAKA,EAAW,SAAW,KAAK,MAAM,IAAI,IAAI,gCAAgC,EACzH,GAAI2L,GAAeC,EACjB,MAAO,EAEX,CACA,MAAO,EACT,CACA,eAAe5N,EAAQ,CACrB,OAAOE,GAAuBF,EAAQ,wBAAyB,CAAC,CAClE,CACA,WAAWgC,EAAY,CACrB,GAAI,KAAK,uBAAuBA,CAAU,EACxC,OAEF,IAAM6L,EAAoB,KAAK,SAAS,YAAY7L,EAAY,cAAc,EAC9E,KAAK,MAAM,aAAa,cAAc6L,CAAiB,EACvD,KAAK,MAAM,mBAAmB,eAAe,CAC/C,CACA,YAAY7L,EAAY,CACtB,GAAI,KAAK,uBAAuBA,CAAU,EACxC,OAEF,IAAM8L,EAAqB,KAAK,SAAS,YAAY9L,EAAY,eAAe,EAChF,KAAK,MAAM,aAAa,cAAc8L,CAAkB,EACxD,KAAK,MAAM,mBAAmB,aAAa,CAAC,KAAK,MAAM,CAAC,CAC1D,CACA,uBAAuB,EAAG,CACxB,GAAI,CAAC,EAAE,QAAU,CAAC,EAAE,cAClB,MAAO,GAET,IAAMnX,EAAO,KAAK,SAAS,OAAO,EAC5BoX,EAAqBpX,EAAK,SAAS,EAAE,MAAM,EAC3CqX,EAA4BrX,EAAK,SAAS,EAAE,aAAa,EAC/D,OAAOoX,GAAsBC,CAC/B,CACA,SAAU,CACR,MAAM,QAAQ,CAChB,CACF,EAGIC,GAAsB,cAAclZ,CAAS,CAC/C,YAAYmS,EAAM1R,EAAO,CACvB,MAAM,EACN,KAAK,SAAW0R,EAChB,KAAK,MAAQ1R,EACb,KAAK,OAAS0R,EAAK,UAAU,EAC7B,KAAK,QAAUA,EAAK,WAAW,CACjC,CACA,cAAe,CACb,KAAK,QAAU,KAAK,OAAO,WAAW,KAAK,OAAO,EAClD,KAAK,oBAAoB,KAAK,MAAM,aAAc,CAChD,iBAAkB,IAAM,KAAK,mBAAmB,CAClD,CAAC,CACH,CACA,QAAQvQ,EAAM,CACZ,KAAK,KAAOA,EACZ,KAAK,aAAa,EAClB,KAAK,aAAa,EAClB,KAAK,cAAc,EACnB,KAAK,eAAe,EACpB,KAAK,aAAa,CACpB,CACA,oBAAqB,CACnB,IAAMuX,EAAU,KAAK,OAAO,WAAW,KAAK,OAAO,EAC/C,KAAK,UAAYA,IAGrB,KAAK,QAAUA,EACf,KAAK,aAAa,EAAI,EACxB,CACA,yBAA0B,CACxB,IAAMC,EAAe,KAAK,mBAAmB,EACxCC,GAAU,KAAK,aAAcD,CAAY,IAC5C,KAAK,aAAeA,EACpB,KAAK,eAAe,EACpB,KAAK,cAAc,EAEvB,CACA,cAAe,CACT,KAAK,OAAO,UAAU,EAAE,SAAW,OAGvC,KAAK,aAAe,KAAK,mBAAmB,EAC5C,KAAK,oBAAoB,KAAK,MAAM,aAAc,CAEhD,wBAAyB,KAAK,wBAAwB,KAAK,IAAI,EAK/D,6BAA8B,KAAK,eAAe,KAAK,IAAI,CAC7D,CAAC,EACH,CACA,gBAAiB,CACf,GAAI,CAAC,KAAK,KACR,OAEF,IAAM7W,EAAQ,KAAK,aAAa,EAChC,KAAK,KAAK,MAAM,MAAQ,GAAGA,CAAK,IAClC,CACA,cAAe,CACb,OAAK,KAAK,aAGH,KAAK,aAAa,OAAO,CAACA,EAAO+W,IAAQ/W,EAAQ+W,EAAI,eAAe,EAAG,CAAC,EAFtE,KAAK,OAAO,eAAe,CAGtC,CACA,oBAAqB,CACnB,IAAMC,EAAU,KAAK,OAAO,WAAW,KAAK,OAAO,EAC7CH,EAAe,CAAC,EACtB,GAAIG,IAAY,EACdH,EAAa,KAAK,KAAK,MAAM,MACxB,CACL,IAAII,EAAU,KAAK,OACbC,EAAS,KAAK,OAAO,UAAU,EACrC,QAASxS,EAAI,EAAGuS,GAAWvS,EAAIsS,IAC7BH,EAAa,KAAKI,CAAO,EACzBA,EAAU,KAAK,MAAM,mBAAmB,YAAYA,CAAO,EACvD,GAACA,GAAWlJ,EAASkJ,CAAO,GAG5BC,IAAWD,EAAQ,UAAU,IANKvS,IAMtC,CAIJ,CACA,OAAOmS,CACT,CACA,eAAgB,CACd,GAAI,CAAC,KAAK,KACR,OAEF,IAAMtQ,EAAO,KAAK,yBAAyB,KAAK,YAAY,CAAC,EAC7D,KAAK,KAAK,MAAM,KAAOA,EAAO,IAChC,CACA,aAAc,CACZ,IAAI4Q,EACJ,OAAI,KAAK,MAAM,IAAI,IAAI,WAAW,GAAK,KAAK,aAC1CA,EAAcC,EAAM,KAAK,YAAY,EAErCD,EAAc,KAAK,OAEdA,EAAY,QAAQ,CAC7B,CACA,yBAAyBE,EAAc,CACrC,GAAI,CAAC,KAAK,SAAS,cAAc,GAAK,KAAK,OAAO,UAAU,IAAM,OAChE,OAAOA,EAET,IAAMC,EAAY,KAAK,MAAM,mBAAmB,iBAAiB,EACjE,GAAI,KAAK,OAAO,UAAU,IAAM,QAAS,CACvC,IAAMjQ,EAAY,KAAK,MAAM,mBAAmB,sBAAsB,EACtE,OAAOiQ,EAAYjQ,GAAagQ,GAAgB,EAClD,CACA,OAAOC,GAAaD,GAAgB,EACtC,CACA,aAAa1V,EAAO,CAClB,GAAI,KAAK,UAAY,GAAK,CAACA,EACzB,OAGF,IAAM4V,EADkB,KAAK,MAAM,IAAI,qBAAqB,EACnB,KAAK,QAC9C,KAAK,KAAK,MAAM,OAAS,GAAGA,CAAc,KAC1C,KAAK,KAAK,MAAM,OAAS,GAC3B,CAEA,SAAU,CACR,MAAM,QAAQ,CAChB,CACF,EAeA,IAAIC,GAA0B,yBAC1BC,GAAuB,sBACvBC,GAA6B,4BAC7BC,GAAgC,+BAChCC,GAAwB,uBACxBC,GAAqB,oBACrBC,GAAuB,sBACvBC,GAAwB,uBACxBC,GAAsB,qBACtBC,GAAmB,KAAM,CAC3B,YAAYC,EAAOC,EAAM,CACvB,KAAK,MAAQD,EACb,KAAK,aAAeA,EAAM,aAC1B,KAAK,uBAAyBA,EAAM,uBACpC,KAAK,SAAWC,CAClB,CACA,QAAQC,EAAUC,EAAM,CACtB,KAAK,SAAWD,EAChB,KAAK,KAAOC,EACZ,KAAK,wBAAwB,CAC/B,CACA,yBAA0B,CACnB,KAAK,WAGV,KAAK,WAAa,KAAK,aAAa,kBAAkB,KAAK,SAAS,gBAAgB,CAAC,EACrF,KAAK,cAAgB,KAAK,iBAAiB,EAC3C,KAAK,SAAS,oBAAoBb,GAAyB,KAAK,aAAe,CAAC,EAChF,KAAK,SAAS,oBAAoB,GAAGA,EAAuB,KAAM,KAAK,aAAe,CAAC,EACvF,KAAK,SAAS,oBAAoB,GAAGA,EAAuB,KAAM,KAAK,aAAe,CAAC,EACvF,KAAK,SAAS,oBAAoB,GAAGA,EAAuB,KAAM,KAAK,aAAe,CAAC,EACvF,KAAK,SAAS,oBAAoB,GAAGA,EAAuB,KAAM,KAAK,YAAc,CAAC,EACtF,KAAK,SAAS,oBAAoBC,GAAsB,KAAK,aAAa,EAC1Ea,GAAiB,KAAK,KAAM,KAAK,WAAa,EAAI,GAAO,MAAM,EAC/D,KAAK,SAAS,oBAAoBZ,GAA4B,KAAK,aAAa,CAAC,EACjF,KAAK,mBAAmB,EACxB,KAAK,cAAc,EACrB,CACA,oBAAqB,CACnB,IAAMa,EAAe,KAAK,gBAAgB,EACpCC,EAAe,KAAK,aAAa,EACjCC,EAAQ,CAACD,GAAgBD,EAAa,IACtCG,EAAU,CAACF,GAAgBD,EAAa,MACxCI,EAAW,CAACH,GAAgBD,EAAa,OACzCK,EAAS,CAACJ,GAAgBD,EAAa,KAC7C,KAAK,SAAS,oBAAoBV,GAAoBY,CAAK,EAC3D,KAAK,SAAS,oBAAoBX,GAAsBY,CAAO,EAC/D,KAAK,SAAS,oBAAoBX,GAAuBY,CAAQ,EACjE,KAAK,SAAS,oBAAoBX,GAAqBY,CAAM,CAC/D,CACA,cAAe,CACb,GAAM,CACJ,aAAAC,CACF,EAAI,KAAK,MACT,OAAO,KAAK,aAAe,GAAK,CAAC,CAACA,GAAgB,CAACA,EAAa,kBAAkB,CACpF,CACA,kBAAmB,CACjB,GAAM,CACJ,aAAAA,CACF,EAAI,KAAK,MACT,GAAI,CAAC,KAAK,YAAc,CAACA,EACvB,MAAO,GAET,IAAMC,EAAaD,EAAa,cAAc,EAC9C,OAAOC,EAAW,OAAS,GAAKA,EAAW,MAAMC,GAASC,GAAU,CAAC,EAAmB,CAAa,EAAGD,EAAM,IAAI,CAAC,CACrH,CACA,gCAAiC,CAC3B,KAAK,WAAa,IACpB,KAAK,mBAAmB,EACxB,KAAK,cAAc,EAEvB,CACA,iBAAkB,CAChB,IAAME,EAAQ,KAAK,MAAM,IAAI,IAAI,WAAW,EACxCC,EAAM,GACNC,EAAQ,GACRC,EAAS,GACTC,EAAO,GACLC,EAAU,KAAK,SAAS,gBAAgB,EAAE,OAC1CC,EAAuB,KAAK,MAAM,mBACpCC,EACAC,EACAR,GACFO,EAAUD,EAAqB,YAAYD,CAAO,EAClDG,EAAWF,EAAqB,aAAaD,CAAO,IAEpDE,EAAUD,EAAqB,aAAaD,CAAO,EACnDG,EAAWF,EAAqB,YAAYD,CAAO,GAErD,IAAMI,EAAS,KAAK,aAAa,cAAc,EAAE,OAAOX,GAAS,KAAK,aAAa,sBAAsB,KAAK,SAAS,gBAAgB,EAAGA,CAAK,CAAC,EAC3IS,IACHH,EAAO,IAEJI,IACHN,EAAQ,IAEV,QAASQ,EAAI,EAAGA,EAAID,EAAO,QACrB,EAAAR,GAAOC,GAASC,GAAUC,GADGM,IAAK,CAItC,IAAMZ,EAAQW,EAAOC,CAAC,EAChBC,EAAW,KAAK,aAAa,iBAAiBb,CAAK,EACnDc,EAAS,KAAK,aAAa,eAAed,CAAK,EACjD,CAACG,GAAO,KAAK,MAAM,iBAAiB,QAAQU,EAAU,KAAK,SAAS,gBAAgB,CAAC,IACvFV,EAAM,IAEJ,CAACE,GAAU,KAAK,MAAM,iBAAiB,QAAQS,EAAQ,KAAK,SAAS,gBAAgB,CAAC,IACxFT,EAAS,IAEP,CAACC,GAAQG,GAAWT,EAAM,QAAQ,QAAQS,CAAO,EAAI,IACvDH,EAAO,IAEL,CAACF,GAASM,GAAYV,EAAM,QAAQ,QAAQU,CAAQ,EAAI,IAC1DN,EAAQ,GAEZ,CACA,MAAO,CACL,IAAAD,EACA,MAAAC,EACA,OAAAC,EACA,KAAAC,CACF,CACF,CACA,eAAgB,CACd,GAAI,KAAK,MAAM,QAAQ,YAAY,EACjC,OAEF,IAAMS,EAA4B,KAAK,0BAA0B,EAC7D,KAAK,iBAAmB,CAACA,IAC3B,KAAK,gBAAkB,KAAK,MAAM,QAAQ,YAAY,KAAK,eAAe,GAExEA,GACF,KAAK,mBAAmB,EAE1B,KAAK,SAAS,oBAAoBlC,GAAuB,CAAC,CAAC,KAAK,eAAe,CACjF,CACA,2BAA4B,CAC1B,IAAMmC,EAAM,KAAK,MAAM,IACjBjB,EAAa,KAAK,aAAa,cAAc,EAC7CkB,EAAYlB,EAAW,OAC7B,GAAI,KAAK,WAAa,GAAKkB,EAAY,EACrC,MAAO,GAET,IAAMC,EAAYC,EAAMpB,CAAU,EAC5BqB,EAAe,KAAK,SAAS,gBAAgB,EAC7CC,EAAwBL,EAAI,IAAI,kBAAkB,GAAK,CAAC,KAAK,SAAS,qBAAqB,EAC3FM,EAAyBN,EAAI,IAAI,mBAAmB,EACtDO,EAAoBN,IAAc,GAAK,CAAC,KAAK,SAAS,UAAU,IAAMI,GAAyBC,GACnG,GAAI,KAAK,cAAe,CAEtB,IAAME,EADmBzB,EAAW,CAAC,EAAE,OAAS,GACL,KAAK,aAAa,sBAAsBqB,EAAcrB,EAAW,CAAC,CAAC,EAC9G,KAAK,SAAS,oBAAoBnB,GAA+B4C,CAAc,EAC/ED,EAAoBL,EAAU,OAAS,CACzC,CACA,OAAOK,GAAqBL,EAAU,QAAU,MAAQ,KAAK,aAAa,kBAAkBA,CAAS,GAAK,KAAK,aAAa,kBAAkBA,EAAWE,CAAY,CACvK,CACA,oBAAqB,CACnB,IAAMJ,EAAM,KAAK,MAAM,IACjBS,EAAgBN,EAAM,KAAK,aAAa,cAAc,CAAC,EAAE,KAEzDO,EADsBV,EAAI,IAAI,kBAAkB,GAAKW,EAASF,CAAa,EAC9C,EAAe,EAC9C,KAAK,iBAAmB,KAAK,gBAAgB,QAAQ,IAAMC,IAC7D,KAAK,gBAAkB,KAAK,MAAM,QAAQ,YAAY,KAAK,eAAe,GAEvE,KAAK,kBACR,KAAK,gBAAkB,KAAK,uBAAuB,sBAAsBA,CAAI,GAE/E,KAAK,gBAAgB,QAAQ,KAAK,QAAQ,CAC5C,CACA,SAAU,CACR,KAAK,MAAM,QAAQ,YAAY,KAAK,eAAe,CACrD,CACF,EAGIE,GAAW,UACXC,GAAkB,sBAClBC,GAAoB,wBACpBC,GAAiB,gBACjBC,GAA8B,6BAC9BC,GAA4B,2BAC5BC,GAA8B,6BAC9BC,GAAmB,kBACnBC,GAAqB,oBACrBC,GAAsB,EACtBC,IAA0B,IAAM,CAClC,IAAIA,EAAY,MAAMA,WAAkBC,CAAS,CAC/C,YAAYC,EAAQC,EAAStD,EAAOuD,EAAS,CAC3C,MAAM,EACN,KAAK,OAASF,EACd,KAAK,QAAUC,EACf,KAAK,MAAQtD,EACb,KAAK,QAAUuD,EACf,KAAK,iBAAmB,KACxB,KAAK,oBAAsB,KAC3B,KAAK,uBAAyB,KAC9B,KAAK,eAAiB,KACtB,KAAK,yBAA2B,KAChC,KAAK,4BAA8B,KACnC,KAAK,oBAAsB,GAC3B,KAAK,wBAA0B,CAAC,EAChC,KAAK,WAAaF,EAAO,MAAM,EAAI,IAAMH,KACzC,KAAK,eAAiBM,GAAc,KAAK,OAAO,MAAM,CAAC,EAClDxD,EAAM,IAAI,IAAI,mBAAmB,IACpC,KAAK,SAAW,IAElB,KAAK,mBAAmB,EACxB,KAAK,YAAY,EACjB,KAAK,qBAAqB,EAAK,CACjC,CACA,oBAAqB,CACnB,OAAO,KAAK,MAAM,aAAa,mBAAmB,KAAK,YAAY,CACrE,CACA,aAAc,CACZ,KAAK,oBAAsB,IAAIyD,GAAoB,KAAM,KAAK,KAAK,EACnE,KAAK,eAAe,IAAM,CACxB,KAAK,qBAAqB,QAAQ,EAClC,KAAK,oBAAsB,IAC7B,CAAC,EACD,KAAK,uBAAyB,IAAIC,GAAuB,KAAM,KAAK,KAAK,EACzE,KAAK,eAAe,IAAM,CACxB,KAAK,wBAAwB,QAAQ,EACrC,KAAK,uBAAyB,IAChC,CAAC,EACD,KAAK,yBAA2B,IAAIC,GAAyB,KAAM,KAAK,MAAO,KAAK,MAAM,EAC1F,KAAK,eAAe,IAAM,CACxB,KAAK,0BAA0B,QAAQ,EACvC,KAAK,yBAA2B,IAClC,CAAC,EACD,KAAK,4BAA8B,IAAIC,GAA4B,KAAM,KAAK,MAAO,KAAK,OAAQ,KAAK,QAAS,KAAK,OAAO,EAC5H,KAAK,eAAe,IAAM,CACxB,KAAK,6BAA6B,QAAQ,EAC1C,KAAK,4BAA8B,IACrC,CAAC,EACG,KAAK,OAAO,iBAAiB,IAC/B,KAAK,qBAAqB,EAC1B,KAAK,eAAe,IAAM,CACxB,KAAK,sBAAsB,CAC7B,CAAC,GAE2B,KAAK,MAAM,cAAgB,KAAK,MAAM,IAAI,IAAI,sBAAsB,IAEhG,KAAK,iBAAmB,IAAI7D,GAAiB,KAAK,MAAO,IAAI,EAC7D,KAAK,eAAe,IAAM,CACxB,KAAK,kBAAkB,QAAQ,EAC/B,KAAK,iBAAmB,IAC1B,CAAC,EAEL,CACA,qBAAqB8D,EAAOC,EAAsB,CAChD,IAAMC,EAAkB,IAAM,CAC5B,IAAMC,EAAS,KAAK,OAAO,UAAU,EAC/BC,EAAO,KAAK,QAAQ,KAC1B,GAAID,EAAO,cAAgBE,EAAQD,CAAI,EACrC,OAAOE,GAAoBF,EAAMD,EAAO,aAAc,KAAK,OAAO,2BAA2B,CAAC,EAEhG,IAAMI,EAAcJ,EAAO,mBAC3B,OAAII,EACKA,EAAY,KAAK,MAAM,IAAI,oBAAoB,CACpD,SAAU,OACV,OAAQ,KAAK,OAAO,UAAU,EAC9B,OAAQ,KAAK,OACb,SAAU,KAAK,aAAa,SAC5B,KAAM,KAAK,QACX,KAAM,KAAK,QAAQ,KACnB,MAAO,KAAK,MACZ,eAAgB,KAAK,cACvB,CAAC,CAAC,EAEG,IACT,EACMC,EAAyB,KAAK,MAAM,IAAI,IAAI,iBAAiB,IAAM,gBACrE,CAACP,GAAwBO,GAA0B,CAAC,KAAK,eAAe,IAC1EP,EAAuB,IAAM,CAC3B,IAAM3D,EAAO,KAAK,OAAO,EACnBmE,EAASnE,EAAK,SAAS,SAAW,EAAIA,EAAOA,EAAK,cAAc,gBAAgB,EACtF,OAAKmE,EAGEA,EAAO,YAAcA,EAAO,YAF1B,EAGX,GAEF,IAAMC,EAAc,CAClB,UAAW,IAAM,KAAK,OACtB,UAAW,IAAM,KAAK,OAAO,UAAU,EACvC,YAAa,IAAM,KAAK,aAAa,SACrC,WAAY,IAAM,KAAK,QACvB,OAAQ,IAAM,KAAK,OAAO,EAC1B,YAAa,IAAM,OACnB,gBAAiBV,GAAS,KAAO,IAAMA,EAAQE,EAE/C,kBAAmB,IAAM,KAAK,eAC9B,qBAAAD,CACF,EACA,KAAK,eAAiB,IAAIU,GAAeD,EAAa,KAAK,KAAK,CAClE,CACA,uBAAwB,CACjB,KAAK,iBAGV,KAAK,eAAe,QAAQ,EAC5B,KAAK,eAAiB,KACxB,CACA,QAAQE,EAAMtE,EAAMuE,EAAcC,EAAaC,EAAc,CAC3D,KAAK,SAAWH,EAChB,KAAK,KAAOtE,EACZ,KAAK,YAAcwE,EACnB,KAAK,WAAW,EAChB,KAAK,cAAc,KAAK,mBAAmB,EAC3C,KAAK,sBAAsB,EAC3B,KAAK,YAAY,EACjB,KAAK,0BAA0B,EAC/B,KAAK,wBAAwB,EAC7B,KAAK,cAAc,EACnB,KAAK,kBAAkB,EACvB,KAAK,gBAAgBD,CAAY,EACjC,KAAK,0BAA0B,EAC/B,KAAK,oBAAoB,EACzB,KAAK,qBAAqB,QAAQvE,CAAI,EACtC,KAAK,wBAAwB,QAAQsE,CAAI,EACzC,KAAK,gBAAgB,eAAe,EACpC,KAAK,6BAA6B,QAAQ,KAAK,IAAI,EAC/C,KAAK,kBACP,KAAK,iBAAiB,QAAQA,EAAMtE,CAAI,EAEtCyE,GAAgB,KAAK,eAAe,EACtC,KAAK,aAAa,EAElB,KAAK,UAAU,EAEb,KAAK,wBAAwB,SAC/B,KAAK,wBAAwB,QAAQC,GAAQA,EAAK,CAAC,EACnD,KAAK,wBAA0B,CAAC,EAEpC,CACA,gBAAgBH,EAAc,CAE5B,GADA,KAAK,aAAe,KAAK,OAAO,aAAa,EACzC,CAAC,KAAK,cAAgB,CAACA,EACzB,OAEF,IAAMI,EAAcJ,EAAa,cAC3BK,EAAe,KAAK,MAAM,IAAI,oBAAoB,KAAK,OAAO,EAAE,OAChEC,EAAgBC,GAAe,CAInC,GAHI,KAAK,SAGL,CAAC,KAAK,QAAQ,EAChB,OAEF,GAAM,CACJ,WAAAC,EACA,cAAAC,EACA,kBAAAC,EACA,eAAAC,CACF,EAAIC,GAAgBR,CAAW,EACzBS,EAAcL,EAAaC,EAAgBC,EAAoBC,EAE/DG,EADgBd,EAAa,aACAa,EACnC,GAAIN,EAAc,EAAG,CACnB,IAAMQ,EAAM,KAAK,MAAM,IAAI,YAAY,EACjCC,EAAc,CAACD,GAAO,CAACA,EAAI,SAASf,CAAY,EAChDiB,EAAuBH,GAAc,EAC3C,GAAIE,GAAeC,EAAsB,CACvC,OAAO,WAAW,IAAMX,EAAcC,EAAc,CAAC,EAAG,CAAC,EACzD,MACF,CACF,CACA,IAAMW,EAAY,KAAK,IAAIJ,EAAYT,CAAY,EACnD,KAAK,QAAQ,iBAAiBa,EAAW,KAAK,MAAM,CACtD,EACMC,EAAW,IAAMb,EAAc,CAAC,EACtCa,EAAS,EACT,IAAMC,EAAwB,KAAK,MAAM,sBAAsB,cAAcpB,EAAcmB,CAAQ,EACnG,KAAK,eAAe,IAAM,CACxBC,EAAsB,EACtB,KAAK,QAAQ,iBAAiB,OAAQ,KAAK,MAAM,CACnD,CAAC,CACH,CACA,iBAAkB,CAChB,OAAO,KAAK,OAAO,UAAU,EAAE,cAAgB,UACjD,CACA,eAAgB,CACd,OAAO,KAAK,UACd,CACA,sBAAuB,CACrB,OAAO,KAAK,cACd,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,gBAAiB,CACf,IAAM9B,EAAS,KAAK,OAAO,UAAU,EACrC,OAAOA,EAAO,cAAgB,MAAQA,EAAO,sBAAwB,IACvE,CACA,mBAAoB,CAClB,OAAO,KAAK,gBAAkB,KAAK,KACrC,CACA,UAAU+B,EAA+B,GAAO,CAC9C,IAAMC,EAAiB,KAAK,kBAAkB,EAC1CC,EACJ,GAAI,KAAK,QAAQ,KAAM,CACrB,IAAMC,EAAS,KAAK,yBAAyB,EAC7CD,EAAc,KAAK,MAAM,qBAAqB,8BAA8B,KAAK,OAAO,UAAU,EAAGC,CAAM,CAC7G,SAAW,KAAK,eAAe,EAAG,CAChC,IAAMA,EAAS,KAAK,yBAAyB,EAC7CD,EAAc,KAAK,MAAM,qBAAqB,uBAAuB,KAAK,OAAO,UAAU,EAAGC,CAAM,CACtG,CACA,KAAK,SAAS,iBAAiBD,EAAaD,EAAgBD,CAA4B,EACxF,KAAK,kBAAkB,cAAc,CACvC,CACA,mBAAoB,CAClB,IAAM/B,EAAS,KAAK,OAAO,UAAU,EACrC,KAAK,iBAAmB,KAAK,iBAAiBA,EAAO,iBAAiB,EACtE,KAAK,eAAiB,KAAK,iBAAiBA,EAAO,OAAO,EAC1D,KAAK,iBAAmB,KAAK,iBAAiBA,EAAO,SAAS,EAC9D,KAAK,SAAS,oBAAoB,KAAK,gBAAgB,EACvD,KAAK,SAAS,oBAAoB,KAAK,gBAAgB,EACvD,KAAK,SAAS,kBAAkB,KAAK,cAAc,CACrD,CACA,gBAAiB,CAEf,OADqB,KAAK,MAAM,IAAI,IAAI,yBAAyB,GAAK,KAAK,OAAO,aAAa,CAEjG,CAEA,iBAAiBH,EAAO,CAItB,OAHsB,KAAK,QAAQ,WAAa,KAEpB,GADb,OAAOA,GAAU,YACcA,IAAU,EAE1D,CACA,sBAAuB,CACrB,IAAMG,EAAS,KAAK,OAAO,UAAU,EAC/BmC,EAAmB,KAAK,kBAAoB,KAAK,iBAAiBnC,EAAO,iBAAiB,EAC1FoC,EAAiB,KAAK,gBAAkB,KAAK,iBAAiBpC,EAAO,OAAO,EAC5EqC,EAAmB,KAAK,kBAAoB,KAAK,iBAAiBrC,EAAO,SAAS,EAClFsC,EAAoB,KAAK,cAAgB,KAAK,OAAO,aAAa,EACxE,OAAOH,GAAoBC,GAAkBC,GAAoBC,CACnE,CAEA,aAAaC,EAAM,KAAMC,EAAkB,GAAOC,EAAQ,KAAM,CAC9D,GAAM,CACJ,YAAAC,CACF,EAAI,KAAK,MACT,GAAI,GAAC,KAAK,eAAe,GAAK,KAAK,SAAW,CAACA,GAG/C,IAAI,CAAC,KAAK,SAAU,CAClB,KAAK,wBAAwB,KAAK,IAAM,CACtC,KAAK,aAAaH,EAAKC,EAAiBC,CAAK,CAC/C,CAAC,EACD,MACF,CACAC,EAAY,aAAa,KAAMH,EAAKC,EAAiBC,CAAK,EAC5D,CACA,WAAWE,EAASV,EAAa,CAC/B,KAAK,gBAAkBA,EACnB,KAAK,UAAYU,IAGrB,KAAK,QAAUA,EACf,KAAK,kBAAkB,cAAc,EACvC,CAEA,kBAAkBC,EAAS,GAAO,CAC5B,KAAK,MAAM,IAAI,IAAI,UAAU,IAAM,UACrC,KAAK,QAAQ,YAAYA,CAAM,EAE/B,KAAK,YAAYA,CAAM,CAE3B,CACA,qBAAsB,CACf,KAAK,SAGV,KAAK,oBAAoB,CAC3B,CAMA,YAAYA,EAAS,GAAO,CAC1B,GAAM,CACJ,YAAAF,CACF,EAAI,KAAK,MACT,MAAI,CAAC,KAAK,SAAW,CAACA,EACb,GAEFA,EAAY,YAAY,KAAME,CAAM,CAC7C,CACA,0BAA2B,CAwBzB,OAvBY,KAAK,MAAM,IAAI,oBAAoB,CAC7C,MAAO,KAAK,MACZ,eAAgB,KAAK,eACrB,SAAU,IAAM,KAAK,QAAQ,yBAAyB,KAAK,MAAM,EACjE,SAAU/C,GAAS,KAAK,MAAM,aAAa,SAAS,KAAK,QAAS,KAAK,OAAQA,CAAK,EACpF,YAAa,KAAK,YAAY,KAAK,IAAI,EACvC,KAAM,KAAK,QAAQ,KACnB,KAAM,KAAK,QACX,OAAQ,KAAK,OAAO,UAAU,EAC9B,OAAQ,KAAK,OAAO,UAAU,EAC9B,OAAQ,KAAK,OACb,YAAa,KAAK,YAAY,KAAK,IAAI,EACvC,UAAW,KAAK,OAAO,EACvB,eAAgB,KAAK,SAAS,iBAAiB,EAC/C,mBAAoB,CAACgD,EAAmBC,EAAiBjD,EAAOkD,IAA6B,KAAK,mBAAmBF,EAAmBC,EAAiBC,CAAwB,EACjL,WAAY,CAAClD,EAAOC,IAAyB,CACvC,KAAK,gBACP,KAAK,sBAAsB,EAE7B,KAAK,qBAAqBD,EAAOC,CAAoB,EACrD,KAAK,gBAAgB,eAAe,CACtC,CACF,CAAC,CAEH,CACA,qBAAsB,CACf,KAAK,SAGV,KAAK,MAAM,aAAa,oBAAoB,IAAI,CAClD,CACA,oBAAqB,CACd,KAAK,SAGV,KAAK,MAAM,aAAa,mBAAmB,IAAI,CACjD,CACA,cAAc2C,EAAO,CACUA,EAAM,SAAW,KAAK,QAEjD,KAAK,YAAY,CAAC,CAAC,CAEvB,CACA,qBAAqBP,EAAQ,CACvB,KAAK,qBAAqB,EAC5B,KAAK,SAAS,aAAa,IAAI,EAE/B,KAAK,YAAYA,CAAM,CAE3B,CAOA,YAAYA,EAAQ,CAClB,GAAI,KAAK,qBAAuB,KAAK,QACnC,OAEF,IAAMlC,EAAS,KAAK,OAAO,UAAU,EAC/BgD,EAAUd,GAAU,MAAQ,CAAC,CAACA,EAAO,QACrCe,EAAgBf,GAAU,MAAQ,CAAC,CAACA,EAAO,eAAiB,CAAC,CAAClC,EAAO,kBACrEkD,EAAkBlD,EAAO,OAAS,MAAQA,EAAO,aAAe,MAAQA,EAAO,cAAgB,KAC/FmD,EAAejB,GAAUA,EAAO,cAAgBgB,GAAmBF,EACnEI,EAAkB,CAAC,CAAC,KAAK,SACzBC,EAAkB,KAAK,qBAAqBD,CAAe,EAC3DE,EAAoBH,GAAgBE,EAC1C,GAAKD,EAGL,IAAIE,EAAmB,CACrB,KAAK,UAAUN,CAAO,EACtB,IAAMO,EAAyB,KAAK,MAAM,eAAe,wCAAwC,EAC/E,CAACN,GAAiB,CAACM,IAA2B,KAAK,MAAM,IAAI,IAAI,uBAAuB,GAAKvD,EAAO,wBAEpH,KAAK,UAAU,EAEjB,KAAK,wBAAwB,gBAAgB,EAC7C,KAAK,wBAAwB,uBAAuB,CACtD,CACA,KAAK,gBAAgB,eAAe,EACpC,KAAK,wBAAwB,oBAAoB,EACnD,CAGA,oBAAoBwD,EAA4B,GAAOC,EAAW,GAAO,CACvE,KAAK,MAAM,aAAa,oBAAoB,KAAMD,EAA2BC,CAAQ,CACvF,CAEA,UAAUC,EAAQ,CAChB,IAAMC,EAAgBD,GAAQ,eAAiBA,GAAQ,WACjDE,EAAeF,GAAQ,cAAgBA,GAAQ,UACrD,KAAK,YAAY,eAAgBC,EAAeC,CAAY,CAC9D,CACA,YAAYC,EAASF,EAAeC,EAAc,CAChD,GAAI,CAAC,KAAK,SACR,OAEF,IAAME,EAAW,WAAWD,CAAO,GAC7BE,EAAoB,WAAWF,CAAO,aACtC,CACJ,IAAAhG,CACF,EAAI,KAAK,MACJ8F,IACHA,EAAgB9F,EAAI,IAAI,mBAAmB,GAExCqC,EAAQ0D,CAAY,IACvBA,EAAe/F,EAAI,IAAI,kBAAkB,GAE3C,KAAK,SAAS,oBAAoBiG,EAAU,EAAI,EAChD,KAAK,SAAS,oBAAoBC,EAAmB,EAAK,EAC1D,KAAK,MAAM,mBAAmB,aAAa,IAAM,CAC/C,OAAO,WAAW,IAAM,CACjB,KAAK,QAAQ,IAGlB,KAAK,SAAS,oBAAoBD,EAAU,EAAK,EACjD,KAAK,SAAS,oBAAoBC,EAAmB,EAAI,EACzD,KAAK,KAAK,MAAM,WAAa,oBAAoBH,CAAY,KAC7D,OAAO,WAAW,IAAM,CACjB,KAAK,QAAQ,IAGlB,KAAK,SAAS,oBAAoBG,EAAmB,EAAK,EAC1D,KAAK,KAAK,MAAM,WAAa,GAC/B,EAAGH,CAAY,EACjB,EAAGD,CAAa,CAClB,CAAC,CACH,CACA,aAAalB,EAAO,CAClB,GAAI,CAAC,KAAK,SACR,OAEF,IAAMuB,EAAS,KAAK,MAAM,kBAAkB,SAAS,KAAK,gBAAgB,CAAC,EACvDvB,EAAM,MAAMuB,CAAM,GAEpC,KAAK,YAAY,WAAW,CAEhC,CACA,gBAAiB,CACf,OAAO,KAAK,OAAO,eAAe,KAAK,OAAO,CAChD,CACA,sBAAuB,CACrB,OAAO,KAAK,OAAO,qBAAqB,CAC1C,CACA,YAAYnE,EAAO,CACjB,OAAO,KAAK,mBAAmBA,CAAK,GAAKA,CAC3C,CACA,mBAAmBA,EAAO,CACxB,OAAO,KAAK,MAAM,aAAa,YAAY,KAAK,OAAQ,KAAK,QAASA,CAAK,CAC7E,CACA,qBAAqBoE,EAAe,CAClC,IAAMC,EAAW,KAAK,MAChBC,EAAoB,KAAK,eAG/B,OAFA,KAAK,MAAQ,KAAK,QAAQ,yBAAyB,KAAK,MAAM,EAC9D,KAAK,eAAiB,KAAK,mBAAmB,KAAK,KAAK,EACpDF,EACK,CAAC,KAAK,eAAeC,EAAU,KAAK,KAAK,GAAK,KAAK,gBAAkBC,EAEvE,EACT,CACA,eAAeC,EAAMC,EAAM,CACzB,IAAMrE,EAAS,KAAK,OAAO,UAAU,EACrC,OAAOA,EAAO,OAASA,EAAO,OAAOoE,EAAMC,CAAI,EAAID,IAASC,CAC9D,CACA,SAAU,CACR,OAAO,KAAK,QACd,CACA,UAAW,CACT,OAAO,KAAK,KACd,CACA,YAAa,CACX,IAAMC,EAAU,KAAK,OAAO,EAC5B,KAAK,MAAM,IAAI,WAAWA,EAASnF,GAAU,uBAAwB,IAAI,EACzE,KAAK,eAAe,IAAM,KAAK,MAAM,IAAI,WAAWmF,EAASnF,GAAU,uBAAwB,IAAI,CAAC,CACtG,CACA,YAAYoF,EAAUC,EAAW,CAY/B,OAXc,KAAK,MAAM,IAAI,oBAAoB,CAC/C,KAAMA,EACN,KAAM,KAAK,QACX,KAAM,KAAK,QAAQ,KACnB,MAAO,KAAK,MACZ,OAAQ,KAAK,OACb,OAAQ,KAAK,OAAO,UAAU,EAC9B,UAAW,KAAK,QAAQ,UACxB,MAAOD,EACP,SAAU,KAAK,QAAQ,QACzB,CAAC,CAEH,CACA,iBAAiB9B,EAAO,CACtB,KAAK,6BAA6B,iBAAiBA,CAAK,CAC1D,CACA,UAAUA,EAAO,CACf,KAAK,6BAA6B,UAAUA,CAAK,CACnD,CACA,aAAagC,EAAWC,EAAY,CAClC,KAAK,0BAA0B,aAAaD,EAAWC,CAAU,CACnE,CACA,QAAS,CACP,OAAO,KAAK,IACd,CACA,oBAAqB,CACnB,OAAO,KAAK,oBAAoB,mBAAmB,CACrD,CACA,eAAgB,CACT,KAAK,UAGV,KAAK,qBAAqB,cAAc,CAC1C,CACA,2BAA4B,CACrB,KAAK,OAGV,KAAK,oBAAoB,EACzB,KAAK,0BAA0B,EACjC,CACA,2BAA4B,CAC1B,GAAM,CACJ,SAAAxI,EACA,OAAAmD,EACA,MAAArD,CACF,EAAI,KACJ2I,GAA0BzI,EAAUmD,EAAQrD,EAAM,kBAAkB,CACtE,CACA,qBAAsB,CACpB,IAAM4I,EAAS,KAAK,MAAM,mBAAmB,gBAAgB,KAAK,MAAM,EACxEC,GAAiB,KAAK,OAAO,EAAGD,CAAM,CACxC,CACA,qBAAsB,CACpB,OAAO,KAAK,OAAO,oBAAoB,KAAK,OAAO,CACrD,CACA,gBAAiB,CACf,OAAO,KAAK,qBAAqB,eAAe,CAClD,CACA,WAAY,CACV,OAAO,KAAK,MACd,CACA,YAAa,CACX,OAAO,KAAK,OACd,CACA,eAAgB,CACd,OAAO,KAAK,WACd,CACA,iBAAkB,CAChB,OAAO,KAAK,YACd,CACA,WAAY,CACV,OAAO,KAAK,OACd,CAEA,mBAAmBrC,EAAKE,EAAQ,KAAM,CACpC,GAAI,CAAC,KAAK,SAAU,CAClB,KAAK,wBAAwB,KAAK,IAAM,CACtC,KAAK,mBAAmBF,EAAKE,CAAK,CACpC,CAAC,EACD,MACF,CACI,KAAK,MAAM,IAAI,IAAI,UAAU,IAAM,UACrC,KAAK,QAAQ,gBAAgBF,EAAK,IAAI,EAEtC,KAAK,aAAaA,EAAK,GAAME,CAAK,CAEtC,CACA,YAAa,CACX,OAAO,KAAK,OACd,CACA,gBAAiB,CACf,MAAO,CACL,SAAU,KAAK,aAAa,SAC5B,UAAW,KAAK,aAAa,SAC/B,CACF,CACA,gCAAiC,CAC1B,KAAK,UAGN,KAAK,kBACP,KAAK,iBAAiB,+BAA+B,CAEzD,CACA,yBAA0B,CACnB,KAAK,UAGN,KAAK,kBACP,KAAK,iBAAiB,wBAAwB,CAElD,CACA,yBAA0B,CACxB,OAAO,KAAK,kBAAoB,IAClC,CACA,UAAUqC,EAAoB,GAAO,CACnC,KAAK,MAAM,aAAa,eAAe,CACrC,SAAU,KAAK,gBAAgB,EAAE,SACjC,OAAQ,KAAK,OACb,UAAW,KAAK,QAAQ,UACxB,kBAAAA,CACF,CAAC,CACH,CACA,mBAAoB,CAClB,KAAK,mBAAmB,EACxB,KAAK,cAAc,EACf,KAAK,kBACP,KAAK,iBAAiB,wBAAwB,CAElD,CACA,2BAA4B,CAC1B,GAAI,CAAC,KAAK,SACR,OAEF,IAAMC,EAAmB,KAAK,OAAO,mBAAmB,EACxD,KAAK,SAAS,oBAAoBlG,GAA6BkG,CAAgB,CACjF,CACA,yBAA0B,CACxB,GAAI,CAAC,KAAK,SACR,OAEF,IAAMC,EAAiB,KAAK,OAAO,iBAAiB,EACpD,KAAK,SAAS,oBAAoBlG,GAA2BkG,CAAc,CAC7E,CACA,cAAcvC,EAAO,CACnB,GAAI,KAAK,MAAM,IAAI,IAAI,mBAAmB,EACxC,OAEF,IAAMwC,EAAc,KAAK,MAAM,aAAa,cAAc,KAAK,YAAY,EAC3E,GAAI,CAAC,KAAK,SAAU,CACdA,GAAexC,GAAO,oBACxB,KAAK,oBAAsBA,GAE7B,MACF,CAGA,GAFA,KAAK,oBAAsB,OAC3B,KAAK,SAAS,oBAAoB7D,GAAgBqG,CAAW,EACzDA,GAAexC,GAASA,EAAM,kBAAmB,CACnD,IAAIyC,EAAU,KAAK,SAAS,oBAAoB,EAChD,GAAI,KAAK,QAAS,CAChB,IAAMC,EAAe,KAAK,MAAM,aAAa,sBAAsBD,EAAS,KAAM,EAAI,EAClFC,EAAa,SACfD,EAAUC,EAAa,CAAC,EAE5B,CACAD,EAAQ,MAAM,CACZ,cAAe,CAAC,CAACzC,EAAM,2BACzB,CAAC,CACH,CACA,IAAM2C,EAAc,KAAK,MAAM,IAAI,IAAI,UAAU,IAAM,UACnD,CAACH,GAAe,CAACG,GAAe,KAAK,SACvC,KAAK,kBAAkB,EAErBH,GACF,KAAK,QAAQ,oBAAoB,CAErC,CACA,oBAAqB,CACnB,KAAK,aAAe,CAClB,SAAU,KAAK,QAAQ,SACvB,UAAWI,GAAU,KAAK,QAAQ,SAAS,EAC3C,OAAQ,KAAK,MACf,CACF,CAEA,uBAAwB,CACtB,KAAK,SAAS,oBAAoB5G,GAAU,EAAI,EAChD,KAAK,SAAS,oBAAoBM,GAA6B,EAAI,EACnE,IAAMyC,EAAa,KAAK,OAAO,aAAa,GAAK,GACjD,KAAK,SAAS,oBAAoB9C,GAAiB8C,CAAU,EAC7D,KAAK,SAAS,oBAAoB7C,GAAmB,CAAC6C,CAAU,CAClE,CACA,eAAgB,CAId,GAHI,CAAC,KAAK,UAGN,CAAC,KAAK,MAAM,IAAI,IAAI,sBAAsB,EAC5C,OAEF,IAAM8D,EAAY,KAAK,MAAM,mBAAmB,UAAU,KAAK,MAAM,EACrE,KAAK,SAAS,oBAAoBtG,GAAkBsG,CAAS,CAC/D,CACA,iBAAkB,CAChB,GAAI,CAAC,KAAK,SACR,OAEuB,KAAK,OAAO,iBAAiB,GAEpD,KAAK,sBAAsB,EAC3B,KAAK,qBAAqB,GAE1B,KAAK,sBAAsB,EAE7B,KAAK,YAAY,EACZ,KAAK,QAMR,KAAK,MAAM,aAAa,oBAAoB,IAAI,EALhD,KAAK,qBAAqB,CACxB,aAAc,GACd,cAAe,EACjB,CAAC,CAIL,CACA,aAAc,CACZ,IAAMzF,EAAQ,KAAK,OAAO,UAAU,EAAE,UAAY,GAClD,KAAK,SAAS,oBAAoBZ,GAAoBY,CAAK,CAC7D,CACA,6BAA6B4C,EAAO,CAClC,IAAMzC,EAAS,KAAK,OAAO,UAAU,EAC/BuF,EAAuB,KAAK,YAAY9C,EAAO,iBAAiB,EACtE,KAAK,MAAM,aAAa,cAAc8C,CAAoB,EACtDvF,EAAO,mBACT,OAAO,WAAW,IAAM,CACtB,KAAK,MAAM,mBAAmB,aAAa,IAAM,CAC/CA,EAAO,kBAAkBuF,CAAoB,CAC/C,CAAC,CACH,EAAG,CAAC,CAER,CACA,iBAAkB,CAChB,OAAO,KAAK,SAAW,KAAK,SAAS,gBAAgB,EAAI,IAC3D,CACA,eAAgB,CACd,OAAO,KAAK,SAAW,KAAK,SAAS,cAAc,EAAI,IACzD,CACA,SAAU,CACR,KAAK,wBAA0B,CAAC,EAChC,MAAM,QAAQ,CAChB,CACA,yBAA0B,CACxB,IAAMC,EAAuB,IAAIC,GACjC,YAAK,MAAM,QAAQ,WAAWD,CAAoB,EAClDA,EAAqB,KAAK,CACxB,QAAS,KAAK,QACd,OAAQ,KAAK,MACf,CAAC,EACMA,CACT,CACA,iBAAkB,CAChB,IAAME,EAAgB,IAAIC,GAAc,KAAK,QAAS,KAAK,OAAQ,KAAK,IAAI,EAC5E,YAAK,MAAM,QAAQ,WAAWD,CAAa,EACpCA,CACT,CACA,mBAAmBE,EAAe9C,EAAiBC,EAA0B,CAC3E,GAAI,KAAK,kBAAmB,CAC1B,KAAK,kBAAkB,eAAe6C,EAAe9C,CAAe,EACpE,MACF,CACA,IAAM+C,EAAU,KAAK,kBAAkBD,EAAe9C,EAAiBC,CAAwB,EAC3F8C,IACF,KAAK,kBAAoBA,EACzB,KAAK,eAAe,IAAM,CACxB,KAAK,MAAM,QAAQ,YAAYA,CAAO,EACtC,KAAK,kBAAoB,IAC3B,CAAC,EAEL,CACA,kBAAkBD,EAAe9C,EAAiBC,EAA0B,CAC1E,IAAM+C,EAAa,KAAK,MAAM,IAAI,IAAI,YAAY,EAC5CC,EAAiB,KAAK,MAAM,IAAI,IAAI,gBAAgB,EACpDC,EAA2B,KAAK,MAAM,IAAI,eAAe,YAAY,EAC3E,GAAID,EAAgB,CAClB,GAAI,CAACC,EAA0B,CAC7BC,EAAU,mEAAmE,EAC7E,MACF,CACA,GAAIH,EAAY,CACdG,EAAU,4DAA4D,EACtE,MACF,CACF,CACA,IAAMC,EAAc,IAAIC,GAAY,IAAM,KAAK,MAAO,KAAK,QAAS,KAAK,OAAQP,EAAe9C,EAAiBC,CAAwB,EACzI,YAAK,MAAM,QAAQ,WAAWmD,CAAW,EAClCA,CACT,CACA,uBAAuBE,EAAqB,CAC1C,KAAK,oBAAsBA,CAC7B,CACA,oBAAqB,CACnB,OAAO,KAAK,eACd,CACF,EACA,OAAAjH,EAAU,uBAAyB,WAC5BA,CACT,GAAG,EACCkH,GAAWlH,GAGXmH,GAAsB,EACtBC,IAAyB,IAAM,CACjC,IAAIA,EAAW,MAAMA,WAAiBnH,CAAS,CAC7C,YAAYE,EAAStD,EAAOwK,EAAWC,EAA4B9F,EAAa,CAC9E,MAAM,EACN,KAAK,WAAa,CAAC,EACnB,KAAK,OAAS,GACd,KAAK,gBAAkB,CACrB,KAAM,CAAC,EACP,IAAK,CAAC,CACR,EACA,KAAK,cAAgB,CACnB,KAAM,CAAC,EACP,IAAK,CAAC,CACR,EACA,KAAK,eAAiB,CACpB,KAAM,CAAC,EACP,IAAK,CAAC,CACR,EACA,KAAK,iBAAmB,CACtB,KAAM,GACN,OAAQ,GACR,MAAO,GACP,UAAW,EACb,EACA,KAAK,gBAAkB,CACrB,KAAM,GACN,OAAQ,GACR,MAAO,GACP,UAAW,EACb,EACA,KAAK,aAAe,CAAC,EACrB,KAAK,uBAAyB,GAC9B,KAAK,WAAa,CAAC,EACnB,KAAK,yBAA2B,GAChC,KAAK,MAAQ,KACb,KAAK,qBAAuB,KAC5B,KAAK,MAAQ3E,EACb,KAAK,IAAMA,EAAM,IACjB,KAAK,QAAUsD,EACf,KAAK,eAAiBtD,EAAM,mBAAmB,eAAe,GAAK,EACnE,KAAK,2BAA6ByK,EAClC,KAAK,YAAc9F,EACnB,KAAK,qBAAuB,KAAK,IAAI,IAAI,sBAAsB,EAC/D,KAAK,WAAarB,EAAQ,GAAK,IAAMgH,KACrC,KAAK,MAAQ9G,GAAcF,EAAQ,EAAE,EACrC,KAAK,mBAAmB,EACxB,KAAK,WAAatD,EAAM,aAAa,aAAa,KAAK,QAAQ,SAAU,KAAK,QAAQ,SAAS,EAC/F,KAAK,SAAWA,EAAM,sBAAsB,kBAAkB,KAAK,OAAO,EAC1E,KAAK,WAAW,EAChB,KAAK,gBAAgBwK,CAAS,EAC9B,KAAK,UAAY,KAAK,6BAA6B,EAC/C,KAAK,YAAY,GAAK,CAAC,KAAK,IAAI,IAAI,mBAAmB,IACzD,KAAK,SAAW,IAElB,KAAK,aAAa,CACpB,CACA,oBAAqB,CACnB,KAAK,uBAAyB,KAAK,IAAI,IAAI,uBAAuB,EAClE,KAAK,qBAAqB,CAC5B,CACA,sBAAuB,CACrB,GAAI,OAAO,KAAK,wBAA2B,WACzC,OAEF,IAAME,EAAc,KAAK,uBAAuB,KAAK,OAAO,EAC5D,KAAK,qBAAuBlH,GAAckH,CAAW,CACvD,CACA,UAAW,CACT,OAAO,KAAK,KACd,CACA,cAAe,CACb,OAAO,KAAK,SACd,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,UAAW,CACT,OAAO,KAAK,QAAQ,MACtB,CACA,eAAgB,CACd,OAAO,KAAK,UACd,CACA,UAAUC,EAAeC,EAAK,CACxBD,IAAkB,OACpB,KAAK,QAAUC,EACND,IAAkB,QAC3B,KAAK,SAAWC,EACPD,IAAkB,YAC3B,KAAK,aAAeC,EAEpB,KAAK,UAAYA,CAErB,CACA,QAAQC,EAASvC,EAASqC,EAAe,CACvC,IAAMC,EAAM,CACV,QAAAC,EACA,QAAAvC,EACA,cAAAqC,CACF,EACA,KAAK,WAAW,KAAKC,CAAG,EACxB,KAAK,UAAUD,EAAeC,CAAG,EACjC,KAAK,kBAAkBA,CAAG,EACtB,KAAK,UAAY,oBAAsB,CAAC,KAAK,QAAQ,WACvD,KAAK,MAAM,YAAY,+BAA+B,CAE1D,CACA,UAAUD,EAAe,CACvB,KAAK,WAAa,KAAK,WAAW,OAAOG,GAAUA,EAAO,gBAAkBH,CAAa,EACzF,KAAK,UAAUA,EAAe,MAAM,CACtC,CACA,aAAc,CACZ,OAAO,KAAK,UAAY,mBAAqB,KAAK,IAAI,IAAI,gBAAgB,CAC5E,CACA,UAAUI,EAAQ,CAChB,IAAMC,EAAeD,EAAS,OAAS,GACvC,KAAK,WAAW,QAAQE,GAAMA,EAAG,QAAQ,MAAM,QAAUD,CAAY,CACvE,CACA,kBAAkBJ,EAAK,CACrB,IAAM/I,EAAM,KAAK,IACjB,KAAK,iBAAiB+I,CAAG,EACrB,KAAK,MAAM,YAAY,2BAA2B,GACpD,KAAK,QAAQ,iBAAiB,EAEhC,KAAK,mBAAmBA,CAAG,EAC3B,KAAK,iBAAiBA,CAAG,EACzB,KAAK,kBAAkBA,CAAG,EAC1B,KAAK,yBAAyB,GAAOA,CAAG,EACpC/I,EAAI,eAAe,GAAK,KAAK,QAAQ,YACvC,KAAK,cAAc+I,CAAG,EAExB,KAAK,kBAAkB,CAAC,KAAK,0BAA0B,EACvD,IAAMnG,EAAOmG,EAAI,QACS,KAAK,qBAAqBA,EAAI,aAAa,EACnD,QAAQM,GAAQzG,EAAK,oBAAoByG,EAAM,EAAI,CAAC,EACtE,KAAK,8BAA8BN,CAAG,EAClC,KAAK,QAAQ,OACfO,GAAiBP,EAAI,QAAS,KAAK,QAAQ,UAAY,EAAI,EAE7D,KAAK,gBAAgBnG,CAAI,EACzB,KAAK,yBAAyBA,CAAI,EAClC5C,EAAI,WAAW+I,EAAI,QAASL,GAAS,sBAAuB,IAAI,EAChE,KAAK,eAAe,IAAM1I,EAAI,WAAW+I,EAAI,QAASL,GAAS,sBAAuB,IAAI,CAAC,EACvF,KAAK,2BACP,KAAK,MAAM,sBAAsB,WAAW,KAAK,sBAAsB,KAAK,KAAMK,EAAI,OAAO,EAAG,KAAK,QAAQ,SAAU,eAAe,EAEtI,KAAK,sBAAsBA,EAAI,OAAO,EAEpC,KAAK,YAAY,GACnB,KAAK,eAAeA,CAAG,EAErB/I,EAAI,IAAI,kBAAkB,GAC5B,KAAK,mBAAmB+I,CAAG,EAEzB,KAAK,4BACP,KAAK,MAAM,sBAAsB,eAAe,IAAM,CAC/C,KAAK,QAAQ,GAGlBA,EAAI,QAAQ,oBAAoB,mBAAoB,EAAI,CAC1D,CAAC,EAEH,KAAK,gCAAgC,CACvC,CACA,yBAAyBnG,EAAM,CACzB,KAAK,sBAAwB,MAGjCA,EAAK,kBAAkB,KAAK,oBAAoB,CAClD,CACA,gBAAiB,CACf,OAAO,KAAK,oBACd,CACA,gBAAgBA,EAAM,CACpB,KAAK,MAAQjB,GAAc,KAAK,QAAQ,EAAE,EACtC,KAAK,OAAS,MAGlBiB,EAAK,SAAS,KAAK,KAAK,CAC1B,CACA,8BAA8BmG,EAAK,CACjC,GAAM,CACJ,cAAAD,CACF,EAAIC,EACgB,KAAK,iBAAiBD,CAAa,IAErDS,GAAmB,IAAM,CACvB,KAAK,aAAa,CACpB,CAAC,EACD,KAAK,iBAAiBT,CAAa,EAAI,IAEtB,KAAK,gBAAgBA,CAAa,IAEnDS,GAAmB,IAAM,CACvBR,EAAI,QAAQ,oBAAoB,kBAAmB,EAAK,CAC1D,CAAC,EACD,KAAK,gBAAgBD,CAAa,EAAI,GAE1C,CACA,mBAAmBC,EAAK,CACtB,GAAI,KAAK,IAAI,IAAI,sBAAsB,EAAG,CACxCX,EAAU,oGAAoG,EAC9G,MACF,CACA,IAAMoB,EAAY,KAAK,MAAM,cAAc,kBAAkB,EACvDnB,EAAc,IAAIC,GAAY,IAAM,KAAKkB,EAAU,aAAc,KAAK,CAAC,GAAI,KAAK,QAAS,OAAQT,EAAI,QAAS,OAAQ,EAAI,EAC1HU,EAAc,KAAK,WAAWpB,EAAa,KAAK,MAAM,OAAO,EACnE,KAAK,aAAa,KAAKoB,CAAW,CACpC,CACA,eAAeV,EAAK,CAClB,IAAMW,EAAS,KAAK,sBAAsBX,EAAI,aAAa,EAC3D,GAAI,KAAK,SAAW,mBACd,CAACY,EAAe,mBAAmB,oCAA8D,2DAA4D,KAAK,MAAM,QAAQ,UAAU,CAAC,EAC7L,OAGJ,IAAMvF,EAAc,KAAK,2BAA2B2E,EAAI,QAASW,CAAM,EACvEX,EAAI,QAAQ,cAAc3E,CAAW,CACvC,CACA,eAAgB,CACd,OAAO,KAAK,WACd,CACA,2BAA4B,CAC1B,OAAI,KAAK,IAAI,IAAI,oBAAoB,EAC5B,KAAK,WAAW,IAAI2E,GAAOA,GAAK,SAAS,yBAAyB,CAAC,EAErE,CAAC,KAAK,cAAc,SAAS,yBAAyB,CAAC,CAChE,CAEA,eAAevH,EAAQ,CACrB,IAAMoI,EAAW,KAAK,YAAYpI,CAAM,EACxC,OAAOoI,EAAWA,EAAS,OAAO,EAAI,IACxC,CACA,iCAAkC,CAChC,IAAM5G,EAAO,KAAK,IAAI,YAAY,sBAAsB,EACxD,GAAI,CAACA,GAAQ,CAAC,KAAK,sBAAsB,EACvC,OAEF,IAAMqB,EAAS,CAEb,KAAM,KAAK,UAAU,QACrB,eAAgB,KAAK,QAAU,KAAK,QAAQ,QAAU,OACtD,gBAAiB,KAAK,SAAW,KAAK,SAAS,QAAU,OACzD,KAAM,KAAK,QACX,SAAU,KAAK,QAAQ,SACvB,uBAAwB,KAAK,iBAAiB,KAAK,IAAI,CACzD,EACArB,EAAKqB,CAAM,CACb,CACA,uBAAwB,CACtB,IAAMwF,EAAc,CAAC,CAAC,KAAK,SAAW,CAAC,KAAK,MAAM,mBAAmB,cAAc,EAC7EC,EAAgB,CAAC,CAAC,KAAK,UACvBC,EAAe,CAAC,CAAC,KAAK,UAAY,CAAC,KAAK,MAAM,mBAAmB,eAAe,EACtF,OAAOF,GAAeC,GAAiBC,CACzC,CACA,YAAa,CACX,IAAMC,EAAS,KAAK,QAAQ,MAAQ,CAAC,KAAK,IAAI,IAAI,uCAAuC,EACnFC,EAAkB,KAAK,QAAQ,gBAAgB,EAC/CC,EAAe,KAAK,IAAI,IAAI,cAAc,GAAK,KAAK,QAAQ,OAC5DC,EAAY,KAAK,MAAM,YAAY,YAAY,EAE/CC,EADa,CAAC,CAAC,KAAK,QAAQ,OAAS,CAAC,KAAK,QAAQ,QAClB,KAAK,IAAI,oBAAoBD,CAAS,EACzEH,EACF,KAAK,QAAU,mBACNE,EACT,KAAK,QAAU,kBACND,EACT,KAAK,QAAU,YACNG,EACT,KAAK,QAAU,iBAEf,KAAK,QAAU,QAEnB,CACA,kBAAkBC,EAAyB,GAAOC,EAAe,GAAO,CACtE,GAAI,KAAK,YAAY,EACnB,OAGF,GADoBD,GAA0B,KAAK,IAAI,IAAI,wBAAwB,GAAK,KAAK,YAC5E,CACf,KAAK,sBAAsBC,CAAY,EACvC,MACF,CACI,KAAK,2BAGT,KAAK,MAAM,sBAAsB,WAAW,IAAM,CAC3C,KAAK,QAGV,KAAK,sBAAsB,EAAI,CACjC,EAAG,KAAK,QAAQ,SAAU,eAAe,EACzC,KAAK,yBAA2B,GAClC,CACA,gBAAgBC,EAAMC,EAAMd,EAAS,KAAM,CACzC,IAAMe,EAAM,CACV,KAAM,CAAC,EACP,IAAK,CAAC,CACR,EACMC,EAAU,CAACC,EAAef,IAAa,CAC3Ca,EAAI,KAAK,KAAKb,CAAQ,EACtBa,EAAI,IAAIE,CAAa,EAAIf,CAC3B,EACA,OAAAY,EAAK,QAAQI,GAAO,CAClB,IAAMD,EAAgBC,EAAI,cAAc,EACpChB,EAAWW,EAAK,IAAII,CAAa,EAChCf,IACHA,EAAW,IAAIpB,GAASoC,EAAK,KAAK,QAAS,KAAK,MAAO,IAAI,GAE7DF,EAAQC,EAAef,CAAQ,CACjC,CAAC,EACDW,EAAK,KAAK,QAAQM,GAAgB,CAEhC,GADqBJ,EAAI,IAAII,EAAa,UAAU,EAAE,cAAc,CAAC,GAAK,KAExE,OAGF,GADiB,CAAC,KAAK,0BAA0BA,EAAcnB,CAAM,EACvD,CACZgB,EAAQG,EAAa,UAAU,EAAE,cAAc,EAAGA,CAAY,EAC9D,MACF,CACAA,EAAa,QAAQ,CACvB,CAAC,EACMJ,CACT,CACA,sBAAsBH,EAAc,CAClC,KAAK,yBAA2B,GAChC,KAAK,mBAAmB,EACxB,KAAK,aAAaA,CAAY,CAChC,CACA,aAAaA,EAAc,CACzB,KAAK,WAAW,QAAQQ,GAAQ,CAC9B,IAAMC,EAAe,KAAK,yBAAyBD,EAAK,aAAa,EACrEA,EAAK,QAAQ,aAAaC,EAAcT,CAAY,CACtD,CAAC,CACH,CACA,yBAAyBxB,EAAe,CACtC,OAAQA,EAAe,CACrB,IAAK,OACH,OAAO,KAAK,cAAc,KAC5B,IAAK,QACH,OAAO,KAAK,eAAe,KAC7B,IAAK,YACH,MAAO,CAAC,EACV,IAAK,SACH,OAAO,KAAK,gBAAgB,IAChC,CACF,CACA,oBAAqB,CACnB,IAAMkC,EAAwB,KAAK,MAAM,sBACnCxL,EAAuB,KAAK,MAAM,mBACxC,GAAI,KAAK,YACP,KAAK,gBAAkB,KAAK,gBAAgB,KAAK,gBAAiBA,EAAqB,WAAW,CAAC,EACnG,KAAK,cAAgB,CACnB,KAAM,CAAC,EACP,IAAK,CAAC,CACR,EACA,KAAK,eAAiB,CACpB,KAAM,CAAC,EACP,IAAK,CAAC,CACR,MACK,CACL,IAAMyL,EAAaD,EAAsB,sBAAsB,KAAK,OAAO,EAC3E,KAAK,gBAAkB,KAAK,gBAAgB,KAAK,gBAAiBC,CAAU,EAC5E,IAAMC,EAAW1L,EAAqB,kBAAkB,KAAK,OAAO,EACpE,KAAK,cAAgB,KAAK,gBAAgB,KAAK,cAAe0L,EAAU,MAAM,EAC9E,IAAMC,EAAY3L,EAAqB,mBAAmB,KAAK,OAAO,EACtE,KAAK,eAAiB,KAAK,gBAAgB,KAAK,eAAgB2L,EAAW,OAAO,CACpF,CACF,CACA,0BAA0BvB,EAAUwB,EAAqB,CAIvD,GADexB,EAAS,UAAU,EACvB,UAAU,GAAKwB,EACxB,MAAO,GAET,IAAMtG,EAAU8E,EAAS,UAAU,EAC7ByB,EAAU,KAAK,MAAM,aAAa,cAAczB,EAAS,gBAAgB,CAAC,EAEhF,GAD4B9E,GAAWuG,EACd,CACvB,IAAMC,EAAU1B,EAAS,UAAU,EAGnC,MAAO,EAFkB,KAAK,MAAM,mBAAmB,WAAW,EACtB,QAAQ0B,CAAO,GAAK,EAElE,CACA,MAAO,EACT,CACA,aAAc,CAEZ,OADyB,KAAK,IAAI,IAAI,gBAAgB,GAC3B,KAAK,IAAI,YAAY,OAAO,CACzD,CACA,iBAAiBvC,EAAK,CACpB,IAAM/E,EAAW,IAAM,CACrB+E,EAAI,QAAQ,YAAY,KAAK,YAAY,CAAC,CAC5C,EACA,KAAK,2BAA2B,YAAa/E,CAAQ,EACrD,KAAK,2BAA2B,iBAAkBA,CAAQ,CAC5D,CACA,gBAAgB2E,EAAW,CACzB,GAAI,KAAK,SAAS,GAAK,CAACA,EACtB,OAEF,IAAM4C,EAAkBlJ,EAAQ,KAAK,QAAQ,SAAS,EAChDmJ,EAAc,KAAK,MAAM,mBAAmB,cAAc,EAC1DC,EAAe,KAAK,MAAM,mBAAmB,eAAe,EAClE,GAAIF,EAAiB,CACnB,GAAI,KAAK,YAAY,GAAK,CAAC,KAAK,IAAI,IAAI,oBAAoB,EAAG,CAC7D,KAAK,iBAAiB,UAAY,GAClC,MACF,CACA,KAAK,iBAAiB,OAAS,GAC/B,KAAK,iBAAiB,KAAOC,EAC7B,KAAK,iBAAiB,MAAQC,CAChC,KAAO,CACL,GAAI,KAAK,YAAY,GAAK,CAAC,KAAK,IAAI,IAAI,oBAAoB,EAAG,CAC7D,KAAK,gBAAgB,UAAY,GACjC,MACF,CACA,KAAK,gBAAgB,OAAS,GAC9B,KAAK,gBAAgB,KAAOD,EAC5B,KAAK,gBAAgB,MAAQC,CAC/B,CACF,CACA,WAAY,CACV,OAAO,KAAK,UACd,CACA,aAAc,CACZ,OAAO,KAAK,UAAY,QAC1B,CACA,kBAAmB,CACjB,IAAMC,EAAa,CAAC3C,EAAKW,IAClBX,EAGEA,EAAI,QAAQ,iBAAiB,IACd,KAAK,2BAA2BA,EAAI,QAASW,CAAM,EACpD,MACpB,EALQ,GAOLiC,EAAmBD,EAAW,KAAK,aAAc,IAAI,EACrDE,EAAgBF,EAAW,KAAK,UAAW,IAAI,EAC/CG,EAAcH,EAAW,KAAK,QAAS,MAAM,EAC7CI,EAAeJ,EAAW,KAAK,SAAU,OAAO,EAEtD,OADkCC,GAAoBC,GAAiBC,GAAeC,CAExF,CACA,cAAe,CACb,KAAK,oBAAoB,KAAK,QAAS,CACrC,cAAe,IAAM,KAAK,mBAAmB,EAC7C,YAAa,IAAM,KAAK,cAAc,EACtC,gBAAiB,KAAK,kBAAkB,KAAK,IAAI,EACjD,WAAY,KAAK,aAAa,KAAK,IAAI,EACvC,gBAAiB,KAAK,kBAAkB,KAAK,IAAI,EACjD,mBAAoB,KAAK,kBAAkB,KAAK,IAAI,CACtD,CAAC,EACG,KAAK,QAAQ,QACf,KAAK,oBAAoB,KAAK,QAAQ,OAAQ,CAC5C,YAAa,KAAK,qBAAqB,KAAK,IAAI,CAClD,CAAC,EAEH,KAAK,oBAAoB,KAAK,QAAS,CACrC,YAAa,KAAK,qBAAqB,KAAK,IAAI,EAChD,YAAa,KAAK,eAAe,KAAK,IAAI,EAC1C,oBAAqB,KAAK,0BAA0B,KAAK,IAAI,EAC7D,gBAAiB,KAAK,uBAAuB,KAAK,IAAI,EACtD,eAAgB,KAAK,iBAAiB,KAAK,IAAI,CACjD,CAAC,EACD,KAAK,oBAAoB,KAAK,MAAM,aAAc,CAChD,6BAA8B,KAAK,+BAA+B,KAAK,IAAI,EAC3E,mBAAoB,KAAK,aAAa,KAAK,IAAI,EAC/C,wBAAyB,KAAK,0BAA0B,KAAK,IAAI,EACjE,sBAAuB,KAAK,wBAAwB,KAAK,IAAI,EAC7D,YAAa,KAAK,mBAAmB,KAAK,IAAI,EAC9C,iBAAkB,KAAK,mBAAmB,KAAK,IAAI,EACnD,kBAAmB,KAAK,oBAAoB,KAAK,IAAI,EACrD,aAAc,KAAK,6BAA6B,KAAK,IAAI,EACzD,YAAa,IAAM,KAAK,kBAAkB,CAC5C,CAAC,EACD,KAAK,eAAe,IAAM,CACxB,KAAK,aAAa,KAAK,aAAc,KAAK,MAAM,OAAO,EACnD,KAAK,iBACP,KAAK,eAAiB,KAAK,YAAY,KAAK,eAAgB,KAAK,MAAM,OAAO,EAElF,CAAC,EACD,KAAK,4BAA4B,CAAC,kBAAkB,EAAG,IAAM,CAE3D,GAD4B,KAAK,IAAI,IAAI,kBAAkB,EAClC,CACvB,KAAK,WAAW,QAAQ/C,GAAO,CAC7B,KAAK,mBAAmBA,CAAG,CAC7B,CAAC,EACD,MACF,CACA,KAAK,aAAe,KAAK,aAAa,KAAK,aAAc,KAAK,MAAM,OAAO,CAC7E,CAAC,EACD,KAAK,yBAAyB,CAChC,CACA,0BAA2B,CACzB,KAAK,oBAAoB,KAAK,QAAS,CACrC,gBAAiB,IAAM,CACrB,KAAK,gBAAgB,EAAE,QAAQa,GAAYA,EAAS,kBAAkB,CAAC,CACzE,EACA,YAAahF,GAAS,CACpB,KAAK,gBAAgB,EAAE,QAAQgF,GAAYA,EAAS,cAAchF,CAAK,CAAC,CAC1E,CACF,CAAC,CACH,CACA,qBAAqBA,EAAO,CAE1B,GADyB,KAAK,YAAY,IAAM,CAAC,CAAC,KAAK,QAAQ,gBAAgB,EACzD,CACpB,KAAK,MAAM,YAAY,UAAU,KAAK,OAAO,EAC7C,MACF,CACA,GAAI,KAAK,YAAY,EAAG,CACN,KAAK,iBAAiB,GAEpC,KAAK,MAAM,YAAY,UAAU,KAAK,OAAO,EAE/C,MACF,CACA,KAAK,gBAAgB,EAAE,QAAQgF,GAAYA,EAAS,YAAY,CAC9D,cAAe,CAAChF,EAAM,OACtB,QAAS,CAACA,EAAM,MAClB,CAAC,CAAC,EACF,KAAK,WAAW,QAAQmE,GAAO,CAC7B,KAAK,gBAAgBA,EAAI,OAAO,EAChC,KAAK,qBAAqB,EAC1B,KAAK,yBAAyBA,EAAI,OAAO,CAC3C,CAAC,EACD,KAAK,cAAc,EACnB,KAAK,eAAe,CACtB,CACA,gBAAiB,CACf,KAAK,yBAAyB,EAAI,EAClC,KAAK,kCAAkC,EACvC,KAAK,yBAAyB,EAC9B,KAAK,uBAAuB,CAC9B,CACA,2BAA4B,CAC1B,IAAMgD,EAAc,KAAK,QAAQ,YACjC,KAAK,WAAW,QAAQhD,GAAO,CAC7B,IAAMiD,EAAUD,IAAgB,EAC1BE,EAAUF,IAAgB,EAChChD,EAAI,QAAQ,oBAAoB,yBAA0BiD,CAAO,EACjEjD,EAAI,QAAQ,oBAAoB,yBAA0BkD,CAAO,CACnE,CAAC,CACH,CACA,wBAAyB,CACvB,IAAMC,EAAW,KAAK,QAAQ,SAC9B,KAAK,WAAW,QAAQnD,GAAOA,EAAI,QAAQ,oBAAoB,kBAAmBmD,CAAQ,CAAC,CAC7F,CACA,mBAAoB,CAClB,IAAMC,EAAa,KAAK,QAAQ,aAAa,EACvCC,EAAW,KAAK,QAAQ,UAAY,GAC1C,KAAK,WAAW,QAAQrD,GAAO,CAC7BA,EAAI,QAAQ,oBAAoB,eAAgBoD,CAAU,EAC1DpD,EAAI,QAAQ,oBAAoB,wBAAyBoD,GAAcC,CAAQ,EAC/ErD,EAAI,QAAQ,oBAAoB,0BAA2BoD,GAAc,CAACC,CAAQ,EAClF9C,GAAiBP,EAAI,QAASoD,GAAcC,CAAQ,CACtD,CAAC,CACH,CACA,2BAA4B,CAC1B,KAAK,kBAAkB,EAAI,EACvB,KAAK,MAAM,YAAY,2BAA2B,GACpD,KAAK,QAAQ,iBAAiB,CAElC,CACA,yBAA0B,CACxB,KAAK,kBAAkB,GAAO,EAAI,CACpC,CACA,gBAAiB,CACf,MAAO,CACL,UAAW5E,GAAU,KAAK,QAAQ,SAAS,EAC3C,SAAU,KAAK,QAAQ,QACzB,CACF,CACA,mBAAmB6E,EAAe,CAChC,IAAMC,EAAuB,KAAK,WAAW,KAAKC,GAAKA,EAAE,QAAQ,SAASF,EAAc,MAAM,CAAC,EAG/F,GAAI,GAF8BC,EAAuBA,EAAqB,QAAU,QACtBD,EAAc,QAE9E,OAEF,IAAMG,EAAO,KAAK,QACZC,EAAkB,KAAK,MAAM,aAAa,eAAe,EACzDrM,EAAe,CACnB,SAAUoM,EAAK,SACf,UAAWA,EAAK,UAChB,OAAQC,GAAmBA,EAAgB,MAC7C,EACA,KAAK,MAAM,kBAAkB,mBAAmBJ,EAAeA,EAAc,IAAKjM,EAAc,EAAI,EACpGiM,EAAc,eAAe,CAC/B,CACA,aAAaA,EAAe,CAC1B,GAAIA,EAAc,kBAAoBK,GAA4BL,CAAa,EAC7E,OAEF,IAAMC,EAAuB,KAAK,WAAW,KAAKC,GAAKA,EAAE,QAAQ,SAASF,EAAc,MAAM,CAAC,EACzFM,EAA4BL,EAAuBA,EAAqB,QAAU,KAClFM,EAA8BD,IAA8BN,EAAc,OAC5EQ,EAAS,KACRD,IACHC,EAAS,KAAK,MAAM,aAAa,yBAAyBF,EAA2B,GAAON,EAAc,QAAQ,IAEhH,KAAK,YAAY,GAAKO,GAA+B,CAACC,IACxD,KAAK,MAAM,kBAAkB,aAAa,KAAMR,CAAa,CAEjE,CACA,qBAAsB,CACpB,OAAI,KAAK,aACA,KAAK,aAAa,QAEpB,IACT,CACA,iBAAkB,CAChB,IAAMS,EAAc,KAAK,WAAW,KAAKC,GAAMC,GAAWD,EAAG,OAAO,CAAC,GAAG,QACxE,OAAID,EACKA,EAAY,sBAAsB,EAAE,IAEtC,CACT,CACA,sBAAsBlI,EAAO,CAC3B,IAAM4H,EAAO,KAAK,QACZS,EAAarI,EAAgB,KAAK,YAAY,GAAKA,EAAM,WAAa4H,EAAK,UAAY5H,EAAM,WAAa4H,EAAK,UAA1F,GACrB/F,EAAU,KAAK,aAAe,KAAK,aAAa,QAAU,KAAK,WAAW,QAC3EA,IAGLA,EAAQ,UAAU,OAAO,sBAAuBwG,CAAS,EACrDA,GAAarI,GAAO,mBACtB6B,EAAQ,MAAM,CACZ,cAAe,EACjB,CAAC,EAEL,CACA,aAAamD,EAAU,CACrB,KAAK,gBAAkB,KAAK,eAAe,KAAK,gBAAiBA,CAAQ,EACzE,KAAK,cAAgB,KAAK,eAAe,KAAK,cAAeA,CAAQ,EACrE,KAAK,eAAiB,KAAK,eAAe,KAAK,eAAgBA,CAAQ,EACvEA,EAAS,QAAQ,EACjB,KAAK,kBAAkB,CACzB,CACA,eAAeW,EAAM2C,EAAkB,CACrC,IAAMzC,EAAM,CACV,KAAM,CAAC,EACP,IAAK,CAAC,CACR,EACA,OAAAF,EAAK,KAAK,QAAQX,GAAY,CACxBA,IAAasD,IAGjBzC,EAAI,KAAK,KAAKb,CAAQ,EACtBa,EAAI,IAAIb,EAAS,UAAU,EAAE,cAAc,CAAC,EAAIA,EAClD,CAAC,EACMa,CACT,CACA,aAAa7D,EAAWC,EAAY,CAClC,OAAQD,EAAW,CACjB,IAAK,WACH,KAAK,cAAcC,CAAU,EAC7B,MACF,IAAK,QACH,KAAK,WAAWA,CAAU,EAC1B,MACF,IAAK,aACL,IAAK,YACH,KAAK,eAAeA,CAAU,EAC9B,KACJ,CACF,CACA,eAAenG,EAAMgG,EAAU,CAC7B,OAAO,KAAK,IAAI,oBAAoB,CAClC,KAAAhG,EACA,KAAM,KAAK,QACX,KAAM,KAAK,QAAQ,KACnB,SAAU,KAAK,QAAQ,SACvB,UAAW,KAAK,QAAQ,UACxB,MAAOgG,CACT,CAAC,CACH,CACA,yBAAyBhG,EAAMgG,EAAU,CACvC,IAAM9B,EAAQ,KAAK,eAAelE,EAAMgG,CAAQ,EAChD,OAAA9B,EAAM,OAAS,KACRA,CACT,CACA,cAAciC,EAAY,CACxB,GAAI6F,GAA4B7F,CAAU,EACxC,OAEF,IAAMsG,EAAU,KAAK,yBAAyB,mBAAoBtG,CAAU,EAC5E,KAAK,MAAM,aAAa,cAAcsG,CAAO,CAC/C,CACA,eAAetG,EAAY,CAEzB,GADA,KAAK,uBAAyBuG,GAAuBvG,EAAW,OAAQ,cAAe,CAAC,EACpF,CAAC,KAAK,YAAY,EACpB,OAEF,IAAM2F,EAAO,KAAK,QACZhN,EAAuB,KAAK,MAAM,mBACpC,KAAK,MAAM,cACb,KAAK,MAAM,aAAa,oBAAoB,EAE9C,IAAMiH,EAAU,KAAK,oBAAoB,EACnC4G,EAASxG,EAAW,OACtBI,EAAoB,GACpBR,GAAWA,EAAQ,SAAS4G,CAAM,GAAKC,GAAsBD,CAAM,IACrEpG,EAAoB,IAEtB,KAAK,MAAM,aAAa,eAAe,CACrC,SAAUuF,EAAK,SACf,OAAQhN,EAAqB,WAAW,EAAE,CAAC,EAC3C,UAAWgN,EAAK,UAChB,kBAAAvF,CACF,CAAC,CACH,CACA,WAAWJ,EAAY,CAErB,GADa6F,GAA4B7F,CAAU,GAAK,KAAK,uBAE3D,OAEF,IAAMsG,EAAU,KAAK,yBAAyB,aAActG,CAAU,EACtE,KAAK,MAAM,aAAa,cAAcsG,CAAO,EAC7C,IAAMI,EAAa1G,EAAW,SAAWA,EAAW,QAC9C2G,EAAa3G,EAAW,SAE9B,GAD6B,KAAK,IAAI,IAAI,sBAAsB,GAIxC,KAAK,QAAQ,OAAS,KAAK,sBAAsB,GAEzE,KAAK,IAAI,IAAI,2BAA2B,EACtC,OAEF,IAAM4G,EAAqB,KAAK,IAAI,IAAI,yBAAyB,EAC3DC,EAAyB,CAAC,KAAK,IAAI,IAAI,wBAAwB,EAC/DC,EAAS,aACf,GAAI,KAAK,QAAQ,WAAW,EACtBF,EACF,KAAK,QAAQ,kBAAkB,CAC7B,SAAU,GACV,MAAO5G,EACP,OAAA8G,CACF,CAAC,EACQJ,EACLG,GACF,KAAK,QAAQ,kBAAkB,CAC7B,SAAU,GACV,MAAO7G,EACP,OAAA8G,CACF,CAAC,EAGH,KAAK,QAAQ,kBAAkB,CAC7B,SAAU,GACV,eAAgB,CAACH,EACjB,YAAaA,EACb,MAAO3G,EACP,OAAA8G,CACF,CAAC,MAEE,CACL,IAAMC,EAAiBH,EAAqB,GAAQ,CAACF,EACrD,KAAK,QAAQ,kBAAkB,CAC7B,SAAU,GACV,eAAAK,EACA,YAAaJ,EACb,MAAO3G,EACP,OAAA8G,CACF,CAAC,CACH,CACF,CACA,uBAAwB,CACtB,MAAO,CAAC,KAAK,QAAQ,YAAc,CAAC,CAAC,KAAK,QAAQ,WAAa,CAAC,KAAK,IAAI,eAAe,CAC1F,CACA,yBAAyBE,EAAY,CAInC,GAHI,KAAK,UAAY,mBAGjB,CAAC,KAAK,IAAI,IAAI,qBAAqB,EACrC,OAEF,IAAMC,EAAmB,IAAM,CAC7B,IAAMC,EAAeF,EAAW,aAChC,GAAIE,GAAgB,MAAQA,EAAe,EAAG,CAC5C,IAAMC,EAAsB,IAAM,CAChC,KAAK,QAAQ,aAAaD,CAAY,EAClC,KAAK,MAAM,SAAS,QAAQ,IAAM,aACpC,KAAK,MAAM,SAAS,mBAAmB,EAC9B,KAAK,MAAM,SAAS,QAAQ,IAAM,cAC3C,KAAK,MAAM,SAAS,mBAAmB,CAE3C,EACA,OAAO,WAAWC,EAAqB,CAAC,CAC1C,CACF,EACMC,EAA4B,KAAK,MAAM,sBAAsB,cAAcJ,EAAYC,CAAgB,EAC7G,KAAK,eAAeG,CAAyB,EAC7CH,EAAiB,CACnB,CACA,2BAA2BI,EAAMxE,EAAQ,CACvC,GAAM,CACJ,IAAA1J,EACA,QAAAyB,CACF,EAAI,KACE4C,EAASrE,EAAI,oBAAoB,CACrC,UAAW,GACX,KAAMyB,EAAQ,KACd,KAAMA,EACN,MAAOA,EAAQ,IACf,eAAgBA,EAAQ,IAExB,UAAWyM,EACX,eAAgBA,EAChB,OAAAxE,EACA,uBAAwB,KAAK,iBAAiB,KAAK,IAAI,EACvD,mBAAoB,CAAC1E,EAAmBC,EAAiBjD,EAAOkD,IAA6B,KAAK,wBAAwBF,EAAmBC,EAAiBjD,EAAOkD,CAAwB,EAC7L,WAAY,CAAClD,EAAOC,IAAyB,KAAK,kBAAkBD,EAAOC,CAAoB,CACjG,CAAC,EACKkM,EAAc,KAAK,MAAM,qBAC/B,OAAQ,KAAK,QAAS,CACpB,IAAK,kBACH,OAAOA,EAAY,sCAAsC9J,CAAM,EACjE,IAAK,iBACH,OAAO8J,EAAY,qCAAqC9J,CAAM,EAChE,IAAK,mBACH,OAAO8J,EAAY,uCAAuC9J,CAAM,EAClE,QACE,OAAO8J,EAAY,gCAAgC9J,CAAM,CAC7D,CACF,CACA,kBAAkBrC,EAAOC,EAAsB,CAC7C,GAAI,CAAC,KAAK,aACR,OAEF,IAAMmM,EAAgB,CACpB,OAAQ,IAAM,KAAK,aAAa,QAChC,gBAAiB,IAAMpM,EACvB,YAAa,IAAM,eACnB,qBAAAC,CACF,EACI,KAAK,gBACP,KAAK,YAAY,KAAK,eAAgB,KAAK,MAAM,OAAO,EAE1D,KAAK,eAAiB,KAAK,WAAW,IAAIU,GAAeyL,EAAe,KAAK,KAAK,CAAC,CACrF,CACA,wBAAwBpJ,EAAmBC,EAAiBjD,EAAQ,GAAIkD,EAA0B,CAChG,GAAI,CAAC,KAAK,YAAY,EACpB,OAEF,IAAMmD,EAAc,IAAIC,GAAY,IAAMtG,EAAO,KAAK,QAAS,OAAQgD,EAAmBC,EAAiBC,CAAwB,EACnI,KAAK,WAAWmD,EAAa,KAAK,MAAM,OAAO,EAC/C,KAAK,eAAe,IAAM,CACxB,KAAK,YAAYA,EAAa,KAAK,MAAM,OAAO,CAClD,CAAC,CACH,CACA,kBAAmB,CACjB,IAAMgG,EAAW,KAAK,MAAM,sBAAsB,kBAAkB,KAAK,OAAO,EAChF,GAAI,KAAK,UAAYA,EAAU,CAC7B,IAAMC,EAAa,gBAAkBD,EAC/BE,EAAgB,gBAAkB,KAAK,SAC7C,KAAK,WAAW,QAAQxF,GAAO,CAC7BA,EAAI,QAAQ,oBAAoBuF,EAAY,EAAI,EAChDvF,EAAI,QAAQ,oBAAoBwF,EAAe,EAAK,CACtD,CAAC,CACH,CACA,KAAK,SAAWF,CAClB,CACA,kBAAmB,CACjB,OAAO,KAAK,QAAQ,WAAa,KAAK,MAAM,kBAAkB,YAAY,CAC5E,CACA,iBAAkB,CAChB,OAAO,KAAK,QAAQ,WAAa,KAAK,MAAM,kBAAkB,WAAW,CAC3E,CACA,8BAA+B,CAC7B,IAAMG,EAAW,KAAK,iBAAiB,EACjCC,EAAU,KAAK,gBAAgB,EACjC,KAAK,iBAAmBD,IAC1B,KAAK,eAAiBA,EACtB,KAAK,WAAW,QAAQzF,GAAOA,EAAI,QAAQ,oBAAoB,eAAgByF,CAAQ,CAAC,GAEtF,KAAK,gBAAkBC,IACzB,KAAK,cAAgBA,EACrB,KAAK,WAAW,QAAQ1F,GAAOA,EAAI,QAAQ,oBAAoB,cAAe0F,CAAO,CAAC,EAE1F,CACA,YAAY1J,EAAS,GAAO,CACtB,KAAK,iBAGT,KAAK,MAAM,gBAAgB,YAAY,KAAMA,CAAM,CACrD,CACA,oBAAoBD,EAAS,CAC3B,KAAK,WAAW,QAAQiE,GAAO,CAC7BA,EAAI,QAAQ,oBAAoB,wBAAyBjE,CAAO,EAChEiE,EAAI,QAAQ,oBAAoB,4BAA6B,CAACjE,CAAO,CACvE,CAAC,CACH,CACA,cAAc9C,EAAO,CACnB,KAAK,WAAaA,CACpB,CACA,gBAAgB0C,EAAM,KAAMgK,EAAqB,KAAM9J,EAAQ,KAAM,CAC/D,KAAK,YAGT,KAAK,MAAM,gBAAgB,aAAa,KAAMF,EAAKgK,EAAoB9J,CAAK,CAC9E,CACA,iBAAkB,CAChB,OAAI,KAAK,cAAc,KAAK,SAAW,GAAK,KAAK,eAAe,KAAK,SAAW,EACvE,KAAK,gBAAgB,KAElB,CAAC,GAAG,KAAK,gBAAgB,KAAM,GAAG,KAAK,cAAc,KAAM,GAAG,KAAK,eAAe,IAAI,CAEpG,CACA,mCAAoC,CAClC,IAAM+J,EAAa,KAAK,MAAM,sBAAsB,8BAA8B,KAAK,OAAO,EAC1F,CAACA,GAAc,CAACA,EAAW,QAG/BA,EAAW,QAAQC,GAAY,CAC7B,KAAK,WAAW,QAAQrC,GAAKA,EAAE,QAAQ,oBAAoBqC,EAAU,EAAI,CAAC,CAC5E,CAAC,CACH,CACA,0BAA2B,CACzB,KAAK,MAAM,sBAAsB,qBAAqB,KAAK,QAASC,GAAa,CAC/E,KAAK,WAAW,QAAQ9F,GAAOA,EAAI,QAAQ,oBAAoB8F,EAAW,EAAI,CAAC,CACjF,EAAGA,GAAa,CACd,KAAK,WAAW,QAAQ9F,GAAOA,EAAI,QAAQ,oBAAoB8F,EAAW,EAAK,CAAC,CAClF,CAAC,CACH,CACA,yBAAyBC,EAAc/F,EAAK,CACtC+F,IACF,KAAK,UAAY,KAAK,6BAA6B,GAErD,KAAK,WAAW/F,EAAKgG,GAAQA,EAAK,QAAQ,cAAc,KAAK,SAAS,CAAC,CACzE,CACA,sBAAsBC,EAAkB,CACtC,OAAIA,IAAqB,QAAUA,IAAqB,QAC/CA,EAEF,IACT,CACA,qBAAqBA,EAAkB,CACrC,IAAMtF,EAAS,KAAK,sBAAsBsF,CAAgB,EACpD3K,EAAS,CACb,QAAS,KAAK,QACd,WAAY,KAAK,WACjB,UAAW,KAAK,gBAAgB2K,CAAgB,EAChD,UAAW,KAAK,QAAQ,SAAW,IAAM,EACzC,SAAU,KAAK,SACf,aAAc,KAAK,YAAY,EAC/B,eAAgB,KAAK,iBAAiB,EACtC,cAAe,KAAK,gBAAgB,EACpC,YAAa,KAAK,YAClB,WAAY,KAAK,QAAQ,aAAa,EACtC,OAAAtF,CACF,EACA,OAAO,KAAK,MAAM,sBAAsB,qBAAqBrF,CAAM,CACrE,CACA,8BAA+B,CAC7B,IAAM4K,EAAW,KAAK,IAAI,IAAI,UAAU,EACxC,GAAIA,GAAY,OAAOA,GAAa,WAAY,CAC9C7G,EAAU,gGAAgG,EAC1G,MACF,CACA,IAAM8G,EAAe,KAAK,IAAI,YAAY,aAAa,EACnDC,EACJ,GAAID,EAAc,CAChB,IAAM7K,EAAS,CACb,KAAM,KAAK,QAAQ,KACnB,KAAM,KAAK,QACX,SAAU,KAAK,QAAQ,QACzB,EACA8K,EAAqBD,EAAa7K,CAAM,CAC1C,CACA,OAAI8K,GAAsBF,EACjB,OAAO,OAAO,CAAC,EAAGA,EAAUE,CAAkB,EAEhD,KAAK,UACd,CACA,cAAcpG,EAAK,CACjB,IAAMqG,EAAW,CAAC,CAAC,KAAK,QAAQ,WAAW,EAC3C,KAAK,WAAWrG,EAAKgG,GAAQ,CAC3BA,EAAK,QAAQ,oBAAoB,kBAAmBK,CAAQ,EAC5D7Q,GAAiBwQ,EAAK,QAASK,CAAQ,EACtBL,EAAK,QAAQ,SAAS,KAAK,IAAI,oBAAoB,CAAC,IACpDA,IAAS,KAAK,WAAaA,IAAS,KAAK,eACxD,KAAK,oBAAoB,CAE7B,CAAC,CACH,CACA,qBAAsB,CACpB,GAAI,KAAK,sBAAsB,EAC7B,OAEF,IAAMK,EAAW,KAAK,QAAQ,WAAW,EACzC,GAAIA,GAAY,KAAK,IAAI,IAAI,wBAAwB,EACnD,OAGF,IAAMC,EADY,KAAK,MAAM,cAAc,kBAAkB,EACrCD,EAAW,kBAAoB,gBAAiB,kBAAkBA,EAAW,WAAa,QAAQ,YAAY,EACtI,KAAK,MAAM,wBAAwB,cAAcC,CAAK,CACxD,CACA,sBAAsBnB,EAAM,CAC1B,GAAI,CAAC,KAAK,OACR,OAEF,GAAM,CACJ,QAAAzM,EACA,MAAAtD,EACA,IAAA6B,CACF,EAAI,KACJ,KAAK,oBAAoBkO,EAAM,CAC7B,WAAY,IAAMzM,EAAQ,aAAa,EACvC,WAAY,IAAMA,EAAQ,aAAa,CACzC,CAAC,EACD,KAAK,oBAAoBA,EAAS,CAChC,WAAY,IAAM,CACZ,CAACtD,EAAM,YAAY,WAAW,GAAK,CAAC6B,EAAI,IAAI,2BAA2B,IACzEkO,EAAK,UAAU,IAAI,cAAc,EACjCzM,EAAQ,WAAW,EAAI,EAE3B,EACA,WAAY,IAAM,CAChByM,EAAK,UAAU,OAAO,cAAc,EACpCzM,EAAQ,WAAW,EAAK,CAC1B,CACF,CAAC,CACH,CAKA,oBAAoB6N,EAAQ,CAC1B,IAAMtQ,EAAQ,KAAK,MAAM,aAAa,gBAAgB,EAAE,iBAAiB,EAAE,6BAA6B,EAClGuQ,EAAW,KAAK,sBAAsBvQ,EAAM,IAAK,EAAI,EAAI,IACzDwQ,EAAW,KAAK,sBAAsBxQ,EAAM,OAAQ,EAAI,EAAI,IAClE,OAAO,KAAK,IAAI,KAAK,IAAIuQ,EAAUD,CAAM,EAAGE,CAAQ,CACtD,CACA,uBAAwB,CACtB,OAAO,KAAK,MAAM,kBACpB,CACA,WAAWzG,EAAK0G,EAAU,CACpB1G,EACF0G,EAAS1G,CAAG,EAEZ,KAAK,WAAW,QAAQ0G,CAAQ,CAEpC,CACA,mBAAmB1G,EAAK,CACtB,GAAI,KAAK,QAAQ,WAAa,KAC5B,OAEF,IAAM2G,EAAY,KAAK,QAAQ,UACzBC,EAAmB,KAAK,MAAM,YAAY,oBAAoB,EAE9DC,EADmB,KAAK,IAAI,uBAAuB,EACf,KAAK,IAAI,oBAAoB,KAAK,OAAO,EAAE,OAAS,OACxFC,EAAaD,EAAiB,GAAG,KAAK,IAAID,EAAkBC,CAAc,EAAI,CAAC,KAAO,OAC5F,KAAK,WAAW7G,EAAKgG,GAAQ,CAC3BA,EAAK,QAAQ,MAAM,OAAS,GAAGW,CAAS,KACpCG,GACFd,EAAK,QAAQ,MAAM,YAAY,mBAAoBc,CAAU,CAEjE,CAAC,CACH,CACA,iBAAiBlJ,EAAW3C,EAAU,CACpC,MAAM,iBAAiB2C,EAAW3C,CAAQ,CAC5C,CACA,oBAAoB2C,EAAW3C,EAAU,CACvC,MAAM,oBAAoB2C,EAAW3C,CAAQ,CAC/C,CAEA,iBAAiB8L,EAAoB,GAAO,CAE1C,GADA,KAAK,OAAS,GACV,CAACA,GAAqB,KAAK,IAAI,cAAc,GAAK,CAAC,KAAK,SAAS,EAEnE,GADyC,KAAK,QAAQ,QAAU,KAC1B,CACpC,IAAMR,EAAS,KAAK,oBAAoB,KAAK,QAAQ,MAAM,EAC3D,KAAK,UAAUA,CAAM,CACvB,MACE,KAAK,WAAW,QAAQvG,GAAOA,EAAI,QAAQ,oBAAoB,kBAAmB,EAAI,CAAC,EAG3F,KAAK,QAAQ,WAAW,EAAK,EAC7B,IAAMnE,EAAQ,KAAK,eAAe,mBAAmB,EACrD,KAAK,mBAAmBA,CAAK,EAC7B,KAAK,MAAM,aAAa,cAAcA,CAAK,EAC3C,MAAM,QAAQ,CAChB,CACA,mBAAoB,CAClB,KAAK,WAAW,OAAS,EACzB,KAAK,YAAY,EACjB,IAAMmL,EAAmBC,IACvBA,EAAM,KAAK,QAAQzD,GAAKA,EAAE,QAAQ,CAAC,EAC5B,CACL,KAAM,CAAC,EACP,IAAK,CAAC,CACR,GAEF,KAAK,gBAAkBwD,EAAiB,KAAK,eAAe,EAC5D,KAAK,cAAgBA,EAAiB,KAAK,aAAa,EACxD,KAAK,eAAiBA,EAAiB,KAAK,cAAc,CAC5D,CACA,kBAAkBhH,EAAK,CACrB,KAAK,WAAWA,EAAKgG,GAAQ,CAC3BA,EAAK,QAAQ,oBAAoB,eAAgB,KAAK,UAAU,EAChEA,EAAK,QAAQ,oBAAoB,kBAAmB,CAAC,KAAK,UAAU,CACtE,CAAC,CACH,CACA,oBAAqB,CACnB,IAAMkB,EAAa,KAAK,MAAM,aAAa,aAAa,KAAK,QAAQ,SAAU,KAAK,QAAQ,SAAS,EACjGA,IAAe,KAAK,aACtB,KAAK,WAAaA,EAClB,KAAK,kBAAkB,GAErB,CAACA,GAAc,KAAK,YACtB,KAAK,YAAY,EAAK,CAE1B,CACA,qBAAsB,CACpB,IAAMC,EAAc,KAAK,MAAM,mBAAmB,eAAe,GAAK,EAClE,KAAK,iBAAmBA,IAC1B,KAAK,eAAiBA,EACtB,KAAK,aAAa,GAEpB,KAAK,6BAA6B,CACpC,CACA,cAAe,CACb,KAAK,UAAU,KAAK,QAAQ,MAAM,CACpC,CACA,gCAAiC,CAC/B,KAAK,aAAa,CACpB,CAIA,sBAAsBC,EAAOC,EAAU,GAAO,CAC5C,GAAI,KAAK,QAAQ,YAAY,GAAK,KAAK,QAAQ,OAC7C,OAAOD,EAET,IAAME,EAAc,KAAK,MAAM,kBAAkB,eAAe,EAEhE,OAAOF,EAAQE,GADID,EAAU,EAAI,GAEnC,CACA,UAAUE,EAAQ,CAChB,GAAI,MAAK,aAGLjO,EAAQiO,CAAM,EAAG,CACnB,IAAMC,EAAwB,KAAK,sBAAsBD,CAAM,EAGzDH,EAAQ,GAFM,KAAK,QAAQ,YAAY,GAAK,KAAK,QAAQ,OACtBI,EAAwB,KAAK,MAAM,0BAA0B,qBAAqBA,CAAqB,CAC7G,KACnC,KAAK,eAAeJ,CAAK,CAC3B,CACF,CAQA,iBAAiBnB,EAAkB,CACjC,OAAO,KAAK,qBAAuB,KAAK,uBAAuBA,CAAgB,EAAI,MACrF,CACA,oBAAoBA,EAAkB,CACpC,OAAO,KAAK,qBAAuB,OAAS,cAAc,KAAK,uBAAuBA,CAAgB,CAAC,GACzG,CACA,uBAAuBA,EAAkB,CACvC,GAAI,KAAK,YACP,MAAO,GAET,IAAMvN,EAAU,KAAK,QACjB6N,EACJ,GAAI,KAAK,SAAS,EAChBA,EAAS7N,EAAQ,iBACZ,CACL,IAAM6O,EAAS,KAAK,iBAAiBtB,CAAgB,EAAI,KAAK,oBAAoBvN,EAAQ,SAAS,EAAIA,EAAQ,OACzG8O,EAAwB,KAAK,sBAAsBD,CAAM,EAC/DhB,EAAS7N,EAAQ,YAAY,EAAI8O,EAAwB,KAAK,MAAM,0BAA0B,qBAAqBA,CAAqB,CAC1I,CACA,OAAOjB,EAAS,IAClB,CACA,eAAea,EAAO,CACpB,KAAK,WAAW,QAAQpH,GAAO,KAAK,qBAAuBA,EAAI,QAAQ,OAAOoH,CAAK,EAAIpH,EAAI,QAAQ,aAAa,cAAcoH,CAAK,GAAG,CAAC,CACzI,CACA,YAAa,CACX,OAAO,KAAK,OACd,CACA,YAAY3O,EAAQ,CAClB,IAAIiJ,EAAM,KAMV,OALA,KAAK,gBAAgB,EAAE,QAAQb,GAAY,CACrCA,EAAS,UAAU,GAAKpI,IAC1BiJ,EAAMb,EAEV,CAAC,EACGa,GAAO,MAGX,KAAK,gBAAgB,EAAE,QAAQb,GAAY,CACrCA,EAAS,mBAAmB,EAAE,QAAQpI,CAAM,GAAK,IACnDiJ,EAAMb,EAEV,CAAC,EACMa,CACT,CACA,mBAAoB,CACd,KAAK,QAAQ,UAAY,OAC3B,KAAK,mBAAmB,EACxB,KAAK,iBAAiB,EACtB,KAAK,eAAe,EAExB,CACA,aAAc,CACZ,OAAO,KAAK,QAAQ,kBAAkB,CACxC,CACA,iBAAiB1B,EAAK,CACpB,IAAMyH,EAAc,KAAK,QAAQ,kBAAkB,EACnD,GAAIA,IAAgB,KAClB,OAEF,IAAMC,EAAiB,KAAK,MAAM,wBAAwB,kBAAkB,GAAK,KAAK,MAAM,eAAe,kBAAkB,GAAK,GAC5HC,EAAY,KAAK,QAAQ,SAAW,IAAM,EAC1CC,EAAeF,EAAiB,KAAK,QAAQ,SAAW,EAC9D,KAAK,WAAW1H,EAAKwD,GAAK,CACxBA,EAAE,QAAQ,YAAYiE,CAAW,EACjCjE,EAAE,QAAQ,oBAAoB,cAAemE,CAAS,EACtDnE,EAAE,QAAQ,oBAAoB,aAAc,CAACmE,CAAS,EACtDE,GAAiBrE,EAAE,QAASoE,CAAY,CAC1C,CAAC,CACH,CACA,mBAAmBE,EAAiB,CAClC,KAAK,gBAAkBA,CACzB,CACF,EACA,OAAAnI,EAAS,sBAAwB,cAC1BA,CACT,GAAG,EACCoI,GAAUpI,GAGVqI,GAA4B,cAAcxP,CAAS,CACrD,UAAUpD,EAAO,CACf,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,aAAeA,EAAM,aAC1B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,aAAeA,EAAM,aAC1B,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,SAAWA,EAAM,SACtB,KAAK,eAAiBA,EAAM,eAC5B,KAAK,aAAeA,EAAM,aAC1B,KAAK,iBAAmBA,EAAM,gBAChC,CACA,YAAYsI,EAAS,CACnB,MAAM,EACN,KAAK,QAAUA,CACjB,CACA,eAAgB,CACd,KAAK,qBAAqB,EAC1B,KAAK,kBAAkB,EACvB,KAAK,uBAAuB,CAC9B,CACA,sBAAuB,CACrB,IAAMG,EAAY,UACZ5C,EAAW,KAAK,qBAAqB,KAAK,KAAM4C,CAAS,EAC/D,KAAK,2BAA2B,KAAK,QAAS,CAC5C,CAACA,CAAS,EAAG5C,CACf,CAAC,CACH,CACA,mBAAoB,CAEC,CAAC,WAAY,cAAe,YAAa,WAAY,QADjDgN,GAAkB,YAAY,EAAI,aAAe,WACuB,EACpF,QAAQpK,GAAa,CAC9B,IAAM5C,EAAW,KAAK,kBAAkB,KAAK,KAAM4C,CAAS,EAC5D,KAAK,2BAA2B,KAAK,QAAS,CAC5C,CAACA,CAAS,EAAG5C,CACf,CAAC,CACH,CAAC,CACH,CACA,kBAAkB4C,EAAWC,EAAY,CACvC,GAAI,CAAC,KAAK,kBAAkB,oBAAoBA,CAAU,GAAK6F,GAA4B7F,CAAU,EACnG,OAEF,IAAMmC,EAAU,KAAK,eAAenC,CAAU,EACxC+C,EAAW,KAAK,kBAAkB,wBAAwB/C,CAAU,EACtED,IAAc,cAChB,KAAK,4BAA4BC,EAAY,OAAQmC,EAASY,CAAQ,GAElEA,GACFA,EAAS,aAAahD,EAAWC,CAAU,EAEzCmC,GACFA,EAAQ,aAAapC,EAAWC,CAAU,EAGhD,CACA,wBAAyB,CACvB,GAAI,CAACoK,GAAgB,EACnB,OAEF,IAAMC,EAAgB,IAAIC,GAAc,KAAK,OAAO,EAC9CC,EAAkBxM,GAAS,CAC/B,IAAMoE,EAAU,KAAK,eAAepE,EAAM,UAAU,EAC9CvG,EAAW,KAAK,kBAAkB,wBAAwBuG,EAAM,UAAU,EAChF,KAAK,4BAA4B,OAAQA,EAAM,WAAYoE,EAAS3K,CAAQ,CAC9E,EACA,KAAK,oBAAoB6S,EAAe,CACtC,QAASE,CACX,CAAC,EACD,KAAK,eAAe,IAAMF,EAAc,QAAQ,CAAC,CACnD,CACA,eAAetM,EAAO,CACpB,IAAIyM,EAAgBzM,EAAM,OAC1B,KAAOyM,GAAe,CACpB,IAAMC,EAAS,KAAK,IAAI,WAAWD,EAAeP,GAAQ,qBAAqB,EAC/E,GAAIQ,EACF,OAAOA,EAETD,EAAgBA,EAAc,aAChC,CACA,OAAO,IACT,CACA,4BAA4BxK,EAAY0K,EAAYvI,EAASY,EAAU,CACrE,IAAMnI,EAAUuH,EAAUA,EAAQ,WAAW,EAAI,KAC3CxH,EAASoI,EAAWA,EAAS,UAAU,EAAI,KAC7C5H,EAAQ,KACZ,GAAIR,EAAQ,CACV,IAAMoD,EAAQiC,GAA0B0K,EACxC3H,EAAS,6BAA6BhF,GAAS,IAAI,EACnD5C,EAAQ,KAAK,aAAa,SAASR,EAAQC,CAAO,CACpD,CACA,IAAM+P,EAAc,KAAK,aAAa,gBAAgB,EAChDC,EAAkB7H,EAAWA,EAAS,OAAO,EAAI4H,EAAY,mBAAmB,EACtF,KAAK,YAAY,gBAAgB,CAC/B,WAAA3K,EACA,WAAA0K,EACA,QAAA9P,EACA,OAAAD,EACA,MAAAQ,EACA,gBAAAyP,CACF,CAAC,CACH,CACA,0BAA0BpE,EAAQ,CAChC,MAAO,CACL,SAAUqE,GAAuB,KAAK,IAAKrE,EAAQ7E,GAAS,sBAAsB,EAClF,QAASkJ,GAAuB,KAAK,IAAKrE,EAAQyD,GAAQ,qBAAqB,CACjF,CACF,CACA,qBAAqBlK,EAAWyF,EAAe,CAC7C,GAAM,CACJ,SAAAzC,EACA,QAAAlI,CACF,EAAI,KAAK,0BAA0B2K,EAAc,MAAM,EACnDA,EAAc,mBAGdzC,EACF,KAAK,yBAAyBA,EAAUhD,EAAWyF,CAAa,EACvD3K,GAAWA,EAAQ,YAAY,GACxC,KAAK,iCAAiCA,EAASkF,EAAWyF,CAAa,EAE3E,CACA,yBAAyBzC,EAAUhD,EAAWyF,EAAe,CAC3D,IAAM5K,EAAUmI,EAAS,WAAW,EAC9BpI,EAASoI,EAAS,UAAU,EAC5B9E,EAAU8E,EAAS,UAAU,EAcnC,GAb8B,CAAC+H,GAAgC,KAAK,IAAKtF,EAAe5K,EAASD,EAAQsD,CAAO,GAE1G8B,IAAc,YACK,CAAC9B,GAAW,KAAK,kBAAkB,uBAAuBuH,CAAa,GAE1FzC,EAAS,UAAUyC,CAAa,EAElC,KAAK,iBAAiBA,EAAezC,EAAS,UAAU,CAAC,EACrDgI,GAA+BvF,CAAa,GAC9CzC,EAAS,iBAAiByC,CAAa,GAIzCzF,IAAc,UAAW,CAC3B,IAAMiL,EAAmBjI,EAAS,YAAYyC,EAAe,aAAa,EAC1E,KAAK,aAAa,cAAcwF,CAAgB,CAClD,CACF,CACA,iCAAiC7I,EAASpC,EAAWyF,EAAe,CAClE,IAAM5K,EAAUuH,EAAQ,WAAW,EAC7B8I,EAAc,KAAK,aAAa,eAAe,EAC/CtQ,EAASsQ,GAAeA,EAAY,OAE1C,GAD8B,CAACH,GAAgC,KAAK,IAAKtF,EAAe5K,EAASD,EAAQ,EAAK,EACnF,CACzB,IAAMkD,EAAM2H,EAAc,IAC1B,GAAIzF,IAAc,UAChB,OAAQlC,EAAK,CACX,KAAKqN,EAAQ,UACb,KAAKA,EAAQ,SACb,KAAKA,EAAQ,QACb,KAAKA,EAAQ,UACX,KAAK,kBAAkB,uBAAuB1F,EAAe,EAAI,EACjE,MACF,KAAK0F,EAAQ,GACb,KAAKA,EAAQ,KACX/I,EAAQ,mBAAmBqD,CAAa,EACxC,MACF,KAAK0F,EAAQ,IACX/I,EAAQ,aAAaqD,CAAa,EAClC,MACF,QACF,CAEJ,CACA,GAAIzF,IAAc,UAAW,CAC3B,IAAMiL,EAAmB7I,EAAQ,eAAe,cAAeqD,CAAa,EAC5E,KAAK,aAAa,cAAcwF,CAAgB,CAClD,CACF,CACA,iBAAiBxF,EAAevH,EAAS,CAOvC,GANI,CAACuH,EAAc,SAAW,CAACA,EAAc,SAGzCvH,GAGA,CAAC,KAAK,kBAAkB,oBAAoBuH,CAAa,EAC3D,OAEF,IAAM2F,EAAUC,GAAuB5F,CAAa,EACpD,GAAI2F,IAAYD,EAAQ,EACtB,OAAO,KAAK,WAAW1F,CAAa,EAEtC,GAAI2F,IAAYD,EAAQ,EACtB,OAAO,KAAK,WAAW1F,CAAa,EAEtC,GAAI2F,IAAYD,EAAQ,EACtB,OAAO,KAAK,WAAW1F,CAAa,EAEtC,GAAI2F,IAAYD,EAAQ,EACtB,OAAO,KAAK,WAAW1F,CAAa,EAEtC,GAAI2F,IAAYD,EAAQ,EACtB,OAAO,KAAK,WAAW1F,CAAa,EAEtC,GAAI2F,IAAYD,EAAQ,EACtB,OAAO,KAAK,WAAW,EAEzB,GAAIC,IAAYD,EAAQ,EACtB,OAAO,KAAK,WAAW1F,CAAa,CAExC,CACA,WAAWzH,EAAO,CAChB,GAAM,CACJ,eAAAsN,EACA,SAAAC,EACA,aAAArT,CACF,EAAI,KACJ,GAAIA,GAAgBqT,EAAS,eAAe,EAAG,CAC7C,GAAM,CAACC,EAAkBC,CAAmB,EAAI,CAACH,EAAe,QAAQ,KAAK,EAAGA,EAAe,QAAQ,QAAQ,CAAC,EAC1GI,EAAgBF,EAAmB,KAAO,MAC5CG,EACAC,EACAH,GACFE,EAAc,KACdC,EAASL,EAAS,YAAY,EAAI,IAElCI,EAAc,SACdC,EAASN,EAAe,wBAAwB,EAAE,OAAS,GAE7D,IAAMO,EAAsB,KAAK,mBAAmB,WAAW,EAC/D,GAAIC,EAAgBD,CAAmB,EACrC,OAEF3T,EAAa,aAAa,CACxB,cAAe,EACf,eAAgBwT,EAChB,YAAaE,EACb,aAAcD,EACd,YAAaE,EAAoB,CAAC,EAClC,UAAWtS,EAAMsS,CAAmB,CACtC,CAAC,CACH,CACA7N,EAAM,eAAe,CACvB,CACA,WAAWA,EAAO,CAChB,GAAI,CAAC,KAAK,kBAAoB,KAAK,IAAI,IAAI,yBAAyB,EAClE,OAEF,GAAM,CACJ,SAAAgF,EACA,QAAAlI,CACF,EAAI,KAAK,0BAA0BkD,EAAM,MAAM,EAC3CgF,GAAU,UAAU,GAAKlI,GAAS,UAAU,IAGhDkD,EAAM,eAAe,EACrB,KAAK,iBAAiB,gBAAgB,EACxC,CACA,WAAWA,EAAO,CAChB,GAAI,CAAC,KAAK,kBAAoB,KAAK,IAAI,IAAI,yBAAyB,GAAK,KAAK,IAAI,IAAI,wBAAwB,EAC5G,OAEF,GAAM,CACJ,SAAAgF,EACA,QAAAlI,CACF,EAAI,KAAK,0BAA0BkD,EAAM,MAAM,EAC3CgF,GAAU,UAAU,GAAKlI,GAAS,UAAU,IAGhDkD,EAAM,eAAe,EACrB,KAAK,iBAAiB,eAAe,OAAQ,IAAI,EACnD,CACA,WAAWA,EAAO,CAChB,GAAM,CACJ,SAAAgF,EACA,QAAAlI,CACF,EAAI,KAAK,0BAA0BkD,EAAM,MAAM,EAC3CgF,GAAU,UAAU,GAAKlI,GAAS,UAAU,GAG5C,KAAK,kBAAoB,CAAC,KAAK,IAAI,IAAI,wBAAwB,GACjE,KAAK,iBAAiB,mBAAmB,CAE7C,CACA,WAAWkD,EAAO,CACZ,KAAK,kBAAoB,CAAC,KAAK,IAAI,IAAI,wBAAwB,GACjE,KAAK,iBAAiB,cAAc,EAEtCA,EAAM,eAAe,CACvB,CACA,WAAWA,EAAO,CACZ,CAAC,KAAK,IAAI,IAAI,qBAAqB,GAAK,CAAC,KAAK,kBAGlDA,EAAM,eAAe,EACjBA,EAAM,SACR,KAAK,gBAAgB,KAAK,IAAI,EAE9B,KAAK,gBAAgB,KAAK,IAAI,EAElC,CACA,YAAa,CACX,KAAK,iBAAiB,KAAK,IAAI,CACjC,CACF,EAGI+N,GAA4B,cAAcpR,CAAS,CACrD,UAAUpD,EAAO,CACf,KAAK,mBAAqBA,EAAM,kBAClC,CACA,YAAYsI,EAAS,CACnB,MAAM,EACN,KAAK,QAAUA,CACjB,CACA,eAAgB,CACd,KAAK,yBAAyB,CAC5B,uBAAwB,KAAK,yBAAyB,KAAK,IAAI,CACjE,CAAC,CACH,CACA,0BAA2B,CACzB,IAAMmM,EAAY,KAAK,mBAAmB,mBAAmB,EACvDC,EAAYD,EAAY,EAC9BE,EAAc,KAAK,QAASD,CAAS,EACrCE,GAAe,KAAK,QAASH,CAAS,CACxC,CACA,UAAW,CACT,OAAO,KAAK,mBAAmB,mBAAmB,CACpD,CACF,EAGII,GAA6B,cAAczR,CAAS,CACtD,UAAUpD,EAAO,CACf,KAAK,mBAAqBA,EAAM,kBAClC,CACA,YAAYsI,EAAS,CACnB,MAAM,EACN,KAAK,QAAUA,CACjB,CACA,eAAgB,CACd,KAAK,yBAAyB,CAC5B,wBAAyB,KAAK,0BAA0B,KAAK,IAAI,CACnE,CAAC,CACH,CACA,2BAA4B,CAC1B,IAAMwM,EAAa,KAAK,mBAAmB,oBAAoB,EACzDJ,EAAYI,EAAa,EAC/BH,EAAc,KAAK,QAASD,CAAS,EACrCE,GAAe,KAAK,QAASE,CAAU,CACzC,CACA,UAAW,CACT,OAAO,KAAK,mBAAmB,oBAAoB,CACrD,CACF,EAGIC,GAAiBC,GAAKA,EAAE,eAAe,EACvCC,GAAuBD,GAAKA,EAAE,qBAAqB,EACnDE,GAA0BF,GAAKA,EAAE,wBAAwB,EACzDG,GAAoBH,GAAKA,EAAE,kBAAkB,EAC7CI,GAAoBJ,GAAKA,EAAE,kBAAkB,EAC7CK,GAAsB,CACxB,OAAQ,CACN,KAAM,SACN,UAAW,2BACX,SAAU,0BACV,YAAaD,EACf,EACA,KAAM,CACJ,KAAM,OACN,UAAW,gCACX,WAAY,OACZ,YAAaA,EACf,EACA,MAAO,CACL,KAAM,QACN,UAAW,iCACX,WAAY,QACZ,YAAaA,EACf,EACA,UAAW,CACT,KAAM,YACN,UAAW,0BACX,UAAW,GACX,YAAaA,EACf,EACA,UAAW,CACT,KAAM,SACN,UAAW,4BACX,SAAU,2BACV,YAAaL,EACf,EACA,QAAS,CACP,KAAM,OACN,UAAW,8BACX,WAAY,OACZ,YAAaA,EACf,EACA,SAAU,CACR,KAAM,QACN,UAAW,+BACX,WAAY,QACZ,YAAaA,EACf,EACA,aAAc,CACZ,KAAM,YACN,UAAW,uCACX,UAAW,GACX,YAAaA,EACf,EACA,gBAAiB,CACf,KAAM,SACN,UAAW,0BACX,SAAU,yBACV,YAAaE,EACf,EACA,cAAe,CACb,KAAM,OACN,UAAW,4BACX,WAAY,OACZ,YAAaA,EACf,EACA,eAAgB,CACd,KAAM,QACN,UAAW,6BACX,WAAY,QACZ,YAAaA,EACf,EACA,mBAAoB,CAClB,KAAM,YACN,UAAW,qCACX,UAAW,GACX,YAAaA,EACf,EACA,mBAAoB,CAClB,KAAM,SACN,UAAW,6BACX,SAAU,4BACV,YAAaC,EACf,EACA,iBAAkB,CAChB,KAAM,OACN,UAAW,+BACX,WAAY,OACZ,YAAaA,EACf,EACA,kBAAmB,CACjB,KAAM,QACN,UAAW,gCACX,WAAY,QACZ,YAAaA,EACf,EACA,sBAAuB,CACrB,KAAM,YACN,UAAW,wCACX,UAAW,GACX,YAAaA,EACf,EACA,aAAc,CACZ,KAAM,SACN,UAAW,+BACX,SAAU,8BACV,YAAaC,EACf,EACA,WAAY,CACV,KAAM,OACN,UAAW,iCACX,WAAY,OACZ,YAAaA,EACf,EACA,YAAa,CACX,KAAM,QACN,UAAW,kCACX,WAAY,QACZ,YAAaA,EACf,EACA,gBAAiB,CACf,KAAM,YACN,UAAW,0CACX,UAAW,GACX,YAAaA,EACf,CACF,EACA,SAASG,GAAwBpK,EAAM,CACrC,OAAOmK,GAAoBnK,CAAI,CACjC,CACA,IAAIqK,GAAa,CAAC,YAAa,UAAW,UAAU,EAChDC,GAAgB,CAAC,eAAgB,aAAc,aAAa,EAC5DC,GAAgB,CAAC,SAAU,OAAQ,OAAO,EAC1CC,GAAY,CAAC,SAAU,OAAQ,QAAS,WAAW,EACnDC,GAAY,CAAC,kBAAmB,qBAAsB,SAAU,YAAa,cAAc,EAC3FC,GAAU,CAAC,OAAQ,aAAc,UAAW,gBAAiB,kBAAkB,EAC/EC,GAAW,CAAC,QAAS,cAAe,WAAY,iBAAkB,mBAAmB,EACrFC,GAAmB,CAAC,kBAAmB,gBAAiB,gBAAgB,EACxEC,GAAsB,CAAC,qBAAsB,mBAAoB,mBAAmB,EACpFC,GAAsB,CAAC,GAAGF,GAAkB,qBAAsB,GAAGC,GAAqB,uBAAuB,EACjHE,GAAU,CAAC,GAAGV,GAAY,GAAGC,GAAe,GAAGC,GAAe,GAAGK,GAAkB,GAAGC,EAAmB,EACzGG,GAAmB,cAAc9S,CAAS,CAC5C,YAAY8H,EAAM,CAChB,MAAM,EACN,KAAK,QAAU,GAEf,KAAK,YAAc,CAAC,EACpB,KAAK,KAAOA,EACZ,KAAK,QAAUoK,GAAwBpK,CAAI,CAC7C,CACA,UAAUlL,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,aAAeA,EAAM,aAC1B,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,YAAcA,EAAM,WAC3B,CACA,eAAgB,CACd,KAAK,UAAY,KAAK,IAAI,IAAI,WAAW,EACzC,KAAK,cAAc,CAAC,QAAQ,EAAG,IAAM,CACnC,KAAK,oBAAsB,KAAK,kBAAkB,IAAImW,GAAoB,IAAI,CAAC,EAC/E,KAAK,yBAAyB,CAC5B,uBAAwB,KAAK,yBAAyB,KAAK,IAAI,CACjE,CAAC,CACH,CAAC,CACH,CACA,yBAAyB1P,EAAO,CAC9B,KAAK,KAAK,aAAa,GAAGA,EAAM,MAAM,IAAI,CAC5C,CACA,0BAA2B,CACrB,KAAK,QAAQ,WACjB,KAAK,aAAa,SAAS,KAAK,KAAM,IAAI,CAC5C,CACA,cAAc2P,EAAO9E,EAAU,CACzB8E,EAAM,QAAQ,KAAK,IAAI,GAAK,GAC9B9E,EAAS,CAEb,CACA,qBAAsB,CACpB,OAAO,KAAK,UACd,CACA,wBAAyB,CACvB,OAAO,KAAK,mBACd,CACA,QAAQ+E,EAAMC,EAAYC,EAAW,CACnC,KAAK,KAAOF,EACZ,KAAK,WAAaC,EAClB,KAAK,UAAYC,EACjB,KAAK,kBAAkB,IAAI3D,GAA0B,KAAK,UAAU,CAAC,EACrE,KAAK,8BAA8B,EACnC,KAAK,iBAAiB,EACtB,KAAK,wBAAwB,EAC7B,KAAK,cAAcgD,GAAS,IAAM,CAChC,KAAK,mBAAqB,KAAK,kBAAkB,IAAIpB,GAA0B,KAAK,UAAU,CAAC,EAC/F,KAAK,yBAAyB,CAC5B,uBAAwB,IAAM,KAAK,qBAAqB,CAC1D,CAAC,CACH,CAAC,EACD,KAAK,cAAcqB,GAAU,IAAM,CACjC,KAAK,mBAAqB,KAAK,kBAAkB,IAAIhB,GAA2B,KAAK,UAAU,CAAC,EAChG,KAAK,yBAAyB,CAC5B,wBAAyB,IAAM,KAAK,qBAAqB,CAC3D,CAAC,CACH,CAAC,EACD,KAAK,cAAca,GAAW,IAAM,KAAK,kBAAkB,IAAIc,GAAiB,KAAK,WAAY,KAAK,OAAS,SAAWD,EAAY,MAAM,CAAC,CAAC,EAC9I,KAAK,cAAcN,GAAS,IAAM,KAAK,kBAAkB,IAAIQ,GAAoB,KAAK,UAAU,CAAC,CAAC,EAClG,KAAK,cAAcd,GAAW,IAAM,KAAK,kBAAkB,IAAIe,GAAmBC,GAAS,KAAK,KAAK,kBAAkB,GAAGA,CAAK,IAAI,CAAC,CAAC,CAAC,EACtI,KAAK,aAAa,EAClB,KAAK,yBAAyB,CAChC,CACA,cAAe,CACb,KAAK,yBAAyB,CAC5B,wBAAyB,KAAK,0BAA0B,KAAK,IAAI,EACjE,6BAA8B,KAAK,+BAA+B,KAAK,IAAI,EAC3E,qBAAsBzQ,GAAU,KAAK,uBAAuBA,EAAO,WAAW,CAChF,CAAC,EACD,KAAK,0BAA0B,EAC/B,KAAK,+BAA+B,EACpC,KAAK,uBAAuB,CAC9B,CACA,kBAAmB,CAEjB,GADyB8P,GAAoB,QAAQ,KAAK,IAAI,GAAK,EAC7C,CACpB,KAAK,KAAK,YAAY,EAAI,EAC1B,MACF,CACA,IAAMnQ,EAAW,IAAM,CACrB,IAAM+Q,EAAmB,KAAK,IAAI,IAAI,gBAAgB,EAChDC,EAAgB,KAAK,IAAI,YAAY,OAAO,EAClD,KAAK,KAAK,YAAYD,GAAoBC,CAAa,CACzD,EACA,KAAK,2BAA2B,YAAahR,CAAQ,EACrDA,EAAS,CACX,CAIA,yBAA0B,CACxB,KAAK,cAAc,CAAC,YAAa,kBAAmB,eAAgB,oBAAoB,EAAG,IAAM,CAC/F,IAAMiR,EAAkB,IAAM,KAAK,UAAU,WAAa,EAC1D,KAAK,2BAA2B,KAAK,UAAW,CAC9C,OAAQA,CACV,CAAC,CACH,CAAC,CACH,CACA,2BAA4B,CAC1B,KAAK,cAAc,CAAC,QAAQ,EAAG,IAAM,KAAK,4BAA4B,CAAC,CACzE,CACA,gCAAiC,CAC/B,KAAK,cAAc,CAAC,QAAQ,EAAG,IAAM,KAAK,4BAA4B,CAAC,CACzE,CAGA,+BAAgC,CAC9B,IAAMC,EAAgBC,GAAK,CACrB,KAAK,YAAY,WAAW,GAC1BA,EAAE,YACJA,EAAE,eAAe,CAGvB,EACA,KAAK,WAAW,iBAAiB,YAAaD,EAAe,CAC3D,QAAS,EACX,CAAC,EACD,KAAK,eAAe,IAAM,KAAK,WAAW,oBAAoB,YAAaA,CAAa,CAAC,CAC3F,CAIA,4BAA4BE,EAAc,GAAO,CAC/C,IAAMC,EAAc,KAAK,eAAe,EAClCC,EAAiB,KAAK,4BAA4B,EACxD,KAAK,sBAAsB,kBAAkBD,EAAaC,EAAgBF,CAAW,CACvF,CACA,gBAAiB,CACf,OAAOG,GAAe,KAAK,SAAS,CACtC,CACA,6BAA8B,CAC5B,OAAOC,GAAe,KAAK,UAAW,KAAK,SAAS,CACtD,CACA,+BAA+BxR,EAAU,CACvC,IAAMyR,EAAwB,KAAK,sBAAsB,cAAc,KAAK,UAAWzR,CAAQ,EAC/F,KAAK,eAAe,IAAMyR,EAAsB,CAAC,CACnD,CACA,wBAAyB,CACvB,OAAOC,GAAS,KAAK,SAAS,CAChC,CACA,uBAAwB,CACtB,OAAOF,GAAe,KAAK,UAAW,KAAK,SAAS,CACtD,CACA,2BAA4B,CAE1B,OADqC,KAAK,IAAI,IAAI,4BAA4B,GACvCG,GAA2B,KAAK,SAAS,CAClF,CACA,oBAAqB,CACnB,OAAO,KAAK,SACd,CACA,uBAAuBC,EAAQ,CAC7B,KAAK,WAAW,MAAM,UAAY,cAAcA,CAAM,KACxD,CACA,oBAAqB,CAKnB,MAJY,CACV,KAAM,KAAK,UAAU,WACrB,MAAO,KAAK,UAAU,WAAa,KAAK,UAAU,WACpD,CAEF,CACA,4BAA4B5T,EAAO,CACjC6T,GAAe,KAAK,UAAW7T,EAAO,KAAK,SAAS,CACtD,CACA,oBAAqB,CAEnB,MAAO,EADQ,KAAK,QAAQ,YAAc,OACxB,CAAC,CAAC,KAAK,oBAAsB,KAAK,mBAAmB,SAAS,EAAI,CACtF,CACA,sBAAuB,CACrB,IAAM8T,EAAU,KAAK,mBAAmB,EACpC,KAAK,SAAWA,IAClB,KAAK,QAAUA,EACf,KAAK,uBAAuB,EAEhC,CACA,uBAAuBV,EAAc,GAAO,CAC1C,IAAMW,EAAO,KAAK,QAAQ,YAAY,KAAK,WAAW,EACtD,GAAI,CAAC,KAAK,SAAWA,EAAK,SAAW,EAAG,CACtC,KAAK,KAAK,YAAY,CACpB,SAAU,KAAK,WACjB,CAAC,EACD,MACF,CACA,IAAMjT,EAAc,KAAK,IAAI,YAAY,OAAO,EAE1CkT,EADqB,KAAK,IAAI,IAAI,oBAAoB,GACtBlT,EAChCmT,EAAoBF,EAAK,OAAOrU,GAAW,CAC/C,IAAMwU,EAAexU,EAAQ,YAAY,EAEzC,OADc,KAAK,QAAQ,UAAY,CAACsU,GAAWE,EAAeF,GAAW,CAACE,CAEhF,CAAC,EACD,KAAK,KAAK,YAAY,CACpB,SAAUD,EACV,aAAcb,CAChB,CAAC,CACH,CACF,EAGA,SAASe,GAAgBC,EAAS,CAChC,IAAI3L,EACJ,OAAI2L,EAAQ,OAAS,SACnB3L,EACA,eAAe2L,EAAQ,QAAQ;AAAA,8BACLA,EAAQ,SAAS;AAAA,oBAG3C3L,EACA,eAAe2L,EAAQ,SAAS,iCAE3B3L,CACT,CACA,IAAI4L,GAAmB,cAAcC,CAAU,CAC7C,aAAc,CACZ,MAAM,EACN,KAAK,UAAYC,EACjB,KAAK,WAAaA,EAClB,KAAK,SAAW,CAAC,EACjB,KAAK,KAAOD,EAAU,sBAAsB,aAAa,MAAM,EAC/D,KAAK,QAAU7C,GAAwB,KAAK,IAAI,EAChD,KAAK,YAAY0C,GAAgB,KAAK,OAAO,CAAC,CAChD,CACA,UAAUhY,EAAO,CACf,KAAK,MAAQA,CACf,CACA,eAAgB,CACd,IAAMqY,EAAY,CAChB,kBAAmBC,GAAU,KAAK,UAAU,MAAM,OAASA,EAC3D,YAAa,CAAC,CACZ,SAAAC,CACF,IAAM,KAAK,YAAYA,CAAQ,EAC/B,YAAaC,GAAY,CACvB,KAAK,SAAWA,CAClB,EACA,kBAAmB7B,GAAS,KAAK,WAAW,MAAM,MAAQA,EAC1D,aAAc8B,GAAU,KAAK,WAAW,MAAM,UAAY,cAAcA,CAAM,GAChF,EACa,KAAK,kBAAkB,IAAIvC,GAAiB,KAAK,IAAI,CAAC,EAC9D,QAAQmC,EAAW,KAAK,WAAY,KAAK,SAAS,CACzD,CACA,SAAU,CACR,KAAK,YAAY,CAAC,CAAC,EACnB,MAAM,QAAQ,CAChB,CACA,YAAYE,EAAU,CACpB,IAAMG,EAAUC,EAAA,GACX,KAAK,UAEV,KAAK,SAAW,CAAC,EACjB,KAAK,kBAAoB,KACzB,IAAMC,EAAazF,GAAU,CAC3B,IAAM0F,EAAa1F,EAAO,cAAc,EAClC2F,EAAkBJ,EAAQG,CAAU,EAC1C,GAAIC,EACF,KAAK,SAASD,CAAU,EAAIC,EAC5B,OAAOJ,EAAQG,CAAU,EACzB,KAAK,eAAeC,EAAgB,OAAO,CAAC,MACvC,CACL,GAAI,CAAC3F,EAAO,WAAW,EAAE,UACvB,OAEF,IAAMtI,EAAU,IAAIkO,GAAQ5F,EAAQ,KAAK,MAAO,KAAK,QAAQ,IAAI,EACjE,KAAK,SAAS0F,CAAU,EAAIhO,EAC5B,KAAK,UAAUA,EAAQ,OAAO,CAAC,CACjC,CACF,EACA0N,EAAS,QAAQK,CAAU,EAC3BI,GAAsBN,CAAO,EAAE,QAAQO,GAAc,CACnD,KAAK,WAAW,YAAYA,EAAW,OAAO,CAAC,EAC/CA,EAAW,QAAQ,CACrB,CAAC,EACDC,EAAa,KAAK,WAAY,UAAU,CAC1C,CACA,UAAU5Q,EAAS,CACb,KAAK,SACP6Q,GAAoB,KAAK,WAAY7Q,EAAS,KAAK,iBAAiB,EAEpE,KAAK,WAAW,YAAYA,CAAO,EAErC,KAAK,kBAAoBA,CAC3B,CACA,eAAeyH,EAAM,CACf,KAAK,WACPqJ,GAAgB,KAAK,WAAYrJ,EAAM,KAAK,iBAAiB,EAC7D,KAAK,kBAAoBA,EAE7B,CACF,EACIsJ,GAAuB,CACzB,SAAU,mBACV,UAAWnB,EACb,EAGA,SAASoB,GAAkBlD,EAAO,CAChC,OAAOA,EAAM,IAAIlL,GAAQ,2BAA2BA,CAAI,uBAAuB,EAAE,KAAK,EAAE,CAC1F,CACA,IAAIqO,GACJ;AAAA;AAAA;AAAA,cAGcD,GAAkB,CAAC,UAAW,YAAa,WAAY,cAAc,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,cAIvEA,GAAkB,CAAC,OAAQ,SAAU,QAAS,WAAW,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,cAK3DA,GAAkB,CAAC,gBAAiB,kBAAmB,iBAAkB,oBAAoB,CAAC,CAAC;AAAA;AAAA;AAAA,cAG/FA,GAAkB,CAAC,mBAAoB,qBAAsB,oBAAqB,uBAAuB,CAAC,CAAC;AAAA;AAAA;AAAA,cAG3GA,GAAkB,CAAC,aAAc,eAAgB,cAAe,iBAAiB,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,YAK7FE,GAAe,cAAcrB,CAAU,CACzC,aAAc,CACZ,MAAMoB,GAAoB,CAACE,GAAwBC,GAAqBC,GAAqBC,GAAoBP,EAAoB,CAAC,EACtI,KAAK,cAAgBjB,EACrB,KAAK,WAAaA,EAClB,KAAK,cAAgBA,EACrB,KAAK,KAAOA,EACZ,KAAK,QAAUA,EACf,KAAK,MAAQA,CACf,CACA,UAAUpY,EAAO,CACf,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,IAAM6Z,EAAY,CAACvB,EAAQhQ,IAAY,CACrC,IAAMwR,EAAe,GAAGxB,CAAM,KAC9BhQ,EAAQ,MAAM,UAAYwR,EAC1BxR,EAAQ,MAAM,OAASwR,CACzB,EACMzB,EAAY,CAChB,iCAAkC,CAAC0B,EAAUC,IAAY,KAAK,iCAAiCD,EAAUC,CAAO,EAChH,eAAgBC,GAASC,GAAiB,KAAK,OAAO,EAAGD,CAAK,EAC9D,YAAaA,GAASE,GAAiB,KAAK,OAAO,EAAGF,CAAK,EAC3D,aAAc3B,GAAUuB,EAAUvB,EAAQ,KAAK,IAAI,EACnD,gBAAiBA,GAAUuB,EAAUvB,EAAQ,KAAK,OAAO,EACzD,cAAe8B,GAAW,KAAK,KAAK,MAAM,QAAUA,EACpD,iBAAkBA,GAAW,KAAK,QAAQ,MAAM,QAAUA,EAC1D,mBAAoB9B,GAAU,KAAK,WAAW,MAAM,OAASA,EAC7D,gBAAiBtX,GAAO,KAAK,WAAW,MAAM,IAAMA,EACpD,kBAAmB2V,GAAS,KAAK,WAAW,MAAM,MAAQA,EAC1D,sBAAuB2B,GAAU,KAAK,cAAc,MAAM,OAASA,EACnE,sBAAuBpX,GAAU,KAAK,cAAc,MAAM,OAASA,EACnE,qBAAsByV,GAAS,KAAK,cAAc,MAAM,MAAQA,EAChE,mBAAoB,CAACoD,EAAUM,IAAS,KAAK,oBAAoBN,EAAUM,CAAI,EAC/E,oBAAqB,CAACN,EAAU7T,IAAW,CACtB,CAAC,KAAK,cAAc,UAAW,KAAK,MAAM,SAAS,EAC3D,QAAQoU,GAAa,CAC9BA,EAAU,OAAO,wBAA2CpU,EAAO,UAAU,EAC7EoU,EAAU,OAAO,mBAAiCpU,EAAO,MAAM,EAC/DoU,EAAU,OAAO,kBAA+BpU,EAAO,KAAK,CAC9D,CAAC,EACD,KAAK,oBAAoB,wBAA2CA,EAAO,UAAU,EACrF,KAAK,oBAAoB,mBAAiCA,EAAO,MAAM,EACvE,KAAK,oBAAoB,kBAA+BA,EAAO,KAAK,CACtE,EACA,6BAA8B,CAAC6T,EAAUQ,IAAO,KAAK,cAAc,UAAU,OAAOC,GAAiCD,CAAE,EACvH,mCAAoC1U,GAAY,CAC9C,IAAMyR,EAAwB,KAAK,sBAAsB,cAAc,KAAK,cAAezR,CAAQ,EACnG,KAAK,eAAe,IAAMyR,EAAsB,CAAC,CACnD,EACA,4BAA6BmD,GAAY,KAAK,KAAK,MAAM,UAAY,KAAK,QAAQ,MAAM,UAAYA,EACpG,qBAAsB,CAACV,EAAUW,IAAe,CAC9C,CAAC,KAAK,KAAM,KAAK,cAAe,KAAK,OAAO,EAAE,QAAQC,GAAMA,EAAG,UAAU,OAAOZ,EAAUW,CAAU,CAAC,CACvG,EACA,qBAAsB/D,GAAS,KAAK,cAAc,MAAM,MAAQA,CAClE,EACA,KAAK,KAAO,KAAK,kBAAkB,IAAIiE,EAAc,EACrD,KAAK,KAAK,QAAQvC,EAAW,KAAK,OAAO,EAAG,KAAK,cAAe,KAAK,KAAM,KAAK,QAAS,KAAK,WAAY,KAAK,aAAa,GACxH,KAAK,cAAgB,KAAK,IAAI,IAAI,sBAAsB,GAAK,KAAK,IAAI,IAAI,cAAc,IAAM,aAChGwC,GAAwB,KAAK,OAAO,EAAG,EAAI,CAE/C,CACA,iCAAiCd,EAAUe,EAAa,CACtD,IAAMC,EAAwB,KAAK,cAAc,UACjDA,EAAsB,OAAO,mBAAoBD,CAAW,EAC5DC,EAAsB,OAAO,sBAAuB,CAACD,CAAW,CAClE,CACA,sBAAuB,CACrB,MAAO,CAAC,KAAK,KAAM,KAAK,OAAO,CACjC,CACF,EACIE,GAAmB,CACrB,SAAU,eACV,UAAWxB,EACb,EAGIyB,GAAuB,cAAc7X,CAAS,CAChD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,sBAClB,CACA,UAAUpD,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,uBAAyBA,EAAM,sBACtC,CACA,eAAgB,CACd,KAAK,yBAAyB,CAC5B,wBAAyB,KAAK,0BAA0B,KAAK,IAAI,EACjE,6BAA8B,KAAK,+BAA+B,KAAK,IAAI,CAC7E,CAAC,CACH,CACA,2BAA4B,CAC1B,KAAK,OAAO,CACd,CACA,gCAAiC,CAC/B,KAAK,OAAO,CACd,CACA,QAAS,CACH,KAAK,uBAAuB,SAAS,EACvC,KAAK,uBAAuB,mBAAmB,IAAM,CACnD,KAAK,uBAAuB,mBAAmB,IAAM,KAAK,WAAW,CAAC,CACxE,CAAC,EAED,KAAK,WAAW,CAEpB,CACA,YAAa,CACX,IAAMkb,EAAgB,KAAK,aAAa,IAAI,QAAQ,EACpD,GAAI,CAACA,GAAiB,KAAK,uBAAuB,SAAS,EACzD,OAEF,IAAMhV,EAAS,CACb,wBAAyBgV,EAAc,0BAA0B,EACjE,sBAAuB,KAAK,wBAAwB,CACtD,EACA,KAAK,kBAAkBhV,CAAM,CAC/B,CACA,kBAAkBA,EAAQ,CAExB,GAD4B,KAAK,0BAA4BA,EAAO,yBAA2B,KAAK,wBAA0BA,EAAO,sBAC5G,CACvB,KAAK,wBAA0BA,EAAO,wBACtC,KAAK,sBAAwBA,EAAO,sBACpC,IAAMO,EAAQ,CACZ,KAAM,yBACR,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACF,CAEA,2BAA4B,CAC1B,OAAO,KAAK,uBACd,CAEA,yBAA0B,CACxB,OAAO,KAAK,qBACd,CACF,EAGI0U,GAAe,qBACfC,GAAqB,MAAMA,WAA2BhY,CAAS,CACjE,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,oBAChB,KAAK,eAAiBgY,GAAmB,qBAAqB,KAAK,CACrE,CACA,UAAUpb,EAAO,CACf,KAAK,aAAeA,EAAM,YAC5B,CAIA,sCAAsCqb,EAAU,CAC9CA,EAASF,EAAY,EAAI,KAAK,cAChC,CACA,wBAAwB1U,EAAO,CAC7B,OAAO8M,GAAuB,KAAK,IAAK9M,EAAM,OAAQ4D,GAAS,sBAAsB,CACvF,CAIA,oBAAoB5D,EAAO,CAEzB,OADY,KAAK,oBAAoBA,EAAM,MAAM,CAEnD,CACA,oBAAoB6B,EAAS,CAC3B,IAAIgT,EAAUhT,EACd,KAAOgT,GAAS,CACd,IAAMzC,EAAayC,EAAQH,EAAY,EACvC,GAAIjX,EAAQ2U,CAAU,EAEpB,OAD0BA,IAAe,KAAK,eAGhDyC,EAAUA,EAAQ,aACpB,CACA,MAAO,EACT,CACA,wBAAwB7U,EAAO,CAC7B,IAAMvG,EAAW,KAAK,wBAAwBuG,CAAK,EACnD,OAAOvG,EAAWA,EAAS,gBAAgB,EAAI,IACjD,CACA,sBAAsBuG,EAAO,CAC3B,IAAM8U,EAAsB,KAAK,IAAI,YAAY,QAAQ,EACnDvE,EAAIvQ,EACN+U,EACAC,EAQJ,GAPIzE,EAAE,SAAW,MAAQA,EAAE,SAAW,MACpCwE,EAAIxE,EAAE,QACNyE,EAAIzE,EAAE,UAENwE,EAAIxE,EAAE,EACNyE,EAAIzE,EAAE,GAEJuE,EAAqB,CACvB,IAAMlI,EAAc,KAAK,aAAa,gBAAgB,EAChDqI,EAASrI,EAAY,iBAAiB,EAAE,mBAAmB,EAC3DsI,EAAStI,EAAY,iBAAiB,EAAE,mBAAmB,EACjEmI,GAAKG,EAAO,KACZF,GAAKC,EAAO,GACd,CACA,MAAO,CACL,EAAAF,EACA,EAAAC,CACF,CACF,CACF,EACAL,GAAmB,qBAAuB,IAAIQ,GAC9C,IAAIC,GAAoBT,GAGpBU,GAAoB,cAAc1Y,CAAS,CAC7C,aAAc,CACZ,MAAM,EACN,KAAK,SAAW,oBAChB,KAAK,WAAa2Y,GAAU,KAAK,WAAY,GAAG,EAChD,KAAK,SAAWA,GAAU,KAAK,SAAU,GAAG,CAC9C,CACA,UAAU/b,EAAO,CACf,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,SAAWA,EAAM,SACtB,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,wBAA0BA,EAAM,wBACrC,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,eAAiBA,EAAM,eAC5B,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,KAAK,aAAa,UAAUgc,GAAK,CAC/B,KAAK,YAAcA,EAAE,YACvB,CAAC,CACH,CACA,uBAAuBvV,EAAOwV,EAAgB,GAAO,CACnD,IAAM1V,EAAME,EAAM,IACZyV,EAAMzV,EAAM,OACZxG,EAAOwG,EAAM,SAAWA,EAAM,QAC9B0V,EAAgC,CAAC,CAAC,KAAK,cAAgB1V,EAAM,SAC7D2V,EAAc,KAAK,kBAAkB,wBAAwB3V,CAAK,EACpE4V,EAAY,GAChB,OAAQ9V,EAAK,CACX,KAAKqN,EAAQ,UACb,KAAKA,EAAQ,SACP,CAAC3T,GAAQ,CAACic,IACZ,KAAK,eAAe3V,CAAG,EACvB8V,EAAY,IAEd,MACF,KAAKzI,EAAQ,KACb,KAAKA,EAAQ,MACb,KAAKA,EAAQ,GACb,KAAKA,EAAQ,KACX,GAAI,CAACwI,EACH,MAAO,GAELnc,GAAQ,CAACic,GAAO,CAACC,IACnB,KAAK,sBAAsB5V,EAAK6V,CAAW,EAC3CC,EAAY,IAEd,MACF,KAAKzI,EAAQ,UACb,KAAKA,EAAQ,QACP,CAAC3T,GAAQ,CAACic,IACZG,EAAY,KAAK,iBAAiB9V,EAAK6V,EAAaH,CAAa,GAEnE,KACJ,CACA,OAAII,GACF5V,EAAM,eAAe,EAEhB4V,CACT,CACA,iBAAiB9V,EAAK6V,EAAaH,EAAe,CAIhD,OAHIA,IACFG,EAAc,KAAK,aAAa,eAAe,GAE5CA,GAGD7V,IAAQqN,EAAQ,QAClB,KAAK,SAASwI,CAAW,EAEzB,KAAK,WAAWA,CAAW,EAEtB,IAPE,EAQX,CACA,WAAWE,EAAgB,CACzB,GAAM,CACJ,YAAAC,EACA,WAAAC,EACA,aAAAC,EACA,WAAAC,EACA,YAAAC,CACF,EAAIL,EACApY,EAAQuY,CAAY,GAAK,CAACA,EAAa,SAAS,GAClD,KAAK,YAAY,iBAAiB,EAAE,oBAAoBA,CAAY,EAElEvY,EAAQqY,CAAW,GACrB,KAAK,YAAY,iBAAiB,EAAE,mBAAmBA,EAAaC,CAAU,EAE3EF,EAAe,SAClB,KAAK,YAAY,iBAAiB,EAAE,mBAAmBI,CAAU,EAEnE,KAAK,aAAa,eAAe,CAC/B,SAAUA,EACV,OAAQC,EACR,UAAW,KACX,kBAAmB,EACrB,CAAC,EACD,KAAK,cAAc,eAAe,CAChC,SAAUD,EACV,UAAW,KACX,OAAQC,CACV,CAAC,CACH,CAEA,WAAWC,EAAU,CAEnB,IAAMzF,EADc,KAAK,aAAa,gBAAgB,EACnB,iBAAiB,EAAE,mBAAmB,EACnE0F,EAAkB,KAAK,kBAAkB,EACzCC,EAAoB,KAAK,kBAAkB,eAAe,EAC1DC,EAAyB5F,EAAe,IAAM0F,EAC9CG,EAAuB,KAAK,SAAS,mBAAmBD,EAAyBD,CAAiB,EACpG,KAAK,YAAY,sBAAsB,EACzC,KAAK,iCAAiCF,EAAUI,CAAoB,EAEpE,KAAK,mBAAmBJ,EAAUI,CAAoB,CAE1D,CAEA,SAASJ,EAAU,CAEjB,IAAMzF,EADc,KAAK,aAAa,gBAAgB,EACnB,iBAAiB,EAAE,mBAAmB,EACnE2F,EAAoB,KAAK,kBAAkB,eAAe,EAC1DG,EAAsB9F,EAAe,IACrC+F,EAAoB,KAAK,SAAS,mBAAmBD,EAAsBH,CAAiB,EAC9F,KAAK,YAAY,sBAAsB,EACzC,KAAK,iCAAiCF,EAAUM,EAAmB,EAAI,EAEvE,KAAK,mBAAmBN,EAAUM,EAAmB,EAAI,CAE7D,CACA,mBAAmBN,EAAUL,EAAaY,EAAK,GAAO,CACpD,IAAMN,EAAkB,KAAK,kBAAkB,EACzCO,EAAW,KAAK,kBAAkB,YAAY,EAC9CC,EAAU,KAAK,kBAAkB,WAAW,EAC5CP,EAAoB,KAAK,kBAAkB,eAAe,EAC1DQ,EAAiB,KAAK,SAAS,OAAOV,EAAS,QAAQ,EACvDW,EAAeJ,EAErBG,GAAgB,UAAYT,EAAkBC,EAAoBD,EAAkBC,EAC9EU,EAAgBF,GAAgB,OAASC,EAC3Cb,EAAa,KAAK,SAAS,mBAAmBc,EAAgBV,CAAiB,EACnF,GAAIJ,IAAeE,EAAS,SAAU,CACpC,IAAMa,EAAON,EAAK,GAAK,EACvBZ,EAAcG,EAAaE,EAAS,SAAWa,CACjD,CACA,IAAIjB,EACAW,GACFX,EAAa,SACTE,EAAaU,IACfV,EAAaU,GAEXb,EAAca,IAChBb,EAAca,KAGhBZ,EAAa,MACTE,EAAaW,IACfX,EAAaW,GAEXd,EAAcc,IAChBd,EAAcc,IAGd,KAAK,oBAAoBX,CAAU,IACrCH,EAAcG,EACdF,EAAa,OAEf,KAAK,WAAW,CACd,YAAAD,EACA,WAAAC,EACA,aAAc,KACd,WAAAE,EACA,YAAaE,EAAS,MACxB,CAAC,CACH,CACA,iCAAiCA,EAAUL,EAAaY,EAAK,GAAO,CAClE,KAAK,WAAW,CACd,YAAAZ,EACA,WAAYY,EAAK,SAAW,MAC5B,aAAc,KACd,WAAYZ,EACZ,YAAaK,EAAS,MACxB,CAAC,EACD,WAAW,IAAM,CACf,IAAMF,EAAa,KAAK,+BAA+BE,EAAUO,CAAE,EACnE,KAAK,WAAW,CACd,YAAAZ,EACA,WAAYY,EAAK,SAAW,MAC5B,aAAc,KACd,WAAAT,EACA,YAAaE,EAAS,OACtB,QAAS,EACX,CAAC,CACH,EAAG,EAAE,CACP,CACA,+BAA+BA,EAAUO,EAAK,GAAO,CACnD,IAAMO,EAAOP,EAAK,GAAK,EACjBN,EAAkB,KAAK,kBAAkB,EACzCc,EAAe,KAAK,kBAAkB,WAAW,EACnDC,EAAW,EACXC,EAAejB,EAAS,SAC5B,KAAOiB,GAAgB,GAAKA,GAAgBF,GAAc,CACxD,IAAMvB,EAAc,KAAK,SAAS,OAAOyB,CAAY,EACrD,GAAIzB,EAAa,CACf,IAAM0B,EAAoB1B,EAAY,WAAa,EACnD,GAAIwB,EAAWE,EAAoBjB,EACjC,MAEFe,GAAYE,CACd,CACAD,GAAgBH,CAClB,CACA,OAAO,KAAK,IAAI,EAAG,KAAK,IAAIG,EAAcF,CAAY,CAAC,CACzD,CACA,mBAAoB,CAClB,GAAM,CACJ,aAAAI,EACA,OAAAC,CACF,EAAI,KAAK,aAAa,UAAU,EAC1B7G,EAAiB4G,EAAa,iBAAiB,EAAE,mBAAmB,EACpEE,EAAiB,KAAK,IAAI,kBAAkB,EAC9CpB,EAAkB1F,EAAe,OAASA,EAAe,IAC7D,OAAI6G,EAAO,0BAA0B,IACnCnB,GAAmBoB,GAEdpB,CACT,CACA,oBAAoBqB,EAAU,CAC5B,IAAM5a,EAAU,KAAK,SAAS,OAAO4a,CAAQ,EAC7C,GAAI,CAAC5a,EACH,MAAO,GAET,IAAMiO,EAAYjO,EAAQ,UAC1B,OAAI,OAAOiO,GAAc,SAChB,GAEFA,EAAY,KAAK,kBAAkB,CAC5C,CACA,sBAAsBhL,EAAKqW,EAAU,CACnC,IAAMuB,EAAc,KAAK,sBAAsB,mBAAmB5X,EAAKqW,EAAU,EAAI,EAC/E,CACJ,SAAAsB,CACF,EAAIC,EACE9a,EAAS8a,EAAY,OAC3B,KAAK,WAAW,CACd,YAAaD,EACb,WAAY,KACZ,aAAc7a,EACd,WAAY6a,EACZ,YAAa7a,CACf,CAAC,CACH,CAGA,eAAekD,EAAK,CAClB,IAAM6X,EAAU7X,IAAQqN,EAAQ,UAC1ByK,EAAa,KAAK,mBAAmB,WAAW,EAChDC,EAAiBF,EAAUC,EAAW,CAAC,EAAIrc,EAAMqc,CAAU,EAC3D9B,EAAc6B,EAAU,KAAK,kBAAkB,YAAY,EAAI,KAAK,kBAAkB,WAAW,EACvG,KAAK,WAAW,CACd,YAAA7B,EACA,WAAY,KACZ,aAAc+B,EACd,WAAY/B,EACZ,YAAa+B,CACf,CAAC,CACH,CAEA,aAAaC,EAAUrQ,EAAe,CACpC,IAAMsQ,EAAYtQ,EAAc,SAC1BuQ,EAAkB,KAAK,oBAAoBF,EAAUC,EAAWtQ,CAAa,EACnF,GAAIuQ,IAAoB,GAAO,CACzBA,GACFvQ,EAAc,eAAe,EAE/B,MACF,CACA,GAAIsQ,EAAW,CACb,GAAM,CACJ,SAAAN,EACA,UAAAQ,CACF,EAAIH,EAAS,eAAe,GACXG,EAAYR,IAAa,EAAIA,IAAa,KAAK,kBAAkB,YAAY,KAExF,KAAK,IAAI,IAAI,cAAc,IAAM,GAAK,KAAK,IAAI,IAAI,qBAAqB,EAC1E,KAAK,aAAa,2BAA2B,GAAM,EAAI,GAEvDhQ,EAAc,eAAe,EAC7B,KAAK,aAAa,2BAA2BA,CAAa,GAGhE,MACMqQ,aAAoBlU,IACtBkU,EAAS,UAAU,EAAI,EAErB,KAAK,aAAa,2BAA2BC,CAAS,GACxDtQ,EAAc,eAAe,CAGnC,CAEA,cAAcsQ,EAAW/X,EAAO,CAC9B,IAAMkN,EAAc,KAAK,aAAa,eAAe,EACrD,GAAI,CAACA,EACH,MAAO,GAET,IAAIgL,EAAY,KAAK,kBAAkBhL,CAAW,EAClD,MAAI,CAACgL,IACHA,EAAY,KAAK,YAAY,iBAAiBhL,CAAW,EACrD,CAACgL,GAAa,CAACA,EAAU,YAAY,GAChC,GAGJ,CAAC,CAAC,KAAK,oBAAoBA,EAAWH,EAAW/X,CAAK,CAC/D,CACA,oBAAoB8X,EAAUC,EAAW/X,EAAO,CAC9C,IAAIE,EAAU4X,EAAS,UAAU,EACjC,GAAI,CAAC5X,GAAW4X,aAAoBlU,GAAU,CAE5C,IAAMuU,EADOL,EACI,WAAW,EACxBK,IACFjY,EAAUiY,EAAI,UAAU,EAE5B,CACA,IAAItS,EAUJ,OATI3F,EACE,KAAK,IAAI,IAAI,UAAU,IAAM,UAC/B2F,EAAM,KAAK,qBAAqBiS,EAAUC,EAAW/X,CAAK,EAE1D6F,EAAM,KAAK,sBAAsBiS,EAAUC,EAAW/X,CAAK,EAG7D6F,EAAM,KAAK,yBAAyBiS,EAAUC,CAAS,EAErDlS,IAAQ,KACHA,EAEFA,GAAO,CAAC,CAAC,KAAK,aAAa,iBAAiB,CACrD,CAEA,sBAAsBuS,EAAcL,EAAW/X,EAAQ,KAAM,CAC3D,IAAMqY,EAAcD,EAAa,gBAAgB,EACjDA,EAAa,OAAO,EAAE,MAAM,EAC5BA,EAAa,YAAY,EACzB,IAAME,EAAW,KAAK,sBAAsBD,EAAaN,EAAW,EAAI,EACxE,OAAIO,IAAa,GACR,KAELA,GAAY,KACP,IAETA,EAAS,aAAa,KAAM,GAAMtY,CAAK,EACvCsY,EAAS,UAAU,EAAK,EACjB,GACT,CAEA,qBAAqBF,EAAcL,EAAW/X,EAAQ,KAAM,CAC1D,IAAMqY,EAAcD,EAAa,gBAAgB,EAC3CE,EAAW,KAAK,sBAAsBD,EAAaN,EAAW,EAAI,EACxE,GAAIO,IAAa,GACf,OAAO,KAET,GAAIA,GAAY,KACd,MAAO,GAET,IAAMC,EAAUD,EAAS,gBAAgB,EACnCE,EAAmB,KAAK,eAAeH,CAAW,EAClDI,EAAe,KAAK,eAAeF,CAAO,EAC1CG,EAAYH,GAAWF,EAAY,WAAaE,EAAQ,UAAYF,EAAY,YAAcE,EAAQ,UAC5G,OAAIC,GACFJ,EAAa,oBAAoB,EAE9BM,IACUN,EAAa,WAAW,EAChC,YAAY,EACJE,EAAS,WAAW,EAC5B,gBAAgB,OAAQ,OAAQtY,CAAK,GAExCyY,GACFH,EAAS,mBAAmB,EAC5BA,EAAS,UAAU,GAEnBA,EAAS,UAAU,EAAI,EAElB,EACT,CAEA,yBAAyBF,EAAcL,EAAW,CAChD,IAAMY,EAAmB,KAAK,mBAAmB,WAAW,EACxDC,EACAR,aAAwBlM,GAC1B0M,EAAUC,EAAA3G,EAAA,GACLkG,EAAa,eAAe,GADvB,CAER,OAAQL,EAAYY,EAAiB,CAAC,EAAIpd,EAAMod,CAAgB,CAClE,GAEAC,EAAUR,EAAa,gBAAgB,EAEzC,IAAME,EAAW,KAAK,sBAAsBM,EAASb,EAAW,EAAK,EACrE,GAAIO,IAAa,GACf,OAAO,KAET,GAAIA,aAAoB1U,GACtB0U,EAAS,UAAU,EAAI,UACdA,EACT,OAAO,KAAK,uBAAuBA,EAAS,eAAe,EAAGP,CAAS,EAEzE,OAAOta,EAAQ6a,CAAQ,CACzB,CAKA,sBAAsBQ,EAAkBf,EAAW5Z,EAAc,CAC/D,IAAI4a,EAAeD,EACnB,OAAa,CACPA,IAAqBC,IACvBD,EAAmBC,GAEhBhB,IACHgB,EAAe,KAAK,qBAAqBA,CAAY,GAEvDA,EAAe,KAAK,sBAAsB,kBAAkBA,EAAchB,CAAS,EACnF,IAAMiB,EAAW,KAAK,IAAI,YAAY,eAAe,EACrD,GAAIvb,EAAQub,CAAQ,EAAG,CAOrB,IAAMC,EAAaD,EANJ,CACb,UAAAjB,EACA,QAAS5Z,EACT,qBAAsB2a,EACtB,iBAAkBC,GAA8B,IAClD,CACkC,EAClC,GAAIE,IAAe,IAAQA,IAAe,KACpCA,IAAe,MACjBzV,EAAU,uJAAuJ,EAEnKuV,EAAeD,MACV,IAAIG,IAAe,GACxB,MAAO,GAEPF,EAAe,CACb,SAAUE,EAAW,SACrB,OAAQA,EAAW,OACnB,UAAWA,EAAW,SACxB,EAEJ,CACA,GAAI,CAACF,EACH,OAAO,KAET,GAAIA,EAAa,SAAW,EAAG,CAC7B,IAAMG,EAAY,KAAK,wBAAwB,kBAAkB,EACjE,YAAK,aAAa,oBAAoB,CACpC,eAAgB,CACd,eAAgBA,EAAYH,EAAa,SACzC,OAAQA,EAAa,MACvB,EACA,SAAU,EACZ,CAAC,EACM,IACT,CACA,IAAMpW,EAAc,KAAK,IAAI,IAAI,UAAU,IAAM,UACjD,GAAIxE,GAAgB,CAACwE,GAEf,CADmB,KAAK,eAAeoW,CAAY,EAErD,SAGJ,KAAK,kBAAkBA,CAAY,EACnC,IAAMT,EAAW,KAAK,kBAAkBS,CAAY,EACpD,GAAI,CAACT,EAAU,CACb,IAAMH,EAAM,KAAK,YAAY,iBAAiBY,CAAY,EAC1D,GAAI,CAACZ,GAAO,CAACA,EAAI,YAAY,GAAKha,EAChC,SAEF,OAAOga,CACT,CACA,GAAI,CAAAG,EAAS,oBAAoB,EAGjC,YAAK,cAAc,eAAeS,CAAY,EACvCT,CACT,CACF,CACA,eAAea,EAAM,CACnB,IAAMtc,EAAU,KAAK,qBAAqBsc,CAAI,EAC9C,OAAItc,EACKsc,EAAK,OAAO,eAAetc,CAAO,EAEpC,EACT,CACA,kBAAkBrB,EAAc,CAC9B,IAAMsB,EAAU,KAAK,YAAY,iBAAiBtB,CAAY,EAC9D,OAAKsB,EAGEA,EAAQ,YAAYtB,EAAa,MAAM,EAFrC,IAGX,CACA,qBAAqB2d,EAAM,CACzB,OAAIA,EAAK,YAAc,MACd,KAAK,eAAe,gBAAgBA,EAAK,QAAQ,EAEtDA,EAAK,YAAc,SACd,KAAK,eAAe,mBAAmBA,EAAK,QAAQ,EAEtD,KAAK,SAAS,OAAOA,EAAK,QAAQ,CAC3C,CAGA,mBAAmBnZ,EAAOF,EAAK6V,EAAayD,EAAmB,CAC7D,IAAId,EAAW3C,EACX0D,EAAgB,GACpB,KAAOf,IAAaA,IAAa3C,GAAe,CAAC,KAAK,oBAAoB2C,CAAQ,IAC5E,KAAK,IAAI,IAAI,WAAW,EACtBxY,IAAQqN,EAAQ,OAClBmL,EAAW,KAAK,qBAAqBA,CAAQ,GAEtCxY,IAAQqN,EAAQ,QACzBmL,EAAW,KAAK,qBAAqBA,CAAQ,GAE/CA,EAAW,KAAK,sBAAsB,mBAAmBxY,EAAKwY,CAAQ,EACtEe,EAAgBtd,EAASuc,CAAQ,EASnC,GAPIe,GAAiBrZ,GAASA,EAAM,MAAQmN,EAAQ,KAClDmL,EAAW,CACT,SAAU,GACV,UAAW,KACX,OAAQ3C,EAAY,MACtB,GAEEyD,EAAmB,CACrB,IAAMJ,EAAW,KAAK,IAAI,YAAY,oBAAoB,EAC1D,GAAIvb,EAAQub,CAAQ,EAAG,CAOrB,IAAMM,EAAWN,EANF,CACb,IAAAlZ,EACA,qBAAsB6V,EACtB,iBAAkB2C,GAAsB,KACxC,MAAAtY,CACF,CACgC,EAC5BvC,EAAQ6b,CAAQ,EAClBhB,EAAW,CACT,UAAWgB,EAAS,UACpB,SAAUA,EAAS,SACnB,OAAQA,EAAS,MACnB,EAEAhB,EAAW,IAEf,CACF,CACA,GAAI,CAACA,EACH,OAEF,GAAIA,EAAS,SAAW,EAAG,CACzB,IAAMY,EAAY,KAAK,wBAAwB,kBAAkB,EACjE,KAAK,aAAa,oBAAoB,CACpC,eAAgB,CACd,eAAgBA,EAAYZ,EAAS,SACrC,OAAQ3C,EAAY,MACtB,EACA,MAAO3V,GAAS,OAChB,SAAU,EACZ,CAAC,EACD,MACF,CACA,IAAMuZ,EAAqB,KAAK,sBAAsBjB,CAAQ,EAC1DiB,EACF,KAAK,cAAcA,CAAkB,EAErC,KAAK,uBAAuBjB,CAAQ,CAExC,CACA,sBAAsB9c,EAAc,CAClC,KAAK,kBAAkBA,CAAY,EACnC,IAAMwJ,EAAW,KAAK,kBAAkBxJ,CAAY,EACpD,OAAKwJ,GAGLxJ,EAAewJ,EAAS,gBAAgB,EACxC,KAAK,kBAAkBxJ,CAAY,EAC5BA,GAJE,IAKX,CACA,uBAAuBge,EAAUzB,EAAY,GAAO,CAClD,IAAMY,EAAmB,KAAK,mBAAmB,WAAW,EACtDvU,EAAU,KAAK,YAAY,iBAAiBoV,CAAQ,EAC1D,GAAI,CAACpV,GAAW,CAACA,EAAQ,YAAY,EACnC,MAAO,GAET,IAAMqV,EAAqB,KAAK,aAAa,eAAe,EACtDje,EAAe,CACnB,SAAUge,EAAS,SACnB,UAAWA,EAAS,UACpB,OAAQA,EAAS,SAAWzB,EAAYxc,EAAMod,CAAgB,EAAIA,EAAiB,CAAC,EACtF,EACA,KAAK,cAAcnd,CAAY,EAC/B,IAAMke,EAAYD,GAAsB,KAAO,KAAK,iBAAiB,OAAOje,EAAcie,CAAkB,EAAI,GAC1GE,EAAa,CACjB,KAAM,sBACN,SAAUne,EAAa,SACvB,UAAWA,EAAa,UACxB,OAAQA,EAAa,OACrB,gBAAiB,GACjB,UAAAke,CACF,EACA,YAAK,aAAa,cAAcC,CAAU,EACnC,EACT,CACA,cAAcne,EAAc,CAC1B,KAAK,aAAa,eAAe,CAC/B,SAAUA,EAAa,SACvB,OAAQA,EAAa,OACrB,UAAWA,EAAa,UACxB,kBAAmB,EACrB,CAAC,EACD,KAAK,cAAc,eAAeA,CAAY,CAChD,CACA,oBAAoB2d,EAAM,CAExB,MAAO,CAAC,CADQ,KAAK,iBAAiB,WAAWA,CAAI,CAEvD,CACA,qBAAqBA,EAAM,CACzB,IAAMnU,EAAW,KAAK,kBAAkBmU,CAAI,EAC5C,GAAI,CAACnU,EACH,OAAOmU,EAET,IAAMS,EAAkB5U,EAAS,mBAAmB,EACpD,OAAI4U,EAAgB,SAAW,EACtBT,EAEF,CACL,SAAUA,EAAK,SACf,OAAQ5d,EAAMqe,CAAe,EAC7B,UAAWT,EAAK,SAClB,CACF,CACA,kBAAkBhD,EAAU,CAC1B,IAAM0D,EAAuB,KAAK,IAAI,kBAAkB,EAClDhd,EAAU,KAAK,SAAS,OAAOsZ,EAAS,QAAQ,EAElD,EADoB0D,GAAwBhd,GAAS,SACjCd,EAASoa,EAAS,SAAS,GACjD,KAAK,YAAY,iBAAiB,EAAE,mBAAmBA,EAAS,QAAQ,EAErEA,EAAS,OAAO,SAAS,GAC5B,KAAK,YAAY,iBAAiB,EAAE,oBAAoBA,EAAS,MAAM,CAE3E,CACF,EAGI2D,GAA0B,cAAcnd,CAAS,CACnD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,yBAClB,CACA,UAAUpD,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,aAAeA,EAAM,YAC5B,CACA,aAAakG,EAAQ,CACnB,IAAMsa,EAAa,CACjB,gBAAiBta,EAAO,iBAAmB,EAC3C,SAAUA,EAAO,WACjB,YAAa,KAAK,YAAY,KAAK,KAAMA,CAAM,EAC/C,WAAY,KAAK,WAAW,KAAK,KAAMA,CAAM,EAC7C,WAAY,KAAK,WAAW,KAAK,KAAMA,CAAM,EAC7C,aAAc,GACd,wBAAyB,EAC3B,EACA,YAAK,YAAY,cAAcsa,CAAU,EACV,IAAM,KAAK,YAAY,iBAAiBA,CAAU,CAEnF,CACA,YAAYta,EAAQwC,EAAY,CAC9B,KAAK,WAAaA,EAAW,QAC7B,KAAK,eAAe,EACpB,IAAMjB,EAAWiB,aAAsB,YAAcA,EAAW,WAAa,GAC7ExC,EAAO,cAAcuB,CAAQ,CAC/B,CACA,gBAAiB,CACf,IAAMxH,EAAO,KAAK,aAAa,IAAI,UAAU,EAC7CA,EAAK,gBAAgB,EAAI,EACzBA,EAAK,kBAAkB,EAAI,CAC7B,CACA,WAAWiG,EAAQwC,EAAY,CAC7BxC,EAAO,YAAY,KAAK,YAAY,EACpC,KAAK,WAAW,CAClB,CACA,YAAa,CACX,IAAMjG,EAAO,KAAK,aAAa,IAAI,UAAU,EAC7CA,EAAK,gBAAgB,EAAK,EAC1BA,EAAK,kBAAkB,EAAK,CAC9B,CACA,WAAWiG,EAAQwC,EAAY,CAC7B,KAAK,aAAeA,EAAW,QAAU,KAAK,WAC9CxC,EAAO,WAAW,KAAK,YAAY,CACrC,CACF,EAGIua,GAAsB,cAAcrd,CAAS,CAC/C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,mBAClB,CACA,UAAUpD,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,aAAeA,EAAM,aAC1B,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,WAC3B,CACA,gBAAiB,CACX,KAAK,WACP,KAAK,UAAU,CAEnB,CACA,wBAAwBqD,EAAQqF,EAAYiC,EAAe,CACzD,KAAK,UAAUtH,EAAQqd,GAAS,CAC9B,KAAK,aAAa,6BAA6B,CAC7C,OAAArd,EACA,KAAMsH,EACN,WAAAjC,EACA,OAAQgY,CACV,CAAC,CACH,EAAG/V,EAAejC,EAAW,OAAQ,KAAK,YAAY,oBAAoB,CAAC,CAC7E,CACA,yBAAyBrF,EAAQsd,EAAahW,EAAe,CAC3D,IAAIiW,EAAa,GACbC,EAAY,OACVC,EAAsB,KAAK,YAAY,oBAAoB,EAC7D,CAACA,GAAuB,KAAK,IAAI,IAAI,WAAW,IAClDF,EAAa,EACbC,EAAY,SAEd,IAAME,EAASD,EAAsB,OAAS,EAAIF,EAC5CI,EAASF,EAAsB,OAAS,EAC9C,KAAK,UAAUzd,EAAQqd,GAAS,CAC9B,KAAK,aAAa,yBAAyB,CACzC,KAAM/V,EACN,YAAAgW,EACA,OAAQD,EACR,OAAAK,EACA,OAAAC,EACA,UAAAH,EACA,iBAAkB,GAClB,SAAU,QACV,OAAAxd,CACF,CAAC,CACH,EAAGsH,EAAegW,EAAaG,CAAmB,CACpD,CACA,UAAUzd,EAAQ4d,EAAkBtW,EAAegW,EAAaG,EAAqB,CACnF,IAAMrc,EAAOpB,EAAS,KAAK,WAAW,IAAI6d,GAAkB7d,EAAQ,aAAa,CAAC,EAAI,OAEtF,GADA,KAAK,WAAaoB,EACd,CAACA,GAAM,UAAU,GAAK,CAACpB,EACzB,MAAM,IAAI,MAAM,oEAAoE,EAEtF,IAAMqd,EAAQ,SAAS,cAAc,KAAK,EAC1CxH,EAAawH,EAAO,cAAc,EAClCA,EAAM,UAAU,IAAI,SAAS,EACxBI,GACHJ,EAAM,UAAU,IAAI,gBAAgB,EAEtC,CAAC,KAAK,WAAW,EAAI,KAAK,2BAA2BA,EAAO,CAC1D,QAAS1J,GAAK,KAAK,gBAAgBA,EAAG0J,CAAK,CAC7C,CAAC,EACDA,EAAM,YAAYjc,GAAM,OAAO,CAAC,EAChC,IAAI0c,EACEC,EAAmB,IAAM3c,GAAM,iBAAiB,EAChD6O,EAAkB,KAAK,YAAY,6BAA6B,EAAIqN,GAAe,KAAK,aAAa,gBAAgB,EAAE,OAAO,EAAI,OAClIU,EAAiBrK,GAAK,CAC1B3T,EAAO,eAAe,GAAO,aAAa,EAC1C,IAAMie,EAAkBtK,aAAa,cAIrC,GAHI,KAAK,cACP,KAAK,YAAc,KAAK,YAAY,GAElCsK,GAAmBX,GAAe9R,GAAW8R,CAAW,EAAG,CAC7D,IAAMY,EAAc,KAAK,aAAa,mBAAmBZ,CAAW,EAChEY,GACFA,EAAY,MAAM,CAEtB,CACAH,EAAiB,EACjB,KAAK,YAAY,KAAK,UAAU,EAChC,KAAK,4BAA4B,GAAOzW,EAAetH,CAAM,CAC/D,EACMgI,EAAY,KAAK,cAAc,kBAAkB,EACjDmW,EAAYV,GAAuBnW,IAAkB,eAAiBU,EAAU,sBAAuB,aAAa,EAAIA,EAAU,wBAAyB,eAAe,EAC1KoW,EAAc,KAAK,aAAa,SAAS,CAC7C,MAAO,GACP,OAAQf,EACR,WAAY,GACZ,eAAAW,EACA,iBAAkB,IAAMJ,EAAiBP,CAAK,EAC9C,gBAAApN,EACA,UAAAkO,CACF,CAAC,EACGC,IACF,KAAK,UAAYN,EAAYM,EAAY,UAE3Chd,EAAK,UAAU,EAAE,KAAK,IAAM,CAC1Bwc,EAAiBP,CAAK,EACtBjc,EAAK,iBAAiB,CACpB,UAAWkG,EACX,UAAAwW,CACF,CAAC,CACH,CAAC,EACD9d,EAAO,eAAe,GAAM,aAAa,EACzC,KAAK,4BAA4B,GAAMsH,EAAetH,CAAM,CAC9D,CACA,gBAAgB,EAAGqe,EAAM,CACnB,EAAE,MAAQ9N,EAAQ,KAAO,EAAE,kBAAoB,KAAK,aAAa,yBAAyB8N,EAAM,GAAO,EAAE,QAAQ,IAGrH,EAAE,eAAe,EACjB,KAAK,aAAa,UAAUA,EAAM,EAAE,QAAQ,EAC9C,CACA,4BAA4B/J,EAAShN,EAAetH,EAAQ,CAC1D,IAAMse,EAAiB,CACrB,KAAM,2BACN,QAAAhK,EACA,aAAc,GACd,IAAKhN,EACL,OAAQtH,GAAU,IACpB,EACA,KAAK,aAAa,cAAcse,CAAc,CAChD,CACA,cAActe,EAAQ,CACpB,OAAOA,EAAO,gBAAgB,IAAMA,EAAO,UAAU,EAAE,UAAY,CAAC,eAAe,GAAG,SAAS,eAAe,CAChH,CACA,+BAAgC,CAAC,CACjC,SAAU,CACR,KAAK,YAAY,KAAK,UAAU,EAChC,MAAM,QAAQ,CAChB,CACF,EAGIue,GAAiB,GACjBC,GAAwB,cAAcze,CAAS,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,wBAChB,KAAK,kBAAoB,CAAC,CAC5B,CACA,cAAckF,EAASgJ,EAAU,CAC/B,IAAMwQ,EAAM,KAAK,IAAI,UAAU,EACzBC,EAA2B,IAAM,CACrC,IAAMC,EAAiB,IAAIF,EAAI,eAAexQ,CAAQ,EACtD,OAAA0Q,EAAe,QAAQ1Z,CAAO,EACvB,IAAM0Z,EAAe,WAAW,CACzC,EACMC,EAAc,IAAM,CACxB,IAAIC,EAAgB5Z,GAAS,aAAe,EACxC6Z,EAAiB7Z,GAAS,cAAgB,EAC1C8Z,EAAU,GACRC,EAAkC,IAAM,CAC5C,GAAID,EAAS,CACX,IAAME,EAAWha,GAAS,aAAe,EACnC1C,EAAY0C,GAAS,cAAgB,GAC3Bga,IAAaJ,GAAiBtc,IAAcuc,KAE1DD,EAAgBI,EAChBH,EAAiBvc,EACjB0L,EAAS,GAEX,KAAK,mBAAmB+Q,CAA+B,CACzD,CACF,EACA,OAAAA,EAAgC,EACzB,IAAMD,EAAU,EACzB,EACMG,EAAiB,KAAK,IAAI,IAAI,+BAA+B,EAEnE,MAD6B,CAAC,CAACT,EAAI,gBACP,CAACS,EACpBR,EAAyB,EAE3B,KAAK,sBAAsB,EAAE,aAAa,IAAME,EAAY,EAAG,iBAAiB,CACzF,CACA,mBAAmBpd,EAAM,CACvB,KAAK,kBAAkB,KAAKA,CAAI,EAChC,KAAK,iBAAiB,CACxB,CACA,kBAAmB,CACjB,GAAI,KAAK,kBACP,OAEF,IAAM2d,EAAkB,IAAM,CAC5B,IAAMC,EAAQ,KAAK,kBACnB,KAAK,kBAAoB,GACzB,KAAK,kBAAoB,CAAC,EAC1BA,EAAM,QAAQC,GAAKA,EAAE,CAAC,CACxB,EACA,KAAK,kBAAoB,GACzB,OAAO,WAAWF,EAAiBZ,EAAc,CACnD,CACF,EAGIe,GAAwB,cAAcvf,CAAS,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,wBAIhB,KAAK,cAAgB,CACnB,KAAM,CAAC,EACP,OAAQ,EACV,EAEA,KAAK,cAAgB,CACnB,KAAM,CAAC,EACP,OAAQ,EACV,EAKA,KAAK,aAAe,CAAC,EACrB,KAAK,QAAU,GAGf,KAAK,gBAAkB,GACvB,KAAK,SAAW,EAChB,KAAK,cAAgB,EACrB,KAAK,UAAY,EACjB,KAAK,eAAgC,IAAI,GAC3C,CACA,UAAUpD,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,kBAAoBA,EAAM,iBACjC,CACA,aAAa4iB,EAAW,CACtB,IAAMC,EAAqB,KAAK,IAAI,IAAI,YAAY,EAEpD,GADA,KAAK,gBAAkBD,GAAa,KAAK,cACrCC,GAAsBD,IAAc,EAAG,CACzC,IAAM7Q,EAAc,KAAK,mBAAmB,eAAe,GAAK,EAC5DA,IAAgB,KAAK,WACvB,KAAK,SAAWA,EAChB,KAAK,gBAAkB,GAE3B,CACA,KAAK,cAAgB6Q,CACvB,CACA,eAAgB,CACd,KAAK,kBAAoB,CAAC,KAAK,IAAI,IAAI,wBAAwB,CACjE,CACA,MAAO,CACL,OAAO,KAAK,iBACd,CAKA,uBAAuBE,EAAY,CAC7B,KAAK,oBAAsB,IAC7B7Y,EAAU,yBAAyB6Y,CAAU,sCAAsC,CAEvF,CACA,WAAWC,EAAMC,EAAOC,EAAM,CAC5B,KAAK,uBAAuBA,CAAI,EAChC,IAAMC,EAAW,CACf,KAAAH,EACA,MAAAC,EACA,YAAa,EAAE,KAAK,SACtB,EACA,KAAK,cAAc,KAAKC,CAAI,EAAGC,CAAQ,EACvC,KAAK,SAAS,CAChB,CACA,WAAWH,EAAM,CACf,KAAK,eAAe,IAAIA,CAAI,CAC9B,CACA,cAAcI,EAAUJ,EAAM,CAC5BI,EAAS,KAAK,KAAKJ,CAAI,EACvBI,EAAS,OAAS,EACpB,CACA,aAAaA,EAAU,CACrB,GAAIA,EAAS,OACX,OAEF,IAAMC,EAAgB,KAAK,gBAAkB,EAAI,GACjDD,EAAS,KAAK,KAAK,CAACE,EAAGC,IAAMD,EAAE,QAAUC,EAAE,MAAQF,GAAiBE,EAAE,MAAQD,EAAE,OAASC,EAAE,YAAcD,EAAE,WAAW,EACtHF,EAAS,OAAS,EACpB,CACA,eAAeJ,EAAM,CACnB,KAAK,uBAAuB,eAAe,EAC3C,KAAK,aAAa,KAAKA,CAAI,EAC3B,KAAK,SAAS,CAChB,CACA,aAAaQ,EAAQ,CACnB,KAAK,uBAAuB,cAAc,EAC1C,IAAMC,EAAa,KAAK,cAClBC,EAAUD,EAAW,KACrBE,EAAa,KAAK,cAClBC,EAAUD,EAAW,KACrBE,EAAe,KAAK,aACpBC,EAA8B,IAAI,KAAK,EAAG,QAAQ,EACpDC,EAA4B,IAAI,KAAK,EAAG,QAAQ,EAAID,EAClDE,EAAcR,GAAU,EACxBlQ,EAAc,KAAK,aAAa,gBAAgB,EACtD,KAAO0Q,GAAeD,EAAWP,GAAQ,CAEvC,GAAI,CADyBlQ,EAAY,iBAAiB,EAAE,mBAAmB,EACpD,CACzB,IAAI0P,EACJ,GAAIU,EAAQ,OACV,KAAK,aAAaD,CAAU,EAC5BT,EAAOU,EAAQ,IAAI,EAAE,aACZE,EAAQ,OACjB,KAAK,aAAaD,CAAU,EAC5BX,EAAOY,EAAQ,IAAI,EAAE,aACZC,EAAa,OACtBb,EAAOa,EAAa,IAAI,MACnB,CACL,KAAK,eAAe,MAAM,EAC1B,KACF,CACK,KAAK,eAAe,IAAIb,CAAI,GAC/BA,EAAK,CAET,CACAe,EAA4B,IAAI,KAAK,EAAG,QAAQ,EAAID,CACtD,CACIJ,EAAQ,QAAUE,EAAQ,QAAUC,EAAa,OACnD,KAAK,aAAa,EAElB,KAAK,YAAY,CAErB,CACA,aAAc,CACZ,KAAK,QAAU,EACjB,CACA,gBAAiB,CACV,KAAK,mBAGV,KAAK,aAAa,EAAE,CACtB,CACA,UAAW,CACJ,KAAK,oBAGL,KAAK,UACR,KAAK,QAAU,GACf,KAAK,aAAa,GAEtB,CACA,cAAe,CACb,IAAMtS,EAAW,KAAK,aAAa,KAAK,KAAM,EAAE,EAChD,KAAK,sBAAsBA,CAAQ,CACrC,CACA,sBAAsBA,EAAU,CAC9B,IAAMwQ,EAAM,KAAK,IAAI,UAAU,EAC3BA,EAAI,sBACNA,EAAI,sBAAsBxQ,CAAQ,EACzBwQ,EAAI,4BACbA,EAAI,4BAA4BxQ,CAAQ,EAExCwQ,EAAI,WAAWxQ,EAAU,CAAC,CAE9B,CACA,cAAe,CACb,MAAO,CAAC,KAAK,OACf,CAKA,SAASzM,EAAM,CACb,IAAImf,EAAU,GACd,MAAO,IAAM,CACX,GAAI,CAAC,KAAK,KAAK,EAAG,CAChB,OAAO,WAAWnf,EAAM,CAAC,EACzB,MACF,CACImf,IAGJA,EAAU,GACV,KAAK,eAAe,IAAM,CACxBA,EAAU,GACVnf,EAAK,CACP,CAAC,EACH,CACF,CACF,EAgBA,IAAIof,GAAmB,cAAcC,CAAS,CAC5C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,kBAClB,CACA,UAAUC,EAAO,CACf,KAAK,SAAWA,EAAM,QACxB,CACA,eAAgB,CACd,KAAK,qBAAuB,KAAK,SAAS,QAAQ,IAAM,YAC1D,CACA,WAAWC,EAAQ,CACjB,GAAI,CAAC,KAAK,qBACR,OAEF,IAAMC,EAAW,IAAI,IAAID,CAAM,EAC/B,KAAK,SAAS,YAAYE,GAAQ,CAC5BA,EAAK,IAAMD,EAAS,IAAIC,EAAK,EAAE,IACjCA,EAAK,SAAW,GAEpB,CAAC,EACD,KAAK,2BAA2B,CAClC,CACA,iBAAkB,CAChB,IAAMC,EAAe,CAAC,EACtB,YAAK,SAAS,YAAY,CAAC,CACzB,SAAAC,EACA,GAAAC,CACF,IAAM,CACAD,GAAYC,GACdF,EAAa,KAAKE,CAAE,CAExB,CAAC,EACMF,CACT,CACA,UAAUG,EAAO,CACV,KAAK,sBAGV,KAAK,SAAS,oBAAoBA,CAAK,CACzC,CACA,mBAAmBC,EAASH,EAAUI,EAAeC,EAAW,CAC1DF,IACEC,GAAiBD,EAAQ,QAAUA,EAAQ,OAAO,QAAU,IAC9D,KAAK,mBAAmBA,EAAQ,OAAQH,EAAUI,EAAeC,CAAS,EAE5EF,EAAQ,YAAYH,EAAU,OAAQK,CAAS,EAEnD,CACA,4BAA6B,CACtB,KAAK,sBAGV,KAAK,SAAS,aAAa,CACzB,KAAM,KACR,CAAC,CACH,CACF,EAGIC,GAAc,cAAcZ,CAAS,CACvC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,aAClB,CACA,UAAUC,EAAO,CACf,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,aAAeA,EAAM,aAC1B,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,cAAgBA,EAAM,cAC3B,KAAK,YAAcA,EAAM,YACzB,KAAK,qBAAuBA,EAAM,qBAClC,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,sBAAwBA,EAAM,qBACrC,CACA,eAAgB,CACd,KAAK,kBAAoB,KAAK,uBAAyB,KAAK,iBAC9D,CACA,eAAeY,EAAQ,CACrB,KAAK,qBAAqB,KAAK,kBAAmBA,EAAQ,YAAY,CACxE,CACA,eAAeA,EAAQ,CACrB,IAAMC,EAAc,KAAK,uBAAyB,KAAK,oBAAoB,EAAI,KAAK,sBAAwB,KAAK,kBACjH,KAAK,qBAAqBA,EAAaD,EAAQA,EAAO,cAAe,EAAI,CAC3E,CACA,sBAAsBE,EAAQC,EAAYC,EAAY,CACpD,KAAK,kBAAkB,8BAA8BF,EAAQC,EAAYC,CAAU,CACrF,CACA,uBAAuBR,EAASM,EAAQ,CACtC,IAAMG,EAAU,KAAK,WAAWT,CAAO,EACjCU,EAAO,KAAK,WAAWD,EAASH,CAAM,EAC5C,GAAI,CAACI,EACH,OAAID,EACK,CACL,EAAG,EACH,EAAGA,EAAQ,gBAAgB,CAC7B,EAEK,CACL,EAAG,EACH,EAAG,CACL,EAEF,IAAME,EAAOD,EAAK,sBAAsB,EACxC,MAAO,CACL,EAAGC,EAAK,EAAIA,EAAK,MAAQ,EACzB,EAAGA,EAAK,EAAIA,EAAK,OAAS,CAC5B,CACF,CACA,gBAAgBP,EAAQ,CACtB,GAAM,CACJ,QAAAJ,CACF,EAAII,EACEE,EAASF,EAAO,OAClB,CACF,gBAAAQ,EACA,MAAAb,CACF,EAAIK,EACAJ,GAAWM,GAAUP,GAAS,OAChCA,EAAQC,EAAQ,yBAAyBM,CAAM,GAE7CM,GAAmB,OACrBA,EAAkB,KAAK,4BAA4BZ,EAASM,CAAM,GAEpE,KAAK,oBAAoB,cAAcF,EAAO,YAAc,KAAMA,EAAO,YAAc,KAAMJ,GAAW,KAAMM,GAAU,KAAMP,EAAOa,CAAe,CACtJ,CACA,kBAAkBR,EAAQ,CACxB,KAAK,sBAAsB,kBAAkBA,CAAM,CACrD,CACA,eAAgB,CACd,KAAK,oBAAoB,eAAe,EACxC,KAAK,kBAAkB,eAAe,CACxC,CACA,mBAAoB,CAClB,KAAK,sBAAsB,wBAAwB,CACrD,CACA,4BAA4BE,EAAQ,CAClC,GAAM,CACJ,aAAAO,EACA,yBAAAC,CACF,EAAIR,EAAO,UAAU,EAErB,MAAO,EADsBQ,GAA4BD,IACzB,KAAK,kBAAkB,cAAcP,CAAM,IAAM,KAAK,oBAAoB,GAAK,CAAC,CAAC,KAAK,sBACxH,CACA,4BAA4BA,EAAQ,CAClC,MAAO,CAACA,EAAO,UAAU,EAAE,4BAA8B,CAAC,CAAC,KAAK,eAAe,gBAAgBA,CAAM,CACvG,CACA,2BAA2BA,EAAQ,CACjC,MAAO,CAACA,GAAQ,UAAU,EAAE,2BAA6B,KAAK,kBAAkB,IAAM,KACxF,CACA,qCAAsC,CACpC,OAAO,KAAK,mBAAmB,CACjC,CACA,2BAA4B,CAC1B,IAAMS,EAAY,CAAC,KAAK,mBAAmB,EAE3C,MAAO,EADoBC,GAAgB,GAAKD,EAElD,CACA,4BAA4BT,EAAQ,CAClC,OAAO,KAAK,4BAA4BA,CAAM,GAAK,CAAC,KAAK,oBAAoB,GAAK,CAAC,KAAK,gCAAgCA,CAAM,CAChI,CACA,wBAAwBA,EAAQ,CAC9B,MAAO,CAAC,CAAC,KAAK,eAAe,gBAAgBA,CAAM,GAAK,CAAC,KAAK,oBAAoB,GAAK,CAAC,KAAK,4BAA4BA,CAAM,GAAK,CAAC,KAAK,gCAAgCA,CAAM,CAClL,CACA,8BAA+B,CAC7B,MAAO,CAAC,KAAK,oBAAoB,CACnC,CACA,qCAAsC,CACpC,OAAO,KAAK,kBAAkB,IAAM,KACtC,CACA,qBAAsB,CACpB,OAAO,KAAK,kBAAkB,IAAM,QACtC,CACA,8BAA8BA,EAAQ,CACpC,IAAMW,EAASX,EAAO,UAAU,EAC1BY,EAA6BD,EAAO,+BAA+B,qBACzE,OAAIC,GAA8B,MAChCC,EAAU,4IAA4I,EAEjJF,EAAO,8BAAgC,KAAO,CAACC,EAA6B,CAACD,EAAO,4BAC7F,CACA,mBAAoB,CAClB,OAAO,KAAK,IAAI,IAAI,YAAY,CAClC,CACA,gCAAgCX,EAAQ,CACtC,MAAO,CAAC,CAACA,EAAO,UAAU,EAAE,gBAAkB,KAAK,8BAA8BA,CAAM,CACzF,CACA,oBAAqB,CACnB,IAAMc,EAAmB,KAAK,IAAI,IAAI,kBAAkB,EACxD,OAAI,KAAK,oBAAoB,EACpB,KAAK,IAAI,OAAO,kBAAkB,EAAIA,EAAmB,GAE3DA,CACT,CACA,qBAAqBf,EAAaD,EAAQiB,EAAeC,EAAa,CACpE,GAAM,CACJ,WAAAC,CACF,EAAInB,EACEE,EAASF,EAAO,OACtB,GAAImB,IAAe,SAAU,CAC3B,GAAM,CACJ,cAAAC,CACF,EAAIpB,EACJC,EAAY,yBAAyBC,EAAQkB,EAAeH,EAAeC,CAAW,CACxF,SAAWC,IAAe,QAAS,CACjC,GAAM,CACJ,WAAAhB,CACF,EAAIH,EACJC,EAAY,wBAAwBC,EAAQC,EAAYc,EAAeC,CAAW,CACpF,MAAWhB,IACT,KAAK,aAAa,gBAAgB,EAAE,iBAAiB,EAAE,oBAAoBA,EAAQ,MAAM,EACzF,KAAK,sBAAsB,sBAAsB,IAAM,CACrD,IAAMmB,EAAiB,KAAK,aAAa,0BAA0BnB,EAAO,UAAU,CAAC,EAAE,uBAAuBA,CAAM,EACpHD,EAAY,yBAAyBC,EAAQmB,EAAe,wBAAwBH,CAAW,EAAGD,EAAe,EAAI,CACvH,CAAC,EAEL,CACA,WAAWrB,EAAS,CAClB,GAAM,CACJ,SAAA0B,EACA,UAAAC,CACF,EAAI3B,GAAW,CAAC,EAChB,GAAI0B,GAAY,KAGhB,OAAO,KAAK,YAAY,iBAAiB,CACvC,SAAAA,EACA,UAAAC,CACF,CAAC,GAAK,MACR,CACA,WAAWlB,EAASH,EAAQ,CAC1B,MAAI,CAACG,GAAW,CAACH,EACf,OAEeG,EAAQ,YAAYH,CAAM,GAC1B,OAAO,GAAK,MAC/B,CACA,4BAA4BN,EAASM,EAAQ,CAC3C,IAAMsB,EAAa,KAAK,aAAa,gBAAgB,EAAE,mBAAmB,EACpEnB,EAAU,KAAK,WAAWT,CAAO,EACvC,GAAI,CAACS,EACH,OAAOmB,EAET,IAAMC,EAAU,KAAK,WAAWpB,EAASH,CAAM,EAC/C,OAAIuB,IAGApB,EAAQ,YAAY,EACfA,EAAQ,oBAAoB,EAE9BmB,EACT,CACF,EAGIE,GAAkB,cAAcC,EAAqB,CACvD,YAAYC,EAAQ,CAClB,MAAMA,EAAQ,eAAgB,KAAM,UAAU,CAChD,CACA,SAASjC,EAAOkC,EAAQ,CACtB,IAAMC,EAAM,MAAM,SAASnC,EAAOkC,CAAM,EACxC,YAAK,OAAO,MAAQlC,EACbmC,CACT,CACA,QAAQC,EAAM,CACZ,YAAK,OAAO,KAAOA,EACZ,IACT,CACA,QAAQC,EAAM,CACZ,YAAK,OAAO,KAAOA,EACZ,IACT,CACF,EACIC,GAA0B,CAC5B,SAAU,qBACV,UAAWP,EACb,EAGIQ,GAAsB,cAAcC,EAAe,CACrD,aAAc,CACZ,MACA;AAAA;AAAA,gBAEa,CAACF,EAAuB,CAAC,EACtC,KAAK,UAAYG,CACnB,CACA,KAAKpC,EAAQ,CACX,KAAK,OAASA,EACd,KAAK,mBAAqBA,EAAO,gBACjC,KAAK,UAAU,aAAaA,EAAO,WAAa,GAAG,EAAE,QAAQA,EAAO,MAAQ,EAAE,EAAE,QAAQA,EAAO,MAAQ,EAAE,EACrGqC,EAAQrC,EAAO,MAAO,EAAI,GAC5B,KAAK,UAAU,SAASA,EAAO,MAAM,SAAS,EAAG,EAAI,EAEvD,KAAK,oBAAoB,UAAW,KAAK,UAAU,KAAK,IAAI,CAAC,EAC7D,KAAK,iBAAiB,CACxB,CACA,UAAUsC,EAAO,CACf,IAAMC,EAAMD,EAAM,KACdC,IAAQC,EAAQ,MAAQD,IAAQC,EAAQ,IAAMD,IAAQC,EAAQ,OAASD,IAAQC,EAAQ,MAAQF,EAAM,UAAYC,IAAQC,EAAQ,QACnIF,EAAM,gBAAgB,CAE1B,CACA,kBAAmB,CACjB,IAAMG,EAAY,KAAK,cAAc,kBAAkB,EACvD,KAAK,UAAU,kBAAkBA,EAAU,kBAAmB,cAAc,CAAC,EACzE,KAAK,oBACP,KAAK,UAAU,oBAAoB,EAAE,MAAM,CAE/C,CACA,UAAW,CACT,IAAM9C,EAAQ,KAAK,UAAU,SAAS,EACtC,MAAI,CAAC0C,EAAQ1C,CAAK,GAAK,CAAC0C,EAAQ,KAAK,OAAO,KAAK,EACxC,KAAK,OAAO,MAEd,KAAK,OAAO,WAAW1C,CAAK,CACrC,CACF,EAGI+C,GAAqB,cAAcP,EAAe,CACpD,YAAYnC,EAAQ,CAClB,MACA,8CAA8C,EAC9C,KAAK,OAASA,CAChB,CACA,eAAgB,CACd,KAAK,IAAI,WAAW,KAAK,OAAO,EAAG,qBAAsB,EAAI,EAC7D,KAAK,mBAAmB,CAC1B,CACA,oBAAqB,CACnB,IAAMM,EAAO,KAAK,OAAO,EACnBN,EAAS,KAAK,OACd2C,EAAWL,GAAS,CACnBM,GAAgC,KAAK,IAAKN,EAAOtC,EAAO,KAAMA,EAAO,OAAQ,EAAI,GACpFA,EAAO,UAAUsC,CAAK,CAE1B,EACA,KAAK,2BAA2BhC,EAAM,CACpC,QAASqC,CACX,CAAC,CACH,CACF,EAGIE,GAAmB,cAAcV,EAAe,CAClD,aAAc,CACZ,MACA;AAAA;AAAA,oBAEiB,CAACW,EAAgB,CAAC,EACnC,KAAK,QAAUV,EACf,KAAK,eAAiB,EACxB,CACA,UAAUhD,EAAO,CACf,KAAK,aAAeA,EAAM,YAC5B,CACA,KAAKY,EAAQ,CACX,KAAK,mBAAqBA,EAAO,gBACjC,GAAM,CACJ,QAAA+C,EACA,aAAAC,EACA,IAAAC,CACF,EAAI,KACE,CACJ,OAAAC,EACA,MAAAvD,EACA,SAAAwD,CACF,EAAInD,EACJ,GAAIoD,EAASF,CAAM,EAAG,CACpBnC,EAAU,uCAAuC,EACjD,MACF,CACA,KAAK,eAAiBoC,GAAY,KAAOA,IAAaX,EAAQ,MAAQ,GACtE,IAAIa,EAAW,GACfH,EAAO,QAAQI,GAAgB,CAC7B,IAAMC,EAAS,CACb,MAAOD,CACT,EACME,EAAiBR,EAAa,YAAYhD,EAAO,OAAQ,KAAMsD,CAAY,EAC3EG,EAAsBD,GAAmB,KAC/CD,EAAO,KAAOE,EAAsBD,EAAiBF,EACrDP,EAAQ,UAAUQ,CAAM,EACxBF,EAAWA,GAAY1D,IAAU2D,CACnC,CAAC,EACGD,EACFN,EAAQ,SAAS/C,EAAO,MAAO,EAAI,EAC1BA,EAAO,OAAO,QACvB+C,EAAQ,SAAS/C,EAAO,OAAO,CAAC,EAAG,EAAI,EAEzC,GAAM,CACJ,aAAA0D,EACA,kBAAAC,EACA,mBAAAC,CACF,EAAI5D,EACA0D,GAAgB,MAClBX,EAAQ,aAAaW,CAAY,EAE/BE,GAAsB,MACxBb,EAAQ,mBAAmBa,CAAkB,EAE3CD,GAAqB,MACvBZ,EAAQ,kBAAkBY,CAAiB,EAEzCV,EAAI,IAAI,UAAU,IAAM,WAC1B,KAAK,oBAAoB,KAAK,QAAS,CACrC,aAAc,IAAMjD,EAAO,YAAY,CACzC,CAAC,CAEL,CACA,kBAAmB,CACb,KAAK,oBACP,KAAK,QAAQ,oBAAoB,EAAE,MAAM,EAEvC,KAAK,gBACP,WAAW,IAAM,CACX,KAAK,QAAQ,GACf,KAAK,QAAQ,WAAW,CAE5B,CAAC,CAEL,CACA,SAAU,CACR,KAAK,QAAQ,oBAAoB,EAAE,MAAM,CAC3C,CACA,UAAW,CACT,OAAO,KAAK,QAAQ,SAAS,CAC/B,CACA,SAAU,CACR,MAAO,EACT,CACF,EAGI6D,GAAmB,cAAc1B,EAAe,CAClD,YAAY2B,EAAiB,CAC3B,MACA;AAAA;AAAA,kBAEcA,EAAgB,YAAY,CAAC;AAAA,oBAC1BA,EAAgB,gBAAgB,CAAC,EAClD,KAAK,gBAAkBA,EACvB,KAAK,OAAS1B,CAChB,CACA,KAAKpC,EAAQ,CACX,KAAK,OAASA,EACd,IAAM+D,EAAS,KAAK,OACpB,KAAK,gBAAgB,KAAKA,EAAQ/D,CAAM,EACxC,IAAIgE,EACJ,GAAIhE,EAAO,gBAAiB,CAC1B,KAAK,mBAAqB,GAC1B,IAAMmD,EAAWnD,EAAO,SACpBmD,IAAaX,EAAQ,WAAaxC,EAAO,WAAawC,EAAQ,OAChEwB,EAAa,GACJb,GAAYA,EAAS,SAAW,EACzCa,EAAab,GAEba,EAAa,KAAK,gBAAgB,cAAc,EAC5Cb,IAAaX,EAAQ,KACvB,KAAK,oBAAsB,IAGjC,MACE,KAAK,mBAAqB,GAC1BwB,EAAa,KAAK,gBAAgB,cAAc,EAE9CA,GAAc,MAChBD,EAAO,cAAcC,CAAU,EAEjC,KAAK,2BAA2BD,EAAO,OAAO,EAAG,CAC/C,QAASzB,GAAS,CAChB,GAAM,CACJ,IAAAC,CACF,EAAID,GACAC,IAAQC,EAAQ,SAAWD,IAAQC,EAAQ,YAC7CF,EAAM,eAAe,CAEzB,CACF,CAAC,CACH,CACA,kBAAmB,CACjB,IAAMG,EAAY,KAAK,cAAc,kBAAkB,EACjDsB,EAAS,KAAK,OAEpB,GADAA,EAAO,kBAAkBtB,EAAU,kBAAmB,cAAc,CAAC,EACjE,CAAC,KAAK,mBACR,OAEGwB,GAAiB,GACpBF,EAAO,oBAAoB,EAAE,MAAM,EAErC,IAAMG,EAAUH,EAAO,gBAAgB,EACnC,KAAK,oBACPG,EAAQ,OAAO,EAEf,KAAK,gBAAgB,WAAW,CAEpC,CAEA,SAAU,CACR,IAAMH,EAAS,KAAK,OACdI,EAAUJ,EAAO,oBAAoB,EACrCG,EAAUH,EAAO,gBAAgB,EACvCI,EAAQ,MAAM,EACdD,EAAQ,OAAO,CACjB,CACA,UAAW,CACT,OAAO,KAAK,gBAAgB,SAAS,CACvC,CACA,SAAU,CACR,MAAO,EACT,CACF,EAGIE,GAAsB,KAAM,CAC9B,aAAc,CACZ,MACE,sFAEJ,CACA,iBAAkB,CAChB,MAAO,CAACC,EAAwB,CAClC,CACA,KAAKN,EAAQ/D,EAAQ,CACnB,KAAK,OAAS+D,EACd,KAAK,OAAS/D,EACVA,EAAO,WAAa,MACtB+D,EAAO,aAAa/D,EAAO,SAAS,CAExC,CACA,UAAW,CACT,IAAML,EAAQ,KAAK,OAAO,SAAS,EACnC,MAAI,CAAC0C,EAAQ1C,CAAK,GAAK,CAAC0C,EAAQ,KAAK,OAAO,KAAK,EACxC,KAAK,OAAO,MAEd,KAAK,OAAO,WAAW1C,CAAK,CACrC,CACA,eAAgB,CAEd,OADoB,KAAK,OAAO,cAAgB,KAAK,OAAO,OAAO,UAAU,EAAE,QAC1D,KAAK,OAAO,YAAY,KAAK,OAAO,KAAK,EAAI,KAAK,OAAO,KAChF,CACA,UAAW,CACT,IAAMA,EAAQ,KAAK,OAAO,SAAS,EAC7B2E,EAAMjC,EAAQ1C,CAAK,GAAKA,EAAM,QAAU,EAC1C2E,GACF,KAAK,OAAO,gBAAgB,EAAE,kBAAkBA,EAAKA,CAAG,CAE5D,CACF,EACIC,GAAiB,cAAcV,EAAiB,CAClD,aAAc,CACZ,MAAM,IAAIO,EAAqB,CACjC,CACF,EAGII,GAAwB,KAAM,CAChC,aAAc,CACZ,MACE,0FAEJ,CACA,iBAAkB,CAChB,MAAO,CAACC,EAA0B,CACpC,CACA,KAAKV,EAAQ/D,EAAQ,CACnB,KAAK,OAAS+D,EACd,KAAK,OAAS/D,EACVA,EAAO,KAAO,MAChB+D,EAAO,OAAO/D,EAAO,GAAG,EAEtBA,EAAO,KAAO,MAChB+D,EAAO,OAAO/D,EAAO,GAAG,EAEtBA,EAAO,WAAa,MACtB+D,EAAO,aAAa/D,EAAO,SAAS,EAElCA,EAAO,MAAQ,MACjB+D,EAAO,QAAQ/D,EAAO,IAAI,EAE5B,IAAMkE,EAAUH,EAAO,gBAAgB,EACnC/D,EAAO,gBACT+D,EAAO,2BAA2BG,EAAS,CACzC,QAAS,KAAK,eAChB,CAAC,EACQlE,EAAO,oBAChBkE,EAAQ,UAAU,IAAI,+BAA+B,CAEzD,CACA,gBAAgB,EAAG,EACb,EAAE,MAAQ1B,EAAQ,IAAM,EAAE,MAAQA,EAAQ,OAC5C,EAAE,eAAe,CAErB,CACA,UAAW,CACT,IAAM7C,EAAQ,KAAK,OAAO,SAAS,EACnC,GAAI,CAAC0C,EAAQ1C,CAAK,GAAK,CAAC0C,EAAQ,KAAK,OAAO,KAAK,EAC/C,OAAO,KAAK,OAAO,MAErB,IAAIqC,EAAc,KAAK,OAAO,WAAW/E,CAAK,EAC9C,GAAI+E,GAAe,KACjB,OAAOA,EAET,GAAI,OAAOA,GAAgB,SAAU,CACnC,GAAIA,IAAgB,GAClB,OAAO,KAETA,EAAc,OAAOA,CAAW,CAClC,CACA,OAAO,MAAMA,CAAW,EAAI,KAAOA,CACrC,CACA,eAAgB,CACd,OAAO,KAAK,OAAO,KACrB,CACF,EACIC,GAAmB,cAAcd,EAAiB,CACpD,aAAc,CACZ,MAAM,IAAIW,EAAuB,CACnC,CACF,EAGII,GAAmB,cAAcC,EAAiB,CACpD,YAAYjD,EAAQ,CAClB,MAAMA,EAAQ,gBAAiB,MAAM,CACvC,CACA,eAAgB,CACd,MAAM,cAAc,EACpB,IAAMkD,EAAcb,GAAiB,EACrC,KAAK,oBAAoB,KAAK,OAAQ,CACpC,MAAO,KAAK,QAAQ,KAAK,IAAI,EAC7B,UAAW,IAAM,CACX,KAAK,WAAW,GAAKa,GAGzB,KAAK,OAAO,MAAM,CACpB,CACF,CAAC,EACD,KAAK,OAAO,KAAO,KACrB,CACA,QAAQ,EAAG,CACL,KAAK,IAAI,oBAAoB,IAAM,KAAK,QAC1C,EAAE,eAAe,CAErB,CACA,OAAOC,EAAS,CACd,IAAMC,EAAMD,aAAmB,KAAOE,GAAeF,GAAW,KAAM,EAAK,GAAK,OAASA,EACzF,OAAI,KAAK,MAAQC,EACR,MAET,KAAK,IAAMA,EACXE,GAAsB,KAAK,OAAQ,MAAOF,CAAG,EACtC,KACT,CACA,OAAOG,EAAS,CACd,IAAMC,EAAMD,aAAmB,KAAOF,GAAeE,GAAW,KAAM,EAAK,GAAK,OAASA,EACzF,OAAI,KAAK,MAAQC,EACR,MAET,KAAK,IAAMA,EACXF,GAAsB,KAAK,OAAQ,MAAOE,CAAG,EACtC,KACT,CACA,QAAQC,EAAM,CACZ,OAAI,KAAK,OAASA,EACT,MAET,KAAK,KAAOA,EACZH,GAAsB,KAAK,OAAQ,OAAQG,CAAI,EACxC,KACT,CACA,SAAU,CACR,GAAK,KAAK,OAAO,SAAS,MAG1B,OAAOC,EAAyB,KAAK,SAAS,CAAC,GAAK,MACtD,CACA,QAAQC,EAAM1D,EAAQ,CACpB,KAAK,SAASoD,GAAeM,GAAQ,KAAM,EAAK,EAAG1D,CAAM,CAC3D,CACF,EACI2D,GAA2B,CAC7B,SAAU,sBACV,UAAWZ,EACb,EAGIa,GAAsB,KAAM,CAC9B,aAAc,CACZ,MACE,sFAEJ,CACA,iBAAkB,CAChB,MAAO,CAACD,EAAwB,CAClC,CACA,KAAKzB,EAAQ/D,EAAQ,CACnB,KAAK,OAAS+D,EACd,KAAK,OAAS/D,EACVA,EAAO,KAAO,MAChB+D,EAAO,OAAO/D,EAAO,GAAG,EAEtBA,EAAO,KAAO,MAChB+D,EAAO,OAAO/D,EAAO,GAAG,EAEtBA,EAAO,MAAQ,MACjB+D,EAAO,QAAQ/D,EAAO,IAAI,CAE9B,CACA,UAAW,CACT,IAAML,EAAQ,KAAK,OAAO,QAAQ,EAClC,MAAI,CAAC0C,EAAQ1C,CAAK,GAAK,CAAC0C,EAAQ,KAAK,OAAO,KAAK,EACxC,KAAK,OAAO,MAEd1C,GAAS,IAClB,CACA,eAAgB,CACd,GAAM,CACJ,MAAAA,CACF,EAAI,KAAK,OACT,GAAMA,aAAiB,KAGvB,OAAOsF,GAAetF,EAAO,EAAK,CACpC,CACF,EACI+F,GAAiB,cAAc7B,EAAiB,CAClD,aAAc,CACZ,MAAM,IAAI4B,EAAqB,CACjC,CACF,EAGIE,GAA4B,KAAM,CACpC,YAAYC,EAAoB,CAC9B,KAAK,mBAAqBA,CAC5B,CACA,aAAc,CACZ,MACE,sFAEJ,CACA,iBAAkB,CAChB,MAAO,CAACJ,EAAwB,CAClC,CACA,KAAKzB,EAAQ/D,EAAQ,CACnB,KAAK,OAAS+D,EACd,KAAK,OAAS/D,EACVA,EAAO,KAAO,MAChB+D,EAAO,OAAO/D,EAAO,GAAG,EAEtBA,EAAO,KAAO,MAChB+D,EAAO,OAAO/D,EAAO,GAAG,EAEtBA,EAAO,MAAQ,MACjB+D,EAAO,QAAQ/D,EAAO,IAAI,CAE9B,CACA,UAAW,CACT,IAAML,EAAQ,KAAK,WAAW,KAAK,OAAO,QAAQ,CAAC,EACnD,MAAI,CAAC0C,EAAQ1C,CAAK,GAAK,CAAC0C,EAAQ,KAAK,OAAO,KAAK,EACxC,KAAK,OAAO,MAEd,KAAK,OAAO,WAAW1C,GAAS,EAAE,CAC3C,CACA,eAAgB,CACd,OAAOsF,GAAe,KAAK,UAAU,KAAK,OAAO,OAAS,MAAM,GAAK,KAAM,EAAK,CAClF,CACA,UAAUtF,EAAO,CACf,IAAMkG,EAAkB,KAAK,mBAAmB,EAChD,OAAOA,EAAkBA,EAAgB,sBAAsB,KAAK,OAAO,MAAM,EAAElG,CAAK,EAAI2F,EAAyB3F,CAAK,GAAK,MACjI,CACA,WAAWA,EAAO,CAChB,IAAMkG,EAAkB,KAAK,mBAAmB,EAChD,OAAOA,EAAkBA,EAAgB,yBAAyB,KAAK,OAAO,MAAM,EAAElG,CAAK,EAAIsF,GAAetF,GAAS,KAAM,EAAK,GAAK,MACzI,CACF,EACImG,GAAuB,cAAcjC,EAAiB,CACxD,UAAUzE,EAAO,CACf,KAAK,gBAAkBA,EAAM,eAC/B,CACA,aAAc,CACZ,MAAM,IAAIuG,GAA0B,IAAM,KAAK,eAAe,CAAC,CACjE,CACF,EAGII,GAAqB,cAAc5D,EAAe,CACpD,aAAc,CACZ,MACA;AAAA;AAAA;AAAA,oBAGiB,CAAC6D,EAAkB,CAAC,EACrC,KAAK,UAAY5D,CACnB,CACA,KAAKpC,EAAQ,CACX,KAAK,OAASA,EACd,IAAMiG,EAAajG,EAAO,OAAS,OACnC,KAAK,UAAU,SAASiG,CAAU,EAClB,KAAK,UAAU,gBAAgB,EACvC,aAAa,WAAY,IAAI,EACrC,KAAK,aAAaA,CAAU,EAC5B,KAAK,oBAAoB,KAAK,UAAW,CACvC,kBAAmB3D,GAAS,KAAK,aAAaA,EAAM,QAAQ,CAC9D,CAAC,CACH,CACA,UAAW,CACT,OAAO,KAAK,UAAU,SAAS,CACjC,CACA,SAAU,CACR,KAAK,UAAU,oBAAoB,EAAE,MAAM,CAC7C,CACA,kBAAmB,CACb,KAAK,OAAO,iBACd,KAAK,QAAQ,CAEjB,CACA,SAAU,CACR,MAAO,EACT,CACA,aAAa2D,EAAY,CACvB,IAAMxD,EAAY,KAAK,cAAc,kBAAkB,EACjDyD,EAAYC,GAA0B1D,EAAWwD,CAAU,EAC3DG,EAAY3D,EAAU,sBAAuB,kCAAkC,EACrF,KAAK,UAAU,kBAAkB,GAAG2D,CAAS,KAAKF,CAAS,GAAG,CAChE,CACF,EAGIG,GAAiB,KAAM,CACzB,YAAYC,EAAkB,CAC5B,KAAK,iBAAmBA,CAC1B,CACF,EACIC,GAAsB,cAAcF,EAAe,CACrD,YAAYC,EAAkBE,EAAcC,EAAYC,EAAQ,CAC9D,MAAMJ,CAAgB,EACtB,KAAK,aAAeE,EACpB,KAAK,WAAaC,EAClB,KAAK,OAASC,CAChB,CACF,EACIC,GAAqB,GACrBC,GAAgB,KAAM,CACxB,YAAYC,EAAc,CACxB,KAAK,YAAc,CAAC,EACpB,KAAK,aAAeA,GAA8BF,GAClD,KAAK,YAAc,IAAI,MAAM,KAAK,YAAY,CAChD,CACA,KAAM,CACJ,OAAO,KAAK,YAAY,IAAI,CAC9B,CACA,KAAKG,EAAM,CACgBA,EAAK,kBAAoBA,EAAK,iBAAiB,OAAS,IAI7E,KAAK,YAAY,SAAW,KAAK,cACnC,KAAK,YAAY,MAAM,EAEzB,KAAK,YAAY,KAAKA,CAAI,EAC5B,CACA,OAAQ,CACN,KAAK,YAAc,CAAC,CACtB,CACA,qBAAsB,CACpB,OAAO,KAAK,YAAY,MAC1B,CACF,EAGIC,GAAkB,cAAc5H,CAAS,CAC3C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,kBAChB,KAAK,iBAAmB,CAAC,EACzB,KAAK,eAAiB,KACtB,KAAK,cAAgB,KACrB,KAAK,UAAY,GACjB,KAAK,gBAAkB,GACvB,KAAK,mBAAqBmD,GAAS,CACjC,IAAM0E,EAAY,CAChB,OAAQ1E,EAAM,OACd,SAAUA,EAAM,SAChB,UAAWA,EAAM,SACnB,EACM2E,EAAgB,KAAK,iBAAmB,MAAQ,KAAK,kBAAkB,OAAO,KAAK,eAAgBD,CAAS,EAC5GE,EAAe,KAAK,gBAAkB,MAAQ,KAAK,iBAAiB,QAAQ,KAAK,cAAeF,CAAS,EAE/G,GAAI,EADwBC,GAAiBC,GAAgB,KAAK,WAAa,KAAK,iBAElF,OAEF,GAAM,CACJ,UAAA3F,EACA,SAAAD,EACA,OAAApB,EACA,SAAAiH,EACA,MAAAxH,CACF,EAAI2C,EACE8E,EAAkB,CACtB,UAAA7F,EACA,SAAAD,EACA,SAAUpB,EAAO,SAAS,EAC1B,SAAUP,EACV,SAAAwH,CACF,EACA,KAAK,iBAAiB,KAAKC,CAAe,CAC5C,EACA,KAAK,YAAc,IAAM,CACvB,KAAK,UAAU,MAAM,EACrB,KAAK,UAAU,MAAM,CACvB,CACF,CACA,UAAUhI,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,aAAeA,EAAM,aAC1B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,YAAcA,EAAM,YACzB,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,GAAI,CAAC,KAAK,IAAI,IAAI,qBAAqB,EACrC,OAEF,IAAMiI,EAAgB,KAAK,IAAI,IAAI,0BAA0B,EAC7D,GAAIA,GAAiB,EACnB,OAEF,KAAK,UAAY,IAAIT,GAAcS,CAAa,EAChD,KAAK,UAAY,IAAIT,GAAcS,CAAa,EAChD,KAAK,aAAa,EAClB,IAAM1E,EAAW,KAAK,YAAY,KAAK,IAAI,EAC3C,KAAK,yBAAyB,CAC5B,iBAAkB,KAAK,mBAAmB,KAAK,IAAI,EAGnD,aAAc2E,GAAK,CACZA,EAAE,mBACL,KAAK,YAAY,CAErB,EACA,uBAAwB3E,EACxB,iBAAkBA,EAClB,kBAAmBA,EACnB,sBAAuBA,EACvB,YAAaA,EACb,aAAcA,EACd,cAAeA,EACf,WAAYA,CACd,CAAC,EACD,KAAK,aAAa,UAAU4E,GAAK,CAC/B,KAAK,aAAeA,EAAE,YACxB,CAAC,CACH,CACA,yBAA0B,CACxB,OAAO,KAAK,UAAY,KAAK,UAAU,oBAAoB,EAAI,CACjE,CACA,yBAA0B,CACxB,OAAO,KAAK,UAAY,KAAK,UAAU,oBAAoB,EAAI,CACjE,CACA,KAAKC,EAAQ,CACX,IAAMC,EAAa,CACjB,KAAM,cACN,OAAAD,CACF,EACA,KAAK,aAAa,cAAcC,CAAU,EAC1C,IAAMC,EAAqB,KAAK,SAAS,KAAK,UAAW,KAAK,UAAW,eAAgB,WAAY,MAAM,EACrGC,EAAW,CACf,KAAM,YACN,OAAAH,EACA,mBAAAE,CACF,EACA,KAAK,aAAa,cAAcC,CAAQ,CAC1C,CACA,KAAKH,EAAQ,CACX,IAAMC,EAAa,CACjB,KAAM,cACN,OAAAD,CACF,EACA,KAAK,aAAa,cAAcC,CAAU,EAC1C,IAAMC,EAAqB,KAAK,SAAS,KAAK,UAAW,KAAK,UAAW,aAAc,WAAY,MAAM,EACnGC,EAAW,CACf,KAAM,YACN,OAAAH,EACA,mBAAAE,CACF,EACA,KAAK,aAAa,cAAcC,CAAQ,CAC1C,CACA,SAASC,EAAeC,EAAuBC,EAAeC,EAAyBP,EAAQ,CAC7F,GAAI,CAACI,EACH,MAAO,GAET,IAAMI,EAAiBJ,EAAc,IAAI,EACzC,MAAI,CAACI,GAAkB,CAACA,EAAe,iBAC9B,IAET,KAAK,cAAcA,EAAgBZ,GAAmBA,EAAgBW,CAAuB,EAAGP,CAAM,EAClGQ,aAA0BzB,GAC5B,KAAK,aAAa,KAAK,aAAcyB,EAAe,QAAU,CAACA,EAAeF,CAAa,CAAC,CAAC,EAE7F,KAAK,YAAYE,EAAe,gBAAgB,EAElDH,EAAsB,KAAKG,CAAc,EAClC,GACT,CACA,cAAcC,EAAQC,EAAgBV,EAAQ,CAC5CS,EAAO,iBAAiB,QAAQb,GAAmB,CACjD,GAAM,CACJ,SAAA9F,EACA,UAAAC,EACA,SAAA4G,CACF,EAAIf,EACEgB,EAAc,CAClB,SAAA9G,EACA,UAAAC,CACF,EACM8G,EAAa,KAAK,iBAAiB,WAAWD,CAAW,EAC1DC,EAAW,WAGhBA,EAAW,aAAaF,EAAUD,EAAed,CAAe,EAAGI,CAAM,CAC3E,CAAC,CACH,CACA,aAAac,EAAc5B,EAAQ,CACjC,IAAI6B,EACJD,EAAa,oBAAoB,EAAI,EACrC5B,EAAO,QAAQ,CAAC8B,EAAOC,IAAQ,CAC7B,GAAI,CAACD,EACH,OAEF,IAAME,EAAWF,EAAM,SACjBG,EAASH,EAAM,OACjBC,IAAQ/B,EAAO,OAAS,IAC1B6B,EAAkB,CAChB,UAAWG,EAAS,UACpB,SAAUA,EAAS,SACnB,SAAUF,EAAM,YAAY,SAAS,CACvC,EACA,KAAK,mBAAmBD,CAAe,GAEzC,IAAMK,EAAkB,CACtB,cAAeF,EAAS,SACxB,eAAgBA,EAAS,UACzB,YAAaC,EAAO,SACpB,aAAcA,EAAO,UACrB,YAAaH,EAAM,YACnB,QAASA,EAAM,OACjB,EACAF,EAAa,aAAaM,CAAe,CAC3C,CAAC,CACH,CACA,YAAYtC,EAAkB,CAC5B,IAAMc,EAAkBd,EAAiB,CAAC,EACpC,CACJ,SAAAhF,EACA,UAAAC,CACF,EAAI6F,EACEgB,EAAc,CAClB,SAAA9G,EACA,UAAAC,CACF,EACMsH,EAAM,KAAK,iBAAiB,WAAWT,CAAW,EAClDG,EAAkB,CACtB,UAAWnB,EAAgB,UAC3B,SAAUyB,EAAI,SACd,SAAUzB,EAAgB,QAC5B,EACA,KAAK,mBAAmBmB,EAAiB,KAAK,YAAY,CAC5D,CACA,mBAAmBA,EAAiBD,EAAc,CAChD,GAAM,CACJ,SAAAhH,EACA,SAAA6G,EACA,UAAA5G,CACF,EAAIgH,EACEO,EAAgB,KAAK,aAAa,iBAAiB,EACnD5I,EAAS,KAAK,YAAY,OAAOiI,CAAQ,EAC/C,GAAI,CAACjI,EACH,OAEF4I,EAAc,mBAAmBxH,CAAQ,EACzCwH,EAAc,oBAAoB5I,CAAM,EACxC,IAAM6I,EAAe,CACnB,SAAAzH,EACA,OAAApB,EACA,UAAAqB,CACF,EACA,KAAK,aAAa,eAAeyH,EAAAC,EAAA,GAC5BF,GAD4B,CAE/B,kBAAmB,EACrB,EAAC,EACDT,GAAc,eAAeS,CAAY,CAC3C,CACA,cAAe,CACb,KAAK,yBAAyB,CAC5B,kBAAmB,GAAK,CACtB,KAAK,cAAgB,CACnB,SAAU,EAAE,SACZ,UAAW,EAAE,SACf,CACF,EACA,kBAAmB,IAAM,CACvB,IAAMd,EAAS,IAAI5B,GAAe,KAAK,gBAAgB,EACvD,KAAK,uBAAuB4B,CAAM,EAClC,KAAK,cAAgB,IACvB,EACA,mBAAoB,GAAK,CACvB,KAAK,eAAiB,CACpB,OAAQ,EAAE,OACV,SAAU,EAAE,SACZ,UAAW,EAAE,SACf,CACF,EACA,mBAAoB,GAAK,CAGvB,GAFA,KAAK,eAAiB,KACG,EAAE,cAAgB,CAAC,KAAK,eAAiB,CAAC,KAAK,WAAa,CAAC,KAAK,gBACrE,CACpB,IAAMA,EAAS,IAAI5B,GAAe,KAAK,gBAAgB,EACvD,KAAK,uBAAuB4B,CAAM,CACpC,CACF,EACA,WAAY,IAAM,CAChB,KAAK,UAAY,EACnB,EACA,SAAU,IAAM,CACd,IAAMA,EAAS,IAAI5B,GAAe,KAAK,gBAAgB,EACvD,KAAK,uBAAuB4B,CAAM,EAClC,KAAK,UAAY,EACnB,EACA,UAAW,IAAM,CACf,KAAK,gBAAkB,EACzB,EACA,QAAS3F,GAAS,CAChB,IAAM2F,EAAS,IAAI1B,GAAoB,KAAK,iBAAkBjE,EAAM,aAAcA,EAAM,UAAU,EAClG,KAAK,uBAAuB2F,CAAM,EAClC,KAAK,gBAAkB,EACzB,EACA,4BAA6B,IAAM,CACjC,KAAK,gBAAkB,EACzB,EACA,0BAA2B,IAAM,CAC/B,IAAIA,EACA,KAAK,cAAgB,KAAK,IAAI,IAAI,sBAAsB,EAC1DA,EAAS,IAAI1B,GAAoB,KAAK,iBAAkB,OAAQ,OAAQ,CAAC,GAAG,KAAK,aAAa,cAAc,CAAC,CAAC,EAE9G0B,EAAS,IAAI5B,GAAe,KAAK,gBAAgB,EAEnD,KAAK,uBAAuB4B,CAAM,EAClC,KAAK,gBAAkB,EACzB,CACF,CAAC,CACH,CACA,uBAAuBA,EAAQ,CAC7B,KAAK,UAAU,KAAKA,CAAM,EAC1B,KAAK,iBAAmB,CAAC,EACzB,KAAK,UAAU,MAAM,CACvB,CACF,EAGA,SAASiB,GAAsB9J,EAAO,CACpC,OAAOA,EAAM,aAAa,gBAAgB,EAAE,iBAAiB,EAAE,mBAAmB,CACpF,CACA,SAAS+J,GAAwB/J,EAAO,CACtC,OAAOA,EAAM,aAAa,gBAAgB,EAAE,iBAAiB,EAAE,mBAAmB,CACpF,CACA,SAASgK,GAAoBhK,EAAOmD,EAAK8G,EAAW,OAAQ,CAC1DjK,EAAM,mBAAmB,aAAa,IAAMA,EAAM,aAAa,gBAAgB,EAAE,iBAAiB,EAAE,oBAAoBmD,EAAK8G,CAAQ,EAAG,eAAe,CACzJ,CACA,SAASC,GAAmBlK,EAAOmK,EAAOF,EAAU,CAClDjK,EAAM,mBAAmB,aAAa,IAAMA,EAAM,aAAa,gBAAgB,EAAE,iBAAiB,EAAE,mBAAmBmK,EAAOF,CAAQ,EAAG,eAAe,CAC1J,CACA,SAASG,GAAkBpK,EAAOqK,EAAcJ,EAAW,KAAM,CAC/DjK,EAAM,mBAAmB,aAAa,IAAMA,EAAM,aAAa,gBAAgB,EAAE,iBAAiB,EAAE,kBAAkBqK,EAAcJ,CAAQ,EAAG,eAAe,CAChK,CAGA,SAASK,GAAgBtK,EAAO,CAC9BA,EAAM,iBAAiB,KAAK,KAAK,CACnC,CACA,SAASuK,GAAgBvK,EAAO,CAC9BA,EAAM,iBAAiB,KAAK,KAAK,CACnC,CACA,SAASwK,GAAuBxK,EAAOY,EAAS,CAAC,EAAG,CAGlD,OAFYZ,EAAM,YAAY,uBAAuBY,CAAM,EACrC,IAAI6J,EAAe,CAE3C,CACA,SAASC,GAAgB1K,EAAO,CAC9B,OAAOA,EAAM,YAAY,gBAAgB,CAC3C,CACA,SAAS2K,GAAY3K,EAAO4K,EAAS,GAAO,CAC1C5K,EAAM,YAAY,YAAY4K,CAAM,CACtC,CACA,SAASC,GAAiB7K,EAAOY,EAAQ,CACvC,IAAME,EAASd,EAAM,YAAY,OAAOY,EAAO,MAAM,EACrD,GAAI,CAACE,EAAQ,CACXa,EAAU,uBAAuBf,EAAO,MAAM,EAAE,EAChD,MACF,CACA,IAAM+I,EAAe,CACnB,SAAU/I,EAAO,SACjB,UAAWA,EAAO,WAAa,KAC/B,OAAAE,CACF,EACkBF,EAAO,WAAa,MAEpCsJ,GAAmBlK,EAAOY,EAAO,QAAQ,EAE3CoJ,GAAoBhK,EAAOY,EAAO,MAAM,EACxC,IAAMkK,EAAO9K,EAAM,kBAAkB,kBAAkB2J,CAAY,EAC9DmB,IAGA9K,EAAM,aAAa,cAAc2J,CAAY,GAChD3J,EAAM,aAAa,eAAe2J,CAAY,EAEhDmB,EAAK,mBAAmBlK,EAAO,GAAG,EACpC,CACA,SAASmK,GAAmB/K,EAAO,CACjC,OAAOA,EAAM,iBAAiB,wBAAwB,GAAK,CAC7D,CACA,SAASgL,GAAmBhL,EAAO,CACjC,OAAOA,EAAM,iBAAiB,wBAAwB,GAAK,CAC7D,CAGA,IAAIiL,GAAc,cAAclL,CAAS,CACvC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,aAClB,CACA,UAAUC,EAAO,CACf,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,qBAAuBA,EAAM,qBAClC,KAAK,aAAeA,EAAM,YAC5B,CACA,aAAakL,EAAU/H,EAAM,KAAMgI,EAAkB,GAAOjI,EAAQ,KAAM,CACxE,IAAMkI,EAAe,KAAK,uBAAuBF,EAAU/H,EAAKgI,CAAe,EACzE1J,EAASyJ,EAAS,UAAU,EAAE,UAAU,EACxCG,EAAc,KAAK,qBAAqB,qBAAqB5J,EAAQ2J,CAAY,EACjFE,EAAQD,GAAa,mBAAqB,KAAOA,EAAY,kBAAoB,CAAC,CAAC5J,EAAO,gBAC1FwI,EAAWoB,GAAa,2BAA6B,KAAOA,EAAY,0BAA4B5J,EAAO,wBACjHyJ,EAAS,WAAW,GAAMG,CAAW,EACrCH,EAAS,QAAQ,EAAE,eAAeG,EAAaC,EAAOrB,EAAU,KAAK,IAAI,IAAI,0BAA0B,CAAC,EACxG,IAAM/B,EAAIgD,EAAS,YAAYhI,EAAO,oBAAoB,EAC1D,KAAK,aAAa,cAAcgF,CAAC,CACnC,CACA,YAAYgD,EAAUN,EAAQ,CAC5B,IAAMW,EAAWL,EAAS,QAAQ,EAC5B,CACJ,SAAAM,EACA,eAAAC,CACF,EAAI,KAAK,wBAAwBb,EAAQW,CAAQ,EAC3C/K,EAAU0K,EAAS,WAAW,EAC9BpK,EAASoK,EAAS,UAAU,EAC5BnD,EAAWvH,EAAQ,yBAAyBM,CAAM,EACpD4K,EAAe,GACfD,IACFC,EAAe,KAAK,aAAaR,EAAUnD,EAAUyD,EAAUhL,EAASM,CAAM,GAEhFoK,EAAS,WAAW,GAAO,MAAM,EACjCK,EAAS,eAAe,EACxBL,EAAS,qBAAqB,EAAK,EACnCA,EAAS,YAAY,CACnB,aAAc,GACd,cAAe,EACjB,CAAC,EACD,IAAMhI,EAAQ0G,EAAAC,EAAA,GACTqB,EAAS,YAAY,KAAM,oBAAoB,GADtC,CAEZ,SAAAnD,EACA,SAAAyD,EACA,aAAAE,CACF,GACA,YAAK,aAAa,cAAcxI,CAAK,EAC9BwI,CACT,CACA,oBAAoBR,EAAU,CAC5B,IAAMS,EAAaT,EAAS,cAAc,EAC1C,GAAIS,GAAY,QAAS,CACvB,GAAM,CACJ,SAAA5H,EACA,gBAAAoH,CACF,EAAID,EAAS,mBAAmB,EAAE,OAC5BE,EAAe,KAAK,uBAAuBF,EAAUnH,EAAUoH,CAAe,EAC9E1J,EAASyJ,EAAS,UAAU,EAAE,UAAU,EACxCG,EAAc,KAAK,qBAAqB,qBAAqB5J,EAAQ2J,CAAY,EACvFO,EAAW,QAAQN,EAAY,MAAM,CACvC,CACF,CACA,oBAAoBH,EAAU,CAC5B,IAAMS,EAAaT,EAAS,QAAQ,EAAE,cAAc,EAChDS,GAAcA,EAAW,UAC3BA,EAAW,SAAS,CAExB,CACA,mBAAmBT,EAAU,CAC3B,IAAMS,EAAaT,EAAS,QAAQ,EAAE,cAAc,EAChDS,GAAcA,EAAW,QAC3BA,EAAW,QAAQ,EAEnBT,EAAS,UAAU,EAAI,CAE3B,CACA,oBAAoBA,EAAUU,EAA4B,GAAOC,EAAW,GAAO,CACjFX,EAAS,kBAAkB,EAC3BA,EAAS,UAAU,EAAI,EAClBU,GACH,KAAK,kBAAkBC,EAAUX,EAAS,gBAAgB,CAAC,CAE/D,CACA,yBAAyBtK,EAAQ,CAC/B,OAAO,IAAI0C,GAAmB1C,CAAM,CACtC,CACA,wBAAwBgK,EAAQW,EAAU,CACxC,IAAMO,EAAgB,CACpB,eAAgB,EAClB,EACA,GAAIlB,EACF,OAAOkB,EAET,IAAMH,EAAaJ,EAAS,cAAc,EAK1C,MAJI,CAACI,GAGqBA,EAAW,kBAAoBA,EAAW,iBAAiB,EAE5EG,EAGF,CACL,SAFeH,EAAW,SAAS,EAGnC,eAAgB,EAClB,CACF,CAIA,aAAaT,EAAUnD,EAAUyD,EAAUhL,EAASM,EAAQ,CAC1D,GAAI0K,IAAazD,EACf,MAAO,GAETmD,EAAS,uBAAuB,EAAI,EACpC,IAAMQ,EAAelL,EAAQ,aAAaM,EAAQ0K,EAAU,MAAM,EAClE,OAAAN,EAAS,uBAAuB,EAAK,EAC9BQ,CACT,CACA,uBAAuBR,EAAU/H,EAAKgI,EAAiB,CACrD,IAAMrK,EAASoK,EAAS,UAAU,EAC5B1K,EAAU0K,EAAS,WAAW,EACpC,OAAO,KAAK,IAAI,oBAAoB,CAClC,MAAO1K,EAAQ,yBAAyBM,CAAM,EAC9C,SAAUqC,EACV,OAAArC,EACA,OAAQA,EAAO,UAAU,EACzB,SAAUoK,EAAS,gBAAgB,EAAE,SACrC,KAAM1K,EACN,KAAMA,EAAQ,KACd,gBAAA2K,EACA,UAAWD,EAAS,UAAU,KAAKA,CAAQ,EAC3C,YAAaA,EAAS,oBAAoB,KAAKA,CAAQ,EACvD,UAAWA,EAAS,OAAO,EAC3B,WAAYM,GAAY,KAAK,aAAa,WAAW1K,EAAQN,EAASgL,EAAUN,EAAS,SAAS,CAAC,EACnG,YAAaA,EAAS,YAAY,KAAKA,CAAQ,CACjD,CAAC,CACH,CACA,kBAAkBW,EAAUlC,EAAc,CAExC,GAD0C,KAAK,IAAI,IAAI,mCAAmC,EACnD,CACrC,IAAMxG,EAAM0I,EAAWzI,EAAQ,GAAKA,EAAQ,KAC5C,KAAK,kBAAkB,mBAAmB,KAAMD,EAAKwG,EAAc,EAAK,CAC1E,CACF,CACF,EAGIoC,GAAiB,cAAchM,CAAS,CAC1C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,gBAClB,CACA,aAAakB,EAASkC,EAAM,KAAM6I,EAAqB,KAAM9I,EAAQ,KAAM,CAC/CjC,EAAQ,gBAAgB,EAAE,OAAO,CAACgL,EAAMf,IAAa,CAC7E,IAAMC,EAAkBD,IAAac,EAMrC,OALIb,EACFD,EAAS,aAAa/H,EAAKgI,EAAiBjI,CAAK,EAEjDgI,EAAS,aAAa,KAAMC,EAAiBjI,CAAK,EAEhD+I,EACK,GAEFf,EAAS,UAAU,CAC5B,EAAG,EAAK,GAEN,KAAK,WAAWjK,EAAS,EAAI,CAEjC,CACA,YAAYA,EAAS2J,EAAS,GAAO,CACnC,IAAMsB,EAAejL,EAAQ,gBAAgB,EACvCkL,EAAYlL,EAAQ,UAAU,EACpCA,EAAQ,mBAAmB,EAAI,EAC/B,IAAImL,EAAmB,GACvB,QAAWC,KAAQH,EAAc,CAC/B,IAAMR,EAAeW,EAAK,YAAYzB,CAAM,EACxCuB,GAAa,CAACvB,GAAU,CAACwB,GAAoBV,IAC/CU,EAAmB,GAEvB,CACA,GAAIA,EAAkB,CACpB,IAAMlJ,EAAQjC,EAAQ,eAAe,iBAAiB,EACtD,KAAK,aAAa,cAAciC,CAAK,CACvC,CACIiJ,GACF,KAAK,WAAWlL,EAAS,EAAK,EAEhCA,EAAQ,mBAAmB,EAAK,CAClC,CACA,WAAWA,EAASV,EAAO,CACzBU,EAAQ,cAAcV,CAAK,EAC3BU,EAAQ,WAAW,OAAQqL,GAAOA,EAAI,QAAQ,oBAAoB,iBAAkB/L,CAAK,CAAC,EAC1F,IAAM2C,EAAQ3C,EAAQU,EAAQ,eAAe,mBAAmB,EAAIA,EAAQ,eAAe,mBAAmB,EAC9G,KAAK,aAAa,cAAciC,CAAK,CACvC,CACF,EAGIqJ,GAAiB,CACnB,QAASC,EACT,WAAY,+BACZ,MAAO,CAACvB,EAAW,CACrB,EACIwB,GAAgB,CAClB,QAASD,EACT,WAAY,8BACZ,aAAc,CACZ,gBAAAlC,GACA,gBAAAC,GACA,uBAAAC,GACA,gBAAAE,GACA,YAAAC,GACA,iBAAAE,GACA,mBAAAE,GACA,mBAAAC,EACF,EACA,iBAAkB,CAACuB,EAAc,CACnC,EACIG,GAAqB,CACvB,QAASF,EACT,WAAY,oCACZ,MAAO,CAAC7E,EAAe,EACvB,iBAAkB,CAAC4E,EAAc,CACnC,EACII,GAAoB,CACtB,QAASH,EACT,WAAY,mCACZ,MAAO,CAACT,EAAc,EACtB,iBAAkB,CAACQ,EAAc,CACnC,EACIK,GAAsB,CACxB,QAASJ,EACT,WAAY,oCACZ,eAAgB,CAAC,CACf,KAAM,eACN,SAAUrH,EACZ,CAAC,EACD,iBAAkB,CAACoH,EAAc,CACnC,EACIM,GAAwB,CAC1B,QAASL,EACT,WAAY,uCACZ,eAAgB,CAAC,CACf,KAAM,mBACN,SAAUrH,EACZ,EAAG,CACD,KAAM,qBACN,SAAUI,EACZ,EAAG,CACD,KAAM,mBACN,SAAUe,EACZ,EAAG,CACD,KAAM,yBACN,SAAUI,EACZ,EAAG,CACD,KAAM,uBACN,SAAUC,EACZ,CAAC,EACD,iBAAkB,CAACiG,EAAmB,CACxC,EACIE,GAAqB,CACvB,QAASN,EACT,WAAY,mCACZ,eAAgB,CAAC,CACf,KAAM,qBACN,SAAU/I,EACZ,CAAC,EACD,iBAAkB,CAAC8I,EAAc,CACnC,EACIQ,GAAwB,CAC1B,QAASP,EACT,WAAY,uCACZ,eAAgB,CAAC,CACf,KAAM,wBACN,SAAU1J,EACZ,CAAC,EACD,iBAAkB,CAACyJ,EAAc,CACnC,EACIS,GAA4B,CAC9B,QAASR,EACT,WAAY,iCACZ,iBAAkB,CAACI,GAAqBC,GAAuBC,GAAoBC,EAAqB,CAC1G,EACIE,GAAa,CACf,QAAST,EACT,WAAY,6BACZ,iBAAkB,CAACD,GAAgBG,GAAoBC,GAAmBK,GAA2BP,EAAa,CACpH,EAGIS,GAAsB,cAAcnN,CAAS,CAC/C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,qBAClB,CACA,UAAUC,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,KAAK,aAAa,UAAUmI,GAAK,CAC/B,KAAK,uBAAyBA,EAAE,MAClC,CAAC,CACH,CAKA,2BAA2BrH,EAAQqM,EAAY,CAC7C,IAAMC,EAAc,KAAK,uBAAuBtM,CAAM,EACtD,GAAI,CAACsM,EACH,MAAO,GAET,IAAMC,EAAW,KAAK,YAAY,qBAAqBvM,CAAM,EAC7D,OAAKqM,GACHE,EAAS,KAAKD,CAAW,EAEpB,KAAK,kCAAkCC,CAAQ,CACxD,CACA,gCAAgCC,EAAa,CAC3C,IAAMF,EAAc,KAAK,uBAAuBE,CAAW,EAC3D,OAAKF,EAGE,KAAK,kCAAkC,CAACA,CAAW,CAAC,EAFlD,EAGX,CACA,kCAAkCC,EAAU,CAC1C,IAAME,EAAkB,SAAS,cAAc,MAAM,EACrDA,EAAgB,MAAM,SAAW,QACjC,IAAMC,EAAiB,KAAK,uBAAuB,oBAAoB,EACvEH,EAAS,QAAQI,GAAM,KAAK,mBAAmBA,EAAIF,CAAe,CAAC,EACnEC,EAAe,YAAYD,CAAe,EAC1C,IAAMG,EAAsBH,EAAgB,YAC5CC,EAAe,YAAYD,CAAe,EAC1C,IAAMI,EAAkB,KAAK,mBAAmB,EAChD,OAAOD,EAAsBC,CAC/B,CACA,oBAAqB,CACnB,OAAO,KAAK,IAAI,IAAI,iBAAiB,CACvC,CACA,uBAAuB7M,EAAQ,CAC7B,IAAI8M,EAAU,KACd,YAAK,aAAa,2BAA2B,EAAE,QAAQC,GAAa,CAClE,IAAMC,EAAMD,EAAU,8BAA8B/M,CAAM,EACtDgN,GAAO,OACTF,EAAUE,EAEd,CAAC,EACMF,CACT,CACA,mBAAmBG,EAAOR,EAAiB,CACzC,IAAMS,EAAaD,EAAM,UAAU,EAAI,EACvCC,EAAW,MAAM,MAAQ,GACzBA,EAAW,MAAM,SAAW,SAC5BA,EAAW,MAAM,KAAO,GACxB,IAAMC,EAAe,SAAS,cAAc,KAAK,EAC3CC,EAAwBD,EAAa,UAC1B,CAAC,iBAAkB,sBAAsB,EAAE,KAAKE,GAAOH,EAAW,UAAU,SAASG,CAAG,CAAC,GAExGD,EAAsB,IAAI,YAAa,eAAe,EACtDD,EAAa,MAAM,SAAW,UAE9BC,EAAsB,IAAI,QAAQ,EAEpC,IAAIE,EAAUL,EAAM,cACpB,KAAOK,GAAS,CAEd,GADc,CAAC,gBAAiB,QAAQ,EAAE,KAAKD,GAAOC,EAAQ,UAAU,SAASD,CAAG,CAAC,EAC1E,CACT,QAASE,EAAI,EAAGA,EAAID,EAAQ,UAAU,OAAQC,IAAK,CACjD,IAAM3G,EAAO0G,EAAQ,UAAUC,CAAC,EAC5B3G,GAAQ,4BACVwG,EAAsB,IAAIxG,CAAI,CAElC,CACA,KACF,CACA0G,EAAUA,EAAQ,aACpB,CACAH,EAAa,YAAYD,CAAU,EACnCT,EAAgB,YAAYU,CAAY,CAC1C,CACF,EAGIK,GAAmB,cAAcvO,CAAS,CAC5C,YAAYwO,EAAcC,EAAiB,CACzC,MAAM,EACN,KAAK,aAAeD,EACpB,KAAK,gBAAkBC,EACvB,KAAK,kBAAoB,CAAC,EAC1B,KAAK,qBAAuB,CAAC,EAC7B,KAAK,mBAAqB,EAC1B,KAAK,sBAAwB,EAE7B,KAAK,eAAiB,EACtB,KAAK,kBAAoB,CAC3B,CACA,UAAUxO,EAAO,CACf,KAAK,SAAWA,EAAM,SACtB,KAAK,YAAcA,EAAM,YACzB,KAAK,aAAeA,EAAM,aAC1B,KAAK,kBAAoBA,EAAM,iBACjC,CACA,eAAgB,CACd,KAAK,aAAe,KAAK,SAAS,QAAQ,IAAM,aAChD,KAAK,aAAa,UAAUY,GAAU,CACpC,KAAK,aAAeA,EAAO,YAC7B,CAAC,CACH,CACA,sBAAuB,CACrB,OAAO,KAAK,iBACd,CACA,yBAA0B,CACxB,OAAO,KAAK,oBACd,CACA,aAAa6N,EAAQ,CACnB,GAAI,KAAK,iBAAmBA,EAC1B,OAEF,KAAK,eAAiBA,EACtB,IAAMvL,EAAQ,CACZ,KAAM,yBACN,OAAAuL,CACF,EACA,KAAK,aAAa,cAAcvL,CAAK,CACvC,CACA,gBAAgBuL,EAAQ,CAClB,KAAK,oBAAsBA,IAG/B,KAAK,kBAAoBA,EAC3B,CACA,cAAe,CACb,KAAK,gBAAgB,CAAC,EACtB,KAAK,aAAa,CAAC,CACrB,CACA,mBAAoB,CAClB,OAAO,KAAK,cACd,CACA,sBAAuB,CACrB,OAAO,KAAK,iBACd,CAIA,oBAAoBhF,EAAK,CACvB,OAAO,KAAK,aAAe,KAAK,8BAA8BA,CAAG,EAAI,KAAK,8BAA8BA,CAAG,CAC7G,CAIA,qBAAqBA,EAAK,CACxB,OAAIA,EAAI,OACCA,EAAI,QAAQ,OAASA,EAAI,QAAQ,UAAY,EAElDA,EAAI,YAAY,EACXA,EAAI,OAAS,EAEf,CACT,CACA,8BAA8BA,EAAK,CACjC,GAAI,KAAK,aACP,MAAM,IAAI,MAAM,2DAA2D,EAE7E,GAAIA,EAAI,aAAa,GAAKA,EAAI,OAAQ,CACpC,GAAIA,EAAI,OACN,OAAOA,EAAI,WAAW,OAASA,EAAI,WAAW,UAGhD,GAD+B,CAACA,EAAI,SAAW,KAAK,IAAIA,EAAI,QAAQ,SAAWA,EAAI,QAAQ,IAAM,EACrE,CAC1B,IAAIiF,EAAcjF,EAAI,YAAY,eAAe,EACjD,OAAIA,EAAI,SACNiF,EAAcjF,EAAI,QAAQ,YAAY,eAAe,IAE/CiF,GAAa,UAAY,IAAMA,GAAa,OAAS,EAC/D,CACA,OAAIjF,EAAI,OACCA,EAAI,OAASA,EAAI,UAEnBA,EAAI,QAAQ,OAASA,EAAI,QAAQ,SAC1C,CACA,OAAO,OAAO,gBAChB,CACA,8BAA8BA,EAAK,CACjC,GAAI,CAAC,KAAK,aACR,MAAM,IAAI,MAAM,2DAA2D,EAE7E,GAAIA,EAAI,aAAa,GAAKA,EAAI,OAAQ,CAEpC,GADwBA,EAAI,QAAUA,EAAI,WAAa,EAErD,OAAO,OAAO,iBAGhB,GAD+B,CAACA,EAAI,SAAW,KAAK,IAAIA,EAAI,QAAQ,SAAWA,EAAI,QAAQ,IAAM,EACrE,CAC1B,IAAIkF,EAAelF,EAAI,OAASA,EAAI,QAAUA,EAC9C,KAAOkF,EAAa,aAAa,GAAKA,EAAa,UACjD,GAAIA,EAAa,OACfA,EAAeA,EAAa,mBACnBA,EAAa,kBAAmB,CACzC,GAAIA,EAAa,kBAAkB,SAAW,EAC5C,MAEFA,EAAeC,EAAMD,EAAa,iBAAiB,CACrD,CAEF,OAAOA,EAAa,OAASA,EAAa,SAC5C,CACA,OAAIlF,EAAI,OACCA,EAAI,OAASA,EAAI,UAEnBA,EAAI,QAAQ,OAASA,EAAI,QAAQ,SAC1C,CACA,OAAO,OAAO,gBAChB,CACA,iBAAiBoE,EAAW,CAC1B,IAAMgB,EAAQhB,IAAc,MACxBiB,EAA2B,EAC/B,GAAI,CAAC,KAAK,gBAAgB,EACxB,OAAO,KAAK,+BAA+BjB,EAA0B,IAAI,IAAOiB,CAAwB,EAE1G,IAAMC,EAA2BF,EAAQ,KAAK,YAAY,6BAA6B,EAAI,KAAK,eAAiB,KAAK,YAAY,4BAA4B,EAAI,KAAK,eACjKG,EAA+B,IAAI,IACnCC,EAAeC,GAAa,CAEhC,GADAF,EAAc,IAAIE,CAAS,EACvBL,EAAO,CACT,IAAMM,EAAkB,KAAK,oBAAoBD,CAAS,EACpDE,EAAiBL,EAA2BD,EAA2BI,EAAU,UACnFC,EAAkBC,EACpBF,EAAU,aAAeJ,GAA4BK,EAAkBC,GAEvEF,EAAU,aAAeJ,CAE7B,KAAO,CACL,IAAMK,EAAkB,KAAK,qBAAqBD,CAAS,EACrDG,EAAcN,GAA4BD,EAA2BI,EAAU,WACjFC,EAAkBE,EACpBH,EAAU,aAAeJ,GAA4BK,EAAkBE,GAEvEH,EAAU,aAAeJ,CAE7B,CACAA,EAA2B,EAC3BE,EAAc,QAAQxO,GAAW,CAC/B,IAAM8O,EAAgB9O,EAAQ,aAAeA,EAAQ,UACjDsO,EAA2BQ,IAC7BR,EAA2BQ,EAE/B,CAAC,CACH,EACMC,EAAwB,KAAK,8BAA8B,EAC3DC,EAAuB,KAAK,IAAI,IAAI,yBAAyB,EAC7DC,EAAchG,GACbA,EAAI,UAGLA,EAAI,OACF8F,IAA0B,IAG1BA,IAA0B,SAAW9F,EAAI,QAAU,IAGnD8F,IAA0B,SAAW9F,EAAI,MAAQ,GAC5C,GAGF,CADiBuF,EAAc,IAAIvF,CAAG,EAG3CA,EAAI,aAAa,EACf+F,IAAyB,GACpB,GAGF,CADiBR,EAAc,IAAIvF,CAAG,GAClBA,EAAI,SAE1B,GAtBE,GAwBX,QAAS4E,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAIqB,EAA4BX,EAA2BD,EACtDD,IACHa,EAA4BX,EAA2BD,GAEzD,IAAMa,EAAa,KAAK,SAAS,mBAAmBD,CAAyB,EACvEE,EAAW,KAAK,SAAS,OAAOD,CAAU,EAChD,GAAIC,GAAY,KACd,MAGF,IAAMC,EADY,KAAK,mBAAmBD,CAAQ,EACb,KAAKE,IAAWjB,EAAQiB,EAAO,SAAWH,EAAaG,EAAO,SAAWH,IAAeF,EAAYK,CAAM,CAAC,EAChJ,GAAID,EAAoB,CACtBZ,EAAaY,CAAkB,EAC/B,QACF,CAEA,IADkChB,EAAQe,EAAS,OAASF,EAA4BE,EAAS,OAASA,EAAS,UAAYF,IAC9FD,EAAYG,CAAQ,EAAG,CACtDX,EAAaW,CAAQ,EACrB,QACF,CACA,KACF,CACA,OAAKf,GACHG,EAAc,QAAQxO,GAAW,CAC/BA,EAAQ,aAAesO,GAA4BtO,EAAQ,aAAeA,EAAQ,UACpF,CAAC,EAEI,KAAK,+BAA+BqN,EAAWmB,EAAeF,CAAwB,CAC/F,CACA,+BAAgC,CAC9B,IAAMS,EAAwB,KAAK,IAAI,IAAI,wBAAwB,EACnE,GAAIA,IAA0B,GAC5B,MAAO,GAET,IAAMQ,EAAoB,CAAC,CAAC,KAAK,IAAI,IAAI,oBAAoB,GAAKR,IAA0B,QACtFS,EAAoB,CAAC,CAAC,KAAK,IAAI,IAAI,yBAAyB,GAAKT,IAA0B,QACjG,OAAIQ,GAAqBC,EAChB,GAELA,EACK,QAELD,EACK,QAEF,EACT,CACA,iBAAkB,CAChB,IAAME,EAAkB,KAAK,IAAI,kBAAkB,EAC7CV,EAAwB,KAAK,8BAA8B,EAC3DC,EAAuB,KAAK,IAAI,IAAI,yBAAyB,EACnE,OAAOS,IAAoB,CAACV,GAAyB,CAACC,EACxD,CACA,mBAAmBhP,EAAS,CAC1B,IAAM0P,EAAY,CAAC,EACf/H,EAAI3H,EAAQ,OAASA,EAAQ,QAAUA,EAAQ,OACnD,KAAO2H,GACDA,EAAE,SACJ+H,EAAU,KAAK/H,EAAE,OAAO,EAE1B+H,EAAU,KAAK/H,CAAC,EAChBA,EAAIA,EAAE,OAER,OAAO+H,EAAU,QAAQ,CAC3B,CACA,iBAAkB,CAChB,IAAMC,EAAgB,KAAK,iBAAiB,KAAK,EAC3CC,EAAmB,KAAK,iBAAiB,QAAQ,EACvD,OAAOD,GAAiBC,CAC1B,CACA,oBAAqB,CACnB,KAAK,+BAA+B,MAAsB,IAAI,IAAO,CAAC,EACtE,KAAK,+BAA+B,SAAyB,IAAI,IAAO,CAAC,CAC3E,CACA,kBAAkBC,EAAc,CAC9B,IAAMC,EAAgC,IAAI,IAC1C,GAAI,KAAK,kBAAkB,KAAKjE,GAAQA,EAAK,WAAW,IAAMgE,CAAY,EAAG,CAC3E,QAAS,EAAI,EAAG,EAAI,KAAK,kBAAkB,OAAQ,IAAK,CACtD,IAAME,EAAc,KAAK,kBAAkB,CAAC,EAAE,WAAW,EACrDA,IAAgBF,GAClBC,EAAe,IAAIC,CAAW,CAElC,CACI,KAAK,+BAA+B,MAAOD,EAAgB,KAAK,kBAAkB,GACpF,KAAK,gBAAgB,EAEvB,MACF,CACA,QAAS,EAAI,EAAG,EAAI,KAAK,qBAAqB,OAAQ,IAAK,CACzD,IAAMC,EAAc,KAAK,qBAAqB,CAAC,EAAE,WAAW,EACxDA,IAAgBF,GAClBC,EAAe,IAAIC,CAAW,CAElC,CACI,KAAK,+BAA+B,SAAUD,EAAgB,KAAK,qBAAqB,GAC1F,KAAK,gBAAgB,CAEzB,CAIA,+BAA+BzC,EAAW2C,EAAgBC,EAAQ,CAChE,IAAM5B,EAAQhB,IAAc,MACtB6C,EAAgB7B,EAAQ,KAAK,kBAAoB,KAAK,qBACtD8B,EAAkB,CAAC,EACnBC,EAAiB,CAAC,EACxB,QAASvC,EAAI,EAAGA,EAAIqC,EAAc,OAAQrC,IAAK,CAC7C,IAAMlO,EAAOuQ,EAAcrC,CAAC,EAAE,WAAW,EAEzC,GADuB,CAACmC,EAAe,IAAIrQ,CAAI,EAC3B,CAClBwQ,EAAgBxQ,EAAK,EAAE,EAAIuQ,EAAcrC,CAAC,EAC1ClO,EAAK,OAAS,GACd,QACF,CACAyQ,EAAe,KAAKF,EAAcrC,CAAC,CAAC,CACtC,CACA,IAAMwC,EAA+B,IAAI,IACzC,QAASxC,EAAI,EAAGA,EAAIuC,EAAe,OAAQvC,IACzCwC,EAAc,IAAID,EAAevC,CAAC,EAAE,WAAW,CAAC,EAElD,IAAMyC,EAAW,CAAC,EAClBN,EAAe,QAAQrQ,GAAQ,CACzB0Q,EAAc,IAAI1Q,CAAI,IAG1BA,EAAK,OAAS,GACd2Q,EAAS,KAAK,KAAK,aAAa3Q,EAAM,GAAO,EAAK,CAAC,EACrD,CAAC,EACD,IAAI4Q,EAAsB,CAAC,CAACD,EAAS,QAAUF,EAAe,SAAWF,EAAc,OACnF7B,EACE,KAAK,qBAAuB4B,IAC9B,KAAK,mBAAqBA,EAC1B,KAAK,aAAa,mBAAmBA,CAAM,EAC3CM,EAAsB,IAGpB,KAAK,wBAA0BN,IACjC,KAAK,sBAAwBA,EAC7B,KAAK,aAAa,sBAAsBA,CAAM,EAC9CM,EAAsB,IAG1B,KAAK,gBAAgBJ,EAAiB,EAAK,EAC3C,IAAMK,EAAe,CAAC,GAAGJ,EAAgB,GAAGE,CAAQ,EACpDE,EAAa,KAAK,CAACC,EAAGC,IAAMA,EAAE,WAAW,EAAE,SAAWD,EAAE,WAAW,EAAE,QAAQ,EACxEpC,GACHmC,EAAa,QAAQ,EAEvBA,EAAa,QAAQ3E,GAAQA,EAAK,UAAUA,EAAK,WAAW,EAAE,YAAY,CAAC,EAC3E,IAAI8E,EAAc,EAsBlB,OArBItC,GACF2B,EAAe,QAAQrQ,GAAQ,CACzBA,EAAK,SAAW,KAAK,kBAAkB,YAAY,IACrDgR,GAAehR,EAAK,UAExB,CAAC,EACGgR,EAAc,KAAK,qBACrBA,EAAc,KAAK,oBAErB,KAAK,aAAaA,CAAW,IAE7BX,EAAe,QAAQrQ,GAAQ,CACzBA,EAAK,SAAW,KAAK,kBAAkB,WAAW,IACpDgR,GAAehR,EAAK,UAExB,CAAC,EACGgR,EAAc,KAAK,wBACrBA,EAAc,KAAK,uBAErB,KAAK,gBAAgBA,CAAW,GAE7BJ,GAGDlC,EACF,KAAK,kBAAoBmC,EAEzB,KAAK,qBAAuBA,EAEvB,IAPE,EAQX,CACA,uBAAwB,CACtB,IAAII,EAAY,GACVC,EAAkBhF,GAAQ,CAC9B,IAAM7L,EAAU6L,EAAK,WAAW,EAChC,GAAI7L,EAAQ,mBAAoB,CAC9B,IAAM8Q,EAAY,KAAK,IAAI,oBAAoB9Q,CAAO,EACtDA,EAAQ,aAAa8Q,EAAU,MAAM,EACrCF,EAAY,EACd,CACF,EACA,YAAK,kBAAkB,QAAQC,CAAe,EAC9C,KAAK,qBAAqB,QAAQA,CAAe,EAC1CD,CACT,CACF,EAGIG,GAAc,cAAcxR,CAAS,CACvC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,cAChB,KAAK,+BAAiC,CAAC,EAGvC,KAAK,mBAAqB,CAAC,EAC3B,KAAK,eAAiB,CAAC,EACvB,KAAK,YAAc,CAAC,EACpB,KAAK,YAAc,CAAC,EACpB,KAAK,eAAiB,CAAC,EAKvB,KAAK,kBAAoB,GACzB,KAAK,uBAAyB,GAC9B,KAAK,6BAA+B,IAAM,CACxC,IAAMyR,EAA0B,IAAM,CACpC,KAAK,gBAAgB,EAAE,QAAQtG,GAAYA,EAAS,wBAAwB,CAAC,CAC/E,EACMuG,EAA6B,IAAM,CACvC,KAAK,gBAAgB,EAAE,QAAQvG,GAAYA,EAAS,+BAA+B,CAAC,CACtF,EACMwG,EAA6B,IAAM,CACvC,KAAK,aAAa,iBAAiB,wBAAyBF,CAAuB,EACnF,KAAK,aAAa,iBAAiB,cAAeC,CAA0B,EAC5E,KAAK,aAAa,iBAAiB,eAAgBA,CAA0B,EAC7E,KAAK,aAAa,iBAAiB,gBAAiBA,CAA0B,CAChF,EACME,EAAgC,IAAM,CAC1C,KAAK,aAAa,oBAAoB,wBAAyBH,CAAuB,EACtF,KAAK,aAAa,oBAAoB,cAAeC,CAA0B,EAC/E,KAAK,aAAa,oBAAoB,eAAgBA,CAA0B,EAChF,KAAK,aAAa,oBAAoB,gBAAiBA,CAA0B,CACnF,EACA,KAAK,eAAe,IAAME,EAA8B,CAAC,EACzD,KAAK,2BAA2B,uBAAwB/Q,GAAU,CAC9CA,EAAO,aAEvB8Q,EAA2B,EAE3BC,EAA8B,CAElC,CAAC,EAC6B,KAAK,IAAI,IAAI,sBAAsB,GAE/DD,EAA2B,CAE/B,CACF,CACA,UAAU1R,EAAO,CACf,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,YAAcA,EAAM,YACzB,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,eAAiBA,EAAM,eAC5B,KAAK,SAAWA,EAAM,SACtB,KAAK,aAAeA,EAAM,aAC1B,KAAK,MAAQA,EACb,KAAK,0BAA4BA,EAAM,0BACvC,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,WAC3B,CACA,eAAgB,CACd,KAAK,aAAa,UAAUmI,GAAK,CAC/B,KAAK,aAAeA,EAAE,aACtB,KAAK,WAAW,CAClB,CAAC,CACH,CACA,YAAa,CAaX,GAZA,KAAK,yBAAyB,CAC5B,kBAAmB,KAAK,aAAa,KAAK,IAAI,EAC9C,qBAAsB,KAAK,uBAAuB,KAAK,IAAI,EAC3D,wBAAyB,KAAK,0BAA0B,KAAK,IAAI,EACjE,WAAY,KAAK,aAAa,KAAK,IAAI,EACvC,kBAAmB,KAAK,OAAO,KAAK,IAAI,CAC1C,CAAC,EACD,KAAK,4BAA4B,CAAC,YAAa,oBAAoB,EAAG,IAAM,KAAK,mBAAmB,CAAC,EACrG,KAAK,4BAA4B,CAAC,oCAAqC,WAAW,EAAG,IAAM,KAAK,OAAO,CAAC,EACxG,KAAK,4BAA4B,CAAC,oBAAqB,wBAAyB,wBAAyB,8BAA+B,WAAY,cAAe,WAAY,cAAe,gBAAiB,yBAA0B,mBAAoB,yBAE7P,sBAAuB,4BAA6B,qBAAsB,2BAA4B,uBAAwB,yBAAyB,EAAG,IAAM,KAAK,WAAW,CAAC,EAC7K,KAAK,IAAI,kBAAkB,EAAG,CAChC,IAAMyJ,EAAe,KAAK,SAAS,QAAQ,GACvCA,IAAiB,cAAgBA,IAAiB,gBACpD,KAAK,iBAAmB,KAAK,kBAAkB,IAAItD,GAAiB,KAAK,aAAa,KAAK,IAAI,EAAG,KAAK,gBAAgB,KAAK,IAAI,CAAC,CAAC,EAEtI,CACA,KAAK,2BAA2B,EAChC,KAAK,gBAAgB,EACrB,KAAK,YAAc,KAAK,IAAI,YAAY,OAAO,EAC/C,KAAK,mBAAqB,KAAK,aAAe,KAAK,IAAI,IAAI,oBAAoB,EAC/E,KAAK,uBAAuB,CAC9B,CACA,iBAAkB,CAChB,GAAI,KAAK,IAAI,IAAI,gBAAgB,EAAG,CAClC,IAAMuD,EAAY,KAAK,uBAAuB,EACxCC,EAAQD,GAAgC,EAC9C,KAAK,eAAiB,IAAIE,GAAaD,CAAK,CAC9C,CACF,CACA,wBAAyB,CACvB,OAAO,KAAK,IAAI,IAAI,qBAAqB,CAC3C,CACA,sBAAuB,CACrB,OAAK,KAAK,iBAGH,KAAK,iBAAiB,qBAAqB,EAFzC,CAAC,CAGZ,CACA,yBAA0B,CACxB,OAAK,KAAK,iBAGH,KAAK,iBAAiB,wBAAwB,EAF5C,CAAC,CAGZ,CACA,mBAAoB,CAClB,IAAME,EAAWC,GAAsB,KAAK,kBAAkB,EACxDC,EAAaD,GAAsB,KAAK,cAAc,EACtDE,EAAa,KAAK,eAAiB,KAAK,eAAe,WAAW,EAAI,CAAC,EACzED,EAAW,OAAS,GAAKC,EAAW,OAAS,EAC/C,KAAK,YAAc,CAAC,GAAGH,EAAU,GAAGE,EAAY,GAAGC,CAAU,EAE7D,KAAK,YAAcH,CAEvB,CACA,mBAAmB9O,EAAO,CACxB,KAAK,gBAAgB,EAAE,QAAQgI,GAAYA,EAAS,cAAchI,CAAK,CAAC,EACxE,KAAK,qBAAqB,EAAE,QAAQjC,GAAWA,EAAQ,sBAAsBiC,CAAK,CAAC,CACrF,CAIA,4BAA6B,CAC3B,KAAK,yBAAyB,CAC5B,YAAaA,GAAS,CACpB,KAAK,mBAAmBA,CAAK,CAC/B,EACA,iBAAkB,IAAM,KAAK,mBAAmB,EAChD,WAAYA,GAAS,CACnB,KAAK,gBAAgB,EAAE,QAAQgI,GAAYA,EAAS,aAAahI,CAAK,CAAC,CACzE,EACA,mBAAoB,IAAM,CACxB,KAAK,gBAAgB,EAAE,QAAQgI,GAAYA,EAAS,cAAc,CAAC,CACrE,EACA,wBAAyB,IAAM,CAC7B,KAAK,gBAAgB,EAAE,QAAQA,GAAYA,EAAS,0BAA0B,CAAC,CACjF,EACA,6BAA8B,IAAM,CAC9B,KAAK,aACP,KAAK,gBAAgB,EAAE,QAAQA,GAAYA,EAAS,cAAc,CAAC,CAEvE,CACF,CAAC,EACD,KAAK,6BAA6B,EAClC,KAAK,sCAAsC,EAC3C,KAAK,yBAAyB,CAC5B,mBAAoB,KAAK,sCAAsC,KAAK,IAAI,CAC1E,CAAC,EACD,KAAK,eAAe,KAAK,0BAA0B,KAAK,IAAI,CAAC,CAC/D,CAEA,2BAA4B,CAC1B,KAAK,+BAA+B,QAAQkH,GAAQA,EAAK,CAAC,EAC1D,KAAK,+BAA+B,OAAS,CAC/C,CAKA,uCAAwC,CACtC,KAAK,0BAA0B,EAClB,KAAK,YAAY,QAAQ,EACjC,QAAQC,GAAO,CAClB,IAAMC,EAAyBC,GAAY,CACzC,KAAK,gBAAgB,EAAE,QAAQrH,GAAY,CACrCA,EAAS,UAAU,IAAMmH,GAC3BE,EAASrH,CAAQ,CAErB,CAAC,CACH,EACMsH,EAAsB,IAAM,CAChCF,EAAuBpH,GAAYA,EAAS,cAAc,CAAC,CAC7D,EACMuH,EAAuB,IAAM,CACjCH,EAAuBpH,GAAYA,EAAS,eAAe,CAAC,CAC9D,EACMwH,EAAkC,IAAM,CAC5CJ,EAAuBpH,GAAYA,EAAS,0BAA0B,CAAC,CACzE,EACMyH,EAAgC,IAAM,CAC1CL,EAAuBpH,GAAYA,EAAS,wBAAwB,CAAC,CACvE,EACM0H,EAAwB,IAAM,CAClCN,EAAuBpH,GAAYA,EAAS,gBAAgB,CAAC,CAC/D,EACAmH,EAAI,iBAAiB,cAAeG,CAAmB,EACvDH,EAAI,iBAAiB,eAAgBI,CAAoB,EACzDJ,EAAI,iBAAiB,0BAA2BK,CAA+B,EAC/EL,EAAI,iBAAiB,wBAAyBM,CAA6B,EAC3EN,EAAI,iBAAiB,gBAAiBO,CAAqB,EAC3D,KAAK,+BAA+B,KAAK,IAAM,CAC7CP,EAAI,oBAAoB,cAAeG,CAAmB,EAC1DH,EAAI,oBAAoB,eAAgBI,CAAoB,EAC5DJ,EAAI,oBAAoB,0BAA2BK,CAA+B,EAClFL,EAAI,oBAAoB,wBAAyBM,CAA6B,EAC9EN,EAAI,oBAAoB,gBAAiBO,CAAqB,CAChE,CAAC,CACH,CAAC,CACH,CACA,oBAAqB,CACnB,IAAMC,EAAc,KAAK,IAAI,YAAY,OAAO,EAC1CC,EAAqBD,GAAe,KAAK,IAAI,IAAI,oBAAoB,EACrEE,EAAcD,IAAuB,KAAK,oBAAsB,KAAK,cAAgBD,EAC3F,KAAK,YAAcA,EACnB,KAAK,mBAAqBC,EACtBC,GACF,KAAK,uBAAuB,CAC1B,iBAAkB,EACpB,CAAC,CAEL,CAGA,mBAAoB,CAClB,KAAK,iBAAmB,EACxB,KAAK,gBAAkB,GACvB,IAAMC,EAAqB,OAAO,KAAK,KAAK,kBAAkB,EAC9D,KAAK,eAAeA,CAAkB,CACxC,CACA,aAAa9P,EAAO,CAClB,IAAMtC,EAAS,CACb,YAAasC,EAAM,iBACnB,QAASA,EAAM,QACf,QAASA,EAAM,QACf,QAASA,EAAM,QAKf,SAAU,EACZ,EACA,KAAK,uBAAuBtC,CAAM,CACpC,CACA,qBAAqBE,EAAQ,CAC3B,IAAMgN,EAAM,CAAC,EACb,YAAK,eAAe,EAAE,QAAQ7M,GAAW,CACvC,IAAM8M,EAAQ9M,EAAQ,eAAeH,CAAM,EACvCiN,GACFD,EAAI,KAAKC,CAAK,CAElB,CAAC,EACMD,CACT,CACA,yBAA0B,CACxB,KAAK,oBAAoB,KAAK,YAAa,KAAK,eAAe,qBAAqB,CAAC,EACrF,KAAK,oBAAoB,KAAK,eAAgB,KAAK,eAAe,wBAAwB,CAAC,CAC7F,CACA,gBAAiB,CACf,OAAO,KAAK,WACd,CACA,mBAAoB,CAClB,OAAO,KAAK,WACd,CACA,mBAAoB,CAClB,OAAO,KAAK,cACd,CAcA,oBAAoBmF,EAAUC,EAAU,CACtC,IAAMC,EAAU,OAAO,YAAYD,EAAS,IAAI/S,GAAQ,CAACA,EAAK,GAAIA,CAAI,CAAC,CAAC,EAClEiT,EAAa,OAAO,YAAYH,EAAS,IAAI5G,GAAQ,CAACA,EAAK,WAAW,EAAE,GAAIA,CAAI,CAAC,CAAC,EACxF,QAASgC,EAAI,EAAGA,EAAI6E,EAAS,OAAQ7E,IAAK,CACxC,IAAMlO,EAAO+S,EAAS7E,CAAC,EACjBpN,EAAUgS,EAAS5E,CAAC,EACtBpN,GAAWkS,EAAQlS,EAAQ,WAAW,EAAE,EAAE,IAAM,SAClDA,EAAQ,iBAAiB,EACzBA,EAAQ,kBAAkB,GAExBd,EAAK,MAAMiT,GACbH,EAAS5E,CAAC,EAAI+E,EAAWjT,EAAK,EAAE,EAChC,OAAOiT,EAAWjT,EAAK,EAAE,GAEzB8S,EAAS5E,CAAC,EAAI,IAAIgF,GAAQlT,EAAM,KAAK,MAAO,GAAO,GAAO,KAAK,WAAW,CAE9E,CACA8S,EAAS,OAASC,EAAS,MAC7B,CACA,wBAAyB,CACvB,IAAMtS,EAAS,CACb,YAAa,EACf,EACA,KAAK,uBAAuBA,CAAM,CACpC,CACA,UAAUJ,EAAS8S,EAAgB,GAAO,CACxC,GAAI9S,EAAQ,OACV,KAAK,iBAAiB,kBAAkBA,CAAO,UACtC,KAAK,gBAAgB,IAAIA,CAAO,EAAG,CAC5C,KAAK,eAAe,UAAUA,CAAO,EACrC,MACF,KAAO,CACL,IAAM+S,EAAyBC,GAAc,CAC3C,IAAMnH,EAAOmH,EAAWhT,EAAQ,QAAQ,EACnC6L,GAGDA,EAAK,WAAW,IAAM7L,IAG1B6L,EAAK,iBAAiB,EACtBA,EAAK,kBAAkB,EACvBmH,EAAWhT,EAAQ,QAAQ,EAAI,KAAK,aAAaA,EAAS,GAAO,EAAK,EACxE,EACA,OAAQA,EAAQ,UAAW,CACzB,IAAK,MACH+S,EAAuB,KAAK,WAAW,EACvC,MACF,IAAK,SACHA,EAAuB,KAAK,cAAc,EAC1C,MACF,QACEA,EAAuB,KAAK,kBAAkB,EAC9C,KAAK,kBAAkB,CAC3B,CACF,CACKD,GACH,KAAK,6BAA6B,EAAK,CAE3C,CACA,WAAWJ,EAAU,CAEnB,GADuBA,GAAY,KACf,CAClBA,GAAU,QAAQ/S,GAAQ,KAAK,UAAUA,EAAM,EAAI,CAAC,EACpD,KAAK,6BAA6B,EAAK,EACvC,MACF,CACA,KAAK,uBAAuB,CAC9B,CACA,oCAAoCS,EAAQ,CAC1C,IAAM6S,EAAc7S,GAAQ,kBAAoB,KAAO,KAAK,aAAa,8BAA8B,EACvG,GAAI6S,GAAe,KACjB,OAAO,KAET,IAAMC,EAAgB,KAAK,IAAI,oBAAoB,EAC7CC,EAAc,KAAK,IAAI,WAAWD,EAAeE,GAAS,sBAAsB,EAChFC,EAAa,KAAK,IAAI,WAAWH,EAAeL,GAAQ,qBAAqB,EAEnF,OAD2BM,GAAeE,EACdJ,EAAc,IAC5C,CAOA,uBAAuB7S,EAAS,CAAC,EAAG,CAClC,KAAK,iBAAiB,EACtB,IAAM6S,EAAc,KAAK,oCAAoC7S,CAAM,EACnE,KAAK,uBAAuB,EAC5B,KAAK,qBAAqBA,CAAM,EAChC,IAAMkT,EAAc,CAAClT,EAAO,kBAAoB,CAAC,CAACA,EAAO,YACnDmT,EAAUnT,EAAO,SAAW,KAAK,IAAI,cAAc,EACnDoT,EAAgBF,EAAc,KAAK,iBAAiB,EAAI,KAK9D,GAJKA,GACH,KAAK,kBAAkB,EAEzB,KAAK,gCAAgC,EACjC,KAAK,iBAAkB,CACzB,KAAK,iBAAiB,gBAAgB,EACtC,IAAM3C,EAAc,KAAK,iBAAiB,kBAAkB,EAAI,KAAK,iBAAiB,qBAAqB,EACvGA,GACF,KAAK,uBAAuBA,CAAW,CAE3C,CACA,KAAK,YAAY6C,EAAeD,CAAO,EACvC,KAAK,aAAa,eAAe,EAC5BnT,EAAO,UACV,KAAK,wBAAwB,EAE/B,KAAK,6BAA6B,EAC9B6S,GAAe,MACjB,KAAK,mBAAmBA,CAAW,EAErC,KAAK,qBAAqB,CAC5B,CACA,qBAAqB7S,EAAQ,CAC3B,IAAMqT,EAAcrT,EAAO,SAAWA,EAAO,QACvCsT,EAAsB,KAAK,IAAI,IAAI,yBAAyB,EAC9DD,GAAe,CAACC,IAClB,KAAK,aAAa,iBAAiB,EAAE,YAAY,EACjD,KAAK,kBAAkB,aAAa,EAExC,CACA,uBAAuBC,EAAmB,EAAG,CAC3C,GAAI,KAAK,YAAa,CACpB,KAAK,0BAA0B,eAAe,IAAI,EAClD,MACF,CACA,IAAIC,EAAkB,KAAK,kBAAkB,qBAAqB,EAC9DA,IAAoB,IACtBA,EAAkB,GAEpB,KAAK,0BAA0B,eAAeA,EAAkBD,CAAgB,CAClF,CACA,kBAAmB,CACjB,GAAI,KAAK,kBAAmB,CAC1B,IAAME,EAAmB,KAAK,mBAAmB,wBAAwB,GAAK,GAC9E,MAAM,IAAI,MAAM,8XAAgYA,CAAgB,CACla,CACA,KAAK,kBAAoB,GACzB,KAAK,mBAAmB,mBAAmB,CAC7C,CACA,sBAAuB,CACrB,KAAK,kBAAoB,GACzB,KAAK,mBAAmB,uBAAuB,CACjD,CACA,qBAAsB,CACpB,OAAO,KAAK,iBACd,CAKA,mBAAmB1K,EAAc,CAC1BA,GAGL,WAAW,IAAM,CACf,KAAK,aAAa,sBAAsBA,CAAY,EACpD,KAAK,mBAAmB,KAAK,IAAI,oBAAoB,CACnD,SAAUA,EAAa,SACvB,OAAQA,EAAa,OACrB,UAAWA,EAAa,UACxB,kBAAmB,GACnB,4BAA6B,GAC7B,KAAM,aACR,CAAC,CAAC,CACJ,CAAC,CACH,CACA,YAAYiB,EAAS,GAAO,CAC1B,KAAK,eAAe,EAAE,QAAQ3J,GAAW,CACvCA,EAAQ,YAAY2J,CAAM,CAC5B,CAAC,CACH,CACA,iBAAkB,CAChB,IAAMkD,EAAM,CAAC,EACPmF,EAAW,KAAK,eAAe,EAC/BqB,EAAiBrB,EAAS,OAChC,QAAS5E,EAAI,EAAGA,EAAIiG,EAAgBjG,IAAK,CACvC,IAAMkG,EAAYtB,EAAS5E,CAAC,EAAE,gBAAgB,EACxCmG,EAAkBD,EAAU,OAClC,QAASE,EAAI,EAAGA,EAAID,EAAiBC,IACnC3G,EAAI,KAAKyG,EAAUE,CAAC,CAAC,CAEzB,CACA,OAAO3G,CACT,CACA,gBAAiB,CACf,IAAM4G,EAAoB,KAAK,kBAAoB,KAAK,iBAAiB,qBAAqB,GAAK,CAAC,EAC9FC,EAAuB,KAAK,kBAAoB,KAAK,iBAAiB,wBAAwB,GAAK,CAAC,EACpG7G,EAAM,CAAC,GAAG,KAAK,YAAa,GAAG,KAAK,eAAgB,GAAG4G,EAAmB,GAAGC,CAAoB,EACvG,QAAWxR,KAAO,KAAK,mBACrB2K,EAAI,KAAK,KAAK,mBAAmB3K,CAAG,CAAC,EAEvC,OAAO2K,CACT,CACA,uBAAuB8G,EAAW1S,EAAUqQ,EAAU,CACpD,IAAMsC,EAAU,KAAK,mBAAmB3S,CAAQ,EAC5C2S,GACFA,EAAQ,iBAAiBD,EAAWrC,CAAQ,CAEhD,CACA,WAAW3R,EAAS,CAAC,EAAG,CACtB,KAAK,aAAaA,EAAO,SAAUA,EAAO,OAAO,EAAE,QAAQsK,GAAYA,EAAS,UAAUtK,CAAM,CAAC,CACnG,CACA,aAAaA,EAAS,CAAC,EAAG,CACxB,IAAMkU,EAAoB,CACxB,aAAclU,EAAO,MACrB,QAAS,GACT,cAAeA,EAAO,aACxB,EACA,QAAWsK,KAAY,KAAK,aAAatK,EAAO,SAAUA,EAAO,OAAO,EACtEsK,EAAS,qBAAqB4J,CAAiB,EAEjD,KAAK,iBAAiBlU,EAAO,QAAQ,CACvC,CACA,iBAAiBsS,EAAU,CACzB,GAAI,CAACA,EACH,OAEF,IAAI6B,EAAc,KACd,KAAK,kBAAoBC,GAA8B,IACzDD,EAAc,KAAK,oCAAoC,GAAK,MAE9D,QAAW9T,KAAW,KAAK,YAAYiS,CAAQ,EAAG,CAChD,GAAI,CAACjS,EAAQ,YAAY,EACvB,SAEgBA,EAAQ,iBAAiB,GAEzC,KAAK,UAAUA,EAAQ,WAAW,EAAG,EAAI,CAE7C,CACA,KAAK,6BAA6B,EAAK,EACnC8T,GACF,KAAK,mBAAmBA,CAAW,CAEvC,CACA,yBAAyBnU,EAAQ,CAC/B,IAAMqU,EAAgB,KAAK,aAAarU,EAAO,SAAUA,EAAO,OAAO,EAAE,IAAIsK,GAAYA,EAAS,gBAAgB,CAAC,EAAE,OAAOgK,GAAYA,GAAY,IAAI,EACxJ,GAAItU,EAAO,SAAS,OAClB,OAAOqU,EAET,IAAME,EAAqB,CAAC,EACtBC,EAAW,KAAK,YAAYxU,EAAO,QAAQ,EACjD,YAAK,eAAe,EAAE,QAAQK,GAAW,CAIvC,GAHImU,GAAY,CAAC,KAAK,WAAWnU,EAAQ,WAAW,EAAGmU,CAAQ,GAG3D,CAACnU,EAAQ,YAAY,EACvB,OAEF,IAAMoU,EAAYpU,EAAQ,0BAA0B,EACpD,QAASoN,EAAI,EAAGA,EAAIgH,EAAU,OAAQhH,IAAK,CACzC,IAAM6G,EAAWG,EAAUhH,CAAC,EACxB6G,GAAY,MACdC,EAAmB,KAAKD,CAAQ,CAEpC,CACF,CAAC,EACM,CAAC,GAAGC,EAAoB,GAAGF,CAAa,CACjD,CACA,uBAAuBrU,EAAQ,CAC7B,IAAMkN,EAAM,CAAC,EACb,YAAK,aAAalN,EAAO,SAAUA,EAAO,OAAO,EAAE,QAAQsK,GAAY,CACrE,IAAMS,EAAaT,EAAS,cAAc,EACtCS,GACFmC,EAAI,KAAKnC,CAAU,CAEvB,CAAC,EACMmC,CACT,CACA,iBAAkB,CAChB,IAAMA,EAAM,CAAC,EACb,YAAK,gBAAgB,EAAE,QAAQ5C,GAAY,CACzC,GAAIA,EAAS,UAAU,EAAG,CACxB,IAAMvB,EAAeuB,EAAS,gBAAgB,EAC9C4C,EAAI,KAAKnE,CAAY,CACvB,CACF,CAAC,EACMmE,CACT,CACA,YAAYoF,EAAU,CACpB,GAAI,CAACA,EACH,OAEF,IAAMpF,EAAM,CACV,IAAK,CAAC,EACN,OAAQ,CAAC,EACT,OAAQ,CAAC,CACX,EACA,OAAAoF,EAAS,QAAQ1S,GAAW,CAC1B,IAAMF,EAAKE,EAAQ,GACnB,OAAQA,EAAQ,UAAW,CACzB,IAAK,MACHsN,EAAI,IAAIxN,CAAE,EAAIE,EACd,MACF,IAAK,SACHsN,EAAI,OAAOxN,CAAE,EAAIE,EACjB,MACF,QACEsN,EAAI,OAAOxN,CAAE,EAAIE,EACjB,KACJ,CACF,CAAC,EACMsN,CACT,CACA,WAAWtN,EAAS8U,EAAW,CAC7B,IAAMhV,EAAKE,EAAQ,GAEnB,OADiBA,EAAQ,UACP,CAChB,IAAK,MACH,OAAO8U,EAAU,IAAIhV,CAAE,GAAK,KAC9B,IAAK,SACH,OAAOgV,EAAU,OAAOhV,CAAE,GAAK,KACjC,QACE,OAAOgV,EAAU,OAAOhV,CAAE,GAAK,IACnC,CACF,CAIA,YAAY4S,EAAU,CACpB,IAAMoC,EAAY,KAAK,YAAYpC,CAAQ,EACrCqC,EAAc,KAAK,eAAe,EACxC,MAAI,CAACrC,GAAY,CAACoC,EACTC,EAEFA,EAAY,OAAOtU,GAAW,CACnC,IAAMT,EAAUS,EAAQ,WAAW,EACnC,OAAO,KAAK,WAAWT,EAAS8U,CAAS,CAC3C,CAAC,CACH,CAGA,aAAapC,EAAUsC,EAAS,CAC9B,IAAIC,EACAxS,EAAQuS,CAAO,IACjBC,EAAY,CAAC,EACbD,EAAQ,QAAQE,GAAU,CACxB,IAAM5U,EAAS,KAAK,YAAY,OAAO4U,CAAM,EACzCzS,EAAQnC,CAAM,IAChB2U,EAAU3U,EAAO,MAAM,CAAC,EAAI,GAEhC,CAAC,GAEH,IAAMgN,EAAM,CAAC,EACb,YAAK,YAAYoF,CAAQ,EAAE,QAAQjS,GAAW,CAC5CA,EAAQ,gBAAgB,EAAE,QAAQiK,GAAY,CAC5C,IAAMyK,EAAQzK,EAAS,UAAU,EAAE,MAAM,EACXuK,GAAa,CAACA,EAAUE,CAAK,GAI3D7H,EAAI,KAAK5C,CAAQ,CACnB,CAAC,CACH,CAAC,EACM4C,CACT,CACA,SAAU,CACR,KAAK,kBAAkB,EACvB,MAAM,QAAQ,CAChB,CACA,mBAAoB,CAClB,IAAMkF,EAAqB,OAAO,KAAK,KAAK,kBAAkB,EAC9D,KAAK,eAAeA,CAAkB,EAClC,KAAK,kBACP,KAAK,iBAAiB,mBAAmB,CAE7C,CACA,kBAAmB,CACjB,IAAM4C,EAAkB,CAAC,EACzBC,GAAe,KAAK,mBAAoB,CAAC1L,EAAOlJ,IAAY,CACzCA,EAAQ,WAAW,EAAE,IAAM,MAE1C2U,EAAgB,KAAKzL,CAAK,CAE9B,CAAC,EACD,KAAK,eAAeyL,CAAe,EACnC,IAAME,EAAe,CAAC,EACtB,OAAAD,GAAe,KAAK,mBAAoB,CAACE,EAAG9U,IAAY,CACtD,IAAMT,EAAUS,EAAQ,WAAW,EACnC6U,EAAatV,EAAQ,EAAE,EAAIS,CAC7B,CAAC,EACD,KAAK,mBAAqB,CAAC,EACpB6U,CACT,CAEA,eAAeE,EAAcC,EAAoB,GAAO,CACtDD,EAAa,QAAQE,GAAiB,CACpC,IAAMjV,EAAU,KAAK,mBAAmBiV,CAAa,EACjDjV,IACFA,EAAQ,iBAAiBgV,CAAiB,EAC1ChV,EAAQ,kBAAkB,GAE5B,OAAO,KAAK,mBAAmBiV,CAAa,CAC9C,CAAC,CACH,CACA,aAAa,EAAG,CACV,EAAE,YAAc,YAGpB,KAAK,OAAO,CACV,YAAa,EACf,CAAC,CACH,CAKA,OAAOtV,EAAS,CAAC,EAAG,CAClB,GAAM,CACJ,YAAAuV,CACF,EAAIvV,EACAmU,EACA,KAAK,kBAAoBC,GAA8B,IACzDD,EAAc,KAAK,oCAAoC,GAAK,QAE9D,IAAMqB,EAAc,KAAK,iBACnBC,EAAa,KAAK,gBACxB,KAAK,gCAAgC,EACrC,IAAIC,EAAsB,GAC1B,GAAI,KAAK,iBAAkB,CACzBA,EAAsB,KAAK,iBAAiB,gBAAgB,EAC5D,IAAMnF,EAAc,KAAK,iBAAiB,kBAAkB,EAAI,KAAK,iBAAiB,qBAAqB,EACvGA,GACF,KAAK,uBAAuBA,CAAW,CAE3C,CACA,IAAMoF,EAAe,KAAK,mBAAqBH,GAAe,KAAK,kBAAoBC,EACvF,GAAI,EAAAF,GAAe,CAACG,GAAuB,CAACC,KAG5C,KAAK,iBAAiB,EACtB,KAAK,YAAY,KAAM,GAAOJ,CAAW,EACzC,KAAK,qBAAqB,EAC1B,KAAK,6BAA6BA,GAAe,CAACG,CAAmB,EACjEvB,GAAe,MAAM,CACvB,IAAMyB,EAAiB,KAAK,oCAAoC,EAC5DzB,GAAe,MAAQyB,GAAkB,OAC3C,KAAK,sBAAsB,eAAe,EAC1C,KAAK,mBAAmBzB,CAAW,EAEvC,CACF,CACA,wBAAwB0B,EAAeR,EAAmB,CACxD,IAAMS,EAAmB,CAAC,EAC1BD,EAAc,QAAQtM,GAASuM,EAAiBvM,CAAK,EAAI,EAAI,EAE7D,IAAMwM,EADkB,OAAO,KAAK,KAAK,kBAAkB,EAClB,OAAOxM,GAAS,CAACuM,EAAiBvM,CAAK,CAAC,EACjF,KAAK,eAAewM,EAAkBV,CAAiB,CACzD,CACA,uBAAuBjC,EAAe,CACpC,IAAMyC,EAAgBG,GAAsB,KAAK,iBAAkB,KAAK,eAAe,EACjFC,EAAiB,CAACC,EAAUjC,IAAY,CAC5C,IAAM1K,EAAQ0K,EAAQ,WAAW,EAAE,SAC/B1K,GAAS,OAGTA,EAAQ,KAAK,kBAAoBA,EAAQ,KAAK,kBAC5C,KAAK,qBAAqB0K,CAAO,GACnC4B,EAAc,KAAKtM,CAAK,CAG9B,EACA0L,GAAe,KAAK,mBAAoBgB,CAAc,EACtDhB,GAAe7B,EAAe6C,CAAc,EAC5CJ,EAAc,KAAK,CAACxF,EAAGC,IAAMD,EAAIC,CAAC,EAClC,IAAMxO,EAAM,CAAC,EACb,QAAS2L,EAAI,EAAGA,EAAIoI,EAAc,OAAQpI,IAAK,CAC7C,IAAM0I,EAAUN,EAAcpI,CAAC,EACzB7N,EAAU,KAAK,SAAS,OAAOuW,CAAO,EACxCvW,GAAW,CAACA,EAAQ,QACtBkC,EAAI,KAAKqU,CAAO,CAEpB,CACA,OAAOrU,CACT,CACA,YAAYsR,EAAeD,EAAU,GAAOoC,EAAc,GAAO,CAC/D,IAAMM,EAAgB,KAAK,uBAAuBzC,CAAa,GAC3D,KAAK,aAAemC,KACtBpC,EAAU,IAEZ,KAAK,wBAAwB0C,EAAe,CAAC1C,CAAO,EACpD,IAAMd,EAAW,CAAC,EAClBwD,EAAc,QAAQvU,GAAY,CAChC,IAAMjB,EAAU,KAAK,sBAAsBiB,EAAU8R,EAAeD,EAASoC,CAAW,EACpFlT,EAAQhC,CAAO,GACjBgS,EAAS,KAAKhS,CAAO,CAEzB,CAAC,EACG+S,IACwBmC,GAAe,CAAC,KAAK,IAAI,IAAI,wBAAwB,GAAK,CAAC,KAAK,YAExF,KAAK,MAAM,sBAAsB,eAAe,IAAM,CACpD,KAAK,gBAAgBnC,EAAeD,CAAO,EAC3C,KAAK,kBAAkB,EACvB,KAAK,6BAA6B,CACpC,CAAC,EAED,KAAK,gBAAgBC,EAAeD,CAAO,GAG/C,KAAK,kBAAkB,CACzB,CACA,6BAA6BoC,EAAc,GAAO,CAChD,IAAMjT,EAAQ,CACZ,KAAM,uBACN,YAAAiT,CACF,EACA,KAAK,aAAa,cAAcjT,CAAK,CACvC,CACA,2BAA4B,CAC1B,IAAM8T,EAAc,KAAK,mBAAmB,cAAc,EACpDC,EAAe,KAAK,mBAAmB,eAAe,GAClC,KAAK,cAAgBD,GAAeC,IAAiB,KAAK,gBAElF,KAAK,YAAcD,EACnB,KAAK,aAAeC,EAChB,KAAK,oBACP,KAAK,4BAA4B,EAGvC,CAGA,6BAA8B,CAC5B,IAAMjB,EAAe,CAAC,EACtB,KAAK,qBAAqB,EAAE,QAAQkB,GAAiB,CACnD,IAAMhV,EAAWgV,EAAc,WAAW,EAAE,SAC5ClB,EAAa,KAAK9T,EAAS,SAAS,CAAC,CACvC,CAAC,EACD,KAAK,wBAAwB,EAC7B,KAAK,eAAe8T,CAAY,EAChC,KAAK,OAAO,CACV,YAAa,EACf,CAAC,CACH,CACA,qBAAqB9C,EAAU,CAC7B,IAAMiE,EAAc,KAAK,YAAYjE,CAAQ,EAC7C,OAAO,KAAK,eAAe,EAAE,OAAOjS,GAAW,CAC7C,GAAI,CAACA,EAAQ,YAAY,EACvB,MAAO,GAET,IAAMT,EAAUS,EAAQ,WAAW,EACnC,MAAI,EAAAkW,GAAe,MAAQ,CAAC,KAAK,WAAW3W,EAAS2W,CAAW,EAIlE,CAAC,CACH,CACA,sBAAsBjV,EAAU8R,EAAeD,EAASoC,EAAa,CACnE,IAAI3V,EACAS,EAAU,KAAK,mBAAmBiB,CAAQ,EAS9C,GARKjB,IACHT,EAAU,KAAK,SAAS,OAAO0B,CAAQ,EACnCe,EAAQzC,CAAO,GAAKyC,EAAQ+Q,CAAa,GAAKA,EAAcxT,EAAQ,EAAE,GAAKA,EAAQ,kBACrFS,EAAU+S,EAAcxT,EAAQ,EAAE,EAClCwT,EAAcxT,EAAQ,EAAE,EAAI,OAGL,CAACS,EAK1B,GAHKT,IACHA,EAAU,KAAK,SAAS,OAAO0B,CAAQ,GAErCe,EAAQzC,CAAO,EACjBS,EAAU,KAAK,aAAaT,EAASuT,EAASoC,CAAW,MAEzD,QAGJ,OAAI3V,IACFA,EAAQ,gBAAkB,IAE5B,KAAK,mBAAmB0B,CAAQ,EAAIjB,EAC7BA,CACT,CACA,gBAAgBmW,EAAarD,EAAS,CACpC,IAAMsD,EAAuB,CAAC,EAC9BxB,GAAeuB,EAAa,CAACE,EAAQrW,IAAY,CAC/C,GAAKA,EAGL,IAAI,KAAK,gBAAkBA,EAAQ,YAAY,EAAG,CAChD,KAAK,eAAe,OAAOA,CAAO,EAClC,MACF,CACAA,EAAQ,iBAAiB,CAAC8S,CAAO,EAC7BA,GACF,KAAK,eAAe9S,EAAQ,cAAc,CAAC,EAAIA,EAC/CoW,EAAqB,KAAK,IAAM,CAC9BpW,EAAQ,kBAAkB,EAC1B,OAAO,KAAK,eAAeA,EAAQ,cAAc,CAAC,CACpD,CAAC,GAEDA,EAAQ,kBAAkB,EAE9B,CAAC,EACG8S,IACFsD,EAAqB,KAAK,IAAM,CAC9B,KAAK,kBAAkB,EACvB,KAAK,6BAA6B,CACpC,CAAC,EACDE,GAAiBF,CAAoB,EAEzC,CACA,cAAe,CACb,OAAO,KAAK,IAAI,IAAI,WAAW,CACjC,CACA,sBAAuB,CACrB,IAAMG,EAAe,KAAK,aAAa,EACjCC,EAAmB,KAAK,IAAI,qBAAqB,EACvD,OAAOD,EAAeC,CACxB,CACA,iCAAkC,CAChC,KAAK,0BAA0B,aAAa,EAC5C,IAAIC,EACAC,EACJ,GAAI,CAAC,KAAK,SAAS,eAAe,EAChCD,EAAW,EACXC,EAAU,WACD,KAAK,YACd,KAAK,YAAY,yBAAyB,EAC1CD,EAAW,KAAK,kBAAkB,YAAY,EAC9CC,EAAU,KAAK,kBAAkB,WAAW,MACvC,CACL,IAAMC,EAAe,KAAK,qBAAqB,EACzCC,EAAe,KAAK,aAAa,gBAAgB,EACjDC,EAA4B,KAAK,IAAI,IAAI,2BAA2B,EACtEC,EAAoB,GACpBC,EACAC,EACJ,EAAG,CACD,IAAMC,EAAmB,KAAK,kBAAkB,eAAe,EACzD,CACJ,eAAAC,EACA,cAAAC,CACF,EAAI,KAAK,kBAAkB,yBAAyB,EAC9CC,EAAmB,KAAK,0BAA0B,oBAAoB,EACtEC,EAAaT,EAAa,iBAAiB,EAAE,mBAAmB,EAChEU,EAAeD,EAAW,IAC1BE,EAAkBF,EAAW,OAC/BR,GACFE,EAAaG,EAAiBE,EAC9BJ,EAAYG,EAAgBC,IAE5BL,EAAa,KAAK,IAAIO,EAAeL,EAAmBN,EAAcO,CAAc,EAAIE,EACxFJ,EAAY,KAAK,IAAIO,EAAkBN,EAAmBN,EAAcQ,CAAa,EAAIC,GAE3F,KAAK,mBAAqB,KAAK,IAAIE,EAAeL,EAAkBC,CAAc,EAAIE,EACtF,KAAK,kBAAoB,KAAK,IAAIG,EAAkBN,EAAkBE,CAAa,EAAIC,EACvFN,EAAoB,KAAK,0CAA0CC,EAAYC,CAAS,CAC1F,OAASF,GACT,IAAIU,EAAgB,KAAK,SAAS,mBAAmBT,CAAU,EAC3DU,EAAe,KAAK,SAAS,mBAAmBT,CAAS,EACvDU,EAAe,KAAK,kBAAkB,YAAY,EAClDC,EAAc,KAAK,kBAAkB,WAAW,EAClDH,EAAgBE,IAClBF,EAAgBE,GAEdD,EAAeE,IACjBF,EAAeE,GAEjBlB,EAAWe,EACXd,EAAUe,CACZ,CACA,IAAMG,EAAkB,KAAK,IAAI,YAAY,QAAQ,EAC/CC,EAA8B,KAAK,IAAI,IAAI,mCAAmC,EAC9EC,EAAmB,KAAK,IAAI,KAAK,aAAa,EAAG,GAAG,EACtDF,GAAmB,CAACC,GAClBnB,EAAUD,EAAWqB,IACvBpB,EAAUD,EAAWqB,GAGzB,IAAMC,EAAetB,IAAa,KAAK,iBACjCuB,EAActB,IAAY,KAAK,gBACrC,GAAIqB,GAAgBC,EAAa,CAC/B,KAAK,iBAAmBvB,EACxB,KAAK,gBAAkBC,EACvB,IAAMzU,EAAQ,CACZ,KAAM,kBACN,SAAUwU,EACV,QAASC,CACX,EACA,KAAK,aAAa,cAAczU,CAAK,CACvC,CACF,CAMA,gCAAiC,CAC/B,GAAI,KAAK,uBACP,OAEF,KAAK,uBAAyB,GAC9B,IAAMA,EAAQ,CACZ,KAAM,oBACN,SAAU,KAAK,iBACf,QAAS,KAAK,eAChB,EACA,OAAO,sBAAsB,IAAM,CACjC,KAAK,MAAM,aAAa,cAAcA,CAAK,CAC7C,CAAC,CACH,CACA,0CAA0CgW,EAAUC,EAAa,CAC/D,IAAMC,EAA0B,KAAK,gBAAgB,sBAAsB,EACrEC,EAAuB,KAAK,kBAAkB,sBAAsB,EACpEC,EAAyB,KAAK,SAAS,sBAAsBJ,EAAUC,EAAa,KAAK,kBAAkB,YAAY,EAAG,KAAK,kBAAkB,WAAW,CAAC,EAMnK,OALIG,GAA0BD,IAC5B,KAAK,aAAa,cAAc,CAC9B,KAAM,sBACR,CAAC,EAECA,GAAwBC,GAA0BF,GACpD,KAAK,uBAAuB,EACrB,IAEF,EACT,CACA,8BAA+B,CAC7B,OAAO,KAAK,kBACd,CACA,6BAA8B,CAC5B,OAAO,KAAK,iBACd,CACA,4BAA6B,CAC3B,OAAO,KAAK,gBACd,CACA,2BAA4B,CAC1B,OAAO,KAAK,eACd,CAYA,qBAAqBvE,EAAS,CAG5B,IAAMrU,EAAUqU,EAAQ,WAAW,EAC7B0E,EAAc,KAAK,aAAa,iBAAiB/Y,CAAO,EACxDgZ,EAAe3E,EAAQ,UAAU,EACjC4E,EAAcjZ,EAAQ,OAE5B,OAD2B+Y,GAAeC,GAAgBC,EAKnD,EADgB,KAAK,aAAajZ,CAAO,EAFvC,EAIX,CACA,aAAaA,EAAS,CACpB,OAAK,KAAK,SAAS,aAAaA,CAAO,EAGhC,KAAK,kBAAoB,KAAK,kBAAkB,aAAaA,CAAO,EAAI,GAFtE,EAGX,CACA,aAAaA,EAASuT,EAASoC,EAAa,CAC1C,IAAMuD,EAAmB,KAAK,eAAiB,KAAK,eAAe,OAAOlZ,CAAO,EAAI,KACrF,GAAIkZ,EACF,OAAOA,EAET,IAAMC,EAAyB,KAAK,IAAI,IAAI,wBAAwB,EAC9DC,EAA6BzD,GAAe,CAACwD,GAA0B,CAAC,KAAK,YAEnF,OADY,IAAItG,GAAQ7S,EAAS,KAAK,MAAOuT,EAAS6F,EAA4B,KAAK,WAAW,CAEpG,CACA,kBAAmB,CACjB,IAAMC,EAAe,KAAK,mBAC1B,OAAO,OAAO,OAAOA,CAAY,EAAE,IAAI5Y,GAAWA,EAAQ,WAAW,CAAC,CACxE,CACA,iBAAiB+H,EAAa,CAC5B,IAAI/H,EACE,CACJ,SAAAiB,CACF,EAAI8G,EACJ,OAAQA,EAAY,UAAW,CAC7B,IAAK,MACH/H,EAAU,KAAK,YAAYiB,CAAQ,EACnC,MACF,IAAK,SACHjB,EAAU,KAAK,eAAeiB,CAAQ,EACtC,MACF,QACEjB,EAAU,KAAK,mBAAmBiB,CAAQ,EACrCjB,IACHA,EAAU,KAAK,qBAAqB,EAAE,KAAKoL,GAAQA,EAAK,WAAW,EAAE,WAAanK,CAAQ,GAAK,KAC1FjB,IACHA,EAAU,KAAK,wBAAwB,EAAE,KAAKoL,GAAQA,EAAK,WAAW,EAAE,WAAanK,CAAQ,GAAK,OAGtG,KACJ,CACA,OAAOjB,CACT,CAGA,0BAA0B6Y,EAAYC,EAAU,CAE9C,GADqBD,GAAc,MAAQC,GAAY,KAErD,MAAO,GAET,IAAMC,EAAqBF,EAAa,KAAK,gBAG7C,MAD4B,EADAC,EAAW,KAAK,mBACQ,CAACC,CAEvD,CACF,EACIjI,GAAe,KAAM,CACvB,YAAYkI,EAAU,CAEpB,KAAK,WAAa,CAAC,EAEnB,KAAK,YAAc,CAAC,EACpB,KAAK,SAAWA,CAClB,CACA,OAAOhZ,EAAS,CAId,GAHA,KAAK,WAAWA,EAAQ,WAAW,EAAE,EAAE,EAAIA,EAC3C,KAAK,YAAY,KAAKA,CAAO,EAC7BA,EAAQ,UAAU,EAAI,EAClB,KAAK,YAAY,OAAS,KAAK,SAAU,CAC3C,IAAMiZ,EAAmB,KAAK,YAAY,CAAC,EAC3CA,EAAiB,iBAAiB,EAClCA,EAAiB,kBAAkB,EACnC,KAAK,gBAAgBA,CAAgB,CACvC,CACF,CACA,OAAO1Z,EAAS,CACd,GAAIA,GAAW,MAAQA,EAAQ,IAAM,KACnC,OAAO,KAET,IAAMsN,EAAM,KAAK,WAAWtN,EAAQ,EAAE,EACtC,OAAKsN,GAGL,KAAK,gBAAgBA,CAAG,EACxBA,EAAI,UAAU,EAAK,EACKA,EAAI,WAAW,GAAKtN,EACnB,KAAOsN,GALvB,IAMX,CACA,IAAItN,EAAS,CACX,OAAO,KAAK,WAAWA,EAAQ,EAAE,GAAK,IACxC,CACA,UAAUA,EAAS,CACjB,IAAM2Z,EAAY3Z,EAAQ,GACpB6L,EAAO,KAAK,WAAW8N,CAAS,EACtC,OAAO,KAAK,WAAWA,CAAS,EAChCC,EAAiB,KAAK,YAAa/N,CAAI,CACzC,CACA,gBAAgBpL,EAAS,CACvB,IAAMkZ,EAAYlZ,EAAQ,WAAW,EAAE,GACvC,OAAO,KAAK,WAAWkZ,CAAS,EAChCC,EAAiB,KAAK,YAAanZ,CAAO,CAC5C,CACA,YAAa,CACX,OAAO,KAAK,WACd,CACF,EAGIoZ,GAAiB,cAActa,CAAS,CAC1C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,iBAChB,KAAK,OAAS,CAChB,CACA,UAAUC,EAAO,CACf,KAAK,MAAQA,CACf,CACA,eAAgB,CACd,KAAK,oBAAoB,EACzB,KAAK,uBAAuB,EAC5B,KAAK,2BAA2B,mBAAoB,IAAM,KAAK,oBAAoB,CAAC,EACpF,KAAK,2BAA2B,sBAAuB,IAAM,KAAK,uBAAuB,CAAC,EAC1F,KAAK,yBAAyB,CAC5B,kBAAmB,KAAK,oBAAoB,KAAK,IAAI,CACvD,CAAC,CACH,CACA,QAAQsa,EAAU,CAChB,IAAM1X,EAAO0X,IAAa,MAAQ,KAAK,cAAgB,KAAK,iBAC5D,OAAOC,EAAgB3X,CAAI,CAC7B,CACA,eAAe0X,EAAU,CACvB,MAAO,CAAC,KAAK,QAAQA,CAAQ,CAC/B,CACA,cAAcE,EAAOF,EAAU,CAC7B,IAAM1X,EAAO0X,IAAa,MAAQ,KAAK,cAAgB,KAAK,iBAC5D,GAAIC,EAAgB3X,CAAI,EACtB,MAAO,GAET,QAASyL,EAAI,EAAGA,EAAIzL,EAAK,OAAQyL,IAAK,CACpC,IAAM7N,EAAUoC,EAAKyL,CAAC,EAEtB,GADoB7N,EAAQ,OAASA,EAAQ,UAAY,GACtCga,EACjB,OAAOnM,CAEX,CACA,OAAOzL,EAAK,OAAS,CACvB,CACA,oBAAoB,EAAG,CACrB,GAAI,EAAE,iBAAkB,CACtB,IAAM6X,EAAoBja,GAAW,CACnCA,EAAQ,aAAaA,EAAQ,UAAW,EAAI,CAC9C,EACA,KAAK,iBAAiB,QAAQia,CAAiB,EAC/C,KAAK,cAAc,QAAQA,CAAiB,CAC9C,CACF,CACA,uBAAwB,CACtB,IAAIrJ,EAAY,GACZsJ,EAAS,EACPrJ,EAAkB7Q,GAAW,CACjC,GAAIA,EAAQ,mBAAoB,CAC9B,IAAM8Q,EAAY,KAAK,IAAI,oBAAoB9Q,CAAO,EACtDA,EAAQ,UAAUka,CAAM,EACxBla,EAAQ,aAAa8Q,EAAU,MAAM,EACrCoJ,GAAUpJ,EAAU,OACpBF,EAAY,EACd,CACF,EACA,KAAK,kBAAkB,QAAQC,CAAe,EAC9CqJ,EAAS,EACT,KAAK,eAAe,QAAQrJ,CAAe,EAC3C,IAAMnO,EAAQ,CACZ,KAAM,qBACR,EACA,YAAK,aAAa,cAAcA,CAAK,EAC9BkO,CACT,CACA,qBAAsB,CACpB,IAAMuJ,EAAU,KAAK,IAAI,IAAI,kBAAkB,EAC/C,KAAK,cAAgB,KAAK,oBAAoBA,EAAS,EAAI,EAC3D,IAAMzX,EAAQ,CACZ,KAAM,sBACR,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,wBAAyB,CACvB,IAAMyX,EAAU,KAAK,IAAI,IAAI,qBAAqB,EAClD,KAAK,iBAAmB,KAAK,oBAAoBA,EAAS,EAAK,EAC/D,IAAMzX,EAAQ,CACZ,KAAM,sBACR,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,oBAAoB0X,EAAS/L,EAAO,CAClC,IAAMqE,EAAW,CAAC,EAClB,GAAI0H,EAAS,CACX,IAAMC,EAAW,KAAK,IAAI,iBAAiB,EACrCC,EAAWjM,EAAQkM,GAAQ,qBAAuBA,GAAQ,wBAC5DC,EAAa,EACXC,EAASpM,EAAQ,MAAQ,SAC/B+L,EAAQ,QAAQ,CAACM,EAAU/Q,IAAU,CACnC,IAAM3J,EAAU,IAAIua,GAAQ,KAAK,KAAK,EACtCva,EAAQ,KAAO0a,EACf1a,EAAQ,GAAKqa,IAAW,CACtB,KAAMK,EACN,MAAO,EACP,UAAWD,CACb,CAAC,GAAKH,EAAW,KAAK,SACtBta,EAAQ,UAAYya,EACpBza,EAAQ,UAAUwa,CAAU,EAC5Bxa,EAAQ,aAAa,KAAK,IAAI,oBAAoBA,CAAO,EAAE,MAAM,EACjEA,EAAQ,YAAY2J,CAAK,EACzB6Q,GAAcxa,EAAQ,UACtB0S,EAAS,KAAK1S,CAAO,CACvB,CAAC,CACH,CACA,OAAO0S,CACT,CACA,sBAAuB,CACrB,OAAO,KAAK,aACd,CACA,yBAA0B,CACxB,OAAO,KAAK,gBACd,CACA,yBAA0B,CACxB,OAAO,KAAK,eAAe,KAAK,aAAa,CAC/C,CACA,sBAAuB,CACrB,OAAO,KAAK,cAAgB,KAAK,cAAc,OAAS,CAC1D,CACA,yBAA0B,CACxB,OAAO,KAAK,iBAAmB,KAAK,iBAAiB,OAAS,CAChE,CACA,gBAAgB/I,EAAO,CACrB,OAAO,KAAK,cAAcA,CAAK,CACjC,CACA,mBAAmBA,EAAO,CACxB,OAAO,KAAK,iBAAiBA,CAAK,CACpC,CACA,oBAAoBoI,EAAU,CACxBgI,EAAgB,KAAK,aAAa,GAGtC,KAAK,cAAc,QAAQhI,CAAQ,CACrC,CACA,uBAAuBA,EAAU,CAC3BgI,EAAgB,KAAK,gBAAgB,GAGzC,KAAK,iBAAiB,QAAQhI,CAAQ,CACxC,CACA,4BAA6B,CAC3B,OAAO,KAAK,eAAe,KAAK,gBAAgB,CAClD,CACA,eAAeW,EAAU,CACvB,GAAI,CAACA,GAAYA,EAAS,SAAW,EACnC,MAAO,GAET,IAAMiI,EAAWvM,EAAMsE,CAAQ,EAC/B,OAAOiI,EAAS,OAASA,EAAS,SACpC,CACF,EAgBA,IAAIC,GAAe,cAAcC,CAAS,CACxC,YAAYC,EAAI,CACd,MAAM,EACN,KAAK,MAAQ,eACb,KAAK,QAAU,EACf,KAAK,GAAKA,CACZ,CACA,OAAQ,CACN,OAAO,KAAK,EACd,CACA,MAAO,CACL,KAAK,MAAQ,UACb,KAAK,mBAAmB,CAC1B,CACA,YAAa,CACX,OAAO,KAAK,OACd,CACA,uBAAwB,CACtB,KAAK,UACL,KAAK,MAAQ,cACf,CACA,UAAW,CACT,OAAO,KAAK,KACd,CACA,eAAeC,EAAS,CACW,KAAK,2BAA2BA,CAAO,IAEtE,KAAK,MAAQ,SACb,KAAK,kBAAkB,GAEzB,KAAK,sBAAsB,EAAK,CAClC,CACA,QAAQA,EAASC,EAAQ,CACvB,KAAK,cAAcD,EAASC,CAAM,CACpC,CACA,WAAWD,EAASE,EAAMC,EAAS,CACjC,KAAK,cAAcH,EAAS,CAC1B,QAASE,EACT,SAAUC,CACZ,CAAC,CACH,CACA,2BAA2BH,EAAS,CAClC,IAAMI,EAA0BJ,IAAY,KAAK,QAC3CK,EAAoB,KAAK,QAAQ,EACvC,OAAOD,GAA2BC,CACpC,CACA,cAAcL,EAASC,EAAQ,CAC7B,KAAK,sBAAsB,EACM,KAAK,2BAA2BD,CAAO,IAEtE,KAAK,MAAQ,SACb,KAAK,oBAAoBC,CAAM,EAEnC,CACA,sBAAsBK,EAAU,GAAM,CACpC,IAAMC,EAAQ,CACZ,KAAM,eACN,QAAAD,EACA,MAAO,IACT,EACA,KAAK,mBAAmBC,CAAK,CAC/B,CACF,EAGIC,GAAqB,cAAcV,CAAS,CAC9C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,qBAChB,KAAK,sBAAwB,EAC7B,KAAK,OAAS,CAAC,EACf,KAAK,OAAS,EAChB,CACA,UAAUW,EAAO,CACf,KAAK,SAAWA,EAAM,QACxB,CACA,eAAgB,CACd,KAAK,sBAAwB,KAAK,mCAAmC,EACrE,IAAMC,EAA0B,KAAK,IAAI,IAAI,yBAAyB,EAClEA,GAA2BA,EAA0B,IACvD,KAAK,yBAA2BC,EAAU,KAAK,yBAAyB,KAAK,IAAI,EAAGD,CAAuB,EAE/G,CACA,oCAAqC,CACnC,IAAME,EAAM,KAAK,IAAI,IAAI,iCAAiC,EAC1D,GAAIA,GAAO,KACT,MAAO,GAET,GAAI,EAAAA,GAAO,GAGX,OAAOA,CACT,CACA,SAASC,EAAO,CACd,KAAK,OAAO,KAAKA,CAAK,EACtBA,EAAM,iBAAiB,eAAgB,KAAK,aAAa,KAAK,IAAI,CAAC,EACnE,KAAK,iBAAiB,CACxB,CACA,YAAYA,EAAO,CACjBC,EAAiB,KAAK,OAAQD,CAAK,CACrC,CACA,SAAU,CACR,MAAM,QAAQ,EACd,KAAK,OAAS,EAChB,CACA,cAAe,CACb,KAAK,wBACL,KAAK,iBAAiB,EACtB,KAAK,mBAAmB,CACtB,KAAM,aACR,CAAC,EACG,KAAK,uBAAyB,GAChC,KAAK,mBAAmB,CACtB,KAAM,qBACR,CAAC,CAEL,CACA,kBAAmB,CACb,KAAK,yBACP,KAAK,yBAAyB,EAE9B,KAAK,yBAAyB,CAElC,CACA,0BAA2B,CACzB,GAAI,CAAC,KAAK,OACR,OAGF,GADA,KAAK,iBAAiB,EAClB,KAAK,uBAAyB,MAAQ,KAAK,uBAAyB,KAAK,sBAAuB,CAC9F,KAAK,IAAI,IAAI,OAAO,GACtBE,GAAK,2DAA2D,EAElE,MACF,CACA,IAAMC,EAAmB,KAAK,yBAAyB,EACjDC,EAAe,KAAK,OAAO,OAAOJ,GAASA,EAAM,SAAS,IAAM,cAAc,EAAE,MAAM,EAAGG,CAAgB,EAC/G,KAAK,cAAcC,EAAa,MAAM,EACtCA,EAAa,QAAQJ,GAASA,EAAM,KAAK,CAAC,EAC1C,KAAK,iBAAiB,CACxB,CACA,eAAgB,CACd,GAAI,KAAK,IAAI,eAAe,YAAY,EAEtC,OADa,KAAK,SACN,eAAe,EAE7B,IAAMK,EAAS,CAAC,EAChB,YAAK,OAAO,QAAQL,GAAS,CAC3B,GAAM,CACJ,GAAAd,EACA,MAAAoB,CACF,EAAIN,EAAM,kBAAkB,EAC5BK,EAAOnB,CAAE,EAAIoB,CACf,CAAC,EACMD,CACT,CACA,kBAAmB,CACb,KAAK,IAAI,IAAI,OAAO,GACtBH,GAAK,iEAAiE,KAAK,qBAAqB,cAAc,KAAK,UAAU,KAAK,cAAc,CAAC,CAAC,EAAE,CAExJ,CACA,WAAY,CACV,OAAO,KAAK,sBAAwB,CACtC,CACA,cAAcK,EAAO,CACnB,KAAK,uBAAyBA,CAChC,CACA,0BAA2B,CACzB,OAAO,KAAK,wBAA0B,OAAS,KAAK,sBAAwB,KAAK,sBAAwB,MAC3G,CACF,EAGIC,GAAqB,CACvB,QAASC,EACT,WAAY,oCACZ,MAAO,CAACd,EAAkB,CAC5B,EAGIe,GAA2B,KAAM,CACnC,aAAc,CACZ,KAAK,KAAO,KAKZ,KAAK,IAAM,KACX,KAAK,YAAc,CAAC,CACtB,CACA,KAAKC,EAAU,CACb,KAAK,SAAWA,CAClB,CACA,OAAQ,CACN,KAAK,KAAO,KACZ,KAAK,IAAM,KACX,KAAK,YAAY,OAAS,CAC5B,CACA,QAAQC,EAAM,CACZ,KAAK,KAAOA,EACZ,KAAK,IAAM,KACX,KAAK,YAAY,OAAS,CAC5B,CACA,YAAYC,EAAK,CACf,KAAK,IAAMA,EACX,KAAK,YAAY,OAAS,CAC5B,CACA,UAAW,CACT,GAAI,KAAK,YAAY,SAAW,EAAG,CACjC,IAAMC,EAAO,KAAK,QAAQ,EACpBD,EAAM,KAAK,OAAO,EACxB,GAAIC,GAAQ,MAAQD,GAAO,KACzB,OAAO,KAAK,YAEd,KAAK,YAAc,KAAK,SAAS,4BAA4BC,EAAMD,CAAG,CACxE,CACA,OAAO,KAAK,WACd,CACA,UAAUD,EAAM,CACd,OAAI,KAAK,OAAS,KACT,GAEF,KAAK,SAAS,EAAE,KAAKG,GAAeA,EAAY,KAAOH,EAAK,EAAE,CACvE,CACA,SAAU,CACR,OAAI,KAAK,MAAQ,KAAK,MAAM,MAAQ,OAClC,KAAK,KAAO,KAAK,SAAS,WAAW,KAAK,KAAK,EAAE,GAAK,MAEjD,KAAK,IACd,CACA,QAAS,CACP,OAAI,KAAK,KAAO,KAAK,KAAK,MAAQ,OAChC,KAAK,IAAM,KAAK,SAAS,WAAW,KAAK,IAAI,EAAE,GAAK,MAE/C,KAAK,GACd,CAQA,SAASA,EAAM,CACb,IAAMI,EAAQ,KAAK,SAAS,EAC5B,GAAIA,EAAM,SAAW,EACnB,MAAO,CACL,KAAM,CAAC,EACP,QAAS,CAAC,CACZ,EAEF,IAAMC,EAAeD,EAAM,CAAC,EAAE,KAAO,KAAK,KAAK,GACzCE,EAAMF,EAAM,UAAUG,GAAWA,EAAQ,KAAOP,EAAK,EAAE,EAC7D,GAAIM,EAAM,GAAI,CACZ,IAAME,EAAQJ,EAAM,MAAM,EAAGE,CAAG,EAC1BG,EAAQL,EAAM,MAAME,EAAM,CAAC,EACjC,YAAK,YAAYN,CAAI,EACdK,EAAe,CACpB,KAAMG,EACN,QAASC,CACX,EAAI,CACF,KAAMA,EACN,QAASD,CACX,CACF,KACE,OAAO,CACL,KAAMJ,EACN,QAAS,CAAC,CACZ,CAEJ,CAQA,OAAOJ,EAAMU,EAAuB,GAAO,CACzC,IAAMR,EAAO,KAAK,QAAQ,EAC1B,GAAIA,GAAQ,KAAM,CAChB,IAAMS,EAAO,KAAK,SAAS,EAAE,MAAM,EACnC,OAAID,GACFV,EAAK,iBAAiBY,GAAS,CAACA,EAAM,OAASD,EAAK,KAAKC,CAAK,CAAC,EAEjED,EAAK,KAAKX,CAAI,EACd,KAAK,QAAQA,CAAI,EACV,CACL,KAAAW,EACA,QAAS,CAAC,CACZ,CACF,CAEA,GADiB,KAAK,SAAS,4BAA4BT,EAAMF,CAAI,EACxD,KAAKa,GAAgBA,EAAa,KAAO,KAAK,KAAK,EAAE,EAChE,YAAK,YAAYb,CAAI,EACd,CACL,KAAM,KAAK,SAAS,EACpB,QAAS,CAAC,CACZ,EACK,CACL,IAAMc,EAAU,KAAK,SAAS,EAAE,MAAM,EACtC,YAAK,YAAYd,CAAI,EACd,CACL,KAAM,KAAK,SAAS,EACpB,QAAAc,CACF,CACF,CACF,CACF,EAGIC,GAAiB,cAAc1C,CAAS,CAC1C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,gBAClB,CACA,UAAUW,EAAO,CACf,KAAK,kBAAoBA,EAAM,iBACjC,CACA,sBAAsBgC,EAAQxC,EAAQyC,EAAmBC,EAAsB,CAC7E,KAAK,kBAAkB,OAAQF,EAAO,eAAgBxC,EAAQyC,EAAmBC,CAAoB,EACrG,KAAK,yBAAyBF,EAAQxC,EAAQyC,CAAiB,CACjE,CACA,kBAAkBE,EAAoBC,EAAY5C,EAAQyC,EAAmBC,EAAsB,CACjG,GAAIE,GAAc,MAAQD,GAAsB,KAC9C,OAEF,IAAME,EAAiB,CAAC,EAClBC,EAAkB,CAAC,EACnBC,EAAqB,CAACC,EAAWC,IAAa,CAClDD,EAAU,MAAM,GAAG,EAAE,QAAQE,GAAe,CACtCA,EAAY,KAAK,GAAK,IAC1BD,EAASC,CAAW,CACtB,CAAC,CACH,EACA,GAAIN,EAAY,CACd,IAAMO,EAAa,OAAO,KAAKP,CAAU,EACzC,QAASQ,EAAI,EAAGA,EAAID,EAAW,OAAQC,IAAK,CAC1C,IAAMJ,EAAYG,EAAWC,CAAC,EACxBC,EAAOT,EAAWI,CAAS,EAC7BM,EACA,OAAOD,GAAS,SAClBC,EAAe,KAAK,kBAAkB,SAASD,EAAMrD,CAAM,EAClD,OAAOqD,GAAS,aACzBC,EAAeD,EAAKrD,CAAM,GAE5B+C,EAAmBC,EAAWE,GAAe,CAC3CI,EAAeT,EAAeK,CAAW,EAAI,GAAOJ,EAAgBI,CAAW,EAAI,EACrF,CAAC,CACH,CACF,CACIP,GAAsBD,GACxB,OAAO,KAAKC,CAAkB,EAAE,QAAQK,GAAaD,EAAmBC,EAAWE,GAAe,CAC3FL,EAAeK,CAAW,IAC7BJ,EAAgBI,CAAW,EAAI,GAEnC,CAAC,CAAC,EAEAR,GACF,OAAO,KAAKI,CAAe,EAAE,QAAQJ,CAAoB,EAE3D,OAAO,KAAKG,CAAc,EAAE,QAAQJ,CAAiB,CACvD,CACA,qBAAqBD,EAAQxC,EAAQ,CACnC,GAAM,CACJ,UAAAuD,CACF,EAAIf,EACJ,GAAI,CAACe,EACH,MAAO,CAAC,EAEV,IAAIC,EACJ,OAAI,OAAOD,GAAc,WAEvBC,EADsBD,EACSvD,CAAM,EAErCwD,EAAiBD,EAEf,OAAOC,GAAmB,WAC5BA,EAAiB,CAACA,CAAc,GAE3BA,GAAkB,CAAC,CAC5B,CACA,yBAAyBhB,EAAQxC,EAAQyC,EAAmB,CACnC,KAAK,qBAAqBD,EAAQxC,CAAM,EAChD,QAAQyD,GAAgB,CACrChB,EAAkBgB,CAAY,CAChC,CAAC,CACH,CACF,EAyBA,IAAIC,GAAe,cAAcC,CAAS,CACxC,YAAYC,EAAQ,CAClB,MAAM,EACN,KAAK,kBAAoB,GACzB,KAAK,gBAAkB,GAEvB,KAAK,WAAa,GAClB,GAAM,CACJ,KAAAC,EACA,UAAAC,EACA,aAAAC,EACA,gBAAAC,EACA,mCAAAC,EACA,qBAAAC,EACA,kBAAAC,EACA,UAAAC,EACA,WAAAC,EACA,2BAAAC,EACA,aAAAC,EACA,cAAAC,EACA,kBAAAC,CACF,EAAIb,EACJ,KAAK,KAAOC,EACZ,KAAK,UAAYC,EACjB,KAAK,aAAeC,EACpB,KAAK,0BAA4BI,EACjC,KAAK,kBAAoBM,EACzB,KAAK,gBAAkB,CAAC,CAACT,EACzB,KAAK,mCAAqC,CAAC,CAACC,EAC5C,KAAK,qBAAuB,CAAC,CAACC,EAC9B,KAAK,gBAAkBE,EACvB,KAAK,iBAAmBC,EACxB,KAAK,mCAAqCC,EAC1C,KAAK,qBAAuBC,EAC5B,KAAK,sBAAwBC,CAC/B,CACA,UAAUE,EAAO,CACf,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,KAAK,kBAAkB,IAAIC,GAAoB,KAAK,kBAAmB,CACrE,2BAA4B,IAAM,KAAK,2BAA2B,EAClE,aAAc,GAAK,KAAK,aAAa,CAAC,EACtC,cAAe,GAAK,KAAK,cAAc,CAAC,EACxC,UAAW,GAAK,KAAK,UAAU,CAAC,EAChC,WAAY,GAAK,KAAK,WAAW,CAAC,CACpC,CAAC,CAAC,EACF,KAAK,kBAAkB,EACvB,CAAC,KAAK,UAAW,KAAK,YAAY,EAAE,QAAQC,GAAS,KAAK,2BAA2BA,EAAO,CAC1F,MAAO,KAAK,QAAQ,KAAK,IAAI,CAC/B,CAAC,CAAC,CACJ,CACA,cAAc,EAAG,CACX,KAAK,uBACP,KAAK,sBAAsB,CAAC,CAEhC,CACA,oBAAqB,CACnB,MAAO,CAAC,CAAC,KAAK,WAAa,KAAK,UAAU,aAAa,UAAU,CACnE,CACA,4BAA6B,CAC3B,OAAI,KAAK,mCACA,KAAK,mCAAmC,EAE1C,EACT,CACA,mBAAoB,CAClB,GAAI,KAAK,gBACP,OAEF,IAAMC,EAAW,KAAK,IAAI,IAAI,UAAU,EACxC,KAAK,KAAK,YAAYA,EAAS,SAAS,CAAC,CAC3C,CACA,qBAAsB,CACpB,KAAK,KAAK,YAAY,CACxB,CACA,QAAQ,EAAG,CACT,GAAI,KAAK,sBAAwB,CAAC,KAAK,kBAAkB,SAAS,EAAE,aAAa,GAC3E,CAAC,KAAK,WAAY,CACpB,KAAK,+BAA+B,EAAE,SAAW,KAAK,YAAY,EAClE,MACF,CAEF,GAAI,KAAK,kBAAmB,CAC1B,KAAK,kBAAoB,GACzB,MACF,CACA,GAAI,KAAK,oCACS,KAAK,aAAa,sBAAsB,KAAK,kBAAmB,eAAe,EAAE,SAAW,EAC/F,CACX,KAAK,+BAA+B,EAAE,SAAW,KAAK,YAAY,EAClE,MACF,CAEF,GAAI,KAAK,sBAAwB,KAAK,kBAAkB,SAAS,EAAE,aAAa,EAC9E,OAEF,IAAMC,EAAa,EAAE,SAAW,KAAK,aACjC,KAAK,0BACP,KAAK,0BAA0BA,CAAU,EAEzC,KAAK,kBAAkBA,CAAU,CAErC,CACA,+BAA+BC,EAAI,CACjC,IAAMC,EAAY,KAAK,IAAI,YAAY,EACjCC,EAAe,KAAK,aAAa,sBAAsBD,EAAU,KAAM,KAAM,EAAI,EACjFE,EAAQD,EAAa,QAAQF,EAAK,KAAK,UAAY,KAAK,YAAY,EAC1E,GAAIG,IAAU,GACZ,OAEF,IAAIC,EACAC,EACAL,GACFI,EAAQ,EACRC,EAAMF,IAENC,EAAQD,EAAQ,EAChBE,EAAMH,EAAa,QAErB,IAAMI,EAAiBJ,EAAa,MAAME,EAAOC,CAAG,EAC9CE,EAAiB,KAAK,IAAI,IAAI,UAAU,EAC9CD,EAAe,KAAK,CAAC,EAAGE,IAAM,CAC5B,IAAMC,EAAS,SAAS,EAAE,aAAa,UAAU,GAAK,GAAG,EACnDC,EAAS,SAASF,EAAE,aAAa,UAAU,GAAK,GAAG,EACzD,OAAIE,IAAWH,EACN,EAELE,IAAWF,EACN,GAELE,IAAW,EACN,EAELC,IAAW,EACN,GAEFD,EAASC,CAClB,CAAC,EACDJ,EAAeN,EAAKM,EAAe,OAAS,EAAI,CAAC,EAAE,MAAM,CAC3D,CACA,UAAU,EAAG,CACP,KAAK,iBAAmB,KAAK,kBAG7B,KAAK,iBACP,KAAK,gBAAgB,CAAC,EAEnB,KAAK,sBACR,KAAK,oBAAoB,EAE7B,CACA,WAAW,EAAG,CACR,KAAK,kBAGL,KAAK,kBACP,KAAK,iBAAiB,CAAC,EAEpB,KAAK,kBAAkB,SAAS,EAAE,aAAa,GAClD,KAAK,kBAAkB,EAE3B,CACA,aAAa,EAAG,CACd,GAAI,KAAK,qBAAsB,CAC7B,KAAK,qBAAqB,CAAC,EAC3B,MACF,CAIA,GAHI,KAAK,iBAGL,EAAE,iBACJ,OAEF,IAAMK,EAAqB,KAAK,mBAAmB,EAC/CA,GACF,KAAK,oBAAoB,EAE3B,IAAMC,EAAW,KAAK,wBAAwB,EAAE,QAAQ,EACpDD,GACF,WAAW,IAAM,KAAK,kBAAkB,EAAG,CAAC,EAEzCC,IAGLA,EAAS,MAAM,EACf,EAAE,eAAe,EACnB,CACA,kBAAkBb,EAAa,GAAO,CACpC,IAAMc,EAAY,KAAK,aAAa,sBAAsB,KAAK,iBAAiB,EAC5E,KAAK,mBAAmB,IAC1BA,EAAU,OAAO,EAAG,CAAC,EACrBA,EAAU,OAAOA,EAAU,OAAS,EAAG,CAAC,GAErCA,EAAU,QAGfA,EAAUd,EAAac,EAAU,OAAS,EAAI,CAAC,EAAE,MAAM,CACrD,cAAe,EACjB,CAAC,CACH,CACA,wBAAwBC,EAAW,CACjC,OAAO,KAAK,aAAa,yBAAyB,KAAK,kBAAmB,GAAOA,CAAS,CAC5F,CACA,yBAAyBd,EAAK,GAAO,CACnC,GAAI,KAAK,gBACP,OAEF,IAAMe,EAAkBf,EAAK,KAAK,UAAY,KAAK,aACnD,KAAK,kBAAkB,EACvB,KAAK,kBAAoB,GACzB,KAAK,gBAAkB,GACvBe,EAAgB,MAAM,EACtB,OAAO,WAAW,IAAM,CACtB,KAAK,gBAAkB,GACvB,KAAK,kBAAkB,CACzB,CAAC,CACH,CACA,WAAWC,EAASC,EAAQ,CAC1B,OAAOD,IAAY,KAAK,WAAa,CAACC,GAAUD,IAAY,KAAK,eAAiBC,GAAU,GAC9F,CACA,cAAcC,EAAY,CACxB,KAAK,WAAaA,CACpB,CACF,EAGIC,GAAkB,cAAcvC,CAAS,CAC3C,YAAYE,EAAM,CAChB,MAAM,EACN,KAAK,KAAOA,CACd,CACA,mBAAmBD,EAAQ,CACzB,KAAK,UAAY,KAAK,eAAe,KAAK,EAC1C,KAAK,aAAe,KAAK,eAAe,QAAQ,EAChD,KAAK,kBAAoB,KAAK,KAAK,oBAAoB,EACvD,GAAM,CACJ,UAAAE,EACA,aAAAC,EACA,kBAAAU,CACF,EAAI,KACE0B,EAAY,CAACrC,EAAWC,CAAY,EACpCqC,EAAY,CAChB,YAAavB,GAAY,CACvBsB,EAAU,QAAQE,GAAYxB,GAAY,KAAOwB,EAAS,aAAa,WAAYxB,CAAQ,EAAIwB,EAAS,gBAAgB,UAAU,CAAC,CACrI,CACF,EACA,KAAK,aAAavC,EAAWC,CAAY,EACzC,GAAM,CACJ,gBAAAC,EAAkB,GAClB,UAAAI,EACA,WAAAC,EACA,kBAAAF,EACA,cAAAK,EACA,aAAAD,EACA,2BAAAD,EACA,mCAAAL,EACA,qBAAAC,CACF,EAAIN,EACJ,KAAK,aAAe,KAAK,kBAAkB,IAAIF,GAAa,CAC1D,KAAM0C,EACN,gBAAApC,EACA,UAAAF,EACA,aAAAC,EACA,kBAAAU,EACA,UAAAL,EACA,WAAAC,EACA,kBAAAF,EACA,cAAAK,EACA,aAAAD,EACA,2BAAAD,EACA,mCAAAL,EACA,qBAAAC,CACF,CAAC,CAAC,CACJ,CACA,iBAAkB,CAChB,OAAO,KAAK,YACd,CACA,eAAeoC,EAAM,CACnB,IAAMD,EAAW,KAAK,IAAI,YAAY,EAAE,cAAc,KAAK,EACrDE,EAAMD,IAAS,MAAQ,mBAAyC,sBACtE,OAAAD,EAAS,UAAU,IAAI,eAAgCE,CAAG,EAC1DC,EAAaH,EAAU,cAAc,EAC9BA,CACT,CACA,aAAaI,EAAaC,EAAgB,CACxC,KAAK,kBAAkB,sBAAsB,aAAcD,CAAW,EACtE,KAAK,kBAAkB,sBAAsB,YAAaC,CAAc,CAC1E,CACA,kCAAmC,CACjC,IAAMP,EAAY,CAAC,KAAK,UAAW,KAAK,YAAY,EACpDQ,EAAc,KAAK,KAAK,oBAAoB,CAAC,EAC7C,KAAK,aAAa,GAAGR,CAAS,CAChC,CACA,yBAAyBpB,EAAK,GAAO,CACnC,KAAK,aAAa,yBAAyBA,CAAE,CAC/C,CACA,YAAY6B,EAAaC,EAAUC,EAAW,CACvCC,GAAiBF,CAAQ,IAC5BA,EAAWA,EAAS,OAAO,GAE7B,GAAM,CACJ,aAAcH,CAChB,EAAI,KACAA,EACFA,EAAe,sBAAsB,cAAeG,CAAQ,EAE5DD,EAAYC,EAAUC,CAAS,CAEnC,CACF,EAGIE,GAAe,cAAcC,CAAU,CACzC,mBAAmBrD,EAAQ,CACzB,KAAK,gBAAkB,KAAK,kBAAkB,IAAIsC,GAAgB,IAAI,CAAC,EACvE,KAAK,gBAAgB,mBAAmBtC,CAAM,CAChD,CACA,yBAAyBmB,EAAK,GAAO,CACnC,KAAK,gBAAgB,yBAAyBA,CAAE,CAClD,CACA,YAAY8B,EAAUC,EAAW,CAC/B,KAAK,gBAAgB,YAAY,MAAM,YAAY,KAAK,IAAI,EAAGD,EAAUC,CAAS,CACpF,CACF,EAGII,GAAgB,EAChBC,GAAgC,IAChCC,GAAe,cAAczD,CAAS,CACxC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,eAChB,KAAK,UAAY,CAAC,CACpB,CACA,UAAUe,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,YAAcA,EAAM,WAC3B,CACA,eAAgB,CACd,KAAK,aAAa,UAAU2C,GAAK,CAC/B,KAAK,SAAWA,EAAE,QACpB,CAAC,EACD,KAAK,yBAAyB,CAC5B,kBAAmB,KAAK,kBAAkB,KAAK,IAAI,CACrD,CAAC,CACH,CACA,gBAAiB,CACf,IAAMC,EAAe,KAAK,IAAI,IAAI,aAAa,EAC/C,OAAIA,GAGG,KAAK,SAAS,OAAO,CAC9B,CACA,qBAAqB1D,EAAQ,CAC3B,GAAM,CACJ,YAAA2D,EACA,OAAAC,CACF,EAAI5D,EACE6D,EAAW,KAAK,cAAcD,CAAM,EAC1C,GAAIC,IAAa,GAAI,CACnB,IAAMC,EAAQ,KAAK,UAAUD,CAAQ,EACrCC,EAAM,iBAAmBH,CAC3B,CACA,IAAMI,EAAaJ,EAAY,sBAAsB,EAC/CK,EAAa,KAAK,cAAc,EAChCC,EAAI,KAAK,mBAAmBL,EAAQG,EAAW,IAAMC,EAAW,IAAK,CAAgB,EACrFE,EAAWN,EAAO,YAAc,EAAIA,EAAO,YAAc,IAC/DA,EAAO,MAAM,SAAW,GAAGM,CAAQ,KAEnC,IAAMC,EADgBH,EAAW,MAAQA,EAAW,KACvBE,EACzBE,EACA,KAAK,IAAI,IAAI,WAAW,GAC1BA,EAAIC,EAAc,EACdD,EAAI,IACNA,EAAIE,EAAe,EACnB,KAAK,iBAAiBV,EAAQ,MAAM,GAElCQ,EAAID,IACNC,EAAI,EACJ,KAAK,iBAAiBR,EAAQ,OAAO,KAGvCQ,EAAIE,EAAe,EACfF,EAAID,IACNC,EAAIC,EAAc,EAClB,KAAK,iBAAiBT,EAAQ,OAAO,GAEnCQ,EAAI,IACNA,EAAI,EACJ,KAAK,iBAAiBR,EAAQ,MAAM,IAGxCA,EAAO,MAAM,KAAO,GAAGQ,CAAC,KACxBR,EAAO,MAAM,IAAM,GAAGK,CAAC,KACvB,SAASK,GAAiB,CACxB,OAAOP,EAAW,MAAQC,EAAW,KAAO,CAC9C,CACA,SAASK,GAAgB,CACvB,OAAON,EAAW,KAAOC,EAAW,KAAOE,CAC7C,CACF,CACA,6BAA6BlE,EAAQ,CACnC,GAAM,CACJ,OAAA4D,EACA,OAAAW,EACA,OAAAC,EACA,aAAAC,CACF,EAAIzE,EACJ,KAAK,cAAc,CACjB,OAAA4D,EACA,OAAAW,EACA,OAAAC,EACA,iBAAkB,GAClB,aAAAC,EACA,eAAgB,IAAM,KAAK,sBAAsBzE,EAAO,UAAU,EAClE,oBAAqB,IAAM,KAAK,qBAAqBA,EAAO,KAAMA,EAAO,OAAQ,KAAMA,EAAO,WAAYA,EAAO,OAAQA,EAAO,OAAO,CACzI,CAAC,CACH,CACA,sBAAsB,EAAG,CACvB,IAAMgE,EAAa,KAAK,cAAc,EACtC,MAAO,CACL,EAAG,EAAE,QAAUA,EAAW,KAC1B,EAAG,EAAE,QAAUA,EAAW,GAC5B,CACF,CACA,yBAAyBhE,EAAQ,CAC/B,GAAM,CACJ,OAAA4D,EACA,OAAAW,EACA,OAAAC,EACA,iBAAAE,EACA,YAAAf,EACA,UAAAgB,EAAY,OACZ,SAAAC,EAAW,OACX,OAAAC,EACA,QAAAC,EACA,KAAAC,CACF,EAAI/E,EACE+D,EAAaJ,EAAY,sBAAsB,EAC/CK,EAAa,KAAK,cAAc,EAChCH,EAAW,KAAK,cAAcD,CAAM,EAC1C,GAAIC,IAAa,GAAI,CACnB,IAAMC,EAAQ,KAAK,UAAUD,CAAQ,EACrCC,EAAM,iBAAmBH,CAC3B,CACA,IAAMqB,EAAiB,IAAM,CAC3B,IAAIZ,EAAIL,EAAW,KAAOC,EAAW,KACjCW,IAAc,UAChBP,GAAKR,EAAO,YAAcG,EAAW,OAEvC,IAAIE,EACJ,OAAIW,IAAa,QACfX,EAAIF,EAAW,IAAMC,EAAW,IAChC,KAAK,iBAAiBJ,EAAQ,MAAM,IAEpC,KAAK,iBAAiBA,EAAQ,OAAO,EAClB,KAAK,yBAAyBA,EAAQG,EAAYC,EAAYhE,EAAO,QAAU,CAAC,IAChF,QACjBiE,EAAIF,EAAW,IAAMC,EAAW,IAAMD,EAAW,OAEjDE,EAAIF,EAAW,IAAMH,EAAO,cAAgBY,GAAU,GAAK,EAAIR,EAAW,KAGvE,CACL,EAAAI,EACA,EAAAH,CACF,CACF,EACA,KAAK,cAAc,CACjB,OAAAL,EACA,OAAAW,EACA,OAAAC,EACA,iBAAAE,EACA,eAAAM,EACA,oBAAqB,IAAM,KAAK,qBAAqBD,EAAMnB,EAAQD,EAAa,KAAMkB,EAAQC,CAAO,CACvG,CAAC,CACH,CACA,yBAAyBlB,EAAQqB,EAAgBjB,EAAYQ,EAAQ,CACnE,IAAMU,EAAsBlB,EAAW,OAASiB,EAAe,OACzDE,EAAsBF,EAAe,IAAMjB,EAAW,IACtDoB,EAAgBxB,EAAO,aAAeY,EAC5C,OAAIU,EAAsBE,EACjB,QAELD,EAAsBC,GAAiBD,EAAsBD,EACxD,QAEF,OACT,CACA,iBAAiBtB,EAAQyB,EAAY,CACnC,IAAMxB,EAAW,KAAK,cAAcD,CAAM,EAC1C,GAAIC,IAAa,GACf,OAEF,IAAMC,EAAQ,KAAK,UAAUD,CAAQ,EAC/B,CACJ,iBAAAyB,CACF,EAAIxB,EACA,CAACwB,IAGa,CAAC,QAAS,OAAQ,OAAQ,QAAS,OAAO,EAClD,QAAQV,GAAY,CAC5BU,EAAiB,UAAU,OAAO,2BAA2BV,CAAQ,EAAE,EACvEhB,EAAO,UAAU,OAAO,uBAAuBgB,CAAQ,EAAE,CAC3D,CAAC,EACG,CAACS,KAGLC,EAAiB,UAAU,IAAI,2BAA2BD,CAAU,EAAE,EACtEzB,EAAO,UAAU,IAAI,uBAAuByB,CAAU,EAAE,EAC1D,CACA,qBAAqBN,EAAMnB,EAAQD,EAAa4B,EAAYV,EAAQC,EAAS,CAC3E,IAAMU,EAAW,KAAK,IAAI,YAAY,kBAAkB,EACpDA,GASFA,EARe,CACb,OAAAX,EACA,QAAAC,EACA,OAAAlB,EACA,KAAAmB,EACA,YAAApB,EACA,WAAA4B,CACF,CACe,CAEnB,CACA,cAAcvF,EAAQ,CACpB,GAAM,CACJ,OAAA4D,EACA,iBAAAc,EACA,OAAAH,EACA,OAAAC,EACA,aAAAC,EACA,eAAAO,CACF,EAAIhF,EACEyF,EAAW,CACf,MAAO,EACP,OAAQ,CACV,EACMC,EAAsB,CAACC,EAAqB,KAAU,CAC1D,GAAI,CACF,EAAAvB,EACA,EAAAH,CACF,EAAIe,EAAe,EACfW,GAAsB/B,EAAO,cAAgB6B,EAAS,OAAS7B,EAAO,eAAiB6B,EAAS,SAGpGA,EAAS,MAAQ7B,EAAO,YACxB6B,EAAS,OAAS7B,EAAO,aACrBW,IACFH,GAAKG,GAEHC,IACFP,GAAKO,GAEHE,IACFN,EAAI,KAAK,mBAAmBR,EAAQQ,EAAG,CAAkB,EACzDH,EAAI,KAAK,mBAAmBL,EAAQK,EAAG,CAAgB,GAEzDL,EAAO,MAAM,KAAO,GAAGQ,CAAC,KACxBR,EAAO,MAAM,IAAM,GAAGK,CAAC,KACnBjE,EAAO,qBACTA,EAAO,oBAAoB,EAE/B,EAEA,GADA0F,EAAoB,EAChB,CAACjB,EAAc,CACjB,IAAMmB,EAA4B,KAAK,sBAAsB,cAAchC,EAAQ,IAAM8B,EAAoB,EAAI,CAAC,EAClH,WAAW,IAAME,EAA0B,EAAGrC,EAA6B,CAC7E,CACF,CACA,iBAAkB,CAChB,OAAO,KAAK,UAAU,IAAIO,GAASA,EAAM,OAAO,CAClD,CACA,cAAe,CACb,OAAO,KAAK,SACd,CACA,eAAgB,CACd,IAAM1C,EAAY,KAAK,IAAI,YAAY,EACnCyE,EAAc,KAAK,eAAe,EACtC,OAAIA,IAAgBzE,EAAU,KAC5ByE,EAAczE,EAAU,gBACf,iBAAiByE,CAAW,EAAE,WAAa,WACpDA,EAAcA,EAAY,cAErBC,GAA0BD,CAAW,CAC9C,CACA,mBAAmBjC,EAAQgB,EAAUmB,EAAW,CAC9C,IAAMC,EAAaD,IAAc,EAC3BE,EAAeD,EAAa,eAAiB,cAC7CE,EAAiBF,EAAa,MAAQ,OACtCG,EAAiBH,EAAa,SAAW,QACzCI,EAAyBJ,EAAa,YAAc,aACpD5E,EAAY,KAAK,IAAI,YAAY,EACjCiF,EAAajF,EAAU,gBACvByE,EAAc,KAAK,eAAe,EAClCS,EAAY1C,EAAO,sBAAsB,EACzCI,EAAa6B,EAAY,sBAAsB,EAC/CU,EAAenF,EAAU,gBAAgB,sBAAsB,EAC/DoF,EAASX,IAAgBzE,EAAU,KACnCqF,EAAa,KAAK,KAAKH,EAAUH,CAAc,CAAC,EAElDO,EAAeF,GADHR,EAAaW,GAAqBC,IACdP,CAAU,EAAIA,EAAWD,CAAsB,EAAIP,EAAYI,CAAY,EAC3GO,IACFE,GAAgB,KAAK,IAAIH,EAAaL,CAAc,EAAIlC,EAAWkC,CAAc,CAAC,GAEpF,IAAMW,EAAMH,EAAeD,EAC3B,OAAO,KAAK,IAAI,KAAK,IAAI7B,EAAU,CAAC,EAAG,KAAK,IAAIiC,CAAG,CAAC,CACtD,CACA,SAAS7G,EAAQ,CACf,IAAMoB,EAAY,KAAK,IAAI,YAAY,EACjC,CACJ,OAAA0F,EACA,UAAAC,EACA,YAAAC,EACA,iBAAAC,EACA,gBAAAC,CACF,EAAIlH,EACJ,GAAI,CAACoB,EACH,OAAA+F,EAAU,gDAAgD,EACnD,CACL,SAAU,IAAM,CAAC,CACnB,EAEF,IAAMC,EAAM,KAAK,cAAcN,CAAM,EACrC,GAAIM,IAAQ,GAEV,MAAO,CACL,SAFY,KAAK,UAAUA,CAAG,EAEd,QAClB,EAEF,KAAK,wBAAwBN,CAAM,EACnC,IAAMO,EAAY,KAAK,mBAAmBP,EAAQC,EAAW,CAAC,CAACC,CAAW,EACpEM,EAAkB,KAAK,yBAAyBC,EAAAC,EAAA,GACjDxH,GADiD,CAEpD,UAAAqH,CACF,EAAC,EACD,OAAIJ,GACFA,EAAiB,EAEnB,KAAK,oBAAoBH,EAAQO,EAAWC,EAAiBJ,CAAe,EACrE,CACL,SAAUI,CACZ,CACF,CACA,wBAAwBnF,EAAS,CAE/B,IAAMsF,EADe,KAAK,eAAe,EACH,sBAAsB,EACvDC,EAAQvF,EAAQ,MAAM,GAAG,IAC5BA,EAAQ,MAAM,IAAM,GAAGsF,EAAiB,IAAM,EAAE,MAE7CC,EAAQvF,EAAQ,MAAM,IAAI,IAC7BA,EAAQ,MAAM,KAAO,GAAGsF,EAAiB,KAAO,EAAE,KAEtD,CACA,mBAAmBtF,EAAS4E,EAAWC,EAAa,CAClD,IAAMtD,EAAe,KAAK,eAAe,EACnCiE,EAAW,SAAS,cAAc,KAAK,EAC7C,YAAK,YAAY,kBAAkBA,CAAQ,EAC3CA,EAAS,UAAU,IAAI,UAAU,EACjCxF,EAAQ,UAAU,IAAI,KAAK,IAAI,IAAI,WAAW,EAAI,SAAW,SAAU,gBAAgB,EAClFA,EAAQ,aAAa,MAAM,GAC9BS,EAAaT,EAAS,QAAQ,EAEhCyF,GAAczF,EAAS4E,CAAS,EAChCY,EAAS,YAAYxF,CAAO,EAC5BuB,EAAa,YAAYiE,CAAQ,EAC7BX,EACF,KAAK,eAAe7E,EAAS,EAAI,EAEjC,KAAK,kBAAkBA,CAAO,EAEzBwF,CACT,CACA,kBAAkB,EAAG,CACnB,GAAI,EAAE,aACJ,QAAW7D,KAAS,KAAK,UACvB,KAAK,YAAY,kBAAkBA,EAAM,OAAO,CAGtD,CACA,yBAAyB9D,EAAQ,CAC/B,IAAMoB,EAAY,KAAK,IAAI,YAAY,EACjCsC,EAAe,KAAK,eAAe,EACnC,CACJ,UAAA2D,EACA,OAAQQ,EACR,eAAAC,EACA,iBAAAC,EACA,WAAAC,EACA,MAAAC,CACF,EAAIjI,EACAkI,EAAc,GACZC,EAA2BC,GAAS,CACxC,GAAI,CAACf,EAAU,SAAS,KAAK,IAAI,oBAAoB,CAAC,EACpD,OAEUe,EAAM,MACNC,EAAQ,QAAU,CAACC,GAA4BF,CAAK,GAC9Dd,EAAgB,CACd,cAAec,CACjB,CAAC,CAEL,EACMG,EAAwBH,GAASd,EAAgB,CACrD,WAAYc,CACd,CAAC,EACKI,EAAwBJ,GAASd,EAAgB,CACrD,WAAYc,CACd,CAAC,EACKd,EAAkB,CAACmB,EAAc,CAAC,IAAM,CAC5C,GAAM,CACJ,WAAAlD,EACA,WAAAmD,EACA,cAAAC,EACA,UAAAC,CACF,EAAIH,EACA,CAACG,IAGL,KAAK,wBAAwB,CAC3B,WAAArD,EACA,WAAAmD,CACF,EAAGb,CAAO,GAGVK,KAGAA,EAAc,GACdxE,EAAa,YAAY2D,CAAS,EAClCjG,EAAU,oBAAoB,UAAW+G,CAAwB,EACjE/G,EAAU,oBAAoB,YAAamH,CAAqB,EAChEnH,EAAU,oBAAoB,aAAcoH,CAAqB,EACjEpH,EAAU,oBAAoB,cAAemH,CAAqB,EAClE,KAAK,aAAa,oBAAoB,cAAeA,CAAqB,EACtET,GACFA,EAAevC,GAAcmD,GAAcC,CAAa,EAE1D,KAAK,yBAAyBd,CAAO,EACvC,EACA,OAAIE,GACFA,EAAiB,CACf,UAAWT,CACb,CAAC,EAEH,OAAO,WAAW,IAAM,CAClBU,GACF5G,EAAU,iBAAiB,UAAW+G,CAAwB,EAE5DF,IACF7G,EAAU,iBAAiB,YAAamH,CAAqB,EAC7D,KAAK,aAAa,iBAAiB,cAAeA,CAAqB,EACvEnH,EAAU,iBAAiB,aAAcoH,CAAqB,EAC9DpH,EAAU,iBAAiB,cAAemH,CAAqB,EAEnE,EAAG,CAAC,EACGjB,CACT,CACA,oBAAoBnF,EAASkF,EAAWC,EAAiBJ,EAAiB,CACxE,KAAK,UAAU,KAAK,CAClB,QAAA/E,EACA,QAASkF,EACT,SAAUC,EACV,WAAYhE,KACZ,WAAY,CAAC,CAAC4D,CAChB,CAAC,EACGA,GACF,KAAK,iCAAiC/E,EAAS+E,CAAe,CAElE,CACA,cAAc2B,EAAI,CAChB,OAAO,KAAK,UAAU,UAAUpF,GAAKA,EAAE,UAAYoF,CAAE,CACvD,CACA,iCAAiChB,EAASiB,EAAiB,CACzD,IAAMC,EAAa,KAAK,cAAclB,CAAO,EAC7C,GAAIkB,IAAe,GACjB,OAEF,IAAMjF,EAAQ,KAAK,UAAUiF,CAAU,EAMvC,GALIjF,EAAM,sBACRA,EAAM,qBAAqB,KAAKkF,GAAeA,GAAeA,EAAY,CAAC,EAE7ElF,EAAM,qBAAuB,OAC7BA,EAAM,WAAa,GACf,CAACgF,EACH,OAEF,IAAMG,EAAyB,KAAK,8BAA8B,CAChE,QAASH,EACT,OAAQjB,EACR,UAAW/D,EAAM,QACnB,CAAC,EACD,OAAAA,EAAM,qBAAuBmF,EAC7BnF,EAAM,WAAa,GACZmF,CACT,CACA,yBAAyB9G,EAAS,CAChC,KAAK,iBAAiBA,EAAS,IAAI,EACnC,KAAK,iCAAiCA,EAAS,IAAI,EACnD,KAAK,UAAY,KAAK,UAAU,OAAOsB,GAAKA,EAAE,UAAYtB,CAAO,CACnE,CACA,8BAA8BnC,EAAQ,CACpC,IAAMkJ,EAAU,KAAK,eAAe,EAC9BlF,EAAakF,EAAQ,sBAAsB,EAC3C,CACJ,QAAA/G,EACA,OAAAyB,CACF,EAAI5D,EACE+D,EAAa5B,EAAQ,sBAAsB,EAC3CgH,EAAiBnF,EAAW,IAAMD,EAAW,IAC7CqF,EAAkBpF,EAAW,KAAOD,EAAW,KACjDsF,EAAcF,EACdG,EAAeF,EACbG,EAAQ3F,EAAO,MAAM,IACrB4F,EAAM,SAASD,EAAM,UAAU,EAAGA,EAAM,OAAS,CAAC,EAAG,EAAE,EACvDE,EAAS7F,EAAO,MAAM,KACtB8F,EAAO,SAASD,EAAO,UAAU,EAAGA,EAAO,OAAS,CAAC,EAAG,EAAE,EAC1DE,EAAc,KAAK,sBAAsB,EAC/C,OAAO,IAAIC,GAAUC,GAAW,CAC9BF,EAAY,aAAa,IAAM,CAC7BA,EAAY,YAAY,IAAM,CAC5B,IAAMG,EAAQZ,EAAQ,sBAAsB,EACtCa,EAAQ5H,EAAQ,sBAAsB,EAE5C,GADwB4H,EAAM,KAAO,GAAKA,EAAM,MAAQ,GAAKA,EAAM,QAAU,GAAKA,EAAM,OAAS,EAC5E,CACnB/J,EAAO,UAAU,EACjB,MACF,CACA,IAAMgK,EAAiBF,EAAM,IAAMC,EAAM,IACzC,GAAIC,GAAkBX,EAAa,CACjC,IAAMY,EAAS,KAAK,mBAAmBrG,EAAQ4F,EAAML,EAAiBa,EAAgB,CAAgB,EACtGpG,EAAO,MAAM,IAAM,GAAGqG,CAAM,IAC9B,CACAZ,EAAcW,EACd,IAAME,EAAkBJ,EAAM,KAAOC,EAAM,KAC3C,GAAIG,GAAmBZ,EAAc,CACnC,IAAMa,EAAU,KAAK,mBAAmBvG,EAAQ8F,EAAON,EAAkBc,EAAiB,CAAkB,EAC5GtG,EAAO,MAAM,KAAO,GAAGuG,CAAO,IAChC,CACAb,EAAeY,CACjB,EAAG,GAAG,EAAE,KAAKE,GAAc,CAMzBP,EALe,IAAM,CACfO,GAAc,MAChB,OAAO,cAAcA,CAAU,CAEnC,CACc,CAChB,CAAC,CACH,EAAG,kBAAkB,CACvB,CAAC,CACH,CACA,kBAAmB,CACjB,OAAO,KAAK,UAAU,KAAKtG,GAASA,EAAM,UAAU,CACtD,CACA,wBAAwB9D,EAAQqK,EAAQ,CACtC,GAAM,CACJ,WAAA9E,EACA,WAAAmD,CACF,EAAI1I,EACEoI,EAAQ7C,GAA0BmD,EACxC,GAAI,CAACN,EACH,MAAO,GAET,IAAMkC,EAAmB,KAAK,cAAcD,CAAM,EAClD,GAAIC,IAAqB,GACvB,MAAO,GAET,QAASC,EAAID,EAAkBC,EAAI,KAAK,UAAU,OAAQA,IAAK,CAC7D,IAAMzG,EAAQ,KAAK,UAAUyG,CAAC,EAC9B,GAAIC,GAAsB1G,EAAM,QAASsE,CAAK,EAC5C,MAAO,EAEX,CACA,OAAO,KAAK,2BAA2BA,EAAM,MAAM,CACrD,CACA,2BAA2BS,EAAI,CAC7B,IAAMzH,EAAY,KAAK,IAAI,YAAY,EACvC,KAAOyH,GAAMA,IAAOzH,EAAU,MAAM,CAClC,GAAIyH,EAAG,UAAU,SAAS,2BAA2B,GAAKA,EAAG,gBAAkB,KAC7E,MAAO,GAETA,EAAKA,EAAG,aACV,CACA,MAAO,EACT,CACA,WAAWjF,EAAQ,CACjB,KAAO,CAACA,EAAO,UAAU,SAAS,UAAU,GAAKA,EAAO,eACtDA,EAASA,EAAO,cAElB,OAAOA,EAAO,UAAU,SAAS,UAAU,EAAIA,EAAS,IAC1D,CACA,eAAeA,EAAQoD,EAAa,CAClC,IAAMW,EAAW,KAAK,WAAW/D,CAAM,EAClC+D,IAGLA,EAAS,UAAU,OAAO,mBAAoB,CAAC,CAACX,CAAW,EACvDA,GACF,KAAK,kBAAkBW,CAAQ,EAEnC,CAEA,kBAAkB/D,EAAQ,CACxB,IAAM6G,EAAS,KAAK,eAAe,EAC7BC,EAAY,MAAM,UAAU,MAAM,KAAKD,EAAO,iBAAiB,WAAW,CAAC,EAC3EE,EAAWD,EAAU,OACrBE,EAAkB,MAAM,UAAU,MAAM,KAAKH,EAAO,iBAAiB,4BAA4B,CAAC,EAClGI,EAAcD,EAAgB,OAC9BjD,EAAW,KAAK,WAAW/D,CAAM,EACvC,GAAI,CAAC+D,GAAYgD,GAAY,GAAK,CAACF,EAAO,SAAS7G,CAAM,EACvD,MAAO,GAET,IAAMwD,EAAMsD,EAAU,QAAQ/C,CAAQ,EAChCmD,EAAWnD,EAAS,iBAAiB,KAAK,EAC1CoD,EAAoB,CAAC,EAC3BD,EAAS,QAAQjC,GAAM,CACjBA,EAAG,YAAc,GACnBkC,EAAkB,KAAK,CAAClC,EAAIA,EAAG,SAAS,CAAC,CAE7C,CAAC,EACD,IAAImC,EAAS,GAgBb,IAfIH,EACyBlD,EAAS,UAAU,SAAS,kBAAkB,EAEnEP,IAAQuD,EAAW,IACrBM,EAAML,CAAe,EAAE,sBAAsB,WAAYjD,CAAQ,EACjEqD,EAAS,IAEF5D,IAAQuD,EAAWE,EAAc,IAC1CD,EAAgB,CAAC,EAAE,sBAAsB,cAAejD,CAAQ,EAChEqD,EAAS,IAEF5D,IAAQuD,EAAW,IAC5BM,EAAMP,CAAS,EAAE,sBAAsB,WAAY/C,CAAQ,EAC3DqD,EAAS,IAEJD,EAAkB,QAAQ,CAC/B,IAAMG,EAAYH,EAAkB,IAAI,EACxCG,EAAU,CAAC,EAAE,UAAYA,EAAU,CAAC,CACtC,CACA,OAAOF,CACT,CACF,EAGIG,GAAkB,CAAC,aAAc,WAAY,YAAa,aAAa,EACvEC,GAA4B,KAAM,CACpC,YAAYC,EAAgB,aAAc,CACxC,KAAK,cAAgBA,EACrB,KAAK,gBAAkB,UACvB,KAAK,aAAe7F,GAAYA,EAAS,EACzC,KAAK,aAAeA,GAAYA,EAAS,CAC3C,CACA,YAAY8F,EAAQC,EAAS,CAC3B,OAAO,IAAI3B,GAAUC,GAAW,CAC9BA,EAAQ,OAAO,YAAYyB,EAAQC,CAAO,CAAC,CAC7C,CAAC,CACH,CAEA,iBAAiBpJ,EAAS4C,EAAMyG,EAAUC,EAAY,CACpD,IAAMC,EAAYC,GAAUR,GAAiBpG,CAAI,EACjD5C,EAAQ,iBAAiB4C,EAAMyG,EAAU,CACvC,QAAS,CAAC,CAACC,EACX,QAASC,CACX,CAAC,CACH,CACA,IAAI,oBAAqB,CACvB,MAAO,EACT,CACA,mBAAmBE,EAAM,CACvB,OAAO,IACT,CACA,qBAAqB3L,EAAM,CACzB,MAAO,EACT,CACA,WAAW4L,EAAM,CAEf,MAAO,2BADW,KAAK,gBAAkB,QAAU,QAAU,KAAK,aACvB,aAAaA,EAAO,IAAIA,CAAI,GAAK,EAAE,EAChF,CACF,EAGIC,GAAwB,cAAc/L,CAAS,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,uBAClB,CACA,UAAUe,EAAO,CACf,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,SAAWA,EAAM,SACtB,KAAK,YAAcA,EAAM,YACzB,KAAK,eAAiBA,EAAM,eAC5B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,kBAAoBA,EAAM,iBACjC,CAEA,mBAAmBiL,EAAKC,EAAaC,EAAc,GAAO,CACxD,OAAIA,EACK,KAAK,kCAAkCF,EAAKC,CAAW,EAEzD,KAAK,qCAAqCD,EAAKC,CAAW,CACnE,CACA,kCAAkCD,EAAKC,EAAa,CAClD,IAAME,EAAQH,IAAQ1D,EAAQ,GACxB8D,EAAUJ,IAAQ1D,EAAQ,KAC1B+D,EAAUL,IAAQ1D,EAAQ,KAC5BxD,EACAwH,EACJ,GAAIH,GAASC,EACXE,EAAWH,EAAQ,KAAK,kBAAkB,YAAY,EAAI,KAAK,kBAAkB,WAAW,EAC5FrH,EAASmH,EAAY,WAChB,CACL,IAAMM,EAAa,KAAK,mBAAmB,WAAW,EAChDC,EAAQ,KAAK,IAAI,IAAI,WAAW,EACtCF,EAAWL,EAAY,SACvBnH,EAASuH,IAAYG,EAAQD,EAAW,CAAC,EAAIrB,EAAMqB,CAAU,CAC/D,CACA,MAAO,CACL,SAAAD,EACA,UAAW,KACX,OAAAxH,CACF,CACF,CACA,qCAAqCkH,EAAKC,EAAa,CACrD,IAAIQ,EAAUR,EACVS,EAAW,GACf,KAAO,CAACA,GAAU,CAChB,OAAQV,EAAK,CACX,KAAK1D,EAAQ,GACXmE,EAAU,KAAK,aAAaA,CAAO,EACnC,MACF,KAAKnE,EAAQ,KACXmE,EAAU,KAAK,aAAaA,CAAO,EACnC,MACF,KAAKnE,EAAQ,MACP,KAAK,IAAI,IAAI,WAAW,EAC1BmE,EAAU,KAAK,cAAcA,CAAO,EAEpCA,EAAU,KAAK,eAAeA,CAAO,EAEvC,MACF,KAAKnE,EAAQ,KACP,KAAK,IAAI,IAAI,WAAW,EAC1BmE,EAAU,KAAK,eAAeA,CAAO,EAErCA,EAAU,KAAK,cAAcA,CAAO,EAEtC,MACF,QACEA,EAAU,KACVrF,EAAU,8BAA+B4E,CAAG,EAC5C,KACJ,CACIS,EACFC,EAAW,KAAK,oBAAoBD,CAAO,EAE3CC,EAAW,EAEf,CACA,OAAOD,CACT,CACA,oBAAoBE,EAAU,CAC5B,IAAM7H,EAAS6H,EAAS,OACpB5H,EACJ,OAAQ4H,EAAS,UAAW,CAC1B,IAAK,MACH5H,EAAU,KAAK,eAAe,gBAAgB4H,EAAS,QAAQ,EAC/D,MACF,IAAK,SACH5H,EAAU,KAAK,eAAe,mBAAmB4H,EAAS,QAAQ,EAClE,MACF,QACE5H,EAAU,KAAK,SAAS,OAAO4H,EAAS,QAAQ,EAChD,KACJ,CACA,OAAK5H,EAIE,CADmBD,EAAO,oBAAoBC,CAAO,EAFnD,EAIX,CACA,cAAc6H,EAAU,CACtB,GAAI,CAACA,EACH,OAAO,KAET,IAAMC,EAAY,KAAK,mBAAmB,aAAaD,EAAS,MAAM,EACtE,OAAKC,EAGE,CACL,SAAUD,EAAS,SACnB,OAAQC,EACR,UAAWD,EAAS,SACtB,EANS,IAOX,CACA,eAAeA,EAAU,CACvB,GAAI,CAACA,EACH,OAAO,KAET,IAAME,EAAa,KAAK,mBAAmB,YAAYF,EAAS,MAAM,EACtE,OAAKE,EAGE,CACL,SAAUF,EAAS,SACnB,OAAQE,EACR,UAAWF,EAAS,SACtB,EANS,IAOX,CACA,YAAYG,EAAa,CACvB,IAAMxL,EAAQwL,EAAY,SACpBC,EAASD,EAAY,UAC3B,GAAI,KAAK,qBAAqBA,CAAW,EACvC,OAAQC,EAAQ,CACd,IAAK,SACH,OAAO,KACT,IAAK,MACH,OAAI,KAAK,SAAS,eAAe,EACxB,CACL,SAAU,KAAK,kBAAkB,YAAY,EAC7C,UAAW,IACb,EAEE,KAAK,eAAe,eAAe,QAAQ,EACtC,CACL,SAAU,EACV,UAAW,QACb,EAEK,KACT,QACE,OAAI,KAAK,eAAe,eAAe,QAAQ,EACtC,CACL,SAAU,EACV,UAAW,QACb,EAEK,IACX,CAEF,IAAMjI,EAAU,KAAK,SAAS,OAAOgI,EAAY,QAAQ,EACnDE,EAAqB,KAAK,sBAAsBlI,CAAO,EAC7D,OAAIkI,GAGG,CACL,SAAU1L,EAAQ,EAClB,UAAWyL,CACb,CACF,CACA,sBAAsBjI,EAAS3D,EAAI,CACjC,GAAI,CAAC,KAAK,IAAI,kBAAkB,GAAK,CAAC2D,GAAW,CAACA,EAAQ,OACxD,OAEF,IAAMmI,EAAa,KAAK,YAAY,qBAAqB,EAAE,KAAKC,GAAQA,EAAK,WAAW,EAAE,WAAapI,EAAQ,QAAQ,EACnHqI,EAAiB,CAAC,EAClBF,EACFE,EAAiB,CAAC,GAAG,KAAK,YAAY,qBAAqB,CAAC,EAAE,KAAK,CAACC,EAAGzL,IAAMyL,EAAE,WAAW,EAAE,SAAWzL,EAAE,WAAW,EAAE,QAAQ,EAE9HwL,EAAiB,CAAC,GAAG,KAAK,YAAY,wBAAwB,CAAC,EAAE,KAAK,CAACC,EAAGzL,IAAMA,EAAE,WAAW,EAAE,SAAWyL,EAAE,WAAW,EAAE,QAAQ,EAEnI,IAAMC,EAAOlM,EAAK,GAAK,EACjBmM,EAAMH,EAAe,UAAUD,GAAQA,EAAK,WAAW,EAAE,WAAapI,EAAQ,QAAQ,EACtFyI,EAAWJ,EAAeG,EAAMD,CAAI,EAC1C,GAAIE,EACF,MAAO,CACL,SAAUA,EAAS,WAAW,EAAE,SAChC,UAAW,IACb,CAEJ,CACA,aAAaZ,EAAU,CACrB,GAAI,CAACA,EACH,OAAO,KAET,IAAMa,EAAW,KAAK,YAAYb,CAAQ,EAC1C,OAAIa,EACK,CACL,SAAUA,EAAS,SACnB,OAAQb,EAAS,OACjB,UAAWa,EAAS,SACtB,EAEK,IACT,CACA,qBAAqBV,EAAa,CAChC,IAAMC,EAASD,EAAY,UACrBxL,EAAQwL,EAAY,SAC1B,OAAIC,IAAW,MACQ,KAAK,eAAe,qBAAqB,EAAE,OAAS,GAClDzL,EAErByL,IAAW,SACW,KAAK,eAAe,wBAAwB,EAAE,OAAS,GACrDzL,EAEN,KAAK,kBAAkB,WAAW,GAChCA,CAC1B,CACA,YAAYwL,EAAa,CACvB,IAAMxL,EAAQwL,EAAY,SACpBC,EAASD,EAAY,UAE3B,GADmBC,EAASzL,IAAU,EAAIA,IAAU,KAAK,kBAAkB,YAAY,EAErF,OAAIyL,IAAW,MACN,KAEJA,EAMD,KAAK,SAAS,eAAe,EACxB,KAAK,gBAAgB,EAE1B,KAAK,eAAe,eAAe,KAAK,EACnC,KAAK,sBAAsB,EAE7B,KAXD,KAAK,eAAe,eAAe,KAAK,EACnC,KAAK,sBAAsB,EAE7B,KAUX,IAAMjI,EAAU,KAAK,SAAS,OAAOgI,EAAY,QAAQ,EACnDE,EAAqB,KAAK,sBAAsBlI,EAAS,EAAI,EACnE,OAAIkI,GAGG,CACL,SAAU1L,EAAQ,EAClB,UAAWyL,CACb,CACF,CACA,aAAaJ,EAAU,CACrB,GAAI,CAACA,EACH,OAAO,KAET,IAAMc,EAAW,KAAK,YAAY,CAChC,SAAUd,EAAS,SACnB,UAAWA,EAAS,SACtB,CAAC,EACD,OAAIc,EACK,CACL,SAAUA,EAAS,SACnB,OAAQd,EAAS,OACjB,UAAWc,EAAS,SACtB,EAEK,IACT,CACA,iBAAkB,CAEhB,MAAO,CACL,SAFkB,KAAK,kBAAkB,WAAW,EAGpD,UAAW,IACb,CACF,CACA,uBAAwB,CAEtB,MAAO,CACL,SAFsB,KAAK,eAAe,qBAAqB,EAAE,OAAS,EAG1E,UAAW,KACb,CACF,CACA,kBAAkBf,EAAUzK,EAAW,CACrC,OAAIA,EACK,KAAK,2BAA2ByK,CAAQ,EAE1C,KAAK,0BAA0BA,CAAQ,CAChD,CACA,0BAA0BA,EAAU,CAClC,IAAMgB,EAAmB,KAAK,mBAAmB,WAAW,EACxDC,EAAcjB,EAAS,SACvBkB,EAAclB,EAAS,UACvBmB,EAAY,KAAK,mBAAmB,YAAYnB,EAAS,MAAM,EACnE,GAAI,CAACmB,EAAW,CACdA,EAAYH,EAAiB,CAAC,EAC9B,IAAMF,EAAW,KAAK,YAAYd,CAAQ,EAI1C,GAHIoB,EAASN,CAAQ,GAGjB,CAACA,EAAS,WAAa,EAAE,KAAK,mBAAmB,YAAYA,CAAQ,GAAK,IAC5E,OAAO,KAETG,EAAcH,EAAWA,EAAS,SAAW,KAC7CI,EAAcJ,EAAWA,EAAS,UAAY,IAChD,CACA,MAAO,CACL,SAAUG,EACV,OAAQE,EACR,UAAWD,CACb,CACF,CACA,2BAA2BlB,EAAU,CACnC,IAAMgB,EAAmB,KAAK,mBAAmB,WAAW,EACxDC,EAAcjB,EAAS,SACvBkB,EAAclB,EAAS,UACvBmB,EAAY,KAAK,mBAAmB,aAAanB,EAAS,MAAM,EACpE,GAAI,CAACmB,EAAW,CACdA,EAAY5C,EAAMyC,CAAgB,EAClC,IAAMD,EAAW,KAAK,YAAY,CAChC,SAAUf,EAAS,SACnB,UAAWA,EAAS,SACtB,CAAC,EAID,GAHIoB,EAASL,CAAQ,GAGjB,CAACA,EAAS,WAAa,EAAE,KAAK,mBAAmB,YAAYA,CAAQ,GAAK,IAC5E,OAAO,KAETE,EAAcF,EAAWA,EAAS,SAAW,KAC7CG,EAAcH,EAAWA,EAAS,UAAY,IAChD,CACA,MAAO,CACL,SAAUE,EACV,OAAQE,EACR,UAAWD,CACb,CACF,CACF,EAGA,SAASG,GAAcjN,EAAOsH,EAAO,CACnCtH,EAAM,aAAa,cAAcsH,CAAK,CACxC,CACA,IAAI4F,GAAqB,cAAcjO,CAAS,CAC9C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,qBAChB,KAAK,UAAY,CAGf,cAAAgO,EACF,EACA,KAAK,YAAc,EACrB,CACA,UAAUjN,EAAO,CACf,KAAK,MAAQA,CACf,CACA,eAAgB,CACd,KAAK,eAAiB,KAAK,mBAAmB,WAAW,oCAAoC,CAC/F,CACA,aAAamN,EAAcC,EAAM,CAC/B,IAAMC,EAAO,KAAK,UAAUF,CAAY,EACxC,GAAIE,EACF,OAAOA,EAAK,MAAMA,EAAM,CAAC,KAAK,MAAO,GAAGD,CAAI,CAAC,EAE/C,GAAI,KAAK,YACP,OAAO,KAAK,iBAAiBD,CAAY,EAEvC,KAAK,kBAAkBA,CAAY,GAGvC,KAAK,MAAM,mBAAmB,uBAAuBA,CAAY,CAEnE,CACA,YAAYA,EAAcE,EAAM,CAC9B,GAAM,CACJ,kBAAAC,CACF,EAAI,KAAK,MACLA,IACFD,EAAOC,EAAkB,oBAAoBH,EAAcE,CAAI,GAEjE,KAAK,UAAUF,CAAY,EAAIE,CACjC,CACA,SAAU,CACR,KAAK,UAAY,CAAC,EAClB,KAAK,YAAc,GACnB,MAAM,QAAQ,CAChB,CACA,iBAAiBF,EAAc,CAC7B,GAAIA,IAAiB,cACnB,MAAO,GAELA,IAAiB,WAGrB9G,EAAU,qBAAqB8G,CAAY;AAAA;AAAA,yFAE0C,KAAK,cAAc,EAAE,CAE5G,CACA,kBAAkBA,EAAc,CAC9B,MAAO,CAAC,eAAgB,YAAa,eAAgB,eAAe,EAAE,SAASA,CAAY,CAC7F,CACF,EAGA,SAASI,GAAUC,EAAS,CAC1B,IAAMC,EAAqBD,EAAQ,QAAQ,oBAAoB,EAC/D,OAAO,IAAI,MAAMC,EAAoB,CACnC,IAAIlE,EAAQmE,EAAM,CAChB,GAAIA,IAAS,OAGb,MAAO,IAAIN,IAAS7D,EAAO,aAAamE,EAAMN,CAAI,CACpD,CACF,CAAC,CACH,CACA,SAASO,GAAeH,EAAS,CAC/B,MAAO,CACL,SAAU,UACV,KAAMD,GAAUC,CAAO,CACzB,CACF,CAGA,IAAII,GAAmB,cAAc3O,CAAS,CAC5C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,kBAClB,CACA,gBAAgB4O,EAAMC,EAAiBC,EAAc,CACnD,IAAMC,EAAM,CAAC,EACPC,EAAe,CAAC,EACtB,OAAAJ,EAAK,QAAQK,GAAO,CAClB,IAAMC,EAAS,KAAK,oBAAoBD,EAAKJ,EAAiBC,CAAY,EACtEK,EAAc,GACdC,EAAWF,EACXzC,EAAUwC,EAAI,kBAAkB,EAChCI,EAAc,KAClB,KAAO5C,GAAS,CACd,IAAI6C,EAAY,KAChB,GAAI7C,EAAQ,UAAU,EAAG,CACvBA,EAAUA,EAAQ,kBAAkB,EACpC,QACF,CACA,IAAM8C,EAAoBP,EAAavC,EAAQ,WAAW,CAAC,EAC3D,GAAI8C,EAAmB,CACrBA,EAAkB,SAAS,KAAKH,CAAQ,EACxCD,EAAc,GACd,KACF,CAQA,GAPAG,EAAY,KAAK,mBAAmB7C,CAAO,EACvC6C,IACFA,EAAU,SAAW,CAACF,CAAQ,EAC9BJ,EAAaM,EAAU,OAAO,EAAIA,EAClCF,EAAWE,EACX7C,EAAUA,EAAQ,kBAAkB,GAElCA,GAAW,MAAQ4C,IAAgB5C,EAAS,CAC9C0C,EAAc,GACd,KACF,CACAE,EAAc5C,CAChB,CACI0C,GACFJ,EAAI,KAAKK,CAAQ,CAErB,CAAC,EACML,CACT,CACA,mBAAmBS,EAAO,CACxB,IAAMC,EAAYC,GAAqBF,EAAM,eAAe,EAAG,CAAC,UAAU,CAAC,EAC3E,OAAIC,IACFA,EAAU,QAAUD,EAAM,WAAW,GAEhCC,CACT,CACA,oBAAoBR,EAAKJ,EAAiBC,EAAc,CACtD,IAAMa,EAAeD,GAAqBT,EAAI,UAAU,CAAC,EACzD,OAAAU,EAAa,MAAQV,EAAI,SAAS,EAClCU,EAAa,MAAQV,EAAI,eAAe,EACxCU,EAAa,SAAWV,EAAI,iBAAiB,EAC7CU,EAAa,cAAgBV,EAAI,iBAAiB,EAAIJ,EAAgB,QAAQI,CAAG,EAAI,KACrFU,EAAa,MAAQV,EAAI,cAAc,EACvCU,EAAa,WAAaV,EAAI,cAAc,EAAIH,EAAa,QAAQG,CAAG,EAAI,KAC5EU,EAAa,QAAUV,EAAI,cAAc,EAAIA,EAAI,WAAW,EAAI,KAChEU,EAAa,KAAOV,EAAI,UAAU,EAAI,OAAS,GAC/CU,EAAa,OAASV,EAAI,SAAS,EAAIA,EAAI,UAAU,EAAI,KACzDU,EAAa,KAAOV,EAAI,QAAQ,EAAIA,EAAI,QAAQ,EAAI,KACpDU,EAAa,UAAYV,EAAI,aAAa,GAAK,KAAOA,EAAI,aAAa,EAAI,KACpEU,CACT,CACF,EAGIC,GAAwB,cAAc5P,CAAS,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,uBAClB,CACA,aAAc,CACZ,IAAMqI,EAAQ,CACZ,KAAM,yBACR,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,aAAc,CACZ,IAAMA,EAAQ,CACZ,KAAM,oBACR,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,aAAa4G,EAAK,CAChB,IAAM5G,EAAQ,CACZ,KAAM,4BACN,OAAQ4G,EACR,QAAS,CAACA,CAAG,EACb,OAAQ,4BACV,EACA,KAAK,aAAa,cAAc5G,CAAK,CACvC,CACA,YAAYwH,EAAgB,CAC1B,IAAMxH,EAAQ,CACZ,KAAM,oBACN,YAAawH,EAAe,SAAW,EAAIA,EAAe,CAAC,EAAI,OAC/D,aAAcA,CAChB,EACA,KAAK,aAAa,cAAcxH,CAAK,CACvC,CACA,gBAAgByH,EAAiBC,EAAQ,CACvC,IAAM1H,EAAQ,CACZ,KAAM,wBACN,QAASyH,EACT,OAAQA,EAAgB,SAAW,EAAIA,EAAgB,CAAC,EAAI,KAC5D,OAAAC,CACF,EACA,KAAK,aAAa,cAAc1H,CAAK,CACvC,CACA,mBAAmB2H,EAAWC,EAAYF,EAAQ,CAChD,IAAM1H,EAAQ,CACZ,KAAM2H,EACN,QAASC,EACT,OAAQA,EAAW,SAAW,EAAIA,EAAW,CAAC,EAAI,KAClD,OAAAF,CACF,EACA,KAAK,aAAa,cAAc1H,CAAK,CACvC,CACA,kBAAmB,CACjB,IAAMA,EAAQ,CACZ,KAAM,wBACR,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,sBAAsB6H,EAAa,CACjC,IAAM7H,EAAQ,CACZ,KAAM,wBACN,YAAA6H,CACF,EACA,KAAK,aAAa,cAAc7H,CAAK,CACvC,CACA,iBAAiB0H,EAAQ,CACvB,IAAMI,EAAwB,CAC5B,KAAM,mBACN,OAAAJ,CACF,EACA,KAAK,aAAa,cAAcI,CAAqB,CACvD,CACA,kBAAkBJ,EAAQ,CACxB,IAAMK,EAAyB,CAC7B,KAAM,0BACN,OAAAL,CACF,EACA,KAAK,aAAa,cAAcK,CAAsB,CACxD,CACA,YAAYnQ,EAAQ,CAClB,GAAM,CACJ,aAAAoQ,EACA,OAAAN,EACA,QAAAO,EACA,SAAA5D,CACF,EAAIzM,EACEoI,EAAQ,CACZ,KAAM,cACN,QAASgI,EACT,OAAQA,GAAgBA,EAAa,SAAW,EAAIA,EAAa,CAAC,EAAI,KACtE,QAAAC,EACA,SAAA5D,EACA,OAAAqD,CACF,EACA,KAAK,aAAa,cAAc1H,CAAK,CACvC,CACA,aAAakI,EAAgBR,EAAQ,CACnC,GAAI,CAACQ,EAAe,OAClB,OAEF,IAAMzL,EAASyL,EAAe,SAAW,EAAIA,EAAe,CAAC,EAAI,KAC3DvD,EAAS,KAAK,eAAeuD,EAAgBtB,GAAOA,EAAI,UAAU,CAAC,EACnE5G,EAAQ,CACZ,KAAM,eAEN,OAAQ2E,GAA0B,KAClC,QAASuD,EACT,OAAAzL,EACA,OAAAiL,CACF,EACA,KAAK,aAAa,cAAc1H,CAAK,CACvC,CACA,cAAckI,EAAgBR,EAAQ,CACpC,GAAI,CAACQ,EAAe,OAClB,OAEF,IAAMzL,EAASyL,EAAe,SAAW,EAAIA,EAAe,CAAC,EAAI,KAE3DlI,EAAQ,CACZ,KAAM,gBACN,QAHc,KAAK,eAAekI,EAAgBtB,GAAOA,EAAI,UAAU,CAAC,EAIxE,QAASsB,EACT,OAAAzL,EACA,OAAAiL,CACF,EACA,KAAK,aAAa,cAAc1H,CAAK,CACvC,CACA,eAAeuG,EAAM4B,EAAa,CAChC,GAAI,CAAC5B,GAAQA,EAAK,QAAU,EAC1B,OAEF,IAAM6B,EAAaD,EAAY5B,EAAK,CAAC,CAAC,EACtC,QAASpE,EAAI,EAAGA,EAAIoE,EAAK,OAAQpE,IAC/B,GAAIiG,IAAeD,EAAY5B,EAAKpE,CAAC,CAAC,EACpC,OAGJ,OAAOiG,CACT,CACA,cAAczL,EAAM0L,EAASX,EAAQ,CACnC,IAAM1H,EAAQ,CACZ,KAAArD,EACA,QAAA0L,EACA,OAAQA,GAAWA,EAAQ,QAAU,EAAIA,EAAQ,CAAC,EAAI,KACtD,OAAAX,CACF,EACA,KAAK,aAAa,cAAc1H,CAAK,CACvC,CACA,cAAcqI,EAAShE,EAAUqD,EAAQY,EAAc,KAAM,CAC3D,GAAID,GAAWA,EAAQ,OAAQ,CAC7B,IAAMrI,EAAQ,CACZ,KAAM,gBACN,QAAAqI,EACA,OAAQA,EAAQ,SAAW,EAAIA,EAAQ,CAAC,EAAI,KAC5C,YAAAC,EACA,SAAAjE,EACA,OAAAqD,CACF,EACA,KAAK,aAAa,cAAc1H,CAAK,CACvC,CACF,CACF,EAGIuI,GAAwB,cAAc5Q,CAAS,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,uBAClB,CACA,UAAUe,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,gBAAkBA,EAAM,eAC/B,CACA,gBAAiB,CACf,IAAM8P,EAAc,KAAK,YAAY,cAAc,EACnD,GAAI9C,EAAS8C,CAAW,GAAK,CAAC,KAAK,YAAY,QAAQ,EACrD,MAAO,CAAC,EAGV,IAAM9B,EADe,KAAK,YAAY,WAAW,EACxB,IAAI,KAAK,0BAA0B,KAAK,IAAI,CAAC,EACtE,YAAK,qBAAqBA,CAAG,EACtBA,CACT,CACA,0BAA0BjK,EAAQ,CAChC,IAAMgM,EAAkB,KAAK,gBAAgB,mBAAmB,EAC1DhC,EAAe,KAAK,gBAAgB,gBAAgB,EACpDiC,EAAgBjM,EAAO,iBAAiB,EAAIgM,EAAgB,QAAQhM,CAAM,EAAI,KAC9EkM,EAAalM,EAAO,cAAc,EAAIgK,EAAa,QAAQhK,CAAM,EAAI,KACrEmM,EAAUnM,EAAO,cAAc,EAAIA,EAAO,WAAW,EAAI,KACzDoM,EAAOpM,EAAO,QAAQ,GAAK,KAAOA,EAAO,QAAQ,EAAI,KACrDqM,EAAYrM,EAAO,aAAa,GAAK,KAAOA,EAAO,aAAa,EAAI,KACpEsM,EAAOtM,EAAO,QAAQ,GAAK,MAAQA,EAAO,QAAQ,EAAI,EAAIA,EAAO,QAAQ,EAAI,KAenF,MAdY,CACV,MAAOA,EAAO,SAAS,EACvB,MAAOA,EAAO,eAAe,EAC7B,KAAM,CAACA,EAAO,UAAU,EACxB,OAAQA,EAAO,UAAU,EACzB,KAAAoM,EACA,UAAAC,EACA,QAAAF,EACA,SAAUnM,EAAO,iBAAiB,EAClC,cAAAiM,EACA,MAAOjM,EAAO,cAAc,EAC5B,WAAAkM,EACA,KAAAI,CACF,CAEF,CACA,qBAAqBC,EAAiB,CACpC,IAAMC,EAAc,KAAK,YAAY,QAAQ,EACvCC,EAAsB,IAAI,IAAID,EAAY,IAAI,CAACrC,EAAK1N,IAAU,CAAC0N,EAAI,SAAS,EAAG1N,CAAK,CAAC,CAAC,EAC5F8P,EAAgB,KAAK,CAACG,EAAOC,IAAU,CACrC,IAAMC,EAAOH,EAAoB,IAAIC,EAAM,KAAK,EAAID,EAAoB,IAAIC,EAAM,KAAK,EAAI,GACrFG,EAAOJ,EAAoB,IAAIE,EAAM,KAAK,EAAIF,EAAoB,IAAIE,EAAM,KAAK,EAAI,GAC3F,OAAOC,EAAOC,CAChB,CAAC,CACH,CACF,EAGIC,GAA0B,cAAc5R,CAAS,CACnD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,yBAClB,CACA,UAAUe,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,uBAAyBA,EAAM,uBACpC,KAAK,gBAAkBA,EAAM,sBAC7B,KAAK,mBAAqBA,EAAM,kBAClC,CACA,qBAAsB,CACpB,IAAM8Q,EAAmB,CAAC,EACpBC,EAAmB,KAAK,YAAY,WAAW,EACrD,OAAAC,GAA6B,KAAMD,EAAkBE,GAAQ,CACvDC,EAAsBD,CAAI,GAC5BH,EAAiB,KAAK,CACpB,QAASG,EAAK,WAAW,EACzB,KAAMA,EAAK,WAAW,CACxB,CAAC,CAEL,CAAC,EACMH,CACT,CACA,sBAAsB9B,EAAQ,CAC5B,IAAMmC,EAAoB,KAAK,YAAY,iBAAiB,EAC5D,GAAI,CAACA,EACH,OAEF,IAAMC,EAAa,CAAC,EACpBJ,GAA6B,KAAMG,EAAmBE,GAAS,CAC7D,GAAIH,EAAsBG,CAAK,EAAG,CAChC,IAAMC,EAAcD,EAAM,eAAe,EACnCE,EAAa,CACjB,QAASF,EAAM,WAAW,EAC1B,KAAOC,EAAuBA,EAAY,cAArB,MACvB,EACAF,EAAW,KAAKG,CAAU,CAC5B,CACF,CAAC,EACD,KAAK,oBAAoBH,EAAYpC,CAAM,CAC7C,CACA,oBAAoBoC,EAAYpC,EAAQ,CAEtC,GAAI,CADqB,KAAK,YAAY,WAAW,EAEnD,OAEF,KAAK,uBAAuB,MAAM,EAClC,IAAMF,EAAiB,CAAC,EACxBsC,EAAW,QAAQI,GAAa,CAC9B,IAAMC,EAAWD,EAAU,QACrBE,EAAWF,EAAU,KACrBG,EAAsB,KAAK,YAAY,oBAAoBF,CAAQ,EACpEE,GAGDA,EAAoB,WAAW,IAAMD,IAGzCC,EAAoB,YAAYD,CAAQ,EACxC5C,EAAe,KAAK6C,CAAmB,EACzC,CAAC,EACD,KAAK,mBAAmB,QAAQ3C,EAAQ,EAAI,EACxCF,EAAe,QACjB,KAAK,gBAAgB,YAAYA,CAAc,EAEjD,KAAK,uBAAuB,OAAO,CACrC,CACF,EAGI8C,GAAwB,cAAc3S,CAAS,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,wBAEhB,KAAK,mBAAqB,CAAC,EAE3B,KAAK,yBAA2B,CAAC,EAEjC,KAAK,uBAAyB,GAG9B,KAAK,0BAA4B,CAAC,EAClC,KAAK,2BAA6B,CAAC,EACnC,KAAK,4BAA8B,CAAC,CACtC,CACA,UAAUe,EAAO,CACf,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,YAAcA,EAAM,YACzB,KAAK,gBAAkBA,EAAM,qBAC/B,CACA,eAAgB,CACd,KAAK,6BAA+B,KAAK,IAAI,IAAI,8BAA8B,CACjF,CACA,kBAAkB6R,EAAaC,EAAgB3C,EAAc,GAAO,CAClE,IAAM4C,EAAiB,KAAK,mBAAmB,iBAAiB,EAEhE,GADiB,EAAAF,IAAgB,KAAK,aAAeC,IAAmB,KAAK,gBAAkB,CAACC,GAOhG,IAHA,KAAK,YAAcF,EACnB,KAAK,eAAiBC,EACtB,KAAK,mBAAmB,kBAAkB,EACtC,KAAK,IAAI,IAAI,WAAW,EAAG,CAC7B,IAAME,EAAY,KAAK,mBAAmB,sBAAsB,EAChE,KAAK,aAAeA,EAAY,KAAK,eAAiB,KAAK,YAC3D,KAAK,cAAgBA,EAAY,KAAK,cACxC,MACE,KAAK,aAAe,KAAK,eACzB,KAAK,cAAgB,KAAK,YAAc,KAAK,eAE3C,KAAK,YAAY,QAAQ,GAC3B,KAAK,qBAAqB7C,CAAW,EAEzC,CACA,mBAAmBlL,EAAMgO,EAAM,CAC7B,IAAI/H,EACJ,OAAQjG,EAAM,CACZ,IAAK,OACHiG,EAAS,KAAK,0BAA0B+H,CAAI,EAC5C,MACF,IAAK,QACH/H,EAAS,KAAK,2BAA2B+H,CAAI,EAC7C,MACF,QACE/H,EAAS,KAAK,4BAA4B+H,CAAI,EAC9C,KACJ,CACA,OAAO/H,GAAU,CAAC,CACpB,CACA,wBAAyB,CACvB,IAAMgI,EAAyB,KAAK,mBAAmB,cAAc,EACjE,KAAK,iCAAiC,GACxC,KAAK,mBAAqBA,EAC1B,KAAK,yBAA2BA,IAEhC,KAAK,mBAAqBA,EAAuB,OAAO,KAAK,sBAAsB,KAAK,IAAI,CAAC,EAC7F,KAAK,yBAA2BA,EAAuB,OAAO,KAAK,yBAAyB,KAAK,IAAI,CAAC,EAE1G,CACA,kCAAmC,CACjC,OAAO,KAAK,8BAAgC,KAAK,gBAAkB,CACrE,CACA,OAAQ,CACN,KAAK,0BAA4B,CAAC,EAClC,KAAK,2BAA6B,CAAC,EACnC,KAAK,4BAA8B,CAAC,EACpC,KAAK,uBAAyB,EAChC,CACA,yBAAyBhE,EAAK,CAC5B,OAAIA,EAAI,mBAAmB,EAClB,GAEF,KAAK,sBAAsBA,CAAG,CACvC,CACA,sBAAsBA,EAAK,CACzB,GAAIA,EAAI,aAAa,EACnB,MAAO,GAET,IAAMiE,EAAajE,EAAI,QAAQ,GAAK,EAC9BkE,EAAcD,EAAajE,EAAI,eAAe,EAC9CmE,EAAa,KAAK,aAAe,IACjCC,EAAc,KAAK,cAAgB,IACnCC,EAAmBJ,EAAaE,GAAcD,EAAcC,EAC5DG,EAAoBL,EAAaG,GAAeF,EAAcE,EACpE,MAAO,CAACC,GAAoB,CAACC,CAC/B,CAEA,oBAAqB,CACnB,IAAMC,EAAW,KAAK,mBAAmB,YAAY,EAC/CC,EAAY,KAAK,mBAAmB,aAAa,EAEvD,OADY,KAAK,mBAAmB,OAAOD,CAAQ,EAAE,OAAOC,CAAS,CAEvE,CAKA,sBAAsB1O,EAAS,CAC7B,GAAI,CAAC,KAAK,YAAY,gBAAgB,EACpC,OAAO,KAAK,mBAEd,IAAM2O,EAAyBzE,GAAO,CACpC,IAAMtF,EAAOsF,EAAI,QAAQ,EACzB,OAAOtH,EAAQgC,CAAI,GAAKA,EAAO,KAAK,YACtC,EACMgK,EAAqB,KAAK,iCAAiC,EAAI,KAAO,KAAK,sBAAsB,KAAK,IAAI,EAC1GV,EAAyB,KAAK,mBAAmB,cAAc,EACrE,OAAO,KAAK,mBAAmB,cAAclO,EAASkO,EAAwBU,EAAoBD,CAAsB,CAC1H,CAIA,qBAAqBxD,EAAc,GAAO,CACT,KAAK,gBAAgB,GAElD,KAAK,gBAAgB,sBAAsBA,CAAW,CAE1D,CACA,qBAAsB,CACpB,KAAK,0BAA4B,CAAC,EAClC,KAAK,2BAA6B,CAAC,EACnC,KAAK,4BAA8B,CAAC,EACpC,IAAM0D,EAAiB,CAAC,EAClBC,EAAmB,KAAK,mBAAmB,YAAY,EACvDC,EAAoB,KAAK,mBAAmB,aAAa,EACvC,KAAK,yBAAyB,OAAOD,CAAgB,EAAE,OAAOC,CAAiB,EACvF,QAAQ7E,GAAO2E,EAAe3E,EAAI,MAAM,CAAC,EAAI,EAAI,EACjE,IAAM8E,EAAY,CAACC,EAAU/I,EAAQ+H,IAAS,CAC5C,IAAIiB,EAAc,GAClB,QAASzJ,EAAI,EAAGA,EAAIwJ,EAAS,OAAQxJ,IAAK,CACxC,IAAM4H,EAAQ4B,EAASxJ,CAAC,EACpB0J,EAAc,GAClB,GAAIC,GAAS/B,CAAK,EAChB8B,EAAcN,EAAexB,EAAM,MAAM,CAAC,IAAM,OAC3C,CAEL,IAAMgC,EADchC,EACkB,qBAAqB,EACvDgC,IACFF,EAAcH,EAAUK,EAAmBnJ,EAAQ+H,EAAO,CAAC,EAE/D,CACIkB,IACFD,EAAc,GACThJ,EAAO+H,CAAI,IACd/H,EAAO+H,CAAI,EAAI,CAAC,GAElB/H,EAAO+H,CAAI,EAAE,KAAKZ,CAAK,EAE3B,CACA,OAAO6B,CACT,EACAF,EAAU,KAAK,mBAAmB,YAAY,EAAG,KAAK,0BAA2B,CAAC,EAClFA,EAAU,KAAK,mBAAmB,aAAa,EAAG,KAAK,2BAA4B,CAAC,EACpFA,EAAU,KAAK,mBAAmB,cAAc,EAAG,KAAK,4BAA6B,CAAC,CACxF,CACA,iBAAkB,CAChB,IAAMM,EAAaC,GAAK,GAAGA,EAAE,MAAM,CAAC,IAAIA,EAAE,UAAU,GAAK,QAAQ,GACjE,KAAK,uBAAuB,EAC5B,IAAMC,EAAU,KAAK,mBAAmB,EAAE,IAAIF,CAAU,EAAE,KAAK,GAAG,EAC5DG,EAAU,KAAK,yBAA2BD,EAChD,OAAIC,IACF,KAAK,uBAAyBD,EAC9B,KAAK,oBAAoB,GAEpBC,CACT,CACF,EAGIC,GAAmB,cAAczU,CAAS,CAC5C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,kBAClB,CACA,UAAUe,EAAO,CACf,KAAK,0BAA4BA,EAAM,yBACzC,CACA,cAAc2T,EAAcC,EAAY,CACtC,IAAMC,EAAW,KAAK,0BAA0B,SAASF,CAAY,EACrE,OAAIE,GAAYA,EAAS,gBAChBA,EAAS,gBAAgBD,CAAU,EAErC,IACT,CACA,0BAA0BlP,EAAU,CAClC,MAAMoP,CAAQ,CACZ,SAAU,CACR,MAAO,EACT,CACA,QAAS,CACP,OAAO,KAAK,IACd,CACA,KAAK5U,EAAQ,CACX,IAAM6U,EAAiBrP,EAASxF,CAAM,EAChC+E,EAAO,OAAO8P,EACpB,GAAI9P,IAAS,UAAYA,IAAS,UAAYA,IAAS,UAAW,CAChE,KAAK,KAAO+P,GAAc,SAAWD,EAAiB,SAAS,EAC/D,MACF,CACA,GAAIA,GAAkB,KAAM,CAC1B,KAAK,KAAOC,GAAc,eAAe,EACzC,MACF,CACA,KAAK,KAAOD,CACd,CACF,CACA,OAAOD,CACT,CACA,wBAAwBG,EAAW,CACjC,OAAKA,EAGEA,EAAU,WAAa,WAAYA,EAAU,UAF3C,EAGX,CACF,EAGIC,GAA4B,cAAcjV,CAAS,CACrD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,2BAClB,CACA,UAAUe,EAAO,CACf,KAAK,iBAAmBA,EAAM,gBAChC,CACA,eAAgB,CACd,KAAK,kBAAoB,CACvB,cAAe,CACb,oBAAqB,CAAC,UAAW,SAAS,EAC1C,mBAAoB,CAAC,mBAAoB,sBAAuB,oBAAqB,cAAe,kBAAmB,SAAS,CAClI,EACA,mBAAoB,CAClB,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,SAAS,EAC9B,gBAAiB,KAAK,iBAAiB,0BAA0B,KAAK,KAAK,gBAAgB,CAC7F,EACA,gBAAiB,CACf,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,SAAS,CAChC,EACA,qBAAsB,CACpB,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,CACvB,EACA,oBAAqB,CACnB,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,EACrB,gBAAiB,KAAK,iBAAiB,0BAA0B,KAAK,KAAK,gBAAgB,CAC7F,EACA,wBAAyB,CACvB,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,SAAS,CAChC,EACA,uBAAwB,CACtB,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,SAAS,CAChC,EACA,wBAAyB,CACvB,oBAAqB,CAAC,sBAAsB,EAC5C,mBAAoB,CAAC,mBAAoB,kBAAmB,SAAS,CACvE,EACA,aAAc,CACZ,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,UAAW,kBAAkB,EAClD,gBAAiB,KAAK,iBAAiB,0BAA0B,KAAK,KAAK,gBAAgB,CAC7F,EACA,WAAY,CACV,oBAAqB,CAAC,UAAU,EAChC,mBAAoB,CAAC,UAAW,sBAAuB,mBAAoB,mBAAoB,UAAW,WAAY,mBAAoB,SAAS,CACrJ,EACA,cAAe,CACb,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,kBAAkB,EACvC,gBAAiB,KAAK,iBAAiB,0BAA0B,KAAK,KAAK,gBAAgB,CAC7F,EACA,sBAAuB,CACrB,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,UAAW,kBAAkB,EAClD,gBAAiB,KAAK,iBAAiB,0BAA0B,KAAK,KAAK,gBAAgB,CAC7F,EACA,iBAAkB,CAChB,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,kBAAkB,EACvC,gBAAiB,KAAK,iBAAiB,0BAA0B,KAAK,KAAK,gBAAgB,CAC7F,EACA,OAAQ,CACN,oBAAqB,CAAC,iBAAkB,iBAAkB,WAAY,UAAU,EAChF,mBAAoB,CAAC,mBAAoB,mBAAoB,kBAAmB,mBAAoB,0BAA2B,qBAAsB,SAAS,CAChK,EACA,YAAa,CACX,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,SAAS,CAChC,EACA,UAAW,CACT,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,UAAW,UAAU,CAC5C,EACA,iBAAkB,CAChB,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,CACvB,EACA,SAAU,CACR,oBAAqB,CAAC,EACtB,mBAAoB,CAAC,YAAa,SAAU,cAAe,mBAAmB,CAChF,CACF,CACF,CACA,SAAS8K,EAAM,CACb,OAAO,KAAK,kBAAkBA,CAAI,CACpC,CACF,EAGIqJ,GAAmB,CAEvB,mBAAoB,oBAAqB,sBAAuB,gCAAiC,qBAAsB,UAAW,wBAAyB,mBAAoB,4BAA6B,wBAAyB,uBAAwB,4BAA6B,0BAA2B,gBAAiB,oBAAqB,iBAAkB,cAAe,qBAAsB,eAAgB,MAAO,eAAgB,mBAAoB,sBAAuB,qBAAsB,gBAAiB,cAAe,0BAA2B,oBAAqB,oBAAqB,qBAAsB,cAAe,oBAAqB,gBAAiB,sBAAuB,oBAAqB,aAAc,eAAgB,gBAAiB,sBAAuB,oBAAqB,qBAAsB,eAAgB,oBAAqB,cAAe,wBAAyB,iBAAkB,uBAAwB,iBAAkB,qBAAsB,yBAA0B,oBAAqB,iBAAkB,yBAA0B,wBAAyB,kBAAmB,mBAAoB,wBAAyB,qBAAsB,gBAAiB,eAAgB,qBAAsB,uBAAwB,eAAgB,kBAAmB,cAAe,iBAAkB,eAAgB,mBAAoB,kBAAmB,0BAA2B,cAAe,0BAA2B,wBAAyB,oBAAqB,wBAAyB,wBAAyB,0BAA2B,oBAAqB,kBAAmB,oBAAqB,wBAAyB,yBAA0B,yBAAyB,EAC/rDC,GAAmB,OAAO,YAAYD,GAAiB,IAAI,CAACE,EAAU7T,IAAU,CAAC6T,EAAU7T,CAAK,CAAC,CAAC,EACtG,SAAS8T,GAAuBC,EAAOC,EAAO,CAC5C,IAAMC,GAAUF,EAAM,SAAWH,GAAiBG,EAAM,QAAQ,EAAI,SAAW,OAAO,iBAChFG,GAAUF,EAAM,SAAWJ,GAAiBI,EAAM,QAAQ,EAAI,SAAW,OAAO,iBACtF,OAAOC,EAASC,CAClB,CACA,SAASC,GAA0BJ,EAAOC,EAAO,CAC/C,OAAOD,GAAO,WAAa,qBAAuB,GAAK,CACzD,CAGA,IAAIK,GAAe,cAAc3V,CAAS,CACxC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,eAChB,KAAK,SAAW,CAAC,CACnB,CACA,SAAS4V,EAAM,CACb,KAAK,SAASA,EAAK,IAAI,EAAIA,EAAK,QAClC,CACA,YAAY/J,KAASsC,EAAM,CACzB,IAAM0H,EAAkB,KAAK,SAAShK,CAAI,EAC1C,GAAIgK,GAAmB,KAGvB,OAAO,IAAIA,EAAgB,GAAG1H,CAAI,CACpC,CACF,EAGI2H,GAAe,cAAc9V,CAAS,CACxC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,eAChB,KAAK,OAAS,CAAC,EACf,KAAK,MAAQ,GACb,KAAK,eAAiB,CAAC,CACzB,CACA,YAAa,CACX,IAAMC,EAAS,KAAK,OACpB,KAAK,MAAQA,EAAO,UAAY,MAAQA,EAAO,cAAgB,MAAQA,EAAO,QAAU,MAAQA,EAAO,MAAQ,MAAQA,EAAO,OAAS,MAAQA,EAAO,cAAgB,MAAQA,EAAO,YAAc,MAAQA,EAAO,aAAe,MAAQA,EAAO,WAAa,MAAQA,EAAO,SAAW,MAAQA,EAAO,UAAY,MAAQA,EAAO,iBAAmB,MAAQA,EAAO,eAAiB,MAAQA,EAAO,gBAAkB,MAAQA,EAAO,oBAAsB,MAAQA,EAAO,kBAAoB,MAAQA,EAAO,mBAAqB,MAAQA,EAAO,cAAgB,MAAQA,EAAO,YAAc,MAAQA,EAAO,aAAe,MAAQA,EAAO,iBAAmB,MAAQA,EAAO,iBAAmB,MAAQA,EAAO,gBAAkB,KAC5rB,KAAK,QACP,KAAK,eAAe,QAAQqU,GAAKA,EAAErU,CAAM,CAAC,EAC1C,KAAK,eAAe,OAAS,EAEjC,CACA,UAAUwF,EAAU,CACd,KAAK,MACPA,EAAS,KAAK,MAAM,EAEpB,KAAK,eAAe,KAAKA,CAAQ,CAErC,CACA,SAASsQ,EAAU5I,EAAM,CACvB,KAAK,OAAO4I,CAAQ,EAAI5I,EACxB,KAAK,WAAW,CAClB,CACA,wBAAwBA,EAAMH,EAAQ,CACpC,IAAM/M,EAAS,KAAK,OACpB,OAAQ+M,EAAQ,CACd,IAAK,OACH/M,EAAO,WAAakN,EACpB,MACF,IAAK,QACHlN,EAAO,YAAckN,EACrB,MACF,QACElN,EAAO,aAAekN,EACtB,KACJ,CACA,KAAK,WAAW,CAClB,CACA,IAAI4I,EAAU,CACZ,OAAO,KAAK,OAAOA,CAAQ,CAC7B,CACA,WAAY,CACV,OAAO,KAAK,MACd,CACA,iBAAkB,CAChB,OAAO,KAAK,OAAO,YACrB,CACA,4BAA6B,CAC3B,GAAM,CACJ,WAAAC,EACA,aAAAC,EACA,YAAAC,CACF,EAAI,KAAK,OACT,MAAO,CAACF,EAAYE,EAAaD,CAAY,CAC/C,CACA,0BAA0BjJ,EAAQ,CAChC,IAAM/M,EAAS,KAAK,OACpB,OAAQ+M,EAAQ,CACd,IAAK,OACH,OAAO/M,EAAO,WAChB,IAAK,QACH,OAAOA,EAAO,YAChB,QACE,OAAOA,EAAO,YAClB,CACF,CACF,EAGIkW,GAAoB,cAAcnW,CAAS,CAC7C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,mBAClB,CACA,SAASoW,EAAc,CACrB,GAAM,CACJ,SAAA9J,EACA,UAAA+J,EACA,OAAAvR,CACF,EAAIsR,EACJ,OAAO,KAAK,mBAAmB,CAC7B,SAAA9J,EACA,OAAAxH,EACA,UAAAuR,CACF,CAAC,CACH,CACA,mBAAmBD,EAAc,CAC/B,GAAM,CACJ,SAAA9J,EACA,UAAA+J,EACA,OAAAvR,CACF,EAAIsR,EACJ,MAAO,GAAG9J,CAAQ,IAAI+J,GAAoB,MAAkB,IAAIvR,EAAO,MAAM,CAAC,EAChF,CACA,OAAOwR,EAAOC,EAAO,CACnB,IAAMC,EAAYF,EAAM,SAAWC,EAAM,OACnCE,EAAgBH,EAAM,YAAcC,EAAM,UAC1CG,EAAaJ,EAAM,WAAaC,EAAM,SAC5C,OAAOC,GAAaC,GAAiBC,CACvC,CACF,EAGIC,GAAuB,cAAc3W,CAAS,CAChD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,uBAChB,KAAK,OAAS,CAAC,CACjB,CACA,UAAUe,EAAO,CACf,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,SAAWA,EAAM,QACxB,CACA,eAAgB,CACV,KAAK,SAAS,QAAQ,GAAK,eAC7B,KAAK,mBAAqB,KAAK,SAEnC,CAYA,iBAAiBsH,EAAOuO,EAAW,CACjC,GAAI,KAAK,oBAAsB,KAAM,CACnC,KAAK,aAAa,cAAcvO,CAAK,EACrC,MACF,CACA,KAAK,OAAO,KAAKA,CAAK,EACtB,IAAM+F,EAAO,IAAM,CACb,KAAK,oBACP,KAAK,mBAAmB,iBAAiB,EAE3C,KAAK,OAAO,QAAQyI,GAAK,KAAK,aAAa,cAAcA,CAAC,CAAC,EAC3D,KAAK,OAAS,CAAC,CACjB,EACID,EACFxI,EAAK,GAED,KAAK,2BAA6B,OACpC,KAAK,0BAA4B,KAAK,sBAAsB,SAASA,CAAI,GAE3E,KAAK,0BAA0B,EAEnC,CACF,EAGI0I,GAAmB,cAAc9W,CAAS,CAC5C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,kBAClB,CACA,UAAUe,EAAO,CACf,KAAK,SAAWA,EAAM,SACtB,KAAK,eAAiBA,EAAM,eAC5B,KAAK,kBAAoBA,EAAM,iBACjC,CACA,aAAc,CACZ,IAAIuL,EAAW,EACX+J,EACJ,OAAI,KAAK,eAAe,qBAAqB,EAC3CA,EAAY,MACH,KAAK,SAAS,YAAY,GACnCA,EAAY,KACZ/J,EAAW,KAAK,kBAAkB,YAAY,GACrC,KAAK,eAAe,wBAAwB,IACrD+J,EAAY,UAEPA,IAAc,OAAS,KAAO,CACnC,SAAA/J,EACA,UAAA+J,CACF,CACF,CACA,YAAa,CACX,IAAI/J,EACA+J,EAAY,KACVU,EAAoB,KAAK,eAAe,wBAAwB,EAChEC,EAAiB,KAAK,eAAe,qBAAqB,EAChE,OAAID,GACFV,EAAY,SACZ/J,EAAWyK,EAAoB,GACtB,KAAK,SAAS,YAAY,GACnCV,EAAY,KACZ/J,EAAW,KAAK,kBAAkB,WAAW,GACpC0K,IACTX,EAAY,MACZ/J,EAAW0K,EAAiB,GAEvB1K,IAAa,OAAS,KAAO,CAClC,SAAAA,EACA,UAAA+J,CACF,CACF,CACA,WAAWY,EAAS,CAClB,OAAQA,EAAQ,UAAW,CACzB,IAAK,MACH,OAAO,KAAK,eAAe,qBAAqB,EAAEA,EAAQ,QAAQ,EACpE,IAAK,SACH,OAAO,KAAK,eAAe,wBAAwB,EAAEA,EAAQ,QAAQ,EACvE,QACE,OAAO,KAAK,SAAS,OAAOA,EAAQ,QAAQ,CAChD,CACF,CACA,QAAQC,EAAMC,EAAM,CAClB,MAAI,CAACD,GAAQ,CAACC,EACL,GAELD,GAAQ,CAACC,GAAQ,CAACD,GAAQC,EACrB,GAEFD,EAAK,WAAaC,EAAK,UAAYD,EAAK,WAAaC,EAAK,SACnE,CAEA,OAAOD,EAAMC,EAAM,CACjB,OAAQD,EAAK,UAAW,CACtB,IAAK,MACH,GAAIC,EAAK,YAAc,MACrB,MAAO,GAET,MACF,IAAK,SACH,GAAIA,EAAK,YAAc,SACrB,MAAO,GAET,MACF,QACE,GAAIxP,EAAQwP,EAAK,SAAS,EACxB,OAAOA,EAAK,YAAc,MAE5B,KACJ,CACA,OAAOD,EAAK,SAAWC,EAAK,QAC9B,CACF,EAGIC,GAAa,CACf,QAAS,kBACT,UAAW,mBACX,aAAc,EAChB,EACIC,GAAgB,CAClB,QAAS,qBACT,UAAW,sBACX,aAAc,EAChB,EACIC,GAAmB,CACrB,QAAS,wBACT,UAAW,wBACX,aAAc,EAChB,EACIC,GAAc,cAAcvX,CAAS,CACvC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,cAChB,KAAK,QAAyB,IAAI,IAClC,KAAK,gBAAiC,IAAI,IAC1C,KAAK,aAAe,CAAC,EACrB,KAAK,eAAiB,KACtB,KAAK,sBAAwB,KAC7B,KAAK,cAAgB,EACvB,CACA,UAAUe,EAAO,CACf,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,SAAWA,EAAM,QACxB,CACA,eAAgB,CACd,KAAK,2BAA2B,YAAa,IAAM,KAAK,yBAAyB,CAAC,EAClF,KAAK,aAAe,KAAK,wBAAwB,EACjD,KAAK,yBAAyB,EAC9B,KAAK,UAAUqW,EAAU,EACzB,KAAK,UAAUC,EAAa,EAC5B,KAAK,UAAUC,EAAgB,CACjC,CACA,qBAAsB,CACpB,OAAO,KAAK,yBAAyBF,EAAU,CACjD,CACA,wBAAyB,CACvB,OAAO,KAAK,yBAAyBC,EAAa,CACpD,CACA,0BAA2B,CACzB,OAAO,KAAK,yBAAyBC,EAAgB,CACvD,CACA,kBAAmB,CACjB,OAAO,KAAK,aACd,CACA,iBAAkB,CAChB,OAAO,KAAK,YACd,CACA,kBAAkBxO,EAAI,CACpB,QAAW0O,KAAa,MAAM,KAAK1O,EAAG,SAAS,EACzC0O,EAAU,WAAW,WAAW,GAAK,CAAC,KAAK,aAAa,SAASA,CAAS,GAC5E1O,EAAG,UAAU,OAAO0O,CAAS,EAGjC,QAAWA,KAAa,KAAK,aACtB1O,EAAG,UAAU,SAAS0O,CAAS,GAClC1O,EAAG,UAAU,IAAI0O,CAAS,CAGhC,CACA,yBAA0B,CACxB,OAAO,KAAK,cACd,CACA,0BAA2B,CACzB,IAAMC,EAAe,KAAK,SAAS,MAAM,iBAAiB,kBAAkB,EAAE,KAAK,EAC7EC,EAAS,KAAK,IAAI,IAAI,WAAW,EACvC,GAAIA,GAAU,MAAQ,MAAMA,CAAM,GAAK,CAAC,SAASA,CAAM,EACrD,OAAID,IAAiB,MACnB,KAAK,SAAS,MAAM,YAAY,mBAAoB,IAAI,EAEnD,GAET,IAAME,EAAe,GAAGD,CAAM,KAC9B,OAAID,GAAgBE,GAClB,KAAK,SAAS,MAAM,YAAY,mBAAoBA,CAAY,EACzDD,GAEFD,GAAgB,GAAK,WAAWA,CAAY,EAAI,EACzD,CACA,yBAAyBG,EAAU,CACjC,IAAMC,EAAS,KAAK,gBAAgB,IAAID,CAAQ,EAChD,GAAIC,GAAU,KACZ,OAAOA,EAET,IAAMC,EAAc,KAAK,cAAcF,CAAQ,EAC/C,OAAIE,IAAgB,YAAcA,IAAgB,YACzCF,EAAS,cAElB,KAAK,gBAAgB,IAAIA,EAAUE,CAAW,EACvCA,EACT,CACA,cAAcF,EAAU,CACtB,IAAMG,EAAS,KAAK,UAAUH,CAAQ,EACtC,GAAIG,EAAO,cAAgB,KACzB,MAAO,WAET,IAAMC,EAAUD,EAAO,YACvB,OAAIC,IAAYC,GAA0B,aAC1C,KAAK,cAAgB,GACdD,EACT,CACA,UAAUJ,EAAU,CAClB,IAAIG,EAAS,KAAK,QAAQ,IAAIH,CAAQ,EACtC,GAAIG,EACF,OAAOA,EAET,IAAI5U,EAAY,KAAK,sBAChBA,IACHA,EAAY,KAAK,sBAAwB,SAAS,cAAc,KAAK,EACrEA,EAAU,UAAY,2BACtB,KAAK,SAAS,YAAYA,CAAS,GAErC4U,EAAS,SAAS,cAAc,KAAK,EACrCA,EAAO,MAAM,MAAQ,OAAOH,EAAS,OAAO,KAAKK,EAAiB,MAClE9U,EAAU,YAAY4U,CAAM,EAC5B,KAAK,QAAQ,IAAIH,EAAUG,CAAM,EACjC,IAAIG,EAAkB,KAAK,cAAcN,CAAQ,EAC7CM,IAAoB,aACtB9Q,EAAU,gBAAgBwQ,EAAS,OAAO,gHAAgHA,EAAS,YAAY,6CAA6C,EAE9N,IAAMO,EAAc,KAAK,sBAAsB,cAAcJ,EAAQ,IAAM,CACzE,IAAMK,EAAiB,KAAK,cAAcR,CAAQ,EAC9CQ,IAAmB,YAAcA,IAAmB,cAGxD,KAAK,gBAAgB,IAAIR,EAAUQ,CAAc,EAC7CA,IAAmBF,IACrBA,EAAkBE,EAClB,KAAK,2BAA2BR,EAAS,SAAS,GAEtD,CAAC,EACD,YAAK,eAAe,IAAMO,EAAY,CAAC,EAChCJ,CACT,CACA,2BAA2BM,EAAQ,CACjC,IAAMhQ,EAAQ,CACZ,KAAM,oBACN,CAACgQ,CAAM,EAAG,EACZ,EACA,KAAK,aAAa,cAAchQ,CAAK,CACvC,CACA,0BAA2B,CACzB,IAAMiQ,EAAW,IAAI,iBAAiB,IAAM,CAC1C,IAAMC,EAAkB,KAAK,wBAAwB,EAChDC,GAAYD,EAAiB,KAAK,YAAY,IACjD,KAAK,aAAeA,EACpB,KAAK,2BAA2B,cAAc,EAElD,CAAC,EACGvG,EAAO,KAAK,SAChB,KAAOA,GACLsG,EAAS,QAAQtG,GAAQ,KAAK,SAAU,CACtC,WAAY,GACZ,gBAAiB,CAAC,OAAO,CAC3B,CAAC,EACDA,EAAOA,EAAK,aAEhB,CACA,yBAA0B,CACxB,IAAIlJ,EAAK,KAAK,SACR2P,EAAkB,CAAC,EAEzB,IADA,KAAK,eAAiB,KACf3P,GAAI,CACT,IAAM4P,EAAe,MAAM,KAAK5P,EAAG,SAAS,EAAE,OAAOwL,GAAKA,EAAE,WAAW,WAAW,CAAC,EACnF,QAAWqE,KAAcD,EACvB,KAAK,eAAiB5P,EACjB2P,EAAgB,SAASE,CAAU,GACtCF,EAAgB,QAAQE,CAAU,EAGtC7P,EAAKA,EAAG,aACV,CACA,OAAO,OAAO,OAAO2P,CAAe,CACtC,CACF,EACID,GAAc,CAACnL,EAAGzL,IAAMyL,EAAE,SAAWzL,EAAE,QAAUyL,EAAE,UAAU,CAACuL,EAAGpO,IAAM6C,EAAE7C,CAAC,IAAM5I,EAAE4I,CAAC,CAAC,IAAM,GAC1FyN,GAAoB,MAGpBY,GAAe,cAAc7Y,CAAS,CACxC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,eAChB,KAAK,mBAAqB,IAAI8Y,EAChC,CACA,UAAU/X,EAAO,CACf,KAAK,oBAAsBA,EAAM,oBACjC,KAAK,wBAA0BA,EAAM,uBACvC,CACA,eAAgB,CACd,GAAI,KAAK,oBAAqB,CAC5B,IAAMgY,EAAQ,KAAK,IAAI,eAAe,EACtC,KAAK,kBAAkB,KAAK,oBAAqBA,CAAK,CACxD,CACI,KAAK,yBACP,KAAK,kBAAkB,KAAK,wBAAyB,EAAK,CAE9D,CACA,iBAAiB/I,EAAWvE,EAAUsN,EAAO,CAC3C,KAAK,mBAAmB,iBAAiB/I,EAAWvE,EAAUsN,CAAK,CACrE,CACA,oBAAoB/I,EAAWvE,EAAUsN,EAAO,CAC9C,KAAK,mBAAmB,oBAAoB/I,EAAWvE,EAAUsN,CAAK,CACxE,CACA,kBAAkBtN,EAAUsN,EAAQ,GAAO,CACzC,KAAK,mBAAmB,kBAAkBtN,EAAUsN,CAAK,CAC3D,CACA,qBAAqBtN,EAAUsN,EAAQ,GAAO,CAC5C,KAAK,mBAAmB,qBAAqBtN,EAAUsN,CAAK,CAC9D,CAEA,oBAAqB,CAAC,CACtB,cAAc1Q,EAAO,CACnB,KAAK,mBAAmB,cAAc,KAAK,IAAI,oBAAoBA,CAAK,CAAC,CAC3E,CACA,kBAAkBA,EAAO,CACvB,KAAK,mBAAmB,kBAAkB,KAAK,IAAI,oBAAoBA,CAAK,CAAC,CAC/E,CACF,EAGI2Q,IAA8B,IAAM,CACtC,IAAIA,EAAgB,MAAMA,WAAsBhZ,CAAS,CACvD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,cAClB,CACA,UAAUe,EAAO,CACf,KAAK,SAAWA,EAAM,SACtB,KAAK,YAAcA,EAAM,YACzB,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,wBAA0BA,EAAM,wBACrC,KAAK,oBAAsBA,EAAM,oBACjC,KAAK,YAAcA,EAAM,YACzB,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,aAAeA,EAAM,aAC1B,KAAK,cAAgBA,EAAM,cAC3B,KAAK,aAAeA,EAAM,aAC1B,KAAK,sBAAwBA,EAAM,qBACrC,CACA,OAAO,sBAAsBkY,EAAK,CAC5B,KAAK,cAAgB,IAGzBA,EAAI,iBAAiB,UAAWD,GAAc,kBAAkB,EAChEC,EAAI,iBAAiB,YAAaD,GAAc,kBAAkB,EACpE,CACA,OAAO,yBAAyBC,EAAK,CAC/B,KAAK,cAAgB,IACzBA,EAAI,iBAAiB,UAAWD,GAAc,kBAAkB,EAChEC,EAAI,iBAAiB,YAAaD,GAAc,kBAAkB,EACpE,CACA,OAAO,mBAAmB3Q,EAAO,CAC/B,IAAM6Q,EAAmBF,GAAc,mBACjCG,EAAkB9Q,EAAM,OAAS,UACnC8Q,IACE9Q,EAAM,SAAWA,EAAM,SAAWA,EAAM,SAI1C6Q,IAAqBC,IAGzBH,GAAc,mBAAqBG,EACrC,CACA,OAAO,6BAA6BF,EAAK,CACvCD,GAAc,yBAAyBC,CAAG,CAC5C,CACA,eAAgB,CACd,IAAMG,EAA2B,KAAK,iBAAiB,KAAK,IAAI,EAChE,KAAK,yBAAyB,CAC5B,uBAAwBA,EACxB,iBAAkB,KAAK,0BAA0B,KAAK,IAAI,EAC1D,kBAAmBA,EACnB,sBAAuBA,CACzB,CAAC,EACD,KAAK,4BAA4B,EACjC,KAAK,aAAa,UAAU1V,GAAK,CAC/B,KAAK,SAAWA,EAAE,QACpB,CAAC,CACH,CACA,6BAA8B,CAC5B,IAAMrC,EAAY,KAAK,IAAI,YAAY,EACvC2X,GAAc,sBAAsB3X,CAAS,EAC7C2X,GAAc,gBACd,KAAK,eAAe,IAAM,CACxBA,GAAc,gBACdA,GAAc,6BAA6B3X,CAAS,CACtD,CAAC,CACH,CACA,2BAA4B,CAC1B,GAAI,CAAC,KAAK,oBACR,OAEF,IAAM4N,EAAM,KAAK,oBAAoB,OAC/BoK,EAAqB,KAAK,YAAY,OAAOpK,EAAI,MAAM,CAAC,EAC1DA,IAAQoK,GACV,KAAK,iBAAiB,CAE1B,CACA,gBAAiB,CACf,OAAOL,GAAc,kBACvB,CAQA,+BAAgC,CAI9B,OAHI,KAAK,IAAI,IAAI,2BAA2B,GAAK,CAAC,KAAK,qBAGnD,KAAK,4BAA4B,KAAK,IAAI,oBAAoB,EAAGM,GAAQ,qBAAqB,EACzF,KAEF,KAAK,mBACd,CACA,iCAAkC,CAIhC,OAHI,KAAK,IAAI,IAAI,2BAA2B,GAAK,CAAC,KAAK,uBAGnD,KAAK,4BAA4B,KAAK,IAAI,oBAAoB,EAAGC,GAAuB,wBAAwB,EAC3G,KAEF,KAAK,qBACd,CACA,4BAA4BC,EAAcxN,EAAK,CAC7C,IAAIyN,EAAWD,EACf,KAAOC,GAAU,CAEf,GADa,KAAK,IAAI,WAAWA,EAAUzN,CAAG,EAE5C,MAAO,GAETyN,EAAWA,EAAS,UACtB,CACA,MAAO,EACT,CACA,gBAAiB,CACf,OAAO,KAAK,mBACd,CACA,mBAAmBC,EAAM,CACvB,OAAI,KAAK,qBAAqBA,CAAI,GAChC,WAAW,IAAM,CACf,KAAK,4BAA8B,IACrC,EAAG,CAAC,EACG,IAEF,EACT,CACA,qBAAqBtD,EAAc,CACjC,OAAI,KAAK,6BAA+B,KAC/B,GAEF,KAAK,kBAAkB,OAAOA,EAAc,KAAK,2BAA2B,CACrF,CACA,sBAAsBA,EAAc,CAC9B,KAAK,sBAAsB,EAAE,kBAAoB,UACnD,KAAK,4BAA8BA,EAEvC,CACA,qBAAsB,CACpB,GAAM,CACJ,SAAA9J,EACA,UAAA+J,EACA,OAAAvR,CACF,EAAI,KAAK,oBACH7E,EAAS,CACb,SAAAqM,EACA,UAAA+J,EACA,OAAAvR,EACA,gBAAiB,EACnB,EACM6U,EAAU,KAAK,YAAY,iBAAiB,CAChD,SAAArN,EACA,UAAA+J,CACF,CAAC,EACD,OAAIsD,IACF1Z,EAAO,gBAAkB0Z,EAAQ,YAAY,GAExC1Z,CACT,CACA,kBAAmB,CAEjB,GADA,KAAK,4BAA8B,KAC/B,KAAK,qBAAuB,KAC9B,OAEF,IAAMoI,EAAQZ,EAAA,CACZ,KAAM,oBACH,KAAK,oBAAoB,GAE9B,KAAK,oBAAsB,KAC3B,KAAK,aAAa,cAAcY,CAAK,CACvC,CACA,eAAepI,EAAQ,CACrB,GAAM,CACJ,OAAA6E,EACA,SAAAwH,EACA,UAAA+J,EACA,kBAAAuD,EAAoB,GACpB,4BAAAC,EAA8B,EAChC,EAAI5Z,EACE6Z,EAAa,KAAK,YAAY,OAAOhV,CAAM,EACjD,GAAI,CAACgV,EAAY,CACf,KAAK,oBAAsB,KAC3B,MACF,CACA,KAAK,oBAAsBA,EAAa,CACtC,SAAAxN,EACA,UAAWyN,GAAU1D,CAAS,EAC9B,OAAQyD,CACV,EAAI,KACJ,IAAMzR,EAAQb,EAAAC,EAAA,CACZ,KAAM,eACH,KAAK,oBAAoB,GAFhB,CAGZ,kBAAAmS,EACA,4BAAAC,CACF,GACA,KAAK,aAAa,cAAcxR,CAAK,CACvC,CACA,cAAc+N,EAAc,CAC1B,OAAI,KAAK,qBAAuB,KACvB,GAEF,KAAK,kBAAkB,OAAOA,EAAc,KAAK,mBAAmB,CAC7E,CACA,iBAAiBrR,EAAS,CACxB,OAAO,KAAK,aAAaA,EAAQ,SAAUA,EAAQ,SAAS,CAC9D,CACA,uBAAuBiV,EAAY,CACjC,GAAI,KAAK,uBAAyB,KAChC,MAAO,GAET,IAAMlV,EAASkV,EAAW,oBAAoB,EACxCC,EAAiBD,EAAW,YAAY,EACxChN,EAASgN,EAAW,UAAU,EAC9B,CACJ,OAAQE,EACR,eAAgBC,CAClB,EAAI,KAAK,sBACT,OAAOrV,IAAWoV,GAAiBD,IAAmBE,GAAyBnN,GAAUkN,EAAc,UAAU,CACnH,CACA,oBAAqB,CACnB,KAAK,sBAAwB,IAC/B,CACA,kBAAmB,CACjB,OAAO,KAAK,qBACd,CACA,iBAAiBD,EAAgBnV,EAAQ,CACvC,KAAK,sBAAwB,CAC3B,eAAAmV,EACA,OAAAnV,CACF,CACF,CACA,oBAAoB7E,EAAQ,CAC1B,GAAI,KAAK,IAAI,IAAI,qBAAqB,EACpC,MAAO,GAET,GAAM,CACJ,UAAA+F,EACA,QAAAoU,EACA,kBAAAC,EACA,MAAAhS,EACA,SAAAiS,EACA,oBAAAC,CACF,EAAIta,EACA,CACF,eAAAua,CACF,EAAIva,EACJ,GAAIqa,GAAY,KAAK,eAAe,6BAA6B,EAC/D,OAAO,KAAK,oBAAoBE,CAAc,EAEhD,GAAIH,EAAmB,CACrB,IAAMI,EAAkB,KAAK,iBAAiB,EACxCC,EAAiB,KAAK,wBAAwB,kBAAkB,EACtE,GAAIN,EAAS,CACX,IAAMO,EAAW,KAAK,IAAI,YAAY,iBAAiB,EACnDA,IACFH,EAAiB,KAAK,8BAA8B,CAClD,SAAAG,EACA,UAAA3U,EACA,gBAAAyU,EACA,eAAAD,EACA,eAAAE,CACF,CAAC,EAEL,KAAO,CACL,IAAMC,EAAW,KAAK,IAAI,YAAY,sBAAsB,EAC5D,GAAIA,GAAYtS,EAAO,CACrB,IAAMuS,EAAU,CACd,IAAKvS,EAAM,IACX,uBAAwBoS,EACxB,mBAAoBD,EACpB,eAAAE,EACA,MAAArS,CACF,EACAmS,EAAiBG,EAASC,CAAO,CACnC,CACF,CACF,CACA,OAAKJ,EAGE,KAAK,4BAA4B,CACtC,eAAAA,EACA,UAAAxU,EACA,MAAAqC,EACA,SAAAiS,EACA,oBAAAC,CACF,CAAC,EARQ,EASX,CACA,gCAAgCta,EAAQ,CACtC,GAAI,KAAK,IAAI,IAAI,qBAAqB,EACpC,MAAO,GAET,GAAM,CACJ,SAAA0a,EACA,eAAAH,EACA,UAAAxU,EACA,MAAAqC,CACF,EAAIpI,EACEwa,EAAkB,KAAK,iBAAiB,EACxCC,EAAiB,KAAK,wBAAwB,kBAAkB,EAChEG,EAAoB,KAAK,8BAA8B,CAC3D,SAAAF,EACA,UAAA3U,EACA,gBAAAyU,EACA,eAAAD,EACA,eAAAE,CACF,CAAC,EACD,MAAO,CAAC,CAACG,GAAqB,KAAK,4BAA4B,CAC7D,eAAgBA,EAChB,UAAA7U,EACA,MAAAqC,CACF,CAAC,CACH,CACA,8BAA8BpI,EAAQ,CACpC,GAAM,CACJ,SAAA0a,EACA,UAAA3U,EACA,gBAAAyU,EACA,eAAAD,EACA,eAAAE,CACF,EAAIza,EAOE6a,EAAaH,EANI,CACrB,UAAW3U,IAAc,SACzB,uBAAwByU,EACxB,mBAAoBD,EACpB,eAAAE,CACF,CAC0C,EAC1C,OAAII,IAAe,IAAQA,IAAe,MACpCA,IAAe,MACjB1T,EAAU,uKAAuK,EAE5KqT,GAELK,IAAe,GACV,KAEFA,CACT,CACA,4BAA4B7a,EAAQ,CAClC,GAAM,CACJ,eAAAua,EACA,UAAAxU,EACA,SAAAsU,EACA,oBAAAC,EACA,MAAAlS,CACF,EAAIpI,EACE,CACJ,OAAA6E,EACA,eAAAmV,CACF,EAAIO,EACJ,GAAIP,IAAmB,GACrB,OAAI,KAAK,eAAe,6BAA6B,EAC5C,KAAK,oBAAoBO,CAAc,EAEzC,KAAK,cAAc1V,CAAM,EAElC,KAAK,wBAAwB,eAAeA,EAAQkB,CAAS,EAE7D,IAAM+U,EADyB,KAAK,aAAa,0BAA0BjW,EAAO,UAAU,CAAC,EACjD,YAAY0V,EAAe,eAAgB1V,EAAQuD,CAAK,EACpG,OAAI0S,IAAiBR,GAAuB,MAAQD,IAClD,KAAK,wBAAwB,+BAA+BC,GAAuB,EAAE,EAEhFQ,CACT,CACA,kBAAmB,CACjB,IAAIC,EAAc,KAAK,mBAAmB,WAAW,EAAE,CAAC,EACxD,GAAI,CAACA,EACH,MAAO,GAELA,EAAY,UAAU,IACxBA,EAAc,KAAK,mBAAmB,mBAAmBA,EAAa,CAAC,GAEzE,IAAMR,EAAiB,KAAK,oBAAoB,sBAAsBQ,EAAa,CAAC,EACpF,OAAO,KAAK,oBAAoB,CAC9B,eAAAR,EACA,oBAAqB,CACvB,CAAC,CACH,CACA,gBAAgBnS,EAAO,CACrB,IAAM4R,EAAiB,KAAK,wBAAwB,kBAAkB,EAAI,EACpEnV,EAASoG,EAAM,KAAK,mBAAmB,WAAW,CAAC,EACzD,OAAO,KAAK,oBAAoB,CAC9B,eAAgB,CACd,eAAA+O,EACA,OAAAnV,CACF,EACA,oBAAqB,GACrB,MAAAuD,CACF,CAAC,CACH,CACA,2BAA2BA,EAAO,CAChC,OAAI,KAAK,eAAe,6BAA6B,EAC5C,KAAK,oBAAoB,IAAI,EAE/B,KAAK,gBAAgBA,CAAK,CACnC,CACA,kBAAmB,CACjB,MAAO,CAAC,CAAC,KAAK,mBAChB,CACA,aAAaiE,EAAU2O,EAAe,CACpC,OAAI,KAAK,qBAAuB,KACvB,GAEF,KAAK,oBAAoB,WAAa3O,GAAY,KAAK,oBAAoB,YAAcyN,GAAUkB,CAAa,CACzH,CACA,sBAAsBC,EAAUC,EAASC,EAAgB,GAAO,CAC9D,IAAMC,EAAkBC,GACpBC,EAAgBC,GAChBL,IACFI,GAAiB,KAAOJ,GAEtBC,IACFG,GAAiB,qBAEnB,IAAME,EAAQ,MAAM,UAAU,MAAM,MAAMP,EAAS,iBAAiBG,CAAe,CAAC,EAAE,OAAOrJ,GACpF0J,GAAW1J,CAAI,CACvB,EACK2J,EAAe,MAAM,UAAU,MAAM,MAAMT,EAAS,iBAAiBK,CAAa,CAAC,EACzF,OAAKI,EAAa,QAGL,CAACtO,EAAGzL,IAAMyL,EAAE,OAAOjL,GAAWR,EAAE,QAAQQ,CAAO,IAAM,EAAE,GACxDqZ,EAAOE,CAAY,EAHtBF,CAIX,CACA,UAAUP,EAAU9Z,EAAK,GAAOga,EAAgB,GAAO,CACrD,IAAMQ,EAAoB,KAAK,sBAAsBV,EAAU,KAAME,CAAa,EAC5ES,EAAUza,EAAK8J,EAAM0Q,CAAiB,EAAIA,EAAkB,CAAC,EACnE,OAAIC,GACFA,EAAQ,MAAM,CACZ,cAAe,EACjB,CAAC,EACM,IAEF,EACT,CACA,mCAAmCX,EAAUY,EAAkB,CAC7D,GAAI,CAACA,EACH,OAAO,KAET,IAAMF,EAAoB,KAAK,sBAAsBV,CAAQ,EACvDa,EAAiBH,EAAkB,QAAQE,CAAgB,EACjE,GAAIC,IAAmB,GACrB,OAAO,KAET,IAAIC,EAAoB,GACxB,QAASxR,EAAIuR,EAAiB,EAAGvR,GAAK,EAAGA,IACvC,GAAIoR,EAAkBpR,CAAC,EAAE,UAAU,SAAS,kBAAsC,EAAG,CACnFwR,EAAoBxR,EACpB,KACF,CAEF,OAAIwR,GAAqB,EAChB,KAEFJ,EAAkBI,EAAoB,CAAC,CAChD,CACA,yBAAyBd,EAAW,KAAK,SAAUe,EAAa/Z,EAAW,CACzE,IAAMD,EAAY,KAAK,sBAAsBiZ,EAAUe,EAAc,wBAA0B,IAAI,EAC7FC,EAAW,KAAK,IAAI,oBAAoB,EAC1CC,EACAF,EACFE,EAAela,EAAU,UAAU6G,GAAMA,EAAG,SAASoT,CAAQ,CAAC,EAE9DC,EAAela,EAAU,QAAQia,CAAQ,EAE3C,IAAME,EAAYD,GAAgBja,EAAY,GAAK,GACnD,OAAIka,EAAY,GAAKA,GAAana,EAAU,OACnC,KAEFA,EAAUma,CAAS,CAC5B,CACA,8BAA8BlB,EAAU5Q,EAAQ,CAC9C,GAAI,CAACA,EACH,MAAO,GAET,IAAM+R,EAAoBnB,EAAS,iBAAiB,IAAIla,GAAoB,mBAAmB,EAAE,EACjG,GAAI,CAACqb,EAAkB,OACrB,MAAO,GAET,QAAS7R,EAAI,EAAGA,EAAI6R,EAAkB,OAAQ7R,IAC5C,GAAI6R,EAAkB7R,CAAC,EAAE,SAASF,CAAM,EACtC,MAAO,GAGX,MAAO,EACT,CACA,mBAAmB0H,EAAMsK,EAAQ,EAAG,CAClC,IAAIC,EAAU,EACd,KAAOvK,GAAQwK,GAAaxK,CAAI,IAAM,MAAQ,EAAEuK,GAAWD,GACzDtK,EAAOA,EAAK,cAEd,OAAIwK,GAAaxK,CAAI,IAAM,KAClB,KAEFA,CACT,CACA,cAAclN,EAAQ5C,EAAW,CAC/B,GAAI,KAAK,IAAI,IAAI,mBAAmB,EAClC,OAAIA,EACG,KAAK,IAAI,IAAI,qBAAqB,EAGhC,KAAK,2BAA2B,GAAM,EAAI,EAFxC,KAAK,gBAAgB,EAIzB,KAAK,2BAA2B,EAAK,EAE9C,IAAMua,EAAUva,EAAY,KAAK,iBAAiB,WAAW,EAAI,KAAK,iBAAiB,YAAY,EACnG,GAAI,CAACua,EACH,MAAO,GAET,GAAM,CACJ,SAAAnQ,EACA,UAAA+J,CACF,EAAIoG,EACEC,EAAgB,KAAK,iBAAiB,EAI5C,MAHI,CAAC5X,GAAU4X,IACb5X,EAAS4X,EAAc,QAErBpQ,GAAY,MAAQ,CAACxH,EAChB,IAET,KAAK,kBAAkB,kBAAkB,CACvC,SAAAwH,EACA,OAAAxH,EACA,UAAAuR,CACF,CAAC,EACD,KAAK,eAAe,CAClB,SAAA/J,EACA,OAAAxH,EACA,UAAWiV,GAAU1D,CAAS,EAC9B,kBAAmB,EACrB,CAAC,EACD,KAAK,cAAc,eAAe,CAChC,SAAA/J,EACA,UAAA+J,EACA,OAAAvR,CACF,CAAC,EACM,GACT,CACA,2BAA2B5C,EAAWya,EAAW,GAAO,CACtD,MAAI,CAACA,GAAY,KAAK,SAAS,wBAAwBza,CAAS,EACvD,KAELya,GAAY,CAACza,GAAa,CAAC,KAAK,SAAS,aAAa,IACxD,KAAK,SAAS,yBAAyBA,CAAS,EAE3C,GACT,CACA,oBAAoB2C,EAAU,CAC5B,YAAK,0BAA4BA,GAAU,OACpC,KAAK,uBAAuB,QAAQ,EAAE,gBAAgB,GAAK,EACpE,CACA,4BAA4B3C,EAAW0a,EAAkB,CACvD,IAAM9X,GAAU8X,EAAmB,OAAS,KAAK,4BAA8B,KAAK,mBAAmB,WAAW,IAAI,CAAC,EACvH,OAAI1a,EACK,KAAK,oBAAoB,CAC9B,eAAgB,CACd,OAAA4C,EACA,eAAgB,KAAK,wBAAwB,kBAAkB,EAAI,CACrE,CACF,CAAC,EAEM,KAAK,cAAcA,CAAM,CAEpC,CACA,2BAA4B,CAC1B,KAAK,0BAA4B,MACnC,CACA,sBAAsB3B,EAAW,CAC/B,KAAK,SAAS,sBAAsBA,CAAS,CAC/C,CACA,yBAAyBA,EAAW,CAClC,KAAK,SAAS,yBAAyBA,CAAS,CAClD,CACA,sBAAsBhC,EAAY,CAChC,OAAO,KAAK,SAAS,kBAAkBA,CAAU,CACnD,CACF,EACA,OAAA6X,EAAc,mBAAqB,GACnCA,EAAc,cAAgB,EACvBA,CACT,GAAG,EACC6D,GAAe7D,GAGf8D,GAAqB,cAAc9c,CAAS,CAC9C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,oBAClB,CACA,UAAUe,EAAO,CACf,KAAK,mBAAqBA,EAAM,kBAClC,CACA,eAAgB,CACd,IAAM0K,EAAW,KAAK,qBAAqB,KAAK,IAAI,EACpD,KAAK,yBAAyB,CAC5B,wBAAyBA,EACzB,6BAA8BA,CAChC,CAAC,EACD,KAAK,2BAA2B,YAAaA,CAAQ,CACvD,CACA,sBAAuB,CACrB,IAAMsR,EAAc,KAAK,IAAI,YAAY,OAAO,EAC1CC,EAAeD,EAAc,EAAI,KAAK,mBAAmB,iBAAiB,EAC1EE,EAAgBF,EAAc,EAAI,KAAK,mBAAmB,8BAA8B,EAC1FC,GAAgB,KAAK,YACvB,KAAK,UAAYA,EACjB,KAAK,aAAa,cAAc,CAC9B,KAAM,wBACR,CAAC,GAECC,GAAiB,KAAK,aACxB,KAAK,WAAaA,EAClB,KAAK,aAAa,cAAc,CAC9B,KAAM,yBACR,CAAC,EAEL,CACA,qBAAsB,CACpB,OAAO,KAAK,UACd,CACA,oBAAqB,CACnB,OAAO,KAAK,SACd,CACF,EAGIC,GAAW,cAAcld,CAAS,CACpC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,8BAA+C,IAAI,GAC1D,CACA,UAAUe,EAAO,CACf,KAAK,MAAQA,EACb,KAAK,aAAeA,EAAM,aAC1B,KAAK,mBAAqBA,EAAM,kBAClC,CACA,QAAQoc,EAAMC,EAAUC,EAAM,CAC5B,KAAK,KAAOF,EACZ,KAAK,aAAeC,EACpB,KAAK,KAAOC,EACZ,KAAK,KAAK,aAAa,UAAW,KAAK,MAAM,EAC7C,GAAM,CACJ,mBAAAC,EACA,kBAAAC,EACA,aAAAC,EACA,sBAAAC,CACF,EAAI,KAAK,MACTH,EAAmB,cAAc,CAC/B,aAAc,IAAM,KAAK,KACzB,eAAgBtY,GAAQA,IAAS,GAAsBA,IAAS,EAChE,YAAa,IAAM,YACrB,CAAC,EACDuY,EAAkB,sCAAsCH,CAAQ,EAChE,KAAK,kBAAkB,IAAIM,GAAc,KAAK,IAAI,CAAC,EACnD,KAAK,cAAc,EACnB,IAAMC,EAAwBF,EAAsB,cAAc,KAAK,aAAc,KAAK,kBAAkB,KAAK,IAAI,CAAC,EACtH,KAAK,eAAe,IAAME,EAAsB,CAAC,EACjDH,EAAa,SAAS,WAAY,IAAI,CACxC,CACA,cAAe,CAEb,OADW,KAAK,aAAa,mBAAmB,KAAK,OAAO,CAAC,GAClD,aAAa,QAAQ,GAAG,WAAW,QAAQ,GAAK,EAC7D,CACA,sBAAuB,CACrB,IAAMzc,EAAQ,KAAK,MACnB,MAAO,CACL,mBAAoBA,EAAM,mBAAmB,sBAAsB,EACnE,4BAA6BA,EAAM,wBAAwB,oBAAoB,EAC/E,gBAAiBA,EAAM,gBAAgB,mBAAmB,EAC1D,kBAAmBA,EAAM,kBAAkB,uBAAuB,EAClE,kBAAmBA,EAAM,gBAAgB,qBAAqB,CAChE,CACF,CACA,mBAAoB,CAClB,IAAMsH,EAAQ,CACZ,KAAM,kBACN,YAAa,KAAK,aAAa,YAC/B,aAAc,KAAK,aAAa,YAClC,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,eAAgB,CACd,IAAMuV,EAAW,KAAK,IAAI,IAAI,WAAW,EAAI,SAAW,SACxD,KAAK,KAAK,YAAYA,CAAQ,CAChC,CACA,eAAgB,CACd,KAAK,KAAK,cAAc,CAC1B,CACA,QAAS,CACP,OAAO,KAAK,IACd,CACA,gBAAgBC,EAAI,CAClB,KAAK,KAAK,UAAUA,EAAK,YAAc,IAAI,CAC7C,CACA,kBAAkBA,EAAI,CACpB,KAAK,KAAK,cAAcA,EAAK,OAAS,IAAI,CAC5C,CACA,wBAAwB3b,EAAW,CACjC,IAAM4b,EAAsB,KAAK,uBAAuB,EAClD5B,EAAW,KAAK,IAAI,oBAAoB,EACxC6B,EAAeD,EAAoB,UAAU3a,GAAaA,EAAU,OAAO,EAAE,SAAS+Y,CAAQ,CAAC,EAC/F8B,EAAUD,GAAgB7b,EAAY,GAAK,GACjD,GAAI8b,EAAU,GAAKA,GAAWF,EAAoB,OAChD,MAAO,GAET,GAAIE,IAAY,EAAG,CACjB,GAAID,EAAe,EAAG,CACpB,IAAMxR,EAAa,KAAK,mBAAmB,WAAW,EAChD0R,EAAa/S,EAAMqB,CAAU,EACnC,GAAI,KAAK,aAAa,cAAc0R,EAAY,EAAI,EAClD,MAAO,EAEX,CACA,MAAO,EACT,CACA,OAAO,KAAK,eAAeH,EAAoBE,CAAO,EAAG9b,CAAS,CACpE,CACA,kBAAkBf,EAAY,CAC5B,IAAM2c,EAAsB,KAAK,uBAAuB,EAClDvR,EAAa,KAAK,mBAAmB,WAAW,EAChD2R,EAAuB,KAAK,IAAI,YAAY,uBAAuB,EACzE,GAAIA,GAAwBA,EAAqB,CAC/C,WAAY,CAAC,CAAC/c,CAChB,CAAC,EACC,MAAO,GAET,GAAIA,EAAY,CACd,GAAI2c,EAAoB,OAAS,EAC/B,OAAO,KAAK,eAAe5S,EAAM4S,CAAmB,EAAG,EAAI,EAE7D,IAAMG,EAAa/S,EAAMqB,CAAU,EACnC,GAAI,KAAK,aAAa,cAAc0R,EAAY,EAAI,EAClD,MAAO,EAEX,CACA,GAAI,KAAK,IAAI,IAAI,cAAc,IAAM,GAAK,KAAK,IAAI,IAAI,qBAAqB,EAAG,CAC7E,GAAI,KAAK,aAAa,cAAc1R,EAAW,CAAC,CAAC,EAC/C,MAAO,GAET,QAAS/B,EAAI,EAAGA,EAAIsT,EAAoB,OAAQtT,IAC9C,GAAI,KAAK,aAAa,UAAUsT,EAAoBtT,CAAC,EAAE,OAAO,CAAC,EAC7D,MAAO,GAGX,MAAO,EACT,CACA,OAAO,KAAK,aAAa,iBAAiB,CAC5C,CACA,yBAAyBpJ,EAAK,GAAO,CACnC,KAAK,KAAK,yBAAyBA,CAAE,CACvC,CACA,sBAAsB+B,EAAW,CAC/B,KAAK,8BAA8B,IAAIA,CAAS,CAClD,CACA,yBAAyBA,EAAW,CAClC,KAAK,8BAA8B,OAAOA,CAAS,CACrD,CACA,eAAejD,EAAMkB,EAAI,CACvBlB,GAAM,gBAAgB,EAAI,EAC1B,IAAM+K,EAAS,KAAK,aAAa,UAAU/K,EAAK,OAAO,EAAGkB,CAAE,EAC5D,OAAAlB,GAAM,gBAAgB,EAAK,EACpB+K,CACT,CACA,wBAAyB,CACvB,MAAO,CAAC,GAAG,KAAK,KAAK,uBAAuB,EAAG,GAAG,KAAK,8BAA8B,OAAO,CAAC,CAC/F,CACA,SAAU,CACR,KAAK,8BAA8B,MAAM,EACzC,MAAM,QAAQ,CAChB,CACF,EAGIkT,GAAW,cAAc9a,EAAa,CACxC,YAAY+Z,EAAU,CACpB,MAAM,EACN,KAAK,SAAWgB,EAChB,KAAK,QAAUA,EACf,KAAK,WAAaA,EAClB,KAAK,gBAAkBA,EACvB,KAAK,SAAWhB,CAClB,CACA,eAAgB,CACd,IAAM3a,EAAY,CAChB,cAAe,IAAM,KAAK,YAAY,IAAI,EAC1C,YAAamb,GAAY,KAAK,YAAYA,CAAQ,EAClD,yBAA0B,KAAK,yBAAyB,KAAK,IAAI,EACjE,oBAAqB,KAAK,oBAAoB,KAAK,IAAI,EACvD,uBAAwB,KAAK,uBAAuB,KAAK,IAAI,EAC7D,cAAeS,GAAS,CACtB,KAAK,OAAO,EAAE,MAAM,WAAaA,GAAwB,GACzD,KAAK,OAAO,EAAE,MAAM,iBAAmBA,GAAwB,EACjE,EACA,UAAWA,GAAS,CAClB,KAAK,OAAO,EAAE,MAAM,OAASA,GAAwB,EACvD,CACF,EACMlR,EAAO,KAAK,kBAAkB,IAAI+P,EAAU,EAC5CoB,EAAQnR,EAAK,qBAAqB,EAClCoR,EAAW,KAAK,eAAeD,CAAK,EACpCE,EAAgB,CAACC,GAAkB,GAAG,OAAO,OAAOH,CAAK,EAAE,OAAOhK,GAAK,CAAC,CAACA,CAAC,CAAC,EACjF,KAAK,YAAYiK,EAAUC,CAAa,EACxCrR,EAAK,QAAQ1K,EAAW,KAAK,SAAU,KAAK,OAAO,CAAC,EACpD,KAAK,kBAAkB,EACvB,KAAK,mBAAmB,CAEtB,aAAc,IAAG,GACjB,kBAAmBtB,GAAcgM,EAAK,kBAAkBhM,CAAU,EAClE,mCAAoC,EACtC,CAAC,CACH,CACA,mBAAoB,CAClB,IAAMkc,EAAO,KAAK,OAAO,EACzB,KAAK,SAAS,YAAYA,CAAI,EAC9B,KAAK,eAAe,IAAM,CACxB,KAAK,SAAS,YAAYA,CAAI,EAC1B,KAAK,IAAI,IAAI,OAAO,GACtBqB,GAAK,uBAAuB,CAEhC,CAAC,CACH,CACA,oBAAoBd,EAAU3d,EAAQ,CACpC,IAAM0e,EAA4B,KAAK,gBAAgB,UACvDA,EAA0B,OAAO,wBAA2C1e,EAAO,UAAU,EAC7F0e,EAA0B,OAAO,mBAAiC1e,EAAO,MAAM,EAC/E0e,EAA0B,OAAO,kBAA+B1e,EAAO,KAAK,EAC5E,KAAK,oBAAoB,wBAA2CA,EAAO,UAAU,EACrF,KAAK,oBAAoB,mBAAiCA,EAAO,MAAM,EACvE,KAAK,oBAAoB,kBAA+BA,EAAO,KAAK,CACtE,CACA,eAAeA,EAAQ,CACrB,IAAM2e,EAAY3e,EAAO,4BAA8B,0DAA4D,GAC7G4e,EAAU5e,EAAO,gBAAkB,iDAAmD,GACtF6e,EAAY7e,EAAO,kBAAoB,kCAAoC,GAC3E8e,EAAY9e,EAAO,kBAAoB,gCAAkC,GACzE+e,EAAa/e,EAAO,mBAAqB,wDAA0D,GAYzG,MAVA;AAAA,kBACc2e,CAAS;AAAA;AAAA;AAAA,sBAGLC,CAAO;AAAA;AAAA,kBAEXC,CAAS;AAAA,kBACTE,CAAU;AAAA,kBACVD,CAAS;AAAA,mBAGzB,CACA,qBAAsB,CACpB,OAAO,KAAK,eACd,CACA,yBAAyB3d,EAAK,GAAO,CACnC,GAAI,CAACA,GAAM,KAAK,YAAY,YAAY,EAAG,CACzC,KAAK,WAAW,yBAAyBA,CAAE,EAC3C,MACF,CACA,MAAM,yBAAyBA,CAAE,CACnC,CACA,wBAAyB,CACvB,IAAM0c,EAAsB,CAAC,KAAK,QAAQ,EAC1C,OAAC,KAAK,QAAS,KAAK,UAAU,EAAE,QAAQ5d,GAAQ,CAC1CA,GACF4d,EAAoB,KAAK5d,CAAI,CAEjC,CAAC,EACM4d,EAAoB,OAAOhV,GAAM4S,GAAW5S,EAAG,OAAO,CAAC,CAAC,CACjE,CACF,EAGImW,GAAsB,cAAcjf,CAAS,CAC/C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,sBAIhB,KAAK,UAAY,EACnB,CACA,UAAUe,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,aAAeA,EAAM,aAC1B,KAAK,wBAA0BA,EAAM,uBACvC,CACA,oBAAqB,CACnB,IAAIme,EAAe,KAAK,IAAI,IAAI,cAAc,GAAK,CAAC,EAC9CC,EAAmB,OAAOD,GAAiB,WAC7C,OAAOA,GAAiB,aAC1BA,EAAeA,EAAa,GAE9B,IAAME,EAAS,IAAM,OAAO,KAAK,sBAAsB,EAAE,WAAW,eAAe,CAAC,GAuBpF,OAtBaF,EAAa,IAAIG,GAAe,CAC3C,GAAI,CAACA,EAAa,CAChBC,EAAW,4CAA4C,EAClDH,GACHG,EAAW;AAAA,wDACmC,EAEhDA,EAAWF,EAAO,CAAC,EACnB,MACF,CACA,GAAI,KAAK,UAAUC,CAAW,EAC5B,OAAOA,EAET,IAAME,EAAYF,EAClB,MAAI,YAAaE,EACRA,EAAU,SAAS,KAEvBA,EAAU,KACbD,EAAW,qIAAqIF,EAAO,CAAC,EAAE,EAErJG,EAAU,IACnB,CAAC,EAAE,OAAOC,GAAO,CAAC,CAACA,GAAO,CAACA,EAAI,YAAY,CAAC,CAE9C,CACA,UAAUC,EAAK,CACb,MAAO,CAAC,CAACA,GAAO,CAAC,CAACA,EAAI,aACxB,CACA,eAAgB,CACd,IAAMC,EAAkB,KAAK,gBAAgB,KAAK,IAAI,EACtD,KAAK,yBAAyB,CAC5B,YAAaA,EACb,cAAeA,EACf,aAAcA,EACd,kBAAmBA,EACnB,cAAeA,EACf,WAAY,KAAK,gBAAgB,KAAK,IAAI,EAC1C,kBAAmB,CAAC,CAClB,MAAArX,CACF,IAAM,KAAK,cAAcA,CAAK,EAC9B,kBAAmB,CAAC,CAClB,MAAAA,CACF,IAAM,KAAK,cAAcA,CAAK,CAChC,CAAC,CACH,CAEA,UAAUA,EAAO,CACX,KAAK,WAGT,KAAK,mBAAmB,EAAE,QAAQmX,GAAO,CACnCA,EAAI,YAAY,GAGpBA,EAAI,cAAcnX,CAAK,CACzB,CAAC,CACH,CAGA,QAAQ5C,EAAU,CAChB,KAAK,UAAY,GACjBA,EAAS,EACT,KAAK,UAAY,EACnB,CACA,gBAAgBka,EAAa,CAC3B,IAAMtX,EAAQ,CACZ,KAAM,oBACN,MAAOsX,CACT,EACA,KAAK,UAAUtX,CAAK,CACtB,CACA,gBAAgBuX,EAAa,CAC3B,GAAIA,EAAY,YAAc,aAC5B,OAEF,IAAMvX,EAAQ,CACZ,KAAM,oBACN,MAAOuX,CACT,EACA,KAAK,UAAUvX,CAAK,CACtB,CACA,cAAcA,EAAO,CACnB,KAAK,QAAQ,IAAM,CACG,KAAK,aAAa,gBAAgB,EAC1C,iBAAiB,EAAE,4BAA4BA,EAAM,KAAM,EAAI,CAC7E,CAAC,CACH,CACA,iBAAiBA,EAAO,CACtB,IAAM4C,EAAS,CAAC,EAChB,OAAI5C,EAAM,QACRA,EAAM,QAAQ,QAAQvD,GAAU,CAC9BmG,EAAO,KAAKnG,CAAM,CACpB,CAAC,EACQuD,EAAM,QACf4C,EAAO,KAAK5C,EAAM,MAAM,EAEnB4C,CACT,CACA,aAAa5C,EAAO,CAClB,IAAM4C,EAAS,CAAC,EAChB,OAAI5C,EAAM,QACRA,EAAM,QAAQ,QAAQvD,GAAU,CAC9BmG,EAAO,KAAKnG,EAAO,SAAS,CAAC,CAC/B,CAAC,EACQuD,EAAM,QACf4C,EAAO,KAAK5C,EAAM,OAAO,SAAS,CAAC,EAE9B4C,CACT,CACA,cAAc5C,EAAO,CACnB,KAAK,QAAQ,IAAM,CACjB,OAAQA,EAAM,KAAM,CAClB,IAAK,cACL,IAAK,gBACL,IAAK,eACL,IAAK,gBACH,CACE,IAAMwX,EAAWxX,EACjB,KAAK,mBAAmBwX,CAAQ,EAChC,KACF,CACF,IAAK,oBACH,CACE,IAAMC,EAAmBzX,EACzB,KAAK,wBAAwByX,CAAgB,EAC7C,KACF,CACF,IAAK,qBACH1Y,EAAU,2GAA2G,EACrH,KACJ,CACF,CAAC,CACH,CACA,wBAAwB0Y,EAAkB,CACxCA,EAAiB,aAAa,QAAQC,GAAe,CACnD,IAAIC,EAAmB,KACvB,GAAID,EAAa,CACf,IAAME,EAAUF,EAAY,WAAW,EACvCC,EAAmB,KAAK,YAAY,oBAAoBC,CAAO,CACjE,CACIF,GAAe,CAACC,GAGpB,KAAK,YAAY,qBAAqBA,EAAkBD,EAAY,WAAW,EAAG,oBAAoB,CACxG,CAAC,CACH,CACA,mBAAmBF,EAAU,CAC3B,IAAMK,EAAeL,EAAS,OAC1BM,EAAc,KAIlB,GAHID,IACFC,EAAc,KAAK,YAAY,aAAaD,EAAa,SAAS,CAAC,GAEjEA,GAAgB,CAACC,EACnB,OAEF,IAAMC,EAAgB,KAAK,iBAAiBP,CAAQ,EACpD,OAAQA,EAAS,KAAM,CACrB,IAAK,cACH,CAEE,IAAMQ,EADcR,EAAS,IAAI,eAAe,EACf,IAAIS,IAAM,CACzC,MAAOA,EAAE,KACX,EAAE,EACF,KAAK,wBAAwB,iBAAiB,CAC5C,MAAOD,EACP,WAAY,EACd,EAAG,oBAAoB,CACzB,CACA,MACF,IAAK,gBACH,CAEE,IAAMA,EADcR,EAAS,IAAI,eAAe,EACf,IAAIS,IAAM,CACzC,MAAOA,EAAE,MACT,KAAMA,EAAE,IACV,EAAE,EACF,KAAK,wBAAwB,iBAAiB,CAC5C,MAAOD,CACT,EAAG,oBAAoB,CACzB,CACA,MACF,IAAK,eACH,CAEE,IAAMA,EADcR,EAAS,IAAI,eAAe,EACf,IAAIS,IAAM,CACzC,MAAOA,EAAE,MACT,OAAQA,EAAE,MACZ,EAAE,EACF,KAAK,wBAAwB,iBAAiB,CAC5C,MAAOD,CACT,EAAG,oBAAoB,CACzB,CACA,MACF,IAAK,gBACH,CACE,IAAME,EAAeV,EACfW,EAAe,CAAC,EACtBJ,EAAc,QAAQtb,GAAU,CAC9B0b,EAAa1b,EAAO,MAAM,CAAC,EAAI,CAC7B,IAAKA,EAAO,SAAS,EACrB,SAAUA,EAAO,eAAe,CAClC,CACF,CAAC,EACDyb,EAAa,aAAa,QAAQtR,GAAO,CACnCuR,EAAavR,EAAI,MAAM,CAAC,GAC1B,OAAOuR,EAAavR,EAAI,MAAM,CAAC,CAEnC,CAAC,EACD,KAAK,kBAAkB,gBAAgB,OAAO,OAAOuR,CAAY,EAAG,GAAOD,EAAa,SAAU,oBAAoB,EACtH,KACF,CACJ,CAEA,IAAME,EADc,KAAK,aAAa,gBAAgB,EACV,wBAAwB,EACpE,KAAK,mBAAmB,EAAE,QAAQjB,GAAO,CACvCA,EAAI,cAAc,2BAA4BiB,CAAuB,CACvE,CAAC,CACH,CACF,EAGIC,GAAqB,CACvB,QAASC,EACT,WAAY,kCACZ,MAAO,CAAC1B,EAAmB,CAC7B,EAGA,SAAS2B,GAAa7f,EAAOiL,EAAK,CAChC,IAAMlH,EAAS/D,EAAM,YAAY,aAAaiL,CAAG,EACjD,OAAIlH,EACKA,EAAO,UAAU,EAEnB,IACT,CACA,SAAS+b,GAAc9f,EAAO,CAC5B,OAAOA,EAAM,YAAY,cAAc,CACzC,CACA,SAAS+f,GAAiB/f,EAAOggB,EAAmB,CAC9C,OAAOA,GAAsB,SAC/BhgB,EAAM,kBAAkB,iBAAiBggB,EAAmB,KAAK,EAEjEhgB,EAAM,aAAa,gBAAgB,EAAE,iBAAiBggB,CAAiB,CAE3E,CACA,SAASC,GAAqBjgB,EAAOyO,EAAOiD,EAAU,CACpD1R,EAAM,YAAY,qBAAqByO,EAAOiD,EAAU,KAAK,CAC/D,CACA,SAASwO,GAAelgB,EAAO8K,EAAMqV,EAAY,CAC/C,OAAOngB,EAAM,mBAAmB,eAAe8K,EAAMqV,CAAU,CACjE,CACA,SAASC,GAAuBpgB,EAAO8K,EAAM,CAC3C,OAAO9K,EAAM,YAAY,oBAAoB8K,CAAI,CACnD,CACA,SAASuV,GAAwBrgB,EAAO+D,EAAQuc,EAAU,CACxD,OAAOtgB,EAAM,kBAAkB,wBAAwB+D,EAAQuc,CAAQ,GAAK,EAC9E,CACA,SAASC,GAA6BvgB,EAAOwgB,EAAaF,EAAU,CAClE,OAAOtgB,EAAM,kBAAkB,6BAA6BwgB,EAAaF,CAAQ,GAAK,EACxF,CACA,SAASG,GAAUzgB,EAAOiL,EAAK,CAC7B,OAAOjL,EAAM,YAAY,aAAaiL,CAAG,CAC3C,CACA,SAASyV,GAAW1gB,EAAO,CACzB,OAAOA,EAAM,YAAY,cAAc,CACzC,CACA,SAAS2gB,GAAiB3gB,EAAOd,EAAQ,CACvC,OAAOc,EAAM,wBAAwB,iBAAiBd,EAAQ,KAAK,CACrE,CACA,SAAS0hB,GAAe5gB,EAAO,CAC7B,OAAOA,EAAM,sBAAsB,eAAe,CACpD,CACA,SAAS6gB,GAAiB7gB,EAAO,CAC/BA,EAAM,wBAAwB,iBAAiB,KAAK,CACtD,CACA,SAAS8gB,GAAoB9gB,EAAO,CAClC,OAAOA,EAAM,wBAAwB,oBAAoB,CAC3D,CACA,SAAS+gB,GAAoB/gB,EAAOoR,EAAY,CAC9CpR,EAAM,wBAAwB,oBAAoBoR,EAAY,KAAK,CACrE,CACA,SAAS4P,GAAsBhhB,EAAO,CACpCA,EAAM,wBAAwB,sBAAsB,KAAK,CAC3D,CACA,SAASihB,GAAUjhB,EAAO,CACxB,OAAOA,EAAM,mBAAmB,cAAc,GAAKA,EAAM,mBAAmB,eAAe,CAC7F,CACA,SAASkhB,GAAclhB,EAAO,CAC5B,OAAOA,EAAM,mBAAmB,cAAc,CAChD,CACA,SAASmhB,GAAenhB,EAAO,CAC7B,OAAOA,EAAM,mBAAmB,eAAe,CACjD,CACA,SAASohB,GAAqBphB,EAAOkO,EAAK,CACxC,OAAOlO,EAAM,mBAAmB,YAAYkO,CAAG,CACjD,CACA,SAASmT,GAAsBrhB,EAAOkO,EAAK,CACzC,OAAOlO,EAAM,mBAAmB,aAAakO,CAAG,CAClD,CACA,SAASoT,GAAiBthB,EAAOiL,EAAKsW,EAAS,CAC7CvhB,EAAM,YAAY,eAAe,CAACiL,CAAG,EAAGsW,EAAS,KAAK,CACxD,CACA,SAASC,GAAkBxhB,EAAOyhB,EAAMF,EAAS,CAC/CvhB,EAAM,YAAY,eAAeyhB,EAAMF,EAAS,KAAK,CACvD,CACA,SAASG,GAAgB1hB,EAAOiL,EAAKgB,EAAQ,CAC3CjM,EAAM,YAAY,cAAc,CAACiL,CAAG,EAAGgB,EAAQ,KAAK,CACtD,CACA,SAAS0V,GAAiB3hB,EAAOyhB,EAAMxV,EAAQ,CAC7CjM,EAAM,YAAY,cAAcyhB,EAAMxV,EAAQ,KAAK,CACrD,CACA,SAAS2V,GAAkB5hB,EAAO,CAChC,OAAOA,EAAM,YAAY,QAAQ,CACnC,CACA,SAAS6hB,GAAwB7hB,EAAO,CACtC,OAAOA,EAAM,mBAAmB,YAAY,CAC9C,CACA,SAAS8hB,GAA0B9hB,EAAO,CACxC,OAAOA,EAAM,mBAAmB,cAAc,CAChD,CACA,SAAS+hB,GAAyB/hB,EAAO,CACvC,OAAOA,EAAM,mBAAmB,aAAa,CAC/C,CACA,SAASgiB,GAAuBhiB,EAAO,CACrC,OAAOA,EAAM,mBAAmB,WAAW,CAC7C,CACA,SAASiiB,GAA8BjiB,EAAO,CAC5C,OAAOA,EAAM,sBAAsB,mBAAmB,CACxD,CACA,SAASkiB,GAAWliB,EAAOiL,EAAKsE,EAAS,CACvCvP,EAAM,kBAAkB,YAAY,CAACiL,CAAG,EAAGsE,EAAS,KAAK,CAC3D,CACA,SAAS4S,GAAkBniB,EAAOoiB,EAAW7S,EAAS,CACpDvP,EAAM,kBAAkB,kBAAkBoiB,EAAW7S,EAAS,KAAK,CACrE,CACA,SAAS8S,GAAariB,EAAOsiB,EAAmB/S,EAAS,CACvDvP,EAAM,kBAAkB,YAAYsiB,EAAmB/S,EAAS,KAAK,CACvE,CACA,SAASgT,GAAeviB,EAAOiL,EAAKuX,EAAU7W,EAAW,GAAMqD,EAAS,MAAO,CAC7EhP,EAAM,kBAAkB,gBAAgB,CAAC,CACvC,IAAAiL,EACA,SAAAuX,CACF,CAAC,EAAG,GAAO7W,EAAUqD,CAAM,CAC7B,CACA,SAASyT,GAAgBziB,EAAOyf,EAAc9T,EAAW,GAAMqD,EAAS,MAAO,CAC7EhP,EAAM,kBAAkB,gBAAgByf,EAAc,GAAO9T,EAAUqD,CAAM,CAC/E,CACA,SAAS0T,GAA6B1iB,EAAO,CAC3C,OAAOA,EAAM,mBAAmB,YAAY,CAC9C,CACA,SAAS2iB,GAA+B3iB,EAAO,CAC7C,OAAOA,EAAM,mBAAmB,cAAc,CAChD,CACA,SAAS4iB,GAA8B5iB,EAAO,CAC5C,OAAOA,EAAM,mBAAmB,aAAa,CAC/C,CACA,SAAS6iB,GAA4B7iB,EAAO,CAC1C,OAAOA,EAAM,mBAAmB,YAAY,CAC9C,CACA,SAAS8iB,GAAe9iB,EAAOiL,EAAK8X,EAAY,CAC9C,OAAO/iB,EAAM,sBAAsB,aAAa,CAC9C,QAAS,CAACiL,CAAG,EACb,WAAA8X,EACA,OAAQ,KACV,CAAC,CACH,CACA,SAASC,GAAgBhjB,EAAOyhB,EAAMsB,EAAY,CAChD/iB,EAAM,sBAAsB,aAAa,CACvC,QAASyhB,EACT,WAAAsB,EACA,OAAQ,KACV,CAAC,CACH,CACA,SAASE,GAAmBjjB,EAAO+iB,EAAY,CAC7C/iB,EAAM,sBAAsB,mBAAmB,MAAO+iB,CAAU,CAClE,CAGA,IAAIG,GAAoB,CACtB,QAAS,UACT,SAAU,WACV,MAAO,QACP,MAAO,QACP,IAAK,MACL,KAAM,OACN,KAAM,OACN,OAAQ,SACR,UAAW,YACX,QAAS,UACT,SAAU,WACV,SAAU,UACZ,EACIC,GAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,UAAU,EACtIC,GAAkB,cAAcnkB,CAAS,CAC3C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,kBAChB,KAAK,oBAAsB,CAAC,EAC5B,KAAK,oBAAsB,GAC3B,KAAK,0CAA4C,GAEjD,KAAK,mCAAqC,CAAC,EAC3C,KAAK,sCAAwC,CAAC,CAChD,CACA,UAAUe,EAAO,CACf,KAAK,SAAWA,EAAM,SACtB,KAAK,YAAcA,EAAM,YACzB,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,aAAeA,EAAM,aAC1B,KAAK,wBAA0BA,EAAM,uBACvC,CACA,eAAgB,CACd,KAAK,qBAAuB,KAAK,IAAI,IAAI,sBAAsB,EAC/D,KAAK,2BAA2B,uBAAwB,IAAM,CAC5D,KAAK,qBAAuB,KAAK,IAAI,IAAI,sBAAsB,CACjE,CAAC,EACD,KAAK,2BAA2B,EAChC,KAAK,2BAA2B,sBAAuBsH,GAAS,CAC9D,KAAK,2BAA2B,EAChC,KAAK,YAAY,mBAAmB+b,GAAkB/b,EAAM,MAAM,CAAC,CACrE,CAAC,CACH,CACA,4BAA6B,CAC3B,IAAMgc,EAAmB,KAAK,oBAAoB,EAClD,KAAK,oBAAsB,CAAC,EAC5B,KAAK,iBAAmB,CAAC,EACzB,IAAMC,EAA0BC,GACvBtkB,GAAU,CACf,GAAM,CACJ,OAAA6E,EACA,KAAAkN,EACA,MAAAqM,CACF,EAAIpe,EACAukB,EAAiB1f,EAAO,UAAU,EAAE,eACxC,OAAI0f,IAAmBD,EAAmB,0BACxCC,EAAiBD,EAAmB,gBAE/B,KAAK,aAAa,YAAYzf,EAAQkN,EAAMqM,EAAOmG,CAAc,CAC1E,EAEF,OAAO,QAAQH,CAAgB,EAAE,QAAQ,CAAC,CAACI,EAAcF,CAAkB,IAAM,CAC/E,IAAMG,EAA2Bld,EAAAC,EAAA,GAC5B8c,GAD4B,CAE/B,wBAAyB,KAAK,8BAA8BA,CAAkB,CAChF,GACA,KAAK,oBAAoBE,CAAY,EAAIC,EACzC,KAAK,iBAAiBD,CAAY,EAAIH,EAAwBI,CAAwB,CACxF,CAAC,EACD,IAAMC,EAAsB,KAAK,IAAI,IAAI,qBAAqB,GAAK,CAAC,EACpE,KAAK,iBAAmB,CAAC,EACzB,OAAO,QAAQA,CAAmB,EAAE,QAAQ,CAAC,CAACF,EAAcF,CAAkB,IAAM,CAClF,IAAMG,EAA2B,KAAK,0BAA0BH,EAAoBI,EAAqB,CAACF,CAAY,EAAGJ,CAAgB,EACrIK,IACF,KAAK,oBAAoBD,CAAY,EAAIC,EACrCH,EAAmB,kBACrB,KAAK,iBAAiBE,CAAY,EAAIF,EAAmB,iBAE3D,KAAK,iBAAiBE,CAAY,EAAIH,EAAwBI,CAAwB,EAE1F,CAAC,EACD,KAAK,yBAAyBL,CAAgB,EAC9C,CAAC,aAAc,OAAQ,SAAU,UAAW,MAAM,EAAE,QAAQI,GAAgB,CAC1E,IAAMG,EAA4B,KAAK,iBAAiBH,CAAY,EAChEG,GACF,OAAO,KAAK,iBAAiBH,CAAY,EAE3C,KAAK,iBAAiBA,CAAY,EAAIG,GAA6BP,EAAiBI,CAAY,EAAE,eACpG,CAAC,CACH,CACA,yBAAyBI,EAA0BC,EAAyB,CAC1E,IAAMJ,EAA2Bjd,IAAA,GAC5Bod,GACAC,GAEL,OAAID,EAAyB,aAAeC,EAAwB,aAAeA,EAAwB,oBACzGJ,EAAyB,YAAc,CAAC,GAAGK,GAAmBF,EAAyB,WAAW,EAAG,GAAGE,GAAmBD,EAAwB,WAAW,CAAC,GAE1JJ,CACT,CACA,0BAA0BH,EAAoBI,EAAqBK,EAA2BX,EAAkB,CAC9G,IAAIK,EACEO,EAAsBV,EAAmB,gBAI/C,GAHIA,EAAmB,cACrB,KAAK,0CAA4C,IAE/CA,EAAmB,kBAAoBA,EAAmB,aAAc,CAC1E,IAAIW,EAAyBb,EAAiBY,CAAmB,EAC3DE,EAAmCR,EAAoBM,CAAmB,EAIhF,GAHIC,GAA0BC,IAC5BD,EAAyBC,GAEvB,CAAC,KAAK,2BAA2BZ,EAAoBW,EAAwBD,CAAmB,EAClG,OAEFP,EAA2B,KAAK,yBAAyBQ,EAAwBX,CAAkB,CACrG,KAAO,CACL,GAAIS,EAA0B,SAASC,CAAmB,EAAG,CAC3D7d,EAAU,2GAA2G,EACrH,MACF,CACA,IAAMge,EAA6BT,EAAoBM,CAAmB,EAC1E,GAAI,CAAC,KAAK,2BAA2BV,EAAoBa,EAA4BH,CAAmB,EACtG,OAEF,IAAMI,EAAmC,KAAK,0BAA0BD,EAA4BT,EAAqB,CAAC,GAAGK,EAA2BC,CAAmB,EAAGZ,CAAgB,EAC9L,GAAI,CAACgB,EACH,OAEFX,EAA2B,KAAK,yBAAyBW,EAAkCd,CAAkB,CAC/G,CACA,OAAO/c,EAAAC,EAAA,GACFid,GADE,CAEL,wBAAyB,KAAK,8BAA8BA,CAAwB,CACtF,EACF,CACA,2BAA2BH,EAAoBM,EAA0BS,EAAoB,CAC3F,OAAKT,EAIDA,EAAyB,eAAiBN,EAAmB,cAC/Dnd,EAAU,sFAAsF,EACzF,IAEF,IAPLA,EAAU,4BAA4Bke,CAAkB,kBAAkB,EACnE,GAOX,CACA,8BAA8Bf,EAAoB,CAChD,GAAKA,EAAmB,eAGxB,OAAOtkB,GAAU,CACf,GAAIA,EAAO,MAAM,MAAO,CACtB,IAAMgR,EAAUhR,EAAO,OAAO,WAAW,EACzC,GAAIgR,EAAS,CACX,GAAIA,IAAY,SAAWA,IAAY,OACrC,OAAOsT,EAAmB,eAAetkB,CAAM,EAEjD,GAAIskB,EAAmB,eAAiB,UAAYtT,IAAY,QAAS,CACvE,GAAI,OAAOhR,EAAO,OAAU,SAC1B,OAAOskB,EAAmB,eAAetkB,CAAM,EAEjD,GAAI,OAAOA,EAAO,OAAU,SAAU,CACpC,GAAI,CAACA,EAAO,MACV,OAEF,GAAI,aAAcA,EAAO,MACvB,OAAOskB,EAAmB,eAAe/c,EAAAC,EAAA,GACpCxH,GADoC,CAEvC,MAAOA,EAAO,MAAM,SAAS,CAC/B,EAAC,EAEH,GAAI,UAAWA,EAAO,MACpB,OAAOskB,EAAmB,eAAe/c,EAAAC,EAAA,GACpCxH,GADoC,CAEvC,MAAOA,EAAO,MAAM,KACtB,EAAC,CAEL,CACF,CACF,CACA,GAAI,CAAC,KAAK,IAAI,IAAI,gCAAgC,EAChD,MAEJ,SAAW,KAAK,sBAAwBA,EAAO,OAAO,iBAAiB,EAAG,CACxE,GAAI,OAAOA,EAAO,OAAU,UAAYskB,EAAmB,kBAAkBtkB,EAAO,KAAK,EACvF,OAAOskB,EAAmB,eAAetkB,CAAM,EAEjD,GAAI,CAAC,KAAK,IAAI,IAAI,gCAAgC,EAChD,MAEJ,CACA,OAAOskB,EAAmB,eAAetkB,CAAM,CACjD,CACF,CACA,6BAA6BiP,EAAQqW,EAAYC,EAAO,CACtD,GAAI,CACF,aAAAf,CACF,EAAIc,EACE,CACJ,MAAAE,CACF,EAAIF,EAOJ,GANId,IAAiB,SACnBA,EAAevV,EAAO,eAEpBuV,GAAgB,MAAQA,IAAiB,MAC3CA,EAAe,KAAK,qBAAqBvV,EAAQqW,CAAU,EAAI,KAAK,kBAAkBE,EAAOD,CAAK,EAAI,IAEpG,CAACf,EAAc,CACjBvV,EAAO,aAAe,GACtB,MACF,CACA,IAAMqV,EAAqB,KAAK,oBAAoBE,CAAY,EAChE,GAAI,CAACF,EAAoB,CACvBnd,EAAU,mCAAmCqd,CAAY,GAAG,EAC5D,MACF,CACA,OAAAvV,EAAO,aAAeuV,EAClBF,EAAmB,0BACrBrV,EAAO,eAAiBqV,EAAmB,yBAEzCA,EAAmB,cACrBrV,EAAO,YAAcqV,EAAmB,aAErCA,EAAmB,2BACtB,KAAK,mCAAmCrV,EAAQuV,EAAcF,EAAoBiB,CAAK,EAElFjB,EAAmB,WAC5B,CACA,mBAAmBzf,EAAQ,CACzB,GAAI,CAAC,KAAK,oBACR,OAEF,IAAM4gB,EAAqB,KAAK,mCAAmC5gB,EAAO,SAAS,CAAC,EACpF,GAAI,CAAC4gB,EACH,OAEF,IAAMC,EAAiBtd,GAAS,CAC9Bqd,EAAmB,IAAIrd,EAAM,GAAG,CAClC,EACAvD,EAAO,iBAAiB,qBAAsB6gB,CAAc,EAC5D,KAAK,sCAAsC,KAAK,IAAM7gB,EAAO,oBAAoB,qBAAsB6gB,CAAc,CAAC,CACxH,CACA,qBAAqBzW,EAAQqW,EAAY,CACvC,GAAI,KAAK,SAAS,QAAQ,IAAM,aAC9B,MAAO,GAET,IAAMK,EAA2B,CAC/B,aAAc,GACd,YAAa,GACb,YAAa,GACb,QAAS,EACX,EACA,GAAI,KAAK,8BAA8BL,EAAYK,CAAwB,EACzE,MAAO,GAET,IAAMC,EAAcN,EAAW,OAAS,KAAOrW,EAAO,KAAOqW,EAAW,KACxE,GAAIM,EAAa,CACf,IAAMC,EAAiB,KAAK,IAAI,IAAI,aAAa,GAAK,CAAC,EAKvD,GAJoCf,GAAmBc,CAAW,EAAE,KAAKE,GAAc,CACrF,IAAMC,EAAgBF,EAAeC,EAAW,KAAK,CAAC,EACtD,OAAOC,GAAiB,KAAK,8BAA8BA,EAAeJ,CAAwB,CACpG,CAAC,EAEC,MAAO,EAEX,CACA,MAAO,CAAC,KAAK,8BAA8B1W,EAAQ0W,CAAwB,CAC7E,CACA,8BAA8B1W,EAAQ0W,EAA0B,CAC9D,MAAO,CAAC,CAAC,eAAgB,yBAAyB,EAAG,CAAC,cAAe,MAAM,EAAG,CAAC,cAAe,MAAM,EAAG,CAAC,UAAW,MAAM,CAAC,EAAE,KAAK,CAAC,CAACnX,EAAMwX,CAAe,IAAM,KAAK,+BAA+B/W,EAAQ0W,EAA0BnX,EAAMwX,CAAe,CAAC,CAC5P,CACA,+BAA+B/W,EAAQgX,EAAYzX,EAAMwX,EAAiB,CACxE,GAAI,CAACC,EAAWzX,CAAI,EAClB,MAAO,GAET,IAAM4P,EAAQnP,EAAOT,CAAI,EACzB,OAAI4P,IAAU,MACZ6H,EAAWzX,CAAI,EAAI,GACZ,IAEAwX,IAAoB,OAAS,CAAC,CAAC5H,EAAQA,IAAU4H,CAE5D,CACA,kBAAkBR,EAAOD,EAAO,CAC9B,GAAI,CAACC,EACH,OAEF,IAAIpH,EACE8H,EAAc,KAAK,eAAe,EACxC,GAAIA,EAAa,CACf,IAAMC,EAAoBX,EAAM,QAAQ,GAAG,GAAK,GAAK,CAAC,KAAK,IAAI,IAAI,0BAA0B,EAC7FpH,EAAQgI,GAAoBF,EAAaV,EAAOW,CAAiB,CACnE,MACE,KAAK,mBAAmBZ,CAAK,EAE/B,GAAInH,GAAS,KACX,OAEF,GAAM,CAACoG,CAAY,EAAI,OAAO,QAAQ,KAAK,gBAAgB,EAAE,KAAK,CAAC,CAAC6B,EAAeC,CAAe,IAAMA,EAAgBlI,CAAK,CAAC,GAAK,CAAC,QAAQ,EAC5I,OAAOoG,CACT,CACA,gBAAiB,CACf,IAAM+B,EAAU,KAAK,IAAI,IAAI,SAAS,EACtC,GAAIA,GAAS,OACX,OAAOA,EAAQ,CAAC,EACX,GAAI,KAAK,YACd,OAAO,KAAK,YACP,CACL,IAAMC,EAAW,KAAK,SAAS,YAAY,EAAE,gBAC7C,GAAIA,GAAU,OACZ,OAAOA,EAAS,CAAC,EAAE,IAEvB,CACA,OAAO,IACT,CACA,mBAAmBjB,EAAO,CAExB,GADA,KAAK,mCAAmCA,CAAK,EAAmB,IAAI,IAChE,KAAK,oBACP,OAEF,KAAK,oBAAsB,GAC3B,IAAMkB,EAA2B,KAAK,0CAClCA,GACF,KAAK,YAAY,sBAAsB,EAEzC,GAAM,CAACzd,CAAW,EAAI,KAAK,yBAAyB,CAClD,qBAAsBZ,GAAS,CAC7B,GAAM,CACJ,aAAAse,CACF,EAAIte,EACJ,GAAI,CAACse,EACH,OAEF1d,IAAc,EACd,KAAK,oBAAsB,GAC3B,KAAK,+BAA+B0d,EAAcD,CAAwB,EAC1E,KAAK,mCAAqC,CAAC,EACvCA,GACF,KAAK,YAAY,wBAAwB,EAE3C,IAAME,EAAyB,CAC7B,KAAM,mBACR,EACA,KAAK,aAAa,cAAcA,CAAsB,CACxD,CACF,CAAC,CACH,CACA,oBAAqB,CACnB,OAAO,KAAK,mBACd,CACA,+BAA+BD,EAAcD,EAA0B,CACrE,KAAK,YAAcC,EACnB,IAAME,EAAQ,CAAC,EACf,KAAK,kCAAkC,EACvC,IAAMC,EAAqC,CAAC,EACtCC,EAAkC,CAAC,EACzC,OAAO,QAAQ,KAAK,kCAAkC,EAAE,QAAQ,CAAC,CAACvB,EAAOE,CAAkB,IAAM,CAC/F,IAAM5gB,EAAS,KAAK,YAAY,OAAO0gB,CAAK,EAC5C,GAAI,CAAC1gB,EACH,OAEF,IAAMkiB,EAAYliB,EAAO,UAAU,EACnC,GAAI,CAAC,KAAK,YAAY,mBAAmBA,EAAQ,sBAAsB,EACrE,OAEF,IAAMmiB,EAAYniB,EAAO,UAAU,EACnC,GAAI4hB,GAA4BO,EAAU,MAAQA,EAAU,OAASD,EAAU,KAAM,CACnF,IAAME,EAAqB,KAAK,sBAAsBpiB,EAAQ4gB,CAAkB,EAC5EwB,EAAmB,UAAYA,EAAmB,eAAiB,OACrEJ,EAAmCtB,CAAK,EAAI0B,GAE1CA,EAAmB,OAASA,EAAmB,YAAc,OAC/DH,EAAgCvB,CAAK,EAAI0B,GAE3CL,EAAM,KAAKK,CAAkB,CAC/B,CACF,CAAC,EACGR,GACFG,EAAM,KAAK,GAAG,KAAK,gBAAgB,8CAA8CC,EAAoCC,CAA+B,CAAC,EAEnJF,EAAM,QACR,KAAK,wBAAwB,iBAAiB,CAC5C,MAAAA,CACF,EAAG,sBAAsB,EAE3B,KAAK,YAAc,IACrB,CACA,sBAAsB/hB,EAAQ4gB,EAAoB,CAChD,IAAMyB,EAAc,KAAK,wBAAwB,yBAAyBriB,CAAM,EAChF,OAAA4gB,EAAmB,QAAQ1Z,GAAO,CAChC,OAAOmb,EAAYnb,CAAG,EAClBA,IAAQ,WACV,OAAOmb,EAAY,cACVnb,IAAQ,SACjB,OAAOmb,EAAY,UAEvB,CAAC,EACMA,CACT,CACA,yBAAyB9C,EAAkB,CACzC,IAAM+C,EAAmC,KAAK,oBAAoB,OAC5DC,EAAkChD,EAAiB,OACzD,KAAK,qBAAuB+C,EAAiC,cAAgBC,EAAgC,YAC7G,KAAK,wBAA0BD,EAAiC,iBAAmBC,EAAgC,cACrH,CACA,4BAA4BviB,EAAQ,CAClC,OAAKA,EAGE,KAAK,sBAAsBA,CAAM,GAAK,KAAK,oBAAoB,WAF7D,KAAK,oBAAoB,UAGpC,CACA,sBAAsBA,EAAQ,CAC5B,OAAO,KAAK,4BAA4BA,CAAM,EAAE,UAClD,CACA,yBAAyBA,EAAQ,CAC/B,OAAO,KAAK,4BAA4BA,CAAM,EAAE,aAClD,CACA,sBAAsBA,EAAQ,CAC5B,IAAMoK,EAASpK,EAAO,UAAU,EAChC,GAAKoK,EAAO,aAGZ,OAAO,KAAK,oBAAoBA,EAAO,YAAY,CACrD,CACA,gBAAgBpK,EAAQ,CACtB,OAAO,KAAK,sBAAsBA,CAAM,GAAG,YAC7C,CACA,UAAUA,EAAQuZ,EAAO,CACvB,GAAIA,GAAS,KACX,MAAO,GAET,IAAMkI,EAAkB,KAAK,sBAAsBzhB,CAAM,GAAG,gBAC5D,OAAKyhB,EAGEA,EAAgBlI,CAAK,EAFnB,EAGX,CACA,eAAenP,EAAQ,CACjBA,EAAO,eAAiB,WACtBA,EAAO,iBAAmB,KAAK,oBAAoB,OAAO,yBAA2B,CAAC,KAAK,yBAC7F9H,EAAU,kLAAkL,EAE1L8H,EAAO,UAAYA,EAAO,cAAgB,KAAK,oBAAoB,OAAO,aAAe,CAAC,KAAK,sBACjG9H,EAAU,yKAAyK,EAGzL,CACA,eAAeqd,EAAc,CAC3B,OAAO,KAAK,iBAAiBA,CAAY,CAC3C,CACA,mCAAmCvV,EAAQuV,EAAcF,EAAoBiB,EAAO,CAClF,IAAM8B,EAAc,KAAK,iBAAiB7C,CAAY,EAChD8C,EAAiBC,EAAe,eAAe,iCAAwD,KAAK,MAAM,EAClHC,EAAY,KAAK,cAAc,kBAAkB,EACjDC,EAAoBznB,GAAU,CAClC,GAAM,CACJ,aAAA0nB,CACF,EAAIzY,EACJA,EAAO,aAAe,OAAOyY,GAAiB,SAAWlgB,IAAA,GACpDkgB,GACA1nB,GACDA,CACN,EACA,OAAQskB,EAAmB,aAAc,CACvC,IAAK,SACH,CACErV,EAAO,WAAa,qBAChBqY,GACFG,EAAkB,CAChB,WAAY,CAAC,EAAG9lB,IAAM,CACpB,IAAMgmB,EAAO,GAAK,KAAO,EAAI,SAAS,CAAC,EACjCC,EAAOjmB,GAAK,KAAO,EAAI,SAASA,CAAC,EACvC,OAAIgmB,IAASC,EAAa,EACnBD,EAAOC,EAAO,EAAI,EAC3B,CACF,CAAC,EAEH,KACF,CACF,IAAK,UACH,CACE3Y,EAAO,WAAa,uBACpBA,EAAO,aAAe,yBACtBA,EAAO,sBAAwBjP,GAAU,CAAC,CAACA,EAAO,OAAO,UAAYA,EAAO,MAAM,MAAQqI,EAAQ,MAEhGof,EADEH,EACgB,CAChB,eAAgBtnB,GACT0H,EAAQ1H,EAAO,KAAK,EAGlBwnB,EAAU,OAAOxnB,EAAO,KAAK,EAAGA,EAAO,MAAQ,OAAS,OAAO,EAF7DwnB,EAAU,SAAU,UAAU,CAI3C,EAEkB,CAChB,iBAAkB,EAClB,WAAY,EACZ,cAAe,CAAC,QAAS,CACvB,WAAY,OACZ,YAAa,OACb,UAAW,CAACK,EAAeC,IAAcA,EACzC,eAAgB,CAClB,EAAG,CACD,WAAY,QACZ,YAAa,QACb,UAAW,CAACD,EAAeC,IAAcA,IAAc,GACvD,eAAgB,CAClB,CAAC,CACH,CAhBC,EAkBH,KACF,CACF,IAAK,OACH,CACE7Y,EAAO,WAAa,mBACpBA,EAAO,WAAaoY,EAChBC,GACFG,EAAkB,CAChB,eAAgBznB,GAAU,CACxB,IAAM+nB,EAAiBV,EAAYrnB,CAAM,EACzC,OAAO0H,EAAQqgB,CAAc,EAAIA,EAAiBP,EAAU,SAAU,UAAU,CAClF,EACA,SAAU,GACV,kBAAmB,CAACQ,EAASC,IAAU,CACrC,GAAIA,IAAU,GAAKD,GAAW,KAAM,CAClC,IAAME,EAAWjE,GAAW,OAAO+D,CAAO,EAAI,CAAC,EAC/C,OAAOR,EAAUU,EAAUlE,GAAkBkE,CAAQ,CAAC,CACxD,CACA,OAAOF,GAAWR,EAAU,SAAU,UAAU,CAClD,CACF,CAAC,EAEH,KACF,CACF,IAAK,aACH,CACEvY,EAAO,WAAa,yBACpBA,EAAO,WAAaoY,EACpB,IAAMc,EAAgB7D,EAAmB,WAEvCmD,EADEH,EACgB,CAChB,eAAgBtnB,GAAU,CACxB,IAAM+nB,EAAiBV,EAAYrnB,CAAM,EACzC,OAAO0H,EAAQqgB,CAAc,EAAIA,EAAiBP,EAAU,SAAU,UAAU,CAClF,EACA,SAAU,GACV,mBAAoBpJ,GAAS,CAC3B,IAAMgK,EAAOD,EAAc/J,GAAS,MAAM,EAC1C,OAAOgK,EAAO,CAAC,OAAOA,EAAK,YAAY,CAAC,EAAG,OAAOA,EAAK,SAAS,EAAI,CAAC,EAAG,OAAOA,EAAK,QAAQ,CAAC,CAAC,EAAI,IACpG,EACA,kBAAmB,CAACJ,EAASC,IAAU,CACrC,GAAIA,IAAU,GAAKD,GAAW,KAAM,CAClC,IAAME,EAAWjE,GAAW,OAAO+D,CAAO,EAAI,CAAC,EAC/C,OAAOR,EAAUU,EAAUlE,GAAkBkE,CAAQ,CAAC,CACxD,CACA,OAAOF,GAAWR,EAAU,SAAU,UAAU,CAClD,CACF,EAEkB,CAChB,WAAY,CAACa,EAAYP,IAAc,CACrC,IAAMQ,EAAaH,EAAcL,CAAS,EAC1C,OAAIA,GAAa,MAAQQ,EAAaD,EAC7B,GAELC,EAAaD,EACR,EAEF,CACT,CACF,CAbC,EAeH,KACF,CACF,IAAK,SACH,CACEpZ,EAAO,iBAAmB,CACxB,aAAc,EAChB,EACAA,EAAO,WAAa,CAAC,EAAGtN,IAAM,CAC5B,IAAMkD,EAAS,KAAK,YAAY,aAAa0gB,CAAK,EAC5CgD,EAAU1jB,GAAQ,UAAU,EAClC,GAAI,CAACA,GAAU,CAAC0jB,EACd,MAAO,GAET,IAAMZ,EAAO,GAAK,KAAO,GAAKN,EAAY,CACxC,OAAAxiB,EACA,KAAM,KACN,MAAO,CACT,CAAC,EACK+iB,EAAOjmB,GAAK,KAAO,GAAK0lB,EAAY,CACxC,OAAAxiB,EACA,KAAM,KACN,MAAOlD,CACT,CAAC,EACD,OAAIgmB,IAASC,EAAa,EACnBD,EAAOC,EAAO,EAAI,EAC3B,EACA3Y,EAAO,WAAaoY,EAChBC,EACFG,EAAkB,CAChB,eAAgBznB,GAAU,CACxB,IAAM+nB,EAAiBV,EAAYrnB,CAAM,EACzC,OAAO0H,EAAQqgB,CAAc,EAAIA,EAAiBP,EAAU,SAAU,UAAU,CAClF,CACF,CAAC,EAEDvY,EAAO,kBAAoBjP,GAAUqnB,EAAY,CAC/C,OAAQrnB,EAAO,OACf,KAAMA,EAAO,KACb,MAAO,KAAK,aAAa,SAASA,EAAO,OAAQA,EAAO,IAAI,CAC9D,CAAC,EAEH,KACF,CACJ,CACF,CACA,qBAAsB,CACpB,IAAMwoB,EAA2BpK,GAAS,CAAC,CAACA,EAAM,MAAM,wBAAwB,EAC1EoJ,EAAY,KAAK,cAAc,kBAAkB,EACvD,MAAO,CACL,OAAQ,CACN,aAAc,SAEd,YAAaxnB,GAAUA,EAAO,UAAU,OAAO,IAAM,GAAK,KAAO,OAAOA,EAAO,QAAQ,EACvF,eAAgBA,GACVA,EAAO,OAAS,KACX,GAEL,OAAOA,EAAO,OAAU,UAAY,MAAMA,EAAO,KAAK,EACjDwnB,EAAU,gBAAiB,gBAAgB,EAE7C,OAAOxnB,EAAO,KAAK,EAE5B,gBAAiBoe,GAAS,OAAOA,GAAU,QAC7C,EACA,KAAM,CACJ,aAAc,OACd,YAAape,GAAUA,EAAO,WAAa,GAAK,KAAOyoB,GAAgBzoB,EAAO,QAAQ,EACtF,gBAAiBoe,GAAS,OAAOA,GAAU,QAC7C,EACA,QAAS,CACP,aAAc,UACd,YAAape,GACPA,EAAO,UAAY,KACdA,EAAO,SAETA,EAAO,UAAU,OAAO,IAAM,GAAK,KAAO,OAAOA,EAAO,QAAQ,EAAE,YAAY,IAAM,OAE7F,eAAgBA,GAAUA,EAAO,OAAS,KAAO,GAAK,OAAOA,EAAO,KAAK,EACzE,gBAAiBoe,GAAS,OAAOA,GAAU,SAC7C,EACA,KAAM,CACJ,aAAc,OACd,YAAape,GAAU0oB,EAAyB1oB,EAAO,UAAY,KAAO,KAAO,OAAOA,EAAO,QAAQ,CAAC,EACxG,eAAgBA,GACVA,EAAO,OAAS,KACX,GAEL,EAAEA,EAAO,iBAAiB,OAAS,MAAMA,EAAO,MAAM,QAAQ,CAAC,EAC1DwnB,EAAU,cAAe,cAAc,EAEzCmB,GAAe3oB,EAAO,MAAO,EAAK,GAAK,GAEhD,gBAAiBoe,GAASA,aAAiB,IAC7C,EACA,WAAY,CACV,aAAc,aACd,WAAYA,GAASsK,EAAyBtK,CAAK,GAAK,OACxD,cAAeA,GAASuK,GAAevK,GAAS,KAAM,EAAK,GAAK,OAChE,YAAape,GAAUwoB,EAAyB,OAAOxoB,EAAO,QAAQ,CAAC,EAAIA,EAAO,SAAW,KAC7F,eAAgBA,GAAUwoB,EAAyB,OAAOxoB,EAAO,KAAK,CAAC,EAAIA,EAAO,MAAQ,GAC1F,gBAAiBoe,GAAS,OAAOA,GAAU,UAAYoK,EAAyBpK,CAAK,CACvF,EACA,OAAQ,CACN,aAAc,SACd,YAAa,IAAM,KACnB,eAAgBpe,GAAUyoB,GAAgBzoB,EAAO,KAAK,GAAK,EAC7D,CACF,CACF,CACA,mCAAoC,CAClC,KAAK,sCAAsC,QAAQgJ,GAAeA,EAAY,CAAC,EAC/E,KAAK,sCAAwC,CAAC,CAChD,CACA,SAAU,CACR,KAAK,oBAAsB,CAAC,EAC5B,KAAK,iBAAmB,CAAC,EACzB,KAAK,iBAAmB,CAAC,EACzB,KAAK,mCAAqC,CAAC,EAC3C,KAAK,kCAAkC,EACvC,MAAM,QAAQ,CAChB,CACF,EAGI4f,GAAiB,CACnB,QAASlI,EACT,WAAY,+BACZ,MAAO,CAACwD,EAAe,CACzB,EACI2E,GAAkB,CACpB,QAASnI,EACT,WAAY,gCACZ,aAAc,CACZ,aAAAC,GACA,cAAAC,GACA,iBAAAC,GACA,qBAAAE,GACA,eAAAC,GACA,uBAAAE,GACA,wBAAAC,GACA,6BAAAE,GACA,UAAAE,GACA,WAAAC,GACA,iBAAAC,GACA,eAAAC,GACA,iBAAAC,GACA,oBAAAC,GACA,oBAAAC,GACA,sBAAAC,GACA,UAAAC,GACA,cAAAC,GACA,eAAAC,GACA,qBAAAC,GACA,sBAAAC,GACA,iBAAAC,GACA,kBAAAE,GACA,gBAAAE,GACA,iBAAAC,GACA,kBAAAC,GACA,wBAAAC,GACA,0BAAAC,GACA,yBAAAC,GACA,uBAAAC,GACA,8BAAAC,GACA,WAAAC,GACA,kBAAAC,GACA,YAAaE,GACb,eAAAE,GACA,gBAAAE,GACA,6BAAAC,GACA,+BAAAC,GACA,8BAAAC,GACA,4BAAAC,GACA,eAAAC,GACA,gBAAAE,GACA,mBAAAC,EACF,CACF,EAGA,SAAS+E,GAAehoB,EAAOd,EAAQ,CACrCc,EAAM,aAAa,gBAAgB,EAAE,kBAAkB,EAAE,eAAed,CAAM,CAChF,CACA,SAAS+oB,GAAkBjoB,EAAOd,EAAQ,CACxC,IAAMgpB,EAAmBloB,EAAM,mBAAmB,iBAAiBd,CAAM,EACrEgpB,GACFloB,EAAM,mBAAmB,iBAAiBkoB,CAAgB,CAE9D,CACA,SAASC,GAAqBnoB,EAAOooB,EAAQ,CAC3C,OAAOpoB,EAAM,aAAa,gBAAgB,EAAE,kBAAkB,EAAE,eAAeooB,CAAM,CACvF,CAGA,IAAIC,GAAgB,CAClB,QAASzI,EACT,WAAY,8BACZ,aAAc,CACZ,eAAAoI,GACA,kBAAAC,GACA,qBAAAE,EACF,CACF,EAGA,SAASG,GAAqBtoB,EAAO,CACnC,OAAOA,EAAM,eAAe,qBAAqB,CACnD,CACA,SAASuoB,GAAwBvoB,EAAO,CACtC,OAAOA,EAAM,eAAe,wBAAwB,CACtD,CACA,SAASwoB,GAAgBxoB,EAAOQ,EAAO,CACrC,OAAOR,EAAM,eAAe,gBAAgBQ,CAAK,CACnD,CACA,SAASioB,GAAmBzoB,EAAOQ,EAAO,CACxC,OAAOR,EAAM,eAAe,mBAAmBQ,CAAK,CACtD,CAGA,IAAIkoB,GAAqB,CACvB,QAAS9I,EACT,WAAY,oCACZ,aAAc,CACZ,qBAAA0I,GACA,wBAAAC,GACA,gBAAAC,GACA,mBAAAC,EACF,CACF,EAGA,SAASE,GAAmB3oB,EAAO,CACjCA,EAAM,eAAe,mBAAmB,CAC1C,CACA,SAAS4oB,GAAkB5oB,EAAO,CAChCA,EAAM,eAAe,kBAAkB,CACzC,CACA,SAAS6oB,GAAY7oB,EAAO,CAC1BA,EAAM,eAAe,YAAY,CACnC,CAGA,IAAI8oB,GAAmB,CACrB,QAASlJ,EACT,WAAY,iCACZ,aAAc,CACZ,mBAAA+I,GACA,kBAAAC,GACA,YAAAC,EACF,CACF,EAGA,SAASE,GAAoB/oB,EAAOgpB,EAAU1L,EAAO,CACnD,GAAI,CAAC0L,EACH,OAEF,IAAMC,EAAQjpB,EAAM,aAAa,gBAAgB,EAAE,OAAO,EACpDkpB,EAAe,QAAQF,CAAQ,GACjC1L,IAAU,KACZ2L,EAAM,gBAAgBC,CAAY,EAElCD,EAAM,aAAaC,EAAc5L,CAAK,CAE1C,CACA,SAAS6L,GAAanpB,EAAOd,EAAS,CAAC,EAAG,CACxCc,EAAM,mBAAmB,aAAa,IAAMA,EAAM,YAAY,aAAad,CAAM,CAAC,CACpF,CACA,SAASkqB,GAAWppB,EAAOd,EAAS,CAAC,EAAG,CACtC,IAAMmqB,EAAU3b,GAAQrH,EAAU,yCAAyCqH,CAAI,qCAAqCA,CAAI,oBAAoB,EACxI9G,EAAQ1H,EAAO,SAAS,GAC1BmqB,EAAQ,MAAM,EAEZziB,EAAQ1H,EAAO,UAAU,GAC3BmqB,EAAQ,OAAO,EAEjBrpB,EAAM,mBAAmB,aAAa,IAAMA,EAAM,YAAY,WAAWd,CAAM,CAAC,CAClF,CACA,SAASoqB,GAActpB,EAAO,CAC5BA,EAAM,mBAAmB,aAAa,IAAMA,EAAM,aAAa,2BAA2B,EAAE,QAAQuT,GAAKA,EAAE,QAAQ,CAAC,CAAC,CACvH,CACA,SAASgW,GAA2BvpB,EAAO,CACzC,OAAOA,EAAM,sBAAsB,aAAa,CAClD,CACA,SAASwpB,GAAwBxpB,EAAO,CACtCA,EAAM,sBAAsB,eAAe,CAC7C,CACA,SAASypB,GAAwBzpB,EAAO,CACtC,MAAO,CACL,UAAWA,EAAM,IAAI,qBAAqB,EAC1C,aAAcA,EAAM,YAAY,gBAAgB,CAClD,CACF,CACA,SAAS0pB,GAAyB1pB,EAAOd,EAAS,CAAC,EAAG,CAGpD,OAFYc,EAAM,YAAY,yBAAyBd,CAAM,EACvC,IAAIyqB,EAAe,CAE3C,CAGA,IAAIC,GAAkB,CACpB,QAAShK,EACT,WAAY,gCACZ,aAAc,CACZ,oBAAAmJ,GACA,aAAAI,GACA,WAAAC,GACA,cAAAE,GACA,2BAAAC,GACA,wBAAAC,GACA,wBAAAC,GACA,yBAAAC,EACF,CACF,EAGA,SAASG,GAAiB7pB,EAAO,CAC/BA,EAAM,WAAW,OAAO,CAC1B,CACA,SAAS8pB,GAAS9pB,EAAO+pB,EAAQ/lB,EAAS,CACxC,OAAOgmB,GAAahqB,EAAO,CACzB,OAAA+pB,EACA,QAAA/lB,CACF,CAAC,CACH,CACA,SAASgmB,GAAahqB,EAAOd,EAAQ,CACnC,GAAM,CACJ,OAAA6qB,EACA,QAAA/lB,EACA,aAAAimB,CACF,EAAI/qB,EACE6E,EAAS/D,EAAM,YAAY,aAAa+pB,CAAM,GAAK/pB,EAAM,YAAY,OAAO+pB,CAAM,EACxF,GAAI/c,EAASjJ,CAAM,EACjB,OAAO,KAET,IAAMuZ,EAAQtd,EAAM,aAAa,SAAS+D,EAAQC,CAAO,EACzD,OAAIimB,EACqBjqB,EAAM,aAAa,YAAY+D,EAAQC,EAASsZ,CAAK,GACnD4M,GAAc5M,EAAO,EAAI,EAE7CA,CACT,CAGA,SAAS6M,GAAUnqB,EAAO,CACxB,OAAOA,EAAM,QAAQ,UAAU,CACjC,CACA,SAASoqB,GAAQpqB,EAAO,CACtBA,EAAM,mBAAmB,QAAQ,CACnC,CACA,SAASqqB,GAAYrqB,EAAO,CAC1B,OAAOA,EAAM,mBAAmB,gBAAgB,CAClD,CACA,SAASsqB,GAActqB,EAAOiL,EAAK,CACjC,OAAOjL,EAAM,IAAI,IAAIiL,CAAG,CAC1B,CACA,SAASsf,GAAcvqB,EAAOiL,EAAKqS,EAAO,CACxCkN,GAAkBxqB,EAAO,CACvB,CAACiL,CAAG,EAAGqS,CACT,CAAC,CACH,CACA,SAASkN,GAAkBxqB,EAAOyqB,EAAS,CACzCzqB,EAAM,IAAI,kBAAkB,CAC1B,QAAAyqB,CACF,CAAC,CACH,CAGA,SAASC,GAAiB1qB,EAAOiP,EAAWvE,EAAU,CACpD1K,EAAM,gBAAgB,iBAAiBiP,EAAWvE,CAAQ,CAC5D,CACA,SAASigB,GAAoB3qB,EAAOiP,EAAWvE,EAAU,CACvD1K,EAAM,gBAAgB,oBAAoBiP,EAAWvE,CAAQ,CAC/D,CACA,SAASkgB,GAAkB5qB,EAAO0K,EAAU,CAC1C1K,EAAM,gBAAgB,kBAAkB0K,CAAQ,CAClD,CACA,SAASmgB,GAAqB7qB,EAAO0K,EAAU,CAC7C1K,EAAM,gBAAgB,qBAAqB0K,CAAQ,CACrD,CAGA,SAASogB,GAAe9qB,EAAO,CAC7B,OAAOA,EAAM,aAAa,eAAe,CAC3C,CACA,SAAS+qB,GAAiB/qB,EAAO,CAC/B,OAAOA,EAAM,aAAa,iBAAiB,CAC7C,CACA,SAASgrB,GAAehrB,EAAOuL,EAAUwe,EAAQzU,EAAW,CAC1DtV,EAAM,aAAa,eAAe,CAChC,SAAAuL,EACA,OAAQwe,EACR,UAAAzU,EACA,kBAAmB,EACrB,CAAC,CACH,CACA,SAAS2V,GAAcjrB,EAAOsH,EAAO,CACnC,OAAOtH,EAAM,kBAAkB,cAAc,GAAOsH,CAAK,CAC3D,CACA,SAAS4jB,GAAkBlrB,EAAOsH,EAAO,CACvC,OAAOtH,EAAM,kBAAkB,cAAc,GAAMsH,CAAK,CAC1D,CACA,SAAS6jB,GAAiBnrB,EAAO+pB,EAAQqB,EAAiB,GAAO,CAC/D,IAAM3R,EAAiBzZ,EAAM,wBAAwB,2BAA2B+pB,EAAQqB,CAAc,EACjG3R,GAGLzZ,EAAM,aAAa,oBAAoB,CACrC,eAAAyZ,CACF,CAAC,CACH,CAGA,SAAS4R,GAA+BrrB,EAAO+pB,EAAQuB,EAAe,CACpE,IAAMvnB,EAAS/D,EAAM,YAAY,OAAO+pB,CAAM,EAC9C/pB,EAAM,YAAY,eAAe,CAC/B,OAAA+D,EACA,cAAAunB,EACA,WAAY,QACd,CAAC,CACH,CACA,SAASC,GAA8BvrB,EAAO+pB,EAAQtlB,EAAY,CAChE,IAAIV,EAAS/D,EAAM,YAAY,OAAO+pB,CAAM,EAI5C,GAHKhmB,IACHA,EAAS/D,EAAM,YAAY,aAAa+pB,CAAM,GAE5C,CAAChmB,EAAQ,CACXwa,EAAW,WAAWwL,CAAM,aAAa,EACzC,MACF,CACA/pB,EAAM,YAAY,eAAe,CAC/B,OAAA+D,EACA,WAAAU,EACA,WAAY,OACd,CAAC,CACH,CACA,SAAS+mB,GAAexrB,EAAO+pB,EAAQ,CACrC,IAAMhmB,EAAS/D,EAAM,YAAY,OAAO+pB,CAAM,EAC9C,GAAI,CAAChmB,EAAQ,CACXwa,EAAW,WAAWwL,CAAM,aAAa,EACzC,MACF,CACA/pB,EAAM,YAAY,eAAe,CAC/B,OAAA+D,EACA,WAAY,MACd,CAAC,CACH,CACA,SAAS0nB,GAAczrB,EAAO,CAC5BA,EAAM,YAAY,cAAc,CAClC,CAGA,SAAS0rB,GAAW1rB,EAAOd,EAAS,CAAC,EAAG,CACtC,IAAMwmB,EAAWxmB,EAASA,EAAO,SAAW,OAC5Cc,EAAM,mBAAmB,aAAa,IAAMA,EAAM,YAAY,WAAW0lB,CAAQ,CAAC,CACpF,CACA,SAASiG,GAAmB3rB,EAAOgE,EAAS4nB,EAAUC,EAAehW,EAAW,CAC9E7V,EAAM,iBAAiB,mBAAmBgE,EAAS4nB,EAAUC,EAAehW,CAAS,CACvF,CACA,SAASiW,GAAW9rB,EAAO+rB,EAAI,CAC7B,OAAO/rB,EAAM,SAAS,WAAW+rB,CAAE,CACrC,CACA,SAASC,GAAuBhsB,EAAOisB,EAAW1gB,EAAU7G,EAAU,CACpE1E,EAAM,YAAY,uBAAuBisB,EAAW1gB,EAAU7G,CAAQ,CACxE,CACA,SAASwnB,GAAiBlsB,EAAO,CAC/B,OAAOA,EAAM,YAAY,iBAAiB,CAC5C,CACA,SAASmsB,GAAYnsB,EAAO0E,EAAU0nB,EAAoB,CACxDpsB,EAAM,SAAS,YAAY0E,EAAU0nB,CAAkB,CACzD,CACA,SAASC,GAAqBrsB,EAAO,CACnC,OAAOssB,GAA0BtsB,CAAK,CACxC,CACA,SAASssB,GAA0BtsB,EAAO,CACxC,OAAOA,EAAM,YAAY,2BAA2B,CACtD,CACA,SAASusB,GAAoBvsB,EAAO,CAClC,OAAOwsB,GAAyBxsB,CAAK,CACvC,CACA,SAASwsB,GAAyBxsB,EAAO,CACvC,OAAOA,EAAM,YAAY,0BAA0B,CACrD,CACA,SAASysB,GAAuBzsB,EAAOQ,EAAO,CAC5C,OAAOR,EAAM,SAAS,OAAOQ,CAAK,CACpC,CACA,SAASksB,GAAqB1sB,EAAO,CACnC,OAAOA,EAAM,SAAS,YAAY,CACpC,CACA,SAAS2sB,GAAS3sB,EAAO,CACvB,OAAOA,EAAM,QACf,CAGA,SAAS4sB,GAAiB5sB,EAAOd,EAAQ,CAYvC,GAAI,CAXkBA,EAAO,MAAM,MAAM+R,GACnCA,EAAK,WACP5K,EAAU,2BAA2B,EAC9B,IAEL4K,EAAK,KAAO,QACd5K,EAAU,+CAA+C,EAClD,IAEF,EACR,EAEC,OAEF,GAAM,CACJ,MAAAqU,EACA,OAAA1L,EACA,SAAA0C,CACF,EAAIxS,EACE2tB,EAAiBnS,EACvB1a,EAAM,iBAAiB,iBAAiB,CACtC,MAAO6sB,EACP,OAAQ7d,GAAU,MAClB,SAAA0C,CACF,CAAC,CACH,CACA,SAASob,GAAU9sB,EAAOgP,EAAS,eAAgB,CACjDhP,EAAM,iBAAiB,kBAAkB,CACvC,OAAAgP,CACF,CAAC,CACH,CACA,SAAS+d,GAAY/sB,EAAOgP,EAAS,eAAgB,CACnDhP,EAAM,iBAAiB,oBAAoB,CACzC,OAAAgP,CACF,CAAC,CACH,CACA,SAASge,GAAkBhtB,EAAOgP,EAAS,uBAAwB,CACjEhP,EAAM,iBAAiB,kBAAkB,CACvC,OAAAgP,EACA,aAAc,EAChB,CAAC,CACH,CACA,SAASie,GAAoBjtB,EAAOgP,EAAS,uBAAwB,CACnEhP,EAAM,iBAAiB,oBAAoB,CACzC,OAAAgP,EACA,aAAc,EAChB,CAAC,CACH,CACA,SAASke,GAAuBltB,EAAOgP,EAAS,0BAA2B,CACzEhP,EAAM,iBAAiB,kBAAkB,CACvC,OAAAgP,EACA,gBAAiB,EACnB,CAAC,CACH,CACA,SAASme,GAAyBntB,EAAOgP,EAAS,0BAA2B,CAC3EhP,EAAM,iBAAiB,oBAAoB,CACzC,OAAAgP,EACA,gBAAiB,EACnB,CAAC,CACH,CACA,SAASoe,GAAiBptB,EAAO,CAC/B,OAAOA,EAAM,iBAAiB,iBAAiB,CACjD,CACA,SAASqtB,GAAgBrtB,EAAO,CAC9B,OAAOA,EAAM,iBAAiB,gBAAgB,CAChD,CAGA,SAASstB,GAActtB,EAAO,CAC5BA,EAAM,eAAe,cAAc,KAAK,CAC1C,CAGA,IAAIutB,GAAgB,CAClB,QAAS3N,EACT,WAAY,8BACZ,aAAc,CACZ,UAAAuK,GACA,QAAAC,GACA,YAAAC,GACA,cAAAC,GACA,cAAAC,GACA,kBAAAC,EACF,CACF,EACIgD,GAAwB,CAC1B,QAAS5N,EACT,WAAY,uCACZ,aAAc,CACZ,iBAAAgN,GACA,UAAAE,GACA,YAAAC,GACA,kBAAAC,GACA,oBAAAC,GACA,uBAAAC,GACA,yBAAAC,GACA,iBAAAC,GACA,gBAAAC,EACF,CACF,EACII,GAAe,CACjB,QAAS7N,EACT,WAAY,6BACZ,aAAc,CACZ,WAAA8L,GACA,mBAAAC,GACA,WAAAG,GACA,uBAAAE,GACA,iBAAAE,GACA,YAAAC,GACA,qBAAAE,GACA,0BAAAC,GACA,oBAAAC,GACA,yBAAAC,GACA,uBAAAC,GACA,qBAAAC,GACA,SAAAC,EACF,CACF,EACIe,GAAkB,CACpB,QAAS9N,EACT,WAAY,gCACZ,aAAc,CACZ,sBAAA+N,GACA,wBAAAC,GACA,oBAAAC,GACA,mBAAAC,GACA,kBAAAC,EACF,CACF,EACIC,GAA8B,CAChC,QAASpO,EACT,WAAY,6CACZ,aAAc,CACZ,eAAAkL,GACA,iBAAAC,GACA,eAAAC,GACA,iBAAAG,GACA,cAAAF,GACA,kBAAAC,EACF,CACF,EACI+C,GAAiB,CACnB,QAASrO,EACT,WAAY,+BACZ,aAAc,CACZ,iBAAA8K,GACA,kBAAAE,GACA,oBAAAD,GACA,qBAAAE,EACF,CACF,EACIqD,GAAgB,CAClB,QAAStO,EACT,WAAY,8BACZ,aAAc,CACZ,iBAAAiK,GACA,SAAAC,GACA,aAAAE,EACF,CACF,EACImE,GAAyB,CAC3B,QAASvO,EACT,WAAY,8BACZ,aAAc,CACZ,+BAAAyL,GACA,8BAAAE,GACA,eAAAC,GACA,cAAAC,EACF,CACF,EACI2C,GAAgB,CAClB,QAASxO,EACT,WAAY,8BACZ,aAAc,CACZ,cAAA0N,EACF,CACF,EACIe,GAAqB,CACvB,QAASzO,EACT,WAAY,yBACZ,iBAAkB,CAAC2N,GAAe7E,GAAoB8E,GAAuBzF,GAAiB0F,GAAcpF,GAAeqF,GAAiB5E,GAAkBkF,GAA6BC,GAAgBrE,GAAiBsE,GAAeC,GAAwBC,EAAa,CAClR,EAGA,SAASE,GAAStuB,EAAO,CACvB,OAAOA,EAAM,cAAc,SAAS,GAAK,CAAC,CAC5C,CAGA,IAAIuuB,GAAe,cAActvB,CAAS,CACxC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,eAChB,KAAK,eAAiB,GACtB,KAAK,oBAAqC,IAAI,IAC9C,KAAK,kCAAoCuvB,EAAU,IAAM,KAAK,gCAAgC,EAAG,CAAC,EAGlG,KAAK,0BAA4BA,EAAU,IAAM,KAAK,kBAAkB,oBAAqB,KAAK,0BAA0B,CAAC,EAAG,CAAC,EAEjI,KAAK,uBAAyBA,EAAU,IAAM,CAC5C,KAAK,eAAe,OAAO,cAAc,EACzC,KAAK,kBAAkB,eAAgB,KAAK,qBAAqB,CAAC,CACpE,EAAG,CAAC,EACJ,KAAK,eAAgC,IAAI,GAC3C,CACA,UAAUxuB,EAAO,CACf,KAAK,cAAgBA,EAAM,cAC3B,KAAK,aAAeA,EAAM,aAC1B,KAAK,uBAAyBA,EAAM,uBACpC,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,wBAA0BA,EAAM,wBACrC,KAAK,sBAAwBA,EAAM,sBACnC,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,SAAWA,EAAM,SACtB,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,uBAAyBA,EAAM,uBACpC,KAAK,wBAA0BA,EAAM,wBACrC,KAAK,eAAiBA,EAAM,eAC5B,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,KAAK,qBAAuB,KAAK,SAAS,QAAQ,IAAM,aACxD,KAAK,YAAc,KAAK,IAAI,IAAI,cAAc,GAAK,CAAC,EACpD,KAAK,aAAa,UAAU,IAAM,KAAK,mCAAmC,IAAM,KAAK,sBAAsB,CAAC,CAAC,EAC7G,GAAM,CAACyuB,EAA6BC,EAA0BC,CAA4B,EAAI,KAAK,yBAAyB,CAC1H,iBAAkB,CAAC,CACjB,OAAA3f,CACF,IAAM,CACAA,IAAW,qBACbyf,EAA4B,EAC5B,KAAK,mCAAmC,IAAM,KAAK,+BAA+B,CAAC,EAEvF,EACA,cAAe,IAAM,CACnBC,IAA2B,EAC3B,KAAK,mCAAmC,IAAM,KAAK,0BAA0B,CAAC,CAChF,EACA,kBAAmB,IAAM,CACvBC,IAA+B,EAC/B,KAAK,mCAAmC,IAAM,KAAK,8BAA8B,CAAC,CACpF,CACF,CAAC,CACH,CACA,UAAW,CACT,OAAI,KAAK,eAAe,MACtB,KAAK,kBAAkB,EAElB,KAAK,WACd,CACA,uBAAwB,CACtB,KAAK,kBAAkB,UAAW,KAAK,gBAAgB,CAAC,EACxD,IAAMC,EAAe,IAAM,KAAK,kBAAkB,UAAW,KAAK,gBAAgB,CAAC,EACnF,KAAK,yBAAyB,CAC5B,wBAAyBA,EACzB,eAAgBA,CAClB,CAAC,CACH,CACA,gCAAiC,CAC/B,IAAMC,EAAe,KAAK,IAAI,IAAI,cAAc,GAAK,CAAC,EACtD,KAAK,eAAeA,CAAY,EAChC,KAAK,oBAAoBA,CAAY,EACrC,KAAK,kBAAkB,CAAC,cAAe,cAAe,gBAAiB,eAAgB,mBAAoB,QAAS,QAAS,WAAY,MAAM,CAAC,EAChJ,KAAK,kBAAkB,cAAe,KAAK,oBAAoB,CAAC,EAChE,KAAK,yBAAyB,CAC5B,mBAAoB,IAAM,KAAK,kBAAkB,CAAC,aAAa,CAAC,EAChE,YAAa,IAAM,KAAK,kBAAkB,CAAC,aAAa,CAAC,EACzD,aAAc,IAAM,KAAK,kBAAkB,CAAC,eAAe,CAAC,EAC5D,cAAe,IAAM,KAAK,kBAAkB,CAAC,cAAc,CAAC,EAC5D,cAAe,IAAM,KAAK,kBAAkB,CAAC,kBAAkB,CAAC,EAChE,mBAAoB,IAAM,KAAK,kBAAkB,CAAC,OAAO,CAAC,EAC1D,uBAAwB,IAAM,KAAK,kBAAkB,CAAC,OAAO,CAAC,EAC9D,sBAAuB,IAAM,KAAK,kBAAkB,CAAC,UAAU,CAAC,EAChE,YAAa,IAAM,KAAK,kBAAkB,CAAC,MAAM,CAAC,EAClD,iBAAkB,IAAM,KAAK,kBAAkB,CAAC,cAAe,cAAe,gBAAiB,eAAgB,mBAAoB,QAAS,WAAY,MAAM,CAAC,EAC/J,kBAAmB,IAAM,KAAK,kBAAkB,cAAe,KAAK,oBAAoB,CAAC,CAC3F,CAAC,CACH,CACA,2BAA4B,CAC1B,GAAM,CACJ,OAAQC,EACR,kBAAmBC,EACnB,aAAcC,EACd,WAAYC,CACd,EAAI,KAAK,IAAI,IAAI,cAAc,GAAK,CAAC,EAC/BC,EAAsB,KAAK,IAAI,IAAI,qBAAqB,GAC1DJ,GAAeI,IACjB,KAAK,eAAeJ,EAAaI,CAAmB,EAElDH,GACF,KAAK,0BAA0BA,CAAsB,EAEnDC,GACF,KAAK,qBAAqBA,CAAiB,EAEzCC,GACF,KAAK,mBAAmBA,CAAe,EAEzC,KAAK,kBAAkB,SAAU,KAAK,eAAe,CAAC,EACtD,KAAK,kBAAkB,oBAAqB,KAAK,0BAA0B,CAAC,EAC5E,KAAK,kBAAkB,eAAgB,KAAK,qBAAqB,CAAC,EAClE,KAAK,kBAAkB,aAAc,KAAK,mBAAmB,CAAC,EAC9D,KAAK,yBAAyB,CAC5B,cAAe,IAAM,KAAK,kBAAkB,SAAU,KAAK,eAAe,CAAC,EAC3E,eAAgB,IAAM,KAAK,0BAA0B,EACrD,oBAAqB,IAAM,KAAK,kBAAkB,oBAAqB,KAAK,0BAA0B,CAAC,EACvG,iBAAkB,IAAM,CACtB,KAAK,eAAe,IAAI,cAAc,EACtC,KAAK,uBAAuB,CAC9B,EACA,kBAAmB3nB,GAAS,EACtBA,EAAM,SAAWA,EAAM,cACzB,KAAK,kBAAkB,aAAc,KAAK,mBAAmB,CAAC,CAElE,CACF,CAAC,CACH,CACA,+BAAgC,CAC9B,GAAM,CACJ,OAAQ6nB,EACR,eAAgBC,EAChB,YAAaC,EACb,YAAaC,CACf,EAAI,KAAK,IAAI,IAAI,cAAc,GAAK,CAAC,EACjCD,GACF,KAAK,oBAAoBA,CAAgB,EAEvCD,GACF,KAAK,uBAAuBA,CAAmB,EAE7CD,GACF,KAAK,eAAeA,CAAW,EAEjC,KAAK,oBAAoB,CAAC,CAACG,GAAkB,aAAa,EAC1D,KAAK,kBAAkB,UAAW,KAAK,gBAAgB,CAAC,EACxD,KAAK,kBAAkB,cAAe,KAAK,oBAAoB,CAAC,EAChE,KAAK,kBAAkB,iBAAkB,KAAK,uBAAuB,CAAC,EACtE,KAAK,kBAAkB,SAAU,KAAK,eAAe,CAAC,EACtD,KAAK,yBAAyB,CAC5B,YAAa,IAAM,KAAK,kBAAkB,cAAe,KAAK,oBAAoB,CAAC,EACnF,sBAAuBhoB,GAAS,CAC1BA,EAAM,UACR,KAAK,kBAAkB,iBAAkB,KAAK,uBAAuB,CAAC,CAE1E,EACA,cAAe,IAAM,KAAK,kBAAkB,SAAU,KAAK,eAAe,CAAC,CAC7E,CAAC,CACH,CACA,gBAAiB,CACf,IAAMioB,EAAY,KAAK,YAAY,YAAY,EACzCC,EAAc,CAAC,EACfC,EAAc,CAAC,EACfC,EAAqB,CAAC,EACtBC,EAAc,CAAC,EACfC,EAAa,CAAC,EACdC,EAAc,CAAC,EACfC,EAAe,CAAC,EAChBC,EAAc,CAAC,EACfpgB,EAAU,CAAC,EACXyW,EAAc,KAAK,sBAAsB,eAAe,EAC9D,QAAS3c,EAAI,EAAGA,EAAI2c,EAAY,OAAQ3c,IAAK,CAC3C,GAAM,CACJ,MAAAgb,EACA,KAAAtU,EACA,UAAAC,EACA,SAAA4f,EACA,cAAAhgB,EACA,QAAAE,EACA,MAAA+f,EACA,WAAAhgB,EACA,OAAAhE,EACA,KAAAikB,EACA,MAAAC,EACA,KAAA9f,CACF,EAAI+V,EAAY3c,CAAC,EACjBkG,EAAQ,KAAK8U,CAAK,EACdtU,IACFqf,EAAYpf,GAAa,CAAC,EAAI,CAC5B,MAAAqU,EACA,KAAAtU,CACF,GAEE6f,IACFP,EAAYzf,GAAiB,CAAC,EAAIyU,GAEhC,OAAOvU,GAAY,UACrBwf,EAAmB,KAAK,CACtB,MAAAjL,EACA,QAAAvU,CACF,CAAC,EAEC+f,IACFN,EAAY1f,GAAc,CAAC,EAAIwU,GAE7BxY,IACDA,IAAW,QAAU4jB,EAAcD,GAAY,KAAKnL,CAAK,EAExDyL,GACFJ,EAAa,KAAKrL,CAAK,GAErBpU,GAAQ8f,IACVJ,EAAY,KAAK,CACf,MAAAtL,EACA,KAAMpU,GAAQ,OACd,MAAA8f,CACF,CAAC,CAEL,CACA,MAAO,CACL,KAAMX,EAAY,OAAS,CACzB,UAAWA,CACb,EAAI,OACJ,SAAUC,EAAY,OAAS,CAC7B,YAAAA,CACF,EAAI,OACJ,YAAaC,EAAmB,OAAS,CACvC,iBAAkBA,CACpB,EAAI,OACJ,MAAOC,EAAY,QAAUJ,EAAY,CACvC,UAAAA,EACA,YAAAI,CACF,EAAI,OACJ,cAAeC,EAAW,QAAUC,EAAY,OAAS,CACvD,WAAAD,EACA,YAAAC,CACF,EAAI,OACJ,iBAAkBC,EAAa,OAAS,CACtC,aAAAA,CACF,EAAI,OACJ,aAAcC,EAAY,OAAS,CACjC,kBAAmBA,CACrB,EAAI,OACJ,YAAapgB,EAAQ,OAAS,CAC5B,cAAeA,CACjB,EAAI,MACN,CACF,CACA,eAAekf,EAAc,CAC3B,GAAM,CACJ,KAAMuB,EACN,SAAU7e,EACV,YAAa8e,EACb,MAAOC,EACP,cAAeC,EACf,iBAAkBC,EAClB,aAAcC,EACd,YAAanB,CACf,EAAIT,EACE6B,EAAiB,CAAC,EAClBC,EAAkBlM,GAAS,CAC/B,IAAI2B,EAAcsK,EAAejM,CAAK,EACtC,OAAI2B,IAGJA,EAAc,CACZ,MAAA3B,CACF,EACAiM,EAAejM,CAAK,EAAI2B,EACjBA,EACT,EACIgK,GACFA,EAAU,UAAU,QAAQ,CAAC,CAC3B,MAAA3L,EACA,KAAAtU,CACF,EAAGC,IAAc,CACf,IAAMgW,EAAcuK,EAAgBlM,CAAK,EACzC2B,EAAY,KAAOjW,EACnBiW,EAAY,UAAYhW,CAC1B,CAAC,EAECmB,GACFA,EAAW,YAAY,QAAQ,CAACkT,EAAOzU,IAAkB,CACvD,IAAMoW,EAAcuK,EAAgBlM,CAAK,EACzC2B,EAAY,SAAW,GACvBA,EAAY,cAAgBpW,CAC9B,CAAC,EAECqgB,GACFA,EAAiB,iBAAiB,QAAQ,CAAC,CACzC,MAAA5L,EACA,QAAAvU,CACF,IAAM,CACJygB,EAAgBlM,CAAK,EAAE,QAAUvU,CACnC,CAAC,EAECogB,IACFA,EAAW,YAAY,QAAQ,CAAC7L,EAAOxU,IAAe,CACpD,IAAMmW,EAAcuK,EAAgBlM,CAAK,EACzC2B,EAAY,MAAQ,GACpBA,EAAY,WAAanW,CAC3B,CAAC,EACD,KAAK,IAAI,kBAAkB,CACzB,QAAS,CACP,UAAWqgB,EAAW,SACxB,EACA,OAAQ,kBACV,CAAC,GAECC,IACFA,EAAmB,WAAW,QAAQ9L,GAAS,CAC7CkM,EAAgBlM,CAAK,EAAE,OAAS,MAClC,CAAC,EACD8L,EAAmB,YAAY,QAAQ9L,GAAS,CAC9CkM,EAAgBlM,CAAK,EAAE,OAAS,OAClC,CAAC,GAEC+L,GACFA,EAAsB,aAAa,QAAQ/L,GAAS,CAClDkM,EAAgBlM,CAAK,EAAE,KAAO,EAChC,CAAC,EAECgM,GACFA,EAAkB,kBAAkB,QAAQ,CAAC,CAC3C,MAAAhM,EACA,KAAApU,EACA,MAAA8f,CACF,IAAM,CACJ,IAAM/J,EAAcuK,EAAgBlM,CAAK,EACzC2B,EAAY,KAAO/V,GAAQ,KAC3B+V,EAAY,MAAQ+J,CACtB,CAAC,EAEH,IAAMxgB,EAAU2f,GAAkB,cAC5BsB,EAAa,CAAC,CAACjhB,GAAS,OACxBkhB,EAAeD,EAAajhB,EAAQ,IAAI8U,GAASkM,EAAgBlM,CAAK,CAAC,EAAI,OAAO,OAAOiM,CAAc,EAC7G,GAAIG,EAAa,OAAQ,CACvB,KAAK,aAAeA,EACpB,IAAMC,EAAe,CACnB,KAAM,KACN,UAAW,KACX,SAAU,KACV,cAAe,KACf,QAAS,KACT,MAAO,KACP,WAAY,KACZ,OAAQ,KACR,KAAM,KACN,KAAM,IACR,EACA,KAAK,wBAAwB,iBAAiB,CAC5C,MAAOD,EACP,WAAAD,EACA,aAAAE,CACF,EAAG,kBAAkB,CACvB,CACF,CACA,oBAAoBF,EAAY,CAC9B,IAAMC,EAAe,KAAK,aAC1B,KAAK,aAAe,OACpB,IAAME,EAAoB,KAAK,kBAE/B,GADA,KAAK,kBAAoB,OACrB,EAAC,KAAK,uBAAuB,yBAAyB,EAG1D,IAAIF,EAAc,CAChB,IAAMG,EAAwB,CAAC,EAC/B,QAAW5K,KAAeyK,EACpB,KAAK,uBAAuB,kBAAkBzK,EAAY,KAAK,GACjE4K,EAAsB,KAAK5K,CAAW,EAG1C,KAAK,wBAAwB,iBAAiB,CAC5C,MAAO4K,EACP,WAAAJ,CACF,EAAG,kBAAkB,CACvB,CACIG,GACF,KAAK,wBAAwB,oBAAoBA,EAAmB,kBAAkB,EAE1F,CACA,qBAAsB,CACpB,IAAMjgB,EAAmB,KAAK,wBAAwB,oBAAoB,EACpEmgB,EAAmB,CAAC,EAC1B,OAAAngB,EAAiB,QAAQ,CAAC,CACxB,QAAAoO,EACA,KAAAgS,CACF,IAAM,CACAA,GACFD,EAAiB,KAAK/R,CAAO,CAEjC,CAAC,EACM+R,EAAiB,OAAS,CAC/B,mBAAoBA,CACtB,EAAI,MACN,CACA,oBAAoBpC,EAAc,CAChC,GAAI,CAAC,OAAO,UAAU,eAAe,KAAKA,EAAc,aAAa,EACnE,OAEF,IAAMoC,EAAmB,IAAI,IAAIpC,EAAa,aAAa,kBAAkB,EAEvEzd,EAD2B,KAAK,wBAAwB,oBAAoB,EACtC,IAAI,CAAC,CAC/C,QAAA8N,CACF,IAAM,CACJ,IAAMgS,EAAOD,EAAiB,IAAI/R,CAAO,EACzC,OAAIgS,GACFD,EAAiB,OAAO/R,CAAO,EAE1B,CACL,QAAAA,EACA,KAAAgS,CACF,CACF,CAAC,EACDD,EAAiB,QAAQ/R,GAAW,CAClC9N,EAAW,KAAK,CACd,QAAA8N,EACA,KAAM,EACR,CAAC,CACH,CAAC,EACG9N,EAAW,SACb,KAAK,kBAAoBA,GAE3B,KAAK,wBAAwB,oBAAoBA,EAAY,kBAAkB,CACjF,CACA,gBAAiB,CACf,IAAI+f,EAAc,KAAK,eAAe,eAAe,EACjDA,GAAe,OAAO,KAAKA,CAAW,EAAE,SAAW,IACrDA,EAAc,QAEhB,IAAMjC,EAAsB,KAAK,eAAe,uBAAuB,GAAK,OAC5E,OAAOiC,GAAejC,EAAsB,CAC1C,YAAAiC,EACA,oBAAAjC,CACF,EAAI,MACN,CACA,eAAeJ,EAAasC,EAA+B,CACzD,GAAM,CACJ,YAAAD,EACA,oBAAAjC,CACF,EAAIJ,GAAe,CACjB,oBAAqBsC,CACvB,EACID,GACF,KAAK,eAAe,eAAeA,EAAa,cAAc,EAE5DjC,GACF,KAAK,eAAe,uBAAuBA,CAAmB,CAElE,CACA,wBAAyB,CACvB,IAAMmC,EAAa,KAAK,cAAc,cAAc,EAAE,IAAIC,GAAa,CACrE,GAAM,CACJ,GAAAvF,EACA,KAAA9nB,EACA,SAAAstB,EACA,OAAAC,EACA,QAAA7hB,EACA,YAAA8hB,CACF,EAAIH,EACJ,MAAO,CACL,GAAAvF,EACA,KAAA9nB,EACA,SAAAstB,EACA,OAAAC,EACA,OAAQ7hB,EAAQ,IAAI5L,GAAUA,EAAO,SAAS,CAAC,EAC/C,WAAY0tB,EAAY,SAAS,CACnC,CACF,CAAC,EACD,OAAOJ,GAAY,OAAS,CAC1B,WAAAA,CACF,EAAI,MACN,CACA,uBAAuBjC,EAAqB,CAC1C,GAAI,CAAC,KAAK,IAAI,IAAI,sBAAsB,GAAK,CAAC,KAAK,aACjD,OAEF,IAAMiC,EAAa,CAAC,EACpBjC,EAAoB,WAAW,QAAQkC,GAAa,CAClD,IAAM3hB,EAAU,CAAC,EAOjB,GANA2hB,EAAU,OAAO,QAAQ7M,GAAS,CAChC,IAAM1gB,EAAS,KAAK,YAAY,OAAO0gB,CAAK,EACxC1gB,GACF4L,EAAQ,KAAK5L,CAAM,CAEvB,CAAC,EACG,CAAC4L,EAAQ,OACX,OAEF,IAAI8hB,EAAc,KAAK,YAAY,OAAOH,EAAU,UAAU,EAC9D,GAAI,CAACG,EAAa,CAChB,IAAMjmB,EAAa,KAAK,mBAAmB,WAAW,EAChDkmB,EAAY,IAAI,IAAI/hB,CAAO,EACjC8hB,EAAcjmB,EAAW,KAAKzH,GAAU2tB,EAAU,IAAI3tB,CAAM,CAAC,CAC/D,CACAstB,EAAW,KAAK5qB,EAAAC,EAAA,GACX4qB,GADW,CAEd,QAAA3hB,EACA,YAAA8hB,CACF,EAAC,CACH,CAAC,EACD,KAAK,aAAa,cAAcJ,CAAU,CAC5C,CACA,gBAAiB,CACf,GAAI,CAAC,KAAK,qBACR,OAEF,IAAMM,EAAgB,KAAK,aAAa,gBAAgB,GAAG,iBAAiB,EACtE,CACJ,KAAA/oB,CACF,EAAI+oB,GAAe,mBAAmB,GAAK,CACzC,KAAM,CACR,EACM,CACJ,IAAAjpB,CACF,EAAIipB,GAAe,mBAAmB,GAAK,CACzC,IAAK,CACP,EACA,OAAOjpB,GAAOE,EAAO,CACnB,IAAAF,EACA,KAAAE,CACF,EAAI,MACN,CACA,eAAeumB,EAAa,CAC1B,GAAI,CAAC,KAAK,qBACR,OAEF,GAAM,CACJ,IAAAzmB,EACA,KAAAE,CACF,EAAIumB,EACJ,KAAK,aAAa,gBAAgB,GAAG,iBAAiB,EAAE,kBAAkBzmB,EAAKE,CAAI,CACrF,CACA,iBAAkB,CAChB,OAAO,KAAK,gBAAgB,eAAe,GAAG,SAAS,CACzD,CACA,qBAAsB,CACpB,GAAI,CAAC,KAAK,qBACR,OAEF,IAAMsC,EAAc,KAAK,aAAa,eAAe,EACrD,GAAIA,EAAa,CACf,GAAM,CACJ,OAAAnH,EACA,SAAAwH,EACA,UAAA+J,CACF,EAAIpK,EACJ,MAAO,CACL,MAAOnH,EAAO,SAAS,EACvB,SAAAwH,EACA,UAAA+J,CACF,CACF,CAEF,CACA,oBAAoB+Z,EAAkB,CACpC,GAAI,CAAC,KAAK,qBACR,OAEF,GAAM,CACJ,MAAA5K,EACA,SAAAlZ,EACA,UAAA+J,CACF,EAAI+Z,EACJ,KAAK,aAAa,eAAe,CAC/B,OAAQ,KAAK,YAAY,OAAO5K,CAAK,EACrC,SAAAlZ,EACA,UAAA+J,EACA,kBAAmB,GACnB,4BAA6B,EAC/B,CAAC,CACH,CACA,oBAAqB,CACnB,GAAI,CAAC,KAAK,kBACR,OAEF,IAAMsc,EAAO,KAAK,kBAAkB,eAAe,EAC7CC,EAAY,KAAK,IAAI,IAAI,wBAAwB,EAA2C,OAAvC,KAAK,kBAAkB,YAAY,EAC9F,GAAI,GAACD,GAAQ,CAACC,GAGd,MAAO,CACL,KAAAD,EACA,SAAAC,CACF,CACF,CACA,mBAAmB5C,EAAiB,CAC7B,KAAK,oBAGNA,EAAgB,UAAY,CAAC,KAAK,IAAI,IAAI,wBAAwB,GACpE,KAAK,kBAAkB,YAAYA,EAAgB,SAAU,cAAc,EAEzE,OAAOA,EAAgB,MAAS,UAClC,KAAK,kBAAkB,QAAQA,EAAgB,IAAI,EAEvD,CACA,sBAAuB,CACrB,IAAM6C,EAAiB,KAAK,iBAAiB,kBAAkB,EAE/D,MADqB,CAACA,GAAkB,CAAC,MAAM,QAAQA,CAAc,IAAMA,EAAe,YAAc,IAASA,EAAe,oBAAsB,KAAU,CAACA,GAAgB,cAAc,OACzK,OAASA,CACjC,CACA,qBAAqB9C,EAAmB,CACtC,KAAK,iBAAiB,kBAAkBA,EAAmB,kBAAkB,CAC/E,CACA,2BAA4B,CAC1B,IAAM+C,EAAoB,KAAK,iBAAiB,gBAAgB,EAChE,OAAOA,EAAkB,OAAS,CAChC,oBAAqBA,CACvB,EAAI,MACN,CACA,0BAA0BhD,EAAwB,CAChD,KAAK,iBAAiB,WAAWA,EAAuB,mBAAmB,CAC7E,CACA,kBAAkBiD,EAAU,CAC1B,IAAMC,EAAiB,KAAK,eAAe,EACvCC,EAAa,GACjB,OAAO,QAAQD,CAAc,EAAE,QAAQ,CAAC,CAAChnB,EAAKqS,CAAK,IAAM,CAClD6U,GAAY7U,EAAO,KAAK,YAAYrS,CAAG,CAAC,IAC3CinB,EAAa,GAEjB,CAAC,EACD,KAAK,YAAcxrB,IAAA,GACd,KAAK,aACLurB,GAEDC,GACF,KAAK,yBAAyBF,CAAQ,CAE1C,CACA,kBAAkB/mB,EAAKqS,EAAO,CAC5B,IAAM8U,EAAgB,KAAK,YAAYnnB,CAAG,EAC1C,KAAK,oBAAoBA,EAAKqS,CAAK,EAC9B6U,GAAY7U,EAAO8U,CAAa,GACnC,KAAK,yBAAyB,CAACnnB,CAAG,CAAC,CAEvC,CACA,oBAAoBA,EAAKqS,EAAO,CAC9B,KAAK,YAAc7W,EAAAC,EAAA,GACd,KAAK,aADS,CAEjB,CAACuE,CAAG,EAAGqS,CACT,EACF,CACA,mBAAoB,CAClB,KAAK,eAAe,QAAQrS,GAAO,CACjC,OAAQA,EAAK,CACX,IAAK,eACH,KAAK,oBAAoBA,EAAK,KAAK,qBAAqB,CAAC,EACzD,KACJ,CACF,CAAC,EACD,KAAK,eAAe,MAAM,CAC5B,CACA,yBAAyBonB,EAAS,CAC5B,KAAK,iBAGTA,EAAQ,QAAQrjB,GAAU,KAAK,oBAAoB,IAAIA,CAAM,CAAC,EAC9D,KAAK,kCAAkC,EACzC,CACA,iCAAkC,CAChC,IAAMqjB,EAAU,MAAM,KAAK,KAAK,mBAAmB,EACnD,KAAK,oBAAoB,MAAM,EAC/B,IAAM/qB,EAAQ,CACZ,KAAM,eACN,QAAA+qB,EACA,MAAO,KAAK,WACd,EACA,KAAK,aAAa,cAAc/qB,CAAK,CACvC,CACA,mCAAmCgrB,EAAY,CAC7C,KAAK,eAAiB,GACtB,KAAK,uBAAuB,qBAAqB,EAAI,EACrDA,EAAW,EACX,WAAW,IAAM,CACf,KAAK,eAAiB,GACtB,KAAK,oBAAoB,MAAM,EAC1B,KAAK,QAAQ,IAGlB,KAAK,uBAAuB,qBAAqB,EAAK,EACtD,KAAK,yBAAyB,CAAC,kBAAkB,CAAC,EACpD,CAAC,CACH,CACF,EAGIC,GAAkB,CACpB,QAAS3S,EACT,WAAY,gCACZ,MAAO,CAAC2O,EAAY,CACtB,EACIiE,GAAiB,CACnB,QAAS5S,EACT,WAAY,+BACZ,aAAc,CACZ,SAAA0O,EACF,EACA,iBAAkB,CAACiE,EAAe,CACpC,EACIE,GAAc,CAChB,QAAS7S,EACT,WAAY,2BACZ,iBAAkB,CAAC2S,GAAiBC,EAAc,CACpD,EAGA,SAASE,GAA0B1yB,EAAO,CACxC,OAAOA,EAAM,SAAS,oBAAoB,CAC5C,CACA,SAAS2yB,GAAsB3yB,EAAO,CACpC,OAAOA,EAAM,mBAAmB,YAAY,GAAK,GACnD,CACA,SAAS4yB,GAAyB5yB,EAAO,CACvC,OAAOA,EAAM,mBAAmB,eAAe,GAAK,CACtD,CACA,SAAS6yB,GAAwB7yB,EAAO,CACtC,OAAOA,EAAM,mBAAmB,cAAc,GAAK,CACrD,CACA,SAAS8yB,GAAsB9yB,EAAO,CACpC,OAAOA,EAAM,kBAAoBA,EAAM,kBAAkB,kBAAkB,EAAIA,EAAM,SAAS,YAAY,CAC5G,CACA,SAAS+yB,GAAuB/yB,EAAO,CACrCA,EAAM,mBAAmB,aAAa,CACxC,CACA,SAASgzB,GAA2BhzB,EAAO,CACzCA,EAAM,mBAAmB,iBAAiB,CAC5C,CACA,SAASizB,GAAwBjzB,EAAO,CACtCA,EAAM,mBAAmB,cAAc,CACzC,CACA,SAASkzB,GAAuBlzB,EAAO,CACrCA,EAAM,mBAAmB,aAAa,CACxC,CACA,SAASmzB,GAAmBnzB,EAAO4xB,EAAM,CACvC5xB,EAAM,mBAAmB,SAAS4xB,CAAI,CACxC,CAGA,IAAIwB,GAAgC,cAAcn0B,CAAS,CACzD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,+BAClB,CACA,UAAUe,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,kBAAoBA,EAAM,iBACjC,CACA,eAAgB,CACd,KAAK,aAAa,UAAU2C,GAAK,CAC/B,KAAK,eAAiBA,EAAE,OACxB,IAAM+H,EAAW,KAAK,cAAc,KAAK,IAAI,EAC7C,KAAK,yBAAyB,CAC5B,kBAAmBA,EACnB,wBAAyBA,CAC3B,CAAC,EACD,KAAK,2BAA2B,yBAA0B,KAAK,4BAA4B,KAAK,IAAI,CAAC,EACrG,KAAK,cAAc,CACrB,CAAC,CACH,CACA,WAAY,CACV,MAAO,CAAC,KAAK,IAAI,IAAI,wBAAwB,GAAK,KAAK,gBAAkB,IAC3E,CACA,6BAA8B,CACxB,KAAK,UAAU,EACjB,KAAK,kBAAkB,4BAA4B,EAEnD,KAAK,cAAc,CAEvB,CACA,eAAgB,CACd,GAAI,KAAK,UAAU,EACjB,OAEF,IAAM2oB,EAAa,KAAK,eAAe,uBAAuB,EAAE,cAAc,EAC9E,GAAIA,EAAa,EAAG,CAClB,IAAMC,EAAS,IAAM,CACnB,IAAMC,EAAY,KAAK,IAAI,KAAK,IAAI,qBAAqB,EAAG,CAAC,EACvDC,EAAc,KAAK,MAAMH,EAAaE,CAAS,EACrD,KAAK,kBAAkB,YAAYC,EAAa,gBAAgB,CAClE,EACK,KAAK,eAIRhF,EAAU,IAAM8E,EAAO,EAAG,EAAE,EAAE,GAH9BA,EAAO,EACP,KAAK,eAAiB,GAI1B,MACE,KAAK,eAAiB,EAE1B,CACF,EAGA,SAASG,GAA+Bt0B,EAAMmd,EAAMoX,EAAc,CAChEv0B,EAAK,2BAA2Bmd,EAAM,CACpC,QAASxG,GAAK,CACZ,GAAI,CAACA,EAAE,kBAAoBA,EAAE,MAAQvO,EAAQ,IAAK,CAChD,IAAMpG,EAAY2U,EAAE,SACf4d,EAAa,yBAAyBpX,EAAM,GAAOnb,CAAS,GAC3DuyB,EAAa,2BAA2BvyB,CAAS,GACnD2U,EAAE,eAAe,CAGvB,CACF,CACF,CAAC,CACH,CAGA,IAAI6d,GAAuB,cAAcpxB,CAAU,CACjD,aAAc,CACZ,MACA,2CAA2C,EAC3C,KAAK,eAAiB,GACtB,KAAK,2BAA6B,IAAM,CACtC,GAAI,CAAC,KAAK,mBACR,OAEF,IAAMmP,EAAW,KAAK,mBAAmB,SAAS,EAClD,GAAI,CAACA,EACH,OAEF,IAAMkiB,EAAqB,OAAOliB,CAAQ,EACtC,MAAMkiB,CAAkB,GAAKA,EAAqB,GAAKA,IAAuB,KAAK,kBAAkB,YAAY,IAGrH,KAAK,kBAAkB,YAAYA,EAAoB,kBAAkB,EACrE,KAAK,gBACP,KAAK,oBAAoB,EAAI,EAE/B,KAAK,mBAAmB,oBAAoB,EAAE,MAAM,EACtD,CACF,CACA,UAAU5zB,EAAO,CACf,KAAK,kBAAoBA,EAAM,iBACjC,CACA,eAAgB,CACd,KAAK,2BAA2B,6BAA8B,IAAM,CAClE,KAAK,+BAA+B,CACtC,CAAC,EACD,KAAK,yBAAyB,CAC5B,kBAAmBsH,GAAS,KAAK,wBAAwBA,CAAK,CAChE,CAAC,CACH,CACA,wBAAwBusB,EAAwB,CAC9C,GAAI,CAAC,KAAK,oBAAsB,CAACA,GAAwB,YACvD,OAEF,IAAMD,EAAqB,KAAK,kBAAkB,YAAY,EAC1D,KAAK,0BAA0B,EAAE,SAASA,CAAkB,EAC9D,KAAK,mBAAmB,SAASA,EAAmB,SAAS,CAAC,EAE1D,KAAK,eACP,KAAK,mBAAmB,SAAS,EAAE,EAEnC,KAAK,oBAAoB,EAAI,CAGnC,CACA,oBAAoBE,EAAM,CACpB,KAAK,oBACP,KAAK,MAAM,EAERA,IAGL,KAAK,wBAAwB,EACxB,KAAK,oBAGV,KAAK,YAAY,KAAK,kBAAkB,EAC1C,CACA,OAAQ,CACN7xB,EAAc,KAAK,OAAO,CAAC,EACtB,KAAK,qBAGV,KAAK,mBAAqB,KAAK,YAAY,KAAK,kBAAkB,EACpE,CACA,gCAAiC,CAC1B,KAAK,oBAGN,KAAK,2BAA2B,GAClC,KAAK,wBAAwB,CAEjC,CACA,4BAA6B,CAC3B,OAAO,KAAK,IAAI,IAAI,YAAY,GAAK,CAAC,KAAK,IAAI,IAAI,yBAAyB,GAAK,CAAC,KAAK,IAAI,IAAI,wBAAwB,GAAK,KAAK,IAAI,IAAI,4BAA4B,IAAM,EAC7K,CACA,yBAA0B,CACxB,IAAM8xB,EAAkB,KAAK,0BAA0B,EACjDC,EAA2B,KAAK,kBAAkB,YAAY,EAC9DC,EAAgC,CAACD,GAA4B,CAACD,EAAgB,SAASC,CAAwB,EACjHC,IACFF,EAAgB,QAAQ,EAAE,EAC1B1tB,EAAU;AAAA;AAAA,iIAEiH,GAEzH,KAAK,qBACP,KAAK,mBAAqB,KAAK,YAAY,KAAK,kBAAkB,GAEpE,IAAM6tB,EAAiB,KAAK,cAAc,kBAAkB,EACtDC,EAAiBD,EAAe,wBAAyB,YAAY,EACrEzJ,EAAUsJ,EAAgB,IAAIzW,IAAU,CAC5C,MAAO,OAAOA,CAAK,EACnB,KAAM,OAAOA,CAAK,CACpB,EAAE,EACI8W,EAAqBF,EAAe,4BAA6B,WAAW,EAClF,KAAK,mBAAqB,KAAK,kBAAkB,IAAIG,EAAU,EAAE,WAAW5J,CAAO,EAAE,SAAS,OAAOwJ,EAAgC,GAAKD,CAAwB,CAAC,EAAE,aAAaI,CAAkB,EAAE,SAASD,CAAc,EAAE,cAAc,IAAM,KAAK,2BAA2B,CAAC,EACpR,KAAK,eAAiBF,CACxB,CACA,2BAA4B,CAC1B,IAAMK,EAAgB,CAAC,GAAI,GAAI,GAAG,EAC5BC,EAAmC,KAAK,IAAI,IAAI,4BAA4B,EAClF,MAAI,CAAC,MAAM,QAAQA,CAAgC,GAAK,CAAC,KAAK,eAAeA,CAAgC,EACpGD,EAEF,CAAC,GAAGC,CAAgC,EAAE,KAAK,CAACjoB,EAAGzL,IAAMyL,EAAIzL,CAAC,CACnE,CACA,eAAe2zB,EAAQ,CACrB,GAAI,CAACA,EAAO,OACV,OAAAnuB,EAAU;AAAA,gHACgG,EACnG,GAET,QAASoD,EAAI,EAAGA,EAAI+qB,EAAO,OAAQ/qB,IAAK,CACtC,IAAM6T,EAAQkX,EAAO/qB,CAAC,EAChBgrB,EAAW,OAAOnX,GAAU,SAC5BoX,EAAapX,EAAQ,EAC3B,GAAI,CAACmX,EACH,OAAApuB,EAAU;AAAA,0GACwF,EAC3F,GAET,GAAI,CAACquB,EACH,OAAAruB,EAAU;AAAA,2GACyF,EAC5F,EAEX,CACA,MAAO,EACT,CACA,SAAU,CACR,KAAK,oBAAoB,EAAK,EAC9B,MAAM,QAAQ,CAChB,CACF,EACIsuB,GAA2B,CAC7B,SAAU,wBACV,UAAWhB,EACb,EAGIiB,GAAiB,cAActyB,EAAa,CAC9C,aAAc,CACZ,MAAM,EACN,KAAK,QAAU+a,EACf,KAAK,WAAaA,EAClB,KAAK,OAASA,EACd,KAAK,OAASA,EACd,KAAK,cAAgBA,EACrB,KAAK,iBAAmBA,EACxB,KAAK,gBAAkBA,EACvB,KAAK,UAAYA,EACjB,KAAK,QAAUA,EACf,KAAK,aAAeA,EACpB,KAAK,gCAAkC,GACvC,KAAK,mBAAqB,GAC1B,KAAK,mBAAqB,GAC1B,KAAK,kBAAoB,GACzB,KAAK,uBAAyB,EAChC,CACA,UAAUrd,EAAO,CACf,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,SAAWA,EAAM,SACtB,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,IAAMyL,EAAQ,KAAK,IAAI,IAAI,WAAW,EACtC,KAAK,YAAY,KAAK,YAAY,EAAG,CAACkpB,EAAwB,CAAC,EAC/D,GAAM,CACJ,QAAAE,EACA,WAAAC,EACA,OAAAC,EACA,OAAAC,CACF,EAAI,KACJ,KAAK,iBAAiB,CAACH,EAASC,EAAYC,EAAQC,CAAM,CAAC,EAC3DH,EAAQ,sBAAsB,aAAcI,GAAkBxpB,EAAQ,OAAS,QAAS,KAAK,GAAG,CAAC,EACjGqpB,EAAW,sBAAsB,aAAcG,GAAkBxpB,EAAQ,OAAS,WAAY,KAAK,GAAG,CAAC,EACvGspB,EAAO,sBAAsB,aAAcE,GAAkBxpB,EAAQ,WAAa,OAAQ,KAAK,GAAG,CAAC,EACnGupB,EAAO,sBAAsB,aAAcC,GAAkBxpB,EAAQ,QAAU,OAAQ,KAAK,GAAG,CAAC,EAChG,KAAK,2BAA2B,aAAc,KAAK,oBAAoB,KAAK,IAAI,CAAC,EACjF,KAAK,2BAA2B,0BAA2B,KAAK,oBAAoB,KAAK,IAAI,CAAC,EAC9F,KAAK,4BAA4B,CAAC,6BAA8B,yBAA0B,yBAAyB,EAAG,IAAM,KAAK,+BAA+B,CAAC,EACjK,KAAK,aAAa,oBAAoB,KAAK,aAAa,2BAA2B,CAAC,EACpF,KAAK,mBAAmB,CAEtB,aAAc,IAAM,CAAC,EACrB,kBAAmBrL,GAAc,CAC3B,KAAK,uBACP,KAAK,gBAAgB,gBAAgB,EAAE,kBAAkBA,CAAU,EAEnE,KAAK,aAAa,sBAAsBA,CAAU,CAEtD,EACA,mCAAoC,EACtC,CAAC,EACD,KAAK,oBAAoB,CAC3B,CACA,cAAcmB,EAAY,CACxB,KAAK,uBAAyBA,CAChC,CACA,qBAAsB,CAEpB,IAAM2zB,EADW,KAAK,IAAI,IAAI,YAAY,GACC,CAAC,KAAK,IAAI,IAAI,yBAAyB,EAClF,KAAK,aAAaA,CAAsB,EACnCA,IAGL,KAAK,eAAe,EACpB,KAAK,uBAAuB,EAC5B,KAAK,gBAAgB,EACrB,KAAK,oBAAoB,EACzB,KAAK,eAAe,EACpB,KAAK,+BAA+B,EACtC,CACA,gCAAiC,CAC/B,KAAK,aAAa,oBAAoB,KAAK,aAAa,2BAA2B,CAAC,CACtF,CACA,gBAAiB,CACV,KAAK,oBACR,KAAK,yBAAyB,CAC5B,kBAAmB,KAAK,oBAAoB,KAAK,IAAI,CACvD,CAAC,EACD,CAAC,CACC,GAAI,KAAK,QACT,GAAI,KAAK,UAAU,KAAK,IAAI,CAC9B,EAAG,CACD,GAAI,KAAK,WACT,GAAI,KAAK,aAAa,KAAK,IAAI,CACjC,EAAG,CACD,GAAI,KAAK,OACT,GAAI,KAAK,SAAS,KAAK,IAAI,CAC7B,EAAG,CACD,GAAI,KAAK,OACT,GAAI,KAAK,SAAS,KAAK,IAAI,CAC7B,CAAC,EAAE,QAAQC,GAAQ,CACjB,GAAM,CACJ,GAAAptB,EACA,GAAAqtB,CACF,EAAID,EACJ,KAAK,oBAAoBptB,EAAI,CAC3B,MAAOqtB,EACP,QAAStf,GAAK,EACRA,EAAE,MAAQvO,EAAQ,OAASuO,EAAE,MAAQvO,EAAQ,SAC/CuO,EAAE,eAAe,EACjBsf,EAAG,EAEP,CACF,CAAC,CACH,CAAC,EACD3B,GAA+B,KAAM,KAAK,OAAO,EAAG,KAAK,YAAY,EACrE,KAAK,kBAAoB,GAE7B,CACA,WAAY,CACL,KAAK,iCACR,KAAK,kBAAkB,cAAc,CAEzC,CACA,qBAAsB,CACpB,IAAM4B,EAAa,KAAK,kBAAkB,cAAc,EAAI,EACtDC,EAAc,KAAK,kBAAkB,eAAe,EACpDC,EAAYF,EAAaC,EAAc,EAAI,EACjD,KAAK,UAAU,YAAc,KAAK,aAAaC,CAAS,CAC1D,CACA,aAAajY,EAAO,CAClB,IAAM1D,EAAW,KAAK,IAAI,YAAY,2BAA2B,EACjE,GAAIA,EAIF,OAAOA,EAHQ,CACb,MAAA0D,CACF,CACsB,EAExB,IAAM4W,EAAiB,KAAK,cAAc,kBAAkB,EACtDsB,EAAoBtB,EAAe,oBAAqB,GAAG,EAC3DuB,EAAmBvB,EAAe,mBAAoB,GAAG,EAC/D,OAAOwB,GAAoBpY,EAAOkY,EAAmBC,CAAgB,CACvE,CACA,aAAc,CACZ,IAAMvB,EAAiB,KAAK,cAAc,kBAAkB,EACtDyB,EAAUzB,EAAe,OAAQ,MAAM,EACvC0B,EAAQ1B,EAAe,KAAM,IAAI,EACjC2B,EAAQ3B,EAAe,KAAM,IAAI,EACjC4B,EAAW5B,EAAe,YAAa,YAAY,EACnD6B,EAAc7B,EAAe,eAAgB,eAAe,EAC5D8B,EAAU9B,EAAe,WAAY,WAAW,EAChD+B,EAAU/B,EAAe,WAAY,WAAW,EAChDgC,EAAS,KAAK,UAAU,EAC9B,MACE,uDAAuDA,CAAM;AAAA;AAAA;AAAA,mCAGhCA,CAAM;AAAA,mCACNA,CAAM,QAAQN,CAAK;AAAA,mCACnBM,CAAM;AAAA,mCACNA,CAAM,QAAQL,CAAK;AAAA,mCACnBK,CAAM;AAAA;AAAA;AAAA,2GAGkEJ,CAAQ;AAAA,8GACLC,CAAW;AAAA;AAAA,uCAElFG,CAAM,gBAAgBP,CAAO;AAAA,uCAC7BO,CAAM;AAAA,uCACNA,CAAM,aAAaL,CAAK;AAAA,uCACxBK,CAAM;AAAA;AAAA,0GAE6DF,CAAO;AAAA,0GACPC,CAAO;AAAA;AAAA,mBAI/G,CACA,UAAW,CACJ,KAAK,oBACR,KAAK,kBAAkB,aAAa,CAExC,CACA,cAAe,CACR,KAAK,iCACR,KAAK,kBAAkB,iBAAiB,CAE5C,CACA,UAAW,CACJ,KAAK,oBACR,KAAK,kBAAkB,aAAa,CAExC,CACA,wBAAyB,CACvB,IAAMX,EAAc,KAAK,kBAAkB,eAAe,EACpDa,EAAc,KAAK,SAAS,oBAAoB,EAChDC,EAAa,KAAK,kBAAkB,cAAc,EACxD,KAAK,gCAAkCd,IAAgB,EACvD,KAAK,qBAAqB,KAAK,QAAS,KAAK,+BAA+B,EAC5E,KAAK,qBAAqB,KAAK,WAAY,KAAK,+BAA+B,EAC/E,IAAMe,EAAqB,KAAK,qBAAqB,EAC/CC,EAAahB,IAAgBc,EAAa,EAChD,KAAK,mBAAqBE,GAAcD,EACxC,KAAK,mBAAqB,CAACF,GAAeE,GAAsBf,IAAgBc,EAAa,EAC7F,KAAK,qBAAqB,KAAK,OAAQ,KAAK,kBAAkB,EAC9D,KAAK,qBAAqB,KAAK,OAAQ,KAAK,kBAAkB,CAChE,CACA,qBAAqBG,EAAQC,EAAU,CACrCC,GAAiBF,EAAQC,CAAQ,EACjCD,EAAO,UAAU,OAAO,cAAeC,CAAQ,CACjD,CACA,iBAAkB,CAChB,IAAMlB,EAAc,KAAK,kBAAkB,eAAe,EACpDzD,EAAW,KAAK,kBAAkB,YAAY,EAC9CsE,EAAc,KAAK,SAAS,oBAAoB,EAChDO,EAAW,KAAK,SAAS,oBAAoB,EAAI,KAAK,kBAAkB,kBAAkB,EAAI,KAChGnF,EACAC,EAWJ,GAVI,KAAK,qBAAqB,EAC5BD,EAAWC,EAAS,GAEpBD,EAAWM,EAAWyD,EAAc,EACpC9D,EAASD,EAAWM,EAAW,EAC3BsE,GAAe3E,EAASkF,IAC1BlF,EAASkF,IAGb,KAAK,iBAAiB,YAAc,KAAK,aAAanF,CAAQ,EAC1D,KAAK,oBAAoB,UAAU,EAAG,CACxC,IAAM7K,EAAY,KAAK,cAAc,kBAAkB,EACvD,KAAK,gBAAgB,UAAYA,EAAU,qBAAsB,GAAG,CACtE,MACE,KAAK,gBAAgB,YAAc,KAAK,aAAa8K,CAAM,CAE/D,CACA,sBAAuB,CACrB,IAAM2E,EAAc,KAAK,SAAS,oBAAoB,EAChDC,EAAa,KAAK,kBAAkB,cAAc,EACxD,OAAOD,GAAeC,IAAe,CACvC,CACA,gBAAiB,CACf,IAAMO,EAAgB,KAAK,SAAS,oBAAoB,EAClDP,EAAa,KAAK,kBAAkB,cAAc,EAClDM,EAAWC,EAAgB,KAAK,kBAAkB,kBAAkB,EAAI,KAC9E,GAAID,IAAa,EAAG,CAClB,IAAME,EAAW,KAAK,SAAS,OAAO,CAAC,EAEvC,GADuBA,GAAYA,EAAS,OAAS,EAAEA,EAAS,WAAaA,EAAS,SAClE,CAClB,KAAK,qBAAqB,EAC1B,MACF,CACF,CACA,GAAID,EACF,KAAK,QAAQ,YAAc,KAAK,aAAaP,CAAU,EACvD,KAAK,cAAc,YAAc,KAAK,aAAaM,CAAQ,MACtD,CACL,IAAMG,EAAW,KAAK,cAAc,kBAAkB,EAAE,OAAQ,MAAM,EACtE,KAAK,QAAQ,UAAYA,EACzB,KAAK,cAAc,UAAYA,CACjC,CACF,CACA,sBAAuB,CACrB,KAAK,iBAAiB,YAAc,KAAK,aAAa,CAAC,EACvD,KAAK,UAAU,YAAc,KAAK,aAAa,CAAC,EAChD,KAAK,gBAAgB,YAAc,KAAK,aAAa,CAAC,EACtD,KAAK,QAAQ,YAAc,KAAK,aAAa,CAAC,EAC9C,KAAK,cAAc,YAAc,KAAK,aAAa,CAAC,CACtD,CACF,EACIC,GAAqB,CACvB,SAAU,gBACV,UAAWlC,EACb,EAGImC,GAAoB,cAAc93B,CAAS,CAC7C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,oBAChB,KAAK,YAAc,EACnB,KAAK,qBAAuB,EAC5B,KAAK,wBAA0B,EAC/B,KAAK,eAAiB,CACxB,CACA,UAAUe,EAAO,CACf,KAAK,SAAWA,EAAM,SACtB,KAAK,kBAAoBA,EAAM,iBACjC,CACA,eAAgB,CACd,KAAK,OAAS,KAAK,IAAI,IAAI,YAAY,EACvC,KAAK,wBAA0B,KAAK,IAAI,IAAI,oBAAoB,EAChE,KAAK,kBAAoB,KAAK,oBAAoB,EAClD,KAAK,2BAA2B,aAAc,KAAK,8BAA8B,KAAK,IAAI,CAAC,EAC3F,KAAK,2BAA2B,qBAAsB,KAAK,4BAA4B,KAAK,IAAI,CAAC,CACnG,CACA,uBAAwB,CACtB,OAAO82B,EACT,CACA,qBAAsB,CAEpB,OADuB,KAAK,IAAI,IAAI,2BAA2B,GAAK,KAAK,IAAI,IAAI,iCAAiC,EAEzG,GAEF,KAAK,IAAI,IAAI,mBAAmB,CACzC,CACA,+BAAgC,CAC9B,KAAK,OAAS,KAAK,IAAI,IAAI,YAAY,EACvC,KAAK,eAAe,EACpB,KAAK,+BAA+B,CAClC,iBAAkB,EACpB,CAAC,CACH,CACA,6BAA8B,CAC5B,KAAK,YAAY,KAAK,IAAI,IAAI,oBAAoB,EAAG,aAAa,CACpE,CACA,SAASlF,EAAM,CACT,CAAC,KAAK,QAAU,KAAK,cAAgBA,GAAQ,OAAO,KAAK,aAAgB,WAG7E,KAAK,YAAcA,EACnB,KAAK,eAAe,EACpB,KAAK,+BAA+B,CAClC,QAAS,EACX,CAAC,EACH,CACA,aAAa5tB,EAAS,CAEpB,OADqBA,EAAQ,UAAY,KAAK,sBAAwBA,EAAQ,UAAY,KAAK,uBAEjG,CACA,gBAAgBxD,EAAO,CACrB,OAAO,KAAK,MAAMA,EAAQ,KAAK,QAAQ,CACzC,CACA,kBAAkBA,EAAO,CACvB,GAAI,CAAC,KAAK,OACR,OAEF,IAAMw2B,EAAa,KAAK,gBAAgBx2B,CAAK,EAC7C,KAAK,SAASw2B,CAAU,CAC1B,CACA,YAAYC,EAAK,CACf,OAAK,KAAK,OAGM,KAAK,gBAAgBA,EAAI,QAAQ,IAC9B,KAAK,YAHf,EAIX,CACA,gBAAiB,CACf,OAAO,KAAK,WACd,CACA,cAAe,CACb,KAAK,SAAS,KAAK,YAAc,CAAC,CACpC,CACA,kBAAmB,CACjB,KAAK,SAAS,KAAK,YAAc,CAAC,CACpC,CACA,eAAgB,CACd,KAAK,SAAS,CAAC,CACjB,CACA,cAAe,CACb,IAAMP,EAAW,KAAK,SAAS,YAAY,EACrCQ,EAAW,KAAK,MAAMR,EAAW,KAAK,QAAQ,EACpD,KAAK,SAASQ,CAAQ,CACxB,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,eAAgB,CACd,OAAO,KAAK,UACd,CAEA,QAAQtF,EAAM,CACZ,KAAK,YAAcA,CACrB,CACA,IAAI,UAAW,CACb,OAAIhrB,EAAQ,KAAK,sBAAsB,EAC9B,KAAK,uBAEVA,EAAQ,KAAK,4BAA4B,EACpC,KAAK,6BAEVA,EAAQ,KAAK,wBAAwB,EAChC,KAAK,yBAEVA,EAAQ,KAAK,uBAAuB,EAC/B,KAAK,wBAEP,KAAK,eACd,CACA,gBAAiB,CACX,KAAK,OACH,KAAK,kBACP,KAAK,sBAAsB,EAE3B,KAAK,6BAA6B,EAGpC,KAAK,yBAAyB,EAEhC,KAAK,kBAAkB,gBAAgB,KAAK,qBAAsB,KAAK,uBAAuB,CAChG,CACA,6BAA8B,CAC5B,GAAI,KAAK,yBAA2B,OAClC,OAEF,IAAMuwB,EAAc,KAAK,uBACzB,KAAK,uBAAyB,OAC1B,KAAK,WAAaA,IAGtB,KAAK,eAAe,EACpB,KAAK,+BAA+B,CAClC,YAAa,EACf,CAAC,EACH,CACA,YAAYC,EAAMpoB,EAAQ,CACxB,IAAMqoB,EAAc,KAAK,SACzB,OAAQroB,EAAQ,CACd,IAAK,iBACH,KAAK,uBAAyBooB,EAC9B,MACF,IAAK,mBACH,KAAK,6BAA+BA,EAChC,KAAK,cAAgB,GACvB,KAAK,cAAc,EAErB,MACF,IAAK,eACH,KAAK,yBAA2BA,EAChC,MACF,IAAK,cACH,KAAK,wBAA0BA,EAC/B,KAAK,yBAA2B,OAChC,KAAK,6BAA+B,OAChC,KAAK,cAAgB,GACvB,KAAK,cAAc,EAErB,KACJ,CACIC,IAAgB,KAAK,WACvB,KAAK,eAAe,EACpB,KAAK,+BAA+B,CAClC,YAAa,GACb,iBAAkB,EACpB,CAAC,EAEL,CACA,aAAc,CACZ,KAAK,eAAiB,EACtB,KAAK,qBAAuB,EAC5B,KAAK,wBAA0B,GAC/B,KAAK,YAAc,EACnB,KAAK,WAAa,CACpB,CACA,4BAA6B,CACvB,KAAK,aAAe,KAAK,aAC3B,KAAK,YAAc,KAAK,WAAa,IAEnC,CAAC,SAAS,KAAK,WAAW,GAAK,MAAM,KAAK,WAAW,GAAK,KAAK,YAAc,KAC/E,KAAK,YAAc,EAEvB,CACA,8BAA+B,CAE7B,GADA,KAAK,eAAiB,KAAK,SAAS,oBAAoB,EACpD,KAAK,gBAAkB,EAAG,CAC5B,KAAK,YAAY,EACjB,MACF,CACA,IAAMC,EAAqB,KAAK,eAAiB,EACjD,KAAK,WAAa,KAAK,MAAMA,EAAqB,KAAK,QAAQ,EAAI,EACnE,KAAK,2BAA2B,EAChC,IAAMC,EAAuB,KAAK,SAAW,KAAK,YAC9CC,EAAqB,KAAK,UAAY,KAAK,YAAc,GAAK,EAKlE,GAJIA,EAAqBF,IACvBE,EAAqBF,GAEvB,KAAK,qBAAuB,KAAK,SAAS,6BAA6BC,CAAoB,EACvFC,IAAuBF,EACzB,KAAK,wBAA0B,KAAK,SAAS,YAAY,EAAI,MACxD,CACL,IAAMG,EAAsB,KAAK,SAAS,6BAA6BD,EAAqB,CAAC,EAC7F,KAAK,wBAA0BC,EAAsB,CACvD,CACF,CACA,mBAAoB,CAClB,OAAO,KAAK,cACd,CACA,uBAAwB,CAEtB,GADA,KAAK,eAAiB,KAAK,SAAS,YAAY,EAC5C,KAAK,iBAAmB,EAAG,CAC7B,KAAK,YAAY,EACjB,MACF,CACA,IAAMC,EAAc,KAAK,eAAiB,EAC1C,KAAK,WAAa,KAAK,MAAMA,EAAc,KAAK,QAAQ,EAAI,EAC5D,KAAK,2BAA2B,EAChC,KAAK,qBAAuB,KAAK,SAAW,KAAK,YACjD,KAAK,wBAA0B,KAAK,UAAY,KAAK,YAAc,GAAK,EACpE,KAAK,wBAA0BA,IACjC,KAAK,wBAA0BA,EAEnC,CACA,0BAA2B,CACzB,KAAK,YAAY,OAAQ,gBAAgB,EACzC,KAAK,WAAa,EAClB,KAAK,YAAc,EACnB,KAAK,qBAAuB,EAC5B,KAAK,wBAA0B,KAAK,SAAS,YAAY,EAAI,CAC/D,CACA,+BAA+Bx4B,EAAQ,CACrC,GAAM,CACJ,iBAAAy4B,EAAmB,GACnB,QAAAC,EAAU,GACV,YAAApE,EAAc,EAChB,EAAIt0B,EACE20B,EAAyB,CAC7B,KAAM,oBACN,QAAS,GACT,QAAS,GACT,QAAA+D,EACA,YAAApE,EACA,iBAAAmE,CACF,EACA,KAAK,aAAa,cAAc9D,CAAsB,CACxD,CACF,EAGIgE,GAAuB,CACzB,QAASjY,EACT,WAAY,qCACZ,MAAO,CAACmX,GAAmB3D,EAA6B,CAC1D,EACI0E,GAAsB,CACxB,QAASlY,EACT,WAAY,oCACZ,iBAAkB,CAACiY,EAAoB,EACvC,aAAc,CACZ,0BAAAnF,GACA,sBAAAC,GACA,yBAAAC,GACA,wBAAAC,GACA,sBAAAC,GACA,uBAAAC,GACA,2BAAAC,GACA,wBAAAC,GACA,uBAAAC,GACA,mBAAAC,EACF,CACF,EACI4E,GAAmB,CACrB,QAASnY,EACT,WAAY,gCACZ,iBAAkB,CAACiY,GAAsBC,EAAmB,CAC9D,EAGIE,EAAa,0BACbC,GAA2B,2CAC3BC,GAAkB,gCAClBC,GAAyB,wCACzBC,GAAuB,sCACvBC,GAAmB,6BACnBC,GAAkB,gCAClBC,GAAoB,mCACpBC,GAAqB,oCACrBC,GAAa,2BACbC,GAAuB,sCACvBC,EAAoB,mCACpBC,GAA2B,4CAC3BC,GAAgB,+BAChBC,GAAkB,iCAClBC,GAAkB,CACpB,cAAef,EACf,SAAUA,EACV,UAAWA,EACX,QAASA,EACT,YAAaA,EACb,cAAeA,EACf,cAAeA,EACf,kBAAmBA,EACnB,iBAAkBA,EAClB,UAAWA,EACX,YAAaA,EACb,kBAAmBA,EACnB,oBAAqBA,EACrB,uBAAwBA,EACxB,yBAA0BA,EAC1B,iBAAkBA,EAClB,gBAAiBA,EACjB,WAAYA,EACZ,mBAAoBA,EACpB,WAAYA,EACZ,uBAAwBA,EACxB,iBAAkBA,EAClB,YAAaA,EACb,qBAAsBA,EACtB,0BAA2BA,EAC3B,oBAAqBA,EACrB,yBAA0BA,EAC1B,uBAAwBA,EACxB,qBAAsBA,EACtB,SAAUA,EACV,sBAAuBA,EACvB,wBAAyBA,EACzB,oBAAqBA,EACrB,mBAAoBA,EACpB,kBAAmBA,EACnB,eAAgBA,EAChB,iBAAkBA,EAClB,eAAgBA,EAChB,cAAeA,EACf,kBAAmBA,EACnB,iBAAkBA,EAClB,iBAAkBA,EAClB,kBAAmBA,EACnB,oBAAqBA,EACrB,qBAAsBA,EACtB,iBAAkBA,EAClB,SAAUA,EACV,aAAcA,EACd,+BAAgCA,EAChC,8BAA+BA,EAC/B,eAAgBA,EAChB,cAAeA,EACf,cAAeA,EACf,qBAAsBA,EACtB,wBAAyBA,EACzB,gBAAiBA,EACjB,mBAAoBA,EACpB,mBAAoBA,EACpB,kBAAmBA,EACnB,YAAaA,EACb,oBAAqBA,EACrB,aAAcA,EACd,WAAYA,EACZ,cAAeA,EACf,2BAA4BA,EAC5B,wBAAyBA,EACzB,wBAAyBA,EACzB,yBAA0BA,EAC1B,eAAgBA,EAChB,kBAAmBA,EACnB,qBAAsBA,EACtB,aAAcA,EACd,cAAeA,EACf,iBAAkBA,EAClB,qBAAsBA,EACtB,eAAgBA,EAChB,uBAAwBA,EACxB,wBAAyBA,EACzB,6BAA8BA,EAC9B,UAAWA,EACX,WAAYA,EACZ,iBAAkBA,EAClB,eAAgBA,EAChB,iBAAkBA,EAClB,oBAAqBA,EACrB,oBAAqBA,EACrB,sBAAuBA,EACvB,UAAWA,EACX,cAAeA,EACf,eAAgBA,EAChB,qBAAsBA,EACtB,sBAAuBA,EACvB,iBAAkBA,EAClB,kBAAmBA,EACnB,gBAAiBA,EACjB,iBAAkBA,EAClB,kBAAmBA,EACnB,wBAAyBA,EACzB,0BAA2BA,EAC3B,yBAA0BA,EAC1B,uBAAwBA,EACxB,8BAA+BA,EAC/B,WAAYA,EACZ,kBAAmBA,EACnB,YAAaA,EACb,eAAgBA,EAChB,gBAAiBA,EACjB,6BAA8BA,EAC9B,+BAAgCA,EAChC,8BAA+BA,EAC/B,4BAA6BA,EAC7B,eAAgBA,EAChB,gBAAiBA,EACjB,mBAAoBA,EACpB,gBAAiBA,EACjB,gBAAiBA,EACjB,uBAAwBA,EACxB,gBAAiBA,EACjB,YAAaA,EACb,iBAAkBA,EAClB,mBAAoBA,EACpB,mBAAoBA,EACpB,mBAAoBA,EACpB,gBAAiBA,EACjB,sBAAuBA,EACvB,kBAAmBA,EACnB,wBAAyBA,EACzB,cAAeA,EACf,eAAgBA,EAChB,eAAgBA,EAChB,qBAAsBA,EACtB,qBAAsBA,EACtB,iBAAkBA,EAClB,qBAAsBA,EACtB,eAAgBA,EAChB,iBAAkBA,EAClB,0BAA2BA,EAC3B,sBAAuBA,EACvB,yBAA0BA,EAC1B,wBAAyBA,EACzB,sBAAuBA,EACvB,uBAAwBA,EACxB,2BAA4BA,EAC5B,wBAAyBA,EACzB,uBAAwBA,EACxB,mBAAoBA,EAEpB,UAAWA,EACX,YAAaA,EACb,mBAAoBA,EACpB,YAAaA,EACb,mBAAoBA,EACpB,2BAA4BC,GAC5B,0BAA2BA,GAC3B,gBAAiBA,GACjB,uBAAwBA,GACxB,8BAA+BA,GAC/B,gBAAiBA,GACjB,iBAAkBA,GAClB,sBAAuBA,GACvB,uBAAwBA,GACxB,yBAA0BA,GAC1B,aAAcC,GACd,gBAAiBA,GACjB,qBAAsBC,GACtB,mBAAoBA,GACpB,oBAAqBA,GACrB,oBAAqBA,GACrB,uBAAwBC,GACxB,uBAAwBA,GACxB,0BAA2BA,GAC3B,0BAA2BA,GAC3B,eAAgBC,GAChB,YAAaA,GACb,qBAAsBA,GACtB,cAAeA,GACf,mBAAoBA,GACpB,oBAAqBA,GACrB,iBAAkBA,GAClB,iBAAkBA,GAClB,uBAAwBA,GACxB,YAAaA,GACb,aAAcA,GACd,gBAAiBC,GACjB,eAAgBA,GAChB,4BAA6BA,GAC7B,6BAA8BA,GAC9B,sBAAuBA,GACvB,mBAAoBA,GACpB,eAAgBC,GAChB,kBAAmBA,GACnB,qBAAsBA,GACtB,yBAA0BA,GAC1B,4BAA6BA,GAC7B,kBAAmBC,GACnB,qBAAsBA,GACtB,kBAAmBA,GACnB,sBAAuBA,GACvB,gBAAiBC,GACjB,kBAAmBA,GACnB,kBAAmBA,GACnB,cAAeC,GACf,aAAcA,GACd,oBAAqBA,GACrB,WAAYC,EACZ,YAAaA,EACb,cAAeA,EACf,iBAAkBA,EAClB,YAAaA,EACb,qBAAsBA,EACtB,gBAAiBA,EACjB,gBAAiBA,EACjB,kBAAmBA,EACnB,mBAAoBA,EACpB,eAAgBA,EAChB,gBAAiBA,EACjB,mBAAoBA,EACpB,qBAAsBA,EACtB,sBAAuBA,EACvB,kBAAmBA,EACnB,mBAAoBA,EACpB,mBAAoBA,EACpB,mBAAoBA,EACpB,gBAAiBA,EACjB,kBAAmBA,EACnB,mBAAoBA,EACpB,eAAgBA,EAChB,gBAAiBA,EACjB,gBAAiBA,EACjB,sBAAuBA,EACvB,sBAAuBA,EACvB,4BAA6BC,GAC7B,4BAA6BA,GAC7B,2BAA4BA,GAC5B,gCAAiCA,GACjC,uBAAwBA,GACxB,qBAAsBA,GACtB,iCAAkCA,GAClC,kBAAmBA,GACnB,6BAA8BA,GAC9B,iBAAkBC,GAClB,kBAAmBA,GACnB,mBAAoBA,GACpB,cAAeA,GACf,eAAgBA,GAChB,mBAAoBA,GACpB,iBAAkBA,GAClB,mBAAoBA,GACpB,qBAAsBA,GACtB,WAAYA,GACZ,eAAgBC,EAClB,EACIE,GAAa,aACbC,EAAa,aACbC,GAAW,WACXC,GAAoB,CACtB,2BAA4B,CAACH,EAAU,EACvC,0BAA2B,CAACA,EAAU,EACtC,gBAAiB,CAACA,EAAU,EAC5B,uBAAwB,CAACA,EAAU,EACnC,8BAA+B,CAACA,EAAU,EAC1C,gBAAiB,CAACA,EAAU,EAC5B,iBAAkB,CAACA,EAAU,EAC7B,sBAAuB,CAACA,EAAU,EAClC,uBAAwB,CAACA,EAAU,EACnC,yBAA0B,CAACA,EAAU,EACrC,4BAA6B,CAACC,CAAU,EACxC,4BAA6B,CAACA,CAAU,EACxC,2BAA4B,CAACA,CAAU,EACvC,gCAAiC,CAACA,CAAU,EAC5C,uBAAwB,CAACA,CAAU,EACnC,qBAAsB,CAACA,CAAU,EACjC,iCAAkC,CAACA,CAAU,EAC7C,kBAAmB,CAACA,CAAU,EAC9B,6BAA8B,CAACA,CAAU,EACzC,qBAAsB,CAACC,EAAQ,EAC/B,mBAAoB,CAACA,EAAQ,EAC7B,oBAAqB,CAACA,EAAQ,EAC9B,oBAAqB,CAACA,EAAQ,EAC9B,UAAW,CAACF,GAAYC,CAAU,EAClC,YAAa,CAACD,GAAYC,CAAU,EACpC,mBAAoB,CAACD,GAAYC,CAAU,EAC3C,YAAa,CAACC,GAAUD,CAAU,EAClC,mBAAoB,CAACC,GAAUD,CAAU,CAC3C,EACIG,GAAsB,CACxB,SAAU,CACR,QAAS,QACT,IAAK,cACP,EACA,qBAAsB,CACpB,QAAS,QACT,IAAK,2BACP,EACA,oBAAqB,CACnB,QAAS,QACT,IAAK,0BACP,EACA,SAAU,CACR,QAAS,QACT,QAAS,sDACX,EACA,iBAAkB,CAChB,QAAS,QACT,IAAK,gCACL,IAAK,kCACP,EACA,gBAAiB,CACf,QAAS,QACT,IAAK,8BACL,IAAK,gCACP,EACA,WAAY,CACV,QAAS,QACT,IAAK,2BACL,IAAK,6BACP,EACA,eAAgB,CACd,QAAS,QACT,IAAK,6BACL,IAAK,gDACP,EACA,eAAgB,CACd,QAAS,QACT,IAAK,kCACL,IAAK,oCACP,EACA,WAAY,CACV,QAAS,QACT,IAAK,wBACL,IAAK,4BACP,EACA,kBAAmB,CACjB,QAAS,QACT,IAAK,4BACL,IAAK,8BACP,EACA,eAAgB,CACd,QAAS,QACT,IAAK,yBACL,IAAK,2BACP,EACA,qBAAsB,CACpB,QAAS,QACT,IAAK,+BACL,IAAK,iCACP,EACA,kBAAmB,CACjB,QAAS,QACT,IAAK,4BACL,IAAK,8BACP,EACA,kBAAmB,CACjB,QAAS,QACT,IAAK,4BACL,IAAK,8BACP,EACA,eAAgB,CACd,QAAS,QACT,IAAK,yBACL,IAAK,2BACP,EACA,+BAAgC,CAC9B,QAAS,QACT,QAAS,kGACX,EACA,8BAA+B,CAC7B,QAAS,QACT,QAAS,iHACX,EACA,kBAAmB,CACjB,QAAS,QACT,QAAS,oPACX,EACA,mBAAoB,CAClB,QAAS,MACT,QAAS,mHACX,CACF,EACA,SAASC,GAAuBlsB,EAAcmsB,EAAQ,CACpD,IAAMC,EAASR,GAAgB5rB,CAAY,EACvCosB,EACE9S,EAAe,mBAAmB8S,EAAQ,OAAOpsB,CAAY,GAAImsB,CAAM,GACzEjzB,EAAU,iBAAiB8G,CAAY,+BAA+BosB,CAAM,GAAG,EAGjFhb,EAAW,0BAA0BpR,CAAY,eAAe,CAEpE,CACA,SAASqsB,GAAoBrsB,EAAcssB,EAAaz5B,EAAO,CAC7D,IAAM05B,EAAcN,GAAoBjsB,CAAY,EACpD,GAAIusB,EAAa,CACf,GAAM,CACJ,QAAAC,EACA,IAAKC,EACL,IAAAC,EACA,QAAAC,CACF,EAAIJ,EACEK,EAAYF,GAAO1sB,EACzB,MAAO,IAAIC,IAAS,CAClB,IAAM4sB,EAAqBJ,EAAc,cAAcA,CAAW,aAAe,GACjF,OAAAvzB,EAAU,SAASszB,CAAO,QAAQI,CAAS,mBAAmBC,CAAkB,GAAGF,GAAW,EAAE,EAAE,EAC3FL,EAAY,MAAMA,EAAarsB,CAAI,CAC5C,CACF,CACA,IAAM6sB,EAAYd,GAAkBhsB,CAAY,EAChD,OAAI8sB,EACK,IAAI7sB,IAAS,CAClB,IAAM8sB,EAAWl6B,EAAM,SAAS,QAAQ,EACxC,GAAI,CAACi6B,EAAU,SAASC,CAAQ,EAAG,CACjC3b,EAAW,OAAOpR,CAAY,wDAAwD8sB,EAAU,KAAK,MAAM,CAAC,EAAE,EAC9G,MACF,CACA,OAAOR,EAAY,MAAMA,EAAarsB,CAAI,CAC5C,EAEKqsB,CACT,CAGA,IAAIU,GAAiC,CACnC,kBAAmB,CACjB,QAAS,OACT,QAAS,oCACX,EACA,aAAc,CACZ,QAAS,OACT,QAAS,yCACX,EACA,kBAAmB,CACjB,QAAS,OACT,QAAS,mDACX,CACF,EACIC,GAAiC,CAACC,EAAUC,KACzCA,EAAY,cAAgB,gBAAkB,aAC1C,CACL,OAAQ,kCACV,EAEK,KAELC,GAAgC,CAElC,eAAgBH,GAChB,SAAUA,GACV,cAAeA,GACf,YAAaA,GACb,YAAaA,GACb,MAAOA,GACP,WAAYA,GACZ,QAASA,GACT,WAAY3P,GACNA,EAAQ,aAAe,gBAAkBA,EAAQ,aAAe,yBAC3D,CACL,OAAQ,iCACV,EAEK,KAET,SAAUA,GAAW,CACnB,IAAM+P,EAAqB,CAAC,iBAAkB,gBAAgB,EAC9D,OAAI/P,EAAQ,UAAU,KAAKgQ,GAAOD,EAAmB,SAASC,CAAG,CAAC,EACzD,CACL,OAAQ,0BACV,EAEK,IACT,EACA,kBAAmB,CACjB,OAAQ,CAAC,2BAA6C,uCAAoE,CAC5H,EACA,oBAAqB,CACnB,OAAQ,CAAC,2BAA6C,uCAAoE,CAC5H,EACA,wBAAyB,CACvB,mBAAoB,CAAC,aAAc,YAAY,EAC/C,aAAc,CAACJ,EAAU,CACvB,aAAAK,CACF,IAAMA,IAAiB,WAAa,KAAO,sEAC7C,EACA,oCAAqC,CACnC,mBAAoB,CAAC,YAAY,EACjC,aAAc,CAACL,EAAU,CACvB,aAAAK,CACF,IAAMA,IAAiB,WAAa,KAAO,kFAC7C,EACA,uCAAwC,CACtC,mBAAoB,CAAC,YAAY,EACjC,aAAc,CAACL,EAAU,CACvB,aAAAK,CACF,IAAMA,IAAiB,WAAa,KAAO,qFAC7C,EACA,SAAU,IAAMC,EAClB,EACIC,GAAoB,CACtB,WAAY,OACZ,gBAAiB,OACjB,YAAa,OACb,eAAgB,OAChB,kBAAmB,OACnB,UAAW,OACX,QAAS,OACT,MAAO,OACP,KAAM,OACN,YAAa,OACb,MAAO,OACP,KAAM,OACN,aAAc,OACd,iBAAkB,OAClB,aAAc,OACd,cAAe,OACf,UAAW,OACX,aAAc,OACd,OAAQ,OACR,eAAgB,OAChB,eAAgB,OAChB,QAAS,OACT,OAAQ,OACR,cAAe,OACf,cAAe,OACf,aAAc,OACd,wBAAyB,OACzB,qBAAsB,OACtB,2BAA4B,OAC5B,UAAW,OACX,aAAc,OACd,mBAAoB,OACpB,WAAY,OACZ,iBAAkB,OAClB,aAAc,OACd,iBAAkB,OAClB,gBAAiB,OACjB,sBAAuB,OACvB,wBAAyB,OACzB,8BAA+B,OAC/B,uBAAwB,OACxB,QAAS,OACT,kBAAmB,OACnB,oBAAqB,OACrB,SAAU,OACV,aAAc,OACd,gBAAiB,OACjB,SAAU,OACV,oBAAqB,OACrB,eAAgB,OAChB,MAAO,OACP,UAAW,OACX,iBAAkB,OAClB,KAAM,OACN,YAAa,OACb,MAAO,OACP,aAAc,OACd,SAAU,OACV,SAAU,OACV,cAAe,OACf,qBAAsB,OACtB,WAAY,OACZ,kBAAmB,OACnB,kBAAmB,OACnB,yBAA0B,OAC1B,yBAA0B,OAC1B,cAAe,OACf,cAAe,OACf,oBAAqB,OACrB,KAAM,OACN,YAAa,OACb,SAAU,OACV,gBAAiB,OACjB,MAAO,OACP,aAAc,OACd,kBAAmB,OACnB,uBAAwB,OACxB,wBAAyB,OACzB,oCAAqC,OACrC,uCAAwC,OACxC,aAAc,OACd,yBAA0B,OAC1B,gBAAiB,OACjB,aAAc,OACd,YAAa,OACb,WAAY,OACZ,WAAY,OACZ,kBAAmB,OACnB,iBAAkB,OAClB,eAAgB,OAChB,YAAa,OACb,YAAa,OACb,SAAU,OACV,cAAe,OACf,kBAAmB,OACnB,sBAAuB,OACvB,QAAS,OACT,UAAW,OACX,WAAY,OACZ,SAAU,OACV,SAAU,OACV,UAAW,OACX,gBAAiB,OACjB,eAAgB,OAChB,gBAAiB,OACjB,mBAAoB,OACpB,eAAgB,OAChB,iBAAkB,OAClB,mBAAoB,OACpB,YAAa,OACb,YAAa,OACb,kBAAmB,OACnB,WAAY,OACZ,eAAgB,OAChB,YAAa,OACb,WAAY,OACZ,OAAQ,OACR,gBAAiB,OACjB,sBAAuB,OACvB,4BAA6B,OAC7B,QAAS,OACT,QAAS,OACT,mBAAoB,OACpB,mBAAoB,OACpB,cAAe,OACf,oBAAqB,OACrB,kBAAmB,OACnB,YAAa,OACb,mBAAoB,OACpB,qBAAsB,OACtB,mBAAoB,OACpB,yBAA0B,OAC1B,2BAA4B,OAC5B,wBAAyB,OACzB,cAAe,OACf,iBAAkB,OAClB,6BAA8B,OAC9B,2BAA4B,OAC5B,0BAA2B,OAC3B,oBAAqB,OACrB,0BAA2B,OAC3B,4BAA6B,OAC7B,QAAS,MACX,EACIC,GAAiB,OAAO,KAAKD,EAAiB,EAC9CD,GAAqB,CACvB,WAAY,SACZ,cAAeE,GACf,QAAS,qBACT,aAAcV,GACd,YAAaI,EACf,EAGIO,GAA2B,KAAO,CACpC,oBAAqB,CACnB,QAAS,KACT,QAAS,wDACX,EACA,oBAAqB,CACnB,QAAS,KACT,QAAS,0CACX,EACA,cAAe,CACb,QAAS,OACT,QAAS,kBACX,EACA,eAAgB,CACd,QAAS,OACT,QAAS,mBACX,EACA,iCAAkC,CAChC,QAAS,MACX,EACA,uBAAwB,CACtB,QAAS,MACX,EACA,yBAA0B,CACxB,QAAS,MACX,EACA,sBAAuB,CACrB,QAAS,OACT,QAAS,iFACX,EACA,mBAAoB,CAClB,QAAS,OACT,QAAS,8BACX,EACA,wBAAyB,CACvB,QAAS,OACT,QAAS,8BACX,EACA,uBAAwB,CACtB,QAAS,KACT,QAAS,8BACX,CACF,GACIC,GAAuB,CACzB,oBAAqB,GACrB,4BAA6B,GAC7B,+BAAgC,GAChC,iBAAkB,GAClB,sBAAuB,GACvB,eAAgB,QAChB,iBAAkB,IAClB,iBAAkB,IAClB,kBAAmB,GACnB,gBAAiB,WACjB,mBAAoB,GACpB,uBAAwB,GACxB,4BAA6B,GAC7B,mBAAoB,IACpB,4BAA6B,GAC7B,6BAA8B,GAC9B,6BAA8B,GAC9B,uBAAwB,GACxB,qBAAsB,GACtB,uBAAwB,GACxB,oBAAqB,GACrB,yBAA0B,GAC1B,8BAA+B,GAC/B,uBAAwB,GACxB,4BAA6B,GAC7B,8BAA+B,GAC/B,6BAA8B,GAC9B,iBAAkB,GAClB,gBAAiB,GACjB,qBAAsB,GACtB,gBAAiB,GACjB,kBAAmB,GACnB,aAAc,GACd,8BAA+B,GAC/B,yBAA0B,GAC1B,kCAAmC,GACnC,6BAA8B,GAC9B,oBAAqB,GACrB,yBAA0B,GAC1B,kBAAmB,GACnB,oBAAqB,GACrB,iBAAkB,GAClB,kCAAmC,GACnC,qCAAsC,GACtC,qBAAsB,GACtB,qCAAsC,GACtC,aAAc,GACd,aAAc,GACd,eAAgB,GAChB,oBAAqB,GACrB,oBAAqB,GACrB,SAAU,EACV,UAAW,GACX,WAAY,GACZ,uBAAwB,GACxB,sBAAuB,GACvB,cAAe,GACf,0BAA2B,GAC3B,oBAAqB,GACrB,8BAA+B,GAC/B,2BAA4B,GAC5B,wBAAyB,GACzB,MAAO,GACP,uBAAwB,GACxB,sBAAuB,GACvB,WAAY,GACZ,mBAAoB,IACpB,2BAA4B,GAC5B,uBAAwB,GACxB,kBAAmB,GACnB,wBAAyB,GACzB,UAAW,GACX,eAAgB,QAChB,qBAAsB,EACtB,wBAAyB,GACzB,8BAA+B,GAC/B,kBAAmB,GACnB,wBAAyB,GACzB,2BAA4B,GAC5B,4BAA6B,GAC7B,wBAAyB,GACzB,0CAA2C,GAC3C,YAAa,GACb,sBAAuB,GACvB,eAAgB,IAChB,kBAAmB,IACnB,cAAe,IACf,iBAAkB,IAClB,2BAA4B,GAC5B,UAAW,SACX,eAAgB,GAChB,UAAW,GACX,6BAA8B,GAC9B,kCAAmC,GACnC,0BAA2B,GAC3B,eAAgB,GAChB,gBAAiB,GACjB,4BAA6B,GAC7B,iBAAkB,GAClB,gBAAiB,GACjB,mBAAoB,GACpB,iBAAkB,eAClB,qBAAsB,EACtB,mBAAoB,GACpB,qBAAsB,GACtB,wBAAyB,GACzB,yBAA0B,GAC1B,qBAAsB,GACtB,gBAAiB,GACjB,0BAA2B,GAC3B,gCAAiC,GACjC,qBAAsB,GACtB,qBAAsB,GACtB,kBAAmB,QACnB,sCAAuC,GACvC,SAAU,GACV,0BAA2B,GAC3B,wBAAyB,GACzB,aAAc,aACd,2BAA4B,GAC5B,0CAA2C,GAC3C,kBAAmB,EACnB,wBAAyB,EACzB,0BAA2B,EAC3B,iCAAkC,GAClC,eAAgB,IAChB,iBAAkB,GAClB,gCAAiC,EACjC,wBAAyB,EACzB,oBAAqB,GACrB,wBAAyB,GACzB,oCAAqC,GACrC,uBAAwB,GACxB,yBAA0B,GAC1B,oCAAqC,IACrC,yBAA0B,EAC1B,2BAA4B,EAC5B,2BAA4B,GAC5B,yBAA0B,GAC1B,0BAA2B,GAC3B,yBAA0B,GAC1B,wBAAyB,GACzB,gCAAiC,GACjC,uBAAwB,GACxB,2BAA4B,GAC5B,mCAAoC,GACpC,wBAAyB,GACzB,uBAAwB,GACxB,0BAA2B,GAC3B,kBAAmB,GACnB,oBAAqB,GACrB,4BAA6B,GAC7B,wBAAyB,GACzB,qBAAsB,GACtB,kBAAmB,GACnB,iBAAkB,GAClB,oBAAqB,KACrB,6BAA8B,GAC9B,aAAc,GACd,WAAY,GACZ,kBAAmB,GACnB,gBAAiB,GACjB,8BAA+B,GAC/B,0BAA2B,GAC3B,qBAAsB,GACtB,qBAAsB,GACtB,UAAW,GACX,gBAAiB,GACjB,+BAAgC,GAChC,sBAAuB,EACvB,+BAAgC,GAChC,sCAAuC,GACvC,yBAA0B,GAC1B,WAAY,MACZ,yBAA0B,EAC5B,EACIC,GAA0B,KAAO,CACnC,QAAS,CACP,OAAQ,8BACV,EACA,UAAW,CACT,OAAQ,gCACV,EACA,aAAc,CACZ,OAAQ,4BACV,EACA,iBAAkB,CAChB,OAAQ,0BACV,EACA,oBAAqB,CACnB,OAAQ,0BACV,EACA,+BAAgC,CAC9B,OAAQ,0BACV,EACA,qBAAsB,CACpB,OAAQ,qCACV,EACA,SAAU,CACR,mBAAoB,CAAC,aAAc,YAAY,EAC/C,OAAQ,mCACR,aAAcvQ,GAAW,CACvB,IAAMyP,EAAWzP,EAAQ,cAAgB,aACzC,OAAQyP,EAAU,CAChB,IAAK,aACH,CACE,IAAMe,EAAc,0CAA0Cf,CAAQ,cACtE,OAAOzP,EAAQ,YAAc,KAAOwQ,CACtC,CACF,IAAK,aACH,CACE,IAAMC,EAAc,4EAA4EhB,CAAQ,cACxG,OAAOzP,EAAQ,mBAAqBA,EAAQ,sBAAwB,KAAOyQ,CAC7E,CACJ,CACA,OAAO,IACT,CACF,EACA,aAAc,CACZ,OAAQ,mCACV,EACA,qBAAsB,CACpB,OAAQ,qCACV,EACA,kBAAmB,CACjB,aAAc,CACZ,qBAAsB,CAAC,EAAI,CAC7B,CACF,EACA,iBAAkB,CAChB,aAAc,CACZ,qBAAsB,CAAC,EAAI,CAC7B,CACF,EACA,qBAAsB,CACpB,mBAAoB,CAAC,YAAY,CACnC,EACA,mBAAoB,CAClB,mBAAoB,CAAC,aAAc,YAAY,EAC/C,aAAczQ,GAAW,CAEvB,OADiBA,EAAQ,cAAgB,aACvB,CAChB,IAAK,aACH,OAAO,KACT,IAAK,aAGD,OAAOA,EAAQ,iCADC,iFAC4C,IAElE,CACA,OAAO,IACT,CACF,EACA,qBAAsB,CACpB,mBAAoB,CAAC,YAAY,EACjC,aAAc,CACZ,cAAe,CAAC,OAAQ,QAAQ,CAClC,CACF,EACA,wBAAyB,CACvB,mBAAoB,CAAC,YAAY,CACnC,EACA,0BAA2B,CACzB,aAAc,CACZ,qBAAsB,CAAC,OAAQ,EAAK,EACpC,gCAAiC,CAAC,OAAQ,EAAK,CACjD,CACF,EACA,gCAAiC,CAC/B,aAAc,CACZ,qBAAsB,CAAC,OAAQ,EAAK,EACpC,0BAA2B,CAAC,OAAQ,EAAK,CAC3C,CACF,EACA,qBAAsB,CACpB,aAAc,CACZ,aAAc,CAAC,UAAU,CAC3B,CACF,EACA,mBAAoB,CAClB,mBAAoB,CAAC,UAAU,EAC/B,OAAQ,wCACV,EACA,qBAAsB,CACpB,mBAAoB,CAAC,YAAY,EACjC,OAAQ,2CACV,EACA,eAAgB,CACd,mBAAoB,CAAC,aAAc,UAAU,CAC/C,EACA,WAAY,CACV,mBAAoB,CAAC,UAAU,EAC/B,OAAQ,uCACV,EACA,QAAS,CACP,mBAAoB,CAAC,YAAY,EACjC,OAAQ,0CACV,EACA,WAAY,IAAMkQ,GAClB,cAAe,IAAMA,GACrB,mBAAoB,IAAMA,GAC1B,mBAAoB,IAAMA,EAC5B,GACIQ,GAA0B,KAAO,CACnC,WAAY,cACZ,cAAe,CAAC,GAAGC,GAAa,eAAgB,GAAGC,GAAc,eAAe,EAChF,mBAAoB,CAAC,KAAK,EAC1B,QAAS,gBACT,aAAcP,GAAyB,EACvC,YAAaE,GAAwB,CACvC,GAGIM,GAAoB,cAAcr8B,CAAS,CAC7C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,mBAClB,CACA,UAAUe,EAAO,CACf,KAAK,MAAQA,EACb,KAAK,YAAcA,EAAM,WAC3B,CACA,eAAgB,CACd,KAAK,mBAAmB,KAAK,WAAW,CAC1C,CACA,mBAAmByqB,EAAS,CAC1B,KAAK,eAAeA,EAAS0Q,GAAwB,CAAC,CACxD,CACA,kBAAkB1Q,EAAS,CACzB,KAAK,eAAeA,EAASkQ,EAAkB,CACjD,CACA,uBAAuBxtB,EAAc,CACnCksB,GAAuBlsB,EAAc,KAAK,MAAM,CAClD,CACA,oBAAoBA,EAAcssB,EAAa,CAC7C,OAAOD,GAAoBrsB,EAAcssB,EAAa,KAAK,KAAK,CAClE,CACA,eAAehP,EAAS8Q,EAAW,CACjC,GAAM,CACJ,YAAAC,EACA,aAAAC,EACA,cAAAC,EACA,mBAAAC,EACA,WAAAC,EACA,QAAAC,CACF,EAAIN,EACAG,GAAiB,KAAK,YAAY,6BAA+B,IACnE,KAAK,gBAAgBjR,EAAS,CAAC,GAAIkR,GAAsB,CAAC,EAAI,GAAG,OAAO,KAAKF,CAAY,CAAC,EAAGC,EAAeE,EAAYC,CAAO,EAEjI,IAAMC,EAA0B,IAAI,IACjB,OAAO,KAAKrR,CAAO,EAC3B,QAAQxf,GAAO,CACxB,IAAMyuB,EAAc+B,EAAaxwB,CAAG,EACpC,GAAIyuB,EACF,GAAI,YAAaA,EAAa,CAC5B,GAAM,CACJ,QAAAqC,EACA,QAAApC,CACF,EAAID,EACJoC,EAAS,IAAI,UAAUnC,CAAO,KAAK,OAAO1uB,CAAG,CAAC,8BAA8B,OAAO8wB,CAAO,CAAC,WAAW,EACtGtR,EAAQsR,CAAO,EAAItR,EAAQxf,CAAG,CAChC,KAAO,CACL,GAAM,CACJ,QAAA6uB,EACA,QAAAH,CACF,EAAID,EACJoC,EAAS,IAAI,UAAUnC,CAAO,KAAK,OAAO1uB,CAAG,CAAC,mBAAmB6uB,GAAW,EAAE,EAAE,CAClF,CAEF,IAAMxc,EAAQmN,EAAQxf,CAAG,EACzB,GAAIqS,GAAS,MAAQA,IAAU,GAC7B,OAEF,IAAM0e,EAAgBR,EAAYvwB,CAAG,EACjCgxB,EACJ,GAAKD,EAEE,GAAI,OAAOA,GAAkB,WAAY,CAC9C,IAAME,EAAaF,EAAcvR,EAAS,KAAK,WAAW,EAC1D,GAAI,CAACyR,EACH,OAEF,GAAI,eAAgBA,EAAY,CAC9B,IAAMC,EAAS1R,EAAQxf,CAAG,EAC1B,GAAI,MAAM,QAAQkxB,CAAM,EAAG,CACzBA,EAAO,QAAQhH,GAAQ,CACrB,KAAK,eAAeA,EAAM+G,CAAU,CACtC,CAAC,EACD,MACF,CACA,KAAK,eAAezR,EAAQxf,CAAG,EAAGixB,CAAU,EAC5C,MACF,CACAD,EAAQC,CACV,MACED,EAAQD,MAnBR,QAqBF,GAAM,CACJ,OAAAzC,EACA,aAAA6C,EACA,mBAAAC,CACF,EAAIJ,EACJ,GAAII,EAAoB,CACtB,IAAMnC,EAAW,KAAK,YAAY,cAAgB,aAClD,GAAI,CAACmC,EAAmB,SAASnC,CAAQ,EAAG,CAC1C4B,EAAS,IAAI,GAAG,OAAO7wB,CAAG,CAAC,+BAA+BivB,CAAQ,cAAc,EAChF,MACF,CACF,CACA,GAAIX,EAAQ,CACV,IAAM+C,EAAU,MAAM,QAAQ/C,CAAM,EAAIA,EAAS,CAACA,CAAM,EACpDgD,EAAgB,GAOpB,GANAD,EAAQ,QAAQE,GAAK,CACd/V,EAAe,mBAAmB+V,EAAG,OAAOvxB,CAAG,EAAG,KAAK,MAAM,IAChEsxB,EAAgB,GAChBT,EAAS,IAAI,GAAG,OAAO7wB,CAAG,CAAC,2BAA2BuxB,CAAC,aAAa,EAExE,CAAC,EACG,CAACD,EACH,MAEJ,CACA,GAAIH,EAAc,CAChB,IAAM/S,EAAU,KAAK,gBAAgBpe,EAAKmxB,EAAc3R,CAAO,EAC/D,GAAIpB,EAAS,CACXyS,EAAS,IAAIzS,CAAO,EACpB,MACF,CACF,CACF,CAAC,EACGyS,EAAS,KAAO,GAClBA,EAAS,QAAQzS,GAAW,CAC1BhjB,EAAUgjB,CAAO,CACnB,CAAC,CAEL,CACA,gBAAgBpe,EAAKswB,EAAW9Q,EAAS,CACvC,GAAI,OAAO8Q,GAAc,WACvB,OAAOA,EAAU9Q,EAAS,KAAK,WAAW,EAG5C,IAAMgS,EADgB,OAAO,QAAQlB,CAAS,EACjB,KAAK,CAAC,CAACmB,EAAMpf,CAAK,IAAM,CACnD,IAAMqf,EAAkBlS,EAAQiS,CAAI,EACpC,MAAO,CAACpf,EAAM,SAASqf,CAAe,CACxC,CAAC,EACD,GAAI,CAACF,EACH,OAAO,KAET,GAAM,CAACG,EAAWC,CAAe,EAAIJ,EACrC,OAAII,EAAgB,OAAS,EACpB,IAAI,OAAO5xB,CAAG,CAAC,eAAe2xB,CAAS,mBAAmBC,EAAgB,KAAK,IAAI,CAAC,KAEtF,IAAI,OAAO5xB,CAAG,CAAC,eAAe2xB,CAAS,WAAWC,EAAgB,CAAC,CAAC,GAC7E,CACA,gBAAgBC,EAAQC,EAAYC,EAAiBC,EAAepB,EAAS,CAC3E,IAAMqB,EAAsB,CAAC,SAAU,WAAY,cAAc,EAC3DC,EAAoBC,GAAmB,OAAO,oBAAoBN,CAAM,EAAG,CAAC,GAAGI,EAAqB,GAAGH,EAAY,GAAGC,CAAe,EAAGA,CAAe,EAS7J,GARAK,GAAeF,EAAmB,CAAClyB,EAAKqS,IAAU,CAChD,IAAIwc,EAAU,WAAWmD,CAAa,cAAchyB,CAAG,gCAAgCqS,EAAM,MAAM,EAAG,CAAC,EAAE,KAAK,IAAI,CAAC,IAC/G0f,EAAgB,SAAS,SAAS,IACpClD,GAAW;AAAA,gCACamD,CAAa,oCAAoCA,CAAa,+BAExF52B,EAAUyzB,CAAO,CACnB,CAAC,EACG,OAAO,KAAKqD,CAAiB,EAAE,OAAS,GAAKtB,EAAS,CACxD,IAAMyB,EAAM,KAAK,sBAAsB,EAAE,WAAWzB,CAAO,EAC3Dx1B,EAAU,wBAAwB42B,CAAa,6BAA6BK,CAAG,EAAE,CACnF,CACF,CACF,EAGIC,GAAiB,CACnB,QAAS3d,EACT,WAAY,yBACd,EACI4d,GAAoB,CACtB,QAAS5d,EACT,WAAY,sCACZ,MAAO,CAAC0b,EAAiB,CAC3B,EACImC,GAA0B,CAC5B,QAAS7d,EACT,WAAY,6CACZ,iBAAkB,CAAC2d,GAAgBC,GAAmBE,GAAYC,GAAclL,GAAa3K,GAAgBnI,GAAoBoY,GAAkB1J,EAAkB,CACvK,EAGIuP,GAAqB,cAAc3+B,CAAS,CAC9C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,qBAChB,KAAK,cAAgB,EACvB,CACA,UAAUe,EAAO,CACf,KAAK,MAAQA,CACf,CACA,SAAU,CACR,GAAI,KAAK,cACP,OAEF,IAAMsH,EAAQ,CACZ,KAAM,mBACN,MAAO,KAAK,MAAM,cAAc,SAAS,GAAK,CAAC,CACjD,EACA,KAAK,aAAa,cAAcA,CAAK,EACrC,KAAK,cAAgB,GACrB,KAAK,MAAM,aAAa,IAAI,UAAU,GAAG,cAAc,EACvD,KAAK,MAAM,QAAQ,QAAQ,EAC3B,MAAM,QAAQ,CAChB,CACA,iBAAkB,CAChB,OAAO,KAAK,aACd,CACF,EAGIu2B,GAA2C,IAAI,IAAI,CAAC,mBAAoB,YAAa,YAAY,CAAC,EAClGC,GAAqB9uB,GAChBA,IAAW,oBAAsBA,IAAW,cAAgBA,IAAW,YAAcA,IAAW,eAAiBA,IAAW,0BAA4BA,IAAW,sBAIxK+uB,GAAqB,IAAI,IAAI,CAAC,GAAG3C,GAAa,mBAAmB,IAAInwB,GAAO,CAACA,EAAK+yB,EAAS,CAAC,EAAG,GAAG5C,GAAa,kBAAkB,IAAInwB,GAAO,CAACA,EAAKgzB,EAAQ,CAAC,EAAG,CAAC,oBAAqBC,GAAO,OAAOA,GAAQ,WAAaA,EAAMF,GAAUE,CAAG,CAAC,EAAG,CAAC,WAAYC,GAAiB,CAAC,CAAC,EAAG,CAAC,kBAAmBA,GAAiB,CAAC,CAAC,EAAG,CAAC,sBAAuBA,GAAiB,CAAC,CAAC,EAAG,CAAC,YAAaA,GAAiB,CAAC,CAAC,EAAG,CAAC,0BAA2BA,GAAiB,CAAC,CAAC,EAAG,CAAC,oBAAqBA,GAAiB,CAAC,CAAC,EAAG,CAAC,iBAAkBA,GAAiB,CAAC,CAAC,EAAG,CAAC,4BAA6BA,GAAiB,CAAC,CAAC,EAAG,CAAC,2BAA4BA,GAAiB,CAAC,CAAC,EAAG,CAAC,6BAA8BA,GAAiB,CAAC,CAAC,CAAC,CAAC,EACnrB,SAASC,GAAgBnzB,EAAKqS,EAAO,CACnC,IAAM+gB,EAAaN,GAAmB,IAAI9yB,CAAG,EAC7C,OAAKozB,EAGEA,EAAW/gB,CAAK,EAFdA,CAGX,CACA,SAASghB,GAAsBhE,EAAa,CAC1C,IAAMiE,EAAQ,CAAC,EACf,cAAO,QAAQjE,CAAW,EAAE,QAAQ,CAAC,CAACrvB,EAAKqS,CAAK,IAAM,CACpD,IAAMkhB,EAAeJ,GAAgBnzB,EAAKqS,CAAK,EAC/CihB,EAAMtzB,CAAG,EAAIuzB,CACf,CAAC,EACMD,CACT,CACA,IAAIE,IAAoC,IAAM,CAC5C,IAAIA,EAAsB,MAAMA,WAA4Bx/B,CAAS,CACnE,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,MAChB,KAAK,WAAa,QAAU,KAAK,OAAO,EAAE,SAAS,EACnD,KAAK,qBAAuB,IAAI8Y,GAKhC,KAAK,0BAA4B2mB,GACxB,CAACzS,EAAW3kB,IAAU,CAC3B,GAAI,CAAC,KAAK,QAAQ,EAChB,OAEF,IAAMq3B,EAAad,GAA0B,IAAI5R,CAAS,EAC1D,GAAI0S,GAAc,CAACD,GAAsB,CAACC,GAAcD,EACtD,OAEF,IAAME,EAAmBvD,GAAc,oBAAoBpP,CAAS,EAC9D4S,EAAe,KAAK,YAAYD,CAAgB,EAClD,OAAOC,GAAiB,YAC1B,KAAK,mBAAmB,aAAa,IAAM,CACzCA,EAAav3B,CAAK,CACpB,CAAC,CAEL,CAEJ,CACA,UAAUtH,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,SAAWA,EAAM,SACtB,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,YAAcA,EAAM,YACzB,KAAK,IAAMA,EAAM,OACnB,CAEA,IAAI,oBAAqB,CACvB,OAAO,KAAK,YAAY,OAC1B,CACA,eAAgB,CACd,IAAMgY,EAAQ,CAAC,KAAK,IAAI,qBAAqB,EAC7C,KAAK,aAAa,kBAAkB,KAAK,0BAA0B,EAAE,KAAK,IAAI,EAAGA,CAAK,EACtF,KAAK,aAAa,kBAAkB,KAAK,0BAA0B,EAAI,EAAE,KAAK,IAAI,EAAG,EAAK,EAC1F,KAAK,qBAAqB,sBAAsB,KAAK,kBAAkB,EACvE,KAAK,kBAAkB,EACvB,KAAK,yBAAyB,CAC5B,mBAAoB,CAAC,CACnB,QAAAyS,CACF,IAAM,CACJ,KAAK,kBAAkB,CACrB,QAAAA,EACA,MAAO,GACP,OAAQ,oBACV,CAAC,CACH,CACF,CAAC,CACH,CAKA,IAAIzB,EAAU,CACZ,OAAO,KAAK,YAAYA,CAAQ,GAAK+R,GAAqB/R,CAAQ,CACpE,CAKA,YAAYA,EAAU,CACpB,OAAO,KAAK,sBAAsB,KAAK,YAAYA,CAAQ,CAAC,CAC9D,CAKA,OAAOA,EAAU,CACf,OAAOpiB,EAAQ,KAAK,YAAYoiB,CAAQ,CAAC,CAC3C,CAMA,sBAAsBtkB,EAAU,CAC9B,OAAIA,IACco6B,GAAkB,CAChC,IAAMC,EAAeD,EACrB,OAAAC,EAAa,IAAM,KAAK,IACxBA,EAAa,QAAU,KAAK,mBACrBr6B,EAASq6B,CAAY,CAC9B,EAIJ,CACA,kBAAkB,CAChB,QAAAtU,EACA,MAAAuU,EACA,OAAAhwB,EAAS,KACX,EAAG,CACD,IAAMiwB,EAAY,CAChB,GAAIR,GAAoB,cACxB,WAAY,CAAC,CACf,EACMrW,EAAS,CAAC,EAChB,OAAO,QAAQqC,CAAO,EAAE,QAAQ,CAAC,CAACxf,EAAKqS,CAAK,IAAM,CAC5CtO,IAAW,OAASkwB,GAAyBj0B,CAAG,GAClD5E,EAAU,GAAG4E,CAAG,gDAAgD,EAElE,IAAMuzB,EAAeJ,GAAgBnzB,EAAKqS,CAAK,EACzC6hB,EAAcH,GAAS,OAAOR,GAAiB,UAAYxvB,IAAW,MACtEowB,EAAgB,KAAK,YAAYn0B,CAAG,EAC1C,GAAIk0B,GAAeC,IAAkBZ,EAAc,CACjD,KAAK,YAAYvzB,CAAG,EAAIuzB,EACxB,IAAMl3B,EAAQ,CACZ,KAAM2D,EACN,aAAcuzB,EACd,cAAAY,EACA,UAAAH,EACA,OAAAjwB,CACF,EACAoZ,EAAO,KAAK9gB,CAAK,CACnB,CACF,CAAC,EACD,KAAK,mBAAmB,mBAAmB,KAAK,WAAW,EAC3D23B,EAAU,WAAa7W,EAAO,IAAI9gB,GAASA,EAAM,IAAI,EACrD8gB,EAAO,QAAQ9gB,GAAS,CAClB,KAAK,YAAY,OACnBqW,GAAK,oBAAoBrW,EAAM,IAAI,QAASA,EAAM,cAAe,OAAQA,EAAM,YAAY,EAE7F,KAAK,qBAAqB,cAAcA,CAAK,CAC/C,CAAC,CACH,CACA,yBAAyB2D,EAAKP,EAAU,CACtC,KAAK,qBAAqB,iBAAiBO,EAAKP,CAAQ,CAC1D,CACA,4BAA4BO,EAAKP,EAAU,CACzC,KAAK,qBAAqB,oBAAoBO,EAAKP,CAAQ,CAC7D,CAMA,mBAAoB,CAClB,GAAI,KAAK,gBAAkB,KAAM,CAE/B,IAAM20B,EADiB,OAAO,KAAK,YAAY,gBAAmB,UAAY,KAAK,YAAY,gBAAkB,EACzE,KAAK,YAAY,eAAiBC,GAAmB,EACzFD,GAAkB,OACpB,KAAK,eAAiBA,EACtB,KAAK,aAAa,cAAc,CAC9B,KAAM,uBACR,CAAC,EAEL,CACA,OAAO,KAAK,cACd,CACA,eAAeE,EAAc,CAC3B,OAAO,KAAK,YAAY,eAAiBA,GAAgBA,IAAiB,cAAgBvyB,EAAS,KAAK,YAAY,YAAY,CAClI,CACA,YAAYwyB,EAAW,CAErB,OADmB,KAAK,YAAY,WAAa,YAC3BA,CACxB,CACA,gBAAiB,CACf,OAAO,KAAK,YAAY,eAAiB,UAAY,KAAK,YAAY,eAAiB,UACzF,CACA,gBAAiB,CACf,MAAO,CAAC,KAAK,IAAI,qBAAqB,CACxC,CACA,wBAAyB,CACvB,OAAO,OAAO,KAAK,YAAY,cAAiB,UAClD,CACA,oBAAoBx7B,EAASy7B,EAAgB,GAAOC,EAAkB,CAIpE,GAHIA,GAAoB,OACtBA,EAAmB,KAAK,YAAY,oBAAoB,GAEtD,KAAK,uBAAuB,EAAG,CACjC,GAAID,EACF,MAAO,CACL,OAAQC,EACR,UAAW,EACb,EAEF,IAAMxgC,EAAS,CACb,KAAM8E,EACN,KAAMA,EAAQ,IAChB,EACM2S,EAAS,KAAK,YAAY,cAAc,EAAEzX,CAAM,EACtD,GAAI,KAAK,UAAUyX,CAAM,EACvB,OAAIA,IAAW,GACbtQ,EAAU,sGAAsG,EAE3G,CACL,OAAQ,KAAK,IAAI,EAAGsQ,CAAM,EAC1B,UAAW,EACb,CAEJ,CACA,OAAI3S,EAAQ,QAAU,KAAK,IAAI,cAAc,EACpC,KAAK,yBAAyB,EAGhC,CACL,OAFgB,KAAK,YAAY,WAAa,KAAK,UAAU,KAAK,YAAY,SAAS,EAAI,KAAK,YAAY,UAAY07B,EAGxH,UAAW,EACb,CACF,CACA,0BAA2B,CACzB,OAAI,KAAK,IAAI,qBAAqB,EACzB,CACL,OAAQ,EACR,UAAW,EACb,EAEE,KAAK,UAAU,KAAK,YAAY,eAAe,EAC1C,CACL,OAAQ,KAAK,YAAY,gBACzB,UAAW,EACb,EAEK,CACL,OAAQ,IACR,UAAW,EACb,CACF,CAEA,sBAAuB,CACrB,GAAI,CAAC,KAAK,YAAY,WAAa1yB,EAAS,KAAK,YAAY,SAAS,EACpE,OAAO,KAAK,YAAY,oBAAoB,EAE9C,IAAMumB,EAAY,KAAK,YAAY,yBAAyB,EAC5D,OAAIA,IAAc,GACTA,GAETltB,EAAU,6DAA6D,EAChE,KAAK,YAAY,oBAAoB,EAC9C,CACA,UAAUiX,EAAO,CACf,MAAO,CAAC,MAAMA,CAAK,GAAK,OAAOA,GAAU,UAAY,SAASA,CAAK,CACrE,CACA,eAAgB,CACd,OAAO,KAAK,UACd,CAEA,WAAWjc,EAAS4J,EAAK,CACvB,IAAM00B,EAAUt+B,EAAQ,KAAK,cAAc,CAAC,EAC5C,OAAOs+B,EAAUA,EAAQ10B,CAAG,EAAI,MAClC,CACA,WAAW5J,EAAS4J,EAAKqS,EAAO,CAC9B,IAAMsiB,EAAa,KAAK,cAAc,EAClCD,EAAUt+B,EAAQu+B,CAAU,EAC5B5yB,EAAS2yB,CAAO,IAClBA,EAAU,CAAC,EACXt+B,EAAQu+B,CAAU,EAAID,GAExBA,EAAQ10B,CAAG,EAAIqS,CACjB,CACA,aAAc,CACZ,IAAIpT,EAAS,KAMb,OALI,KAAK,YAAY,aAAetD,EAAQ,KAAK,YAAY,WAAW,EACtEsD,EAAS,KAAK,YAAY,YAAY,EAC7B,KAAK,WACdA,EAAS,KAAK,SAAS,eAErBA,GAAUtD,EAAQsD,CAAM,EACnBA,EAEF,QACT,CACA,WAAY,CAEV,OADkB,KAAK,YAAY,EAClB,aAAe,MAClC,CACA,aAAc,CACZ,OAAO,KAAK,SAAS,YAAY,CACnC,CACA,qBAAsB,CACpB,OAAO,KAAK,YAAY,EAAE,aAC5B,CACA,+BAAgC,CAC9B,OAAOtD,EAAQ,KAAK,YAAY,0BAA0B,EAAI,KAAK,YAAY,2BAA6B,EAC9G,CACA,eAAgB,CACd,OAAI,KAAK,IAAI,gBAAgB,EACpB,GAEF,KAAK,IAAI,aAAa,CAC/B,CACA,mBAAoB,CAClB,MAAI,OAAK,IAAI,mBAAmB,GAAK,KAAK,IAAI,sBAAsB,GAAK,KAAK,YAAY,OAAO,EAInG,CACA,gCAAiC,CAE/B,MAAO,CADoB,KAAK,YAAY,oBAChB,YAAc,CAAC,KAAK,IAAI,UAAU,CAChE,CACA,sBAAuB,CACrB,IAAMi5B,EAAY,KAAK,YAAY,kBACnC,GAAI,OAAOA,GAAc,WACvB,OAAO,KAAK,YAAY,mBAAmB,EAE7C,GAAIA,IAAc,GAChB,MAAO,IAAM,EAGjB,CACA,kBAAmB,CACjB,IAAMA,EAAY,KAAK,YAAY,cACnC,GAAIA,EACF,OAAOA,EAGT,GADoB,KAAK,YAAY,wBAEnC,MAAO,QAGX,CACA,0BAA2B,CACzB,IAAMA,EAAY,KAAK,IAAI,eAAe,EAC1C,GAAI,OAAOA,GAAc,WACvB,OAAO,KAAK,YAAY,eAAe,EAEzC,GAAIA,EACF,MAAO,IAAMA,EAEf,IAAMC,EAAc,KAAK,IAAI,oBAAoB,EACjD,GAAI,OAAOA,GAAgB,WAAY,CACrC,IAAMC,EAAiB,KAAK,YAAY,oBAAoB,EAC5D,OAAOp9B,GACEo9B,EAAep9B,CAAC,EAAI,SAAW,MAE1C,CACA,MAAO,IAAMm9B,EAAc,SAAW,MACxC,CACA,wBAAyB,CACvB,OAAI,KAAK,YAAY,iBACZ,KAAK,YAAY,mBAAqB,kBAExC,KAAK,IAAI,sBAAsB,CACxC,CACA,oBAAoBvQ,EAAW,CAC7B,OAAIA,EACK,GAEF,KAAK,YAAY,mBAAqB,WAC/C,CACA,qBAAsB,CACpB,MAAO,CACL,IAAK,KAAK,IACV,QAAS,KAAK,kBAChB,CACF,CACA,oBAAoBrwB,EAAQ,CAC1B,IAAM8gC,EAAgB9gC,EACtB,OAAA8gC,EAAc,IAAM,KAAK,IACzBA,EAAc,QAAU,KAAK,mBACtBA,CACT,CAEA,kBAAmB,CACjB,IAAMC,EAAW,KAAK,YAAY,UAAU,EAC5C,OAAIA,IAAa,OACRA,EAEF/gC,GAAU,CACf,IAAI6sB,EAAKkU,EAAS/gC,CAAM,EACxB,OAAI,OAAO6sB,GAAO,WAChB1lB,EAAU,sDAAuD0lB,EAAI,6BAA6B,EAClGA,EAAK,OAAOA,CAAE,GAETA,CACT,CACF,CACF,EACA,OAAA0S,EAAoB,YAAc,EAC3BA,CACT,GAAG,EACCyB,GAAqBzB,GAGrB0B,GAAsB,cAAclhC,CAAS,CAC/C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,qBAClB,CACA,UAAUe,EAAO,CACf,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,aAAeA,EAAM,YAC5B,CACA,WAAW2b,EAAe1W,EAAW,CACnC,IAAIm7B,EACAC,EAOJ,GANIC,EAAc3kB,EAAc,MAAM,EACpCykB,EAAa,KAAK,mBAAmB,oBAAoBzkB,EAAc,OAAQ1W,CAAS,GAExFo7B,EAAe,SAASp7B,CAAS,GACjCm7B,EAAa,KAAK,mBAAmBC,CAAY,EAAE1kB,EAAc,MAAM,GAErE,CAACykB,EACH,OAEF,GAAM,CACJ,eAAAlnB,CACF,EAAIyC,EACJ,GAAI,KAAK,iBAAiBzC,CAAc,IAAM,SAAgC,CAC5E,IAAMqnB,EAAgB,CAACH,CAAU,EACjC,KAAOA,EAAW,UAAU,GAC1BA,EAAaA,EAAW,UAAU,EAClCG,EAAc,KAAKH,CAAU,EAE/BA,EAAaG,EAAcA,EAAc,OAAS,EAAIrnB,CAAc,CACtE,CACA,GAAM,CACJ,OAAAnV,EACA,eAAgBy8B,CAClB,EAAI,KAAK,sBAAsBJ,EAAYlnB,CAAc,EACzD,MAAO,CACL,OAAAnV,EACA,eAAgBy8B,CAClB,CACF,CACA,sBAAsBz8B,EAAQqX,EAAc,CAC1C,IAAIglB,EACJ,GAAIE,EAAcv8B,CAAM,GAAK,KAAK,+BAA+BA,CAAM,GAAKA,EAAO,UAAU,EAAG,CAC9F,IAAM08B,EAAe18B,EACrBq8B,EAAaK,EAAa,eAAe,EAAE,CAAC,EAC5C,IAAIvyB,EAAMkyB,EACV,KAAOlyB,IAAQuyB,GACbrlB,IACAlN,EAAMA,EAAI,UAAU,CAExB,CACA,MAAO,CACL,OAAQkyB,GAAcr8B,EACtB,eAAgBqX,CAClB,CACF,CACA,+BAA+BoF,EAAa,CAC1C,OAAKA,EAGEA,EAAY,eAAe,EAAE,KAAKtS,GAAOA,EAAI,mBAAmB,CAAC,EAF/D,EAGX,CACA,uBAAuBwyB,EAAetlB,EAAc,CAClD,IAAMulB,EAAiB,KAAK,iBAAiBvlB,CAAY,EACnDwlB,EAAmBD,IAAmB,SACtCE,EAAYF,IAAmB,SACjCG,EAAkBF,EAAmBF,EAAgBA,EAAc,UAAU,EAC7EhlB,EAAUN,EAAe,EACzB2lB,EAA4BrlB,EAChC,GAAImlB,GAAa,KAAK,+BAA+BH,EAAc,UAAU,CAAC,EAAG,CAC/E,KAAOI,GAAmBA,EAAgB,UAAU,GAClDA,EAAkBA,EAAgB,UAAU,EAC5CplB,IAEFqlB,EAA4BrlB,EACxBA,EAAU,IACZolB,EAAkBJ,EAClBhlB,EAAUN,EACV2lB,EAA4B,OAEhC,CACA,MAAO,CACL,OAAQD,EACR,eAAgBplB,EAChB,0BAAAqlB,CACF,CACF,CACA,sBAAsBh9B,EAAQqX,EAAcnW,EAAY,QAAS,CAC/D,IAAM07B,EAAiB,KAAK,iBAAiBvlB,CAAY,EACrD0lB,EAAkB/8B,EAClB2X,EAAUN,EAAe,EACvB2lB,EAA4BrlB,EAClC,GAAIilB,IAAmB,QAA4B,CACjD,IAAMK,EAAcj9B,EAAO,wBAAwB,EAC7Ck9B,EAAah8B,IAAc,QAAU+7B,EAAY,CAAC,EAAI72B,EAAM62B,CAAW,EACvEE,EAAkB,CAAC,EACrBR,EAAgBO,EACpB,KAAOP,EAAc,UAAU,IAAM38B,GACnC28B,EAAgBA,EAAc,UAAU,EACxCQ,EAAgB,KAAKR,CAAa,EAGpC,GADAI,EAAkBG,EACdA,EAAW,mBAAmB,EAChC,QAASx3B,EAAIy3B,EAAgB,OAAS,EAAGz3B,GAAK,EAAGA,IAAK,CACpD,IAAM03B,EAAaD,EAAgBz3B,CAAC,EACpC,GAAI,CAAC03B,EAAW,UAAU,EAAG,CAC3BL,EAAkBK,EAClB,KACF,CACAzlB,GACF,MAEAolB,EAAkB32B,EAAM+2B,CAAe,EAClCJ,IACHA,EAAkBG,EAGxB,CACA,MAAO,CACL,OAAQH,EACR,eAAgBplB,EAChB,0BAAAqlB,CACF,CACF,CACA,iBAAiBx1B,EAAU,CACzB,IAAM61B,EAAwB,KAAK,aAAa,0BAA0B,EAC1E,GAAIA,EACF,OAAOA,EAAsB,WAAW71B,CAAQ,CAEpD,CACA,0BAA0B4b,EAAOrjB,EAAU,CACzC,IAAM8I,EAAmB,KAAK,mBAAmB,WAAW,EACtD7I,EAAS6I,EAAiB9I,IAAa,QAAU,EAAI8I,EAAiB,OAAS,CAAC,EACtF,GAAI,CAAC7I,EACH,OAGF,IAAME,EADiB,KAAK,aAAa,0BAA0BF,EAAO,UAAU,CAAC,EACzD,WAAWojB,CAAK,EAC5C,GAAIljB,GAAQ,QAA4B,CACtC,IAAMuc,EAAc,KAAK,mBAAmB,mBAAmBzc,EAAQojB,CAAK,EAC5E,MAAO,CACL,eAAgBA,EAChB,OAAQ3G,CACV,CACF,CACA,MAAO,CAEL,eAAgBvc,GAAQ,KAAO,GAAKkjB,EACpC,OAAApjB,CACF,CACF,CACF,EAGIs9B,GAAgB,cAAcpiC,CAAS,CACzC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,eAClB,CACA,mBAAoB,CAClB,IAAMqiC,EAAgB,KAAK,IAAI,YAAY,eAAe,EAC1D,GAAIA,EACF,MAAO,CAACr2B,EAAKs2B,EAAcC,IAMlBF,EALQ,CACb,IAAAr2B,EACA,aAAAs2B,EACA,eAAAC,CACF,CAC2B,EAG/B,IAAMC,EAAa,KAAK,IAAI,IAAI,YAAY,EAC5C,MAAO,CAACx2B,EAAKs2B,EAAcC,IAAmB,CAC5C,IAAIE,EAAgBD,GAAcA,EAAWx2B,CAAG,EAChD,GAAIy2B,GAAiBF,GAAkBA,EAAe,OAAQ,CAC5D,IAAIG,EAAQ,EACZ,KACM,EAAAA,GAASH,EAAe,QAGhBE,EAAc,QAAQ,aAAa,IACnC,KAGZA,EAAgBA,EAAc,QAAQ,cAAeF,EAAeG,GAAO,CAAC,CAEhF,CACA,OAAOD,GAAiBH,CAC1B,CACF,CACF,EAGIK,GAAkB,cAAc3iC,CAAS,CAC3C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,kBAChB,KAAK,mBAAoC,IAAI,IAC7C,KAAK,oBAAqC,IAAI,IAC9C,KAAK,yBAA0C,IAAI,IACnD,KAAK,yBAA0C,IAAI,GACrD,CACA,eAAgB,CACd,KAAK,8BAAgC,IAAI4iC,GAA8B,KAAK,sBAAsB,CAAC,CACrG,CACA,iBAAiB5yB,EAAW6yB,EAAc,CACxC,IAAMp3B,EAAW,KAAK,8BAA8B,KAAKo3B,CAAY,EAC/D9pB,EAAQ,KAAK,IAAI,eAAe,GAAK,CAAC6lB,GAA0B,IAAI5uB,CAAS,EAC7E8yB,EAAY/pB,EAAQ,KAAK,oBAAsB,KAAK,mBACrD+pB,EAAU,IAAI9yB,CAAS,GAC1B8yB,EAAU,IAAI9yB,EAA0B,IAAI,GAAK,EAEnD8yB,EAAU,IAAI9yB,CAAS,EAAE,IAAIvE,CAAQ,EACrC,KAAK,aAAa,iBAAiBuE,EAAWvE,EAAUsN,CAAK,CAC/D,CACA,oBAAoB/I,EAAW6yB,EAAc,CAC3C,IAAMp3B,EAAW,KAAK,8BAA8B,OAAOo3B,CAAY,EAEjEE,EAAW,CAAC,CADK,KAAK,oBAAoB,IAAI/yB,CAAS,GAC1B,OAAOvE,CAAQ,EAC7Cs3B,GACH,KAAK,mBAAmB,IAAI/yB,CAAS,GAAG,OAAOvE,CAAQ,EAEzD,KAAK,aAAa,oBAAoBuE,EAAWvE,EAAUs3B,CAAQ,CACrE,CACA,kBAAkBF,EAAc,CAC9B,IAAMp3B,EAAW,KAAK,8BAA8B,WAAWo3B,CAAY,EAE3E,GADc,KAAK,IAAI,eAAe,EAC3B,CACT,IAAMG,EAAe,CAAChzB,EAAW3H,IAAU,CACrCu2B,GAA0B,IAAI5uB,CAAS,GACzCvE,EAASuE,EAAW3H,CAAK,CAE7B,EACM46B,EAAgB,CAACjzB,EAAW3H,IAAU,CACrCu2B,GAA0B,IAAI5uB,CAAS,GAC1CvE,EAASuE,EAAW3H,CAAK,CAE7B,EACA,KAAK,yBAAyB,IAAIw6B,EAAc,CAC9C,aAAAG,EACA,cAAAC,CACF,CAAC,EACD,KAAK,aAAa,kBAAkBD,EAAc,EAAK,EACvD,KAAK,aAAa,kBAAkBC,EAAe,EAAI,CACzD,MACE,KAAK,yBAAyB,IAAIx3B,CAAQ,EAC1C,KAAK,aAAa,kBAAkBA,EAAU,EAAK,CAEvD,CACA,qBAAqBo3B,EAAc,CACjC,IAAMp3B,EAAW,KAAK,8BAA8B,aAAao3B,CAAY,EAE7E,GADiB,KAAK,yBAAyB,IAAIp3B,CAAQ,EAC7C,CACZ,GAAM,CACJ,aAAAu3B,EACA,cAAAC,CACF,EAAI,KAAK,yBAAyB,IAAIx3B,CAAQ,EAC9C,KAAK,aAAa,qBAAqBu3B,EAAc,EAAK,EAC1D,KAAK,aAAa,qBAAqBC,EAAe,EAAI,EAC1D,KAAK,yBAAyB,OAAOJ,CAAY,CACnD,MACE,KAAK,yBAAyB,OAAOp3B,CAAQ,EAC7C,KAAK,aAAa,qBAAqBA,EAAU,EAAK,CAE1D,CACA,sBAAsBy3B,EAAKnqB,EAAO,CAChCmqB,EAAI,QAAQ,CAACJ,EAAW9yB,IAAc,CACpC8yB,EAAU,QAAQr3B,GAAY,KAAK,aAAa,oBAAoBuE,EAAWvE,EAAUsN,CAAK,CAAC,EAC/F+pB,EAAU,MAAM,CAClB,CAAC,EACDI,EAAI,MAAM,CACZ,CACA,uBAAuBC,EAAKpqB,EAAO,CACjCoqB,EAAI,QAAQ13B,GAAY,KAAK,aAAa,qBAAqBA,EAAUsN,CAAK,CAAC,EAC/EoqB,EAAI,MAAM,CACZ,CACA,SAAU,CACR,MAAM,QAAQ,EACd,KAAK,sBAAsB,KAAK,mBAAoB,EAAK,EACzD,KAAK,sBAAsB,KAAK,oBAAqB,EAAI,EACzD,KAAK,uBAAuB,KAAK,yBAA0B,EAAK,EAChE,KAAK,yBAAyB,QAAQ,CAAC,CACrC,aAAAH,EACA,cAAAC,CACF,IAAM,CACJ,KAAK,aAAa,qBAAqBD,EAAc,EAAK,EAC1D,KAAK,aAAa,qBAAqBC,EAAe,EAAI,CAC5D,CAAC,EACD,KAAK,yBAAyB,MAAM,CACtC,CACF,EAGIG,GAAqB,cAAcpjC,CAAS,CAC9C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,oBAClB,CACA,UAAUe,EAAO,CACf,KAAK,SAAWA,EAAM,SACtB,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,kBAAoBA,EAAM,iBACjC,CACA,eAAgB,CACd,KAAK,yBAAyB,CAC5B,aAAc,KAAK,eAAe,KAAK,IAAI,EAC3C,qBAAsB,KAAK,eAAe,KAAK,IAAI,CACrD,CAAC,EACD,KAAK,eAAe,CACtB,CACA,eAAesiC,EAAmB,CAChC,KAAK,eAAe,EACpB,IAAMzO,EAAyB,CAC7B,KAAM,oBACN,QAASyO,EAAoBA,EAAkB,QAAU,GACzD,QAASA,EAAoBA,EAAkB,QAAU,GACzD,QAASA,EAAoBA,EAAkB,QAAU,GACzD,YAAaA,EAAoBA,EAAkB,YAAc,GACjE,iBAAkBA,EAAoBA,EAAkB,iBAAmB,EAC7E,EACA,KAAK,aAAa,cAAczO,CAAsB,CACxD,CACA,gBAAiB,CACX,KAAK,kBACP,KAAK,kBAAkB,eAAe,EAEtC,KAAK,kBAAkB,gBAAgB,EAAG,KAAK,SAAS,YAAY,EAAI,CAAC,CAE7E,CACF,EAGI0O,GAAoB,cAActjC,CAAS,CAC7C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,oBAChB,KAAK,YAAc,CACrB,CACA,UAAUe,EAAO,CACf,KAAK,SAAWA,EAAM,QACxB,CACA,aAAc,CACZ,OAAO,KAAK,aAAe,KAAK,aAAa,SAAW,EAC1D,CACA,YAAa,CACX,OAAO,KAAK,gBAAkB,KAAK,gBAAgB,SAAW,EAChE,CACA,sBAAuB,CACrB,OAAIgN,EAAS,KAAK,YAAY,GAAKA,EAAS,KAAK,eAAe,EACvD,EAEF,KAAK,IAAI,KAAK,gBAAgB,OAAS,KAAK,gBAAgB,UAAY,KAAK,aAAa,OAAQ,CAAC,CAC5G,CACA,0BAA2B,CACzB,IAAMw1B,EAAiB,KAAK,aAAe,KAAK,aAAa,OAAS,EAChEC,EAAgB,KAAK,gBAAkB,KAAK,gBAAgB,OAAS,KAAK,gBAAgB,UAAY,EAC5G,MAAO,CACL,eAAAD,EACA,cAAAC,CACF,CACF,CACA,gBAAgBC,EAAsBC,EAAyB,CAC7D,KAAK,aAAe,KAAK,SAAS,aAAaD,CAAoB,EAC/D,KAAK,eACP,KAAK,aAAa,SAAWA,GAE/B,KAAK,gBAAkB,KAAK,SAAS,aAAaC,CAAuB,EACrE,KAAK,kBACP,KAAK,gBAAgB,SAAWA,GAElC,KAAK,qBAAqB,CAC5B,CACA,gBAAiB,CACf,OAAO,KAAK,WACd,CACA,sBAAuB,CACrB,IAAMrlB,EAAQ1W,EAAQ,KAAK,YAAY,EAAI,KAAK,aAAa,OAAS,EAClE,KAAK,cAAgB0W,IAGzB,KAAK,YAAcA,EACnB,KAAK,aAAa,cAAc,CAC9B,KAAM,8BACR,CAAC,EACH,CACF,EAGIslB,GAA0B,cAAc3jC,CAAS,CACnD,aAAc,CACZ,MAAM,EACN,KAAK,SAAW,0BAChB,KAAK,qBAAuB,KAC5B,KAAK,cAAgBuvB,EAAU,KAAK,cAAc,KAAK,IAAI,EAAG,GAAG,CACnE,CACA,UAAUxuB,EAAO,CACf,KAAK,SAAWA,EAAM,QACxB,CACA,eAAgB,CACd,IAAMM,EAAY,KAAK,IAAI,YAAY,EACjCuiC,EAAM,KAAK,qBAAuBviC,EAAU,cAAc,KAAK,EACrEuiC,EAAI,UAAU,IAAI,+BAA+B,EACjDC,GAAaD,EAAK,QAAQ,EAC1BE,GAAiBF,EAAK,gBAAgB,EACtCG,GAAeH,EAAK,EAAI,EACxB,KAAK,SAAS,YAAYA,CAAG,CAC/B,CACA,cAAcvlB,EAAO,CACd,KAAK,uBAGV,KAAK,qBAAqB,YAAc,GACxC,WAAW,IAAM,CACX,KAAK,QAAQ,GAAK,KAAK,uBACzB,KAAK,qBAAqB,YAAcA,EAE5C,EAAG,EAAE,EACP,CACA,SAAU,CACR,MAAM,QAAQ,EACd,GAAM,CACJ,qBAAA2lB,CACF,EAAI,KACAA,IACFhhC,EAAcghC,CAAoB,EAC9BA,EAAqB,eACvBA,EAAqB,cAAc,YAAYA,CAAoB,GAGvE,KAAK,qBAAuB,KAC5B,KAAK,SAAW,IAClB,CACF,EAGIC,GAAyB,cAAcjkC,CAAS,CAClD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,yBAChB,KAAK,iBAAmB,CAAC,EACzB,KAAK,kBAAoB,CAAC,EAC1B,KAAK,OAAS,GACd,KAAK,kBAAoB,GACzB,KAAK,qBAAuB,CAC9B,CACA,UAAUe,EAAO,CACf,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,KAAK,aAAa,UAAU2C,GAAK,KAAK,aAAeA,EAAE,YAAY,CACrE,CACA,UAAW,CACT,OAAO,KAAK,QAAU,CAAC,KAAK,iBAC9B,CACA,qBAAqBwgC,EAAU,CAC7B,KAAK,kBAAoBA,CAC3B,CACA,OAAQ,CACF,KAAK,QAGL,KAAK,IAAI,IAAI,6BAA6B,GAG1C,KAAK,IAAI,IAAI,WAAW,IAG5B,KAAK,+BAA+B,EACpC,KAAK,OAAS,GAChB,CACA,QAAS,CACF,KAAK,QAGV,KAAK,MAAM,IAAM,CACf,KAAK,OAAS,EAChB,CAAC,CACH,CACA,kBAAkB91B,EAAM,CAClB,KAAK,OACP,KAAK,iBAAiB,KAAKA,CAAI,EAE/BA,EAAK,CAET,CACA,mBAAmBA,EAAM,CACnB,KAAK,OACP,KAAK,kBAAkB,KAAKA,CAAI,EAEhCA,EAAK,CAET,CACA,gCAAiC,CAC/B,KAAK,uBACL,IAAM+1B,EAA2B,KAAK,qBACtC,KAAK,aAAa,mBAAmB,EAAI,EACzC,KAAK,kBAAkB,KAAK,IAAM,CAC5B,KAAK,uBAAyBA,GAChC,KAAK,aAAa,mBAAmB,EAAK,CAE9C,CAAC,CACH,CACA,MAAM1+B,EAAU,CACd,GAAI,KAAK,iBAAiB,SAAW,GAAK,KAAK,kBAAkB,SAAW,EAAG,CAC7EA,EAAS,EACT,MACF,CACA,IAAM2+B,EAAWC,GAAS,CACxB,KAAOA,EAAM,QAAQ,CACnB,IAAMj2B,EAAOi2B,EAAM,IAAI,EACnBj2B,GACFA,EAAK,CAET,CACF,EACA,KAAK,sBAAsB,EAAE,aAAa,IAAM,CAC9C,OAAO,WAAW,IAAMg2B,EAAS,KAAK,gBAAgB,EAAG,CAAC,EAC1D,OAAO,WAAW,IAAM,CACtB3+B,EAAS,EACT2+B,EAAS,KAAK,iBAAiB,CACjC,EAAG,GAAG,CACR,CAAC,CACH,CACF,EAGIE,GAAqB,cAActkC,CAAS,CAC9C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,oBAClB,CACA,aAAa0Q,EAAS,CACpB,KAAK,gBAAkBA,EACvB,IAAMrI,EAAQ,CACZ,KAAM,oBACR,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,gBAAiB,CACf,KAAK,gBAAkB,KACvB,IAAMA,EAAQ,CACZ,KAAM,oBACR,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,UAAUvD,EAAQ,CAChB,MAAO,CAAC,CAAC,KAAK,iBAAmB,KAAK,gBAAgB,QAAQA,CAAM,GAAK,CAC3E,CACF,EAGIy/B,GAAiB,cAAcvkC,CAAS,CAC1C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,iBAChB,KAAK,MAAQ,EACb,KAAK,mBAAqB,EAC5B,CACA,UAAUe,EAAO,CACf,KAAK,qBAAuBA,EAAM,qBAClC,KAAK,SAAWA,EAAM,SACtB,KAAK,YAAcA,EAAM,WAC3B,CACA,eAAgB,CACd,IAAMyjC,EAA0B,IAAM,KAAK,wBAAwB,EACnE,KAAK,yBAAyB,CAC5B,iBAAkBA,EAClB,eAAgBA,CAClB,CAAC,EACD,KAAK,2BAA2B,UAAWA,CAAuB,CACpE,CACA,2BAA2BC,EAAoB,CAC7C,KAAK,mBAAqBA,EAC1B,KAAK,wBAAwB,CAC/B,CACA,oBAAqB,CACnB,KAAK,mBAAqB,GAC1B,IAAMC,EAAU,KAAK,IAAI,IAAI,SAAS,EAClC,CAACA,IAAYA,IAAY,QAAU,KAAK,IAAI,IAAI,wBAAwB,IAG5E,KAAK,qBAAqB,CAC5B,CACA,mBAAoB,CAClB,KAAK,mBAAqB,GACtB,OAAK,IAAI,IAAI,SAAS,GAAK,KAAK,IAAI,IAAI,uBAAuB,IAGnE,KAAK,oBAAoB,CAC3B,CACA,aAAc,CACZ,KAAK,mBAAqB,GACtB,MAAK,IAAI,IAAI,SAAS,GAG1B,KAAK,cAAc,CACrB,CACA,yBAA0B,CACxB,IAAIA,EAAU,KAAK,IAAI,IAAI,SAAS,EAChC,KAAK,oBAAsBA,IAAY,QAAU,CAAC,KAAK,IAAI,IAAI,wBAAwB,IACzFA,EAAU,CAAC,KAAK,IAAI,IAAI,YAAY,GAAK,CAAC,KAAK,YAAY,QAAQ,GAAK,CAAC,KAAK,IAAI,IAAI,SAAS,GAAK,KAAK,IAAI,eAAe,YAAY,GAEtIA,EACE,KAAK,QAAU,GACjB,KAAK,qBAAqB,GAG5B,KAAK,mBAAqB,GACtB,KAAK,SAAS,QAAQ,GAAK,CAAC,KAAK,IAAI,IAAI,uBAAuB,GAAK,KAAK,IAAI,eAAe,YAAY,EACvG,KAAK,QAAU,GACjB,KAAK,oBAAoB,EAElB,KAAK,QAAU,GACxB,KAAK,cAAc,EAGzB,CACA,sBAAuB,CACrB,KAAK,MAAQ,EACb,KAAK,YAAY,KAAK,qBAAqB,6BAA6B,CAAC,CAAC,EAAG,6BAA8B,+BAA+B,CAC5I,CACA,qBAAsB,CACpB,KAAK,MAAQ,EACb,KAAK,YAAY,KAAK,qBAAqB,4BAA4B,CAAC,CAAC,EAAG,6BAA8B,8BAA8B,CAC1I,CACA,eAAgB,CACd,KAAK,MAAQ,EACb,KAAK,mBAAmB,YAAY,CACtC,CACA,YAAYC,EAAaC,EAAiBC,EAAY,CACpD,IAAMC,EAAUH,EAAY,mBAAmB,EAC/C,KAAK,mBAAmB,YAAYG,EAASF,EAAiBC,CAAU,CAC1E,CACF,EAGIE,GAAwB,cAAc/kC,CAAS,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,uBAClB,CACA,UAAUe,EAAO,CACf,KAAK,eAAiBA,EAAM,cAC9B,CACA,qBAAqBd,EAAQ,CAC3B,IAAM+kC,EAAU,CAAC,EACjB,OAAIr9B,EAAQ1H,EAAO,aAAa,GAC9B+kC,EAAQ,KAAK/kC,EAAO,aAAa,EAEnC+kC,EAAQ,KAAK,QAAQ,EACrBA,EAAQ,KAAK/kC,EAAO,WAAa,eAAiB,iBAAiB,EAC/DA,EAAO,WACT+kC,EAAQ,KAAK,iBAAiB,EAEhCA,EAAQ,KAAK/kC,EAAO,UAAY,cAAgB,YAAY,EACxDA,EAAO,QAAQ,YAAY,GAC7B+kC,EAAQ,KAAK,eAAe,EAE1B/kC,EAAO,QAAQ,WAAW,GAC5B+kC,EAAQ,KAAK,iBAAiB,EAE5B/kC,EAAO,QAAQ,QACjB+kC,EAAQ,KAAK,eAAe,EAE9BA,EAAQ,KAAK,gBAAkB/kC,EAAO,QAAQ,EAC1CA,EAAO,QAAQ,MACjB+kC,EAAQ,KAAK,gBAAgB,EAE3B/kC,EAAO,cACT+kC,EAAQ,KAAK,mBAAmB,EAE9B/kC,EAAO,aACT+kC,EAAQ,KAAK,cAAc,EAC3BA,EAAQ,KAAK/kC,EAAO,QAAQ,SAAW,wBAA0B,yBAAyB,GAExFA,EAAO,QAAQ,UACjB+kC,EAAQ,KAAK,iBAAiB,EAEhCC,GAASD,EAAS,KAAK,8BAA8B/kC,EAAO,OAAO,CAAC,EACpEglC,GAASD,EAAS,KAAK,wBAAwB/kC,EAAO,OAAO,CAAC,EAC9D+kC,EAAQ,KAAK/kC,EAAO,YAAc,2BAA6B,0BAA0B,EACrFA,EAAO,gBACT+kC,EAAQ,KAAK,cAAc,EAEzB/kC,EAAO,eACT+kC,EAAQ,KAAK,aAAa,EAExB/kC,EAAO,eACLA,EAAO,SAAW,QACpB+kC,EAAQ,KAAK,0BAA0B,EAErC/kC,EAAO,SAAW,SACpB+kC,EAAQ,KAAK,4BAA4B,GAGtCA,CACT,CACA,8BAA8BjgC,EAAS,CACrC,IAAMgK,EAAM,CAAC,EACPm2B,EAAUC,GAAU,CACpB,OAAOA,GAAW,SACpBp2B,EAAI,KAAKo2B,CAAM,EACN,MAAM,QAAQA,CAAM,GAC7BA,EAAO,QAAQtuB,GAAK9H,EAAI,KAAK8H,CAAC,CAAC,CAEnC,EACMuuB,EAAW,KAAK,IAAI,IAAI,UAAU,EACxC,GAAIA,EAAU,CACZ,GAAI,OAAOA,GAAa,WACtB,OAAAh+B,EAAU,mEAAmE,EACtE,CAAC,EAEV89B,EAAQE,CAAQ,CAClB,CACA,IAAMC,EAAe,KAAK,IAAI,YAAY,aAAa,EACvD,GAAIA,EAAc,CAChB,IAAMplC,EAAS,CACb,KAAM8E,EAAQ,KACd,KAAMA,EACN,SAAUA,EAAQ,QACpB,EACMugC,EAAqBD,EAAaplC,CAAM,EAC9CilC,EAAQI,CAAkB,CAC5B,CACA,OAAOv2B,CACT,CACA,wBAAwBhK,EAAS,CAC/B,IAAMgK,EAAM,CAAC,EACb,YAAK,qBAAqBhK,EAASyS,GAAa,CAC9CzI,EAAI,KAAKyI,CAAS,CACpB,EAAG,IAAM,CAAC,CAAC,EACJzI,CACT,CACA,qBAAqBhK,EAASwgC,EAAmBC,EAAsB,CACrE,IAAMC,EAAiB,KAAK,IAAI,oBAAoB,CAClD,KAAM1gC,EAAQ,KACd,KAAMA,EACN,SAAUA,EAAQ,QACpB,CAAC,EACD,KAAK,eAAe,kBAAkB,OAAQ,KAAK,IAAI,IAAI,eAAe,EAAG0gC,EAAgBF,EAAmBC,CAAoB,CACtI,CACA,kBAAkBzgC,EAAS,CACzB,OAAIA,EAAQ,MACHA,EAAQ,MAEVA,EAAQ,OAASA,EAAQ,OAAO,MAAQ,EAAI,CACrD,CACF,EAGI2gC,GAA4B,cAAc1lC,CAAS,CACrD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,4BAEhB,KAAK,QAAU,EAEf,KAAK,aAAe,CACtB,CACA,UAAUe,EAAO,CACf,KAAK,aAAeA,EAAM,YAC5B,CACA,eAAgB,CACd,KAAK,yBAAyB,CAC5B,kBAAmB,KAAK,aAAa,KAAK,IAAI,CAChD,CAAC,EACD,KAAK,aAAe4kC,GAAiB,EACjC,KAAK,IAAI,IAAI,OAAO,GACtBjnB,GAAK,8CAAgD,KAAK,YAAY,CAE1E,CACA,cAAe,CACb,OAAO,KAAK,UACd,CACA,qBAAsB,CACpB,OAAO,KAAK,gBACd,CACA,cAAe,CACb,GAAI,CAAC,KAAK,WACR,OAGF,IAAMknB,EADc,KAAK,aAAa,gBAAgB,EACvB,iBAAiB,EAAE,mBAAmB,EAAE,IACjEC,EAAgB,KAAK,gBAAgB,GACjBD,IAAe,KAAK,SAAWC,IAAkB,KAAK,gBAE9E,KAAK,QAAUD,EACf,KAAK,aAAeC,EACpB,KAAK,gBAAgB,EAEzB,CACA,iBAAkB,CAChB,KAAK,qBAAqB,KAAK,YAAY,EAC3C,KAAK,cAAgB,KAAK,YAAc,KAAK,kBAC7C,KAAK,WAAa,KAAK,kBAAoB,KAAK,aAChD,IAAMC,EAAgB,KAAK,QAAU,KAAK,WACpCC,EAAmBD,EAAgB,KAAK,cAC1C,KAAK,IAAI,IAAI,OAAO,GACtBpnB,GAAK,oDAAoDqnB,CAAgB,KAAK,KAAK,aAAa,MAAMD,CAAa,GAAG,EAExH,KAAK,oBAAoBC,CAAgB,CAC3C,CACA,qBAAqBruB,EAAQ,CACvBA,IAAW,KAAK,oBAClB,KAAK,kBAAoBA,EACzB,KAAK,aAAa,cAAc,CAC9B,KAAM,2BACR,CAAC,EAEL,CACA,aAAc,CACZ,KAAK,qBAAqB,KAAK,WAAW,EAC1C,KAAK,cAAgB,EACrB,KAAK,oBAAoB,CAAC,CAC5B,CACA,oBAAoBsuB,EAAW,CAC7B,IAAMC,EAAiB,OAAOD,GAAc,SAAW,KAAK,MAAMA,CAAS,EAAI,KAC3E,KAAK,mBAAqBC,IAG9B,KAAK,iBAAmBA,EACxB,KAAK,aAAa,cAAc,CAC9B,KAAM,oBACR,CAAC,EACH,CACA,eAAeC,EAAa,CAC1B,KAAK,YAAcA,EACnB,KAAK,WAAaA,GAAe,MAEjC,KAAK,aAAe,GAAKA,EAAc,KAAK,aACxC,KAAK,WACP,KAAK,gBAAgB,EAErB,KAAK,YAAY,CAErB,CACA,sBAAuB,CACrB,OAAO,KAAK,iBACd,CACA,qBAAqBC,EAAY,CAC/B,OAAOA,EAAa,KAAK,gBAC3B,CACA,iBAAkB,CAEhB,IAAM9+B,EADc,KAAK,aAAa,gBAAgB,EAC9B,iBAAiB,EAAE,mBAAmB,EAC9D,OAAOA,EAAI,OAASA,EAAI,GAC1B,CACA,0BAA0B++B,EAAQ,CAChC,GAAI,KAAK,eAAiB,EACxB,OAAOA,EAET,IAAMC,EAAiB,KAAK,YAAc,KAAK,gBAAgB,EACzDP,EAAgBM,EAASC,EAE/B,OADoB,KAAK,WAAaP,CAExC,CACF,EAGIQ,GAAgB,cAActmC,CAAS,CACzC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,eAClB,CACA,UAAUe,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,wBAA0BA,EAAM,uBACvC,CACA,eAAgB,CACd,KAAK,eAAiB,KAAK,IAAI,IAAI,cAAc,EACjD,KAAK,yBAA2B,KAAK,IAAI,+BAA+B,EACxE,KAAK,2BAA2B,eAAgBwlC,GAAc,KAAK,eAAiBA,EAAW,YAAY,EAC3G,KAAK,2BAA2B,qBAAsB,IAAM,KAAK,yBAA2B,KAAK,IAAI,+BAA+B,CAAC,CACvI,CACA,WAAW9f,EAAU+f,EAAa,CAChC,IAAMC,EAAS,CAAC1hC,EAASsC,KAAS,CAChC,WAAYA,EACZ,QAAAtC,CACF,GACM2hC,EAAiBjgB,EAAS,IAAIggB,CAAM,EAC1C,OAAAC,EAAe,KAAK,KAAK,gBAAgB,KAAK,KAAMF,CAAW,CAAC,EACzDE,EAAe,IAAIxQ,GAAQA,EAAK,OAAO,CAChD,CACA,gBAAgBsQ,EAAaG,EAAaC,EAAa,CACrD,IAAMC,EAAQF,EAAY,QACpBG,EAAQF,EAAY,QAC1B,QAASp8B,EAAI,EAAGu8B,EAAMP,EAAY,OAAQh8B,EAAIu8B,EAAKv8B,IAAK,CACtD,IAAMw8B,EAAaR,EAAYh8B,CAAC,EAC1By8B,EAAeD,EAAW,OAAS,OACnCE,EAAS,KAAK,SAASL,EAAOG,EAAW,MAAM,EAC/CG,EAAS,KAAK,SAASL,EAAOE,EAAW,MAAM,EACjDI,EACEC,EAAqB,KAAK,cAAcL,EAAYH,CAAK,EAO/D,GANIQ,EACFD,EAAmBC,EAAmBH,EAAQC,EAAQN,EAAOC,EAAOG,CAAY,EAEhFG,EAAmBE,GAAmBJ,EAAQC,EAAQ,KAAK,cAAc,EAEvD,CAAC,MAAMC,CAAgB,GACxBA,IAAqB,EACtC,OAAOJ,EAAW,OAAS,MAAQI,EAAmBA,EAAmB,EAE7E,CACA,OAAOT,EAAY,WAAaC,EAAY,UAC9C,CACA,cAAcI,EAAYjiC,EAAS,CACjC,IAAMD,EAASkiC,EAAW,OACpBO,EAAkBziC,EAAO,UAAU,EAAE,WAC3C,GAAIyiC,GAAmB,KACrB,OAAOA,EAET,GAAI,CAACziC,EAAO,UAAU,EAAE,aACtB,OAEF,IAAM0iC,EAAiB,CAACziC,EAAQ,OAASD,EAAO,UAAU,EAAE,MAC5D,GAAI,CAAC0iC,EACH,OAEF,IAAMC,EAAgB,KAAK,YAAY,aAAaD,CAAc,EAClE,GAAKC,EAGL,OAAOA,EAAc,UAAU,EAAE,UACnC,CACA,SAASz1B,EAAMlN,EAAQ,CACrB,GAAI,CAAC,KAAK,yBACR,OAAO,KAAK,aAAa,SAASA,EAAQkN,EAAM,GAAO,EAAK,EAG9D,GAD6BA,EAAK,iBAAmBlN,EAC3B,CAExB,GADoB,KAAK,IAAI,oBAAoB,KAAK,YAAY,cAAc,CAAC,EAChE,CACf,IAAM4iC,EAAY11B,EAAK,kBAAkB,CAAC,EAC1C,OAAI01B,EACK,KAAK,aAAa,SAAS5iC,EAAQ4iC,EAAW,GAAO,EAAK,EAEnE,MACF,CACA,IAAMC,EAAa,KAAK,yBAAyB,mBAAmB7iC,EAAO,MAAM,CAAC,EAClF,OAAK6iC,EAGE31B,EAAK,YAAY21B,EAAW,MAAM,CAAC,EAFxC,MAGJ,CACA,GAAI,EAAA31B,EAAK,OAASlN,EAAO,UAAU,EAAE,cAGrC,OAAO,KAAK,aAAa,SAASA,EAAQkN,EAAM,GAAO,EAAK,CAC9D,CACF,EAGI41B,GAAc,KAAM,CACtB,YAAYC,EAAgB3sB,EAAU,CAOpC,KAAK,OAAS,GAGd,KAAK,iBAAmB,CAAC,EAEzB,KAAK,WAAa,CAAC,EACnB,KAAK,eAAiB2sB,EACtB,KAAK,SAAW,CACd,QAAS3sB,EACT,SAAU,IACZ,EACA,KAAK,WAAWA,EAAS,EAAE,EAAI,KAAK,QACtC,CAIA,aAAc,CACZ,KAAK,OAAS,EAChB,CACA,UAAW,CACT,OAAO,KAAK,MACd,CACA,4BAA4B4sB,EAAUriC,EAAU,CAC9C,GAAIqiC,EAAS,SACX,QAAS,EAAI,EAAG,EAAIA,EAAS,SAAS,OAAQ,IAC5C,KAAK,4BAA4BA,EAAS,SAAS,CAAC,EAAGriC,CAAQ,EAGnEA,EAASqiC,EAAS,OAAO,CAC3B,CACA,2BAA2B/iC,EAASU,EAAUsiC,EAAoB,CAChE,GAAIhjC,EAAQ,mBACV,QAASyF,EAAI,EAAGA,EAAIzF,EAAQ,mBAAmB,OAAQyF,IAAK,CAC1D,IAAMw9B,EAAYjjC,EAAQ,mBAAmByF,CAAC,EAC1Cw9B,EAAU,mBACZ,KAAK,2BAA2BjjC,EAAQ,mBAAmByF,CAAC,EAAG/E,EAAUsiC,CAAkB,EAClFA,GACTtiC,EAASuiC,CAAS,CAEtB,CAEFviC,EAASV,CAAO,CAClB,CAGA,6BAA6BU,EAAUwiC,EAAoB,GAAOC,EAAwB,GAAO,CAC3F,KAAK,QAAU,CAACA,EAClB,KAAK,4BAA4B,KAAK,SAAUziC,CAAQ,EAExD,KAAK,2BAA2B,KAAK,SAAS,QAASA,EAAUwiC,CAAiB,CAEtF,CACA,oBAAoBxiC,EAAU,CAC5BA,EAAS,KAAK,SAAS,OAAO,CAChC,CACA,gBAAgBV,EAAS,CACvB,IAAI0H,EAAU1H,EACVojC,EAAgB,EACpB,KAAO,CAAC,KAAK,WAAW17B,EAAQ,EAAE,GAAG,CACnC,IAAM27B,EAAW,CACf,QAAS37B,EACT,SAAU,IACZ,EACA,KAAK,WAAWA,EAAQ,EAAE,EAAI27B,EAC9BD,IACA17B,EAAUA,EAAQ,MACpB,CACA,OAAO07B,CACT,CACA,mBAAmBpjC,EAAS2L,EAAS,CACnC,GAAI,CAAC,KAAK,gBAAkB,CAACA,EAC3B,OAEF,IAAIjE,EAAU1H,EACd,KAAO0H,GACA,KAAK,iBAAiBA,EAAQ,EAAE,IACnC,KAAK,iBAAiBA,EAAQ,EAAE,EAAI,CAAC,GAEvCiE,EAAQ,QAAQzB,GAAO,KAAK,iBAAiBxC,EAAQ,EAAE,EAAEwC,EAAI,MAAM,CAAC,EAAI,EAAI,EAC5ExC,EAAUA,EAAQ,MAEtB,CACA,cAAc1H,EAASojC,EAAe,CACpC,IAAI17B,EAAU1H,EACd,QAASyF,EAAI,EAAGA,EAAI29B,EAAe39B,IAAK,CACtC,IAAM69B,EAAW,KAAK,WAAW57B,EAAQ,EAAE,EACrC67B,EAAa,KAAK,WAAW77B,EAAQ,OAAO,EAAE,EAC/C67B,EAAW,WACdA,EAAW,SAAW,CAAC,GAEzBA,EAAW,SAAS,KAAKD,CAAQ,EACjC57B,EAAUA,EAAQ,MACpB,CACF,CAIA,cAAc1H,EAAS2L,EAAS,CAC9B,GAAI,CAAC3L,GAAWA,EAAQ,YAAY,EAClC,OAEF,IAAMojC,EAAgB,KAAK,gBAAgBpjC,CAAO,EAClD,KAAK,cAAcA,EAASojC,CAAa,EACzC,KAAK,mBAAmBpjC,EAAS2L,CAAO,CAC1C,CACA,QAAQ3L,EAAS,CACf,OAAO,KAAK,QAAU,CAAC,KAAK,WAAWA,EAAQ,EAAE,CACnD,CACA,uBAAuBA,EAASwjC,EAAc,CAC5C,GAAI,CAAC,KAAK,eACR,OAAOA,EAET,IAAMC,EAAkB,KAAK,iBAAiBzjC,EAAQ,EAAE,EAExD,OADewjC,EAAa,OAAOt5B,GAAOu5B,EAAgBv5B,EAAI,MAAM,CAAC,CAAC,CAExE,CACA,0BAA0BlK,EAASwjC,EAAc,CAC/C,GAAI,CAAC,KAAK,eACR,OAAO,KAET,IAAMC,EAAkB,KAAK,iBAAiBzjC,EAAQ,EAAE,EAExD,OADewjC,EAAa,OAAOt5B,GAAO,CAACu5B,EAAgBv5B,EAAI,MAAM,CAAC,CAAC,CAEzE,CACF,EAGIw5B,GAAmB,cAAczoC,CAAS,CAC5C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,mBAChB,KAAK,cAA+B,IAAI,IACxC,KAAK,aAAe,IAAI0oC,EAC1B,CACA,UAAU3nC,EAAO,CACf,KAAK,SAAWA,EAAM,SACtB,KAAK,kBAAoBA,EAAM,iBACjC,CACA,eAAgB,CACd,KAAK,aAAa,KAAK,KAAK,QAAQ,EACpC,KAAK,aAAe,KAAK,IAAI,IAAI,cAAc,EAC/C,KAAK,qBAAuB,KAAK,IAAI,IAAI,sBAAsB,EAC/D,KAAK,4BAA4B,CAAC,uBAAwB,cAAc,EAAG,IAAM,CAC/E,KAAK,qBAAuB,KAAK,IAAI,IAAI,sBAAsB,EAC/D,KAAK,aAAe,KAAK,IAAI,IAAI,cAAc,EAC/C,KAAK,oBAAoB,CACvB,OAAQ,KACV,CAAC,CACH,CAAC,EACD,KAAK,yBAAyB,CAC5B,YAAa,KAAK,cAAc,KAAK,IAAI,CAC3C,CAAC,CACH,CACA,SAAU,CACR,MAAM,QAAQ,EACd,KAAK,WAAW,EAChB,KAAK,aAAa,MAAM,CAC1B,CACA,eAAgB,CACd,OAAO,KAAK,eAAiB,UAC/B,CAOA,uBAAuB0R,EAAU1C,EAAQ,CACvC,GAAI,CAAC8uB,GAAmB9uB,CAAM,EAC5B,OAAO0C,EAET,IAAMk2B,EAAO,KAAK,aAAa,QAAQ,EACvC,OAAOA,EAAOA,EAAK,WAAW,GAAK,GAAQ,EAC7C,CACA,iBAAiB1oC,EAAQ,CACvB,GAAM,CACJ,SAAAwS,EACA,eAAAm2B,EACA,sBAAAC,EACA,YAAAC,EACA,MAAArtB,EACA,MAAApT,EACA,OAAA0H,CACF,EAAI9P,EACJ,GAAIwb,EAAM,SAAW,EAAG,MAAO,GAC/B,GAAIA,EAAM,OAAS,GAAK,CAAC,KAAK,cAAc,EAC1C,OAAArU,EAAU,iDAAiD,EACpD,EAET,IAAM2hC,EAAuB,KAAK,sBAAwB9oC,EAAO,uBAAyB,GACpF+oC,EAAgBvtB,EAAM,IAAIzJ,GAAQA,EAAK,OAASA,EAAK,QAAUA,CAAI,EACzE,GAAI82B,EAAa,CACf,GAAIE,EAAc,OAAS,EACzB,OAAA5hC,EAAU,mDAAmD,EACtD,EAET,IAAM4K,EAAOg3B,EAAc,CAAC,EACtBC,EAAoB,KAAK,uBAAuBx2B,EAAU1C,CAAM,EACtE,GAAK,KAAK,cAAc,GAAW,GAAI,KAAK,aAAa,UAAUiC,CAAI,EAAG,CACxE,IAAMk3B,EAAY,KAAK,aAAa,SAASl3B,CAAI,EACjD,OAAIi3B,GACF,KAAK,YAAYC,EAAU,QAAS,GAAOn5B,CAAM,EAE5C,KAAK,YAAYm5B,EAAU,KAAMD,EAAmBl5B,CAAM,CACnE,SACmB,KAAK,aAAa,QAAQ,IAC5BiC,EACU,CACvB,IAAMk3B,EAAY,KAAK,aAAa,OAAOl3B,EAAM,KAAK,oBAAoB,EAC1E,OAAIi3B,GACF,KAAK,YAAYC,EAAU,QAAS,GAAOn5B,CAAM,EAE5C,KAAK,YAAYm5B,EAAU,KAAMD,EAAmBl5B,CAAM,CACnE,EAEJ,CACK84B,GACH,KAAK,aAAa,QAAQG,EAAc,CAAC,CAAC,EAE5C,IAAIG,EAAe,EACnB,QAAS3+B,EAAI,EAAGA,EAAIw+B,EAAc,OAAQx+B,IAAK,CAC7C,IAAMwH,EAAOg3B,EAAcx+B,CAAC,EACPu+B,GAAwB/2B,EAAK,OAEpBA,EAAK,eAAeS,EAAUpK,EAAO0H,CAAM,GAErEo5B,IAGA,KAAK,sBAAwBn3B,EAAK,oBAAoB,SACxDm3B,GAAgB,KAAK,eAAen3B,EAAMS,EAAUs2B,EAAsBh5B,CAAM,EAEpF,CACA,OAAK84B,IACqBp2B,IAAam2B,GAAkB,CAAC,KAAK,cAAc,KAEzEO,GAAgB,KAAK,gBAAgBH,EAAc,CAAC,EAAGj5B,CAAM,GAE3Do5B,EAAe,IACjB,KAAK,mCAAmCp5B,CAAM,EAC9C,KAAK,yBAAyBA,CAAM,IAGjCo5B,CACT,CAGA,YAAYC,EAAe/qB,EAAOtO,EAAQ,CACxC,IAAIo5B,EAAe,EACnB,OAAAC,EAAc,QAAQrkC,GAAW,CAC/B,GAAIA,EAAQ,OAAS,KAAK,qBACxB,OAEsBA,EAAQ,eAAesZ,EAAO,OAAQtO,CAAM,GAElEo5B,GAEJ,CAAC,EACGA,EAAe,IACjB,KAAK,mCAAmCp5B,CAAM,EAC9C,KAAK,yBAAyBA,CAAM,GAE/Bo5B,CACT,CACA,eAAen3B,EAAMS,EAAUs2B,EAAsBh5B,EAAQ,CAC3D,IAAMiE,EAAW+0B,EAAuB/2B,EAAK,uBAAyBA,EAAK,mBAC3E,OAAIjE,EAASiG,CAAQ,EACZ,EAEF,KAAK,iBAAiB,CAC3B,SAAAvB,EACA,eAAgB,GAChB,sBAAuB,GACvB,qBAAAs2B,EACA,OAAAh5B,EACA,MAAOiE,CACT,CAAC,CACH,CACA,kBAAmB,CACjB,IAAMq1B,EAAgB,CAAC,EACvB,YAAK,cAAc,QAAQtkC,GAAW,CAChCA,GACFskC,EAAc,KAAKtkC,CAAO,CAE9B,CAAC,EACMskC,CACT,CACA,iBAAkB,CAChB,IAAMC,EAAe,CAAC,EACtB,YAAK,cAAc,QAAQvkC,GAAW,CAChCA,GAAWA,EAAQ,MACrBukC,EAAa,KAAKvkC,EAAQ,IAAI,CAElC,CAAC,EACMukC,CACT,CACA,mBAAoB,CAClB,OAAO,KAAK,cAAc,IAC5B,CAKA,oBAAoBC,EAAW,CAC7B,IAAMC,EAAkC,IAAI,IAC5C,KAAK,cAAc,QAAQ,CAACzkC,EAASiH,IAAQ,CACnBjH,GAAWwkC,EAAUxkC,CAAO,GAElDykC,EAAiB,IAAIx9B,EAAKjH,CAAO,CAErC,CAAC,EACD,KAAK,cAAgBykC,CACvB,CAEA,mCAAmCz5B,EAAQ05B,EAAa,CAItD,GAHI,CAAC,KAAK,sBAGN,KAAK,SAAS,QAAQ,IAAM,aAC9B,MAAO,GAGT,IAAMvuB,EADqB,KAAK,SACI,YAAY,EAC3CuuB,IACHA,EAAc,IAAI7B,GAAY,GAAM1sB,CAAQ,EAC5CuuB,EAAY,YAAY,GAE1B,IAAIC,EAAmB,GACvB,OAAAD,EAAY,6BAA6B1kC,GAAW,CAClD,GAAIA,IAAYmW,EAAU,CACxB,IAAMyuB,EAAW5kC,EAAQ,8BAA8B,EACvD2kC,EAAmB3kC,EAAQ,eAAe4kC,IAAa,KAAO,GAAQA,EAAU,OAAQ55B,CAAM,GAAK25B,CACrG,CACF,CAAC,EACMA,CACT,CACA,gBAAgBE,EAAuB75B,EAAQ,CAC7C,IAAM85B,EAAiC,IAAI,IACvCV,EAAe,EACnB,YAAK,cAAc,QAAQW,GAAgB,CACzC,GAAIA,GAAgBA,EAAa,KAAOF,EAAsB,GAAI,CAChE,IAAM7kC,EAAU,KAAK,cAAc,IAAI+kC,EAAa,EAAE,EACtDX,GAAgBpkC,EAAQ,kBAAkB,CACxC,SAAU,GACV,eAAgB,GAChB,sBAAuB,GACvB,OAAAgL,CACF,CAAC,EACG,KAAK,sBAAwB+5B,EAAa,QAC5CD,EAAgB,IAAIC,EAAa,OAAO,GAAIA,EAAa,MAAM,CAEnE,CACF,CAAC,EACDD,EAAgB,QAAQr6B,GAAS,CAC/B,IAAMm6B,EAAWn6B,EAAM,8BAA8B,EACrDA,EAAM,eAAem6B,IAAa,KAAO,GAAQA,EAAU,OAAQ55B,CAAM,CAC3E,CAAC,EACMo5B,CACT,CACA,cAAc9gC,EAAO,CACnB,IAAMtD,EAAUsD,EAAM,KAClB,KAAK,sBAAwBtD,EAAQ,QAGrCA,EAAQ,WAAW,EACrB,KAAK,cAAc,IAAIA,EAAQ,GAAIA,CAAO,EAE1C,KAAK,cAAc,OAAOA,EAAQ,EAAE,EAExC,CACA,cAAcA,EAASglC,EAAS,CAC9B,KAAK,iBAAiBhlC,EAASglC,CAAO,EACtC,KAAK,iBAAiBhlC,CAAO,CAC/B,CAYA,iBAAiBA,EAASglC,EAAS,CAEjC,GAD8BpiC,EAAQoiC,CAAO,GAAKhlC,EAAQ,KAAOglC,EAAQ,IAC5CA,EAAS,CACpC,IAAMjd,EAAKid,EAAQ,GACK,KAAK,cAAc,IAAIjd,CAAE,GAAK/nB,GAEpD,KAAK,cAAc,IAAIglC,EAAQ,GAAIA,CAAO,CAE9C,CACF,CACA,iBAAiBhlC,EAAS,CACpB,KAAK,cAAc,IAAIA,EAAQ,EAAE,GACnCA,EAAQ,wBAAwB,EAAI,EACpC,KAAK,cAAc,IAAIA,EAAQ,GAAIA,CAAO,GAE1CA,EAAQ,wBAAwB,EAAK,CAEzC,CACA,MAAMgL,EAAQ,CACZ,IAAMi6B,EAAiB,KAAK,kBAAkB,EAC9C,KAAK,WAAW,EACZA,GACF,KAAK,yBAAyBj6B,CAAM,CAExC,CACA,YAAa,CACX,KAAK,eAAe,MAAM,CAC5B,CAMA,0BAA2B,CACzB,GAAI,KAAK,SAAS,QAAQ,IAAM,aAC9B,OAGF,IAAMk6B,EADqB,KAAK,SACS,iBAAiB,EAC1D,GAAIA,IAAkB,KACpB,OAEF,IAAMh/B,EAAS,CAAC,EAChB,SAASi/B,EAASzuB,EAAO,CACvB,QAASjR,EAAI,EAAG2/B,EAAI1uB,EAAM,OAAQjR,EAAI2/B,EAAG3/B,IAAK,CAC5C,IAAMwH,EAAOyJ,EAAMjR,CAAC,EACpB,GAAIwH,EAAK,WAAW,EAClB/G,EAAO,KAAK+G,CAAI,MACX,CACL,IAAMo4B,EAAap4B,EACfo4B,EAAW,OAASA,EAAW,UACjCF,EAASE,EAAW,QAAQ,CAEhC,CACF,CACF,CACA,OAAAF,EAASD,CAAa,EACfh/B,CACT,CACA,SAAU,CACR,IAAIo/B,EAAQ,EACZ,YAAK,cAAc,QAAQtlC,GAAW,CAChCA,GACFslC,GAEJ,CAAC,EACMA,IAAU,CACnB,CACA,oBAAoBpqC,EAAQ,CAC1B,IAAMwF,EAAWV,GAAWA,EAAQ,eAAe,GAAO,OAAQgL,CAAM,EAClEu6B,EAAqB,KAAK,SAAS,QAAQ,IAAM,aACjD,CACJ,OAAAv6B,EACA,aAAAw6B,EACA,gBAAAC,CACF,EAAIvqC,EACJ,GAAIuqC,GAAmBD,EAAc,CACnC,GAAI,CAACD,EAAoB,CACvBhrB,EAAW,+EAA+E,EAC1F,MACF,CACA,KAAK,iBAAiBirB,EAAcC,CAAe,EAAE,QAAQ/kC,CAAQ,CACvE,MACE,KAAK,cAAc,QAAQV,GAAW,CAChCA,GACFU,EAASV,CAAO,CAEpB,CAAC,EACD,KAAK,MAAMgL,CAAM,EAEnB,KAAK,aAAa,MAAM,EACpBu6B,GAAsB,KAAK,sBAC7B,KAAK,mCAAmCv6B,CAAM,EAEhD,KAAK,yBAAyBA,CAAM,CACtC,CACA,kBAAkBw6B,EAAcC,EAAiB,CAC/C,IAAIC,EAAgB,EAChBC,EAAmB,EACjBjlC,EAAWuM,GAAQ,CACnB,KAAK,sBAAwBA,EAAK,QAGlCA,EAAK,WAAW,EAClBy4B,IACUz4B,EAAK,YACf04B,IAEJ,EACA,YAAK,iBAAiBH,EAAcC,CAAe,EAAE,QAAQ/kC,CAAQ,EAC9D,CACL,cAAAglC,EACA,iBAAAC,CACF,CACF,CACA,kBAAkBH,EAAcC,EAAiB,CAC/C,GAAM,CACJ,cAAAC,EACA,iBAAAC,CACF,EAAI,KAAK,kBAAkBH,EAAcC,CAAe,EACxD,OAAIC,IAAkB,GAAKC,IAAqB,EACvC,GAELD,EAAgB,GAAKC,EAAmB,EACnC,KAEFD,EAAgB,CACzB,CACA,iBAAiBF,EAAe,GAAOC,EAAkB,GAAO,CAC9D,OAAO,KAAK,iBAAiBD,EAAcC,CAAe,EAAE,OAAOx4B,GAAQA,EAAK,UAAU,EAAE,OAAS,CACvG,CAMA,iBAAiBu4B,EAAe,GAAOC,EAAkB,GAAO,CAC9D,GAAI,KAAK,SAAS,QAAQ,IAAM,aAC9B,MAAM,IAAI,MAAM,mEAAmE,KAAK,SAAS,QAAQ,CAAC,EAAE,EAE9G,IAAM/uB,EAAQ,CAAC,EACf,GAAI+uB,EACF,YAAK,kBAAkBx4B,GAAQ,CAC7B,GAAI,CAACA,EAAK,MAAO,CACfyJ,EAAM,KAAKzJ,CAAI,EACf,MACF,CACA,GAAI,CAACA,EAAK,SAAU,CAClB,IAAM24B,EAAyBv4B,GAAS,CACtCqJ,EAAM,KAAKrJ,CAAK,EACZA,EAAM,qBAAqB,QAC7BA,EAAM,oBAAoB,QAAQu4B,CAAsB,CAE5D,EACAA,EAAuB34B,CAAI,EAC3B,MACF,CACK,KAAK,sBACRyJ,EAAM,KAAKzJ,CAAI,CAEnB,CAAC,EACMyJ,EAET,IAAMmvB,EAAqB,KAAK,SAChC,OAAIL,GACFK,EAAmB,uBAAuB54B,GAAQ,CAChDyJ,EAAM,KAAKzJ,CAAI,CACjB,CAAC,EACMyJ,IAETmvB,EAAmB,YAAY54B,GAAQ,CACrCyJ,EAAM,KAAKzJ,CAAI,CACjB,CAAC,EACMyJ,EACT,CACA,kBAAkBhW,EAAU,CAC1B,IAAMkyB,EAAW,KAAK,kBAAkB,YAAY,EAC9CkT,EAAU,KAAK,kBAAkB,WAAW,EAClD,QAASrgC,EAAImtB,EAAUntB,GAAKqgC,EAASrgC,IAAK,CACxC,IAAMwH,EAAO,KAAK,SAAS,OAAOxH,CAAC,EAC/BwH,GACFvM,EAASuM,CAAI,CAEjB,CACF,CACA,kBAAkB/R,EAAQ,CACxB,GAAI,KAAK,SAAS,QAAQ,IAAM,aAC9B,MAAM,IAAI,MAAM,mEAAmE,KAAK,SAAS,QAAQ,CAAC,EAAE,EAE9G,GAAM,CACJ,OAAA8P,EACA,aAAAw6B,EACA,gBAAAC,CACF,EAAIvqC,EACEwb,EAAQ,KAAK,iBAAiB8uB,EAAcC,CAAe,EACjE/uB,EAAM,QAAQ1W,GAAWA,EAAQ,eAAe,GAAM,OAAQgL,CAAM,CAAC,EACrE,KAAK,aAAa,QAAQ0L,EAAM,CAAC,GAAK,IAAI,EAC1C,KAAK,aAAa,YAAYvQ,EAAMuQ,CAAK,GAAK,IAAI,EAC9C,KAAK,SAAS,QAAQ,IAAM,cAAgB,KAAK,sBACnD,KAAK,mCAAmC1L,CAAM,EAEhD,KAAK,yBAAyBA,CAAM,CACtC,CACA,mBAAoB,CAClB,IAAM+6B,EAAc,CAAC,EACrB,YAAK,cAAc,QAAQ94B,GAAQ,CAC7BA,GAAM,IACR84B,EAAY,KAAK94B,EAAK,EAAE,CAE5B,CAAC,EACM84B,EAAY,OAASA,EAAc,IAC5C,CACA,kBAAkBjkB,EAAO9W,EAAQ,CAC/B,GAAI,CAAC,MAAM,QAAQ8W,CAAK,EACtB,OAEF,IAAMkkB,EAAS,IAAI,IAAIlkB,CAAK,EACtBpL,EAAQ,CAAC,EACf,KAAK,SAAS,YAAYzJ,GAAQ,CAC5B+4B,EAAO,IAAI/4B,EAAK,EAAE,GACpByJ,EAAM,KAAKzJ,CAAI,CAEnB,CAAC,EACD,KAAK,iBAAiB,CACpB,SAAU,GACV,MAAAyJ,EACA,OAAA1L,CACF,CAAC,CACH,CACA,yBAAyBA,EAAQ,CAC/B,IAAM1H,EAAQ,CACZ,KAAM,mBACN,OAAA0H,CACF,EACA,KAAK,aAAa,cAAc1H,CAAK,CACvC,CACF,EAGI2iC,GAAoB,cAAchrC,CAAS,CAC7C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,mBAClB,CACA,UAAUe,EAAO,CACf,KAAK,SAAWA,EAAM,SACtB,KAAK,iBAAmBA,EAAM,gBAChC,CACA,eAAgB,CACd,KAAK,2BAA2B,kBAAmB,IAAM,KAAK,iBAAiB,CAAC,CAClF,CAIA,+BAAgC,CAC9B,KAAK,iBAAiB,EAAI,CAC5B,CACA,iBAAiBkqC,EAAgB,GAAO,CACtC,IAAMC,EAAiB,CAAC,CAAC,KAAK,IAAI,IAAI,cAAc,EAC9CC,EAAkB,KAAK,IAAI,IAAI,iBAAiB,EACtD,GAAI,CAACD,GAAkB,CAACC,EACtB,OAEF,IAAMC,EAAyB,KAAK,IAAI,IAAI,sBAAsB,EAC5DC,EAA6B,KAAK,SAAS,QAAQ,IAAM,cAAgBD,EACzEE,EAAkB,CAAC,EACnBC,EAAev5B,GAAQ,CAC3B,GAAIi5B,GAAiB,CAACj5B,EAAK,MACzB,OAEF,GAAIq5B,GAA8Br5B,EAAK,MAAO,CAC5C,IAAMw5B,EAAqBx5B,EAAK,mBAAmB,KAAKjN,GAAWA,EAAQ,aAAe,EAAI,EAC9FiN,EAAK,iBAAiBw5B,EAAoB,EAAI,EAC9C,MACF,CACA,IAAMC,EAAgBN,EAAkBA,EAAgBn5B,CAAI,EAAI,GAChEA,EAAK,iBAAiBy5B,EAAe,EAAI,EACrC,CAACA,GAAiBz5B,EAAK,WAAW,GACpCs5B,EAAgB,KAAKt5B,CAAI,CAE7B,EACA,GAAIq5B,EAA4B,CAC9B,IAAMK,EAAO,KAAK,SACE,IAAI9D,GAAY,GAAO8D,EAAK,YAAY,CAAC,EACjD,6BAA6BH,EAAc,GAAM,EAAI,CACnE,MACE,KAAK,SAAS,YAAYA,CAAY,EAEpCD,EAAgB,QAClB,KAAK,iBAAiB,iBAAiB,CACrC,MAAOA,EACP,SAAU,GACV,OAAQ,mBACV,CAAC,EAECD,GAA8B,KAAK,4BAA4B5C,IACjE,KAAK,iBAAiB,mCAAmC,mBAAmB,CAEhF,CACF,EAGIkD,GAAwB,CAAC,MAAO,OAAQ,IAAI,EAC5CC,GAAiB,cAAc5rC,CAAS,CAC1C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,gBAClB,CACA,UAAUe,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,wBAA0BA,EAAM,uBACvC,CACA,aAAa+D,EAAQ+mC,EAAW97B,EAAQ,CACtC,IAAM+7B,EAAgB,KAAK,qBAAqBhnC,CAAM,EACtD,KAAK,iBAAiBA,EAAQgnC,EAAeD,EAAW97B,CAAM,CAChE,CACA,iBAAiBjL,EAAQoM,EAAM26B,EAAW97B,EAAQ,CAC5CmB,IAAS,OAASA,IAAS,SAC7BA,EAAO,MAET,IAAM66B,EAAiC,KAAK,IAAI,+BAA+B,EAC3EC,EAAkB,CAAClnC,CAAM,EAC7B,GAAIinC,GACEjnC,EAAO,UAAU,EAAE,aAAc,CAEnC,IAAMmnC,EADkB,KAAK,gBAAgB,+BAA+BnnC,CAAM,GACjC,OAAOmK,GAAOA,EAAI,WAAW,CAAC,EAC3Eg9B,IACFD,EAAkB,CAAClnC,EAAQ,GAAGmnC,CAAuB,EAEzD,CAEFD,EAAgB,QAAQ/8B,GAAOA,EAAI,QAAQiC,EAAMnB,CAAM,CAAC,EACxD,IAAMm8B,GAAkBL,GAAa,KAAK,IAAI,IAAI,iBAAiB,IAAM,CAAC,KAAK,IAAI,IAAI,mBAAmB,EACpGM,EAAiB,CAAC,EACxB,GAAI,CAACD,EAAgB,CACnB,IAAME,EAAiB,KAAK,yBAAyBJ,EAAiBj8B,CAAM,EAC5Eo8B,EAAe,KAAK,GAAGC,CAAc,CACvC,CACA,KAAK,gBAAgBtnC,CAAM,EAC3BqnC,EAAe,KAAK,GAAGH,CAAe,EACtC,KAAK,0BAA0Bj8B,EAAQo8B,CAAc,CACvD,CACA,gBAAgBE,EAAiB,CAC/B,IAAMC,EAAY,KAAK,IAAI,+BAA+B,EACpDC,EAAc,KAAK,yBAAyB,mBAAmBF,EAAgB,MAAM,CAAC,EACtFG,EAAmBF,GAAYC,GAAeF,EAC9CI,EAAgB,KAAK,6BAA6B,EACxD,KAAK,YAAY,WAAW,EAAE,QAAQx9B,GAAOA,EAAI,aAAa,IAAI,CAAC,EACnE,IAAMy9B,EAAsCD,EAAc,OAAOx9B,GAC3Dq9B,GAAar9B,EAAI,UAAU,EAAE,aACxB,GAEFA,IAAQu9B,CAChB,GAC6BA,EAAiB,QAAQ,EAAI,CAAC,GAAGE,EAAqCF,CAAgB,EAAIE,GAClG,QAAQ,CAACz9B,EAAK1B,IAAQ,CAC1C0B,EAAI,aAAa1B,CAAG,CACtB,CAAC,CACH,CAGA,cAAcwC,EAAQW,EAAS,CAC7B,KAAK,0BAA0BX,EAAQW,CAAO,CAChD,CACA,cAAe,CAEb,IAAMi8B,EADU,KAAK,YAAY,WAAW,EACjB,OAAO7nC,GAAU,CAAC,CAACA,EAAO,QAAQ,CAAC,EAC9D,OAAO6nC,GAAcA,EAAW,OAAS,CAC3C,CACA,0BAA0B58B,EAAQW,EAAS,CACzC,IAAMrI,EAAQ,CACZ,KAAM,cACN,OAAA0H,CACF,EACIW,IACFrI,EAAM,QAAUqI,GAElB,KAAK,aAAa,cAAcrI,CAAK,CACvC,CACA,yBAAyBukC,EAAe78B,EAAQ,CAC9C,IAAMq8B,EAAiB,CAAC,EACxB,YAAK,YAAY,WAAW,EAAE,QAAQS,GAAiB,CAChDD,EAAc,SAASC,CAAa,IACnCA,EAAc,QAAQ,GACxBT,EAAe,KAAKS,CAAa,EAEnCA,EAAc,QAAQ,OAAQ98B,CAAM,EAExC,CAAC,EACMq8B,CACT,CACA,qBAAqBtnC,EAAQ,CAC3B,IAAIgoC,EAQJ,GAPIhoC,EAAO,UAAU,EAAE,aACrBgoC,EAAehoC,EAAO,UAAU,EAAE,aACzB,KAAK,IAAI,IAAI,cAAc,EACpCgoC,EAAe,KAAK,IAAI,IAAI,cAAc,EAE1CA,EAAenB,GAEb,CAAC,MAAM,QAAQmB,CAAY,GAAKA,EAAa,QAAU,EACzD,OAAA1lC,EAAU,2EAA2E0lC,CAAY,EAAE,EAC5F,KAET,IAAM3wB,EAAe2wB,EAAa,QAAQhoC,EAAO,QAAQ,CAAC,EACpDioC,EAAa5wB,EAAe,EAC5B6wB,EAAkB7wB,GAAgB2wB,EAAa,OAAS,EAC1D7hC,EAMJ,OALI8hC,GAAcC,EAChB/hC,EAAS6hC,EAAa,CAAC,EAEvB7hC,EAAS6hC,EAAa3wB,EAAe,CAAC,EAEpCwvB,GAAsB,QAAQ1gC,CAAM,EAAI,GAC1C7D,EAAU,qBAAsB6D,CAAM,EAC/B,MAEFA,CACT,CAIA,mBAAoB,CAClB,IAAIwhC,EAAgB,KAAK,YAAY,WAAW,EAAE,OAAOx9B,GAAO,CAAC,CAACA,EAAI,QAAQ,CAAC,EAC/E,GAAI,KAAK,YAAY,YAAY,EAAG,CAClC,IAAMg+B,EAAkB,KAAK,IAAI,+BAA+B,EAChER,EAAgBA,EAAc,OAAOx9B,GAAO,CAC1C,IAAMi+B,EAAe,CAAC,CAACj+B,EAAI,WAAW,EAChCk+B,EAAc,CAACl+B,EAAI,UAAU,EAC7Bm+B,EAAUH,EAAkB,KAAK,yBAAyB,mBAAmBh+B,EAAI,MAAM,CAAC,EAAIA,EAAI,UAAU,EAAE,aAClH,OAAOi+B,GAAgBC,GAAeC,CACxC,CAAC,CACH,CACA,IAAMC,EAAqB,KAAK,gBAAgB,mBAAmB,EAAE,OAAOp+B,GAAO,CAAC,CAACA,EAAI,QAAQ,CAAC,EAC5Fq+B,EAAiB,CAAC,EACxBb,EAAc,QAAQ,CAACx9B,EAAK1N,IAAU+rC,EAAer+B,EAAI,MAAM,CAAC,EAAI1N,CAAK,EACzEkrC,EAAc,KAAK,CAACp/B,EAAGzL,IAAM,CAC3B,IAAM2rC,EAAKlgC,EAAE,aAAa,EACpBmgC,EAAK5rC,EAAE,aAAa,EAC1B,GAAI2rC,GAAM,MAAQC,GAAM,KACtB,OAAOD,EAAKC,EACP,GAAID,GAAM,MAAQC,GAAM,KAAM,CACnC,IAAM97B,EAAO47B,EAAejgC,EAAE,MAAM,CAAC,EAC/BsE,EAAO27B,EAAe1rC,EAAE,MAAM,CAAC,EACrC,OAAO8P,EAAOC,EAAO,EAAI,EAC3B,KAAO,QAAI67B,GAAM,KACR,GAEA,CAEX,CAAC,EACD,IAAMC,EAAe,KAAK,IAAI,+BAA+B,GAAK,CAAC,CAACJ,EAAmB,OACnFI,IACFhB,EAAgB,CAAC,GAAG,IAAI,IAExBA,EAAc,IAAIx9B,GAAO,KAAK,yBAAyB,mBAAmBA,EAAI,MAAM,CAAC,GAAKA,CAAG,CAAC,CAAC,GAEjG,IAAMy+B,EAA0B,IAAI,IACpC,OAAAjB,EAAc,QAAQ,CAACx9B,EAAK1B,IAAQmgC,EAAS,IAAIz+B,EAAK1B,CAAG,CAAC,EACtDkgC,GACFJ,EAAmB,QAAQp+B,GAAO,CAChC,IAAM0+B,EAAkB,KAAK,wBAAwB,mBAAmB1+B,EAAI,MAAM,CAAC,EACnFy+B,EAAS,IAAIz+B,EAAKy+B,EAAS,IAAIC,CAAe,CAAC,CACjD,CAAC,EAEID,CACT,CACA,8BAA+B,CAC7B,MAAO,CAAC,GAAG,KAAK,kBAAkB,EAAE,QAAQ,CAAC,EAAE,KAAK,CAAC,CAACE,EAAMC,CAAI,EAAG,CAACC,EAAMC,CAAI,IAAMF,EAAOE,CAAI,EAAE,IAAI,CAAC,CAAC9+B,CAAG,IAAMA,CAAG,CACrH,CAEA,cAAe,CACb,OAAO,KAAK,6BAA6B,EAAE,OAAOnK,GAAUA,EAAO,QAAQ,CAAC,EAAE,IAAIA,IAAW,CAC3F,KAAMA,EAAO,QAAQ,EACrB,MAAOA,EAAO,MAAM,CACtB,EAAE,CACJ,CACA,gBAAiB,CACf,OAAO,KAAK,6BAA6B,EAAE,OAAOA,GAAUA,EAAO,QAAQ,CAAC,EAAE,IAAIA,IAAW,CAC3F,KAAMA,EAAO,QAAQ,EACrB,OAAAA,CACF,EAAE,CACJ,CACA,0BAA0BA,EAAQ,CAChC,IAAMkpC,EAA6B,KAAK,IAAI,+BAA+B,EACrEC,EAAuB,CAAC,CAACnpC,EAAO,UAAU,EAAE,aAClD,OAAOkpC,GAA8BC,CACvC,CACA,wBAAwBnpC,EAAQ,CAC9B,IAAMopC,EAAgB,KAAK,gBAAgB,+BAA+BppC,CAAM,EAChF,GAAI,CAAC,KAAK,0BAA0BA,CAAM,GAAK,CAACopC,GAAe,OAC7D,OAAOppC,EAAO,QAAQ,EAGxB,IAAMqpC,EADsBrpC,EAAO,UAAU,EAAE,OAAS,MAAQ,CAAC,CAACA,EAAO,UAAU,EAAE,YACvC,CAACA,EAAQ,GAAGopC,CAAa,EAAIA,EACrEE,EAAYD,EAAgB,CAAC,EAAE,QAAQ,EAE7C,OADiBA,EAAgB,MAAMl/B,GAAOA,EAAI,QAAQ,GAAKm/B,CAAS,EAIjEA,EAFE,OAGX,CACA,6BAA6BtpC,EAAQ,CACnC,OAAO,KAAK,kBAAkB,EAAE,IAAIA,CAAM,CAC5C,CACF,EAGIupC,GAAc,cAAcruC,CAAS,CACvC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,cAChB,KAAK,kBAAoB,EAC3B,CACA,UAAUe,EAAO,CACf,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,SAAWA,EAAM,QACxB,CACA,eAAgB,CACd,KAAK,2BAA2B,aAAcsH,GAAS,KAAK,cAAcA,CAAK,CAAC,CAClF,CACA,OAAQ,CACN,KAAK,aAAa,UAAU,IAAM,CAChC,IAAMimC,EAAa,KAAK,IAAI,IAAI,YAAY,EACxCA,EACF,KAAK,kBAAkBA,CAAU,EAEjC,KAAK,kBAAoB,GAE3B,KAAK,UAAU,CACjB,CAAC,CACH,CACA,kBAAkBA,EAAY,CAC5B,KAAK,YAAY,cAAcA,GAAc,CAAC,EAAG,kBAAkB,EACnE,KAAK,SAAS,MAAM,CACtB,CACA,WAAY,CACV,KAAK,uBAAuB,EAC5B,IAAMC,EAAe/mB,EAAe,eAAe,2BAAuD,KAAK,MAAM,EACjH,KAAK,IAAI,IAAI,OAAO,GACtB9I,GAAK,0CAA0C6vB,CAAY,EAAE,CAEjE,CACA,wBAAyB,CACvB,IAAMC,EAAa,CACjB,KAAM,WACR,EACA,KAAK,aAAa,cAAcA,CAAU,CAC5C,CACA,cAAcnmC,EAAO,CACnB,IAAMimC,EAAa,KAAK,IAAI,IAAI,YAAY,EAC5C,GAAKA,EAGL,IAAI,KAAK,kBAAmB,CAC1B,KAAK,kBAAoB,GACzB,KAAK,kBAAkBA,CAAU,EACjC,MACF,CACA,KAAK,YAAY,cAAcA,EAAYlqB,GAAkB/b,EAAM,MAAM,CAAC,EAC5E,CACF,EAGIomC,GAAe,QACfC,GAAyB,cAAc1uC,CAAS,CAClD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,wBAClB,CACA,UAAUe,EAAO,CACf,KAAK,SAAWA,EAAM,SACtB,KAAK,YAAcA,EAAM,WAC3B,CACA,eAAgB,CACV,KAAK,SAAS,QAAQ,IAAM,eAC9B,KAAK,mBAAqB,KAAK,UAEjC,KAAK,yBAAyB,CAC5B,iBAAkB,KAAK,mBAAmB,KAAK,IAAI,CACrD,CAAC,CACH,CACA,mBAAmBsH,EAAO,CACpBA,EAAM,SAAWomC,IAGrB,KAAK,kBAAkBpmC,EAAM,KAAMA,EAAM,MAAM,CACjD,CACA,kBAAkBtD,EAASD,EAAQ,CACjC,GAAI,KAAK,IAAI,IAAI,yBAAyB,EACxC,OAEF,IAAM6pC,EAAiB,CAAC5pC,CAAO,EAC/B,GAAI,KAAK,oBAAsB,CAACA,EAAQ,YAAY,EAAG,CACrD,IAAM6pC,EAAqB,KAAK,IAAI,IAAI,6BAA6B,EAC/DnF,EAAc,IAAI7B,GAAYgH,EAAoB,KAAK,mBAAmB,YAAY,CAAC,EAC7FnF,EAAY,cAAc1kC,EAAQ,OAAQ,CAACD,CAAM,CAAC,EAClD,KAAK,mBAAmB,YAAY2kC,CAAW,EAC/CA,EAAY,6BAA6BoF,GAAY,CACnDF,EAAe,KAAKE,CAAQ,CAC9B,CAAC,CACH,CACA,KAAK,YAAY,aAAa,CAC5B,SAAUF,CACZ,CAAC,CACH,CACF,EAGIG,GAAoB,cAAc9uC,CAAS,CAC7C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,oBAChB,KAAK,0BAA4B,CAAC,CACpC,CACA,SAAS+uC,EAAY9uC,EAAQ,CAC3B,GAAI,OAAO8uC,GAAe,SACxB,OAAO,KAAK,mBAAmBA,EAAY9uC,CAAM,EAEjDqf,EAAW,gDAAiDyvB,CAAU,CAE1E,CACA,mBAAmBA,EAAY9uC,EAAQ,CACrC,GAAI,CAGF,OAF2B,KAAK,yBAAyB8uC,CAAU,EACjC9uC,EAAO,MAAOA,EAAO,QAASA,EAAO,SAAUA,EAAO,SAAUA,EAAO,MAAOA,EAAO,KAAMA,EAAO,KAAMA,EAAO,OAAQA,EAAO,SAAUA,EAAO,IAAKA,EAAO,SAAUA,EAAO,OAAQA,EAAO,WAAW,CAE1O,OAAS4W,EAAG,CACV,OAAA6H,GAAK,qCAAqC,EAC1CA,GAAK,gBAAiBqwB,CAAU,EAChCrwB,GAAK,YAAaze,CAAM,EACxBye,GAAK,eAAgB7H,CAAC,EACf,IACT,CACF,CACA,yBAAyBk4B,EAAY,CACnC,GAAI,KAAK,0BAA0BA,CAAU,EAC3C,OAAO,KAAK,0BAA0BA,CAAU,EAElD,IAAMC,EAAe,KAAK,mBAAmBD,CAAU,EACjDE,EAAc,IAAI,SAAS,sGAAuGD,CAAY,EACpJ,YAAK,0BAA0BD,CAAU,EAAIE,EACtCA,CACT,CACA,mBAAmBF,EAAY,CAC7B,OAAIA,EAAW,QAAQ,QAAQ,GAAK,EAC3BA,EAEA,UAAYA,EAAa,GAEpC,CACF,EAGIG,GAAa,cAAclvC,CAAS,CACtC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,aAChB,KAAK,aAAe,CACtB,CACA,eAAgB,CACd,KAAK,OAAS,KAAK,IAAI,IAAI,YAAY,EACvC,KAAK,aAAe,KAAK,IAAI,IAAI,wBAAwB,CAC3D,CACA,eAAgB,CACV,KAAK,cAGT,KAAK,OAAO,CACd,CACA,QAAS,CACP,KAAK,cACP,CACA,SAAS+E,EAASygB,EAAOnH,EAAO,CAC1B,KAAK,SACHtZ,EAAQ,iBAAmB,KAAK,eAClCA,EAAQ,eAAiB,KAAK,aAC9BA,EAAQ,YAAc,CAAC,GAEzBA,EAAQ,YAAYygB,CAAK,EAAInH,EAEjC,CACA,SAAStZ,EAASygB,EAAO,CACvB,GAAI,GAAC,KAAK,QAAUzgB,EAAQ,iBAAmB,KAAK,cAGpD,OAAOA,EAAQ,YAAYygB,CAAK,CAClC,CACF,EAGI2pB,GAAe,cAAcnvC,CAAS,CACxC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,eAChB,KAAK,YAAc,GACnB,KAAK,OAAS,EAChB,CACA,UAAUe,EAAO,CACf,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,YAAcA,EAAM,YACzB,KAAK,WAAaA,EAAM,WACxB,KAAK,gBAAkBA,EAAM,eAC/B,CACA,eAAgB,CACT,KAAK,aACR,KAAK,KAAK,CAEd,CACA,MAAO,CACL,KAAK,OAAS,KAAK,IAAI,eAAe,YAAY,EAClD,KAAK,gBAAkB,KAAK,IAAI,IAAI,uBAAuB,EAC3D,KAAK,WAAa,KAAK,IAAI,IAAI,UAAU,EACzC,KAAK,YAAc,GACnB,IAAM0K,EAAWpD,GAAS,KAAK,kCAAkCA,CAAK,EAChE0Q,EAAQ,KAAK,IAAI,eAAe,EACtC,KAAK,aAAa,iBAAiB,mBAAoBtN,EAAUsN,CAAK,EACtE,KAAK,eAAe,IAAM,KAAK,aAAa,oBAAoB,mBAAoBtN,EAAUsN,CAAK,CAAC,EACpG,KAAK,2BAA2B,WAAYwtB,GAAc,KAAK,WAAaA,EAAW,YAAY,CACrG,CACA,SAASzhC,EAAQC,EAASqqC,EAAY,GAAOC,EAAgB,GAAO,CAIlE,GAHK,KAAK,aACR,KAAK,KAAK,EAER,CAACtqC,EACH,OAEF,IAAMmK,EAASpK,EAAO,UAAU,EAC1B2gB,EAAQvW,EAAO,MACfsW,EAAQ1gB,EAAO,SAAS,EACxBwqC,EAAOvqC,EAAQ,KACjBkG,EACEskC,EAAkBxqC,EAAQ,WAAaA,EAAQ,UAAUygB,CAAK,IAAM,OACpEgqB,EAAgB,CAACH,GAAiBtqC,EAAQ,SAAWA,EAAQ,QAAQygB,CAAK,IAAM,OAChFiqB,EAAoB,KAAK,QAAUJ,GAAiB,CAAC,CAACvqC,EAAO,UAAU,EAAE,QACzE4qC,EAAqB,KAAK,QAAU3qC,EAAQ,QAAUA,EAAQ,QAAUD,EAAO,UAAU,EAAE,eAAiB,IAAQA,EAAO,UAAU,EAAE,eAAiBC,EAAQ,OAoBtK,GAnBIqqC,GAAalgC,EAAO,kBACtBjE,EAAS,KAAK,yBAAyBiE,EAAO,kBAAmBogC,EAAMxqC,EAAQC,CAAO,EAC7E,KAAK,YAAcyqC,EAC5BvkC,EAASlG,EAAQ,QAAQygB,CAAK,EACrB,KAAK,YAActW,EAAO,YACnCjE,EAAS,KAAK,mBAAmBiE,EAAO,YAAaogC,EAAMxqC,EAAQC,CAAO,EACjE,KAAK,YAAc0gB,GAAS6pB,EACrCrkC,EAASob,GAAoBipB,EAAM7pB,EAAO3gB,EAAO,oBAAoB,CAAC,EAC7DyqC,EACTtkC,EAASlG,EAAQ,UAAUygB,CAAK,EACvBgqB,EACTvkC,EAASlG,EAAQ,QAAQygB,CAAK,EACrBtW,EAAO,YAChBjE,EAAS,KAAK,mBAAmBiE,EAAO,YAAaogC,EAAMxqC,EAAQC,CAAO,EACjE2qC,EACTzkC,EAASob,GAAoBipB,EAAMvqC,EAAQ,MAAOD,EAAO,oBAAoB,CAAC,EACrE2gB,GAAS6pB,GAAQ,CAACG,IAC3BxkC,EAASob,GAAoBipB,EAAM7pB,EAAO3gB,EAAO,oBAAoB,CAAC,GAEpE,KAAK,iBAAmB,OAAOmG,GAAW,UAAYA,EAAO,QAAQ,GAAG,IAAM,EAAG,CACnF,IAAM0kC,EAAkB1kC,EAAO,UAAU,CAAC,EAC1CA,EAAS,KAAK,mBAAmB0kC,EAAiBL,EAAMxqC,EAAQC,CAAO,CACzE,CACA,GAAIkG,GAAU,KAAM,CAClB,IAAM2kC,EAAc,KAAK,eAAe7qC,EAASD,CAAM,EACvD,GAAI8qC,GAAe,KACjB,OAAOA,CAEX,CACA,OAAO3kC,CACT,CACA,WAAWnG,EAAQC,EAAS0N,EAAUo9B,EAAU,CAC9C,IAAM3gC,EAASpK,EAAO,UAAU,EAC1B7E,EAAS,KAAK,IAAI,oBAAoB,CAC1C,KAAM8E,EACN,KAAMA,GAAS,KACf,SAAA8qC,EACA,SAAAp9B,EACA,OAAAvD,EACA,OAAApK,CACF,CAAC,EACKgrC,EAAc5gC,EAAO,YAC3B,OAAIvH,EAAQmoC,CAAW,EACjB,OAAOA,GAAgB,WAClBA,EAAY7vC,CAAM,EAEpB,KAAK,kBAAkB,SAAS6vC,EAAa7vC,CAAM,EAErDwS,CACT,CACA,YAAY3N,EAAQkN,EAAMqM,EAAO0xB,EAAmBC,EAAyB,GAAM,CACjF,IAAI/kC,EAAS,KACTglC,EACE/gC,EAASpK,EAAO,UAAU,EAMhC,GALIirC,EACFE,EAAYF,EACHC,IACTC,EAAY/gC,EAAO,gBAEjB+gC,EAAW,CACb,IAAMhwC,EAAS,KAAK,IAAI,oBAAoB,CAC1C,MAAAoe,EACA,KAAArM,EACA,KAAMA,EAAOA,EAAK,KAAO,KACzB,OAAA9C,EACA,OAAApK,CACF,CAAC,EACG,OAAOmrC,GAAc,WACvBhlC,EAASglC,EAAUhwC,CAAM,EAEzBgL,EAAS,KAAK,kBAAkB,SAASglC,EAAWhwC,CAAM,CAE9D,SAAWiP,EAAO,QAChB,OAAOA,EAAO,QAAQmP,CAAK,GAAK,GAElC,OAAIpT,GAAU,MAAQ,MAAM,QAAQoT,CAAK,IACvCpT,EAASoT,EAAM,KAAK,IAAI,GAEnBpT,CACT,CACA,eAAelG,EAASD,EAAQ,CAK9B,GAJI,CAAC,KAAK,IAAI,IAAI,iBAAiB,GAI/B,CADWA,EAAO,UAAU,EACpB,aACV,OAEF,IAAMorC,EAAeprC,EAAO,UAAU,EAAE,aACpC2H,EAAU1H,EAAQ,OACtB,KAAO0H,GAAW,MAAM,CACtB,GAAIA,EAAQ,iBAAmByjC,IAAiB,IAAQA,IAAiBzjC,EAAQ,eAAe,SAAS,GACvG,OAAOA,EAAQ,IAEjBA,EAAUA,EAAQ,MACpB,CAEF,CASA,SAAS1H,EAAS+lB,EAAQrY,EAAU7O,EAAa,CAC/C,IAAMkB,EAAS,KAAK,YAAY,aAAagmB,CAAM,EACnD,GAAI,CAAC/lB,GAAW,CAACD,EACf,MAAO,GAELiJ,EAAShJ,EAAQ,IAAI,IACvBA,EAAQ,KAAO,CAAC,GAElB,GAAM,CACJ,MAAA0gB,EACA,YAAA0qB,CACF,EAAIrrC,EAAO,UAAU,EACrB,GAAIiJ,EAAS0X,CAAK,GAAK1X,EAASoiC,CAAW,EACzC,OAAA/oC,EAAU,wEAAwE,EAC3E,GAET,GAAI,KAAK,iBAAmB,CAAC,KAAK,gBAAgB,UAAUtC,EAAQ2N,CAAQ,EAC1E,OAAArL,EAAU,4EAA4E,EAC/E,GAET,IAAMnH,EAAS,KAAK,IAAI,oBAAoB,CAC1C,KAAM8E,EACN,KAAMA,EAAQ,KACd,SAAU,KAAK,SAASD,EAAQC,CAAO,EACvC,SAAA0N,EACA,OAAQ3N,EAAO,UAAU,EACzB,OAAAA,CACF,CAAC,EACD7E,EAAO,SAAWwS,EAClB,IAAI29B,EAaJ,GAZIzoC,EAAQwoC,CAAW,EACjB,OAAOA,GAAgB,WACzBC,EAAoBD,EAAYlwC,CAAM,EAEtCmwC,EAAoB,KAAK,kBAAkB,SAASD,EAAalwC,CAAM,EAGzEmwC,EAAoB,KAAK,mBAAmBrrC,EAAQ,KAAM0gB,EAAOhT,EAAU3N,EAAO,oBAAoB,CAAC,EAErGsrC,IAAsB,SACxBA,EAAoB,IAElB,CAACA,EACH,MAAO,GAETrrC,EAAQ,8BAA8B,EACtC,KAAK,WAAW,cAAc,EAC9B9E,EAAO,SAAW,KAAK,SAAS6E,EAAQC,CAAO,EAC/C,IAAMsD,EAAQ,CACZ,KAAM,mBACN,MAAO,KACP,SAAUtD,EAAQ,SAClB,UAAWA,EAAQ,UACnB,OAAQ9E,EAAO,OACf,IAAKA,EAAO,IACZ,OAAQA,EAAO,OACf,QAASA,EAAO,QAChB,KAAM8E,EAAQ,KACd,KAAMA,EACN,SAAU9E,EAAO,SACjB,SAAUA,EAAO,SACjB,MAAOA,EAAO,SACd,OAAQ2D,CACV,EACA,YAAK,aAAa,cAAcyE,CAAK,EAC9B,EACT,CACA,kCAAkCA,EAAO,CACvC,IAAMgoC,EAAqBhoC,EAAM,OAAO,mBACpC,OAAOgoC,GAAuB,YAChC,KAAK,sBAAsB,EAAE,aAAa,IAAM,CAC9CA,EAAmB,CACjB,KAAMhoC,EAAM,KACZ,KAAMA,EAAM,KACZ,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,OAAQA,EAAM,OACd,OAAQA,EAAM,OACd,IAAKA,EAAM,IACX,QAASA,EAAM,OACjB,CAAC,CACH,CAAC,CAEL,CACA,mBAAmBinC,EAAM7pB,EAAOhT,EAAU69B,EAAqB,CAC7D,GAAI,CAAC7qB,EACH,MAAO,GAET,IAAI8qB,EAAgB,GACpB,GAAI,CAACD,EACHC,EAAgBjB,EAAK7pB,CAAK,IAAMhT,EAC3B89B,IACHjB,EAAK7pB,CAAK,EAAIhT,OAEX,CACL,IAAM+9B,EAAc/qB,EAAM,MAAM,GAAG,EAC/BgrB,EAAgBnB,EACpB,KAAOkB,EAAY,OAAS,GAAKC,GAAe,CAC9C,IAAMC,EAAaF,EAAY,MAAM,EACjCA,EAAY,SAAW,GACzBD,EAAgBE,EAAcC,CAAU,IAAMj+B,EACzC89B,IACHE,EAAcC,CAAU,EAAIj+B,IAG9Bg+B,EAAgBA,EAAcC,CAAU,CAE5C,CACF,CACA,MAAO,CAACH,CACV,CACA,yBAAyB//B,EAAa8+B,EAAMxqC,EAAQC,EAAS,CAC3D,IAAM9E,EAAS,KAAK,IAAI,oBAAoB,CAC1C,KAAAqvC,EACA,KAAMvqC,EACN,OAAAD,EACA,OAAQA,EAAO,UAAU,EACzB,SAAU,KAAK,iBAAiB,KAAK,KAAMC,CAAO,CACpD,CAAC,EACD,OAAI,OAAOyL,GAAgB,WAClBA,EAAYvQ,CAAM,EAEpB,KAAK,kBAAkB,SAASuQ,EAAavQ,CAAM,CAC5D,CACA,mBAAmBuQ,EAAa8+B,EAAMxqC,EAAQC,EAAS,CACrD,IAAMygB,EAAQ1gB,EAAO,SAAS,EACxB6rC,EAAiB,KAAK,WAAW,SAAS5rC,EAASygB,CAAK,EAC9D,GAAImrB,IAAmB,OACrB,OAAOA,EAET,IAAM1wC,EAAS,KAAK,IAAI,oBAAoB,CAC1C,KAAAqvC,EACA,KAAMvqC,EACN,OAAAD,EACA,OAAQA,EAAO,UAAU,EACzB,SAAU,KAAK,iBAAiB,KAAK,KAAMC,CAAO,CACpD,CAAC,EACGkG,EACJ,OAAI,OAAOuF,GAAgB,WACzBvF,EAASuF,EAAYvQ,CAAM,EAE3BgL,EAAS,KAAK,kBAAkB,SAASuF,EAAavQ,CAAM,EAE9D,KAAK,WAAW,SAAS8E,EAASygB,EAAOva,CAAM,EACxCA,CACT,CACA,iBAAiB+G,EAAMyT,EAAO,CAC5B,IAAMtF,EAAc,KAAK,YAAY,aAAasF,CAAK,EACvD,OAAItF,EACK,KAAK,SAASA,EAAanO,CAAI,EAEjC,IACT,CAEA,cAAc/C,EAAKlK,EAAS,CAC1B,IAAMsZ,EAAQ,KAAK,SAASpP,EAAKlK,CAAO,EAClC6rC,EAAa3hC,EAAI,UAAU,EAAE,WAC/BhE,EAASoT,EACb,GAAIuyB,EAAY,CACd,IAAMC,EAAY,KAAK,IAAI,oBAAoB,CAC7C,MAAAxyB,EACA,OAAQpP,EAAI,UAAU,EACtB,OAAQA,EACR,KAAMlK,EACN,KAAMA,EAAQ,IAChB,CAAC,EACDkG,EAAS2lC,EAAWC,CAAS,CAC/B,CACA,OAAI,OAAO5lC,GAAW,UAAYA,GAAU,OAG5CA,EAAS,OAAOA,CAAM,EAClBA,IAAW,mBACb7D,EAAU,oNAAoN,GAEzN6D,CACT,CACF,EAGI6lC,IAAkC,IAAM,CAC1C,IAAIA,EAAoB,KAAM,CAAC,EAC/B,OAAAA,EAAkB,YAAc,OACzBA,CACT,GAAG,EAIH,SAASC,GAAWC,EAAUC,EAAaC,EAAQ,CACjD,GAAI,CAACD,EACH,OAAAE,EAAW,uCAAuC,EAC3C,CAAC,EAEV,IAAMC,EAAM,IAAIC,GAAgB,EAAE,OAAOL,EAAUC,EAAaK,GAAW,CACzE,IAAMC,EAAW,IAAIC,GAASR,CAAQ,EACtCM,EAAQ,WAAWC,CAAQ,CAC7B,EAAG,OAAQL,CAAM,EACjB,GAAI,CAAC,OAAO,SAASD,CAAW,GAAK,CAACC,GAAQ,mBAAoB,CAChE,IAAMO,EAAS,oEACf,OAAO,eAAeR,EAAa,MAAO,CACxC,IAAK,IAAM,CACTE,EAAW,+CAA+CM,CAAM,GAAG,CAErE,EACA,aAAc,EAChB,CAAC,CACH,CACA,OAAOL,CACT,CA0BA,IAAIM,GAAa,EACbC,GAAkB,KAAM,CAC1B,OAAOC,EAAUC,EAAiBC,EAAUC,EAAeC,EAAQ,CACjE,IAAIC,EAAgB,CAAC,EACjBC,GAAkB,aACpBC,GAAWF,EAAeC,GAAkB,YAAa,GAAM,EAAI,EACnED,EAAgBG,IAAA,GACXH,GACAJ,IAGLI,EAAgBJ,EAElB,IAAMQ,EAAcC,GAAsBL,CAAa,EACjDM,EAASF,EAAY,QAAU,OAAOX,IAAY,EAClDc,EAAoB,KAAK,qBAAqBR,EAAQO,CAAM,EAC5DE,EAAc,KAAK,gBAAgBJ,EAAY,aAAcG,EAAmBD,CAAM,EACtFG,EAAwB,KAAK,oBAAoBd,EAAUS,EAAaL,CAAM,EACpF,GAAI,CAACS,EAAa,CAChBE,EAAW,wBAAwB,EACnC,MACF,CACA,IAAMC,EAAgB,CACpB,sBAAAF,EACA,YAAAD,EACA,OAAAF,EACA,mBAAoBM,GACpB,sBAAuBC,GACvB,aAAc,CAACC,EAAc,CAC/B,EACMC,EAAU,IAAIC,GAAQL,CAAa,EACzC,YAAK,6BAA6BI,EAASR,CAAiB,EAC5D,KAAK,oBAAoBQ,EAASR,CAAiB,EACnD,KAAK,2BAA2BQ,EAASR,CAAiB,EAC1DV,EAASkB,CAAO,EAChBA,EAAQ,QAAQ,aAAa,EAAE,MAAM,EACjCjB,GACFA,EAAciB,CAAO,EAEhBA,EAAQ,QAAQ,SAAS,CAClC,CACA,oBAAoBA,EAASR,EAAmB,CAC9C,IAAMU,EAAUF,EAAQ,QAAQ,cAAc,EAC9CR,EAAkB,QAAQW,GAAU,CAC9BA,EAAO,aACTA,EAAO,YAAY,QAAQC,GAAQF,EAAQ,SAASE,CAAI,CAAC,CAE7D,CAAC,CACH,CACA,qBAAqBpB,EAAQO,EAAQ,CACnC,IAAMc,EAAuBrB,EAASA,EAAO,QAAU,KACjDsB,EAAaC,EAAe,uBAAuBhB,CAAM,EACzDiB,EAAa,CAAC,EACdC,EAAW,CAAC,EACZC,EAAY,CAACC,EAAaC,EAAKC,IAAY,EACnBC,GAAiB,CACtCL,EAASK,EAAc,UAAU,IACpCL,EAASK,EAAc,UAAU,EAAI,GACrCN,EAAW,KAAKM,CAAa,EAC7BP,EAAe,WAAWO,EAAeH,EAAaE,CAAO,EAEjE,GACoBD,CAAG,EACnBA,EAAI,kBACNA,EAAI,iBAAiB,QAAQG,GAAKL,EAAUC,EAAaI,EAAGF,CAAO,CAAC,CAExE,EACA,OAAAH,EAAU,CAAC,CAACL,GAAsB,QAAU,CAACE,EAAe,iBAAiB,EAAGS,GAAyB,MAAM,EAC3GX,GACFA,EAAqB,QAAQU,GAAKL,EAAU,GAAMK,EAAGxB,CAAM,CAAC,EAE1De,GACFA,EAAW,QAAQS,GAAKL,EAAU,CAACH,EAAe,iBAAiB,EAAGQ,EAAG,MAAM,CAAC,EAE3EP,CACT,CACA,6BAA6BR,EAASR,EAAmB,CACvD,IAAMyB,EAAkB,KAAK,oBAAoBzB,EAAmBW,GAAUA,EAAO,eAAiBA,EAAO,eAAiB,CAAC,CAAC,EAC1He,EAAWlB,EAAQ,QAAQ,uBAAuB,EACxDiB,EAAgB,QAAQE,GAAY,CAClCD,EAAS,yBAAyBC,EAAS,KAAMA,EAAS,QAAQ,CACpE,CAAC,CACH,CACA,2BAA2BnB,EAASR,EAAmB,CACrD,IAAM4B,EAAqBpB,EAAQ,QAAQ,oBAAoB,EAC/DR,EAAkB,QAAQW,GAAU,CAClC,IAAMkB,EAAelB,EAAO,cAAgB,CAAC,EAC/B,OAAO,KAAKkB,CAAY,EAChC,QAAQC,GAAQ,CACpBF,GAAoB,YAAYE,EAAMD,EAAaC,CAAI,CAAC,CAC1D,CAAC,CACH,CAAC,CACH,CACA,oBAAoB1C,EAAUS,EAAaL,EAAQ,CACjD,IAAIuC,EAAqBvC,EAASA,EAAO,mBAAqB,KAC1DwC,EAASD,CAAkB,IAC7BA,EAAqB,IAAIE,IAE3B,IAAMC,EAAO,CACX,YAAArC,EACA,SAAAT,EACA,oBAAqBI,EAASA,EAAO,oBAAsB,KAC3D,wBAAyBA,EAASA,EAAO,wBAA0B,KACnE,mBAAAuC,CACF,EACA,OAAIvC,GAAUA,EAAO,uBACnB,OAAO,OAAO0C,EAAM1C,EAAO,qBAAqB,EAE3C0C,CACT,CACA,gBAAgBC,EAAe,aAAcnC,EAAmBD,EAAQ,CACtE,IAAMqC,EAAkBpC,EAAkB,OAAOW,GAAU,CAACA,EAAO,UAAYA,EAAO,WAAawB,CAAY,EACzGE,EAAsB,CAC1B,WAAY,2CACZ,SAAU,wCACV,WAAY,4CACZ,SAAU,wCACZ,EACA,GAAI,CAACA,EAAoBF,CAAY,EAAG,CACtChC,EAAW,+CAAgDgC,CAAY,EACvE,MACF,CACA,GAAI,CAACpB,EAAe,mBAAmBsB,EAAoBF,CAAY,EAAG,mBAAmBA,CAAY,IAAKpC,CAAM,EAClH,OAEF,IAAMuC,EAAQ,CAACC,GAAkBC,GAAmBC,GAAqBC,GAAoBC,GAAoBC,GAAuBC,GAAkBC,GAA2BC,GAAuBC,GAAsBC,GAA2BC,GAAyBC,GAAeC,GAAgBC,GAAaC,GAAoBC,GAAcC,GAAoBC,GAAcC,GAAkBC,GAAaC,GAAyBC,GAAmBC,GAAoBC,GAAaC,GAAmBC,GAAeC,GAAmBC,GAAYC,GAAcC,GAAqBC,GAAqBC,GAAoBC,GAAcC,GAAmBC,GAAaC,GAAuBC,GAAgBC,GAAsBC,GAAgBC,GAAoBC,GAAwBC,GAAmBC,GAAwBC,GAAuBC,GAAkBC,GAAuBC,GAAeC,GAAcC,GAAoBC,GAAsBC,GAAcC,GAAaC,GAAgBC,GAAkBC,GAAiBC,GAAyBC,GAAaC,GAAyBC,GAAuBC,GAAmBC,GAAuBC,GAAuBC,GAAyBC,GAAmBC,GAAiBC,GAAmBC,GAAuBC,EAAsB,EACpzCC,EAAc,KAAK,oBAAoBxE,EAAiBzB,GAAUA,EAAO,MAAQA,EAAO,MAAQ,CAAC,CAAC,EACxG2B,EAAM,KAAK,GAAGsE,CAAW,EACzB,IAAMC,EAAoB,CAAC,EAC3B,OAAAvE,EAAM,QAAQwE,GAAQ,CAChBD,EAAkB,QAAQC,CAAI,EAAI,GACpCD,EAAkB,KAAKC,CAAI,CAE/B,CAAC,EACMD,CACT,CACA,oBAAoBE,EAAgBC,EAAW,CAC7C,MAAO,CAAC,EAAE,OAAO,GAAGD,EAAe,IAAIC,CAAS,CAAC,CACnD,CACF,EAGIC,GAAwB,cAAcC,CAAS,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,uBAClB,CACA,UAAU5E,EAAO,CACf,KAAK,SAAWA,EAAM,QACxB,CACA,eAAgB,CACd,IAAM6E,EAAW,KAAK,SACtB,OAAQA,EAAS,QAAQ,EAAG,CAC1B,IAAK,aACH,KAAK,mBAAqBA,EAC1B,MACF,IAAK,WACH,KAAK,iBAAmBA,EACxB,MACF,IAAK,aACH,KAAK,mBAAqBA,EAC1B,KACJ,CACF,CACA,uBAAwB,CACtB,OAAO,KAAK,kBACd,CACA,qBAAsB,CACpB,OAAO,KAAK,gBACd,CACA,uBAAwB,CACtB,OAAO,KAAK,kBACd,CACF,EAGA,SAASC,GAAU9E,EAAO,CACxBA,EAAM,iBAAiB,UAAU,EAAI,CACvC,CACA,SAAS+E,GAAY/E,EAAO,CAC1BA,EAAM,iBAAiB,UAAU,EAAK,CACxC,CACA,SAASgF,GAAmBhF,EAAO,CACjC,IAAMiF,EAAqBjF,EAAM,uBAAuB,sBAAsB,EACxEkF,EAAqBlF,EAAM,uBAAuB,sBAAsB,EAC1EiF,EACFA,EAAmB,mBAAmB,EAC7BC,GACTA,EAAmB,mBAAmB,CAE1C,CAGA,SAASC,GAAYnF,EAAOoF,EAAUC,EAAa,CACjD,IAAMH,EAAqBlF,EAAM,uBAAuB,sBAAsB,EAC9E,GAAIkF,EAAoB,CACtB,GAAIlF,EAAM,gBAAgB,gBAAgB,EAAG,CAC3CkF,EAAmB,YAAYE,EAAUC,CAAW,EACpD,MACF,CACAxH,EAAW,sDAAsD,EACjE,MACF,CACA,IAAMyH,EAAmBtF,EAAM,uBAAuB,oBAAoB,EAC1E,GAAIsF,EAAkB,CACpBA,EAAiB,YAAYF,EAAUC,CAAW,EAClD,MACF,CACF,CACA,SAASE,GAAmBvF,EAAO,CACjC,OAAOA,EAAM,oBAAoB,cAAc,GAAK,CAAC,CACvD,CAGA,IAAIwF,GAA0B,CAC5B,QAASC,EACT,WAAY,0CACZ,aAAc,CACZ,UAAAX,GACA,YAAAC,GACA,mBAAAC,EACF,CACF,EACIU,GAA8B,CAChC,QAASD,EACT,WAAY,8CACZ,aAAc,CACZ,YAAAN,GACA,mBAAAI,EACF,CACF,EAGII,GAAuB,KAAM,CAC/B,KAAKC,EAAqBC,EAAqBC,EAAqB,CAAC,EAAGC,EAAe,CACrF,IAAMC,EAAU,KAAK,cAAcJ,EAAqBG,CAAa,EACrE,OAAAF,EAAoB,QAAQI,GAAc,CACxC,KAAK,aAAaD,EAASC,EAAY,EAAI,CAC7C,CAAC,EACDH,EAAmB,QAAQG,GAAc,CACvC,KAAK,aAAaD,EAASC,EAAY,EAAK,CAC9C,CAAC,EACMD,CACT,CACA,OAAOE,EAAM,CACX,OAAOA,CACT,CACA,aAAaF,EAASC,EAAYE,EAAW,CAC3CH,EAAQ,UAAUC,EAAY,KAAK,kBAAkBD,EAASC,EAAYE,CAAS,CAAC,CACtF,CACA,kBAAkBH,EAASC,EAAYE,EAAW,CAChD,OAAO,UAAY,CACjB,OAAIH,EAAQ,UAAUC,CAAU,EACvBD,EAAQ,WAAWC,EAAY,SAAS,GAE7CE,GACFC,EAAU,6CAA+CH,EAAa,IAAI,EAErE,KACT,CACF,CACF,EAGA,SAASI,GAAqBC,EAAUC,EAAc,CACpD,GAAI,CAACD,EACH,MAAO,GAET,IAAME,EAAa,CAACC,EAAOC,IAAU,CACnC,IAAMC,EAAYJ,EAAaE,EAAM,EAAE,EACjCG,EAAYL,EAAaG,EAAM,EAAE,EACjCG,EAAYF,IAAc,OAC1BG,EAAYF,IAAc,OAC1BG,EAAwBF,GAAaC,EACrCE,EAA0B,CAACH,GAAa,CAACC,EAC/C,OAAIC,EACKJ,EAAYC,EAEjBI,EACKP,EAAM,WAAaC,EAAM,WAE9BG,EACK,EAEF,EACT,EACII,EACAC,EACAC,EAAuB,GAC3B,QAASC,EAAI,EAAGA,EAAId,EAAS,OAAS,EAAGc,IAGvC,GAFAH,EAAWX,EAASc,CAAC,EACrBF,EAAWZ,EAASc,EAAI,CAAC,EACrBZ,EAAWS,EAAUC,CAAQ,EAAI,EAAG,CACtCC,EAAuB,GACvB,KACF,CAEF,OAAIA,GACFb,EAAS,KAAKE,CAAU,EACjB,IAEF,EACT,CAoDA,IAAIa,GAAY,OAAO,OAAW,IAAc,CAAC,EAAI,OACrDA,GAAU,YAAc,OAAO,YAAgB,IAAc,CAAC,EAAI,YAClEA,GAAU,kBAAoB,OAAO,kBAAsB,IAAc,CAAC,EAAI,kBAC9EA,GAAU,kBAAoB,OAAO,kBAAsB,IAAc,CAAC,EAAI,kBAC9EA,GAAU,iBAAmB,OAAO,iBAAqB,IAAc,CAAC,EAAI,iBAC5EA,GAAU,KAAO,OAAO,KAAS,IAAc,CAAC,EAAI,KACpDA,GAAU,WAAa,OAAO,WAAe,IAAc,CAAC,EAAI,WAGhE,IAAIC,GAAe,eACfC,GAAY,EACZC,GAAwB,KAAM,CAChC,YAAYC,EAAUC,EAAKC,EAAcC,EAAiBC,EAAkBC,EAAO,CACjF,KAAK,OAAS,EAEd,KAAK,cAAgB,GAErB,KAAK,YAAc,CAAC,EACpB,KAAK,SAAWL,EAChB,KAAK,IAAMC,EACX,KAAK,aAAeC,EACpB,KAAK,gBAAkBC,EACvB,KAAK,MAAQE,EACb,KAAK,iBAAmBD,EACxB,KAAK,SAAS,MAAQ,GACtB,KAAK,SAAS,MAAQ,GACtB,KAAK,SAAS,GAAKP,GACnB,KAAK,SAAS,gBAAkB,CAAC,EACjC,KAAK,SAAS,mBAAqB,CAAC,EACpC,KAAK,SAAS,kBAAoB,CAAC,EACnC,KAAK,SAAS,uBAAyB,CAAC,EACxC,KAAK,SAAS,oBAAsB,CAAC,CACvC,CACA,mBAAoB,CAClB,OAAOS,GAAa,KAAK,WAAW,CACtC,CACA,WAAWC,EAAI,CACb,OAAO,KAAK,YAAYA,CAAE,CAC5B,CACA,WAAWC,EAAS,CAClB,GAAI,OAAOA,GAAY,SAAU,CAC/BC,EAAU,2BAA2B,EACrC,MACF,CACA,KAAK,cAAgB,GACrB,KAAK,kCAAkCD,CAAO,EAC9C,IAAMR,EAAW,KAAK,SAChBU,EAAU,KAAK,SAAS,QAC9BV,EAAS,oBAAsB,KAC/BA,EAAS,mBAAqB,KAC9BA,EAAS,uBAAyB,KAClCA,EAAS,kBAAoB,KAC7BA,EAAS,eAAiB,KAC1BA,EAAS,kBAAkB,EAC3B,KAAK,OAAS,EACd,KAAK,YAAc,CAAC,EAChBQ,EACFR,EAAS,gBAAkBQ,EAAQ,IAAIG,GAAY,KAAK,WAAWA,EAAU,KAAK,SAAUb,EAAS,CAAC,GAEtGE,EAAS,gBAAkB,CAAC,EAC5BA,EAAS,mBAAqB,CAAC,GAE7BU,IACFA,EAAQ,oBAAsBV,EAAS,oBACvCU,EAAQ,mBAAqBV,EAAS,mBACtCU,EAAQ,uBAAyBV,EAAS,uBAC1CU,EAAQ,kBAAoBV,EAAS,kBACrCU,EAAQ,eAAiBV,EAAS,eAClCU,EAAQ,gBAAkBV,EAAS,gBAEvC,CACA,cAAcY,EAAaC,EAAc,CACvC,KAAK,cAAgB,GACrB,KAAK,kCAAkCD,EAAY,GAAG,EACtD,IAAME,EAAqB,CACzB,OAAQ,CAAC,EACT,OAAQ,CAAC,EACT,IAAK,CAAC,CACR,EACMC,EAAkB,CAAC,EACzB,YAAK,cAAcH,EAAaE,EAAoBC,CAAe,EACnE,KAAK,cAAcH,EAAaE,EAAoBC,CAAe,EACnE,KAAK,WAAWH,EAAaE,CAAkB,EAC/C,KAAK,gBAAgBC,EAAiB,gBAAgB,EAClDF,GACFG,GAAqB,KAAK,SAAS,gBAAiBH,CAAY,EAE3DC,CACT,CACA,iBAAkB,CAChB,OAAO,KAAK,aACd,CACA,kCAAkCN,EAAS,CACzC,IAAMS,EAAQ,CACZ,KAAM,uBACN,aAAcT,GAAS,OAASA,EAAQ,CAAC,EAAI,IAC/C,EACA,KAAK,aAAa,cAAcS,CAAK,CACvC,CACA,gBAAgBF,EAAiBG,EAAQ,CACvC,IAAMC,EAAmBJ,EAAgB,OAAS,EAUlD,GATII,GACF,KAAK,iBAAiB,iBAAiB,CACrC,SAAU,GACV,MAAOJ,EACP,sBAAuB,GACvB,OAAAG,CACF,CAAC,EAEH,KAAK,iBAAiB,mCAAmCA,CAAM,EAC3DC,EAAkB,CACpB,IAAMF,EAAQ,CACZ,KAAM,mBACN,OAAAC,CACF,EACA,KAAK,aAAa,cAAcD,CAAK,CACvC,CACF,CACA,WAAWL,EAAaE,EAAoB,CAC1C,GAAM,CACJ,IAAAM,EACA,SAAAC,CACF,EAAIT,EACJ,GAAIU,EAAgBF,CAAG,EACrB,OAEF,IAAMG,EAAWH,EAAI,IAAII,GAAQ,KAAK,WAAWA,EAAM,KAAK,SAAU1B,EAAS,CAAC,EAC1E2B,EAAkB,KAAK,SAAS,gBACtC,GAAI,OAAOJ,GAAa,UAAYA,GAAY,EAAG,CACjD,IAAMK,EAAMD,EAAgB,OACxBE,EAAqBN,EAEzB,GADmB,KAAK,IAAI,IAAI,UAAU,GACxBA,EAAW,GAAKK,EAAM,GACtC,QAASE,EAAI,EAAGA,EAAIF,EAAKE,IACvB,GAAIH,EAAgBG,CAAC,GAAG,UAAYP,EAAW,EAAG,CAChDM,EAAqBC,EAAI,EACzB,KACF,EAGJ,IAAMC,EAAmBJ,EAAgB,MAAM,EAAGE,CAAkB,EAC9DG,EAAkBL,EAAgB,MAAME,EAAoBF,EAAgB,MAAM,EACxF,KAAK,SAAS,gBAAkB,CAAC,GAAGI,EAAkB,GAAGN,EAAU,GAAGO,CAAe,CACvF,MACE,KAAK,SAAS,gBAAkB,CAAC,GAAGL,EAAiB,GAAGF,CAAQ,EAE9D,KAAK,SAAS,UAChB,KAAK,SAAS,QAAQ,gBAAkBE,GAE1CX,EAAmB,IAAMS,CAC3B,CACA,cAAcX,EAAaE,EAAoBC,EAAiB,CAC9D,GAAM,CACJ,OAAAgB,CACF,EAAInB,EACJ,GAAIU,EAAgBS,CAAM,EACxB,OAEF,IAAMC,EAAgB,CAAC,EACvBD,EAAO,QAAQP,GAAQ,CACrB,IAAMS,EAAU,KAAK,cAAcT,CAAI,EAClCS,IAGDA,EAAQ,WAAW,GACrBlB,EAAgB,KAAKkB,CAAO,EAE9BA,EAAQ,uBAAuB,EAC/BD,EAAcC,EAAQ,EAAE,EAAI,GAC5B,OAAO,KAAK,YAAYA,EAAQ,EAAE,EAClCnB,EAAmB,OAAO,KAAKmB,CAAO,EACxC,CAAC,EACD,KAAK,SAAS,gBAAkB,KAAK,SAAS,iBAAiB,OAAOA,GAAW,CAACD,EAAcC,EAAQ,EAAE,CAAC,GAAK,KAC5G,KAAK,SAAS,UAChB,KAAK,SAAS,QAAQ,gBAAkB,KAAK,SAAS,gBAE1D,CACA,cAAcrB,EAAaE,EAAoBC,EAAiB,CAC9D,GAAM,CACJ,OAAAmB,CACF,EAAItB,EACAU,EAAgBY,CAAM,GAG1BA,EAAO,QAAQV,GAAQ,CACrB,IAAMS,EAAU,KAAK,cAAcT,CAAI,EAClCS,IAGLA,EAAQ,WAAWT,CAAI,EACnB,CAACS,EAAQ,YAAcA,EAAQ,WAAW,GAC5ClB,EAAgB,KAAKkB,CAAO,EAE9B,KAAK,gBAAgBA,EAAST,EAAM1B,GAAW,EAAK,EACpDgB,EAAmB,OAAO,KAAKmB,CAAO,EACxC,CAAC,CACH,CACA,cAAcE,EAAM,CAClB,IAAMC,EAAe,KAAK,IAAI,iBAAiB,EAC3CH,EACJ,GAAIG,EAAc,CAChB,IAAM7B,EAAK6B,EAAa,CACtB,KAAAD,EACA,MAAO,CACT,CAAC,EAED,GADAF,EAAU,KAAK,YAAY1B,CAAE,EACzB,CAAC0B,EACH,OAAAI,EAAW,yBAAyB9B,CAAE,uCAAuC,EACtE,IAEX,SACE0B,EAAU,KAAK,SAAS,iBAAiB,KAAKK,GAAQA,EAAK,OAASH,CAAI,EACpE,CAACF,EACH,OAAAI,EAAW,mDAAoDF,CAAI,EACnEE,EAAW,iEAAiE,EACrE,KAGX,OAAOJ,GAAW,IACpB,CACA,WAAWtB,EAAU4B,EAAQC,EAAO,CAClC,IAAMF,EAAO,IAAIG,GAAQ,KAAK,KAAK,EACnC,OAAAH,EAAK,MAAQ,GACb,KAAK,gBAAgBA,EAAM3B,EAAU6B,EAAO,EAAI,EAC5CD,IACFD,EAAK,OAASC,GAEhBD,EAAK,MAAQE,EACbF,EAAK,aAAa3B,EAAU,KAAK,OAAO,SAAS,CAAC,EAC9C,KAAK,YAAY2B,EAAK,EAAE,GAC1B7B,EAAU,sBAAsB6B,EAAK,EAAE,0EAA0E,EAEnH,KAAK,YAAYA,EAAK,EAAE,EAAIA,EAC5B,KAAK,SACEA,CACT,CACA,gBAAgBL,EAASE,EAAMK,EAAOE,EAAa,CAEjD,GADmB,KAAK,IAAI,IAAI,UAAU,EAExCT,EAAQ,UAAU,EAAK,EACnBS,IACFT,EAAQ,SAAW,QAEhB,CAEL,GADqB,KAAK,IAAI,IAAI,cAAc,EAC9B,CAChB,IAAMU,EAAkB,KAAK,IAAI,IAAI,aAAa,EAC9CA,EACFV,EAAQ,UAAUU,EAAgBR,CAAI,CAAC,EAEvCF,EAAQ,UAAU,EAAI,CAE1B,MACEA,EAAQ,UAAU,EAAK,EAEzB,GAAIS,EAAa,CACf,IAAME,EAAkB,KAAK,gBAAgB,mBAAmB,EAC1DC,EAAqBD,EAAkBA,EAAgB,OAAS,EAChEE,EAAiBN,EAAQK,EAC/BZ,EAAQ,SAAWA,EAAQ,OAAS,KAAK,WAAWa,CAAc,EAAI,EACxE,CACF,CACF,CACA,WAAWN,EAAO,CAChB,IAAMO,EAAkB,KAAK,IAAI,IAAI,sBAAsB,EAC3D,OAAIA,IAAoB,GACf,GAEFP,EAAQO,CACjB,CACF,EAGIC,GAAqB,cAAcC,CAAS,CAC9C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,WAChB,KAAK,6BAA+BC,EAAU,KAAK,mBAAmB,KAAK,IAAI,EAAG,GAAG,EACrF,KAAK,cAAgB,CAAC,EAEtB,KAAK,WAAa,GAElB,KAAK,6BAA+B,GAOpC,KAAK,kBAAoB,GACzB,KAAK,cAAgB,EACvB,CACA,UAAU7C,EAAO,CACf,KAAK,MAAQA,EACb,KAAK,YAAcA,EAAM,YACzB,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,WAAaA,EAAM,WACxB,KAAK,YAAcA,EAAM,YACzB,KAAK,YAAcA,EAAM,YACzB,KAAK,UAAYA,EAAM,UACvB,KAAK,aAAeA,EAAM,aAC1B,KAAK,WAAaA,EAAM,WACxB,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,WAAaA,EAAM,WACxB,KAAK,sBAAwBA,EAAM,qBACrC,CACA,eAAgB,CACd,IAAM8C,EAAwB,KAAK,aAAa,KAAK,KAAM,CACzD,KAAM,OACR,CAAC,EACKC,EAAU,CAAC,KAAK,IAAI,IAAI,wBAAwB,EAChDC,EAAwC,KAAK,aAAa,KAAK,KAAM,CACzE,KAAM,QAGN,oBAAqB,GACrB,iBAAkB,GAElB,QAAAD,CACF,CAAC,EACD,KAAK,yBAAyB,CAC5B,iBAAkBC,EAClB,sBAAuBF,EACvB,mBAAoB,KAAK,eAAe,KAAK,IAAI,EACjD,mBAAoB,KAAK,aAAa,KAAK,KAAM,CAC/C,KAAM,OACR,CAAC,EACD,cAAe,KAAK,gBAAgB,KAAK,IAAI,EAC7C,YAAa,KAAK,cAAc,KAAK,IAAI,EACzC,uBAAwBA,EACxB,kBAAmB,KAAK,oBAAoB,KAAK,IAAI,EACrD,UAAW,KAAK,YAAY,KAAK,IAAI,CACvC,CAAC,EACD,KAAK,qBAAqB,EAC1B,KAAK,SAAW,IAAIV,GAAQ,KAAK,KAAK,EACtC,KAAK,YAAc,IAAI1C,GAAsB,KAAK,SAAU,KAAK,IAAK,KAAK,aAAc,KAAK,gBAAiB,KAAK,iBAAkB,KAAK,KAAK,CAClJ,CACA,sBAAuB,CACrB,IAAMuD,EAA4B,IAAI,IAAI,CAAC,WAAY,cAAc,CAAC,EAChEC,EAAwC,IAAI,IAAI,CAAC,uBAAwB,uBAAwB,8BAA+B,uBAAwB,kBAAkB,CAAC,EAC3KC,EAAyC,IAAI,IAAI,CAAC,sCAAsC,CAAC,EACzFC,EAAwC,IAAI,IAAI,CAAC,4CAA6C,iBAAkB,yBAA0B,+BAA+B,CAAC,EAC1KC,EAA4C,IAAI,IAAI,CAAC,iBAAkB,6BAA8B,0BAA2B,0BAA2B,eAAe,CAAC,EAC3KC,EAAuC,IAAI,IAAI,CAAC,eAAgB,mBAAoB,cAAc,CAAC,EACnGC,EAA4C,IAAI,IAAI,CAAC,CAAC,EACtDC,EAA0C,IAAI,IAAI,CAAC,4BAA6B,kCAAmC,qBAAsB,eAAe,CAAC,EACzJC,EAAW,CAAC,GAAGR,EAAY,GAAGC,EAAwB,GAAGC,EAAyB,GAAGC,EAAwB,GAAGA,EAAwB,GAAGC,EAA4B,GAAGC,EAAuB,GAAGC,EAA4B,GAAGC,CAAwB,EACjQ,KAAK,4BAA4BC,EAAUC,GAAU,CACnD,IAAMC,EAAaD,EAAO,WAAW,WACrC,GAAI,CAACC,EACH,OAEF,IAAMC,EAAwBC,GAAWF,EAAW,KAAKG,GAAQD,EAAQ,IAAIC,CAAI,CAAC,EAClF,GAAIF,EAAsBX,CAAU,EAAG,CACrC,KAAK,WAAW,KAAK,SAAS,gBAAgB,IAAIc,GAASA,EAAM,IAAI,CAAC,EACtE,MACF,CACA,GAAIH,EAAsBV,CAAsB,EAAG,CACjD,KAAK,aAAa,CAChB,KAAM,OACR,CAAC,EACD,MACF,CACA,GAAIU,EAAsBT,CAAuB,EAAG,CAClD,KAAK,aAAa,CAChB,KAAM,QACR,CAAC,EACD,MACF,CACA,GAAIS,EAAsBR,CAAsB,EAAG,CACjD,KAAK,aAAa,CAChB,KAAM,OACR,CAAC,EACD,MACF,CACA,GAAIQ,EAAsBP,CAA0B,EAAG,CACrD,KAAK,aAAa,CAChB,KAAM,WACR,CAAC,EACD,MACF,CACA,GAAIO,EAAsBN,CAAqB,EAAG,CAChD,KAAK,aAAa,CAChB,KAAM,MACR,CAAC,EACD,MACF,CACA,GAAIM,EAAsBL,CAA0B,EAAG,CACrD,KAAK,aAAa,CAChB,KAAM,mBACR,CAAC,EACD,MACF,CACIK,EAAsBJ,CAAwB,GAChD,KAAK,aAAa,CAChB,KAAM,KACR,CAAC,CAEL,CAAC,EACD,KAAK,2BAA2B,YAAa,IAAM,KAAK,gBAAgB,CAAC,CAC3E,CACA,OAAQ,CACN,KAAK,WAAa,GACd,KAAK,6BACP,KAAK,+BAA+B,EAEpC,KAAK,eAAe,CAExB,CACA,gBAAiB,CACf,IAAMrD,EAAU,KAAK,IAAI,IAAI,SAAS,EAClCA,IACF,KAAK,6BAA+B,GACpC,KAAK,WAAWA,CAAO,EAE3B,CACA,sBAAsB6D,EAAYC,EAAUC,EAAiBC,EAAe,CAC1E,IAAIC,EACAC,EAAM,GACV,EAAG,CACDD,EAAmB,GACnB,IAAME,EAAkB,KAAK,mBAAmBN,CAAU,EACpDO,EAAgB,KAAK,mBAAmBN,CAAQ,EAChDO,EAAW,KAAK,IAAIF,EAAiBJ,CAAe,EACpDO,EAAU,KAAK,IAAIF,EAAeJ,CAAa,EACrD,QAASO,EAAWF,EAAUE,GAAYD,EAASC,IAAY,CAC7D,IAAM9C,EAAU,KAAK,OAAO8C,CAAQ,EACpC,GAAI9C,EAAQ,mBAAoB,CAC9B,IAAM+C,EAAY,KAAK,IAAI,oBAAoB/C,CAAO,EACtDA,EAAQ,aAAa+C,EAAU,MAAM,EACrCP,EAAmB,GACnBC,EAAM,EACR,CACF,CACID,GACF,KAAK,qBAAqB,CAE9B,OAASA,GACT,OAAOC,CACT,CACA,sBAAuB,CACrB,IAAMO,EAAmB,KAAK,YAAY,oBAAoB,EAC1DC,EAAa,EACXC,EAAqC,IAAI,IACzCC,EAAgB,KAAK,IAAI,YAAY,QAAQ,EACnD,QAASxD,EAAI,EAAGA,EAAI,KAAK,cAAc,OAAQA,IAAK,CAClD,IAAMK,EAAU,KAAK,cAAcL,CAAC,EAIpC,GAHIK,EAAQ,IAAM,MAChBkD,EAAoB,IAAIlD,EAAQ,EAAE,EAEhCA,EAAQ,WAAa,KAAM,CAC7B,IAAM+C,EAAY,KAAK,IAAI,oBAAoB/C,EAASmD,EAAeH,CAAgB,EACvFhD,EAAQ,aAAa+C,EAAU,OAAQA,EAAU,SAAS,CAC5D,CACA/C,EAAQ,UAAUiD,CAAU,EAC5BjD,EAAQ,YAAYL,CAAC,EACrBsD,GAAcjD,EAAQ,SACxB,CACA,OAAOkD,CACT,CACA,uBAAuBE,EAAaF,EAAqB,CACvD,IAAMG,EAAoBD,EAAY,SAAS,EACzCE,EAAsBtD,GAAW,CACjCA,GAAWA,EAAQ,IAAM,MAAQ,CAACkD,EAAoB,IAAIlD,EAAQ,EAAE,GACtEA,EAAQ,uBAAuB,CAEnC,EACMuD,EAAUvD,GAAW,CAIzB,GAHAsD,EAAoBtD,CAAO,EAC3BsD,EAAoBtD,EAAQ,UAAU,EACtCsD,EAAoBtD,EAAQ,OAAO,EAC/BA,EAAQ,YAAY,GAClBA,EAAQ,mBAAoB,CAC9B,IAAMwD,EAAaxD,EAAQ,OAAS,GACfqD,GAAqB,CAACG,GAAc,CAACxD,EAAQ,UAEhEA,EAAQ,mBAAmB,QAAQuD,CAAO,CAE9C,CAEJ,EACAA,EAAQ,KAAK,QAAQ,CACvB,CAEA,kBAAkBE,EAAUC,EAAOC,EAAY,EAAG,CAChD,IAAMC,EAAkB,KAAK,mBAAmBF,CAAK,EAC/CG,EAAoB,KAAK,OAAOD,CAAe,EAC/CzC,EAAU,CAAC,KAAK,IAAI,IAAI,wBAAwB,EACtD,OAAI0C,IAAsBJ,EAAS,CAAC,EAC3B,IAETA,EAAS,QAAQzD,GAAW,CAC1B8D,EAAiB,KAAK,SAAS,gBAAiB9D,CAAO,CACzD,CAAC,EACDyD,EAAS,QAAQ,CAACzD,EAAS+D,IAAQ,CACjCC,GAAiB,KAAK,SAAS,gBAAiBhE,EAAS,KAAK,IAAI4D,EAAkBD,EAAW,CAAC,EAAII,CAAG,CACzG,CAAC,EACD,KAAK,aAAa,CAChB,KAAM,QACN,iBAAkB,GAClB,gBAAiB,GACjB,QAAA5C,CACF,CAAC,EACM,GACT,CACA,oBAAoBnB,EAAS0D,EAAO,CAClC,IAAME,EAAkBF,GAAS,KAAO,KAAK,mBAAmBA,CAAK,EAAI,KACnEG,EAAoBD,GAAmB,KAAO,KAAK,OAAOA,CAAe,EAAI,KACnF,GAAI,CAACC,GAAqB,CAAC7D,GAAW6D,IAAsB7D,GAAW0D,GAAS,KAAM,CAChF,KAAK,qBACP,KAAK,mBAAmB,eAAe,IAAI,EAC3C,KAAK,mBAAqB,MAE5B,MACF,CACA,IAAMO,EAAY,KAAK,qBAAqBP,EAAOG,CAAiB,EAChE,KAAK,oBAAsB,KAAK,qBAAuBA,IACzD,KAAK,mBAAmB,eAAe,IAAI,EAC3C,KAAK,mBAAqB,MAE5BA,EAAkB,eAAeI,CAAS,EAC1C,KAAK,mBAAqBJ,CAC5B,CACA,qBAAqBH,EAAO1D,EAAS,CACnC,GAAI,CAACA,EAAS,CACZ,IAAMkE,EAAQ,KAAK,mBAAmBR,CAAK,EAE3C,GADA1D,EAAU,KAAK,OAAOkE,GAAS,CAAC,EAC5B,CAAClE,EACH,MAAO,EAEX,CACA,GAAM,CACJ,OAAAmE,EACA,UAAApB,CACF,EAAI/C,EACJ,OAAO0D,EAAQS,EAASpB,EAAY,EAAI,EAAgB,CAC1D,CACA,2BAA4B,CAC1B,OAAO,KAAK,kBACd,CACA,qBAAsB,CACpB,MAAO,EACT,CACA,aAAc,CACZ,OAAI,KAAK,cACA,KAAK,cAAc,OAErB,CACT,CACA,qBAAsB,CAEpB,GADwB,KAAK,eAAiB,KAAK,cAAc,CAAC,IAAM,KAAK,SAE3E,MAAO,GAET,IAAMqB,EAAiB,KAAK,SAAS,QAAU,EAAI,EAC7CC,EAAmB,KAAK,SAAS,uBACvC,OAAQA,EAAmBA,EAAiB,OAAS,GAAKD,CAC5D,CACA,6BAA6BE,EAAe,CAE1C,GADwB,KAAK,eAAiB,KAAK,cAAc,CAAC,IAAM,KAAK,SAE3E,OAAOA,EAET,IAAIC,EAAgBD,EACpB,GAAI,KAAK,cAAc,CAAC,EAAE,OAAQ,CAChC,GAAIA,IAAkB,EACpB,MAAO,GAETC,GAAiB,CACnB,CACA,IAAIvE,EAAU,KAAK,SAAS,kBAAkBuE,CAAa,EAC3D,GAAI,KAAK,IAAI,IAAI,sBAAsB,EACrC,KAAOvE,EAAQ,UAAYA,EAAQ,mBAAqBA,EAAQ,kBAAkB,OAAS,GACzFA,EAAUA,EAAQ,kBAAkB,CAAC,EAGzC,OAAOA,EAAQ,QACjB,CACA,aAAakE,EAAO,CAClB,GAAIM,EAAS,KAAK,aAAa,EAC7B,OAAO,KAET,IAAMxE,EAAU,KAAK,cAAckE,CAAK,EACxC,OAAIlE,EACK,CACL,OAAQA,EAAQ,OAChB,UAAWA,EAAQ,SACrB,EAEK,IACT,CACA,kBAAmB,CACjB,IAAMmB,EAAU,KAAK,IAAI,cAAc,EACvC,KAAK,aAAa,CAChB,KAAM,MACN,iBAAkB,GAClB,QAAAA,CACF,CAAC,CACH,CACA,gBAAgBnC,EAAO,CACrB,GAAIA,EAAM,gBACR,OAEF,IAAMmC,EAAU,KAAK,IAAI,cAAc,EAEjCsD,EAD8BzF,EAAM,QAAQ,SAAW,GAAKA,EAAM,QAAQ,KAAK0F,GAAOA,EAAI,UAAU,CAAC,EAChE,SAAwB,oBACnE,KAAK,aAAa,CAChB,KAAAD,EACA,iBAAkB,GAClB,QAAAtD,CACF,CAAC,CACH,CACA,eAAgB,CACd,IAAMA,EAAU,KAAK,IAAI,cAAc,EACvC,KAAK,aAAa,CAChB,KAAM,OACN,iBAAkB,GAClB,QAAAA,EACA,gBAAiB,EACnB,CAAC,CACH,CACA,SAAU,CACR,MAAO,YACT,CACA,gBAAiB,CACX,KAAK,YAAY,cAAc,EACjC,KAAK,aAAa,CAChB,KAAM,OACR,CAAC,EAED,KAAK,aAAa,CAChB,KAAM,WACR,CAAC,CAEL,CACA,iBAAiBwD,EAAqB,CACpC,IAAMC,EAAiBvF,EAAgBsF,CAAmB,EACpDvB,EAAc,IAAIyB,GAAY,GAAO,KAAK,QAAQ,EACxD,OAAID,GAAkB,KAAK,IAAI,IAAI,UAAU,IAC3CxB,EAAY,YAAY,EAEnBA,CACT,CACA,4CAA4CtB,EAAQ,CAIlD,GAHI,CAAC,KAAK,IAAI,IAAI,2CAA2C,GAGzDA,EAAO,qBAAuB,KAChC,MAAO,GAET,IAAMgD,EAAyBhD,EAAO,oBAAoB,OAAOiD,GAAMA,EAAG,KAAO,MAAQA,EAAG,IAAI,OAAS,GAAKA,EAAG,QAAU,MAAQA,EAAG,OAAO,OAAS,CAAC,EAEvJ,OADuCD,GAA0B,MAAQA,EAAuB,QAAU,CAE5G,CACA,wBAAwBL,EAAM,CAC5B,IAAIO,EAAa,QACXC,EAAc,CAClB,WAAY,QACZ,MAAO,QACP,OAAQ,SACR,IAAK,MACL,UAAW,YACX,KAAM,OACN,MAAO,OACT,EAIA,GAHIC,EAAQT,CAAI,IACdO,EAAaC,EAAYR,CAAI,GAE3BD,EAASQ,CAAU,EAAG,CACxB5E,EAAW,gBAAgBqE,CAAI,yBAAyB,OAAO,KAAKQ,CAAW,EAAE,KAAK,IAAI,CAAC,EAAE,EAC7F,MACF,CACA,IAAM9D,EAAU,CAAC,KAAK,IAAI,IAAI,wBAAwB,EAOtD,MANoB,CAClB,KAAM6D,EACN,iBAAkB,GAClB,gBAAiB,GACjB,QAAA7D,CACF,CAEF,CACA,aAAagE,EAAc,CACzB,GAAI,CAAC,KAAK,YAAc,KAAK,mBAAqB,KAAK,YAAY,0BAA0B,EAC3F,OAEF,IAAMrD,EAAS,OAAOqD,GAAiB,UAAY,SAAUA,EAAeA,EAAe,KAAK,wBAAwBA,CAAY,EAIpI,GAHI,CAACrD,GAGD,KAAK,4CAA4CA,CAAM,EACzD,OAEF,IAAMsB,EAAc,KAAK,iBAAiBtB,EAAO,mBAAmB,EAEpE,OADA,KAAK,kBAAoB,GACjBA,EAAO,KAAM,CACnB,IAAK,QACH,KAAK,cAAcA,EAAO,oBAAqBA,EAAO,aAAcsB,EAAa,CAAC,CAACtB,EAAO,mBAAmB,EAC/G,IAAK,SACH,KAAK,SAASsB,CAAW,EAC3B,IAAK,QACH,KAAK,QAAQA,CAAW,EAC1B,IAAK,YACH,KAAK,YAAYA,CAAW,EAC9B,IAAK,oBACH,KAAK,mBAAmBA,CAAW,EACrC,IAAK,OACH,KAAK,OAAOtB,EAAO,oBAAqBsB,CAAW,EACrD,IAAK,MACH,KAAK,gBAAgB,CACzB,CACA,IAAMgC,EAAuB,KAAK,qBAAqB,EACvD,KAAK,uBAAuBhC,EAAagC,CAAoB,EAC7D,KAAK,kBAAoB,GACzB,IAAMpG,EAAQ,CACZ,KAAM,eACN,QAAS8C,EAAO,QAChB,iBAAkBA,EAAO,iBACzB,QAASA,EAAO,QAChB,QAAS,GACT,kBAAmBA,EAAO,iBAC5B,EACA,KAAK,aAAa,cAAc9C,CAAK,CACvC,CACA,SAAU,CACR,IAAMqG,EAAcb,EAAS,KAAK,SAAS,eAAe,GAAK,KAAK,SAAS,gBAAgB,SAAW,EACxG,OAAOA,EAAS,KAAK,QAAQ,GAAKa,GAAe,CAAC,KAAK,YAAY,QAAQ,CAC7E,CACA,gBAAiB,CACf,OAAOH,EAAQ,KAAK,aAAa,GAAK,KAAK,cAAc,OAAS,CACpE,CACA,4BAA4BI,EAAcC,EAAa,CACrD,IAAIC,EAAU,GACVC,EAAW,GACTC,EAAS,CAAC,EACVC,EAAuB,KAAK,IAAI,IAAI,sBAAsB,EAChE,YAAK,8BAA8B3F,GAAW,CAC5C,GAAIyF,EACF,OAEF,GAAID,IACExF,IAAYuF,GAAevF,IAAYsF,KACzCG,EAAW,GACPzF,EAAQ,OAAS2F,GAAsB,CACzCD,EAAO,KAAK,GAAG1F,EAAQ,eAAe,EACtC,MACF,CAGJ,GAAI,CAACwF,EAAS,CACZ,GAAIxF,IAAYuF,GAAevF,IAAYsF,EACzC,OAEFE,EAAU,EACZ,CAEA,GADwB,CAACxF,EAAQ,OAAS,CAAC2F,EACtB,CACnBD,EAAO,KAAK1F,CAAO,EACnB,MACF,CACF,CAAC,EACM0F,CACT,CAEA,cAAcE,EAAY,CACxBxF,EAAW,4DAA4D,CACzE,CACA,kBAAmB,CACjB,OAAO,KAAK,SAAW,KAAK,SAAS,mBAAqB,IAC5D,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,OAAO8D,EAAO,CACZ,OAAO,KAAK,cAAcA,CAAK,CACjC,CACA,aAAalE,EAAS,CACpB,OAAO,KAAK,cAAc,QAAQA,CAAO,GAAK,CAChD,CACA,mBAAmB6F,EAAc,CAC/B,GAAI,KAAK,QAAQ,GAAK,KAAK,cAAc,SAAW,EAClD,MAAO,GAET,IAAIC,EAAgB,EAChBC,EAAa,KAAK,cAAc,OAAS,EAC7C,GAAIF,GAAgB,EAClB,MAAO,GAGT,GADiBG,EAAM,KAAK,aAAa,EAC5B,QAAUH,EACrB,OAAO,KAAK,cAAc,OAAS,EAErC,IAAII,EAAmB,GACnBC,EAAgB,GACpB,OAAa,CACX,IAAMC,EAAa,KAAK,OAAOL,EAAgBC,GAAc,CAAC,EACxDK,EAAiB,KAAK,cAAcD,CAAU,EAUpD,GATI,KAAK,aAAaC,EAAgBP,CAAY,IAG9CO,EAAe,OAASP,EAC1BC,EAAgBK,EAAa,EACpBC,EAAe,OAASP,IACjCE,EAAaI,EAAa,GAECF,IAAqBH,GAAiBI,IAAkBH,GAEnF,OAAOI,EAETF,EAAmBH,EACnBI,EAAgBH,CAClB,CACF,CACA,aAAa/F,EAAS6F,EAAc,CAClC,IAAMQ,EAAWrG,EAAQ,OACnBsG,EAActG,EAAQ,OAASA,EAAQ,UAE7C,OADmBqG,GAAYR,GAAgBS,EAAcT,CAE/D,CACA,gBAAgBU,EAAU,CACpB,KAAK,SAAS,iBAChB,KAAK,SAAS,gBAAgB,QAAQ,CAACvG,EAASkE,IAAUqC,EAASvG,EAASkE,CAAK,CAAC,CAEtF,CACA,YAAYqC,EAAUC,EAAqB,GAAO,CAChD,KAAK,gCAAgC,CACnC,MAAO,CAAC,GAAI,KAAK,SAAS,oBAAsB,CAAC,CAAE,EACnD,SAAAD,EACA,cAAe,EACf,MAAO,EACP,mBAAAC,CACF,CAAC,CACH,CACA,uBAAuBD,EAAUC,EAAqB,GAAO,CAC3D,KAAK,gCAAgC,CACnC,MAAO,CAAC,GAAI,KAAK,SAAS,wBAA0B,CAAC,CAAE,EACvD,SAAAD,EACA,cAAe,EACf,MAAO,EACP,mBAAAC,CACF,CAAC,CACH,CACA,8BAA8BD,EAAUC,EAAqB,GAAO,CAClE,KAAK,gCAAgC,CACnC,MAAO,CAAC,GAAI,KAAK,SAAS,mBAAqB,CAAC,CAAE,EAClD,SAAAD,EACA,cAAe,EACf,MAAO,EACP,mBAAAC,CACF,CAAC,CACH,CACA,iBAAiBD,EAAUC,EAAqB,GAAO,CACrD,KAAK,gCAAgC,CACnC,MAAO,CAAC,KAAK,QAAQ,EACrB,SAAAD,EACA,cAAe,EACf,MAAO,EACP,mBAAAC,CACF,CAAC,CACH,CAMA,gCAAgC1E,EAAQ,CACtC,GAAM,CACJ,MAAA2E,EACA,SAAAF,EACA,cAAAG,EACA,mBAAAF,CACF,EAAI1E,EACA,CACF,MAAAoC,CACF,EAAIpC,EACE6E,EAAaC,GAAY,CAC7B,IAAMC,EAAaJ,EAAM,CAAC,GAAG,OAC7B,GAAI,CAACI,EAAY,OACjB,IAAMC,EAAaN,GAAsB,KAAK,IAAI,iBAAiB,EAC7DO,EAAuB,KAAK,IAAI,yBAAyB,EACzDC,EAAaR,GAAsBO,EAAqB,CAC5D,KAAMF,CACR,CAAC,EAED,GADmBA,IAAe,KAAK,SACvB,CACVC,IAAeF,IACjBC,EAAW,aAAa,EACxBN,EAASM,EAAW,QAAS3C,GAAO,GAEtC,MACF,CACI8C,IAAeJ,IACjBC,EAAW,aAAa,EACxBN,EAASM,EAAW,QAAS3C,GAAO,EAExC,EACAyC,EAAW,KAAK,EAChB,QAAShH,EAAI,EAAGA,EAAI8G,EAAM,OAAQ9G,IAAK,CACrC,IAAMU,EAAOoG,EAAM9G,CAAC,EAEpB,GADA4G,EAASlG,EAAM6D,GAAO,EAClB7D,EAAK,YAAY,GAAK,CAACA,EAAK,OAAQ,CACtC,IAAI4G,EAAe,KACnB,OAAQP,EAAe,CACrB,IAAK,GACHO,EAAe5G,EAAK,mBACpB,MACF,IAAK,GACH4G,EAAe5G,EAAK,uBACpB,MACF,IAAK,GACH4G,EAAe5G,EAAK,kBACpB,MACF,IAAK,GACH4G,EAAgB5G,EAAK,UAAqC,KAAzBA,EAAK,kBACtC,KACJ,CACI4G,IACF/C,EAAQ,KAAK,gCAAgC,CAC3C,MAAO,CAAC,GAAG+C,CAAY,EACvB,SAAAV,EACA,cAAAG,EACA,MAAAxC,EACA,mBAAAsC,CACF,CAAC,EAEL,CACF,CACA,OAAAG,EAAW,QAAQ,EACZzC,CACT,CAGA,YAAYd,EAAa,CACvB,KAAK,kBAAkB,QAAQ,CAC7B,QAAS,KAAK,SACd,YAAAA,CACF,CAAC,CACH,CACA,mBAAmBA,EAAa,CAC1B,KAAK,sBACP,KAAK,sBAAsB,QAAQ,CACjC,QAAS,KAAK,SACd,YAAAA,CACF,CAAC,EAED,KAAK,SAAS,uBAAyB,KAAK,SAAS,mBAEzD,CAGA,oBAAoB8D,EAAQ,CAC1B,IAAMC,EAAgB,KAAK,IAAI,IAAI,UAAU,EACvCC,EAAiB,KAAK,YAAY,cAAc,EAChDC,EAA4B5D,GAAY,CACvCA,GAGLA,EAAS,QAAQzD,GAAW,CAC1B,IAAMsH,EAAY,IAAM,CACtBtH,EAAQ,SAAWkH,EACnBG,EAA0BrH,EAAQ,kBAAkB,CACtD,EACA,GAAImH,EAAe,CACGjC,EAAQlF,EAAQ,kBAAkB,GAEpDsH,EAAU,EAEZ,MACF,CACA,GAAIF,EAAgB,CACG,CAACpH,EAAQ,WAE5BsH,EAAU,EAEZ,MACF,CACmBtH,EAAQ,OAEzBsH,EAAU,CAEd,CAAC,CACH,EACI,KAAK,UACPD,EAA0B,KAAK,SAAS,kBAAkB,EAE5D,KAAK,aAAa,CAChB,KAAM,KACR,CAAC,EAED,IAAMrI,EAAQ,CACZ,KAAM,sBACN,OAHkBkI,EAAS,YAAc,aAI3C,EACA,KAAK,aAAa,cAAclI,CAAK,CACvC,CACA,OAAO2F,EAAqBvB,EAAa,CACvC,KAAK,UAAU,QAAQ,CACrB,QAAS,KAAK,SACd,oBAAAuB,EACA,YAAAvB,CACF,CAAC,CACH,CACA,cAAcuB,EAAqB/F,EAAcwE,EAAamE,EAAqB,CACjF,GAAI,KAAK,YAeP,GAdI5C,EACF,KAAK,WAAW,QAAQ,CACtB,QAAS,KAAK,SACd,oBAAAA,EACA,aAAA/F,EACA,YAAAwE,CACF,CAAC,EAED,KAAK,WAAW,QAAQ,CACtB,QAAS,KAAK,SACd,YAAAA,EACA,oBAAAmE,CACF,CAAC,EAEC,KAAK,IAAI,IAAI,sBAAsB,GACZ,KAAK,iBAAiB,mCAAmC,kBAAmBnE,CAAW,EAC1F,CACpB,IAAMpE,EAAQ,CACZ,KAAM,mBACN,OAAQ,iBACV,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,OAGF,KAAK,SAAS,mBAAqB,KAAK,SAAS,gBAC7C,KAAK,SAAS,UAChB,KAAK,SAAS,QAAQ,mBAAqB,KAAK,SAAS,oBAE3D,KAAK,SAAS,kBAAkB,EAE9B,KAAK,YAAY,gBAAgB,IACnC,KAAK,cAAgB,GACrB,KAAK,aAAa,kBAAkB,CAClC,KAAM,eACR,CAAC,EAEL,CACA,SAASoE,EAAa,CACpB,KAAK,YAAY,QAAQ,CACvB,QAAS,KAAK,SACd,YAAAA,CACF,CAAC,CACH,CACA,QAAQA,EAAa,CACnB,KAAK,YAAY,QAAQ,CACvB,QAAS,KAAK,SACd,YAAAA,CACF,CAAC,CACH,CACA,mBAAoB,CAClB,OAAO,KAAK,YAAY,kBAAkB,CAC5C,CACA,WAAW9E,EAAI,CAEb,GADkB,OAAOA,GAAM,UAAYA,EAAG,QAAQkC,GAAQ,mBAAmB,GAAK,EACvE,CACb,IAAIiC,EACJ,YAAK,YAAYpC,GAAQ,CACnBA,EAAK,KAAO/B,IACdmE,EAAMpC,EAEV,CAAC,EACMoC,CACT,CACA,OAAO,KAAK,YAAY,WAAWnE,CAAE,CACvC,CAEA,WAAWC,EAAS,CAClB,KAAK,iBAAiB,MAAM,gBAAgB,EAC5C,KAAK,YAAY,WAAWA,CAAO,EAC/B,KAAK,YACP,KAAK,+BAA+B,CAExC,CACA,gCAAiC,CAC/B,IAAMiJ,EAAsB,CAC1B,KAAM,gBACR,EACA,KAAK,aAAa,cAAcA,CAAmB,EACnD,KAAK,aAAa,CAChB,KAAM,QACN,QAAS,EACX,CAAC,CACH,CACA,mBAAmBC,EAAoBlB,EAAU,CAC/C,GAAI,KAAK,+BAAiC,KAAM,CAC9C,KAAK,wBAA0B,CAAC,EAChC,IAAMmB,EAAa,KAAK,IAAI,8BAA8B,EAC1D,KAAK,8BAAgC,OAAO,WAAW,IAAM,CAC3D,KAAK,0BAA0B,CACjC,EAAGA,CAAU,CACf,CACA,KAAK,wBAAwB,KAAK,CAChC,mBAAAD,EACA,SAAAlB,CACF,CAAC,CACH,CACA,wBAAyB,CACnB,KAAK,+BAAiC,OACxC,aAAa,KAAK,6BAA6B,EAC/C,KAAK,0BAA0B,EAEnC,CACA,2BAA4B,CAC1B,KAAK,WAAW,cAAc,EAC9B,IAAMoB,EAAqB,CAAC,EACtBC,EAAe,CAAC,EAClBC,EAAoB,GAmBxB,GAlBI,KAAK,yBACP,KAAK,wBAAwB,QAAQC,GAAY,CAC/C,IAAMC,EAAc,KAAK,YAAY,cAAcD,EAAS,mBAAoB,MAAM,EACtFF,EAAa,KAAKG,CAAW,EACzBD,EAAS,UACXH,EAAmB,KAAKG,EAAS,SAAS,KAAK,KAAMC,CAAW,CAAC,EAE/D,OAAOD,EAAS,mBAAmB,UAAa,WAClDD,EAAoB,GAExB,CAAC,EAEH,KAAK,oBAAoBD,EAAc,OAAQC,CAAiB,EAC5DF,EAAmB,OAAS,GAC9B,OAAO,WAAW,IAAM,CACtBA,EAAmB,QAAQK,GAAQA,EAAK,CAAC,CAC3C,EAAG,CAAC,EAEFJ,EAAa,OAAS,EAAG,CAC3B,IAAM5I,EAAQ,CACZ,KAAM,2BACN,QAAS4I,CACX,EACA,KAAK,aAAa,cAAc5I,CAAK,CACvC,CACA,KAAK,wBAA0B,KAC/B,KAAK,8BAAgC,MACvC,CACA,cAAcL,EAAaC,EAAc,CACvC,KAAK,WAAW,cAAc,EAC9B,IAAMmJ,EAAc,KAAK,YAAY,cAAcpJ,EAAaC,CAAY,EACtEiJ,EAAoB,OAAOlJ,EAAY,UAAa,SAC1D,YAAK,oBAAoB,CAACoJ,CAAW,EAAGnJ,EAAciJ,CAAiB,EAChEE,CACT,CACA,oBAAqB,CAEnB,GAD0B,KAAK,IAAI,IAAI,+BAA+B,EAEpE,OAEF,IAAME,EAAW,CAAC,EAClB,GAAI,KAAK,UAAY,KAAK,SAAS,gBACjC,QAAS/D,EAAQ,EAAGA,EAAQ,KAAK,SAAS,gBAAgB,OAAQA,IAAS,CACzE,IAAM7D,EAAO,KAAK,SAAS,gBAAgB6D,CAAK,EAChD+D,EAAS5H,EAAK,EAAE,EAAI6D,CACtB,CAEF,OAAO+D,CACT,CAEA,oBAAoBL,EAAchJ,EAAciJ,EAAmB,CACjE,GAAI,CAAC,KAAK,WACR,OAEF,IAAM1G,EAAU,CAAC,KAAK,IAAI,IAAI,wBAAwB,EAClD0G,IACFjJ,EAAe,KAAK,mBAAmB,GAEzC,IAAMI,EAAQ,CACZ,KAAM,gBACR,EACA,KAAK,aAAa,cAAcA,CAAK,EACrC,KAAK,aAAa,CAChB,KAAM,QACN,oBAAqB4I,EACrB,aAAAhJ,EACA,iBAAkB,GAClB,gBAAiB,GACjB,QAAAuC,CACF,CAAC,CACH,CACA,iBAAkB,CAChB,KAAK,cAAgB,KAAK,aAAa,QAAQ,CAC7C,QAAS,KAAK,QAChB,CAAC,CACH,CACA,oBAAqB,CACnB,KAAK,aAAa,CAChB,KAAM,MACN,iBAAkB,GAClB,gBAAiB,GACjB,kBAAmB,EACrB,CAAC,CACH,CAOA,6BAA8B,CAC5B,KAAK,6BAA6B,CACpC,CACA,iBAAkB,CAChB,IAAM+G,EAAa,KAAK,8BAA8B,EACtD,KAAK,SAAS,aAAa,KAAK,SAAS,UAAW,EAAI,EACpD,KAAK,SAAS,SAChB,KAAK,SAAS,QAAQ,aAAa,KAAK,SAAS,QAAQ,UAAW,EAAI,EAEtEA,GACF,KAAK,mBAAmB,CAE5B,CACA,+BAAgC,CAC9B,IAAIA,EAAa,GACjB,YAAK,YAAYlI,GAAW,CAC1BA,EAAQ,aAAaA,EAAQ,UAAW,EAAI,EAC5C,IAAMmI,EAAanI,EAAQ,WACvBmI,GACFA,EAAW,aAAaA,EAAW,UAAW,EAAI,EAEhDnI,EAAQ,SACVA,EAAQ,QAAQ,aAAaA,EAAQ,QAAQ,UAAW,EAAI,EAE9DkI,EAAa,EACf,CAAC,EACMA,CACT,CACA,oBAAoB,EAAG,CACrB,GAAI,EAAE,iBAAkB,CACtB,GAAI,KAAK,YAAY,sBAAsB,EACzC,OAEF,KAAK,gBAAgB,CACvB,CACF,CACA,aAAc,CACR,KAAK,YAGT,KAAK,eAAe,CACtB,CACA,iBAAkB,CAChB,OAAO,KAAK,aACd,CACF,EAGA,SAASE,GAA2BhK,EAAO,CACzCA,EAAM,iBAAiB,2BAA2B,CACpD,CACA,SAASiK,GAA0BjK,EAAOqG,EAAM,CAC9CrG,EAAM,uBAAuB,sBAAsB,GAAG,aAAaqG,CAAI,CACzE,CACA,SAAS6D,GAAgBlK,EAAOmI,EAAU,CACxCnI,EAAM,uBAAuB,sBAAsB,GAAG,gBAAgBmI,CAAQ,CAChF,CACA,SAASgC,GAAuBnK,EAAOmI,EAAU,CAC/CnI,EAAM,uBAAuB,sBAAsB,GAAG,uBAAuBmI,CAAQ,CACvF,CACA,SAASiC,GAA8BpK,EAAOmI,EAAU,CACtDnI,EAAM,uBAAuB,sBAAsB,GAAG,8BAA8BmI,CAAQ,CAC9F,CACA,SAASkC,GAAgBrK,EAAO,CAC9B,GAAIA,EAAM,YAAY,sBAAsB,EAAG,CAC7CI,EAAU,8EAA8E,EACxF,MACF,CACAJ,EAAM,uBAAuB,sBAAsB,GAAG,gBAAgB,CACxE,CACA,SAASsK,GAAiBtK,EAAOqJ,EAAoB,CACnD,OAAOrJ,EAAM,mBAAmB,aAAa,IAAMA,EAAM,uBAAuB,sBAAsB,GAAG,cAAcqJ,CAAkB,CAAC,CAC5I,CACA,SAASkB,GAAsBvK,EAAOqJ,EAAoBlB,EAAU,CAClEnI,EAAM,mBAAmB,aAAa,IAAMA,EAAM,uBAAuB,sBAAsB,GAAG,mBAAmBqJ,EAAoBlB,CAAQ,CAAC,CACpJ,CACA,SAASqC,GAAuBxK,EAAO,CACrCA,EAAM,mBAAmB,aAAa,IAAMA,EAAM,uBAAuB,sBAAsB,GAAG,uBAAuB,CAAC,CAC5H,CACA,SAASyK,GAAyBzK,EAAO,CACvC,OAAOA,EAAM,iBAAiB,yBAAyB,CACzD,CAGA,IAAI0K,GAAc,cAAc9H,CAAS,CACvC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,aAClB,CACA,UAAU5C,EAAO,CACf,KAAK,cAAgBA,EAAM,aAC7B,CACA,QAAQ0D,EAAQ,CACd,GAAM,CACJ,YAAAsB,CACF,EAAItB,EACJ,KAAK,OAAOsB,CAAW,CACzB,CACA,OAAOA,EAAa,CAClB,IAAM2F,EAAe,CAAC,CAAC,KAAK,eAAe,qBAAqB,EAChE,KAAK,YAAYA,EAAc3F,CAAW,CAC5C,CACA,YAAY2F,EAAc3F,EAAa,CACrC,IAAM4F,EAAiB,CAAChJ,EAASiJ,IAAsB,CACjDjJ,EAAQ,YAAY,GAClB+I,GAAgB,CAACE,EACnBjJ,EAAQ,oBAAsBA,EAAQ,mBAAmB,OAAOkJ,GAAa,CAC3E,IAAMC,EAAsBD,EAAU,qBAAuBA,EAAU,oBAAoB,OAAS,EAC9FE,EAAwBF,EAAU,MAAQ,KAAK,cAAc,kBAAkB,CACnF,QAASA,CACX,CAAC,EACD,OAAOC,GAAuBC,CAChC,CAAC,EAKHpJ,EAAQ,oBAAsBA,EAAQ,mBAEpCA,EAAQ,UACVA,EAAQ,QAAQ,oBAAsBA,EAAQ,oBAElD,EACA,GAAI,KAAK,uBAAuB,EAAG,CACjC,IAAMqJ,EAA2B,CAACrJ,EAASsJ,IAAyB,CAClE,GAAItJ,EAAQ,mBACV,QAASL,EAAI,EAAGA,EAAIK,EAAQ,mBAAmB,OAAQL,IAAK,CAC1D,IAAMuJ,EAAYlJ,EAAQ,mBAAmBL,CAAC,EACxC4J,EAAgBD,GAAwB,KAAK,cAAc,kBAAkB,CACjF,QAASJ,CACX,CAAC,EACGA,EAAU,mBACZG,EAAyBrJ,EAAQ,mBAAmBL,CAAC,EAAG4J,CAAa,EAErEP,EAAeE,EAAWK,CAAa,CAE3C,CAEFP,EAAehJ,EAASsJ,CAAoB,CAC9C,EACME,EAAyBxJ,GAAWqJ,EAAyBrJ,EAAS,EAAK,EACjFoD,EAAY,oBAAoBoG,CAAsB,CACxD,KAAO,CACL,IAAMC,EAAwBzJ,GAAWgJ,EAAehJ,EAAS,EAAK,EACtEoD,EAAY,6BAA6BqG,EAAuB,EAAI,CACtE,CACF,CACA,wBAAyB,CACvB,OAAO,KAAK,IAAI,IAAI,UAAU,GAAK,CAAC,KAAK,IAAI,IAAI,sCAAsC,CACzF,CACF,EAGIC,GAAe,cAAc1I,CAAS,CACxC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,cAClB,CACA,UAAU5C,EAAO,CACf,KAAK,MAAQA,EACb,KAAK,YAAcA,EAAM,WAC3B,CACA,QAAQ0D,EAAQ,CACd,IAAM/D,EAAW+D,EAAO,QAClB4D,EAAS,CAAC,EACViE,EAAgB,KAAK,YAAY,YAAY,EAC7CC,EAAeD,GAAiB5L,EAAS,UACzC8L,EAAUD,EAAe,CAAC7L,CAAQ,EAAIA,EAAS,kBAC/C+L,EAAU,KAAK,kBAAkB,EACvC,KAAK,8BAA8BA,EAASD,EAASnE,EAAQiE,EAAe,CAAC,EAC7E,IAAMI,EAAuBrE,EAAO,OAAS,EAI7C,GAH6B,CAACkE,GAE9BG,GAAwBD,EAAQ,cACN,CACxB/L,EAAS,aAAa,EACtB,IAAMiM,EAAWF,EAAQ,gBAAkB,MAC3C,KAAK,0BAA0BA,EAAS/L,EAAS,QAAS2H,EAAQ,EAAGsE,CAAQ,CAC/E,CACA,OAAOtE,CACT,CACA,mBAAoB,CAClB,IAAMuE,EAA4B,KAAK,IAAI,IAAI,2BAA2B,EAE1E,MAAO,CACL,gCAFsC,CAACA,GAA6B,KAAK,IAAI,IAAI,iCAAiC,EAGlH,0BAAAA,EACA,uBAAwB,KAAK,IAAI,uBAAuB,EACxD,gBAAiB,KAAK,IAAI,IAAI,sBAAsB,EACpD,cAAe,KAAK,IAAI,iBAAiB,EACzC,cAAe,KAAK,IAAI,yBAAyB,CACnD,CACF,CACA,8BAA8BH,EAASI,EAAexE,EAAQiE,EAAeQ,EAAS,CACpF,GAAI,CAAA9K,EAAgB6K,CAAa,EAGjC,QAASvK,EAAI,EAAGA,EAAIuK,EAAc,OAAQvK,IAAK,CAC7C,IAAMK,EAAUkK,EAAcvK,CAAC,EACzByK,EAAWpK,EAAQ,YAAY,EAC/BqK,EAAoBV,GAAiB,CAACS,EACtCE,EAA+BR,EAAQ,2BAA6BM,GAAYpK,EAAQ,mBAAmB,SAAW,EACtHuK,EAAqCT,EAAQ,iCAAmCM,GAAYpK,EAAQ,WAAaA,EAAQ,mBAAmB,SAAW,EACvJwK,EAAqBb,GAAiB3J,EAAQ,UAC9CyK,EAAqBX,EAAQ,iBAAmB9J,EAAQ,UAAY,CAACA,EAAQ,QAAU,CAACwK,EAK9F,GAJgC,CAACH,GAAqB,CAACI,GAAsB,CAACH,GAAgC,CAACC,GAE7G,KAAK,0BAA0BT,EAAS9J,EAAS0F,EAAQyE,CAAO,EAE9D,EAAAR,GAAiB3J,EAAQ,YAG7B,GAAIoK,EAAU,CACZ,IAAMM,EAAiBJ,GAAgCC,EACvD,GAAIvK,EAAQ,UAAY0K,EAAgB,CACtC,IAAMC,EAAoBb,EAAQ,cAAc,CAC9C,KAAM9J,CACR,CAAC,EACI2K,GACH3K,EAAQ,cAAc,EAExB,IAAM4K,EAAqBF,EAAiBP,EAAUA,EAAU,EAC5DQ,IAAsB,QACxB3K,EAAQ,aAAa,EACrB,KAAK,0BAA0B8J,EAAS9J,EAAQ,QAAS0F,EAAQkF,CAAkB,GAErF,KAAK,8BAA8Bd,EAAS9J,EAAQ,kBAAmB0F,EAAQiE,EAAeiB,CAAkB,EAC5GD,IAAsB,WACxB3K,EAAQ,aAAa,EACrB,KAAK,0BAA0B8J,EAAS9J,EAAQ,QAAS0F,EAAQkF,CAAkB,EAEvF,CACF,SAAW5K,EAAQ,QAAUA,EAAQ,SAAU,CAC7C,IAAMmI,EAAa,KAAK,iBAAiBnI,CAAO,EAChD,KAAK,0BAA0B8J,EAAS3B,EAAYzC,EAAQyE,CAAO,CACrE,EACF,CACF,CAEA,0BAA0BL,EAAS9J,EAAS0F,EAAQyE,EAASH,EAAU,CACjEA,EACFtE,EAAO,QAAQ1F,CAAO,EAEtB0F,EAAO,KAAK1F,CAAO,EAErBA,EAAQ,WAAW8J,EAAQ,uBAAyB,EAAIK,CAAO,CACjE,CACA,iBAAiBU,EAAY,CAC3B,GAAI3F,EAAQ2F,EAAW,UAAU,EAC/B,OAAOA,EAAW,WAEpB,IAAM1C,EAAa,IAAI3H,GAAQ,KAAK,KAAK,EACzC,OAAA2H,EAAW,OAAS,GACpBA,EAAW,WAAa,GACxBA,EAAW,OAAS0C,EAChB3F,EAAQ2F,EAAW,EAAE,IACvB1C,EAAW,GAAK,UAAY0C,EAAW,IAEzC1C,EAAW,KAAO0C,EAAW,KAC7B1C,EAAW,MAAQ0C,EAAW,MAAQ,EACtCA,EAAW,WAAa1C,EACjBA,CACT,CACF,EAGI2C,GAAmB,cAAc9J,CAAS,CAC5C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,kBAClB,CACA,UAAU5C,EAAO,CACf,KAAK,SAAWA,EAAM,SACtB,KAAK,iBAAmBA,EAAM,gBAChC,CACA,eAAgB,CACV,KAAK,SAAS,QAAQ,IAAM,eAC9B,KAAK,mBAAqB,KAAK,SAC/B,KAAK,2BAA2B,UAAW,IAAM,KAAK,iBAAiB,CAAC,EAE5E,CACA,UAAW,CACT,IAAM2M,EAAmB,KAAK,IAAI,OAAO,UAAU,EAEnD,OAD6B,KAAK,IAAI,IAAI,sBAAsB,EAEvD,GAEFA,CACT,CACA,WAAWxM,EAAS,CAClB,IAAMyM,EAAoB,KAAK,4BAA4BzM,CAAO,EAClE,GAAI,CAACyM,EACH,OAEF,GAAM,CAACC,EAAaC,CAAU,EAAIF,EAClC,KAAK,mBAAmB,cAAcC,EAAaC,CAAU,CAC/D,CAEA,4BAA4B3M,EAAS,CACnC,GAAIiG,EAAS,KAAK,kBAAkB,EAAG,CACrCpE,EAAW,qDAAqD,EAChE,MACF,CACA,IAAMD,EAAe,KAAK,IAAI,iBAAiB,EAC/C,GAAIA,GAAgB,KAAM,CACxBC,EAAW,2FAA2F,EACtG,MACF,CACA,IAAM6K,EAAc,CAClB,OAAQ,CAAC,EACT,OAAQ,CAAC,EACT,IAAK,CAAC,CACR,EACME,EAAmB,KAAK,mBAAmB,kBAAkB,EAE7DlD,EADoB,KAAK,IAAI,IAAI,+BAA+B,EACjC,OAAS,CAAC,EAC/C,OAAI/C,EAAQ3G,CAAO,GACjBA,EAAQ,QAAQ,CAAC2B,EAAMgE,IAAU,CAC/B,IAAM5F,EAAK6B,EAAa,CACtB,KAAAD,EACA,MAAO,CACT,CAAC,EACKkL,EAAeD,EAAiB7M,CAAE,EACpC2J,IACFA,EAAS3J,CAAE,EAAI4F,GAEbkH,GACqBA,EAAa,OAASlL,GAE3C+K,EAAY,OAAO,KAAK/K,CAAI,EAE9BiL,EAAiB7M,CAAE,EAAI,QAEvB2M,EAAY,IAAI,KAAK/K,CAAI,CAE7B,CAAC,EAEHmL,GAAeF,EAAkB,CAAC7M,EAAI0B,IAAY,CAC5CA,GACFiL,EAAY,OAAO,KAAKjL,EAAQ,IAAI,CAExC,CAAC,EACM,CAACiL,EAAahD,CAAQ,CAC/B,CACA,kBAAmB,CACjB,IAAM1J,EAAU,KAAK,IAAI,IAAI,SAAS,EACjCA,IAGD,KAAK,SAAS,EAChB,KAAK,WAAWA,CAAO,GAEvB,KAAK,iBAAiB,MAAM,gBAAgB,EAC5C,KAAK,mBAAmB,WAAWA,CAAO,GAE9C,CACF,EAGI+M,GAAc,cAActK,CAAS,CACvC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,aAClB,CACA,UAAU5C,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,cAAgBA,EAAM,cAC3B,KAAK,wBAA0BA,EAAM,uBACvC,CACA,KAAKmN,EAAaC,EAAYC,EAAc9G,EAAqBvB,EAAasI,EAA0B,CACtG,IAAMC,EAAqB,KAAK,IAAI,IAAI,oBAAoB,EACtDC,EAAsB,KAAK,YAAY,QAAQ,EAAE,KAAK,GAAK,EAAE,iBAAiB,CAAC,EACjFC,EAAgB,CAAC,EACjBJ,GAAgB9G,IAClBkH,EAAgB,KAAK,oBAAoBlH,CAAmB,GAE9D,IAAMmH,EAAc,KAAK,YAAY,YAAY,EAC3CC,EAAe,KAAK,IAAI,YAAY,cAAc,EAClDxF,EAAWvG,GAAW,CAC1B,KAAK,oCAAoCA,EAAQ,uBAAwB,EAAI,EAC7E,IAAMgM,EAAwBF,GAAe9L,EAAQ,UAErD,GAD0B2L,GAAsBC,GAAuB,CAAC5L,EAAQ,WAAa,CAAC0L,EACvE,CAErB,IAAMO,EADY,KAAK,gBAAgB,mBAAmB,IAAIjM,EAAQ,MAAQ,CAAC,GACnC,QAAQ,IAAM,KACpDkM,EAAqBlM,EAAQ,uBAAuB,MAAM,CAAC,EACjE,GAAIA,EAAQ,mBAAqB,CAACiM,EAA0B,CAC1D,IAAME,EAAgB,CAAC,EACvBnM,EAAQ,kBAAkB,QAAQ,CAACK,EAAM0D,IAAQ,CAC/CoI,EAAc9L,EAAK,EAAE,EAAI0D,CAC3B,CAAC,EACDmI,EAAmB,KAAK,CAACE,EAAMC,KAAUF,EAAcC,EAAK,EAAE,GAAK,IAAMD,EAAcE,EAAK,EAAE,GAAK,EAAE,CACvG,CACArM,EAAQ,kBAAoBkM,CAC9B,KAAW,CAACV,GAAcQ,EACxBhM,EAAQ,kBAAoBA,EAAQ,uBAAuB,MAAM,CAAC,EACzDyL,EACTzL,EAAQ,kBAAoB,KAAK,YAAYA,EAAS6L,EAAezI,EAAamI,CAAW,EAE7FvL,EAAQ,kBAAoB,KAAK,cAAc,WAAWA,EAAQ,uBAAwBuL,CAAW,EAMvG,GAJIvL,EAAQ,UACVA,EAAQ,QAAQ,kBAAoBA,EAAQ,mBAE9C,KAAK,mBAAmBA,CAAO,EAC3B+L,EAAc,CAChB,IAAMjK,EAAS,CACb,MAAO9B,EAAQ,iBACjB,EACA+L,EAAajK,CAAM,CACrB,CACF,EACIsB,GACFA,EAAY,6BAA6BmD,CAAQ,EAEnD,KAAK,kCAAkCnD,CAAW,CACpD,CACA,oBAAoBuB,EAAqB,CACvC,IAAM2H,EAAa,CAAC,EACdC,EAAe9I,GAAY,CAC3BA,GACFA,EAAS,QAAQzD,GAAWsM,EAAWtM,EAAQ,EAAE,EAAI,EAAI,CAE7D,EACA,OAAI2E,GACFA,EAAoB,QAAQ6H,GAAQ,CAClCD,EAAaC,EAAK,GAAG,EACrBD,EAAaC,EAAK,MAAM,EACxBD,EAAaC,EAAK,MAAM,CAC1B,CAAC,EAEIF,CACT,CACA,YAAYtM,EAASyM,EAAiBrJ,EAAamI,EAAa,CAC9D,IAAMmB,EAAe1M,EAAQ,uBACvB2M,EAAgB3M,EAAQ,kBAC9B,GAAI,CAAC2M,EACH,OAAO,KAAK,cAAc,WAAWD,EAAcnB,CAAW,EAEhE,IAAMqB,EAAmB,CAAC,EACpBC,EAAc,CAAC,EACrBH,EAAa,QAAQI,GAAO,CACtBL,EAAgBK,EAAI,EAAE,GAAK,CAAC1J,EAAY,QAAQ0J,CAAG,EACrDD,EAAY,KAAKC,CAAG,EAEpBF,EAAiBE,EAAI,EAAE,EAAI,EAE/B,CAAC,EACD,IAAMC,EAAsBJ,EAAc,OAAOxK,GAASyK,EAAiBzK,EAAM,EAAE,CAAC,EAC9E6K,EAAsB,CAACC,EAAUC,KAAS,CAC9C,WAAYA,EACZ,QAASD,CACX,GACME,EAAoBN,EAAY,IAAIG,CAAmB,EAAE,KAAK,CAACI,EAAGC,IAAM,KAAK,cAAc,gBAAgB9B,EAAa6B,EAAGC,CAAC,CAAC,EACnI,OAAO,KAAK,kBAAkB9B,EAAa4B,EAAmBJ,EAAoB,IAAIC,CAAmB,CAAC,EAAE,IAAI,CAAC,CAC/G,QAASC,CACX,IAAMA,CAAQ,CAChB,CAEA,kBAAkB1B,EAAa+B,EAAMC,EAAM,CACzC,IAAM9K,EAAM,CAAC,EACT9C,EAAI,EACJ6N,EAAI,EACR,KAAO7N,EAAI2N,EAAK,QAAUE,EAAID,EAAK,QACX,KAAK,cAAc,gBAAgBhC,EAAa+B,EAAK3N,CAAC,EAAG4N,EAAKC,CAAC,CAAC,EAClE,EAClB/K,EAAI,KAAK6K,EAAK3N,GAAG,CAAC,EAElB8C,EAAI,KAAK8K,EAAKC,GAAG,CAAC,EAGtB,KAAO7N,EAAI2N,EAAK,QACd7K,EAAI,KAAK6K,EAAK3N,GAAG,CAAC,EAEpB,KAAO6N,EAAID,EAAK,QACd9K,EAAI,KAAK8K,EAAKC,GAAG,CAAC,EAEpB,OAAO/K,CACT,CACA,mBAAmBzC,EAAS,CAC1B,GAAIwE,EAASxE,EAAQ,iBAAiB,EACpC,OAEF,IAAMyN,EAAazN,EAAQ,kBAC3B,QAAS,EAAI,EAAG,EAAIyN,EAAW,OAAQ,IAAK,CAC1C,IAAMtL,EAAQsL,EAAW,CAAC,EACpBC,EAAa,IAAM,EACnBC,EAAY,IAAM3N,EAAQ,kBAAkB,OAAS,EAC3DmC,EAAM,cAAcuL,CAAU,EAC9BvL,EAAM,aAAawL,CAAS,EAC5BxL,EAAM,cAAc,CAAC,CACvB,CACF,CACA,kCAAkCiB,EAAa,CAC7C,GAAI,CAAC,KAAK,IAAI,IAAI,sBAAsB,EACtC,OAEF,GAAI,KAAK,IAAI,IAAI,UAAU,EACzB,OAAA5E,EAAU,yJAAyJ,EAC5J,GAET,IAAM+H,EAAWvG,GAAW,CAC1B,KAAK,oCAAoCA,EAAQ,kBAAmB,EAAK,EACzEA,EAAQ,kBAAkB,QAAQmC,GAAS,CACrCA,EAAM,YAAY,GACpBoE,EAASpE,CAAK,CAElB,CAAC,CACH,EACIiB,GACFA,EAAY,oBAAoBpD,GAAWuG,EAASvG,CAAO,CAAC,CAEhE,CACA,oCAAoCyD,EAAUmK,EAAgB,CACxD,CAAC,KAAK,IAAI,IAAI,sBAAsB,GAAKpJ,EAASf,CAAQ,GAG9DA,EAAS,QAAQoK,GAAgB,EACN,KAAK,yBAAyB,oBAAoB,GAAK,CAAC,GAChE,QAAQC,GAAmB,CAC1C,IAAMC,EAAeD,EAAgB,UAAU,EAAE,aACjD,GAAI,OAAOC,GAAiB,SAAU,CACpC3N,EAAW,0FAA0F,EACrG,MACF,CACA,IAAM4N,EAAqBD,EACrBE,EAAiB,KAAK,YAAY,aAAaD,CAAkB,EAEvE,GAD2BC,IAAmBJ,EAAa,eAI3D,GAAID,EACFC,EAAa,cAAcC,EAAgB,MAAM,EAAG,MAAM,MACrD,CACL,IAAMI,EAAoBL,EAAa,0BAA0BI,CAAc,EAC3EC,GACFL,EAAa,cAAcC,EAAgB,MAAM,EAAGI,EAAkB,GAAG,CAE7E,CACF,CAAC,CACH,CAAC,CACH,CACF,EAGIC,GAAY,cAAcnN,CAAS,CACrC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,WAClB,CACA,UAAU5C,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,eAAiBA,EAAM,cAC9B,CACA,QAAQ0D,EAAQ,CACd,IAAMyJ,EAAc,KAAK,eAAe,eAAe,EACjDC,EAAatG,EAAQqG,CAAW,GAAKA,EAAY,OAAS,EAC1D6C,EAAY5C,GAActG,EAAQpD,EAAO,mBAAmB,GAKlE,KAAK,IAAI,IAAI,WAAW,EAClB4J,EAA2BH,EAAY,KAAK8C,GACvB,KAAK,IAAI,+BAA+B,EAExDA,EAAI,OAAO,UAAU,GAAKA,EAAI,OAAO,iBAAiB,EAExD,CAAC,CAACA,EAAI,OAAO,UAAU,EAAE,YACjC,EACD,KAAK,YAAY,KAAK9C,EAAaC,EAAY4C,EAAWtM,EAAO,oBAAqBA,EAAO,YAAa4J,CAAwB,CACpI,CACF,EAGI4C,GAAW,SAGXC,GAA+B,CACjC,QAASD,GACT,WAAY,gDACZ,SAAU,aACV,MAAO,CAACvN,GAAoB+H,GAAaqF,GAAWzE,GAAc4B,GAAaR,EAAgB,CACjG,EACI0D,GAA8B,CAChC,QAASF,GACT,WAAY,+CACZ,MAAO,CAACG,EAAqB,EAC7B,aAAc,CACZ,2BAAArG,GACA,0BAAAC,GACA,gBAAAC,GACA,uBAAAC,GACA,8BAAAC,GACA,gBAAAC,GACA,iBAAAC,GACA,sBAAAC,GACA,uBAAAC,GACA,yBAAAC,EACF,EACA,iBAAkB,CAAC0F,GAA8BG,EAAuB,CAC1E,EACIC,GAA2B,CAC7B,QAASL,GACT,WAAY,2CACZ,iBAAkB,CAACC,GAA8BC,EAA2B,CAC9E,EAGII,GAAc,cAAc5N,CAAS,CACvC,SAAS5C,EAAO,CACd,KAAK,MAAQA,CACf,CACA,YAAYyQ,EAAU,CACpB,IAAMC,EAAY,KAAK,wBAAwB,EAC/C,OAAID,GAAY,MAAQ,CAACA,EAAS,UAChCA,EAAW,KAAK,mBAAmB,GAE9BA,EAAS,QAAQ,GAAG,IAAM,GAAK,GAAGA,CAAQ,IAAIC,CAAS,GAAKD,CACrE,CACA,QAAQ/M,EAAQ,CACd,IAAMiN,EAAqB,KAAK,yBAAyBjN,CAAM,EAC/D,OAAO,KAAK,MAAM,eAAe,UAAUiN,EAAoBjN,CAAM,CACvE,CACA,oBAAqB,CACnB,MAAO,UAAU,KAAK,wBAAwB,CAAC,EACjD,CACF,EACIkN,GAA6B,KAAM,CACrC,YAAYC,EAAQ,CAClB,KAAK,aAAe,CAAC,EACrB,GAAM,CACJ,YAAAC,EACA,gBAAAhR,EACA,kBAAAiR,EACA,aAAAC,EACA,IAAApR,EACA,oBAAAqR,EACA,sBAAAC,EACA,2BAAAC,EACA,wBAAAC,CACF,EAAIP,EACJ,KAAK,YAAcC,EACnB,KAAK,gBAAkBhR,EACvB,KAAK,kBAAoBiR,EACzB,KAAK,aAAeC,EACpB,KAAK,IAAMpR,EACX,KAAK,oBAAsBqR,EAC3B,KAAK,sBAAwBC,EAC7B,KAAK,2BAA6BC,EAClC,KAAK,wBAA0BC,CACjC,CACA,QAAQC,EAAiB,CACvB,KAAK,aAAeA,EAAgB,OAAO/K,GAAO,CAAC,CAACA,EAAI,UAAU,EAAE,YAAY,CAClF,CACA,mBAAmBgL,EAAQ,CAEzB,OADc,KAAK,cAAc,KAAK,sBAAuBA,CAAM,GACnD,EAClB,CACA,oBAAoBA,EAAQxL,EAAOyL,EAAqBC,EAAMvP,EAAM,CAElE,IAAMwP,GAAS,CADS,KAAK,IAAI,IAAI,sBAAsB,GACxBxP,EAAK,SAAW,KAAK,6BAA6BA,EAAMqP,EAAQxL,CAAK,EAAI,KAAK,wBAAwBwL,EAAQrP,CAAI,EAAI,KAAK,aAAa,SAASqP,EAAQrP,CAAI,EAShM,OARuB,KAAK,YAAY,CACtC,oBAAAsP,EACA,QAAStP,EACT,OAAAqP,EACA,MAAAG,EACA,oBAAqB,KAAK,oBAC1B,KAAAD,CACF,CAAC,CAEH,CACA,6BAA6BvP,EAAMqP,EAAQI,EAAoB,CAE7D,GAAI,EADgBzP,GAAQA,EAAK,OAE/B,MAAO,GAGT,GADgC,KAAK,aAAa,QAAQqP,CAAM,IAChC,GAAI,CAIlC,GAHIrP,EAAK,YAAYqP,EAAO,MAAM,CAAC,GAAK,MAGpC,KAAK,IAAI,eAAe,YAAY,GAAKrP,EAAK,MAChD,MAAO,GAET,GAAIA,EAAK,QAAUA,EAAK,QAAU,GAAI,CACpC,IAAM0P,EAASL,EAAO,UAAU,EAEhC,OADoBK,GAAU,MAAQA,EAAO,eAAiB,IACxCA,EAAO,eAAiB,KAAK,gBAAgB,mBAAmB,EAAE,CAAC,EAAE,MAAM,CACnG,CACF,CACA,IAAMC,EAAsB,KAAK,IAAI,oBAAoB,KAAK,YAAY,YAAY,CAAC,EACvF,OAAOF,IAAuB,GAAKE,CACrC,CACA,cAAczJ,EAAUmJ,EAAQ,CAC9B,OAAInJ,EACKA,EAAS,KAAK,IAAI,oBAAoB,CAC3C,OAAAmJ,CACF,CAAC,CAAC,EAEG,KAAK,kBAAkB,wBAAwBA,EAAQ,MAAO,EAAI,CAC3E,CACA,wBAAwBA,EAAQrP,EAAM,CACpC,GAAI,KAAK,wBACP,OAAO,KAAK,wBAAwB,KAAK,IAAI,oBAAoB,CAC/D,OAAAqP,EACA,KAAArP,CACF,CAAC,CAAC,EAEJ,IAAM4P,EAAa,KAAK,IAAI,IAAI,UAAU,EACpCC,EAAmC,KAAK,IAAI,IAAI,gCAAgC,EAChFC,EAAmBC,GAAS,CAChC,GAAIH,GAAcC,EAChB,OAAOE,EAAM,IAEf,IAAMP,EAAQO,EAAM,YAAYV,EAAO,MAAM,CAAC,EAC9C,MAAI,CAACG,GAAS,CAACO,EAAM,gBAAkBA,EAAM,eAAe,UAAU,EAAE,6BAA+B,GAC9FP,EAEF,KAAK,aAAa,YAAYO,EAAM,eAAgBA,EAAOP,CAAK,GAAKA,CAC9E,EACMQ,EAAWhQ,EAAK,OAChBiQ,EAAO,CAACH,EAAiB9P,CAAI,CAAC,EACpC,GAAI,CAAC,KAAK,IAAI,uBAAuB,EACnC,KAAOA,EAAK,QACVA,EAAOA,EAAK,OACZiQ,EAAK,KAAKH,EAAiB9P,CAAI,CAAC,EAGpC,IAAMkQ,EAAaD,EAAK,QAAQ,EAAE,KAAK,MAAM,EAC7C,OAAOD,EAAW,SAASE,CAAU,GAAKA,CAC5C,CACA,YAAYzO,EAAQ,CAClB,GAAM,CACJ,oBAAA6N,EACA,QAAA3P,EACA,OAAA0P,EACA,MAAAG,EACA,oBAAAR,EACA,KAAAO,CACF,EAAI9N,EACJ,OAAIuN,EACK,CACL,MAAOA,EAAoB,KAAK,IAAI,oBAAoB,CACtD,oBAAAM,EACA,OAAAD,EACA,KAAM1P,EACN,MAAA6P,EACA,KAAAD,EACA,WAAYY,GAAgB,KAAK,aAAa,WAAWd,EAAQ1P,EAASwQ,EAAc,KAAK,aAAa,SAASd,EAAQ1P,CAAO,CAAC,EACnI,YAAayQ,GAAiB,KAAK,aAAa,YAAYf,EAAQ1P,EAASyQ,CAAa,GAAKA,CACjG,CAAC,CAAC,GAAK,EACT,EAEEf,EAAO,UAAU,EAAE,6BAA+B,GAC7C,CACL,MAAOG,GAAS,GAChB,eAAgB,KAAK,aAAa,YAAYH,EAAQ1P,EAAS6P,CAAK,CACtE,EAEK,CACL,MAAOA,GAAS,EAClB,CACF,CACF,EACIa,GAAa,KAAM,CACrB,OAAO,SAAS7B,EAAU8B,EAAS,CACjC,IAAMC,EAAM,SAAS,aAAe,OACpC,GAAI,CAACA,EAAK,CACRpS,EAAU,6DAA6D,EACvE,MACF,CACA,IAAMqS,EAAU,SAAS,cAAc,GAAG,EACpCC,EAAMF,EAAI,IAAI,gBAAgBD,CAAO,EAC3CE,EAAQ,aAAa,OAAQC,CAAG,EAChCD,EAAQ,aAAa,WAAYhC,CAAQ,EACzCgC,EAAQ,MAAM,QAAU,OACxB,SAAS,KAAK,YAAYA,CAAO,EACjCA,EAAQ,cAAc,IAAI,WAAW,QAAS,CAC5C,QAAS,GACT,WAAY,GACZ,KAAMD,CACR,CAAC,CAAC,EACF,SAAS,KAAK,YAAYC,CAAO,EACjCD,EAAI,WAAW,IAAM,CACnBA,EAAI,IAAI,gBAAgBE,CAAG,CAC7B,EAAG,CAAC,CACN,CACF,EACIC,GAAiB;AAAA,EACjBC,GAAwB,cAAchC,EAA2B,CACnE,YAAYC,EAAQ,CAClB,MAAMA,CAAM,EACZ,KAAK,YAAc,GACnB,KAAK,OAAS,GACd,GAAM,CACJ,eAAAgC,EACA,gBAAAC,CACF,EAAIjC,EACJ,KAAK,eAAiBgC,EACtB,KAAK,gBAAkBC,CACzB,CACA,iBAAiBP,EAAS,CACnBA,IAGD,OAAOA,GAAY,UAChB,SAAS,KAAKA,CAAO,GACxB,KAAK,aAAa,EAEpBA,EAAUA,EAAQ,QAAQ,SAAUI,EAAc,EAClD,KAAK,QAAUJ,GAEfA,EAAQ,QAAQ7D,GAAO,CACrB,KAAK,aAAa,EAClBA,EAAI,QAAQ,CAACqE,EAAMjN,IAAU,CACvBA,IAAU,IACZ,KAAK,QAAU,KAAK,iBAEtB,KAAK,QAAU,KAAK,YAAYiN,EAAK,KAAK,OAAS,EAAE,EACjDA,EAAK,aACP,KAAK,iBAAiBA,EAAK,WAAW,CAE1C,CAAC,CACH,CAAC,EAEL,CACA,wBAAyB,CACvB,YAAK,aAAa,EACX,CACL,SAAU,KAAK,6BAA6B,KAAK,IAAI,CACvD,CACF,CACA,6BAA6BC,EAAaC,EAAQnN,EAAOoN,EAAM,CACzDpN,GAAS,IACX,KAAK,QAAU,KAAK,iBAEtB,KAAK,QAAU,KAAK,YAAYmN,CAAM,EACtC,KAAK,iBAAiBC,CAAI,CAC5B,CACA,iBAAiBC,EAAO,CACtB,QAAS5R,EAAI,EAAGA,GAAK4R,EAAO5R,IAC1B,KAAK,QAAU,KAAK,gBAAkB,KAAK,YAAY,EAAE,CAE7D,CACA,gBAAiB,CACf,YAAK,aAAa,EACX,CACL,SAAU,KAAK,qBAAqB,KAAK,IAAI,CAC/C,CACF,CACA,qBAAqB+P,EAAQxL,EAAO,CAC9BA,GAAS,IACX,KAAK,QAAU,KAAK,iBAEtB,KAAK,QAAU,KAAK,YAAY,KAAK,mBAAmBwL,CAAM,CAAC,CACjE,CACA,cAAe,CACb,YAAK,aAAa,EACX,CACL,SAAU,KAAK,mBAAmB,KAAK,IAAI,CAC7C,CACF,CACA,mBAAmBA,EAAQxL,EAAO7D,EAAM,CAClC6D,GAAS,IACX,KAAK,QAAU,KAAK,iBAEtB,IAAMsN,EAAe,KAAK,oBAAoB9B,EAAQxL,EAAOA,EAAO,MAAO7D,CAAI,EAC/E,KAAK,QAAU,KAAK,YAAYmR,EAAa,gBAAkBA,EAAa,KAAK,CACnF,CACA,YAAY3B,EAAO,CACjB,GAAI,KAAK,eACP,OAAOA,EAET,GAAIA,GAAU,KACZ,MAAO,KAET,IAAI4B,EACJ,OAAI,OAAO5B,GAAU,SACnB4B,EAAc5B,EACL,OAAOA,EAAM,UAAa,WACnC4B,EAAc5B,EAAM,SAAS,GAE7BrR,EAAU,0CAA0C,EACpDiT,EAAc,IAGT,IADcA,EAAY,QAAQ,KAAM,IAAI,EACvB,GAC9B,CACA,OAAQ,CACN,OAAO,KAAK,MACd,CACA,cAAe,CACR,KAAK,cACR,KAAK,QAAUV,IAEjB,KAAK,YAAc,EACrB,CACF,EACIW,GAAa,cAAc9C,EAAY,CACzC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,YAClB,CACA,UAAUxQ,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,gBAAkBA,EAAM,gBAC7B,KAAK,aAAeA,EAAM,aAC1B,KAAK,eAAiBA,EAAM,cAC9B,CACA,eAAgB,CACd,KAAK,SAAS,CACZ,eAAgB,KAAK,eACrB,IAAK,KAAK,GACZ,CAAC,CACH,CACA,gBAAgB0D,EAAQ,CACtB,IAAM6P,EAAa,KAAK,IAAI,IAAI,wBAAwB,EACxD,OAAO,OAAO,OAAO,CAAC,EAAGA,EAAY7P,CAAM,CAC7C,CACA,OAAO8P,EAAY,CACjB,GAAI,KAAK,mBAAmB,EAAG,CAC7BpT,EAAU,oEAAoE,EAC9E,MACF,CACA,IAAMqT,EAAe,KAAK,gBAAgBD,CAAU,EAC9C1R,EAAO,KAAK,QAAQ2R,CAAY,EAChCC,EAAe,IAAI,KAAK,CAAC,SAAU5R,CAAI,EAAG,CAC9C,KAAM,YACR,CAAC,EACK2O,EAAW,OAAOgD,EAAa,UAAa,WAAaA,EAAa,SAAS,KAAK,IAAI,oBAAoB,CAAC,EAAIA,EAAa,SACpInB,GAAW,SAAS,KAAK,YAAY7B,CAAQ,EAAGiD,CAAY,CAC9D,CACA,gBAAgBhQ,EAAQ,CACtB,KAAK,OAAOA,CAAM,CACpB,CACA,aAAaA,EAAQiQ,EAAoB,GAAO,CAC9C,IAAMF,EAAeE,EAAoB,OAAO,OAAO,CAAC,EAAGjQ,CAAM,EAAI,KAAK,gBAAgBA,CAAM,EAChG,OAAO,KAAK,QAAQ+P,CAAY,CAClC,CACA,yBAA0B,CACxB,MAAO,KACT,CACA,yBAAyB/P,EAAQ,CAC/B,GAAM,CACJ,YAAAoN,EACA,kBAAAC,EACA,gBAAAjR,EACA,aAAAkR,EACA,IAAApR,CACF,EAAI,KACE,CACJ,oBAAAqR,EACA,sBAAAC,EACA,2BAAAC,EACA,wBAAAC,EACA,eAAAyB,EACA,gBAAAC,CACF,EAAIpP,EACJ,OAAO,IAAIkP,GAAsB,CAC/B,YAAA9B,EACA,kBAAAC,EACA,gBAAAjR,EACA,aAAAkR,EACA,IAAApR,EACA,oBAAqBqR,GAAuB,OAC5C,sBAAuBC,GAAyB,OAChD,2BAA4BC,GAA8B,OAC1D,wBAAyBC,GAA2B,OACpD,eAAgByB,GAAkB,GAClC,gBAAiBC,GAAmB,GACtC,CAAC,CACH,CACA,oBAAqB,CACnB,OAAO,KAAK,IAAI,IAAI,mBAAmB,CACzC,CACF,EACA,SAASc,GAAa5T,EAAO0D,EAAQ,CACnC,OAAO1D,EAAM,YAAY,aAAa0D,CAAM,CAC9C,CACA,SAASmQ,GAAgB7T,EAAO0D,EAAQ,CACtC1D,EAAM,YAAY,gBAAgB0D,CAAM,CAC1C,CAOA,IAAIoQ,GAAiB,cAAcC,CAAS,CAC1C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,gBAClB,CACA,UAAUC,EAAO,CACf,KAAK,mBAAqBA,EAAM,mBAChC,KAAK,YAAcA,EAAM,YACzB,KAAK,kBAAoBA,EAAM,kBAC/B,KAAK,SAAWA,EAAM,SACtB,KAAK,eAAiBA,EAAM,eAC5B,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,cAAgBA,EAAM,cAC3B,KAAK,eAAiBA,EAAM,cAC9B,CACA,UAAUC,EAAwBC,EAAS,CAAC,EAAG,CAC7C,GAAM,CACJ,WAAAC,EACA,WAAAC,EACA,cAAAC,CACF,EAAIH,EACEI,EAAkB,KAAK,mBAAmBH,EAAYE,EAAeD,CAAU,EAIrF,OAHuBG,GAEvB,KAAK,eAAeD,CAAe,EAAG,KAAK,eAAeJ,CAAM,EAAG,KAAK,mBAAmBA,EAAQI,CAAe,EAAG,KAAK,cAAcJ,EAAQI,CAAe,EAAG,KAAK,qBAAqBJ,EAAQI,CAAe,EAAG,KAAK,YAAYJ,EAAQI,CAAe,EAAG,KAAK,wBAAwBJ,EAAQI,CAAe,EAAG,KAAK,cAAcJ,CAAM,CAAC,EAC5TD,CAAsB,EAAE,MAAM,CACtD,CACA,WAAWA,EAAwBC,EAAQI,EAAiBE,EAAM,CAChE,IAAMC,EAAaP,EAAO,qBAAuB,IAAM,IACjDQ,EAA0B,KAAK,IAAI,IAAI,2BAA2B,EAClEC,EAAgC,KAAK,IAAI,IAAI,iCAAiC,EAE9EC,EADoBV,EAAO,cAAgB,MACM,CAAC,CAACA,EAAO,aAC1DW,EAAkB,KAAK,IAAI,IAAI,sBAAsB,GAAK,CAACD,EAC3DE,EAAa,KAAK,YAAY,YAAY,EAAIN,EAAK,UAAY,CAACA,EAAK,MACrEO,EAAW,CAAC,CAACP,EAAK,OAClBQ,EAAwBL,GAAiCH,EAAK,UAC9DS,EAAyBT,EAAK,mBAAqB,GAAKA,EAAK,oBAAoB,SAAW,IAAME,GAA2BM,GAWnI,GAVI,CAACF,GAAc,CAACC,IAAab,EAAO,eAAiBe,GAA0BJ,IAAoBX,EAAO,cAAgB,CAACM,EAAK,WAAW,GAAKN,EAAO,eAAiBM,EAAK,YAAc,OAASN,EAAO,kBAAoBM,EAAK,YAAc,UAG/NA,EAAK,QAAU,IAChB,CAACM,GAAc,CAACC,GAGXN,EAAW,KAAK,IAAI,oBAAoB,CACjE,KAAAD,CACF,CAAC,CAAC,EAEA,OAEF,IAAMU,EAAiBjB,EAAuB,aAAaO,CAAI,EAI/D,GAHAF,EAAgB,QAAQ,CAACa,EAAQC,IAAU,CACzCF,EAAe,SAASC,EAAQC,EAAOZ,CAAI,CAC7C,CAAC,EACGN,EAAO,yBAA0B,CACnC,IAAMmB,EAAUnB,EAAO,yBAAyB,KAAK,IAAI,oBAAoB,CAC3E,KAAAM,CACF,CAAC,CAAC,EACEa,GACFpB,EAAuB,iBAAiBoB,CAAO,CAEnD,CACF,CACA,cAAcnB,EAAQ,CACpB,OAAOD,GAA0B,CAC/B,IAAMqB,EAAgBpB,EAAO,cAC7B,OAAIoB,GACFrB,EAAuB,iBAAiBqB,CAAa,EAEhDrB,CACT,CACF,CACA,eAAeC,EAAQ,CACrB,OAAOD,GAA0B,CAC/B,IAAMsB,EAAiBrB,EAAO,eAC9B,OAAIqB,GACFtB,EAAuB,iBAAiBsB,CAAc,EAEjDtB,CACT,CACF,CACA,eAAeK,EAAiB,CAC9B,OAAOL,IACLA,EAAuB,QAAQK,CAAe,EACvCL,EAEX,CACA,mBAAmBC,EAAQI,EAAiB,CAC1C,OAAOL,GAA0B,CAC/B,GAAI,CAACC,EAAO,uBAAwB,CAClC,IAAMsB,EAAY,IAAIC,GAChBC,EAAkB,KAAK,mBAAmB,aAAa,CAC3D,QAASpB,EACT,UAAAkB,EACA,OAAQ,KACR,sBAAuB,EACzB,CAAC,EACD,KAAK,2BAA2BE,EAAiBzB,EAAwBC,EAAO,0BAA0B,CAC5G,CACA,OAAOD,CACT,CACF,CACA,cAAcC,EAAQI,EAAiB,CACrC,OAAOL,GAA0B,CAC/B,GAAI,CAACC,EAAO,kBAAmB,CAC7B,IAAMyB,EAAkB1B,EAAuB,eAAe,EAC9DK,EAAgB,QAAQ,CAACa,EAAQC,IAAU,CACzCO,EAAgB,SAASR,EAAQC,EAAO,MAAM,CAChD,CAAC,CACH,CACA,OAAOnB,CACT,CACF,CACA,qBAAqBC,EAAQI,EAAiB,CAC5C,OAAOL,GAA0B,CAC/B,IAAM2B,EAAa,KAAK,WAAW,KAAK,KAAM3B,EAAwBC,EAAQI,CAAe,EAC7F,OAAIJ,EAAO,aACTA,EAAO,aAAa,OAAO2B,GAAYA,EAAS,YAAc,KAAK,EAAE,KAAK,CAACC,EAAGC,IAAMD,EAAE,SAAWC,EAAE,QAAQ,EAAE,IAAIF,GAAY,KAAK,eAAe,gBAAgBA,EAAS,QAAQ,CAAC,EAAE,QAAQD,CAAU,EAEvM,KAAK,eAAe,oBAAoBA,CAAU,EAE7C3B,CACT,CACF,CACA,YAAYC,EAAQI,EAAiB,CACnC,OAAOL,GAA0B,CAC/B,IAAM+B,EAAW,KAAK,SAChBC,EAAeD,EAAS,QAAQ,EAChCE,EAAYD,IAAiB,aAC7BE,EAAYF,IAAiB,aAC7BG,EAA+B,CAACF,GAAahC,EAAO,aACpD0B,EAAa,KAAK,WAAW,KAAK,KAAM3B,EAAwBC,EAAQI,CAAe,EACvF,CACJ,aAAA+B,EAAe,mBACjB,EAAInC,EACJ,GAAIA,EAAO,aACTA,EAAO,aAAa,OAAO2B,GAAYA,EAAS,WAAa,IAAI,EAAE,KAAK,CAACC,EAAGC,IAAMD,EAAE,SAAWC,EAAE,QAAQ,EAAE,IAAIF,GAAYG,EAAS,OAAOH,EAAS,QAAQ,CAAC,EAAE,QAAQD,CAAU,UACxK,KAAK,YAAY,YAAY,EAClCM,EACFF,EAAS,iBAAiBJ,EAAY,EAAI,EACjCO,EACTH,EAAS,8BAA8BJ,EAAY,EAAI,EAEvDI,EAAS,YAAYJ,CAAU,UAG7B1B,EAAO,sBAAwBkC,EAA8B,CAC/D,IAAME,EAAgB,KAAK,iBAAiB,iBAAiB,EAC7D,KAAK,qBAAqBA,CAAa,EACvCA,EAAc,QAAQV,CAAU,CAClC,MACMS,IAAiB,MACnBL,EAAS,YAAYJ,CAAU,EACtBM,GAEAC,EADTH,EAAS,8BAA8BJ,EAAY,EAAI,EAIvDI,EAAS,YAAYJ,CAAU,EAIrC,OAAO3B,CACT,CACF,CACA,qBAAqBsC,EAAM,CACzB,IAAMC,EAAc,KAAK,eAAe,eAAe,EACjDC,EAAe,CAACC,EAAMC,IACtBD,EAAK,UAAY,MAAQC,EAAK,UAAY,KACrCD,EAAK,SAAWC,EAAK,SAE1BD,EAAK,QAAUC,EAAK,MAClBD,EAAK,QAAQ,KAAOC,EAAK,QAAQ,GAC5B,KAAK,cAAc,gBAAgBH,EAAa,CACrD,QAASE,EACT,WAAYA,EAAK,UAAY,EAC/B,EAAG,CACD,QAASC,EACT,WAAYA,EAAK,UAAY,EAC/B,CAAC,EAEIF,EAAaC,EAAK,OAAQC,EAAK,MAAM,EAE1CD,EAAK,MAAQC,EAAK,MACbF,EAAaC,EAAK,OAAQC,CAAI,EAEhCF,EAAaC,EAAMC,EAAK,MAAM,EAEvCJ,EAAK,KAAKE,CAAY,CACxB,CACA,wBAAwBvC,EAAQI,EAAiB,CAC/C,OAAOL,GAA0B,CAC/B,IAAM2B,EAAa,KAAK,WAAW,KAAK,KAAM3B,EAAwBC,EAAQI,CAAe,EAC7F,OAAIJ,EAAO,aACTA,EAAO,aAAa,OAAO2B,GAAYA,EAAS,YAAc,QAAQ,EAAE,KAAK,CAACC,EAAGC,IAAMD,EAAE,SAAWC,EAAE,QAAQ,EAAE,IAAIF,GAAY,KAAK,eAAe,mBAAmBA,EAAS,QAAQ,CAAC,EAAE,QAAQD,CAAU,EAE7M,KAAK,eAAe,uBAAuBA,CAAU,EAEhD3B,CACT,CACF,CACA,mBAAmBE,EAAa,GAAOE,EAAgB,GAAOD,EAAY,CACxE,IAAMwC,EAAc,KAAK,YAAY,YAAY,EACjD,GAAIxC,GAAcA,EAAW,OAC3B,OAAO,KAAK,YAAY,eAAeA,CAAU,EAEnD,IAAMyC,EAAa,KAAK,IAAI,IAAI,UAAU,EACtCvC,EAAkB,CAAC,EACvB,OAAIH,GAAc,CAACyC,EACjBtC,EAAkB,KAAK,YAAY,QAAQ,EAE3CA,EAAkB,KAAK,mBAAmB,WAAW,EAEnDD,GAAiB,CAACwC,IACpBvC,EAAkBA,EAAgB,OAAOa,GAAUA,EAAO,SAAS,IAAM2B,EAAoB,GAExFxC,CACT,CACA,2BAA2BoB,EAAiBzB,EAAwB8C,EAA4B,CAC9F,IAAMC,EAA6B,CAAC,EACpCtB,EAAgB,QAAQuB,GAAoB,CAC1C,IAAMC,EAAcD,EACfC,EAAY,aAGjBA,EAAY,YAAY,EAAE,QAAQC,GAAMH,EAA2B,KAAKG,CAAE,CAAC,CAC7E,CAAC,EACGzB,EAAgB,OAAS,GAAK0B,EAAc1B,EAAgB,CAAC,CAAC,GAChE,KAAK,kBAAkBzB,EAAwByB,EAAiBqB,CAA0B,EAExFC,GAA8BA,EAA2B,OAAS,GACpE,KAAK,2BAA2BA,EAA4B/C,EAAwB8C,CAA0B,CAElH,CACA,kBAAkB9C,EAAwByB,EAAiBqB,EAA4B,CACrF,IAAMpB,EAAkB1B,EAAuB,uBAAuB,EAClEoD,EAAc,EAClB3B,EAAgB,QAAQuB,GAAoB,CAC1C,IAAMC,EAAcD,EAChBK,EACAP,EACFO,EAAOP,EAA2B,KAAK,IAAI,oBAAoB,CAC7D,YAAAG,CACF,CAAC,CAAC,EAEFI,EAAO,KAAK,kBAAkB,6BAA6BJ,EAAa,QAAQ,EAElF,IAAMK,EAAyBL,EAAY,eAAe,EAAE,OAAO,CAACM,EAAmBC,EAAeC,EAAYC,IAAQ,CACxH,IAAIC,EAAYC,EAAML,CAAiB,EAEvC,OADkBC,EAAc,mBAAmB,IAAM,QAK9C,CAACG,GAAaA,EAAU,CAAC,GAAK,QACvCA,EAAY,CAACF,CAAU,EACvBF,EAAkB,KAAKI,CAAS,GAL5BA,GAAaA,EAAU,CAAC,GAAK,OAC/BA,EAAU,CAAC,EAAIF,EAAa,GAM5BA,IAAeC,EAAI,OAAS,GAAKC,GAAaA,EAAU,CAAC,GAAK,OAChEA,EAAU,CAAC,EAAIF,GAEVF,CACT,EAAG,CAAC,CAAC,EACL7B,EAAgB,SAASuB,EAAaI,GAAQ,GAAID,IAAeH,EAAY,eAAe,EAAE,OAAS,EAAGK,CAAsB,CAClI,CAAC,CACH,CACF,EACIO,GAAW,SACXC,GAAsB,CACxB,QAASD,GACT,WAAY,qCACZ,MAAO,CAACE,GAAYlE,EAAc,CACpC,EACImE,GAAqB,CACvB,QAASH,GACT,WAAY,oCACZ,aAAc,CACZ,aAAAI,GACA,gBAAAC,EACF,EACA,iBAAkB,CAACJ,EAAmB,CACxC,EACIK,GAAkB,CACpB,QAASN,GACT,WAAY,gCACZ,iBAAkB,CAACC,GAAqBE,EAAkB,CAC5D,EAwwOr9F,IAAIC,GAAgB,cAAcC,EAAa,CAC7C,UAAUC,EAAO,CACf,KAAK,MAAQA,CACf,CACA,YAAYC,EAAIC,EAAaC,EAAQ,CACnC,MAAMF,CAAE,EACR,KAAK,YAAcC,EACnB,KAAK,OAASC,EACd,KAAK,SAAWF,EAAKE,EAAO,UAC5B,KAAK,OAAS,KAAK,SAAWA,EAAO,SACvC,CACA,eAAgB,CACd,KAAK,eAAe,CACtB,CACA,mBAAoB,CAClB,MAAO,CACL,GAAI,GAAK,KAAK,MAAM,EACpB,MAAO,CACL,YAAa,KAAK,MAAM,EACxB,SAAU,KAAK,YAAY,EAC3B,OAAQ,KAAK,UAAU,EACvB,WAAY,KAAK,SAAS,CAC5B,CACF,CACF,CACA,aAAaC,EAASC,EAAMC,EAAO,CAC7BC,EAAQF,CAAI,EACdD,EAAQ,aAAaC,EAAMC,EAAM,SAAS,CAAC,EAE3CF,EAAQ,aAAa,OAAQ,MAAM,CAEvC,CACA,oBAAqB,CACnB,IAAMD,EAAS,KAAK,iBAAiB,EACrC,GAAIK,EAAS,KAAK,OAAO,WAAW,OAAO,EAAG,CAC5CC,EAAU,sCAAsC,EAChD,MACF,CACA,OAAO,WAAW,IAAM,CACtB,KAAK,OAAO,WAAW,QAAQN,CAAM,CACvC,EAAG,CAAC,CACN,CACA,mBAAoB,CAAC,CACrB,kBAAmB,CAUjB,MATe,CACb,SAAU,KAAK,YAAY,EAC3B,OAAQ,KAAK,UAAU,EACvB,gBAAiB,KAAK,WAAW,KAAK,KAAM,KAAK,WAAW,CAAC,EAC7D,aAAc,KAAK,eAAe,KAAK,KAAM,KAAK,WAAW,CAAC,EAC9D,UAAW,KAAK,OAAO,UACvB,YAAa,KAAK,OAAO,YACzB,QAAS,KAAK,IAAI,oBAAoB,EAAE,OAC1C,CAEF,CACA,YAAYO,EAAUC,EAAUC,EAAU,CACxC,KAAK,SAAS,QAAQ,CAACR,EAASE,IAAU,CACvB,KAAK,SAAWA,EAClBM,GACbF,EAASN,EAASO,EAAS,KAAK,CAAC,CAErC,CAAC,CACH,CACA,iBAAkB,CAChB,OAAO,KAAK,YACd,CACA,OAAOE,EAAUC,EAAwB,GAAO,CACzCA,IACH,KAAK,aAAe,KAAK,OAAO,qBAAqB,KAAK,GAE5D,IAAMC,EAAaF,EAAW,KAAK,SACnC,OAAO,KAAK,SAASE,CAAU,CACjC,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,WAAY,CACV,OAAO,KAAK,MACd,CAEA,gBAAiB,CACf,KAAK,SAAW,CAAC,EACjB,QAASC,EAAI,EAAGA,EAAI,KAAK,OAAO,UAAWA,IAAK,CAC9C,IAAMH,EAAW,KAAK,SAAWG,EAC3BZ,EAAU,IAAIa,GAAQ,KAAK,KAAK,EACtCb,EAAQ,aAAa,KAAK,OAAO,SAAS,EAC1CA,EAAQ,QAAU,EAClBA,EAAQ,YAAYS,CAAQ,EAC5BT,EAAQ,UAAU,KAAK,OAAO,UAAYS,CAAQ,EAClD,KAAK,SAAS,KAAKT,CAAO,CAC5B,CACF,CACA,oBAAoBD,EAAQ,CAC1B,KAAK,SAAS,QAAQ,CAACC,EAASE,IAAU,CACxC,IAAMD,EAAOF,EAAO,QAAUA,EAAO,QAAQG,CAAK,EAAI,OAClD,CAACF,EAAQ,IAAMA,EAAQ,iBAAmBC,IAC5C,KAAK,SAASC,CAAK,EAAI,IAAIW,GAAQ,KAAK,KAAK,EAC7C,KAAK,SAASX,CAAK,EAAE,YAAYF,EAAQ,QAAQ,EACjD,KAAK,SAASE,CAAK,EAAE,UAAUF,EAAQ,MAAM,EAC7C,KAAK,SAASE,CAAK,EAAE,aAAaF,EAAQ,SAAS,EACnDA,EAAQ,uBAAuB,GAEjC,KAAK,aAAa,KAAK,SAASE,CAAK,EAAGD,EAAM,KAAK,SAAWC,CAAK,CACrE,CAAC,EACD,IAAMY,EAAgBf,EAAO,UAAY,MAAQA,EAAO,UAAY,EAAIA,EAAO,SAAW,OAC1F,KAAK,YAAY,WAAW,KAAMe,CAAa,CACjD,CACA,SAAU,CACR,KAAK,SAAS,QAAQd,GAAW,CAC/BA,EAAQ,uBAAuB,CACjC,CAAC,EACD,MAAM,QAAQ,CAChB,CACF,EACIe,GAA2B,EAC3BC,GAAgB,cAAcC,CAAS,CACzC,YAAYlB,EAAQ,CAClB,MAAM,EACN,KAAK,kBAAoB,GACzB,KAAK,OAAS,CAAC,EACf,KAAK,WAAa,EAClB,KAAK,SAAWA,EAAO,gBACvB,KAAK,OAASA,CAChB,CACA,UAAUH,EAAO,CACf,KAAK,YAAcA,EAAM,YACzB,KAAK,aAAeA,EAAM,YAC5B,CAIA,OAAOa,EAAUS,EAAiB,GAAO,CACvC,IAAMC,EAAU,KAAK,MAAMV,EAAW,KAAK,OAAO,SAAS,EACvDW,EAAQ,KAAK,OAAOD,CAAO,EAC/B,GAAI,CAACC,EAAO,CACV,GAAIF,EACF,OAEFE,EAAQ,KAAK,YAAYD,CAAO,CAClC,CACA,OAAOC,EAAM,OAAOX,CAAQ,CAC9B,CACA,YAAYY,EAAa,CACvB,IAAMC,EAAW,KAAK,WAAW,IAAI5B,GAAc2B,EAAa,KAAM,KAAK,MAAM,CAAC,EAClF,YAAK,OAAOC,EAAS,MAAM,CAAC,EAAIA,EAChC,KAAK,aACL,KAAK,oBAAoBA,CAAQ,EACjC,KAAK,OAAO,mBAAmB,SAASA,CAAQ,EACzCA,CACT,CAKA,cAAe,CAEb,GADyB,KAAK,YAAc,EACtB,CACpB,KAAK,WAAW,EAChB,MACF,CACA,KAAK,iBAAiB,EAAE,QAAQF,GAASA,EAAM,sBAAsB,CAAC,EACtE,KAAK,OAAO,mBAAmB,iBAAiB,CAClD,CACA,SAAU,CACR,KAAK,iBAAiB,EAAE,QAAQA,GAAS,KAAK,aAAaA,CAAK,CAAC,EACjE,MAAM,QAAQ,CAChB,CACA,aAAc,CACZ,OAAO,KAAK,QACd,CACA,qBAAsB,CACpB,OAAO,KAAK,iBACd,CAEA,WAAWA,EAAOG,EAAS,CACpB,KAAK,QAAQ,IAGd,KAAK,IAAI,IAAI,OAAO,GACtBC,GAAK,wCAAwCJ,EAAM,MAAM,CAAC,eAAeG,CAAO,EAAE,EAEpF,KAAK,cAAcH,EAAOG,CAAO,EACjC,KAAK,eAAe,EACtB,CACA,oBAAoBE,EAAgB,CAClC,IAAMC,EAAmB,KAAK,iBAAiB,EAAE,OAAOC,GAAKA,GAAKF,CAAc,EAC1EG,EAAyB,CAACC,EAAGF,IAAMA,EAAE,gBAAgB,EAAIE,EAAE,gBAAgB,EACjFH,EAAiB,KAAKE,CAAsB,EAC5C,IAAME,EAAoB,KAAK,OAAO,iBAAmB,EACnDC,EAAeD,EAAoB,KAAK,OAAO,iBAAmB,EAAI,KACtEE,EAAoBjB,GAA2B,EACrDW,EAAiB,QAAQ,CAACN,EAAOlB,IAAU,CACzC,IAAM+B,EAAyBb,EAAM,SAAS,IAAM,gBAAkBlB,GAAS8B,EACzEE,EAAwBJ,EAAoB5B,GAAS6B,EAAe,GAC1E,GAAIE,GAA0BC,EAAuB,CAInD,GAHI,KAAK,0BAA0Bd,CAAK,GAGpC,KAAK,eAAeA,CAAK,EAC3B,OAEF,KAAK,qBAAqBA,CAAK,CACjC,CACF,CAAC,CACH,CACA,eAAeA,EAAO,CACpB,IAAMe,EAAc,KAAK,aAAa,8BAA8B,EAIpE,GAHI,CAACA,GAGDA,EAAY,WAAa,KAC3B,MAAO,GAET,IAAMC,EAAkBhB,EAAM,YAAY,EACpCiB,EAAgBjB,EAAM,UAAU,EAEtC,OADiBe,EAAY,UAAYC,GAAmBD,EAAY,SAAWE,CAErF,CACA,0BAA0BjB,EAAO,CAC/B,IAAMkB,EAAalB,EAAM,YAAY,EAC/BmB,EAAWnB,EAAM,UAAU,EAAI,EACrC,OAAO,KAAK,YAAY,0BAA0BkB,EAAYC,CAAQ,CACxE,CACA,qBAAqBC,EAAe,CAC7BA,GAGL,KAAK,aAAaA,CAAa,CACjC,CACA,cAAcpB,EAAOG,EAAS,CAC5B,GAAI,OAAOA,GAAY,UAAYA,GAAW,EAC5C,KAAK,SAAWA,EAChB,KAAK,kBAAoB,WAChB,CAAC,KAAK,kBAAmB,CAElC,IAAMkB,GADgBrB,EAAM,MAAM,EAAI,GAAK,KAAK,OAAO,UACP,KAAK,OAAO,aACxD,KAAK,SAAWqB,IAClB,KAAK,SAAWA,EAEpB,CACF,CACA,YAAYjC,EAAUkC,EAAmB,CACvC,KAAK,SAAWlC,EACZL,EAAQuC,CAAiB,IAC3B,KAAK,kBAAoBA,GAEtB,KAAK,mBACJ,KAAK,SAAW,KAAK,OAAO,YAAc,GAC5C,KAAK,WAGT,KAAK,eAAe,CACtB,CACA,gBAAgBpC,EAAU,CACxB,IAAMC,EAAW,IAAIoC,GACrB,KAAK,iBAAiB,EAAE,QAAQvB,GAASA,EAAM,YAAYd,EAAUC,EAAU,KAAK,QAAQ,CAAC,CAC/F,CACA,kBAAmB,CACjB,IAAMqC,EAAkB,CAACf,EAAGF,IAAME,EAAE,MAAM,EAAIF,EAAE,MAAM,EAEtD,OADekB,GAAsB,KAAK,MAAM,EAAE,KAAKD,CAAe,CAExE,CACA,aAAaxB,EAAO,CAClB,OAAO,KAAK,OAAOA,EAAM,MAAM,CAAC,EAChC,KAAK,YAAYA,CAAK,EACtB,KAAK,aACL,KAAK,OAAO,mBAAmB,YAAYA,CAAK,CAClD,CAEA,gBAAiB,CACf,GAAI,KAAK,QAAQ,EAAG,CAClB,KAAK,oCAAoC,EACzC,IAAM0B,EAAQ,CACZ,KAAM,cACR,EACA,KAAK,aAAa,cAAcA,CAAK,CACvC,CACF,CACA,qCAAsC,CACpC,IAAMC,EAAkB,CAAC,EACzB,KAAK,iBAAiB,EAAE,QAAQ3B,GAAS,CACtBA,EAAM,MAAM,EAAI,KAAK,OAAO,WAC7B,KAAK,UACnB2B,EAAgB,KAAK3B,CAAK,CAE9B,CAAC,EACG2B,EAAgB,OAAS,GAC3BA,EAAgB,QAAQ3B,GAAS,KAAK,aAAaA,CAAK,CAAC,CAE7D,CACA,YAAa,CACX,KAAK,iBAAiB,EAAE,QAAQA,GAAS,KAAK,qBAAqBA,CAAK,CAAC,EACzE,KAAK,kBAAoB,GACrB,KAAK,WAAa,IACpB,KAAK,SAAW,KAAK,OAAO,iBAE9B,KAAK,eAAe,CACtB,CACA,mBAAmB4B,EAAcC,EAAa,CAC5C,IAAMC,EAAS,CAAC,EACZC,EAAc,GACdC,EAAgB,GACdC,EAAiB,IAAIV,GACvBW,EAAsB,GAC1B,YAAK,iBAAiB,EAAE,QAAQlC,GAAS,CACvC,GAAI,CAAAkC,EAGJ,IAAIF,GAAiBD,EAAc,IAAM/B,EAAM,MAAM,EAAG,CACtDkC,EAAsB,GACtB,MACF,CACAH,EAAc/B,EAAM,MAAM,EAC1BA,EAAM,YAAYpB,GAAW,CAC3B,IAAMuD,EAAiBvD,IAAYgD,GAAgBhD,IAAYiD,GAC3DG,GAAiBG,IACnBL,EAAO,KAAKlD,CAAO,EAEjBuD,IACFH,EAAgB,CAACA,EAErB,EAAGC,EAAgB,KAAK,QAAQ,EAClC,CAAC,EACoBC,GAAuBF,EACtB,CAAC,EAAIF,CAC7B,CACF,EACIM,GAAmB,cAAcvC,CAAS,CAC5C,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,UAClB,CACA,UAAUrB,EAAO,CACf,KAAK,cAAgBA,EAAM,cAC3B,KAAK,eAAiBA,EAAM,eAC5B,KAAK,iBAAmBA,EAAM,iBAC9B,KAAK,YAAcA,EAAM,YACzB,KAAK,mBAAqBA,EAAM,kBAClC,CACA,aAAaM,EAAO,CAClB,MAAO,CACL,UAAW,KAAK,UAChB,OAAQ,KAAK,UAAYA,CAC3B,CACF,CAEA,uBAAwB,CACtB,MAAO,EACT,CACA,eAAgB,CACT,KAAK,IAAI,eAAe,UAAU,IAGvC,KAAK,UAAY,KAAK,IAAI,qBAAqB,EAC/C,KAAK,kBAAkB,EACvB,KAAK,eAAe,IAAM,KAAK,aAAa,CAAC,EAC7C,KAAK,YAAY,EACnB,CACA,aAAc,CACR,KAAK,IAAI,OAAO,6BAA6B,GAC/CG,EAAU,0GAA0G,CAExH,CACA,OAAQ,CACN,KAAK,cAAc,KAAK,IAAI,IAAI,YAAY,CAAC,CAC/C,CACA,SAAU,CACR,KAAK,kBAAkB,EACvB,MAAM,QAAQ,CAChB,CACA,mBAAoB,CACd,KAAK,aACP,KAAK,YAAY,KAAK,UAAU,EAChC,KAAK,YAAY,kBAAkB,EACnC,KAAK,WAAa,KAEtB,CACA,mBAAoB,CAClB,KAAK,yBAAyB,CAC5B,cAAe,KAAK,gBAAgB,KAAK,IAAI,EAC7C,YAAa,KAAK,cAAc,KAAK,IAAI,EACzC,iBAAkB,KAAK,mBAAmB,KAAK,IAAI,EACnD,aAAc,KAAK,eAAe,KAAK,IAAI,CAC7C,CAAC,EACD,KAAK,2BAA2B,aAAc,IAAM,KAAK,cAAc,KAAK,IAAI,IAAI,YAAY,CAAC,CAAC,EAClG,KAAK,2BAA2B,iBAAkB,IAAM,KAAK,WAAW,CAAC,EACzE,KAAK,2BAA2B,YAAa,IAAM,CACjD,KAAK,UAAY,KAAK,IAAI,qBAAqB,EAC/C,KAAK,YAAY,UAAY,KAAK,UAClC,KAAK,iBAAiB,CACxB,CAAC,CACH,CACA,iBAAkB,CAChB,KAAK,MAAM,CACb,CACA,eAAgB,CACd,KAAK,MAAM,CACb,CACA,oBAAqB,CACnB,IAAIoD,EACA,KAAK,YACPA,EAAgB,KAAK,qBAAqB,EAE1CA,EAAgB,GAEdA,GACF,KAAK,MAAM,CAEf,CACA,sBAAuB,CACrB,MAAO,CAACC,GAAY,KAAK,YAAY,UAAW,KAAK,eAAe,aAAa,CAAC,CACpF,CACA,SAAU,CACR,MAAO,UACT,CACA,cAAcC,EAAY,CACxB,KAAK,kBAAkB,EACvB,KAAK,WAAaA,EACdA,GACF,KAAK,MAAM,CAEf,CACA,SAAU,CACR,MAAO,CAAC,KAAK,aACf,CACA,gBAAiB,CACf,MAAO,CAAC,CAAC,KAAK,aAChB,CACA,4BAA4BX,EAAcC,EAAa,CACrD,OAAO,KAAK,cAAgB,KAAK,cAAc,mBAAmBD,EAAcC,CAAW,EAAI,CAAC,CAClG,CACA,OAAQ,CACN,GAAI,CAAC,KAAK,WACR,OAEmB,KAAK,IAAI,iBAAiB,GACL,MAExC,KAAK,iBAAiB,MAAM,gBAAgB,EAE9C,KAAK,WAAW,CAClB,CACA,yBAA0B,CACxB,MAAO,CACL,KAAM,eAGN,QAAS,GACT,YAAa,GACb,QAAS,GACT,iBAAkB,GAClB,QAAS,EACX,CACF,CACA,YAAa,CACX,KAAK,aAAa,EAClB,KAAK,YAAc,CAEjB,WAAY,KAAK,WAEjB,YAAa,KAAK,eAAe,eAAe,GAAK,CAAC,EACtD,UAAW,KAAK,eAAe,aAAa,EAC5C,mBAAoB,KAAK,mBAIzB,gBAAiB,KAAK,IAAI,IAAI,yBAAyB,EACvD,iBAAkB,KAAK,IAAI,IAAI,kBAAkB,EACjD,UAAW,KAAK,IAAI,qBAAqB,EAGzC,aAAc,KAAK,IAAI,IAAI,mBAAmB,EAG9C,UAAW,KAAK,IAAI,IAAI,gBAAgB,EAGxC,qBAAsB,IAAIN,EAC5B,EACA,KAAK,cAAgB,KAAK,WAAW,IAAI3B,GAAc,KAAK,WAAW,CAAC,EACxE,KAAK,aAAa,kBAAkB,CAClC,KAAM,eACR,CAAC,EACD,IAAM8B,EAAQ,KAAK,wBAAwB,EAC3C,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,kBAAmB,CACjB,KAAK,YAAYc,GAAQ,CACvBA,EAAK,aAAa,KAAK,SAAS,EAChCA,EAAK,UAAU,KAAK,UAAYA,EAAK,QAAQ,CAC/C,CAAC,EACD,IAAMd,EAAQ,KAAK,wBAAwB,EAC3C,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,cAAe,CACT,KAAK,gBACP,KAAK,cAAgB,KAAK,YAAY,KAAK,aAAa,EAE5D,CACA,gBAAiB,CACf,IAAMA,EAAQ,KAAK,wBAAwB,EAC3C,KAAK,aAAa,cAAcA,CAAK,CACvC,CACA,OAAOrC,EAAU,CACf,GAAK,KAAK,eAGN,EAAAA,GAAY,KAAK,cAAc,YAAY,GAG/C,OAAO,KAAK,cAAc,OAAOA,CAAQ,CAC3C,CACA,WAAWZ,EAAI,CACb,IAAIqD,EACJ,YAAK,YAAYlD,GAAW,CACtBA,EAAQ,KAAOH,IACjBqD,EAASlD,EAEb,CAAC,EACMkD,CACT,CACA,YAAY5C,EAAU,CAChB,KAAK,eACP,KAAK,cAAc,gBAAgBA,CAAQ,CAE/C,CACA,qBAAsB,CACpB,OAAO,KAAK,YAAY,CAC1B,CACA,6BAA6BuD,EAAe,CAC1C,OAAOA,CACT,CACA,mBAAmBC,EAAO,CACxB,GAAI,KAAK,YAAc,EAAG,CACxB,IAAMC,EAAmB,KAAK,MAAMD,EAAQ,KAAK,SAAS,EACpDE,EAAe,KAAK,YAAY,EAAI,EAC1C,OAAID,EAAmBC,EACdA,EAEFD,CACT,CACA,MAAO,EACT,CACA,aAAc,CACZ,OAAO,KAAK,cAAgB,KAAK,cAAc,YAAY,EAAI,CACjE,CACA,aAAa/D,EAAS,CAEpB,MAAO,CAAC,CADa,KAAK,WAAWA,EAAQ,EAAE,CAEjD,CACA,cAAe,CACT,KAAK,eACP,KAAK,cAAc,aAAa,CAEpC,CACA,YAAa,CACP,KAAK,eACP,KAAK,cAAc,WAAW,CAElC,CAEA,qBAAsB,CACpB,OAAI,KAAK,cACA,KAAK,cAAc,oBAAoB,EAEzC,EACT,CACA,YAAYQ,EAAUkC,EAAmB,CACnC,KAAK,eACP,KAAK,cAAc,YAAYlC,EAAUkC,CAAiB,CAE9D,CACF,EACA,SAASuB,GAAqBrE,EAAO,CACnCA,EAAM,uBAAuB,oBAAoB,GAAG,aAAa,CACnE,CACA,SAASsE,GAAmBtE,EAAO,CACjCA,EAAM,uBAAuB,oBAAoB,GAAG,WAAW,CACjE,CACA,SAASuE,GAAoBvE,EAAO,CAClC,OAAOA,EAAM,uBAAuB,oBAAoB,GAAG,YAAY,CACzE,CACA,SAASwE,GAAoBxE,EAAO,CAClC,OAAOA,EAAM,uBAAuB,oBAAoB,GAAG,oBAAoB,CACjF,CACA,IAAIyE,GAAW,SACXC,GAA6B,CAC/B,QAASD,GACT,WAAY,6CACZ,SAAU,WACV,MAAO,CAACb,EAAgB,EACxB,iBAAkB,CAACe,EAAkB,CACvC,EACIC,GAA4B,CAC9B,QAASH,GACT,WAAY,4CACZ,MAAO,CAACI,EAAqB,EAC7B,aAAc,CACZ,qBAAAR,GACA,mBAAAC,GACA,oBAAAC,GACA,oBAAAC,EACF,EACA,iBAAkB,CAACE,GAA4BI,EAA2B,CAC5E,EACIC,GAAyB,CAC3B,QAASN,GACT,WAAY,wCACZ,iBAAkB,CAACC,GAA4BE,EAAyB,CAC1E,EAGAI,EAAe,kBAAkB,CAACC,GAAyBC,GAA0BH,GAAwBI,EAAe,EAAG,GAAO,MAAM,ECr27C5I,IAAIC,IAAiD,IAAM,CACzD,IAAMC,EAAN,MAAMA,UAAyCC,EAAqB,CAClE,oBAAoBC,EAAkBC,EAA2B,CAC/D,KAAK,iBAAmBD,EACxB,KAAK,0BAA4BC,CACnC,CACA,cAAcC,EAAqB,CACjC,IAAMD,EAA4B,KAAK,0BACjCE,EAAO,KACb,MAAMC,UAA8BC,EAAiB,CACnD,KAAKC,EAAQ,CACXL,EAA0B,iBAAiB,IAAM,CAC/C,MAAM,KAAKK,CAAM,EACjB,KAAK,cAAc,kBAAkB,cAAc,CACrD,CAAC,CACH,CACA,iBAAkB,CAChB,OAAOL,EAA0B,iBAAiB,IAAME,EAAK,gBAAgBD,CAAmB,CAAC,CACnG,CACA,UAAUK,EAAM,CACd,OAAOC,EAAQ,8BAA8B,EAAED,CAAI,GAAK,IAC1D,CACA,WAAWA,EAAME,EAAM,CACrB,IAAMC,EAAe,KAAK,8BAA8B,EACxD,OAAOT,EAA0B,iBAAiB,IAAMO,EAAQ,8BAA8B,EAAED,CAAI,EAAE,MAAMG,EAAcD,CAAI,CAAC,CACjI,CACA,UAAUF,EAAMI,EAAU,CACxBH,EAAQD,CAAI,EAAII,CAClB,CACF,CACA,IAAMH,EAAU,IAAIJ,EACpB,OAAOI,CACT,CACA,gBAAgBI,EAAe,CAC7B,OAAO,KAAK,iBAAiB,gBAAgBA,CAAa,CAC5D,CAeF,EAbId,EAAK,WAAuB,IAAM,CAChC,IAAIe,EACJ,OAAO,SAAkDC,EAAG,CAC1D,OAAQD,IAAkDA,EAAmDE,GAAsBjB,CAAgC,IAAIgB,GAAKhB,CAAgC,CAC9M,CACF,GAAG,EAGHA,EAAK,WAA0BkB,GAAmB,CAChD,MAAOlB,EACP,QAASA,EAAiC,SAC5C,CAAC,EA/CL,IAAMD,EAANC,EAkDA,OAAOD,CACT,GAAG,EAIGQ,GAAN,KAAuB,CACrB,KAAKC,EAAQ,CACX,KAAK,QAAUA,EACf,KAAK,cAAgB,KAAK,gBAAgB,EAC1C,KAAK,kBAAoB,KAAK,cAAc,SAC5C,KAAK,4BAA8B,KAAK,cAAc,SACtD,KAAK,MAAQ,KAAK,cAAc,SAAS,cAEzCW,GAAkB,KAAK,KAAK,EAC5B,KAAK,kBAAkB,OAAO,KAAK,OAAO,CAC5C,CACA,QAAS,CACP,OAAO,KAAK,KACd,CAEA,gBAAiB,CAEf,OADmB,KAAK,MAAM,UAEhC,CACA,SAAU,CACJ,KAAK,6BAA+B,OAAO,KAAK,4BAA4B,SAAY,YAC1F,KAAK,4BAA4B,QAAQ,EAEvC,KAAK,eACP,KAAK,cAAc,QAAQ,CAE/B,CACA,+BAAgC,CAC9B,OAAO,KAAK,2BACd,CACF,EACIC,IAA0C,IAAM,CAClD,IAAMC,EAAN,MAAMA,UAAkCC,EAA0B,CAChE,YAAYC,EAAS,CACnB,MAAM,SAAS,EACf,KAAK,QAAUA,EAEf,KAAK,wBAA0B,GAM/B,KAAK,aAAe,CAACV,EAAUW,IAAW,KAAK,WAAWX,EAAUW,CAAM,EAK1E,KAAK,aAAeX,GAAY,KAAK,iBAAiBA,CAAQ,EAC9D,KAAK,wBAA0B,QAAQ,oBAAsB,CAAC,CAAC,QAAQ,MAAM,kBACxE,KAAK,QAEC,KAAK,wBACd,KAAK,WAAa,CAACA,EAAUW,IACvBA,IAAW,mBAAqBA,IAAW,mBAGtC,KAAK,QAAQ,kBAAkBX,CAAQ,EAGzCA,EAAS,EAGlB,KAAK,WAAaA,GAAY,KAAK,QAAQ,kBAAkBA,CAAQ,EAZrE,KAAK,WAAaA,GAAYA,EAAS,CAc3C,CAGA,IAAI,oBAAqB,CACvB,OAAO,KAAK,SAAWY,GAAO,gBAAgB,CAChD,CACA,qBAAqBC,EAAM,CACzB,GAAI,CAACA,EACH,MAAO,GAET,IAAMC,EAAYD,EAAK,UAEvB,OADsBC,GAAa,WAAYA,CAEjD,CACA,iBAAiBd,EAAU,CAEzB,OAAO,KAAK,QAAU,KAAK,QAAQ,IAAIA,CAAQ,EAAIA,EAAS,CAC9D,CACA,kBAAkBA,EAAUW,EAAQ,CAClC,OAAO,KAAK,WAAWX,EAAUW,CAAM,CACzC,CAYF,EAVIH,EAAK,UAAO,SAA2CL,EAAG,CACxD,OAAO,IAAKA,GAAKK,GAA8BO,GAAYH,EAAM,CAAC,CACpE,EAGAJ,EAAK,WAA0BH,GAAmB,CAChD,MAAOG,EACP,QAASA,EAA0B,SACrC,CAAC,EA/DL,IAAMD,EAANC,EAkEA,OAAOD,CACT,GAAG,EAICS,IAA8B,IAAM,CACtC,IAAMC,EAAN,MAAMA,CAAc,CAClB,YAAYC,EAAY7B,EAAkBC,EAA2B6B,EAA2B,CAC9F,KAAK,iBAAmB9B,EACxB,KAAK,0BAA4BC,EACjC,KAAK,0BAA4B6B,EACjC,KAAK,aAAe,GACpB,KAAK,WAAa,GAClB,KAAK,YAAc,IAAI,QAAQC,GAAW,CACxC,KAAK,mBAAqBA,CAC5B,CAAC,EAID,KAAK,UAAY,OAGjB,KAAK,QAAU,OAIf,KAAK,oBAAsB,OAK3B,KAAK,4BAA8B,OAInC,KAAK,+BAAiC,OAMtC,KAAK,WAAa,OAMlB,KAAK,iBAAmB,OAKxB,KAAK,sBAAwB,OAO7B,KAAK,eAAiB,OAKtB,KAAK,iBAAmB,OAKxB,KAAK,iBAAmB,OAKxB,KAAK,kBAAoB,OAMzB,KAAK,gBAAkB,OAMvB,KAAK,mBAAqB,OAG1B,KAAK,YAAc,OAInB,KAAK,uBAAyB,OAI9B,KAAK,4BAA8B,OAInC,KAAK,mBAAqB,OAI1B,KAAK,4BAA8B,OAInC,KAAK,6BAA+B,OAIpC,KAAK,6BAA+B,OAIpC,KAAK,uBAAyB,OAI9B,KAAK,qBAAuB,OAI5B,KAAK,uBAAyB,OAG9B,KAAK,WAAa,OAGlB,KAAK,cAAgB,OAIrB,KAAK,mBAAqB,OAG1B,KAAK,YAAc,OAMnB,KAAK,oBAAsB,OAI3B,KAAK,oBAAsB,OAI3B,KAAK,yBAA2B,OAGhC,KAAK,aAAe,OAGpB,KAAK,kBAAoB,OAGzB,KAAK,sBAAwB,OAG7B,KAAK,kBAAoB,OAGzB,KAAK,uBAAyB,OAI9B,KAAK,8BAAgC,OAIrC,KAAK,uBAAyB,OAI9B,KAAK,4BAA8B,OAInC,KAAK,8BAAgC,OAIrC,KAAK,6BAA+B,OAGpC,KAAK,iBAAmB,OAKxB,KAAK,iBAAmB,OAKxB,KAAK,gBAAkB,OAKvB,KAAK,qBAAuB,OAI5B,KAAK,iBAAmB,OAIxB,KAAK,WAAa,OAGlB,KAAK,SAAW,OAIhB,KAAK,gBAAkB,OAIvB,KAAK,kBAAoB,OAIzB,KAAK,aAAe,OAMpB,KAAK,8BAAgC,OAKrC,KAAK,yBAA2B,OAKhC,KAAK,kCAAoC,OAGzC,KAAK,6BAA+B,OAIpC,KAAK,oBAAsB,OAK3B,KAAK,yBAA2B,OAGhC,KAAK,uBAAyB,OAI9B,KAAK,kBAAoB,OAGzB,KAAK,yBAA2B,OAIhC,KAAK,oBAAsB,OAI3B,KAAK,YAAc,OAGnB,KAAK,gBAAkB,OAKvB,KAAK,iBAAmB,OAKxB,KAAK,kCAAoC,OAGzC,KAAK,kBAAoB,OAGzB,KAAK,mBAAqB,OAM1B,KAAK,iCAAmC,OAIxC,KAAK,qCAAuC,OAI5C,KAAK,qBAAuB,OAI5B,KAAK,oBAAsB,OAK3B,KAAK,qCAAuC,OAI5C,KAAK,qBAAuB,OAG5B,KAAK,4BAA8B,OAMnC,KAAK,2BAA6B,OAIlC,KAAK,aAAe,OAKpB,KAAK,YAAc,OAInB,KAAK,kBAAoB,OAIzB,KAAK,oBAAsB,OAI3B,KAAK,mBAAqB,OAG1B,KAAK,eAAiB,OAItB,KAAK,oBAAsB,OAG3B,KAAK,0BAA4B,OAIjC,KAAK,4BAA8B,OAInC,KAAK,WAAa,OAIlB,KAAK,aAAe,OAKpB,KAAK,eAAiB,OAKtB,KAAK,oBAAsB,OAI3B,KAAK,mBAAqB,OAG1B,KAAK,yBAA2B,OAIhC,KAAK,gBAAkB,OAIvB,KAAK,oBAAsB,OAI3B,KAAK,QAAU,OAMf,KAAK,aAAe,OAKpB,KAAK,SAAW,OAKhB,KAAK,UAAY,OAKjB,KAAK,WAAa,OAKlB,KAAK,uBAAyB,OAK9B,KAAK,sBAAwB,OAK7B,KAAK,cAAgB,OAIrB,KAAK,0BAA4B,OAMjC,KAAK,oBAAsB,OAK3B,KAAK,8BAAgC,OAKrC,KAAK,2BAA6B,OAIlC,KAAK,wBAA0B,OAK/B,KAAK,MAAQ,OAGb,KAAK,QAAU,OAGf,KAAK,uBAAyB,OAI9B,KAAK,wBAA0B,OAG/B,KAAK,8BAAgC,OAMrC,KAAK,uBAAyB,OAG9B,KAAK,sBAAwB,OAI7B,KAAK,uBAAyB,OAG9B,KAAK,6BAA+B,OAKpC,KAAK,sBAAwB,OAI7B,KAAK,WAAa,OAIlB,KAAK,mBAAqB,OAQ1B,KAAK,2BAA6B,OAIlC,KAAK,uBAAyB,OAK9B,KAAK,kBAAoB,OAMzB,KAAK,wBAA0B,OAI/B,KAAK,UAAY,OAKjB,KAAK,eAAiB,OAKtB,KAAK,yBAA2B,OAIhC,KAAK,qBAAuB,OAG5B,KAAK,uBAAyB,OAG9B,KAAK,eAAiB,OAKtB,KAAK,wBAA0B,OAK/B,KAAK,8BAAgC,OAIrC,KAAK,kBAAoB,OAIzB,KAAK,SAAW,OAKhB,KAAK,wBAA0B,OAI/B,KAAK,2BAA6B,OAIlC,KAAK,4BAA8B,OAInC,KAAK,wBAA0B,OAK/B,KAAK,0CAA4C,OAIjD,KAAK,YAAc,OAKnB,KAAK,sBAAwB,OAI7B,KAAK,kBAAoB,OAGzB,KAAK,eAAiB,OAItB,KAAK,iBAAmB,OAGxB,KAAK,cAAgB,OAKrB,KAAK,2BAA6B,OAIlC,KAAK,UAAY,OAMjB,KAAK,eAAiB,OAKtB,KAAK,UAAY,OAKjB,KAAK,6BAA+B,OAMpC,KAAK,kCAAoC,OAKzC,KAAK,0BAA4B,OAIjC,KAAK,eAAiB,OAItB,KAAK,gBAAkB,OAIvB,KAAK,4BAA8B,OAInC,KAAK,iBAAmB,OAIxB,KAAK,gBAAkB,OAOvB,KAAK,YAAc,OAInB,KAAK,sBAAwB,OAG7B,KAAK,4BAA8B,OAGnC,KAAK,mBAAqB,OAM1B,KAAK,+BAAiC,OAUtC,KAAK,iBAAmB,OAIxB,KAAK,qBAAuB,OAG5B,KAAK,mBAAqB,OAI1B,KAAK,mBAAqB,OAI1B,KAAK,qBAAuB,OAK5B,KAAK,sBAAwB,OAI7B,KAAK,kBAAoB,OAUzB,KAAK,mBAAqB,OAM1B,KAAK,wBAA0B,OAK/B,KAAK,cAAgB,OAIrB,KAAK,cAAgB,OAGrB,KAAK,uBAAyB,OAI9B,KAAK,yBAA2B,OAIhC,KAAK,qBAAuB,OAI5B,KAAK,gBAAkB,OAIvB,KAAK,0BAA4B,OAIjC,KAAK,gCAAkC,OAIvC,KAAK,qBAAuB,OAI5B,KAAK,qBAAuB,OAI5B,KAAK,kBAAoB,OAIzB,KAAK,iBAAmB,OAGxB,KAAK,uBAAyB,OAI9B,KAAK,sCAAwC,OAI7C,KAAK,SAAW,OAKhB,KAAK,0BAA4B,OAKjC,KAAK,wBAA0B,OAG/B,KAAK,iBAAmB,OAGxB,KAAK,oBAAsB,OAK3B,KAAK,aAAe,OAGpB,KAAK,QAAU,OAGf,KAAK,2BAA6B,OAIlC,KAAK,0CAA4C,OAGjD,KAAK,WAAa,OAKlB,KAAK,kBAAoB,OAKzB,KAAK,wBAA0B,OAK/B,KAAK,0BAA4B,OAMjC,KAAK,iCAAmC,OAGxC,KAAK,sCAAwC,OAI7C,KAAK,eAAiB,OAItB,KAAK,iBAAmB,OAMxB,KAAK,gCAAkC,OAIvC,KAAK,wBAA0B,OAI/B,KAAK,oBAAsB,OAG3B,KAAK,qBAAuB,OAI5B,KAAK,wBAA0B,OAI/B,KAAK,+BAAiC,OAKtC,KAAK,oCAAsC,OAK3C,KAAK,uBAAyB,OAK9B,KAAK,yBAA2B,OAKhC,KAAK,oCAAsC,OAG3C,KAAK,mBAAqB,OAI1B,KAAK,yBAA2B,OAIhC,KAAK,2BAA6B,OAIlC,KAAK,2BAA6B,OAIlC,KAAK,yBAA2B,OAKhC,KAAK,0BAA4B,OAIjC,KAAK,yBAA2B,OAIhC,KAAK,wBAA0B,OAI/B,KAAK,gCAAkC,OAKvC,KAAK,uBAAyB,OAI9B,KAAK,2BAA6B,OAKlC,KAAK,mCAAqC,OAI1C,KAAK,eAAiB,OAGtB,KAAK,aAAe,OAIpB,KAAK,wBAA0B,OAI/B,KAAK,uBAAyB,OAI9B,KAAK,0BAA4B,OAIjC,KAAK,kBAAoB,OAIzB,KAAK,oBAAsB,OAI3B,KAAK,4BAA8B,OAMnC,KAAK,wBAA0B,OAI/B,KAAK,qBAAuB,OAI5B,KAAK,kBAAoB,OAIzB,KAAK,iBAAmB,OAIxB,KAAK,oBAAsB,OAI3B,KAAK,6BAA+B,OAIpC,KAAK,aAAe,OAIpB,KAAK,aAAe,OAIpB,KAAK,WAAa,OAIlB,KAAK,kBAAoB,OAIzB,KAAK,gBAAkB,OAGvB,KAAK,aAAe,OAIpB,KAAK,8BAAgC,OAIrC,KAAK,MAAQ,OAIb,KAAK,UAAY,OAGjB,KAAK,SAAW,OAGhB,KAAK,SAAW,OAGhB,KAAK,cAAgB,OAIrB,KAAK,0BAA4B,OAKjC,KAAK,qBAAuB,OAI5B,KAAK,qBAAuB,OAI5B,KAAK,OAAS,OAId,KAAK,UAAY,OAEjB,KAAK,oBAAsB,OAG3B,KAAK,gBAAkB,OAIvB,KAAK,aAAe,OAGpB,KAAK,oBAAsB,OAI3B,KAAK,iBAAmB,OAGxB,KAAK,iBAAmB,OAKxB,KAAK,uBAAyB,OAG9B,KAAK,wBAA0B,OAG/B,KAAK,0BAA4B,OAGjC,KAAK,+BAAiC,OAGtC,KAAK,yBAA2B,OAGhC,KAAK,gBAAkB,OAGvB,KAAK,yBAA2B,OAGhC,KAAK,wBAA0B,OAG/B,KAAK,uBAAyB,OAI9B,KAAK,qBAAuB,OAI5B,KAAK,qBAAuB,OAI5B,KAAK,sBAAwB,OAG7B,KAAK,qBAAuB,OAM5B,KAAK,gBAAkB,OAGvB,KAAK,mBAAqB,OAM1B,KAAK,cAAgB,OAIrB,KAAK,cAAgB,OAGrB,KAAK,YAAc,OAInB,KAAK,0BAA4B,OAGjC,KAAK,eAAiB,OAGtB,KAAK,qBAAuB,OAG5B,KAAK,4BAA8B,OAGnC,KAAK,yBAA2B,OAGhC,KAAK,8BAAgC,OAGrC,KAAK,YAAc,OAInB,KAAK,cAAgB,OAIrB,KAAK,8BAAgC,OAGrC,KAAK,+BAAiC,OAGtC,KAAK,6BAA+B,OAGpC,KAAK,kBAAoB,OAGzB,KAAK,sBAAwB,OAI7B,KAAK,sBAAwB,OAI7B,KAAK,SAAW,OAIhB,KAAK,qBAAuB,OAG5B,KAAK,qBAAuB,OAG5B,KAAK,gBAAkB,OAGvB,KAAK,YAAc,OAGnB,KAAK,cAAgB,OAGrB,KAAK,aAAe,OAGpB,KAAK,YAAc,OAGnB,KAAK,YAAc,OAGnB,KAAK,aAAe,OAGpB,KAAK,eAAiB,OAGtB,KAAK,wBAA0B,IAAIC,EAGnC,KAAK,qBAAuB,IAAIA,EAGhC,KAAK,yBAA2B,IAAIA,EAGpC,KAAK,0BAA4B,IAAIA,EAGrC,KAAK,SAAW,IAAIA,EAGpB,KAAK,OAAS,IAAIA,EAGlB,KAAK,WAAa,IAAIA,EAGtB,KAAK,SAAW,IAAIA,EAGpB,KAAK,cAAgB,IAAIA,EAGzB,KAAK,aAAe,IAAIA,EAGxB,KAAK,cAAgB,IAAIA,EAGzB,KAAK,YAAc,IAAIA,EAGvB,KAAK,mBAAqB,IAAIA,EAG9B,KAAK,uBAAyB,IAAIA,EAGlC,KAAK,mBAAqB,IAAIA,EAG9B,KAAK,kBAAoB,IAAIA,EAG7B,KAAK,iBAAmB,IAAIA,EAG5B,KAAK,mBAAqB,IAAIA,EAG9B,KAAK,wBAA0B,IAAIA,EAGnC,KAAK,sBAAwB,IAAIA,EAGjC,KAAK,wBAA0B,IAAIA,EAGnC,KAAK,sBAAwB,IAAIA,EAGjC,KAAK,uBAAyB,IAAIA,EAGlC,KAAK,oBAAsB,IAAIA,EAG/B,KAAK,wBAA0B,IAAIA,EAInC,KAAK,sBAAwB,IAAIA,EAKjC,KAAK,iBAAmB,IAAIA,EAG5B,KAAK,gBAAkB,IAAIA,EAG3B,KAAK,gBAAkB,IAAIA,EAG3B,KAAK,mBAAqB,IAAIA,EAG9B,KAAK,mBAAqB,IAAIA,EAG9B,KAAK,kBAAoB,IAAIA,EAG7B,KAAK,kBAAoB,IAAIA,EAG7B,KAAK,YAAc,IAAIA,EAGvB,KAAK,UAAY,IAAIA,EAGrB,KAAK,YAAc,IAAIA,EAGvB,KAAK,UAAY,IAAIA,EAGrB,KAAK,iBAAmB,IAAIA,EAG5B,KAAK,eAAiB,IAAIA,EAG1B,KAAK,UAAY,IAAIA,EAGrB,KAAK,QAAU,IAAIA,EAGnB,KAAK,aAAe,IAAIA,EAGxB,KAAK,cAAgB,IAAIA,EAGzB,KAAK,eAAiB,IAAIA,EAG1B,KAAK,oCAAsC,IAAIA,EAG/C,KAAK,aAAe,IAAIA,EAGxB,KAAK,2BAA6B,IAAIA,EAGtC,KAAK,oBAAsB,IAAIA,EAG/B,KAAK,eAAiB,IAAIA,EAG1B,KAAK,YAAc,IAAIA,EAEvB,KAAK,UAAY,IAAIA,EAErB,KAAK,kBAAoB,IAAIA,EAG7B,KAAK,gBAAkB,IAAIA,EAG3B,KAAK,aAAe,IAAIA,EAGxB,KAAK,kBAAoB,IAAIA,EAG7B,KAAK,gBAAkB,IAAIA,EAG3B,KAAK,WAAa,IAAIA,EAGtB,KAAK,cAAgB,IAAIA,EAGzB,KAAK,YAAc,IAAIA,EAGvB,KAAK,YAAc,IAAIA,EAGvB,KAAK,aAAe,IAAIA,EAOxB,KAAK,kBAAoB,IAAIA,EAG7B,KAAK,aAAe,IAAIA,EAGxB,KAAK,YAAc,IAAIA,EAGvB,KAAK,aAAe,IAAIA,EAGxB,KAAK,WAAa,IAAIA,EAGtB,KAAK,sBAAwB,IAAIA,EAGjC,KAAK,eAAiB,IAAIA,EAG1B,KAAK,oBAAsB,IAAIA,EAG/B,KAAK,wBAA0B,IAAIA,EAGnC,KAAK,qBAAuB,IAAIA,EAGhC,KAAK,eAAiB,IAAIA,EAG1B,KAAK,yBAA2B,IAAIA,EAGpC,KAAK,eAAiB,IAAIA,EAG1B,KAAK,cAAgB,IAAIA,EAGzB,KAAK,YAAc,IAAIA,EAGvB,KAAK,kBAAoB,IAAIA,EAG7B,KAAK,YAAc,IAAIA,EAGvB,KAAK,cAAgB,IAAIA,EAGzB,KAAK,aAAe,IAAIA,EAGxB,KAAK,cAAgB,IAAIA,EAGzB,KAAK,WAAa,IAAIA,EAGtB,KAAK,iBAAmB,IAAIA,EAG5B,KAAK,YAAc,IAAIA,EAGvB,KAAK,iBAAmB,IAAIA,EAG5B,KAAK,gBAAkB,IAAIA,EAG3B,KAAK,sBAAwB,IAAIA,EAEjC,KAAK,YAAc,IAAIA,EAEvB,KAAK,YAAc,IAAIA,EAGvB,KAAK,YAAc,IAAIA,EACvB,KAAK,eAAiBH,EAAW,aACnC,CACA,iBAAkB,CAEhB,KAAK,0BAA0B,kBAAkB,IAAM,CACrD,KAAK,0BAA0B,oBAAoB,KAAK,iBAAkB,KAAK,yBAAyB,EACxG,IAAMI,EAAgBC,GAAiC,KAAK,YAAa,IAAI,EAC7E,KAAK,WAAa,CAChB,oBAAqB,KAAK,oBAAoB,KAAK,IAAI,EACvD,mBAAoB,KAAK,0BACzB,sBAAuB,CACrB,0BAA2B,KAAK,yBAClC,EACA,QAAS,KAAK,SAAW,CAAC,CAC5B,EACA,IAAMC,EAAMC,GAAW,KAAK,eAAgBH,EAAe,KAAK,UAAU,EACtEE,IACF,KAAK,IAAMA,GAEb,KAAK,aAAe,GAIpB,KAAK,mBAAmB,CAC1B,CAAC,CACH,CACA,YAAYE,EAAS,CACf,KAAK,cAEP,KAAK,0BAA0B,kBAAkB,IAAM,CACrD,IAAMC,EAAc,CAAC,EACrB,OAAO,QAAQD,CAAO,EAAE,QAAQ,CAAC,CAACE,EAAKC,CAAK,IAAM,CAChDF,EAAYC,CAAG,EAAIC,EAAM,YAC3B,CAAC,EACDC,GAAiBH,EAAa,KAAK,GAAG,CACxC,CAAC,CAEL,CACA,aAAc,CACR,KAAK,eAGP,KAAK,WAAa,GAElB,KAAK,KAAK,QAAQ,EAEtB,CAGA,cAAcI,EAAW,CAGvB,IAAMC,EAFU,KAAKD,CAAS,EAGxBE,EAAaD,GAAY,UAAYA,GAAY,WAAW,OAAS,EAErEE,EAAc,KAAKH,EAAU,OAAO,CAAC,EAAE,YAAY,CAAC,GAAGA,EAAU,UAAU,CAAC,CAAC,GAC7EI,EAAwB,CAAC,CAAC,KAAK,aAAe,CAAC,CAAC,KAAK,YAAYD,CAAW,EAClF,OAAOD,GAAcE,CACvB,CACA,oBAAoBJ,EAAWK,EAAO,CAGpC,GAAI,KAAK,WACP,OAGF,IAAMC,EAAU,KAAKN,CAAS,EAC9B,GAAIM,GAAW,KAAK,cAAcN,CAAS,EAAG,CAE5C,IAAMO,EAAc,IAAM,KAAK,0BAA0B,iBAAiB,IAAMD,EAAQ,KAAKD,CAAK,CAAC,EAC/FL,IAAc,YAEhB,KAAK,YAAY,KAAK,IAAMO,EAAY,CAAC,EAEzCA,EAAY,CAEhB,CACF,CA+ZF,EA7ZIrB,EAAK,UAAO,SAA+Bd,EAAG,CAC5C,OAAO,IAAKA,GAAKc,GAAkBsB,GAAqBC,EAAU,EAAMD,GAAqBE,EAAgB,EAAMF,GAAkBhC,EAAyB,EAAMgC,GAAkBrD,EAAgC,CAAC,CACzN,EAGA+B,EAAK,UAAyByB,GAAkB,CAC9C,KAAMzB,EACN,UAAW,CAAC,CAAC,iBAAiB,CAAC,EAC/B,OAAQ,CACN,YAAa,cACb,QAAS,UACT,UAAW,YACX,QAAS,UACT,oBAAqB,sBACrB,4BAA6B,8BAC7B,+BAAgC,iCAChC,WAAY,aACZ,iBAAkB,mBAClB,sBAAuB,wBACvB,eAAgB,iBAChB,iBAAkB,mBAClB,iBAAkB,mBAClB,kBAAmB,oBACnB,gBAAiB,kBACjB,mBAAoB,qBACpB,YAAa,cACb,uBAAwB,yBACxB,4BAA6B,8BAC7B,mBAAoB,qBACpB,4BAA6B,8BAC7B,6BAA8B,+BAC9B,6BAA8B,+BAC9B,uBAAwB,yBACxB,qBAAsB,uBACtB,uBAAwB,yBACxB,WAAY,aACZ,cAAe,gBACf,mBAAoB,qBACpB,YAAa,cACb,oBAAqB,sBACrB,oBAAqB,sBACrB,yBAA0B,2BAC1B,aAAc,eACd,kBAAmB,oBACnB,sBAAuB,wBACvB,kBAAmB,oBACnB,uBAAwB,yBACxB,8BAA+B,gCAC/B,uBAAwB,yBACxB,4BAA6B,8BAC7B,8BAA+B,gCAC/B,6BAA8B,+BAC9B,iBAAkB,mBAClB,iBAAkB,mBAClB,gBAAiB,kBACjB,qBAAsB,uBACtB,iBAAkB,mBAClB,WAAY,aACZ,SAAU,WACV,gBAAiB,kBACjB,kBAAmB,oBACnB,aAAc,eACd,8BAA+B,gCAC/B,yBAA0B,2BAC1B,kCAAmC,oCACnC,6BAA8B,+BAC9B,oBAAqB,sBACrB,yBAA0B,2BAC1B,uBAAwB,yBACxB,kBAAmB,oBACnB,yBAA0B,2BAC1B,oBAAqB,sBACrB,YAAa,cACb,gBAAiB,kBACjB,iBAAkB,mBAClB,kCAAmC,oCACnC,kBAAmB,oBACnB,mBAAoB,qBACpB,iCAAkC,mCAClC,qCAAsC,uCACtC,qBAAsB,uBACtB,oBAAqB,sBACrB,qCAAsC,uCACtC,qBAAsB,uBACtB,4BAA6B,8BAC7B,2BAA4B,6BAC5B,aAAc,eACd,YAAa,cACb,kBAAmB,oBACnB,oBAAqB,sBACrB,mBAAoB,qBACpB,eAAgB,iBAChB,oBAAqB,sBACrB,0BAA2B,4BAC3B,4BAA6B,8BAC7B,WAAY,aACZ,aAAc,eACd,eAAgB,iBAChB,oBAAqB,sBACrB,mBAAoB,qBACpB,yBAA0B,2BAC1B,gBAAiB,kBACjB,oBAAqB,sBACrB,QAAS,UACT,aAAc,eACd,SAAU,WACV,UAAW,YACX,WAAY,aACZ,uBAAwB,yBACxB,sBAAuB,wBACvB,cAAe,gBACf,0BAA2B,4BAC3B,oBAAqB,sBACrB,8BAA+B,gCAC/B,2BAA4B,6BAC5B,wBAAyB,0BACzB,MAAO,QACP,QAAS,UACT,uBAAwB,yBACxB,wBAAyB,0BACzB,8BAA+B,gCAC/B,uBAAwB,yBACxB,sBAAuB,wBACvB,uBAAwB,yBACxB,6BAA8B,+BAC9B,sBAAuB,wBACvB,WAAY,aACZ,mBAAoB,qBACpB,2BAA4B,6BAC5B,uBAAwB,yBACxB,kBAAmB,oBACnB,wBAAyB,0BACzB,UAAW,YACX,eAAgB,iBAChB,yBAA0B,2BAC1B,qBAAsB,uBACtB,uBAAwB,yBACxB,eAAgB,iBAChB,wBAAyB,0BACzB,8BAA+B,gCAC/B,kBAAmB,oBACnB,SAAU,WACV,wBAAyB,0BACzB,2BAA4B,6BAC5B,4BAA6B,8BAC7B,wBAAyB,0BACzB,0CAA2C,4CAC3C,YAAa,cACb,sBAAuB,wBACvB,kBAAmB,oBACnB,eAAgB,iBAChB,iBAAkB,mBAClB,cAAe,gBACf,2BAA4B,6BAC5B,UAAW,YACX,eAAgB,iBAChB,UAAW,YACX,6BAA8B,+BAC9B,kCAAmC,oCACnC,0BAA2B,4BAC3B,eAAgB,iBAChB,gBAAiB,kBACjB,4BAA6B,8BAC7B,iBAAkB,mBAClB,gBAAiB,kBACjB,YAAa,cACb,sBAAuB,wBACvB,4BAA6B,8BAC7B,mBAAoB,qBACpB,+BAAgC,iCAChC,iBAAkB,mBAClB,qBAAsB,uBACtB,mBAAoB,qBACpB,mBAAoB,qBACpB,qBAAsB,uBACtB,sBAAuB,wBACvB,kBAAmB,oBACnB,mBAAoB,qBACpB,wBAAyB,0BACzB,cAAe,gBACf,cAAe,gBACf,uBAAwB,yBACxB,yBAA0B,2BAC1B,qBAAsB,uBACtB,gBAAiB,kBACjB,0BAA2B,4BAC3B,gCAAiC,kCACjC,qBAAsB,uBACtB,qBAAsB,uBACtB,kBAAmB,oBACnB,iBAAkB,mBAClB,uBAAwB,yBACxB,sCAAuC,wCACvC,SAAU,WACV,0BAA2B,4BAC3B,wBAAyB,0BACzB,iBAAkB,mBAClB,oBAAqB,sBACrB,aAAc,eACd,QAAS,UACT,2BAA4B,6BAC5B,0CAA2C,4CAC3C,WAAY,aACZ,kBAAmB,oBACnB,wBAAyB,0BACzB,0BAA2B,4BAC3B,iCAAkC,mCAClC,sCAAuC,wCACvC,eAAgB,iBAChB,iBAAkB,mBAClB,gCAAiC,kCACjC,wBAAyB,0BACzB,oBAAqB,sBACrB,qBAAsB,uBACtB,wBAAyB,0BACzB,+BAAgC,iCAChC,oCAAqC,sCACrC,uBAAwB,yBACxB,yBAA0B,2BAC1B,oCAAqC,sCACrC,mBAAoB,qBACpB,yBAA0B,2BAC1B,2BAA4B,6BAC5B,2BAA4B,6BAC5B,yBAA0B,2BAC1B,0BAA2B,4BAC3B,yBAA0B,2BAC1B,wBAAyB,0BACzB,gCAAiC,kCACjC,uBAAwB,yBACxB,2BAA4B,6BAC5B,mCAAoC,qCACpC,eAAgB,iBAChB,aAAc,eACd,wBAAyB,0BACzB,uBAAwB,yBACxB,0BAA2B,4BAC3B,kBAAmB,oBACnB,oBAAqB,sBACrB,4BAA6B,8BAC7B,wBAAyB,0BACzB,qBAAsB,uBACtB,kBAAmB,oBACnB,iBAAkB,mBAClB,oBAAqB,sBACrB,6BAA8B,+BAC9B,aAAc,eACd,aAAc,eACd,WAAY,aACZ,kBAAmB,oBACnB,gBAAiB,kBACjB,aAAc,eACd,8BAA+B,gCAC/B,MAAO,QACP,UAAW,YACX,SAAU,WACV,SAAU,WACV,cAAe,gBACf,0BAA2B,4BAC3B,qBAAsB,uBACtB,qBAAsB,uBACtB,OAAQ,SACR,UAAW,YACX,oBAAqB,sBACrB,gBAAiB,kBACjB,aAAc,eACd,oBAAqB,sBACrB,iBAAkB,mBAClB,iBAAkB,mBAClB,uBAAwB,yBACxB,wBAAyB,0BACzB,0BAA2B,4BAC3B,+BAAgC,iCAChC,yBAA0B,2BAC1B,gBAAiB,kBACjB,yBAA0B,2BAC1B,wBAAyB,0BACzB,uBAAwB,yBACxB,qBAAsB,uBACtB,qBAAsB,uBACtB,sBAAuB,wBACvB,qBAAsB,uBACtB,gBAAiB,kBACjB,mBAAoB,qBACpB,cAAe,gBACf,cAAe,gBACf,YAAa,cACb,0BAA2B,4BAC3B,eAAgB,iBAChB,qBAAsB,uBACtB,4BAA6B,8BAC7B,yBAA0B,2BAC1B,8BAA+B,gCAC/B,YAAa,cACb,cAAe,gBACf,8BAA+B,gCAC/B,+BAAgC,iCAChC,6BAA8B,+BAC9B,kBAAmB,oBACnB,sBAAuB,wBACvB,sBAAuB,wBACvB,SAAU,WACV,qBAAsB,uBACtB,qBAAsB,uBACtB,gBAAiB,kBACjB,YAAa,cACb,cAAe,gBACf,aAAc,eACd,YAAa,cACb,YAAa,cACb,aAAc,eACd,eAAgB,gBAClB,EACA,QAAS,CACP,wBAAyB,0BACzB,qBAAsB,uBACtB,yBAA0B,2BAC1B,0BAA2B,4BAC3B,SAAU,WACV,OAAQ,SACR,WAAY,aACZ,SAAU,WACV,cAAe,gBACf,aAAc,eACd,cAAe,gBACf,YAAa,cACb,mBAAoB,qBACpB,uBAAwB,yBACxB,mBAAoB,qBACpB,kBAAmB,oBACnB,iBAAkB,mBAClB,mBAAoB,qBACpB,wBAAyB,0BACzB,sBAAuB,wBACvB,wBAAyB,0BACzB,sBAAuB,wBACvB,uBAAwB,yBACxB,oBAAqB,sBACrB,wBAAyB,0BACzB,sBAAuB,wBACvB,iBAAkB,mBAClB,gBAAiB,kBACjB,gBAAiB,kBACjB,mBAAoB,qBACpB,mBAAoB,qBACpB,kBAAmB,oBACnB,kBAAmB,oBACnB,YAAa,cACb,UAAW,YACX,YAAa,cACb,UAAW,YACX,iBAAkB,mBAClB,eAAgB,iBAChB,UAAW,YACX,QAAS,UACT,aAAc,eACd,cAAe,gBACf,eAAgB,iBAChB,oCAAqC,sCACrC,aAAc,eACd,2BAA4B,6BAC5B,oBAAqB,sBACrB,eAAgB,iBAChB,YAAa,cACb,UAAW,YACX,kBAAmB,oBACnB,gBAAiB,kBACjB,aAAc,eACd,kBAAmB,oBACnB,gBAAiB,kBACjB,WAAY,aACZ,cAAe,gBACf,YAAa,cACb,YAAa,cACb,aAAc,eACd,kBAAmB,oBACnB,aAAc,eACd,YAAa,cACb,aAAc,eACd,WAAY,aACZ,sBAAuB,wBACvB,eAAgB,iBAChB,oBAAqB,sBACrB,wBAAyB,0BACzB,qBAAsB,uBACtB,eAAgB,iBAChB,yBAA0B,2BAC1B,eAAgB,iBAChB,cAAe,gBACf,YAAa,cACb,kBAAmB,oBACnB,YAAa,cACb,cAAe,gBACf,aAAc,eACd,cAAe,gBACf,WAAY,aACZ,iBAAkB,mBAClB,YAAa,cACb,iBAAkB,mBAClB,gBAAiB,kBACjB,sBAAuB,wBACvB,YAAa,cACb,YAAa,cACb,YAAa,aACf,EACA,WAAY,GACZ,SAAU,CAAI0B,GAAmB,CAACpC,GAA2BrB,EAAgC,CAAC,EAAM0D,GAAyBC,EAAmB,EAChJ,MAAO,EACP,KAAM,EACN,SAAU,SAAgCC,EAAIC,EAAK,CAAC,EACpD,cAAe,CACjB,CAAC,EA79DL,IAAM/B,EAANC,EAg+DA,OAAOD,CACT,GAAG,EAICgC,IAA6B,IAAM,CACrC,IAAMC,EAAN,MAAMA,CAAa,CAcnB,EAZIA,EAAK,UAAO,SAA8B9C,EAAG,CAC3C,OAAO,IAAKA,GAAK8C,EACnB,EAGAA,EAAK,UAAyBC,GAAiB,CAC7C,KAAMD,CACR,CAAC,EAGDA,EAAK,UAAyBE,GAAiB,CAAC,CAAC,EAZrD,IAAMH,EAANC,EAeA,OAAOD,CACT,GAAG,8CEjpEKI,GAAA,EAAA,eAAA,CAAA,EACEC,GAAA,CAAA,EACFC,GAAA,0BAFcC,GAAA,QAAAC,EAAAC,KAAA,EACZC,GAAA,EAAAC,GAAA,IAAAH,EAAAI,MAAA,GAAA,uCAsBNR,GAAA,EAAA,gBAAA,EAAA,EAA+B,EAAA,kBAAA,EAAA,EACqGS,GAAA,yBAAA,SAAAC,EAAA,CAAAC,GAAAC,CAAA,EAAA,IAAAC,EAAAC,GAAA,EAAA,OAAAC,GAA0BF,EAAAG,uBAAAN,EAAAO,MAAA,CAAqC,CAAA,CAAA,EAAEf,GAAA,EAAkB,qBAAzLI,GAAA,EAAAH,GAAA,YAAAU,EAAAK,YAAAC,KAAAN,EAAAK,YAAAE,IAAA,EAAiD,WAAAP,EAAAK,YAAAE,IAAA,EAA8B,QAAAP,EAAAQ,WAAA,GDXjH,IAAaC,IAAmB,IAAA,CAA1B,IAAOA,EAAP,MAAOA,CAAmB,CARhCC,aAAA,CASU,KAAAC,eAAiBC,GAAOC,EAAc,EAItC,KAAAC,WAAa,eAEd,KAAAC,OAAS,GACT,KAAAV,YAAc,CACnBW,KAAM,CACJC,SAAU,WACVC,UAAWC,GAAcC,WAE3BC,QAAS,CAAA,EACTf,KAAM,EACNC,KAAM,IAED,KAAAe,UAAuB,CAAA,EACvB,KAAAd,YAAc,EAEd,KAAAe,YAA2B,CAChCC,UAAW,UAEN,KAAAC,cAAwB,CAC7BC,SAAU,GACVC,UAAW,IAEN,KAAAC,WAAuB,CAC5B,CAAEC,MAAO,QAASC,WAAY,GAAIC,aAAcC,GAA4BN,SAAU,GAAOO,MAAO,GAAIC,kBAAmB,GAAMC,iBAAkB,GAAOR,UAAW,EAAK,EAC1K,CAAEE,MAAO,YAAaC,WAAY,QAASM,OAAQ,EAAI,EACvD,CAAEP,MAAO,WAAYC,WAAY,MAAM,EACvC,CAAED,MAAO,SAAUC,WAAY,QAAQ,EACvC,CAAED,MAAO,aAAcC,WAAY,YAAY,CAAE,EAGnD,IAAWO,sBAAoB,CAC7B,OAAO,KAAKT,WAAWQ,OAAQE,GAAMA,EAAET,KAAK,EAAEU,IAAKD,IAAO,CAAE9C,MAAO8C,EAAET,MAAOlC,MAAO2C,EAAER,YAAcQ,EAAET,KAAK,EAAG,CAC/G,CAGOW,UAAQ,CACb,KAAKC,WAAU,CACjB,CAEOC,YAAYC,EAAqB,CACtC,KAAKC,QAAQC,IAAIC,iBAAgB,EACjC,IAAMC,EAAcC,aAAaC,QAAQ,KAAKnC,UAAU,EACpDiC,GAAaG,QACf,KAAKN,QAAQC,IAAIM,iBAAiB,CAChCC,MAAOC,KAAKC,MAAMP,CAAW,EAC7BQ,WAAY,GACb,EAEH,KAAKC,qBAAuB,KAAKZ,QAAQC,IAAIY,uBAAsB,EAAGlB,IAAKD,GAAMA,EAAEoB,UAAS,EAAG7B,KAAK,CACtG,CAEO8B,YAAYhB,EAAuB,CACxCK,aAAaY,QAAQ,KAAK9C,WAAYuC,KAAKQ,UAAUlB,EAAME,IAAIiB,eAAc,CAAE,CAAC,CAClF,CAEOC,mBAAmBpB,EAAiE,CACzF,GAAIqB,GAAWrB,EAA6BsB,QAAQ,GAAK,CAAEtB,EAA6BsB,SACtF,QAGmB,CAAC,kBAAmB,eAAe,EACvCC,SAASvB,EAAMwB,MAAM,GAAKxB,EAAMyB,OAAS,kBACxDpB,aAAaY,QAAQ,KAAK9C,WAAYuC,KAAKQ,UAAUlB,EAAME,IAAIiB,eAAc,CAAE,CAAC,CAEpF,CAEOO,4BAA4BC,EAAsB,CACvD,KAAKd,qBAAuBc,EAC5B,KAAK1B,QAAQC,IAAI0B,kBAAkBD,EAAc,EAAI,EACrD,KAAK1B,QAAQC,IAAI0B,kBAAkB,KAAK3C,WAAWW,IAAKD,GAAMA,EAAET,KAAK,EAAEO,OAAQE,GAAM,CAACgC,EAAaJ,SAAS5B,CAAW,CAAC,EAAe,EAAK,CAC9I,CAEOnC,uBAAuBC,EAA+C,CAC3E,KAAKC,YAAYC,KAAOF,EAAOoE,UAAYpE,EAAOqE,SAClD,KAAKpE,YAAYE,KAAOH,EAAOqE,SAC/B,KAAKhC,WAAU,CACjB,CAEQA,YAAU,CAChB,KAAK1B,OAAS,GACd,KAAKJ,eACF+D,UAAU,CACT1D,KAAM,KAAKX,YAAYW,KACvBK,QAAS,KAAKhB,YAAYgB,QAC1Bf,KAAM,KAAKD,YAAYC,KACvBC,KAAM,KAAKF,YAAYE,KACxB,EACAoE,KAAKC,GAAS,IAAO,KAAK7D,OAAS,EAAM,CAAC,EAC1C8D,UAAWC,GAAU,CACpB,KAAKxD,UAAYwD,EAAOC,KACxB,KAAKvE,YAAcsE,EAAOE,KAC5B,CAAC,CACL,yCAjGWvE,EAAmB,uBAAnBA,EAAmBwE,UAAA,CAAA,CAAA,kBAAA,CAAA,EAAAC,UAAA,SAAAC,EAAAC,EAAA,IAAAD,EAAA,WAGDE,EAAa,2rBCxB5ClG,GAAA,EAAA,gBAAA,CAAA,EAA8B,EAAA,KAAA,CAAA,EAC2BC,GAAA,EAAA,cAAA,EAAYC,GAAA,EACnEF,GAAA,EAAA,MAAA,CAAA,EAAgB,EAAA,oBAAA,CAAA,EAEZmG,GAAA,EAAA,aAAA,CAAA,EACFjG,GAAA,EACAF,GAAA,EAAA,wBAAA,CAAA,EAAqGS,GAAA,SAAA,SAAAC,EAAA,CAAA0F,OAAAzF,GAAA0F,CAAA,EAAAtF,GAAUkF,EAAAf,4BAAAxE,EAAAO,MAAA,CAA0C,CAAA,CAAA,EACvJqF,GAAA,EAAAC,GAAA,EAAA,EAAA,eAAA,EAAAC,EAAA,EAKFtG,GAAA,EAAwB,EACpB,EAERF,GAAA,EAAA,MAAA,CAAA,EAAkB,GAAA,kBAAA,EAAA,CAAA,EAQdS,GAAA,YAAA,SAAAC,EAAA,CAAA0F,OAAAzF,GAAA0F,CAAA,EAAAtF,GAAakF,EAAA1C,YAAA7C,CAAA,CAAmB,CAAA,CAAA,EAAC,cAAA,SAAAA,EAAA,CAAA0F,OAAAzF,GAAA0F,CAAA,EAAAtF,GAClBkF,EAAAzB,YAAA9D,CAAA,CAAmB,CAAA,CAAA,EAAC,gBAAA,SAAAA,EAAA,CAAA0F,OAAAzF,GAAA0F,CAAA,EAAAtF,GAClBkF,EAAArB,mBAAAlE,CAAA,CAA0B,CAAA,CAAA,EAAC,cAAA,SAAAA,EAAA,CAAA0F,OAAAzF,GAAA0F,CAAA,EAAAtF,GAC7BkF,EAAArB,mBAAAlE,CAAA,CAA0B,CAAA,CAAA,EAAC,gBAAA,SAAAA,EAAA,CAAA0F,OAAAzF,GAAA0F,CAAA,EAAAtF,GACzBkF,EAAArB,mBAAAlE,CAAA,CAA0B,CAAA,CAAA,EAC5CR,GAAA,EAEDuG,GAAA,GAAAC,GAAA,EAAA,EAAA,gBAAA,EAAA,EAKFxG,GAAA,QA7B0EI,GAAA,CAAA,EAAAH,GAAA,QAAA8F,EAAA5B,oBAAA,EACpE/D,GAAA,EAAAqG,GAAAV,EAAA/C,oBAAA,EAYF5C,GAAA,CAAA,EAAAH,GAAA,aAAA8F,EAAAxD,UAAA,EAAyB,cAAAwD,EAAA7D,WAAA,EACE,gBAAA6D,EAAA3D,aAAA,EACI,UAAA2D,EAAA9D,SAAA,EASjC7B,GAAA,CAAA,EAAAsG,GAAAX,EAAA5E,YAAA,GAAA,EAAA,kBDdUwF,GAAcC,GAAqBC,GAAAC,GAAEC,GAAiBC,GAAiBC,GAAEC,GAAoBC,GAAEC,GAAyBC,GAAEC,GAAkBC,GAAEC,GAAYxB,EAAA,EAAAyB,OAAA,CAAA;;;;;;;gEAAA,CAAA,CAAA,EAKhK,IAAOrG,EAAPsG,SAAOtG,CAAmB,GAAA,EAoG1BuB,GAAN,KAAgC,CAG9BgF,QAAM,CACJ,OAAO,KAAKC,WACd,CAEAC,KAAMC,EAA0C,CAC9C,KAAKF,YAAcG,SAASC,cAAc,KAAK,EAC/C,KAAKJ,YAAYK,IAAM,aAAaC,GAAMC,aAAaL,EAAOpC,KAAK0C,GAAI,OAAO,CAAC,aAC/E,KAAKR,YAAYS,UAAUC,IAAI,mBAAmB,CACpD,CAEAC,QAAQT,EAA0C,CAChD,YAAKF,YAAaK,IAAM,aAAaC,GAAMC,aAAaL,EAAOpC,KAAK0C,GAAI,OAAO,CAAC,aAEzE,EACT","names":["LocalEventService","frameworkOverrides","eventType","async","autoCreateListenerCollection","listenerMap","listeners","listener","event","agEvent","browserEvent","processEventListeners","listeners2","originalListeners2","callback","originalListeners","func","flush","queueCopy","_last","arr","_areEqual","a","b","comparator","value","index","_sortNumerically","array","a","b","_removeFromUnorderedArray","array","object","index","_removeFromArray","_removeAllFromUnorderedArray","toRemove","_removeAllFromArray","_insertIntoArray","toIndex","_moveInArray","array","objectsToMove","toIndex","_removeAllFromArray","obj","_insertIntoArray","_includes","value","_flatten","arrayOfArrays","_pushAll","target","source","AG_GRID_STOP_PROPAGATION","PASSIVE_EVENTS","supports","_stopPropagationForAgGrid","event","_isStopPropagationForAgGrid","_isEventSupported","tags","eventName","el","_getCtrlForEventTarget","gos","eventTarget","type","sourceElement","renderedComp","_isElementInEventPath","element","_getEventPath","_createEventPath","res","pointer","eventNoType","_addSafePassiveEventListener","frameworkOverrides","eElement","listener","options","_includes","BeanStub","beans","i","eventType","LocalEventService","object","handlers","destroyFuncs","k","handler","destroyFunc","fn","events","eventsKey","wrappedListener","propertiesChangeEvent","func","bean","context","afterPreCreateCallback","FrameworkEventListenerService","userListener","_makeNull","value","_exists","allowEmptyString","_missing","_missingOrEmpty","_toStringOrNull","_attrToNumber","valueParsed","_attrToBoolean","toBoolean","_jsonEquals","val1","val2","val1Json","val2Json","_defaultComparator","valueA","valueB","accentedCompare","valueAMissing","valueBMissing","doQuickCompare","a","b","_values","arr","SKIP_JS_BUILTINS","_iterateObject","callback","key","_cloneObject","copy","keys","_deepCloneDefinition","keysToSkip","obj","_isNonNullObject","_getAllValuesInObject","anyObject","ret","_mergeDeep","dest","source","copyUndefined","makeCopyOfSimpleObjects","sourceValue","destValue","_getValueUsingField","data","field","fieldContainsDots","fields","currentObject","COL_DEF_DEFAULTS","instanceIdSequence","getNextColInstanceId","isColumn","col","AgColumn","DEFAULT_COLUMN_MIN_WIDTH","colDef","userProvidedColDef","colId","primary","sortIndex","initialSortIndex","hide","initialHide","flex","initialFlex","parent","originalParent","suppressDotNotation","initialWidth","width","colDefWidth","colDefInitialWidth","showingAllGroups","showingThisGroup","rowNode","params","userFunc","moving","sort","sortOrder","visible","aggFunc","left","active","additionalEventAttributes","filterChangedEvent","pinned","firstRightPinned","lastLeftPinned","newValue","numberOfParents","isSpanningTotal","height","changed","colSpan","rowSpan","actualWidth","silent","rowGroup","pivot","isProvidedColumnGroup","AgProvidedColumnGroup","colGroupDef","groupId","padding","level","child","expanded","children","result","leafColumns","atLeastOneShowingWhenOpen","atLeastOneShowingWhenClosed","atLeastOneChangeable","j","abstractColumn","headerGroupShow","expandable","process","items","item","DefaultColumnTypes","doOnceFlags","_doOnce","_log","message","args","_warnOnce","msg","_errorOnce","_isFunction","val","_executeInAWhile","funcs","_executeAfter","executeNextVMTurnFuncs","executeNextVMTurnPending","_executeNextVMTurn","funcsCopy","func2","milliseconds","_debounce","delay","timeout","_throttle","wait","previousCall","currentCall","_waitUntil","condition","timeoutMessage","timeStamp","interval","executed","internalCallback","reachedTimeout","_compose","fns","arg","composed","f","ColumnKeyCreator","colField","count","idToTry","GROUP_AUTO_COLUMN_ID","getColumnsFromTree","rootColumns","recursiveFindColumns","childColumns","getWidthOfColsInList","columnList","destroyColumnTree","oldTree","newTree","oldObjectsById","depthFirstOriginalTreeSearch","colsToDestroy","isColumnGroupAutoCol","convertColumnTypes","typeKeys","ColumnFactory","defs","primaryColumns","existingTree","columnKeyCreator","existingCols","existingGroups","existingColKeys","unbalancedTree","treeDept","columnTree","group","autoGroupCols","liveTree","tree","dept","nextChild","autoGroup","balancedColumnTree","currentDept","columnDept","originalGroup","newChildren","firstPaddedGroup","currentPaddedGroup","newColId","colGroupDefMerged","paddedGroup","leaf","treeChildren","maxDeptThisLevel","newDept","existingColsCopy","def","existingColumns","providedGroup","existingGroupAndIndex","existingGroup","existingColAndIndex","column","colDefMerged","widthBeforeUpdate","newColDef","newGroupDef","defaultColDef","columnType","autoGroupColDef","isSortingCoupled","userColDef","dataTypeDefinitionColumnType","columnTypes","allColumnTypes","userTypes","t","typeColDef","abstractColDef","ColumnModel","pivotMode","convertSourceType","colsPreviouslyExisted","dispatchEventsFunc","oldCols","treeDepth","list","map","prevColTree","_areEqual","pivotResultCols","__spreadValues","showAutoGroupAndValuesOnly","valueColumns","isAutoGroupCol","isValueCol","updateColsMap","groupFullWidthRow","suppressAutoColumn","rowGroupCols","noAutoCols","destroyPrevious","autoColsSame","areColIdsEqual","newTreeDepth","treeDeptSame","putAutocolsFirstInList","cols","colsFiltered","actualPinned","updatedCols","keyAsString","node","groupLockGroupColumns","colIndex","groupCol","lastOrder","lastOrderMapped","index","colsMap","lastOrderFiltered","lastOrderFilteredMap","missingFromLastOrder","newCol","siblings","leafCol","presentInNewCols","notYetInSiblings","indexes","lastIndex","_insertIntoArray","colsOrdered","otherCols","colIds","newOrder","processedColIds","autoGroupInsertIndex","c","indexA","indexB","resizeOperation","movedColumns","toIndex","_moveInArray","rowGroupColumns","pivotColumns","columnDefs","pivotResultColsList","columnsMatch","defaultHeight","displayedHeights","autoSizeStrategy","columns","skipHeader","columnMatches","colDefMatches","idMatches","colsA","colsB","ColumnAutosizeService","colKeys","skipHeaderGroups","stopAtGroup","columnsAutosized","changesThisTimeAround","shouldSkipHeader","shouldSkipHeaderGroups","updatedColumns","preferredWidth","newWidth","columnGroups","headerGroupCtrl","resizedColumns","columnGroup","headerContainerCtrl","allDisplayedColumns","minWidth","maxWidth","FuncColsService","_removeFromArray","sourceColumnId","compareFn","added","initialAggFunc","fromIndex","impactedColumns","masterList","detectOrderChange","autoGroupsNeedBuilding","columnCallback","gridColumns","changes","idx","oldIndex","actionIsAdd","atLeastOne","columnToAdd","oldProvidedCols","flag","previousCols","setFlagFunc","getIndexFunc","getInitialIndexFunc","getValueFunc","getInitialValueFunc","colsWithIndex","colsWithValue","colIsNew","initialValue","initialIndex","include","getIndexForCol","defaultIndex","colA","colB","updatedRowGroupColumnState","updatedPivotColumnState","existingColumnStateUpdates","orderColumns","updatedColumnState","colList","enableProp","initialEnableProp","indexProp","initialIndexProp","primaryCols","updatedColIdArray","updatedColIds","newColIds","allColIds","colIdsInOriginalOrder","originalOrderMap","orderIndex","hasAddedNewCols","processPrecedingNewCols","originalOrderIndex","ColumnApplyStateService","providedCols","callbacks","applyStates","states","getById","columnsWithNoState","rowGroupIndexes","pivotIndexes","autoColStates","unmatchedAndAutoStates2","unmatchedCount2","previousRowGroupCols","previousPivotCols","state","applyDefaultsFunc","comparatorByIndex","autoColsCopy","stateItem","autoCol","unmatchedAndAutoStates","unmatchedCount","id","primaryColumnTree","columnStates","letRowGroupIndex","letPivotIndex","colsToProcess","groupAutoCols","getValueOrNull","rowGroupIndex","pivotIndex","defaultState","getValue2","key1","key2","calculated","minColWidth","startState","columnStateBefore","columnStateBeforeMap","colsForState","dispatchWhenListsDifferent","colsBefore","colsAfter","idMapper","beforeList","afterList","changesArr","getChangedColumns","changedPredicate","changedColumns2","colStateBefore","columnIdMapper","changedValues","cs","oldActive","activeChanged","aggFuncChanged","resizeChangePredicate","pinnedChangePredicate","visibilityChangePredicate","changedColumns","colStateAfter","colStateAfterMapped","s","colsIntersectIds","beforeFiltered","afterFiltered","csAfter","csBefore","gridCol","oldList","aHasIndex","bHasIndex","oldIndexA","oldIndexB","aHasOldIndex","bHasOldIndex","ColumnMoveService","columnsToMoveKeys","finished","columnsToMove","proposedColumnOrder","gridOrder","lockPositionToPlacement","position","isRtl","lastPlacement","rulePassed","placement","allColumnsCopy","gridBalancedTree","newIndexes","newColIndex","maxIndex","minIndex","spread","maxSpread","normal","right","reUnescapedHtml","HTML_ESCAPES","_escapeString","toEscape","skipEscapingHtmlChars","stringResult","reUnescapedHtml","chr","HTML_ESCAPES","_camelCaseToHumanText","camelCase","rex","rexCaps","word","_camelCaseToHyphenated","s","ColumnNameService","BeanStub","beans","column","location","includeAggFunc","headerName","columnGroup","providedColumnGroup","colGroupDef","colDef","headerValueGetter","params","_warnOnce","pivotValueColumn","pivotActiveOnThisColumn","_exists","aggFunc","aggFuncFound","valueColumns","isCollapsedHeaderEnabled","isTotalColumn","measureActive","aggregationPresent","aggFuncString","PivotResultColsService","destroyColumnTree","pivotKeys","valueColKey","valueColumnToFind","foundColumn","thisPivotKeys","_areEqual","key","colDefs","source","balancedTreeResult","tree","treeDepth","list","getColumnsFromTree","map","col","columnCallback","groupCallback","searchForColDefs","colDefs2","abstractColDef","ColumnSizeService","columnWidths","shiftKey","finished","sets","columnWidth","otherCol","widthDiff","otherColWidth","resizeSets","columnResizeSet","columns","changedCols","allResizedCols","set","width","ratios","newWidths","finishedCols","finishedColsGrew","loopCount","_errorOnce","subsetCols","subsetRatioTotal","pixelsToDistribute","index","ratioThisCol","ratioScale","lastCol","colNewWidth","minWidth","maxWidth","newWidth","atLeastOneColChanged","flexedCols","colsForEvent","minWidthAccumulated","maxWidthAccumulated","maxWidthActive","minWidthPasses","maxWidthPasses","displayedCenterCols","flexAfterDisplayIndex","allResizingCols","i","knownColumnsWidth","flexingColumns","minimumFlexedWidth","totalFlex","changedColumns","flexingColumnSizes","spaceForFlexingColumns","outer","spacePerFlex","widthByFlexRule","constrainedWidth","_removeFromUnorderedArray","remainingSpace","gridWidth","silent","limitsMap","_a","_b","dimensions","__objRest","allDisplayedColumns","doColumnsAlreadyFit","getWidthOfColsInList","colsToSpread","colsToNotSpread","colsToDispatchEventFor","finishedResizing","moveToNotSpread","_removeFromArray","widthOverride","minOverride","maxOverride","colWidth","availablePixels","scale","pixelsForLastCol","colMinWidth","colMaxWidth","autoSizeStrategy","type","propColumnLimits","defaultMinWidth","defaultMaxWidth","columnLimits","createUniqueColumnGroupId","groupId","instanceId","isColumnGroup","AgColumnGroup","partId","pinned","parent","allLeafColumns","child","lastChildLeft","_last","firstChildLeft","left","groupActualWidth","result","groupChild","expanded","leafColumns","isColumn","parentWithExpansion","GroupInstanceIdCreator","lastResult","VisibleColsService","skipTreeBuild","pickDisplayedCols","newBodyWidth","newLeftWidth","newRightWidth","evt","event","lastLeft","firstRight","cols","leftCols","rightCols","centerCols","idCreator","allColumns","pinnedLeft","center","pinnedRight","colOrGroup","doingRtl","_removeAllFromUnorderedArray","rowNode","displayedColumns","filterCallback","emptySpaceBeforeColumn","lastConsideredCol","maxAllowedColSpan","colSpan","columnsToCheckFilter","colsToRemove","j","filterPasses","colForFilter","oldIndex","direction","requiredLevel","colGroupLeafColumns","getDisplayColMethod","groupPointer","level","originalGroupLevel","groupPointerLevel","func","depthFirstAllColumnTreeSearch","item","allColumnGroups","isRtl","queryOrder","container","colId","checkPartId","matched","edge","isFirst","columnToCompare","oldDisplayedGroups","isStandaloneStructure","oldColumnsMapped","topLevelResultCols","groupsOrColsAtCurrentLevel","currentlyIterating","lastGroupedColIdx","createGroupToIndex","to","from","previousNode","previousNodeParent","newGroup","thisNode","thisNodeParent","providedGroup","groupInstanceIdCreator","uniqueId","displayedGroups","recursive","columnsOrGroups","columnOrGroup","columnsOrGroup","useDisplayedChildren","callback","childTree","res","PUBLIC_EVENTS","INTERNAL_EVENTS","ALL_EVENTS","INITIAL_GRID_OPTION_KEYS","_PropertyKeys","PropertyKeys","_ComponentUtil","eventName","ComponentUtil","_combineAttributesAndGridOptions","gridOptions","component","mergedOptions","__spreadValues","value","_processOnChange","changes","api","gridChanges","hasChanges","internalUpdateEvent","_iterateObject","CssClassManager","getGui","className","cls","eGui","addOrRemove","_toggleAriaAttribute","element","attribute","_removeAriaAttribute","_setAriaAttribute","_ariaAttributeName","_setAriaRole","role","_getAriaSortState","sortDirection","sort","_getAriaLabel","element","_setAriaLabel","label","_toggleAriaAttribute","_setAriaLabelledBy","labelledBy","_setAriaLive","element","live","_toggleAriaAttribute","_setAriaAtomic","atomic","_setAriaRelevant","relevant","_setAriaDisabled","element","disabled","_toggleAriaAttribute","_setAriaHidden","hidden","_setAriaExpanded","element","expanded","_setAriaAttribute","_setAriaSetSize","element","setsize","_setAriaAttribute","_setAriaPosInSet","position","_setAriaMultiSelectable","multiSelectable","_setAriaRowCount","rowCount","_setAriaRowIndex","rowIndex","_setAriaColCount","colCount","_setAriaColIndex","colIndex","_setAriaColSpan","colSpan","_setAriaSort","sort","_removeAriaSort","_removeAriaAttribute","_setAriaSelected","selected","_toggleAriaAttribute","_setAriaControls","controllerElement","controlledElement","_toggleAriaAttribute","_setAriaLabelledBy","_getAriaCheckboxStateName","translate","state","isSafari","safariVersion","isChrome","isFirefox","isMacOs","isIOS","invisibleScrollbar","browserScrollbarWidth","_isBrowserSafari","_getSafariVersion","versionMatch","_isBrowserChrome","win","_isBrowserFirefox","_isMacOsUserAgent","_isIOSUserAgent","_browserSupportsPreventScroll","_getTabIndex","el","numberTabIndex","tabIndex","_getMaxDivHeight","res","testUpTo","div","test","_getBodyWidth","_getBodyHeight","_getScrollbarWidth","initScrollbarWidthAndVisibility","body","width","_isInvisibleScrollbar","rtlNegativeScroll","FOCUSABLE_SELECTOR","FOCUSABLE_EXCLUDE","_isFocusableFormField","element","matches","isFocusable","isNotFocusable","isElementVisible","_isVisible","_setDisplayed","displayed","options","skipAriaHidden","_setAriaHidden","_setVisible","visible","_setDisabled","disabled","attributeName","addOrRemoveDisabledAttribute","e","_nodeListForEach","input","_isElementChildOfClass","cls","maxNest","counter","_getElementSize","el","height","width","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","paddingTop","paddingRight","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","boxSizing","_getInnerHeight","size","_getInnerWidth","_getAbsoluteHeight","_getAbsoluteWidth","_getElementRectWithOffset","offsetElementRect","_isRtlNegativeScroll","rtlNegativeScroll","template","_getScrollLeft","rtl","scrollLeft","_isBrowserChrome","_setScrollLeft","value","_isBrowserSafari","_clearElement","_removeFromParent","node","_isInDOM","_loadTemplate","tempDiv","_ensureDomOrder","eContainer","eChild","eChildBefore","_setDomChildOrder","orderedChildren","correctCellAtIndex","actualCellAtIndex","_insertWithDomOrder","eToInsert","_addStylesToElement","eElement","styles","key","parsedKey","_camelCaseToHyphenated","valueAsString","parsedValue","priority","_isHorizontalScrollShowing","_isVerticalScrollShowing","_setElementWidth","_setFixedWidth","_formatSize","_setFixedHeight","_isNodeOrElement","o","_copyNodeList","nodeList","result","_iterateNamedNodeMap","map","callback","attr","_addOrRemoveAttribute","name","action","NumberSequence","initValue","step","valToReturn","count","SHOW_QUICK_TOOLTIP_DIFF","FADE_OUT_TOOLTIP_TIMEOUT","INTERACTIVE_HIDE_DELAY","_TooltipStateManager","BeanStub","parentComp","tooltipShowDelayOverride","tooltipHideDelayOverride","shouldDisplayTooltip","beans","el","delayOption","delay","_warnOnce","type","trigger","e","_isIOSUserAgent","relatedTarget","parentCompGui","tooltipGui","mouseEvent","now","then","params","__spreadValues","_exists","callback","forceHide","event","tooltipInstanceCopy","tooltipComp","eGui","translate","addPopupRes","listener","parentGui","__spreadProps","tooltipPopupDestroyFunc","TooltipStateManager","TooltipFeature","ctrl","tooltip","name","parent","column","colDef","rowNode","compIdSequence","RefPlaceholder","Component","_Component","template","componentSelectors","CssClassManager","comp","element","paramsMap","newTooltipText","showDelayOverride","hideDelayOverride","location","getTooltipValue","elementRef","newComponent","current","usedAsParamRef","parentNode","_copyNodeList","childNode","childComp","childComp2","items","afterPreCreateCallback","key","isAgGridComponent","componentSelector","componentParams","source","dest","_iterateNamedNodeMap","value","eComponent","elements","tabIndex","_loadTemplate","components","suppressDataRefValidation","i","component","cssSelector","newChild","container","_isNodeOrElement","visible","options","skipAriaHidden","_setVisible","displayed","_setDisplayed","className","addOrRemove","iconNameClassMap","_createIcon","iconName","gos","iconContents","_createIconNoSpan","eResult","forceCreate","userProvidedIcon","icons","optionsIcons","rendererResult","span","cssClass","_setAriaRole","_areEventsNear","e1","e2","pixelCount","diffX","diffY","TouchListener","eElement","preventMouseClick","LocalEventService","startListener","moveListener","endListener","touchList","eventType","touchEvent","touchStartCopy","touchesMatch","touch","func","SortIndicatorTemplate","SortIndicatorComp","skipTemplate","eSortOrder","eSortAsc","eSortDesc","eSortMixed","eSortNone","suppressOrder","eParent","eIcon","sortDirection","isAscending","isDescending","alwaysHideNoSort","isNone","isColumnShowingRowGroup","isMixedSort","allColumnsWithSorting","indexThisCol","moreThanOneColSorting","col","showIndex","_clearElement","SortIndicatorSelector","HeaderCompTemplate","HeaderComp","oldParams","displayNameSanitised","_escapeString","touchListener","suppressMenuHide","tapMenuButton","menuTouchListener","showMenuFn","tapListener","target","filterButtonTouchListener","_removeFromParent","isLegacyMenu","isFilterShortcut","isLegacyMenuEnabled","moving","movedRecently","multiSort","onSortingChanged","sort","isMultiSorting","sourceCol","enabled","filterChangedCallback","filterPresent","isFilter","HeaderGroupComp","expandAction","_isStopPropagationForAgGrid","newExpandedValue","stopPropagationAction","_stopPropagationForAgGrid","providedColumnGroup","updateIcon","action","expanded","displayName","columnGroup","ModuleNames","ModuleNames2","_ModuleRegistry","module","modules","moduleBased","gridId","moduleMajor","moduleMinor","currentModuleMajor","currentModuleMinor","errorMsg","details","_errorOnce","result","moduleName","reason","warningMessage","modName","k","v","_values","ModuleRegistry","ARROW_UP","ARROW_DOWN","AnimateShowChangeCellRenderer","delta","absDelta","valueFormatted","valueToUse","deltaUp","refreshCountCopy","isInitialRender","AnimateSlideCellRenderer","slide","prevElement","_missing","KeyCode","AgAbstractLabel","config","labelSeparator","label","labelWidth","labelAlignment","disabled","alignment","eGuiClassList","hasEllipsis","width","_setElementWidth","_setDisabled","AgAbstractField","onValueChange","ariaEl","labelId","_getAriaLabel","_setAriaLabelledBy","_setAriaLabel","callbackFn","_setFixedWidth","silent","AgAbstractInputField","inputType","displayFieldTag","inputName","inputWidth","length","eInput","placeholder","_addOrRemoveAttribute","autoCompleteValue","AgCheckbox","readOnly","passive","previousValue","nextValue","input","selected","checkboxChangedEvent","AgCheckboxSelector","CheckboxCellRenderer","inputEl","_setAriaLive","isSelected","colId","GROUP_AUTO_COLUMN_ID","stateName","_getAriaCheckboxStateName","ariaLabel","node","eventStarted","valueChanged","eventStopped","LoadingCellRenderer","localeTextFunc","eLoadingIcon","SkeletonCellRenderer","id","ariaFailed","skeletonEffect","rowIndex","ariaLoading","OverlayComponent","LoadingOverlayComponent","customTemplate","NoRowsOverlayComponent","PopupComponent","TooltipComponent","_fuzzyCheckStrings","inputValues","validValues","allSuggestions","fuzzyMatches","invalidInputs","inputValue","validValue","invalidInput","_fuzzySuggestions","hideIrrelevant","filterByPercentageOfBestMatch","thisSuggestions","text","idx","stringWeightedDistances","a","b","suggestion","limit","values","indices","str1","str2","weight","lastIndex","UserComponentRegistry","comps","_iterateObject","propertyName","createResult","componentFromFramework","registeredViaFrameworkComp","jsComponent","isFwkComp","defaultComponent","moduleForComponent","_doOnce","componentName","validComponents","suggestions","AgPromise","_AgPromise","promises","resolve","remainingToResolve","combinedValues","promise","index","waiter","DateComponent","HeaderComponent","HeaderGroupComponent","CellRendererComponent","EditorRendererComponent","LoadingCellRendererComponent","CellEditorComponent","InnerRendererComponent","LoadingOverlayComponent2","NoRowsOverlayComponent2","TooltipComponent2","FilterComponent","FloatingFilterComponent","ToolPanelComponent","StatusPanelComponent","FullWidth","FullWidthLoading","FullWidthGroup","FullWidthDetail","MenuItemComponent","UserComponentFactory","_UserComponentFactory","colGroupDef","def","defaultFilter","defaultFloatingFilter","toolPanelDef","defObject","defaultName","mandatory","cellRenderer","compName","jsComp","fwComp","paramsFromSelector","popupFromSelector","popupPositionFromSelector","lookupFromRegistry","item","paramsMerged","componentClass","frameworkOverrides","defObjectAny","selectorFunc","selectorRes","assignComp","providedJsComp","ComponentClass","instance","thisComponentConfig","deferredInit","paramsFromGrid","_mergeDeep","userParams","userParamsFromFunc","_unwrapUserComp","compAsAny","GenericContext","beanName","beanInstance","BeanClass","beanFunc","bean","beanInstances","Context","HorizontalDirection","HorizontalDirection2","GHOST_TEMPLATE","DragAndDropService","BeanStub","beans","_createIcon","dragSource","allowTouch","params","sourceAndParams","item","_removeFromArray","mouseEvent","draggingEvent","fromNudge","hDirection","vDirection","validDropTargets","target","dropTarget","secondaryContainers","containers","container","rect","horizontalFit","verticalFit","allContainersFromDropTarget","mouseOverTarget","currentContainers","len","elementStack","el","_flatten","dragEnterEvent","dragLeaveEvent","zones","zone","event","clientX","eClientX","clientY","eClientY","dropZoneTarget","dragItem","x","y","ghost","ghostHeight","browserWidth","_getBodyWidth","browserHeight","_getBodyHeight","offsetParentSize","_getElementRectWithOffset","top","left","eDocument","win","windowScrollY","windowScrollX","_loadTemplate","eText","dragItemName","_isFunction","_escapeString","rootNode","targetEl","body","_warnOnce","iconName","shake","_clearElement","eIcon","AutoScrollService","forceSkipVerticalScroll","skipVerticalScroll","scrollTick","tickAmount","vScrollPosition","hScrollPosition","RowDragFeature","BeanStub","beans","eContainer","p","gridBodyCon","AutoScrollService","position","type","draggingEvent","currentNode","selectedNodes","a","b","rowNode","dragSourceDomDataKey","gridGui","dropZoneTarget","pixel","isFromThisGrid","managedDrag","rowNodes","rowIndexStr","_last","lastHighlightedRowNode","isBelow","increment","getRowIdFunc","addIndex","node","params","_warnOnce","processedParams","e","__spreadValues","events","getContainer","onDragEnter","onDragLeave","onDragging","onDragStop","yNormalised","mouseIsPastLastRow","overIndex","overNode","vDirectionString","event","DragService","dragSourceAndListener","element","mouseDownListener","touchStartListener","item","_removeFromArray","mouseListener","eElement","includeTouch","stopPropagationForTouch","touchListener","suppressTouch","touchEvent","_isFocusableFormField","touch","touchMoveEvent","touchEndEvent","documentTouchMove","target","mouseEvent","mouseMoveEvent","mouseUpEvent","contextEvent","currentEvent","listener","options","startEvent","dragStartPixels","requiredPixelDiff","_exists","_areEventsNear","touchList","i","el","_isBrowserSafari","isEnableCellTextSelect","isMouseMove","eventOrTouch","func","RowDragComp","Component","cellValueFn","column","customGui","suppressVisibilityChange","_createIconNoSpan","strategy","ManagedVisibilityStrategy","NonManagedVisibilityStrategy","dragElement","selection","managed","colDef","eGui","translate","dragItem","dragItemCount","rowDragText","VisibilityStrategy","parent","neverDisplayed","displayedOptions","shown","isShownSometimes","_isFunction","rowDragFeature","shouldPreventRowMove","suppressRowDrag","hasExternalDropZones","_RowNode","data","update","oldData","newData","_errorOnce","oldNode","id","isRowSelectableFunc","newVal","suppressSelectionUpdate","selected","parentKeys","excludeSelf","keys","pointer","key","value","eventName","firstChild","lastChild","childIndex","rowTop","displayed","dragging","highlighted","hovered","allChildrenCount","master","group","rowHeight","estimated","cellHeight","_debounce","notAllPresent","nonePresent","newRowHeight","autoHeights","col","activeColsForRow","rowModel","rowIndex","uiLevel","expanded","forceSync","__spreadProps","colKey","newValue","eventSource","oldValue","valueChanged","lockedClosedGroup","isOpenGroup","includeFooter","groupIncludeFooterOpt","groupAlwaysShowAggData","ignoreAggData","_missing","columnId","newAggData","oldAggData","eventFunc","colId","isTreeData","isGroupFunc","_missingOrEmpty","cellChangedEvent","callback","child","atLeastOneSelected","atLeastOneDeSelected","atLeastOneMixed","childState","selectable","source","selectionNotAllowed","selectionNotChanged","sibling","clearSelection","potentialParent","parentNode","eventType","userListener","LocalEventService","FrameworkEventListenerService","rowGroupColumn","currentRowNode","isCandidate","foundFirstChildPath","nodeToSwapIn","parentRowNode","isFullWidthCellFunc","res","ignoredProperties","footerNode","RowNode","FilterManager","enabled","isFilterPresent","doesFilterPass","model","additionalEventAttributes","columns","AgPromise","filterChangedEvent","_mergeDeep","filterToSkip","showParentFilter","oldCompDetails","newCompDetails","expression","show","eCompToInsertBefore","FilterWrapperComp","filter","init","guiFromFilter","_clearElement","RESIZE_CONTAINER_STYLE","RESIZE_TEMPLATE","PositionableFeature","config","clientHeight","clientWidth","x","y","centered","forcePopupParentAsOffsetParent","minWidth","width","minHeight","height","computedMinHeight","computedMinWidth","isElementVisible","_isVisible","boundaryEl","offsetParentComputedStyles","paddingWidth","paddingHeight","initialisedDuringPositioning","top","left","movable","moveElement","resizable","side","isSideResizable","resizerEl","popup","isPercent","_setFixedHeight","_getAbsoluteHeight","availableHeight","elRect","offsetParentRect","yPosition","parentTop","additionalHeight","parentEl","bottom","_setFixedWidth","_getAbsoluteWidth","xPosition","ePopup","constrain","applyMaxHeightToElement","isLeft","isTop","anywhereWithin","topBuffer","xDiff","yDiff","movementX","movementY","diff","parentRect","boundaryElRect","skipX","skipY","resizers","siblings","currentEl","isFlex","nextHeight","nextWidth","computedStyle","vertical","containerToFlex","isRight","isBottom","isHorizontal","isVertical","offsetLeft","offsetTop","direction","oldWidth","newWidth","skipWidth","oldHeight","newHeight","skipHeight","_ManagedFocusFeature","eFocusableElement","callbacks","nextRoot","_isStopPropagationForAgGrid","_stopPropagationForAgGrid","KeyCode","ManagedFocusFeature","FILTER_LOCALE_TEXT","getDebounceMs","debounceDefault","isUseApplyButton","ProvidedFilter","filterNameKey","RefPlaceholder","paramsMap","templateString","buttons","hasButtons","destroyFunc","_removeFromParent","fragment","addButton","text","clickListener","button","_loadTemplate","debounceMs","debounceFunc","currentModel","afterUiUpdatedFunc","afterAppliedFunc","newModel","previousModel","afterFloatingFilter","afterDataChange","closeOnApply","keyboardEvent","fromFloatingFilter","apply","isValid","applyFilterButton","_setDisabled","containerType","isResizable","positionableFeature","gos","newParams","AgRadioButton","AgCheckbox","AgList","cssIdentifier","unFocusable","pos","isDown","itemToHighlight","nextPos","currentIdx","rowCount","itemHeight","pageSize","newIndex","listOptions","listOption","valueToRender","itemEl","option","idx","_setAriaPosInSet","_setAriaSetSize","eDocument","_setAriaRole","span","TooltipFeature","silent","_setAriaSelected","scrollTop","offsetHeight","AgPickerField","AgAbstractField","pickerGap","maxPickerHeight","variableWidth","minPickerWidth","maxPickerWidth","displayId","ariaEl","pickerIcon","inputWidth","icon","_setAriaExpanded","focusableEl","pickerGui","ePicker","pickerAriaLabelKey","pickerAriaLabelValue","modalPicker","popupParams","activeEl","shouldRestoreFocus","addPopupRes","_formatSize","_setElementWidth","maxHeight","_getInnerHeight","pickerType","alignSide","focused","gap","AgSelect","placeholder","eListAriaEl","listId","_setAriaControls","fromPicker","displayValue","AgSelectSelector","OptionsFactory","defaultOptions","filterOption","requiredProperties","propertyCheck","v","firstFilterOption","name","SimpleFilter","customOpts","numberOfInputs","eType","conditions","aIsSimple","bIsSimple","aSimple","bSimple","aCombined","bCombined","_areEqual","aModel","bModel","newOptionsList","condition","combinedModel","numConditions","numPrevConditions","orChecked","eJoinOperatorAnd","eJoinOperatorOr","simpleModel","operator","models","m","eConditionBody","eJoinOperatorPanel","index","uniqueGroupId","eJoinOperators","andOr","eJoinOperator","defaultJoinOperator","filterOptions","displayKey","customOption","joinOperator","lastUiCompletePosition","areAllConditionsUiComplete","activePosition","removeStartPosition","numConditionsToRemove","disabled","_setDisplayed","startPosition","deleteCount","joinOperatorIndex","elements","components","comp","items","firstInput","AgAbstractInputField","appliedModel","updatedLastUiCompletePosition","conditionsRemoved","shouldRemovePositionAtEnd","positionBeforeLastUiCompletePosition","shouldUpdateConditionStatusesAndValues","defaultPlaceholder","filterPlaceholderFn","filterOptionKey","globalTranslate","ariaLabel","cb","inputs","input","filteringLabel","label","values","elPosition","filterModel","cellValue","customFilterOption","customFilterResult","predicate","ScalarFilter","filterType","comparator","compareResult","compareToResult","A_KEYCODE","C_KEYCODE","V_KEYCODE","D_KEYCODE","Z_KEYCODE","Y_KEYCODE","_isEventFromPrintableCharacter","_isUserSuppressingKeyboardEvent","editing","colDefFunc","_isUserSuppressingHeaderKeyboardEvent","headerRowIndex","_normaliseQwertyAzerty","keyCode","code","_isDeleteKey","alwaysReturnFalseOnBackspace","_isMacOsUserAgent","AgInputTextField","className","inputType","pattern","preventCharacters","c","AgInputTextFieldSelector","AgInputNumberField","floatedValue","precision","min","max","step","val","isScientificNotation","floatString","parts","_addOrRemoveAttribute","setValueFunc","setInputValueOnlyFunc","setInputValueOnly","normalizedValue","inputValue","AgInputNumberFieldSelector","DEFAULT_NUMBER_FILTER_OPTIONS","SimpleFilterModelFormatter","localeService","optionsFactory","valueFormatter","isCombined","customOptions","joinOperatorTranslateKey","displayName","NumberFilterModelFormatter","getAllowedCharPattern","filterParams","allowedCharPattern","NumberFilter","filterTo","right","valueToSet","eCondition","eValues","fromTo","eValue","result","_elPosition","filterText","_makeNull","invalidInputs","DEFAULT_TEXT_FILTER_OPTIONS","TextFilterModelFormatter","trimInputForFilter","trimmedInput","TextFilter","from","legacyComparator","applySideEffects","formattedValues","cellValueFormatted","api","context","textFormatter","matcherParams","toNumber","parsed","toConstrainedNum","num","_padStartWidthZeros","totalStringSize","_createArrayOfNumbers","first","last","_formatNumberCommas","value","thousandSeparator","decimalSeparator","_serialiseDate","date","includeTime","separator","serialised","part","_padStartWidthZeros","calculateOrdinal","_dateToFormattedString","format","fullYear","months","days","replace","regexp","match","_parseDateTimeFromString","dateStr","timeStr","fields","f","year","month","day","hours","minutes","seconds","DateCompWrapper","context","userComponentFactory","dateComponentParams","eParent","onReady","dateComp","disabled","displayed","_setDisplayed","placeholder","label","params","hasRefreshed","_warnOnce","DEFAULT_DATE_FILTER_OPTIONS","DateFilterModelFormatter","SimpleFilterModelFormatter","dateFilterParams","localeService","optionsFactory","condition","options","type","numberOfInputs","isRange","dateFrom","dateTo","formattedFrom","formattedTo","DEFAULT_MIN_YEAR","DEFAULT_MAX_YEAR","DateFilter","ScalarFilter","beans","filterModel","filterDate","cellValue","cellAsDate","yearParser","param","fallback","element","dateCompWrapper","eCondition","eConditionPanels","dateConditionComps","fromTo","eConditionPanel","startPosition","deleteCount","components","comp","position","valid","index","elPosition","aSimple","bSimple","model","values","__spreadValues","globalTranslate","ariaLabel","result","_elPosition","key","SetLeftFeature","BeanStub","columnOrGroup","eCell","colsSpanning","_last","onLeftChanged","suppressMoveAnimation","oldLeftExists","_exists","colOrGroup","left","oldLeft","oldActualLeft","actualLeft","leftPosition","leftWidth","bodyWidth","isColumnGroup","children","_setAriaColSpan","CSS_FIRST_COLUMN","CSS_LAST_COLUMN","_getHeaderClassesFromColDef","abstractColDef","gos","column","columnGroup","_missing","getColumnClassesFromCollDef","refreshFirstAndLastStyles","comp","column","presentedColsService","CSS_FIRST_COLUMN","CSS_LAST_COLUMN","getClassParams","abstractColDef","gos","columnGroup","getColumnClassesFromCollDef","classesOrFunc","_missing","classToUse","params","instanceIdSequence2","_AbstractHeaderCellCtrl","BeanStub","columnGroupChild","beans","parentRowCtrl","e","headerRowIndex","_isUserSuppressingHeaderKeyboardEvent","eGui","event","colIdx","_setAriaColIndex","activeEl","isLeftOrRight","KeyCode","isLeft","direction","HorizontalDirection","diff","leftWidth","rightWidth","bodyWidth","_getInnerWidth","pinned","isRtl","wrapperHasFocus","key","mouseEvent","touchEvent","columnToUse","isColumn","eventType","AbstractHeaderCellCtrl","HoverFeature","columns","element","HeaderFilterCellCtrl","eButtonShowMainFilter","eFloatingFilterBody","colDef","filterExists","floatingFilterExists","eMenuIcon","_createIconNoSpan","ManagedFocusFeature","localeTextFunc","_setAriaLabel","nextFocusableEl","nextFocusableColumn","backwards","nextCol","notFromHeaderWrapper","fromWithinHeader","_isElementChildOfClass","lastFocusEvent","fromTab","shouldFocusLast","rowIndex","listener","hovered","setLeftFeature","SetLeftFeature","compDetails","eventSource","filterManager","syncWithFilter","compPromise","parentModel","filterChangedEvent","__spreadProps","__spreadValues","width","isFilterAllowed","wasActive","becomeActive","newCompDetails","compInstance","userCompDetails","floatingFilter","hasRefreshed","_warnOnce","VERSION","isColumnFilterPresent","getFilterInstance","callback","getColumnFilterInstance","destroyFilter","setFilterModel","model","getFilterModel","getColumnFilterModel","setColumnFilterModel","showColumnFilter","colKey","_errorOnce","getDefaultFloatingFilterType","frameworkOverrides","def","getFromDefault","defaultFloatingFilterType","compName","jsComp","fwComp","UserComponentFactory","FilterComponent","ColumnFilterService","source","allPromises","previousModel","modelKeys","filterWrapper","colId","newModel","AgPromise","currentModel","before","after","_jsonEquals","filterPromise","resolve","filter","result","_exists","node","filterToSkip","isFilterActive","groupFilterEnabled","isAggFilter","isShowingPrimaryColumns","activeAggregateFilters","activeColumnFilters","additionalEventAttributes","targetAggregates","data","aggData","targetedFilters","targetedData","i","action","filterInstance","filterColumn","rowNode","defaultFilter","ModuleRegistry","cellDataType","r","_cloneObject","wrapper","currentColumn","groupColumn","showParentFilter","parentFilterInstance","filterComponent","instance","_unwrapUserComp","filterParams","finalFilterParams","columnListener","newFilterParams","oldCompDetails","oldComponentClass","newComponentClass","col","unwrapped","promise","res","isAnyFilterPresent","onFilterChanged","ReadOnlyFloatingFilter","Component","AgInputTextFieldSelector","RefPlaceholder","displayName","translate","modelAsString","SimpleFloatingFilter","isCombined","condition","simpleModel","update","OptionsFactory","editable","filterType","customFilterOption","numberOfInputs","type","uneditableTypes","DateFloatingFilter","DEFAULT_DATE_FILTER_OPTIONS","DateFilterModelFormatter","allowEditing","dateModel","_parseDateTimeFromString","_setDisplayed","filterValueDate","filterValueText","_serialiseDate","date","debounceMs","getDebounceMs","_debounce","DateCompWrapper","dateComp","DefaultDateComponent","inputElement","shouldUseBrowserDatePicker","_isBrowserSafari","minValidYear","maxValidYear","minValidDate","maxValidDate","parsedMinValidDate","parsedMaxValidDate","v","_dateToFormattedString","placeholder","ariaLabel","disabled","_isBrowserChrome","_isBrowserFirefox","_getSafariVersion","FloatingFilterTextInputService","parentElement","AgInputTextField","eInput","autoComplete","value","silent","TextInputFloatingFilter","isUseApplyButton","toDebounce","_clearElement","isEnterKey","trimInputForFilter","FloatingFilterNumberInputService","AgInputNumberField","eNumberInput","eTextInput","NumberFloatingFilter","NumberFilterModelFormatter","getAllowedCharPattern","DEFAULT_NUMBER_FILTER_OPTIONS","TextFloatingFilter","TextFilterModelFormatter","DEFAULT_TEXT_FILTER_OPTIONS","isQuickFilterPresent","getQuickFilter","resetQuickFilter","QuickFilterService","resetListener","pivotMode","groupAutoCols","providedCols","columnsForQuickFilter","usingCache","part","quickFilter","parser","newFilter","parsedFilter","matcher","hasChanged","filterPart","quickFilterAggregateText","quickFilterParts","stringParts","FilterCoreModule","FilterManager","FilterApiModule","ColumnFilterModule","ColumnFilterApiModule","FloatingFilterCoreModule","ReadOnlyFloatingFilterModule","VERSION","ReadOnlyFloatingFilter","FloatingFilterCoreModule","SimpleFilterModule","ColumnFilterModule","TextFilter","NumberFilter","DateFilter","DefaultDateComponent","SimpleFloatingFilterModule","TextFloatingFilter","NumberFloatingFilter","DateFloatingFilter","QuickFilterCoreModule","QuickFilterService","FilterCoreModule","QuickFilterApiModule","isQuickFilterPresent","getQuickFilter","resetQuickFilter","QuickFilterModule","FilterModule","ColumnFilterApiModule","AbstractHeaderCellComp","Component","template","ctrl","HeaderFilterCellComp","RefPlaceholder","eGui","compProxy","cssClassName","on","displayed","_setDisplayed","compDetails","width","eIcon","comp","HeaderCellComp","name","value","sort","_setAriaSort","_removeAriaSort","selectAllGui","versionCopy","version","headerComp","HeaderGroupCellComp","setAttribute","key","expanded","details","headerGroupComp","destroyFunc","eHeaderGroupGui","HeaderRowComp","Component","ctrl","_setAriaRowIndex","compProxy","height","top","ctrls","forceOrder","width","oldComps","id","comp","_iterateObject","comps","_getAllValuesInObject","a","b","leftA","leftB","elementsInOrder","c","_setDomChildOrder","headerCtrl","result","HeaderGroupCellComp","HeaderFilterCellComp","HeaderCellComp","HeaderNavigationService","BeanStub","beans","p","eDocument","centerHeaderContainer","colKey","floatingFilter","column","allCtrls","isFloatingFilterVisible","_last","headerRowCount","row","col","headerRowIndex","direction","fromHeader","event","rowLen","isUp","nextRow","nextFocusColumn","headerRowIndexWithoutSpan","skipColumn","fromTab","focusedHeader","isLeft","isRtl","nextHeader","normalisedDirection","userFunc","currentIndex","nextPosition","nextRowIndex","columnToScrollTo","isColumnGroup","columns","GridHeaderCtrl","comp","eGui","eFocusableElement","ManagedFocusFeature","listener","columnModel","numberOfFloating","totalHeaderHeight","groupHeight","headerHeight","numberOfNonGroups","numberOfGroups","px","pivotMode","shouldAllowOverflow","KeyCode","_exists","relatedTarget","mouseEvent","touch","touchEvent","target","_isIOSUserAgent","touchListener","TouchListener","longTapListener","CenterWidthFeature","callback","addSpacer","printLayout","centerWidth","leftWidth","rightWidth","totalWidth","BodyDropPivotTarget","pinned","draggingEvent","dragColumns","attemptMoveColumns","params","isFromHeader","hDirection","xPosition","fromEnter","fakeEvent","gos","columnMoveService","presentedColsService","draggingLeft","draggingRight","allMovingColumns","newCols","movingGroup","parent","newCol","allMovingColumnsOrdered","validMoves","calculateValidMoves","oldIndex","calculateOldIndex","firstValidMove","constrainDirection","displayedCols","potentialMoves","targetOrder","i","move","order","displayedOrder","_areEqual","fragCount","groupFragCount","a","b","moveColumns","toIndex","source","finished","movingCols","gridCols","indexes","_sortNumerically","firstIndex","parents","result","count","getDisplayedColumns","type","allDisplayedCols","allGridCols","movingDisplayedCols","_includes","otherDisplayedCols","otherGridCols","displayIndex","availableWidth","widthOfMovingDisplayedCols","leftColumn","numberComparator","pointer","lastIndex","displacedCol","firstDisplayIndex","normaliseX","x","fromKeyboard","ctrlsService","eViewport","MoveColumnFeature","visibleState","visibleColumns","visible","allowedCols","c","xAdjustedForScroll","centerCtrl","firstVisiblePixel","lastVisiblePixel","_missing","mouseX","dragSourceType","lastMovedInfo","_errorOnce","pixelsToMove","pixelsMoved","scrollFeature","columnsThatCanPin","pinType","BodyDropTarget","eContainer","ResizeFeature","eResize","ctrl","destroyResizeFuncs","canResize","canAutosize","addResize","_setDisplayed","finishedWithResizeFunc","skipHeaderOnAutoSize","autoSizeColListener","removeResize","f","refresh","resize","autoSize","resizeAmount","key","lastResizeAmount","resizeStartWidth","resizeAmountNormalised","newWidth","columnWidths","bodyWidth","_getInnerWidth","shiftKey","resizing","dragChange","notPinningLeft","pinningRight","SelectAllFeature","checkbox","AgCheckbox","_setAriaRole","_setAriaHidden","allSelected","hasNodesToSelect","translate","ariaStatus","ariaLabel","feature","_warnOnce","rowModelType","value","justFiltered","justCurrentPage","func","HeaderCellCtrl","AbstractHeaderCellCtrl","parentRowCtrl","eHeaderCompWrapper","HoverFeature","SetLeftFeature","e","delta","actualWidth","minWidth","maxWidth","left","width","compDetails","colDef","buttonElement","multiSort","sort","shouldDisplayTooltip","isFilterShortcut","headerComp","HeaderComp","rowIndex","isTooltipWhenTruncated","textEl","tooltipCtrl","tooltipFeature","TooltipFeature","refreshHeaderClasses","classes","_getHeaderClassesFromColDef","oldClasses","eSource","displayName","dragAndDropService","hideColumnOnExit","dragSource","dragItem","unlockedColumns","newCompDetails","columnWidth","updateSortableCssClass","isFilterActive","wrapText","numberOfParents","isSpanningTotal","groupHeaderHeight","extraHeight","wrapperElement","resizeObserverService","measureHeight","timesCalled","paddingTop","paddingBottom","borderBottomWidth","borderTopWidth","_getElementSize","autoHeight","doc","notYetInDom","possiblyNoContentYet","isMeasuring","stopResizeObserver","checkMeasuring","newValue","startMeasuring","stopMeasuring","_getAriaSortState","property","ariaDescription","isHovered","clickListener","contextMenuListener","isMouseOver","active","isFilter","GroupResizeFeature","columnGroup","keys","initialValues","columnsToResize","resizeRatios","columnSizeAndRatios","groupAfter","takeFromLeafCols","groupAfterColumns","groupAfterStartWidth","groupAfterRatios","preferredSize","resizeSets","diff","initialSizeOfColumns","GroupWidthFeature","widthChangedListener","HeaderGroupCellCtrl","leafCols","rect","id","headerPosition","displayedLeafColumns","targetColumn","groupId","previousColumnGroup","previousPosition","newColumnGroup","__spreadProps","__spreadValues","expanded","colGroupDef","providedColGroup","leafColumns","wrapperHasFocus","newExpandedValue","eHeaderGroup","allLeafColumns","allColumnsOriginalOrder","allColumnsCurrentOrder","_removeFromArray","childSuppressesMoving","instanceIdSequence3","HeaderRowCtrl","typeClass","initCompState","onHeightChanged","_values","cellCtrl","topOffset","rowHeight","filterManager","sizes","afterScroll","ctrlsToDisplay","forceOrder","oldCtrls","child","isFocusedAndDisplayed","focusService","visibleColsService","oldCtrl","headerColumn","idOfChild","headerCtrl","viewportColumns","actualDepth","columnViewportService","items","ctrl2","HeaderRowContainerCtrl","onDisplayedColsChanged","res","keepColumns","sequence","NumberSequence","focusedHeaderPosition","refreshColumnGroups","groupRowCount","refreshColumns","needNewInstance","refreshFilters","destroyPreviousComp","rowIndexMismatch","isColumn","offset","dropContainer","bodyDropTarget","position","includeFloatingFilter","pinningLeft","hidden","hiddenChanged","scrollbarWidth","widthWithPadding","PINNED_LEFT_TEMPLATE","PINNED_RIGHT_TEMPLATE","CENTER_TEMPLATE","HeaderRowContainerComp","Component","RefPlaceholder","compProxy","displayed","ctrls","pinnedLeft","pinnedRight","template","rowComp","oldRowComps","prevGui","appendEnsuringDomOrder","_ensureDomOrder","ctrlId","existingComp","HeaderRowComp","_getAllValuesInObject","GridHeaderComp","cssClassName","on","height","addContainer","container","GridHeaderSelector","LayoutFeature","BeanStub","view","domLayout","params","cssClass","_warnOnce","OverlayWrapperComponent","Component","RefPlaceholder","beans","overlayWrapperClassList","overlayWrapperCssClass","overlayComponentPromise","gridOption","comp","component","currentValue","__spreadValues","activeOverlay","updateListenerDestroyFunc","_clearElement","OverlayWrapperSelector","AbstractFakeScrollComp","template","direction","_isMacOsUserAgent","_isIOSUserAgent","_isInvisibleScrollbar","eGui","onActivate","onDeactivate","value","viewport","_waitUntil","_isVisible","fn","FakeHScrollComp","spacerWidthsListener","CenterWidthFeature","width","bottomPinnedHeight","vScrollShowing","rightSpacing","scrollOnRight","scrollbarWidth","_setFixedWidth","leftSpacing","hScrollShowing","invisibleScrollbar2","isSuppressHorizontalScroll","scrollContainerSize","_setFixedHeight","_getScrollLeft","_setScrollLeft","FakeHScrollSelector","SetHeightFeature","eContainer","eViewport","height","heightString","FakeVScrollComp","adjustedScrollbarWidth","ctrlsService","gridBodyViewportEl","eViewportScrollTop","gridBodyViewportScrollTop","force","FakeVScrollSelector","GridBodyScrollFeature","eBodyViewport","_debounce","p","fakeHScrollComp","fakeVScrollComp","isDebounce","onVScroll","onFakeVScroll","scrollLeft","offset","topCenter","stickyTopCenter","stickyBottomCenter","centerHeader","bottomCenter","centerViewport","isCenterViewportLastHorizontal","source","centerContainerViewport","newScrollLeft","scrollTop","fakeScrollLeft","bodyScrollEvent","bodyScrollEndEvent","__spreadProps","scrollTo","touchOnly","clientHeight","_getInnerHeight","scrollHeight","clientWidth","scrollWidth","_isRtlNegativeScroll","frameNeeded","hScrollPosition","fromAlignedGridsService","maxScrollLeft","vScrollPosition","pixels","oldScrollPosition","comparator","position","rowCount","indexToSelect","i","node","index","paginationPanelEnabled","gridBodyCtrl","stickyTopHeight","stickyBottomHeight","rowNode","rowGotShiftedDuringOperation","startingRowTop","startingRowHeight","paginationOffset","rowTopPixel","rowBottomPixel","scrollPosition","heightOffset","vScrollTop","vScrollBottom","viewportHeight","pxTop","pxBottom","pxMiddle","rowAboveViewport","rowBelowViewport","newScrollPosition","key","column","newHorizontalScroll","top","left","columnBeforeStart","columnAfterEnd","viewportTooSmallForColumn","viewportWidth","isRtl","alignColToStart","alignColToEnd","isMiddle","colLeft","colMiddle","colRight","viewportStart","viewportEnd","bodyWidth","colWidth","multiplier","colLeftPixel","colRightPixel","colMidPixel","viewportStartPixel","viewportEndPixel","CSS_CLASS_FORCE_VERTICAL_SCROLL","CSS_CLASS_CELL_SELECTABLE","CSS_CLASS_COLUMN_MOVING","GridBodyCtrl","eGridBody","eTop","eBottom","eStickyTop","eStickyBottom","props","elements","element","e","target","isFocusedElementNested","_isElementChildOfClass","relatedTarget","gridContainRelatedTarget","isNestedRelatedTarget","moving","selectable","visible","pad","columns","event","focusOutListener","elementWithFocus","_getTabIndex","clickInsideGrid","viewports","popupService","popup","headerCount","total","listener","overflowY","show","allowVerticalScroll","_isVerticalScrollShowing","initialSizeMeasurementComplete","updateAnimationClass","animateRows","animateRowsCssClass","fullWidthContainer","eCenterColsViewport","mouseEvent","touch","touchEvent","touchListener","TouchListener","longTapListener","RowDragFeature","pinnedRowModel","floatingTopHeight","floatingBottomHeight","vScrollVisible","headerHeight","pinnedTopHeight","pinnedBottomHeight","nextTimeout","scrollWidthToRemove","availableWidth","_getInnerWidth","CellComp","cellCtrl","printLayout","eRow","editingRow","cellDiv","setAttribute","name","_setAriaRole","tabIndex","compProxy","cssClassName","on","styles","_addStylesToElement","include","compDetails","valueToDisplay","forceNewCellRendererInstance","controlWrapperChanged","editing","providingControls","usingWrapper","putWrapperIn","wrapperDiv","takeWrapperOut","_removeFromParent","usingCellValue","putCellValueIn","cellSpan","takeCellValueOut","templateChanged","versionCopy","cellEditorPromise","c","_missing","eParent","escapedValue","_escapeString","context","compClassAndParams","result","useTaskService","displayComponentVersionCopy","componentClass","createCellRendererFunc","componentPromise","callback","cellRendererVersion","cellRendererClass","cellRenderer","requestVersion","cellEditor","cellEditorInPopup","isPopup","ePopupGui","useModelPopup","positionToUse","positionParams","positionCallback","translate","addPopupRes","_browserSupportsPreventScroll","RowComp","ctrl","containerType","rowDiv","style","domOrder","cellCtrls","transform","rowIndex","rowId","businessKey","getUpdatedParams","res","cellsToRemove","cellCompsToRemove","_getAllValuesInObject","cellComp","elementsInOrder","_setDomChildOrder","cellsToDestroy","cp","fullWidthRowComponent","_errorOnce","cellComps","instanceId","fullWidthCellRenderer","ViewportSizeFeature","centerContainerCtrl","newWidth","columnsToRemove","processUnpinnedColumns","pinnedRightWidth","pinnedLeftWidth","totalPinnedWidth","pinnedLeftColumns","pinnedRightColumns","indexRight","indexLeft","totalWidthRemoved","spaceNecessary","currentColumn","bodyHeight","DragListenerFeature","CheckboxSelectionComponent","AgCheckboxSelector","state","stateName","_getAriaCheckboxStateName","ariaKey","ariaLabel","translatedLabel","newValue","groupSelectsFiltered","_stopPropagationForAgGrid","isSelected","showOrHideSelectListener","isVisible","extraParams","DndSourceComp","eCell","_createIconNoSpan","dragEvent","providedOnRowDrag","defaultOnRowDrag","jsonData","CellCustomStyleFeature","colDef","cellClassRules","cellClassParams","className","cellStyleParams","cellStyleFunc","CellKeyboardListenerFeature","rowCtrl","KeyCode","endCell","gos","rangeService","eventService","_isDeleteKey","emptyValue","currentSelection","newSelection","updatedCount","CellMouseListenerFeature","eventName","_isStopPropagationForAgGrid","isMultiKey","cellClickedEvent","_isEventSupported","nowMillis","frameworkOverrides","cellDoubleClickedEvent","ctrlKey","metaKey","shiftKey","focusService","ranges","shouldFocus","forceBrowserFocus","_isBrowserSafari","_isFocusableFormField","focusedCellPosition","rowPinned","focusedCellCtrl","thisCell","cellInRange","isRightClick","cellMouseOutEvent","cellMouseOverEvent","cellContainsTarget","cellContainsRelatedTarget","CellPositionFeature","rowSpan","colsSpanning","_areEqual","col","colSpan","pointer","pinned","mostLeftCol","_last","leftPosition","leftWidth","totalRowHeight","CSS_CELL_RANGE_SELECTED","CSS_CELL_RANGE_CHART","CSS_CELL_RANGE_SINGLE_CELL","CSS_CELL_RANGE_CHART_CATEGORY","CSS_CELL_RANGE_HANDLE","CSS_CELL_RANGE_TOP","CSS_CELL_RANGE_RIGHT","CSS_CELL_RANGE_BOTTOM","CSS_CELL_RANGE_LEFT","CellRangeFeature","beans","ctrl","cellComp","eGui","_setAriaSelected","rangeBorders","isSingleCell","isTop","isRight","isBottom","isLeft","rangeService","cellRanges","range","_includes","isRtl","top","right","bottom","left","thisCol","presentedColsService","leftCol","rightCol","ranges","i","startRow","endRow","shouldHaveSelectionHandle","gos","rangesLen","cellRange","_last","cellPosition","isFillHandleAvailable","isRangeHandleAvailable","handleIsAvailable","isCategoryCell","cellRangeType","type","_missing","CSS_CELL","CSS_AUTO_HEIGHT","CSS_NORMAL_HEIGHT","CSS_CELL_FOCUS","CSS_CELL_FIRST_RIGHT_PINNED","CSS_CELL_LAST_LEFT_PINNED","CSS_CELL_NOT_INLINE_EDITING","CSS_COLUMN_HOVER","CSS_CELL_WRAP_TEXT","instanceIdSequence4","_CellCtrl","BeanStub","column","rowNode","rowCtrl","_escapeString","CellPositionFeature","CellCustomStyleFeature","CellMouseListenerFeature","CellKeyboardListenerFeature","value","shouldDisplayTooltip","getTooltipValue","colDef","data","_exists","_getValueUsingField","valueGetter","isTooltipWhenTruncated","textEl","tooltipCtrl","TooltipFeature","comp","eCellWrapper","printLayout","startEditing","func","eParentCell","minRowHeight","measureHeight","timesCalled","paddingTop","paddingBottom","borderBottomWidth","borderTopWidth","_getElementSize","extraHeight","autoHeight","doc","notYetInDom","possiblyNoContentYet","newHeight","listener","destroyResizeObserver","forceNewCellRendererInstance","valueToDisplay","compDetails","params","selectionChanged","rowDragChanged","dndSourceChanged","autoHeightChanged","key","cellStartedEdit","event","editService","editing","cancel","rowDraggerElement","dragStartPixels","suppressVisibilityChange","newData","suppressFlash","noValueProvided","forceRefresh","isCellCompReady","valuesDifferent","dataNeedsUpdating","processingFilterChange","suppressNavigateAfterEdit","shiftKey","delays","flashDuration","fadeDuration","cssName","fullName","animationFullName","cellId","compareValues","oldValue","oldValueFormatted","val1","val2","element","domEvent","eventType","eventName","mouseEvent","refreshFirstAndLastStyles","colIdx","_setAriaColIndex","forceBrowserFocus","firstRightPinned","lastLeftPinned","cellFocused","focusEl","focusableEls","fullRowEdit","_makeNull","isHovered","cellContextMenuEvent","cbSelectionComponent","CheckboxSelectionComponent","dndSourceComp","DndSourceComp","customElement","newComp","pagination","rowDragManaged","clientSideRowModelActive","_warnOnce","rowDragComp","RowDragComp","suppressRefreshCell","CellCtrl","instanceIdSequence5","_RowCtrl","animateIn","useAnimationFrameForCreate","businessKey","containerType","gui","rowComp","rowGui","cached","displayValue","rg","name","_setAriaExpanded","_executeNextVMTurn","translate","rowDragBean","pinned","ModuleRegistry","cellCtrl","isLeftReady","isCenterReady","isRightReady","isStub","isFullWidthCell","isDetailCell","pivotMode","isFullWidthGroup","suppressAnimationFrame","useFlushSync","prev","cols","res","addCell","colInstanceId","col","prevCellCtrl","item","cellControls","columnViewportService","centerCols","leftCols","rightCols","nextContainerPinned","focused","column2","oldRowTopExists","pinningLeft","pinningRight","tryRefresh","fullWidthSuccess","centerSuccess","leftSuccess","rightSuccess","highlighted","aboveOn","belowOn","dragging","expandable","expanded","keyboardEvent","currentFullWidthComp","c","node","lastFocusedCell","_isStopPropagationForAgGrid","currentFullWidthContainer","isFullWidthContainerFocused","nextEl","displayedEl","el","_isVisible","isFocused","cellCtrlToRemove","agEvent","_isElementChildOfClass","target","_isFocusableFormField","isMultiKey","isShiftKey","multiSelectOnClick","rowDeselectionWithCtrl","source","clearSelection","eDetailGui","checkRowSizeFunc","clientHeight","updateRowHeightFunc","resizeObserverDestroyFunc","eRow","compFactory","tooltipParams","newLevel","classToAdd","classToRemove","newFirst","newLast","sourceRenderedCell","cssClasses","classStr","className","updateStyles","gui2","rowContainerType","rowStyle","rowStyleFunc","rowStyleFuncResult","selected","label","rowTop","minPixel","maxPixel","callback","rowHeight","defaultRowHeight","heightFromFunc","lineHeight","suppressAnimation","destroyCellCtrls","ctrls","rowFocused","currentPage","topPx","reverse","pixelOffset","pixels","afterPaginationPixels","rowIndexStr","headerRowCount","rowIsEven","ariaRowIndex","_setAriaRowIndex","stoppingRowEdit","RowCtrl","RowContainerEventsFeature","_isEventSupported","_isIOSUserAgent","touchListener","TouchListener","longTapListener","sourceElement","rowCon","touchEvent","gridBodyCon","anchorToElement","_getCtrlForEventTarget","_isUserSuppressingKeyboardEvent","_isEventFromPrintableCharacter","cellKeyDownEvent","focusedCell","KeyCode","keyCode","_normaliseQwertyAzerty","pinnedRowModel","rowModel","isEmptyPinnedTop","isEmptyPinnedBottom","floatingStart","floatingEnd","rowEnd","allDisplayedColumns","_missingOrEmpty","SetPinnedLeftWidthFeature","leftWidth","displayed","_setDisplayed","_setFixedWidth","SetPinnedRightWidthFeature","rightWidth","getTopRowCtrls","r","getStickyTopRowCtrls","getStickyBottomRowCtrls","getBottomRowCtrls","getCentreRowCtrls","ContainerCssClasses","_getRowContainerOptions","allTopNoFW","allBottomNoFW","allMiddleNoFW","allMiddle","allCenter","allLeft","allRight","allStickyTopNoFW","allStickyBottomNoFW","allStickyContainers","allNoFW","RowContainerCtrl","ViewportSizeFeature","names","view","eContainer","eViewport","SetHeightFeature","DragListenerFeature","CenterWidthFeature","width","isEnsureDomOrder","isPrintLayout","resetScrollLeft","preventScroll","e","afterScroll","scrollWidth","scrollPosition","_getInnerWidth","_getScrollLeft","unsubscribeFromResize","_isInDOM","_isHorizontalScrollShowing","amount","_setScrollLeft","visible","rows","embedFW","rowsThisContainer","fullWidthRow","templateFactory","options","RowContainerComp","Component","RefPlaceholder","compProxy","height","rowCtrls","domOrder","offset","oldRows","__spreadValues","processRow","instanceId","existingRowComp","RowComp","_getAllValuesInObject","oldRowComp","_setAriaRole","_insertWithDomOrder","_ensureDomOrder","RowContainerSelector","makeRowContainers","GRID_BODY_TEMPLATE","GridBodyComp","OverlayWrapperSelector","FakeHScrollSelector","FakeVScrollSelector","GridHeaderSelector","setHeight","heightString","cssClass","animate","count","_setAriaColCount","_setAriaRowCount","display","flag","classList","on","CSS_CLASS_FORCE_VERTICAL_SCROLL","overflow","selectable","ct","GridBodyCtrl","_setAriaMultiSelectable","animateRows","bodyViewportClassList","GridBodySelector","ScrollVisibleService","centerRowCtrl","GRID_DOM_KEY","_MouseEventService","eGridDiv","pointer","gridPanelHasScrolls","x","y","vRange","hRange","NumberSequence","MouseEventService","NavigationService","_throttle","p","fromFullWidth","alt","rangeServiceShouldHandleShift","currentCell","processed","navigateParams","scrollIndex","scrollType","scrollColumn","focusIndex","focusColumn","gridCell","pixelsInOnePage","pagingPixelOffset","currentPageBottomPixel","currentPageBottomRow","currentPageTopPixel","currentPageTopRow","up","firstRow","lastRow","currentRowNode","rowPixelDiff","nextCellPixel","diff","step","lastRowIndex","pixelSum","currentIndex","currentCellHeight","gridBodyCtrl","center","scrollbarWidth","rowIndex","cellToFocus","homeKey","allColumns","columnToSelect","previous","backwards","movedToNextCell","rowPinned","cellOrRow","row","previousCell","previousPos","nextCell","nextPos","previousEditable","nextEditable","rowsMatch","displayedColumns","cellPos","__spreadProps","previousPosition","nextPosition","userFunc","userResult","headerLen","cell","allowUserOverride","hitEdgeOfGrid","userCell","normalisedPosition","position","currentCellFocused","fromBelow","focusEvent","colSpanningList","isGroupStickyEnabled","HorizontalResizeService","dragSource","StandardMenuFactory","eMenu","eventSource","multiplier","alignSide","isLegacyMenuEnabled","nudgeX","nudgeY","positionCallback","FilterWrapperComp","hidePopup","afterGuiDetached","closedCallback","isKeyboardEvent","focusableEl","ariaLabel","addPopupRes","menu","displayedEvent","DEBOUNCE_DELAY","ResizeObserverService","win","useBrowserResizeObserver","resizeObserver","usePolyfill","widthLastTime","heightLastTime","running","periodicallyCheckWidthAndHeight","newWidth","suppressResize","executeAllFuncs","funcs","f","AnimationFrameService","scrollTop","isPaginationActive","methodName","task","index","list","taskItem","taskList","sortDirection","a","b","millis","p1TaskList","p1Tasks","p2TaskList","p2Tasks","destroyTasks","frameStart","duration","noMaxMillis","pending","ExpansionService","BeanStub","beans","rowIds","rowIdSet","node","expandedRows","expanded","id","value","rowNode","expandParents","forceSync","MenuService","params","menuFactory","column","mouseEvent","touchEvent","rowCtrl","eGui","rect","anchorToElement","suppressMenu","suppressHeaderMenuButton","menuHides","_isIOSUserAgent","colDef","legacySuppressFilterButton","_warnOnce","suppressMenuHide","containerType","filtersOnly","positionBy","buttonElement","headerCellCtrl","rowIndex","rowPinned","gridBodyEl","cellGui","AgInputTextArea","AgAbstractInputField","config","silent","ret","cols","rows","AgInputTextAreaSelector","LargeTextCellEditor","PopupComponent","RefPlaceholder","_exists","event","key","KeyCode","translate","PopupEditorWrapper","listener","_isUserSuppressingKeyboardEvent","SelectCellEditor","AgSelectSelector","eSelect","valueService","gos","values","eventKey","_missing","hasValue","currentValue","option","valueFormatted","valueFormattedExits","valueListGap","valueListMaxWidth","valueListMaxHeight","SimpleCellEditor","cellEditorInput","eInput","startValue","_isBrowserSafari","inputEl","focusEl","TextCellEditorInput","AgInputTextFieldSelector","len","TextCellEditor","NumberCellEditorInput","AgInputNumberFieldSelector","parsedValue","NumberCellEditor","AgInputDateField","AgInputTextField","usingSafari","minDate","min","_serialiseDate","_addOrRemoveAttribute","maxDate","max","step","_parseDateTimeFromString","date","AgInputDateFieldSelector","DateCellEditorInput","DateCellEditor","DateStringCellEditorInput","getDataTypeService","dataTypeService","DateStringCellEditor","CheckboxCellEditor","AgCheckboxSelector","isSelected","stateName","_getAriaCheckboxStateName","ariaLabel","UndoRedoAction","cellValueChanges","RangeUndoRedoAction","initialRange","finalRange","ranges","DEFAULT_STACK_SIZE","UndoRedoStack","maxStackSize","item","UndoRedoService","eventCell","isCellEditing","isRowEditing","oldValue","cellValueChange","undoRedoLimit","e","p","source","startEvent","operationPerformed","endEvent","undoRedoStack","opposingUndoRedoStack","rangeProperty","cellValueChangeProperty","undoRedoAction","action","valueExtractor","columnId","rowPosition","currentRow","rangeService","lastFocusedCell","range","idx","startRow","endRow","cellRangeParams","row","scrollFeature","cellPosition","__spreadProps","__spreadValues","getVerticalPixelRange","getHorizontalPixelRange","ensureColumnVisible","position","ensureIndexVisible","index","ensureNodeVisible","nodeSelector","undoCellEditing","redoCellEditing","getCellEditorInstances","_unwrapUserComp","getEditingCells","stopEditing","cancel","startEditingCell","cell","getCurrentUndoSize","getCurrentRedoSize","EditService","cellCtrl","cellStartedEdit","editorParams","compDetails","popup","cellComp","newValue","newValueExists","valueChanged","cellEditor","suppressNavigateAfterEdit","shiftKey","noValueResult","RowEditService","sourceRenderedCell","prev","cellControls","isRowEdit","fireRowEditEvent","ctrl","gui","EditCoreModule","VERSION","EditApiModule","UndoRedoEditModule","FullRowEditModule","DefaultEditorModule","DataTypeEditorsModule","SelectEditorModule","LargeTextEditorModule","AllCommunityEditorsModule","EditModule","AutoWidthCalculator","skipHeader","eHeaderCell","elements","columnGroup","eDummyContainer","eBodyContainer","el","dummyContainerWidth","autoSizePadding","element","container","res","eCell","eCellClone","eCloneParent","eCloneParentClassList","cls","pointer","i","StickyRowFeature","createRowCon","destroyRowCtrls","offset","storeBounds","lastAncestor","_last","isTop","newStickyContainerHeight","pixelAtContainerBoundary","newStickyRows","addStickyRow","stickyRow","lastChildBottom","stickRowBottom","stickRowTop","thisRowLastPx","suppressFootersSticky","suppressGroupsSticky","isRowSticky","firstPixelAfterStickyRows","firstIndex","firstRow","firstMissingParent","parent","suppressGroupRows","suppressGrandRows","isStickyEnabled","ancestors","hasTopUpdated","hasBottomUpdated","stickRowNode","allStickyNodes","currentNode","newStickyNodes","height","previousCtrls","removedCtrlsMap","remainingCtrls","existingNodes","newCtrls","hasSomethingChanged","newCtrlsList","a","b","extraHeight","anyChange","updateRowHeight","rowHeight","RowRenderer","onRangeSelectionChanged","onColumnMovedPinnedVisible","addRangeSelectionListeners","removeRangeSelectionListeners","rowModelType","countProp","count","RowCtrlCache","liveList","_getAllValuesInObject","zombieList","cachedList","func","col","forEachCellWithThisCol","callback","leftChangedListener","widthChangedListener","firstRightPinnedChangedListener","lastLeftPinnedChangedListener","colDefChangedListener","printLayout","embedFullWidthRows","destroyRows","rowIndexesToRemove","rowCtrls","rowNodes","nodeMap","rowCtrlMap","RowCtrl","suppressEvent","destroyAndRecreateCtrl","dataStruct","focusedCell","activeElement","cellDomData","CellCtrl","rowDomData","recycleRows","animate","rowsToRecycle","scrollToTop","suppressScrollToTop","additionalHeight","containerHeight","frameworkMessage","rowCtrlsLength","cellCtrls","cellCtrlsLength","j","stickyTopRowCtrls","stickyBottomRowCtrls","eventName","rowComp","refreshCellParams","cellFocused","_browserSupportsPreventScroll","cellRenderers","renderer","fullWidthRenderers","rowIdMap","renderers","rowIdsMap","allRowCtrls","columns","colIdsMap","colKey","colId","stubNodeIndexes","_iterateObject","ctrlsByIdMap","_","rowsToRemove","suppressAnimation","indexToRemove","afterScroll","oldFirstRow","oldLastRow","hasStickyRowChanges","rangeChanged","newFocusedCell","indexesToDraw","indexesToDrawMap","indexesNotToDraw","_createArrayOfNumbers","checkRowToDraw","indexStr","currRow","pinningLeft","pinningRight","fullWidthCtrl","rowNodesMap","rowCtrlsMap","executeInAWhileFuncs","nodeId","_executeInAWhile","rowsToBuffer","defaultRowHeight","newFirst","newLast","bufferPixels","gridBodyCtrl","suppressRowVirtualisation","rowHeightsChanged","firstPixel","lastPixel","paginationOffset","pageFirstPixel","pageLastPixel","divStretchOffset","bodyVRange","bodyTopPixel","bodyBottomPixel","firstRowIndex","lastRowIndex","pageFirstRow","pageLastRow","rowLayoutNormal","suppressRowCountRestriction","rowBufferMaxSize","firstDiffers","lastDiffers","topPixel","bottomPixel","pinnedRowHeightsChanged","stickyHeightsChanged","rowModelHeightsChanged","rowHasFocus","rowIsEditing","rowIsDetail","rowCtrlFromCache","suppressAnimationFrame","useAnimationFrameForCreate","renderedRows","startIndex","endIndex","blockAfterViewport","maxCount","rowCtrlToDestroy","rowNodeId","_removeFromArray","PinnedRowModel","floating","_missingOrEmpty","pixel","estimateRowHeight","rowTop","rowData","allData","getRowId","idPrefix","RowNode","nextRowTop","pinned","dataItem","lastNode","RowNodeBlock","BeanStub","id","version","params","rows","lastRow","thisIsMostRecentRequest","weAreNotDestroyed","success","event","RowNodeBlockLoader","beans","blockLoadDebounceMillis","_debounce","res","block","_removeFromArray","_log","loadAvailability","blocksToLoad","result","state","count","RowNodeBlockModule","VERSION","RowRangeSelectionContext","rowModel","node","end","root","nodeInRange","range","discardAfter","idx","rowNode","above","below","groupSelectsChildren","keep","node2","newRangeNode","discard","StylingService","colDef","onApplicableClass","onNotApplicableClass","previousClassRules","classRules","classesToApply","classesToRemove","forEachSingleClass","className","callback","singleClass","classNames","i","rule","resultOfRule","cellClass","classOrClasses","cssClassItem","TabGuardCtrl","BeanStub","params","comp","eTopGuard","eBottomGuard","focusTrapActive","forceFocusOutWhenTabGuardsAreEmpty","isFocusableContainer","focusInnerElement","onFocusIn","onFocusOut","shouldStopEventPropagation","onTabKeyDown","handleKeyDown","eFocusableElement","beans","ManagedFocusFeature","guard","tabIndex","fromBottom","up","eDocument","focusableEls","index","start","end","focusableRange","targetTabIndex","b","indexA","indexB","tabGuardsAreActive","nextRoot","focusable","backwards","tabGuardToFocus","element","bottom","allowFocus","TabGuardFeature","tabGuards","compProxy","tabGuard","side","cls","_setAriaRole","topTabGuard","bottomTabGuard","_clearElement","appendChild","newChild","container","_isNodeOrElement","TabGuardComp","Component","instanceIdSeq","WAIT_FOR_POPUP_CONTENT_RESIZE","PopupService","p","ePopupParent","eventSource","ePopup","popupIdx","popup","sourceRect","parentRect","y","minWidth","maxX","x","xLeftPosition","xRightPosition","nudgeX","nudgeY","skipObserver","keepWithinBounds","alignSide","position","column","rowNode","type","updatePosition","targetCompRect","spaceAvailableUnder","spaceAvailableAbove","spaceRequired","positioned","alignedToElement","mouseEvent","callback","lastSize","updatePopupPosition","fromResizeObserver","resizeObserverDestroyFunc","popupParent","_getElementRectWithOffset","direction","isVertical","sizeProperty","anchorProperty","offsetProperty","scrollPositionProperty","docElement","popupRect","documentRect","isBody","offsetSize","sizeOfParent","_getAbsoluteHeight","_getAbsoluteWidth","max","eChild","ariaLabel","alwaysOnTop","positionCallback","anchorToElement","_warnOnce","pos","wrapperEl","removeListeners","__spreadProps","__spreadValues","ePopupParentRect","_exists","eWrapper","_setAriaLabel","popupEl","closedCallback","afterGuiAttached","closeOnEsc","modal","popupHidden","hidePopupOnKeyboardEvent","event","KeyCode","_isStopPropagationForAgGrid","hidePopupOnMouseEvent","hidePopupOnTouchEvent","popupParams","touchEvent","keyboardEvent","forceHide","el","relativeElement","popupIndex","destroyFunc","destroyPositionTracker","eParent","initialDiffTop","initialDiffLeft","lastDiffTop","lastDiffLeft","topPx","top","leftPx","left","fwOverrides","AgPromise","resolve","pRect","sRect","currentDiffTop","newTop","currentDiffLeft","newLeft","intervalId","target","indexOfThisChild","i","_isElementInEventPath","parent","popupList","popupLen","alwaysOnTopList","onTopLength","innerEls","innerElsScrollMap","result","_last","currentEl","PASSIVE_EVENTS2","VanillaFrameworkOverrides","frameworkName","action","timeout","listener","useCapture","isPassive","_includes","name","path","CellNavigationService","key","focusedCell","ctrlPressed","upKey","downKey","leftKey","rowIndex","allColumns","isRtl","pointer","finished","gridCell","lastCell","colToLeft","colToRight","rowPosition","pinned","nextStickyPosition","isTopCtrls","ctrl","stickyRowCtrls","a","diff","idx","nextCtrl","rowBelow","rowAbove","displayedColumns","newRowIndex","newFloating","newColumn","_missing","dispatchEvent","ApiFunctionService","functionName","args","func","validationService","createApi","context","apiFunctionService","prop","createApiProxy","ColumnDefFactory","cols","rowGroupColumns","pivotColumns","res","colGroupDefs","col","colDef","addToResult","childDef","lastPointer","parentDef","existingParentDef","group","defCloned","_deepCloneDefinition","colDefCloned","ColumnEventDispatcher","impactedGroups","impactedColumns","source","eventType","masterList","afterScroll","newColumnsLoadedEvent","eventEverythingChanged","movedColumns","toIndex","changedColumns","valueGetter","firstValue","columns","flexColumns","ColumnGetStateService","primaryCols","rowGorupColumns","rowGroupIndex","pivotIndex","aggFunc","sort","sortIndex","flex","columnStateList","gridColumns","colIdToGridIndexMap","itemA","itemB","posA","posB","ColumnGroupStateService","columnGroupState","gridBalancedTree","depthFirstOriginalTreeSearch","node","isProvidedColumnGroup","primaryColumnTree","stateItems","child","colGroupDef","groupState","stateItem","groupKey","newValue","providedColumnGroup","ColumnViewportService","scrollWidth","scrollPosition","bodyWidthDirty","bodyWidth","dept","displayedColumnsCenter","columnLeft","columnRight","leftBounds","rightBounds","columnToMuchLeft","columnToMuchRight","leftCols","rightCols","emptySpaceBeforeColumn","inViewportCallback","renderedColIds","renderedColsLeft","renderedColsRight","testGroup","children","returnValue","addThisItem","isColumn","displayedChildren","hashColumn","c","newHash","changed","AgComponentUtils","propertyName","jsCompFunc","metadata","Adapter","callbackResult","_loadTemplate","candidate","ComponentMetadataProvider","orderedCoreBeans","beanNamePosition","beanName","gridBeanInitComparator","bean1","bean2","index1","index2","gridBeanDestroyComparator","CtrlsFactory","meta","ControllerClass","CtrlsService","ctrlType","leftHeader","centerHeader","rightHeader","CellPositionUtils","cellPosition","rowPinned","cellA","cellB","colsMatch","floatingMatch","indexMatch","RowNodeEventThrottle","forceSync","e","RowPositionUtils","pinnedBottomCount","pinnedTopCount","gridRow","rowA","rowB","ROW_HEIGHT","HEADER_HEIGHT","LIST_ITEM_HEIGHT","Environment","className","oldRowHeight","height","newRowHeight","variable","cached","measurement","sizeEl","newSize","NO_VALUE_SENTINEL","lastMeasurement","unsubscribe","newMeasurement","change","observer","newThemeClasses","arraysEqual","allThemeClasses","themeClasses","themeClass","_","EventService","LocalEventService","async","_FocusService","doc","isKeyboardActive","isKeyboardEvent","clearFocusedCellListener","colFromColumnModel","RowCtrl","AbstractHeaderCellCtrl","eBrowserCell","ePointer","cell","rowCtrl","forceBrowserFocus","preventScrollOnBrowserFocus","gridColumn","_makeNull","headerCtrl","headerRowIndex","focusedColumn","focusedHeaderRowIndex","fromTab","allowUserOverride","fromCell","rowWithoutSpanValue","headerPosition","currentPosition","headerRowCount","userFunc","params2","newHeaderPosition","userResult","focusSuccess","firstColumn","rowPinnedType","rootNode","exclude","onlyUnmanaged","focusableString","FOCUSABLE_SELECTOR","excludeString","FOCUSABLE_EXCLUDE","nodes","_isVisible","excludeNodes","focusableElements","toFocus","referenceElement","referenceIndex","lastTabGuardIndex","onlyManaged","activeEl","currentIndex","nextIndex","managedContainers","limit","counter","_getTabIndex","nextRow","focusedHeader","forceOut","forceFirstColumn","FocusService","PinnedWidthService","printLayout","newLeftWidth","newRightWidth","GridCtrl","view","eGridDiv","eGui","dragAndDropService","mouseEventService","ctrlsService","resizeObserverService","LayoutFeature","unsubscribeFromResize","cssClass","on","focusableContainers","idxWithFocus","nextIdx","lastColumn","userCallbackFunction","GridComp","RefPlaceholder","value","comps","template","requiredComps","GridBodySelector","_log","eRootWrapperBodyClassList","dropZones","sideBar","statusBar","watermark","pagination","AlignedGridsService","alignedGrids","isCallbackConfig","seeUrl","alignedGrid","_errorOnce","refOrComp","api","ref","fireColumnEvent","columnEvent","scrollEvent","colEvent","groupOpenedEvent","masterGroup","otherColumnGroup","groupId","masterColumn","otherColumn","masterColumns","destColState","s","resizedEvent","columnWidths","isVerticalScrollShowing","AlignedGridsModule","VERSION","getColumnDef","getColumnDefs","sizeColumnsToFit","paramsOrGridWidth","setColumnGroupOpened","getColumnGroup","instanceId","getProvidedColumnGroup","getDisplayNameForColumn","location","getDisplayNameForColumnGroup","columnGroup","getColumn","getColumns","applyColumnState","getColumnState","resetColumnState","getColumnGroupState","setColumnGroupState","resetColumnGroupState","isPinning","isPinningLeft","isPinningRight","getDisplayedColAfter","getDisplayedColBefore","setColumnVisible","visible","setColumnsVisible","keys","setColumnPinned","setColumnsPinned","getAllGridColumns","getDisplayedLeftColumns","getDisplayedCenterColumns","getDisplayedRightColumns","getAllDisplayedColumns","getAllDisplayedVirtualColumns","moveColumn","moveColumnByIndex","fromIndex","moveColumns2","columnsToMoveKeys","setColumnWidth","newWidth","setColumnWidths","getLeftDisplayedColumnGroups","getCenterDisplayedColumnGroups","getRightDisplayedColumnGroups","getAllDisplayedColumnGroups","autoSizeColumn","skipHeader","autoSizeColumns","autoSizeAllColumns","MONTH_LOCALE_TEXT","MONTH_KEYS","DataTypeService","convertSourceType","defaultDataTypes","generateFormatValueFunc","dataTypeDefinition","valueFormatter","cellDataType","mergedDataTypeDefinition","dataTypeDefinitions","overriddenDataTypeMatcher","parentDataTypeDefinition","childDataTypeDefinition","convertColumnTypes","alreadyProcessedDataTypes","extendsCellDataType","baseDataTypeDefinition","overriddenBaseDataTypeDefinition","extendedDataTypeDefinition","mergedExtendedDataTypeDefinition","parentCellDataType","userColDef","colId","field","columnStateUpdates","columnListener","propsToCheckForInference","columnTypes","columnTypeDefs","columnType","columnTypeDef","comparisonValue","checkProps","initialData","fieldContainsDots","_getValueUsingField","_cellDataType","dataTypeMatcher","rowData","rowNodes","columnTypeOverridesExist","firstRowData","dataTypesInferredEvent","state","newRowGroupColumnStateWithoutIndex","newPivotColumnStateWithoutIndex","oldColDef","newColDef","updatedColumnState","columnState","resolvedObjectDataTypeDefinition","defaultObjectDataTypeDefinition","formatValue","usingSetFilter","ModuleRegistry","translate","mergeFilterParams","filterParams","valA","valB","_filterValues","cellValue","valueFormatted","pathKey","level","monthKey","convertToDate","date","filterDate","cellAsDate","colDef2","defaultDateFormatMatcher","_toStringOrNull","_parseDateTimeFromString","_serialiseDate","DataTypeModule","ColumnApiModule","addRowDropZone","removeRowDropZone","activeDropTarget","getRowDropZoneParams","events","DragApiModule","getPinnedTopRowCount","getPinnedBottomRowCount","getPinnedTopRow","getPinnedBottomRow","PinnedRowApiModule","showLoadingOverlay","showNoRowsOverlay","hideOverlay","OverlayApiModule","setGridAriaProperty","property","eGrid","ariaProperty","refreshCells","flashCells","warning","refreshHeader","isAnimationFrameQueueEmpty","flushAllAnimationFrames","getSizesForCurrentTheme","getCellRendererInstances","_unwrapUserComp","RenderApiModule","expireValueCache","getValue","colKey","getCellValue","useFormatter","_escapeString","getGridId","destroy","isDestroyed","getGridOption","setGridOption","updateGridOptions","options","addEventListener","removeEventListener","addGlobalListener","removeGlobalListener","getFocusedCell","clearFocusedCell","setFocusedCell","tabToNextCell","tabToPreviousCell","setFocusedHeader","floatingFilter","showColumnMenuAfterButtonClick","buttonElement","showColumnMenuAfterMouseClick","showColumnMenu","hidePopupMenu","redrawRows","setRowNodeExpanded","expanded","expandParents","getRowNode","id","addRenderedRowListener","eventName","getRenderedNodes","forEachNode","includeFooterNodes","getFirstDisplayedRow","getFirstDisplayedRowIndex","getLastDisplayedRow","getLastDisplayedRowIndex","getDisplayedRowAtIndex","getDisplayedRowCount","getModel","setNodesSelected","nodesAsRowNode","selectAll","deselectAll","selectAllFiltered","deselectAllFiltered","selectAllOnCurrentPage","deselectAllOnCurrentPage","getSelectedNodes","getSelectedRows","onSortChanged","CoreApiModule","RowSelectionApiModule","RowApiModule","ScrollApiModule","getVerticalPixelRange","getHorizontalPixelRange","ensureColumnVisible","ensureIndexVisible","ensureNodeVisible","KeyboardNavigationApiModule","EventApiModule","CellApiModule","CommunityMenuApiModule","SortApiModule","CommunityApiModule","getState","StateService","_debounce","newColumnsLoadedDestroyFunc","rowCountReadyDestroyFunc","firstDataRenderedDestroyFunc","stateUpdater","initialState","filterState","rowGroupExpansionState","rowSelectionState","paginationState","advancedFilterModel","scrollState","rangeSelectionState","focusedCellState","columnOrderState","pivotMode","sortColumns","groupColIds","aggregationColumns","pivotColIds","leftColIds","rightColIds","hiddenColIds","columnSizes","rowGroup","pivot","hide","width","sortState","aggregationState","pivotState","columnPinningState","columnVisibilityState","columnSizingState","columnStateMap","getColumnState2","applyOrder","columnStates","defaultState","columnGroupStates","secondaryColumnStates","openColumnGroups","open","filterModel","gridOptionAdvancedFilterModel","cellRanges","cellRange","startRow","endRow","startColumn","columnSet","scrollFeature","page","pageSize","selectionState","expandedRowGroups","features","newColumnState","hasChanged","_jsonEquals","existingValue","sources","updateFunc","StateCoreModule","StateApiModule","StateModule","paginationIsLastPageFound","paginationGetPageSize","paginationGetCurrentPage","paginationGetTotalPages","paginationGetRowCount","paginationGoToNextPage","paginationGoToPreviousPage","paginationGoToFirstPage","paginationGoToLastPage","paginationGoToPage","PaginationAutoPageSizeService","bodyHeight","update","rowHeight","newPageSize","_addFocusableContainerListener","focusService","PageSizeSelectorComp","paginationPageSize","paginationChangedEvent","show","pageSizeOptions","paginationPageSizeOption","shouldAddAndSelectEmptyOption","localeTextFunc","localisedLabel","localisedAriaLabel","AgSelect","defaultValues","paginationPageSizeSelectorValues","values","isNumber","isPositive","PageSizeSelectorSelector","PaginationComp","btFirst","btPrevious","btNext","btLast","_createIconNoSpan","paginationPanelEnabled","item","fn","pagesExist","currentPage","toDisplay","thousandSeparator","decimalSeparator","_formatNumberCommas","strPage","strTo","strOf","strFirst","strPrevious","strNext","strLast","compId","maxRowFound","totalPages","zeroPagesToDisplay","onLastPage","button","disabled","_setAriaDisabled","rowCount","lastPageFound","firstRow","moreText","PaginationSelector","PaginationService","pageNumber","row","lastPage","oldPageSize","size","currentSize","masterLastRowIndex","masterPageStartIndex","masterPageEndIndex","firstIndexNotToShow","maxRowIndex","keepRenderedRows","newPage","PaginationCoreModule","PaginationApiModule","PaginationModule","coreModule","clientSideRowModelModule","csvExportModule","infiniteRowModelModule","advancedFilterModule","gridChartsModule","clipboardModule","excelExportModule","masterDetailModule","menuModule","rangeSelectionModule","rowGroupingModule","serverSideRowModelModule","sideBarModule","statusBarModule","functionModules","clientSide","serverSide","infinite","functionRowModels","deprecatedFunctions","warnMissingApiFunction","gridId","module","validateApiFunction","apiFunction","deprecation","version","replacement","old","message","apiMethod","replacementMessage","rowModels","rowModel","COLUMN_DEFINITION_DEPRECATIONS","CSRM_REQUIRES_ROW_GROUP_MODULE","_options","gridOptions","COLUMN_DEFINITION_VALIDATIONS","enterpriseMenuTabs","tab","rowSelection","COL_DEF_VALIDATORS","colDefPropertyMap","ALL_PROPERTIES","GRID_OPTION_DEPRECATIONS","GRID_OPTION_DEFAULTS","GRID_OPTION_VALIDATIONS","csrmWarning","ssrmWarning","GRID_OPTIONS_VALIDATORS","PropertyKeys","ComponentUtil","ValidationService","validator","validations","deprecations","allProperties","propertyExceptions","objectName","docsUrl","warnings","renamed","rulesOrGetter","rules","fromGetter","value2","dependencies","supportedRowModels","modules","allRegistered","m","failed","key2","gridOptionValue","failedKey","possibleOptions","object","exceptions","validProperties","containerName","VUE_FRAMEWORK_PROPS","invalidProperties","_fuzzyCheckStrings","_iterateObject","url","GridCoreModule","ValidationsModule","CommunityFeaturesModule","EditModule","FilterModule","GridDestroyService","ALWAYS_SYNC_GLOBAL_EVENTS","isSelectionUIEvent","PROPERTY_COERCIONS","toBoolean","toNumber","val","toConstrainedNum","getCoercedValue","coerceFunc","getCoercedGridOptions","newGo","coercedValue","_GridOptionsService","restrictToSyncOnly","alwaysSync","eventHandlerName","eventHandler","callbackParams","mergedParams","force","changeSet","INITIAL_GRID_OPTION_KEYS","shouldForce","previousValue","scrollbarWidth","_getScrollbarWidth","rowModelType","domLayout","allowEstimate","defaultRowHeight","domData","domDataKey","userValue","legacyValue","legacyCallback","updatedParams","getRowId","GridOptionsService","HeaderPositionUtils","nextColumn","getColMethod","isColumnGroup","columnsInPath","indexToFocus","targetColumn","currentColumn","currentRowType","isFloatingFilter","isColumn2","nextFocusColumn","headerRowIndexWithoutSpan","leafColumns","leafColumn","columnsInTheWay","colToFocus","centerHeaderContainer","LocaleService","getLocaleText","defaultValue","variableValues","localeText","localisedText","found","ApiEventService","FrameworkEventListenerService","userListener","listeners","hasAsync","syncListener","asyncListener","map","set","PageBoundsListener","modelUpdatedEvent","PageBoundsService","pageFirstPixel","pageLastPixel","topDisplayedRowIndex","bottomDisplayedRowIndex","AriaAnnouncementService","div","_setAriaLive","_setAriaRelevant","_setAriaAtomic","descriptionContainer","ColumnAnimationService","suppress","animationThreadCountCopy","runFuncs","queue","ColumnHoverService","OverlayService","updateOverlayVisibility","overlayWrapperComp","loading","compDetails","wrapperCssClass","gridOption","promise","RowCssClassCalculator","classes","_pushAll","process","rowCls","rowClass","rowClassFunc","rowClassFuncResult","onApplicableClass","onNotApplicableClass","rowClassParams","RowContainerHeightService","_getMaxDivHeight","newScrollY","newBodyHeight","scrollPercent","divStretchOffset","newOffset","newOffsetFloor","modelHeight","modelPixel","rowTop","modelMaxScroll","RowNodeSorter","propChange","sortOptions","mapper","sortedRowNodes","sortedNodeA","sortedNodeB","nodeA","nodeB","len","sortOption","isDescending","valueA","valueB","comparatorResult","providedComparator","_defaultComparator","comparatorOnCol","groupLeafField","primaryColumn","leafChild","displayCol","ChangedPath","keepingColumns","pathItem","traverseEverything","childNode","traverseLeafNodes","includeUnchangedNodes","newEntryCount","newEntry","thisItem","parentItem","valueColumns","colsForThisNode","SelectionService","RowRangeSelectionContext","root","clearSelection","suppressFinishActions","rangeSelect","groupSelectsFiltered","filteredNodes","newSelectionValue","partition","updatedCount","nodesToSelect","selectedNodes","selectedRows","predicate","newSelectedNodes","changedPath","selectionChanged","selected","rowNodeToKeepSelected","groupsToRefresh","otherRowNode","oldNode","selectionCount","topLevelNodes","traverse","l","maybeGroup","count","rowModelClientSide","justFiltered","justCurrentPage","selectedCount","notSelectedCount","recursivelyAddChildren","clientSideRowModel","lastRow","selectedIds","rowIds","SelectableService","skipLeafNodes","isRowSelecting","isRowSelectable","isGroupSelectsChildren","isCsrmGroupSelectsChildren","nodesToDeselect","nodeCallback","hasSelectableChild","rowSelectable","csrm","DEFAULT_SORTING_ORDER","SortController","multiSort","nextDirection","isColumnsSortingCoupledToGroup","columnsToUpdate","sortableRowGroupColumns","doingMultiSort","updatedColumns","clearedColumns","lastColToChange","isCoupled","groupParent","lastSortIndexCol","allSortedCols","allSortedColsWithoutChangesOrGroups","sortedCols","columnsToSkip","columnToClear","sortingOrder","notInArray","lastItemInArray","isSortingLinked","isAggregated","isSecondary","isGroup","sortedRowGroupCols","allColsIndexes","iA","iB","isSortLinked","indexMap","groupDisplayCol","col1","idx1","col2","idx2","isColumnSortCouplingActive","isGroupDisplayColumn","linkedColumns","sortableColumns","firstSort","SyncService","columnDefs","isEnterprise","readyEvent","SOURCE_PASTE","ChangeDetectionService","nodesToRefresh","onlyChangedColumns","rowNode2","ExpressionService","expression","functionBody","theFunction","ValueCache","ValueService","forFilter","ignoreAggData","data","groupDataExists","aggDataExists","ignoreSsrmAggData","ssrmFooterGroupCol","cellValueGetter","openedGroup","oldValue","valueParser","suppliedFormatter","useFormatterFromColumn","formatter","showRowGroup","valueSetter","valueWasDifferent","onCellValueChanged","isFieldContainsDots","valuesAreSame","fieldPieces","currentObject","fieldPiece","valueFromCache","keyCreator","keyParams","GlobalGridOptions","createGrid","eGridDiv","gridOptions","params","_errorOnce","api","GridCoreCreator","context","gridComp","GridComp","apiUrl","nextGridId","GridCoreCreator","eGridDiv","providedOptions","createUi","acceptChanges","params","mergedGridOps","GlobalGridOptions","_mergeDeep","__spreadValues","gridOptions","getCoercedGridOptions","gridId","registeredModules","beanClasses","providedBeanInstances","_errorOnce","contextParams","gridBeanInitComparator","gridBeanDestroyComparator","createApiProxy","context","Context","factory","module","meta","passedViaConstructor","registered","ModuleRegistry","allModules","mapNames","addModule","moduleBased","mod","gridId2","currentModule","m","CommunityFeaturesModule","moduleUserComps","registry","compMeta","apiFunctionService","apiFunctions","name","frameworkOverrides","_missing","VanillaFrameworkOverrides","seed","rowModelType","rowModelModules","rowModelModuleNames","beans","RowPositionUtils","CellPositionUtils","HeaderPositionUtils","GridDestroyService","ApiFunctionService","UserComponentRegistry","AgComponentUtils","ComponentMetadataProvider","ResizeObserverService","UserComponentFactory","RowContainerHeightService","HorizontalResizeService","LocaleService","PinnedRowModel","DragService","VisibleColsService","EventService","GridOptionsService","PopupService","SelectionService","ColumnModel","HeaderNavigationService","PageBoundsService","PageBoundsListener","RowRenderer","ExpressionService","ColumnFactory","NavigationService","ValueCache","ValueService","AutoWidthCalculator","StandardMenuFactory","DragAndDropService","FocusService","MouseEventService","Environment","CellNavigationService","StylingService","ScrollVisibleService","SortController","ColumnHoverService","ColumnAnimationService","SelectableService","ChangeDetectionService","AnimationFrameService","ColumnDefFactory","RowCssClassCalculator","RowNodeSorter","CtrlsService","PinnedWidthService","RowNodeEventThrottle","CtrlsFactory","SyncService","OverlayService","ExpansionService","ApiEventService","AriaAnnouncementService","MenuService","ColumnApplyStateService","ColumnEventDispatcher","ColumnMoveService","ColumnAutosizeService","ColumnGetStateService","ColumnGroupStateService","ColumnSizeService","FuncColsService","ColumnNameService","ColumnViewportService","PivotResultColsService","moduleBeans","beansNoDuplicates","bean","moduleEntities","extractor","RowModelHelperService","BeanStub","rowModel","expandAll","collapseAll","onRowHeightChanged","clientSideRowModel","serverSideRowModel","setRowCount","rowCount","maxRowFound","infiniteRowModel","getCacheBlockState","CsrmSsrmSharedApiModule","VERSION","SsrmInfiniteSharedApiModule","BaseComponentWrapper","OriginalConstructor","mandatoryMethodList","optionalMethodList","componentType","wrapper","methodName","comp","mandatory","_warnOnce","_sortRowNodesByOrder","rowNodes","rowNodeOrder","comparator","nodeA","nodeB","positionA","positionB","aHasIndex","bHasIndex","bothNodesAreUserNodes","bothNodesAreFillerNodes","rowNodeA","rowNodeB","atLeastOneOutOfOrder","i","globalObj","ROOT_NODE_ID","TOP_LEVEL","ClientSideNodeManager","rootNode","gos","eventService","funcColsService","selectionService","beans","_cloneObject","id","rowData","_warnOnce","sibling","dataItem","rowDataTran","rowNodeOrder","rowNodeTransaction","nodesToUnselect","_sortRowNodesByOrder","event","source","selectionChanged","add","addIndex","_missingOrEmpty","newNodes","item","allLeafChildren","len","normalisedAddIndex","i","nodesBeforeIndex","nodesAfterIndex","remove","rowIdsRemoved","rowNode","update","data","getRowIdFunc","_errorOnce","node","parent","level","RowNode","setExpanded","isRowMasterFunc","rowGroupColumns","numRowGroupColumns","masterRowLevel","expandByDefault","ClientSideRowModel","BeanStub","_debounce","refreshEverythingFunc","animate","refreshEverythingAfterColsChangedFunc","resetProps","groupStageRefreshProps","filterStageRefreshProps","pivotStageRefreshProps","aggregateStageRefreshProps","sortStageRefreshProps","filterAggStageRefreshProps","flattenStageRefreshProps","allProps","params","properties","arePropertiesImpacted","propSet","prop","child","startPixel","endPixel","startLimitIndex","endLimitIndex","atLeastOneChange","res","rowAtStartPixel","rowAtEndPixel","firstRow","lastRow","rowIndex","rowHeight","defaultRowHeight","nextRowTop","displayedRowsMapped","allowEstimate","changedPath","changedPathActive","clearIfNotDisplayed","recurse","isRootNode","rowNodes","pixel","increment","indexAtPixelNow","rowNodeAtPixelNow","_removeFromArray","idx","_insertIntoArray","highlight","index","rowTop","totalFooterInc","filteredChildren","topLevelIndex","adjustedIndex","_missing","step","col","rowNodeTransactions","noTransactions","ChangedPath","transWithAddsOrDeletes","tx","paramsStep","stepsMapped","_exists","paramsOrStep","displayedNodesMapped","rowsMissing","firstInRange","lastInRange","started","finished","result","groupsSelectChildren","datasource","pixelToMatch","bottomPointer","topPointer","_last","oldBottomPointer","oldTopPointer","midPointer","currentRowNode","topPixel","bottomPixel","callback","includeFooterNodes","nodes","recursionType","addFooters","position","parentNode","grandTotal","isGroupIncludeFooter","groupTotal","nodeChildren","expand","usingTreeData","usingPivotMode","recursiveExpandOrCollapse","actionRow","afterColumnsChanged","rowDataUpdatedEvent","rowDataTransaction","waitMillis","callbackFuncsBound","rowNodeTrans","forceRowNodeOrder","tranItem","rowNodeTran","func","orderMap","atLeastOne","detailNode","onGroupExpandedOrCollapsed","refreshClientSideRowModel","forEachLeafNode","forEachNodeAfterFilter","forEachNodeAfterFilterAndSort","resetRowHeights","applyTransaction","applyTransactionAsync","flushAsyncTransactions","getBestCostNodeSelection","FilterStage","filterActive","filterCallback","includeChildNodes","childNode","passBecauseChildren","passBecauseDataPasses","treeDataDepthFirstFilter","alreadyFoundInParent","foundInParent","treeDataFilterCallback","defaultFilterCallback","FlattenStage","skipLeafNodes","showRootNode","topList","details","atLeastOneRowPresent","addToTop","groupRemoveSingleChildren","rowsToFlatten","uiLevel","isParent","isSkippedLeafNode","isRemovedSingleChildrenGroup","isRemovedLowestSingleChildrenGroup","neverAllowToExpand","isHiddenOpenParent","excludedParent","doesRowShowFooter","uiLevelForChildren","masterNode","ImmutableService","getRowIdProvided","transactionAndMap","transaction","orderIdMap","existingNodesMap","existingNode","_iterateObject","SortService","sortOptions","sortActive","useDeltaSort","sortContainsGroupColumns","groupMaintainOrder","groupColumnsPresent","allDirtyNodes","isPivotMode","postSortFunc","skipSortingPivotLeafs","wasSortExplicitlyRemoved","childrenToBeSorted","indexedOrders","row1","row2","dirtyNodes","addNodesFunc","tran","allTouchedNodes","unsortedRows","oldSortedRows","untouchedRowsMap","touchedRows","row","sortedUntouchedRows","mapNodeToSortedNode","rowNode2","pos","sortedChangedRows","a","b","arr1","arr2","j","listToSort","firstChild","lastChild","clearOperation","childRowNode","groupDisplayCol","showRowGroup","displayingGroupKey","rowGroupColumn","parentToStealFrom","SortStage","deltaSort","opt","VERSION2","ClientSideRowModelCoreModule","ClientSideRowModelApiModule","RowModelHelperService","CsrmSsrmSharedApiModule","ClientSideRowModelModule","BaseCreator","fileName","extension","serializingSession","BaseGridSerializingSession","config","columnModel","columnNameService","valueService","processCellCallback","processHeaderCallback","processGroupHeaderCallback","processRowGroupCallback","columnsToExport","column","accumulatedRowIndex","type","value","currentColumnIndex","colDef","isGroupUseEntireRow","isTreeData","isSuppressGroupMaintainValueType","getValueFromNode","node2","isFooter","keys","groupValue","valueToParse","valueToFormat","Downloader","content","win","element","url","LINE_SEPARATOR","CsvSerializingSession","suppressQuotes","columnSeparator","cell","columnGroup","header","span","count","rowCellValue","stringValue","CsvCreator","baseParams","userParams","mergedParams","packagedFile","skipDefaultParams","getDataAsCsv","exportDataAsCsv","GridSerializer","BeanStub","beans","gridSerializingSession","params","allColumns","columnKeys","skipRowGroups","columnsToExport","_compose","node","rowSkipper","skipSingleChildrenGroup","skipLowestSingleChildrenGroup","isExplicitExportSelection","hideOpenParents","isLeafNode","isFooter","shouldSkipLowestGroup","shouldSkipCurrentGroup","rowAccumulator","column","index","content","appendContent","prependContent","idCreator","GroupInstanceIdCreator","displayedGroups","gridRowIterator","processRow","position","a","b","rowModel","rowModelType","usingCsrm","usingSsrm","onlySelectedNonStandardModel","exportedRows","selectedNodes","rows","sortOptions","compareNodes","rowA","rowB","isPivotMode","isTreeData","GROUP_AUTO_COLUMN_ID","processGroupHeaderCallback","directChildrenHeaderGroups","columnGroupChild","columnGroup","it","isColumnGroup","columnIndex","name","collapsibleGroupRanges","collapsibleGroups","currentColumn","currentIdx","arr","lastGroup","_last","VERSION3","CsvExportCoreModule","CsvCreator","CsvExportApiModule","getDataAsCsv","exportDataAsCsv","CsvExportModule","crcTable","InfiniteBlock","RowNodeBlock","beans","id","parentCache","params","rowNode","data","index","_exists","_missing","_warnOnce","callback","sequence","rowCount","rowIndex","dontTouchLastAccessed","localIndex","i","RowNode","finalRowCount","MAX_EMPTY_BLOCKS_TO_KEEP","InfiniteCache","BeanStub","dontCreatePage","blockId","block","blockNumber","newBlock","lastRow","_log","blockToExclude","blocksForPurging","b","lastAccessedComparator","a","maxBlocksProvided","blocksToKeep","emptyBlocksToKeep","purgeBecauseBlockEmpty","purgeBecauseCacheFull","focusedCell","blockIndexStart","blockIndexEnd","startIndex","endIndex","blockToRemove","lastRowIndexPlusOverflow","lastRowIndexKnown","NumberSequence","blockComparator","_getAllValuesInObject","event","blocksToDestroy","firstInRange","lastInRange","result","lastBlockId","inActiveRange","numberSequence","foundGapInSelection","hitFirstOrLast","InfiniteRowModel","resetRequired","_jsonEquals","datasource","node","topLevelIndex","pixel","rowIndexForPixel","lastRowIndex","refreshInfiniteCache","purgeInfiniteCache","getInfiniteRowCount","isLastRowIndexKnown","VERSION4","InfiniteRowModelCoreModule","RowNodeBlockModule","InfiniteRowModelApiModule","RowModelHelperService","SsrmInfiniteSharedApiModule","InfiniteRowModelModule","ModuleRegistry","CommunityFeaturesModule","ClientSideRowModelModule","CsvExportModule","AngularFrameworkComponentWrapper","_AngularFrameworkComponentWrapper","BaseComponentWrapper","viewContainerRef","angularFrameworkOverrides","OriginalConstructor","that","DynamicAgNg2Component","BaseGuiComponent","params","name","wrapper","args","componentRef","callback","componentType","ɵAngularFrameworkComponentWrapper_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵdefineInjectable","_removeFromParent","AngularFrameworkOverrides","_AngularFrameworkOverrides","VanillaFrameworkOverrides","_ngZone","source","NgZone","comp","prototype","ɵɵinject","AgGridAngular","_AgGridAngular","elementDef","frameworkComponentWrapper","resolve","EventEmitter","mergedGridOps","_combineAttributesAndGridOptions","api","createGrid","changes","gridOptions","key","value","_processOnChange","eventType","emitterAny","hasEmitter","asEventName","hasGridOptionListener","event","emitter","fireEmitter","ɵɵdirectiveInject","ElementRef","ViewContainerRef","ɵɵdefineComponent","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","rf","ctx","AgGridModule","_AgGridModule","ɵɵdefineNgModule","ɵɵdefineInjector","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","column_r2","value","ɵɵadvance","ɵɵtextInterpolate1","label","ɵɵlistener","$event","ɵɵrestoreView","_r3","ctx_r3","ɵɵnextContext","ɵɵresetView","onTablePaginatorChange","detail","filterCache","skip","take","recordCount","AgGridDemoComponent","constructor","appDataService","inject","AppDataService","storageKey","isBusy","sort","property","direction","SortDirection","Ascending","filters","recordset","gridOptions","domLayout","defaultColDef","sortable","resizable","columnDefs","field","headerName","cellRenderer","ImageCellRendererComponent","width","suppressSizeToFit","suppressAutoSize","filter","optionalTableColumns","c","map","ngOnInit","getRecords","onGridReady","event","agGrid","api","sizeColumnsToFit","columnState","localStorage","getItem","length","applyColumnState","state","JSON","parse","applyOrder","selectedTableColumns","getAllDisplayedColumns","getColDef","onTableSort","setItem","stringify","getColumnState","onTableStateChange","isDefined","finished","includes","source","type","onTableColumnOptionSelected","columnFields","setColumnsVisible","pageIndex","pageSize","getPeople","pipe","finalize","subscribe","result","data","count","selectors","viewQuery","rf","ctx","AgGridAngular","ɵɵelement","i0","_r1","ɵɵrepeaterCreate","AgGridDemoComponent_For_8_Template","ɵɵrepeaterTrackByIndex","ɵɵtemplate","AgGridDemoComponent_Conditional_12_Template","ɵɵrepeater","ɵɵconditional","CommonModule","ForgeIconButtonModule","IconButtonComponent","IconComponent","ForgeIconModule","ForgeOptionModule","OptionComponent","ForgePaginatorModule","PaginatorComponent","ForgeSelectDropdownModule","SelectDropdownComponent","ForgeToolbarModule","ToolbarComponent","AgGridModule","styles","_AgGridDemoComponent","getGui","cellElement","init","params","document","createElement","src","Utils","formatNumber","id","classList","add","refresh"],"x_google_ignoreList":[0,1]}