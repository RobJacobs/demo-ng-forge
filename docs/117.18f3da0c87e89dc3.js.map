{"version":3,"file":"117.18f3da0c87e89dc3.js","mappings":"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","names":["AppFormsModule","static","this","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","oAB","cJS","CommonModule","FormsModule","ReactiveFormsModule","ForgeModule","defaultModules","toolbar","header","list","script","indent","direction","size","color","background","font","align","QUILL_CONFIG_TOKEN","InjectionToken","providedIn","factory","modules","firstValueFrom","source","config","hasConfig","Promise","resolve","reject","subscriber","SafeSubscriber","next","value","unsubscribe","error","complete","defaultValue","EmptyError","subscribe","QuillEditorComponent_ng_template_0_pre_0_Template","rf","ctx","i0","QuillEditorComponent_ng_template_0_Template","ctx_r0","_r2","preserve","QuillEditorComponent_ng_template_4_pre_0_Template","QuillEditorComponent_ng_template_4_Template","ctx_r1","QuillEditorComponent_ng_template_5_Template","_c0","_c1","QuillViewComponent_div_0_Template","QuillViewComponent_pre_1_Template","getFormat","format","configFormat","QuillService","constructor","injector","_this","quill$","defer","_asyncToGenerator","Quill","maybePatchedAddEventListener","document","addEventListener","__zone_symbol__addEventListener","quillImport","__webpack_require__","e","then","bind","default","customOptions","forEach","customOption","newCustomOption","import","whitelist","register","suppressGlobalRegisterWarning","registerCustomModules","customModules","pipe","shareReplay","bufferSize","refCount","get","DOCUMENT","getQuill","Array","isArray","implementation","path","isObservable","ɵfac","ɵprov","token","QuillEditorBase","required","customToolbarPosition","styles","strict","preserveWhitespace","trimOnValidation","compareValues","filterNull","defaultEmptyValue","onEditorCreated","EventEmitter","onEditorChanged","onContentChanged","onSelectionChanged","onFocus","onBlur","onNativeFocus","onNativeBlur","disabled","toolbarPosition","subscription","quillSubscription","elementRef","inject","ElementRef","cd","ChangeDetectorRef","domSanitizer","DomSanitizer","platformId","PLATFORM_ID","renderer","Renderer2","zone","NgZone","service","valueGetter","quillEditor","editorElement","html","querySelector","innerHTML","modelValue","getText","getContents","JSON","stringify","valueSetter","includes","sanitize","SecurityContext","HTML","clipboard","convert","parse","insert","selectionChangeHandler","range","oldRange","trackChanges","shouldTriggerOnModelTouched","onModelTouched","observed","run","emit","editor","markForCheck","textChangeHandler","delta","oldDelta","text","content","editorElem","shouldTriggerOnModelChange","onModelChange","editorChangeHandler","event","current","old","normalizeClassNames","classes","trim","split","reduce","prev","cur","trimmed","push","ngOnInit","ngAfterViewInit","isPlatformServer","mergeMap","promises","beforeRender","all","nativeElement","toolbarElem","Object","assign","undefined","placeholder","keys","key","setStyle","addClasses","bounds","body","debug","readOnly","hasOwnProperty","scrollingContainer","formats","runOutsideAngular","theme","scroll","domNode","getModule","container","preventDefault","linkPlaceholder","input","tooltip","root","dataset","link","setText","newValue","setContents","clear","setDisabledState","addQuillEventListeners","onValidatorChanged","requestAnimationFrame","ngOnDestroy","dispose","ngOnChanges","changes","enable","currentValue","currentStyling","previousStyling","previousValue","removeStyle","currentClasses","previousClasses","removeClasses","debounceTime","classList","c","addClass","removeClass","writeValue","currentEditorValue","isDisabled","disable","setAttribute","removeAttribute","registerOnChange","fn","registerOnTouched","registerOnValidatorChange","validate","err","valid","textLength","length","deltaOperations","ops","onlyEmptyOperation","minLength","minLengthError","given","maxLength","maxLengthError","requiredError","empty","Subscription","add","fromEvent","textChange$","editorChange$","ɵdir","type","inputs","outputs","features","QuillEditorComponent","ɵQuillEditorComponent_BaseFactory","ɵcmp","selectors","standalone","multi","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NG_VALIDATORS","ngContentSelectors","decls","vars","consts","template","dependencies","i1","QuillViewHTMLComponent","sanitizer","themeClass","bypassSecurityTrustHtml","encapsulation","QuillViewComponent","observers","i2","QuillModule","forRoot","ngModule","providers","useValue","ɵmod","ɵinj","imports","routes","component","TextEditorComponent","textEditorFormControl","FormControl","quillModules","quill","console","log","querySelectorAll","el","tabIndex","onToggleState","core","Xpm","$event","stopPropagation","TextEditorModule","RouterModule","forChild","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","target","eventName","options","resultSelector","isFunction","mapOneOrManyArgs","remove","isEventTarget","removeEventListener","map","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","subTarget","innerFrom","TypeError","Observable","args","ReplaySubject","Subject","_bufferSize","Infinity","_windowTime","_timestampProvider","dateTimestampProvider","super","_buffer","_infiniteTimeWindow","Math","max","isStopped","now","_trimBuffer","_subscribe","_throwIfClosed","_innerSubscribe","copy","slice","i","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","configOrBufferSize","windowTime","scheduler","share","connector","resetOnError","resetOnComplete","resetOnRefCountZero","Action","work","schedule","state","delay","intervalProvider","setInterval","timeout","delegate","clearInterval","handle","AsyncAction","pending","_a","id","recycleAsyncId","requestAsyncId","_id","flush","_scheduler","execute","Error","_execute","_delay","errorValue","errored","actions","arrRemove","Scheduler","schedulerActionCtor","AsyncScheduler","SchedulerAction","_active","action","shift","asyncScheduler","async","Date"],"sourceRoot":"webpack:///","sources":["./src/app/shared/app-forms.module.ts","./node_modules/ngx-quill/fesm2022/ngx-quill-config.mjs","./node_modules/rxjs/dist/esm/internal/firstValueFrom.js","./node_modules/ngx-quill/fesm2022/ngx-quill.mjs","./src/app/text-editor/text-editor.module.ts","./src/app/text-editor/text-editor.component.ts","./src/app/text-editor/text-editor.component.html","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { ForgeModule } from '@tylertech/forge-angular';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [FormsModule, ReactiveFormsModule, ForgeModule],\r\n  providers: []\r\n})\r\nexport class AppFormsModule { }","import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, makeEnvironmentProviders } from '@angular/core';\n\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'] // link and image, video\n    ]\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n    providedIn: 'root',\n    factory: () => ({ modules: defaultModules })\n});\n\n/**\n * This `NgModule` provides a global Quill config on the root level, e.g., in `AppModule`.\n * But this eliminates the need to import the entire `ngx-quill` library into the main bundle.\n * The `quill-editor` itself may be rendered in any lazy-loaded module, but importing `QuillModule`\n * into the `AppModule` will bundle the `ngx-quill` into the vendor.\n */\nclass QuillConfigModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillConfigModule,\n            providers: [{ provide: QUILL_CONFIG_TOKEN, useValue: config }],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillConfigModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillConfigModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillConfigModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillConfigModule, decorators: [{\n            type: NgModule\n        }] });\n\n/**\n * Provides Quill configuration at the root level:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideQuillConfig(...)]\n * });\n * ```\n */\nconst provideQuillConfig = (config) => makeEnvironmentProviders([{ provide: QUILL_CONFIG_TOKEN, useValue: config }]);\n\n/*\n * Public API Surface of ngx-quill/config\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillConfigModule, defaultModules, provideQuillConfig };\n","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n","import { defaultModules, QUILL_CONFIG_TOKEN } from 'ngx-quill/config';\nexport * from 'ngx-quill/config';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, EventEmitter, inject, ElementRef, ChangeDetectorRef, PLATFORM_ID, Renderer2, NgZone, SecurityContext, Directive, Input, Output, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { defer, isObservable, firstValueFrom, Subscription, fromEvent } from 'rxjs';\nimport { shareReplay, mergeMap, debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nclass QuillService {\n    constructor(injector, config) {\n        this.config = config;\n        this.quill$ = defer(async () => {\n            if (!this.Quill) {\n                // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n                // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n                // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n                const maybePatchedAddEventListener = this.document.addEventListener;\n                // There're 2 types of Angular applications:\n                // 1) zone-full (by default)\n                // 2) zone-less\n                // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n                // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n                // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n                // this means the `zone.js` is not imported.\n                // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n                // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n                this.document.addEventListener =\n                    // eslint-disable-next-line @typescript-eslint/dot-notation\n                    this.document['__zone_symbol__addEventListener'] ||\n                        this.document.addEventListener;\n                const quillImport = await import(/* webpackChunkName: 'quill' */ 'quill');\n                this.document.addEventListener = maybePatchedAddEventListener;\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n            }\n            // Only register custom options and modules once\n            this.config.customOptions?.forEach((customOption) => {\n                const newCustomOption = this.Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n            });\n            return await this.registerCustomModules(this.Quill, this.config.customModules, this.config.suppressGlobalRegisterWarning);\n        }).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n        this.document = injector.get(DOCUMENT);\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        return this.quill$;\n    }\n    /**\n     * Marked as internal so it won't be available for `ngx-quill` consumers, this is only\n     * internal method to be used within the library.\n     *\n     * @internal\n     */\n    async registerCustomModules(Quill, customModules, suppressGlobalRegisterWarning) {\n        if (Array.isArray(customModules)) {\n            // eslint-disable-next-line prefer-const\n            for (let { implementation, path } of customModules) {\n                // The `implementation` might be an observable that resolves the actual implementation,\n                // e.g. if it should be lazy loaded.\n                if (isObservable(implementation)) {\n                    implementation = await firstValueFrom(implementation);\n                }\n                Quill.register(path, implementation, suppressGlobalRegisterWarning);\n            }\n        }\n        // Return `Quill` constructor so we'll be able to re-use its return value except of using\n        // `map` operators, etc.\n        return Quill;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillService, deps: [{ token: i0.Injector }, { token: QUILL_CONFIG_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [QUILL_CONFIG_TOKEN]\n                }] }]; } });\n\nclass QuillEditorBase {\n    constructor() {\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.compareValues = false;\n        this.filterNull = false;\n        /*\n        https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n      \n        provide default empty value\n        by default null\n      \n        e.g. defaultEmptyValue=\"\" - empty string\n      \n        <quill-editor\n          defaultEmptyValue=\"\"\n          formControlName=\"message\"\n        ></quill-editor>\n        */\n        this.defaultEmptyValue = null;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onNativeFocus = new EventEmitter();\n        this.onNativeBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.preserve = false;\n        this.toolbarPosition = 'top';\n        this.subscription = null;\n        this.quillSubscription = null;\n        this.elementRef = inject(ElementRef);\n        this.document = inject(DOCUMENT);\n        this.cd = inject(ChangeDetectorRef);\n        this.domSanitizer = inject(DomSanitizer);\n        this.platformId = inject(PLATFORM_ID);\n        this.renderer = inject(Renderer2);\n        this.zone = inject(NgZone);\n        this.service = inject(QuillService);\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                if (sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched && (source === 'user' || trackChanges && trackChanges === 'all');\n            // only emit changes when there's any listener\n            if (!this.onBlur.observed &&\n                !this.onFocus.observed &&\n                !this.onSelectionChanged.observed &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n                this.cd.markForCheck();\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observed && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n                this.cd.markForCheck();\n            });\n        };\n        // eslint-disable-next-line max-len\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observed) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = this.defaultEmptyValue;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n            else {\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        editor: this.quillEditor,\n                        event,\n                        oldRange: old,\n                        range: current,\n                        source\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n        };\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n        this.toolbarPosition = this.customToolbarPosition;\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        // The `quill-editor` component might be destroyed before the `quill` chunk is loaded and its code is executed\n        // this will lead to runtime exceptions, since the code will be executed on DOM nodes that don't exist within the tree.\n        this.quillSubscription = this.service.getQuill().pipe(mergeMap((Quill) => {\n            const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n            const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n            if (beforeRender) {\n                promises.push(beforeRender());\n            }\n            return Promise.all(promises).then(() => Quill);\n        })).subscribe(Quill => {\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let defaultEmptyValue = this.defaultEmptyValue;\n            // eslint-disable-next-line no-prototype-builtins\n            if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n                defaultEmptyValue = this.service.config.defaultEmptyValue;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    defaultEmptyValue,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n                if (this.onNativeBlur.observed) {\n                    // https://github.com/quilljs/quill/issues/2186#issuecomment-533401328\n                    this.quillEditor.scroll.domNode.addEventListener('blur', () => this.onNativeBlur.next({\n                        editor: this.quillEditor,\n                        source: 'dom'\n                    }));\n                    // https://github.com/quilljs/quill/issues/2186#issuecomment-803257538\n                    this.quillEditor.getModule('toolbar').container.addEventListener('mousedown', (e) => e.preventDefault());\n                }\n                if (this.onNativeFocus.observed) {\n                    this.quillEditor.scroll.domNode.addEventListener('focus', () => this.onNativeFocus.next({\n                        editor: this.quillEditor,\n                        source: 'dom'\n                    }));\n                }\n                // Set optional link placeholder, Quill has no native API for it so using workaround\n                if (this.linkPlaceholder) {\n                    const tooltip = this.quillEditor?.theme?.tooltip;\n                    const input = tooltip?.root?.querySelector('input[data-link]');\n                    if (input?.dataset) {\n                        input.dataset.link = this.linkPlaceholder;\n                    }\n                }\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else {\n                    const newValue = this.valueSetter(this.quillEditor, this.content);\n                    this.quillEditor.setContents(newValue, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            this.addQuillEventListeners();\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observed && !this.onValidatorChanged) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n                this.onEditorCreated.complete();\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.dispose();\n        this.quillSubscription?.unsubscribe();\n        this.quillSubscription = null;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        /* eslint-disable @typescript-eslint/dot-notation */\n        if (changes.readOnly) {\n            this.quillEditor.enable(!changes.readOnly.currentValue);\n        }\n        if (changes.placeholder) {\n            this.quillEditor.root.dataset.placeholder =\n                changes.placeholder.currentValue;\n        }\n        if (changes.defaultEmptyValue) {\n            this.quillEditor.root.dataset.defaultEmptyValue =\n                changes.defaultEmptyValue.currentValue;\n        }\n        if (changes.styles) {\n            const currentStyling = changes.styles.currentValue;\n            const previousStyling = changes.styles.previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes.classes) {\n            const currentClasses = changes.classes.currentValue;\n            const previousClasses = changes.classes.previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n        // `debounceTime` operator or vice-versa remove it.\n        if (changes.debounceTime) {\n            this.addQuillEventListeners();\n        }\n        /* eslint-enable @typescript-eslint/dot-notation */\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        // optional fix for https://github.com/angular/angular/issues/14988\n        if (this.filterNull && currentValue === null) {\n            return;\n        }\n        this.content = currentValue;\n        if (!this.quillEditor) {\n            return;\n        }\n        const format = getFormat(this.format, this.service.config.format);\n        const newValue = this.valueSetter(this.quillEditor, currentValue);\n        if (this.compareValues) {\n            const currentEditorValue = this.quillEditor.getContents();\n            if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n                return;\n            }\n        }\n        if (currentValue) {\n            if (format === 'text') {\n                this.quillEditor.setText(currentValue);\n            }\n            else {\n                this.quillEditor.setContents(newValue);\n            }\n            return;\n        }\n        this.quillEditor.setText('');\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        const deltaOperations = this.quillEditor.getContents().ops;\n        const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength && onlyEmptyOperation) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n    addQuillEventListeners() {\n        this.dispose();\n        // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n        // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n        // `zone.run` when we emit an event to the parent component.\n        this.zone.runOutsideAngular(() => {\n            this.subscription = new Subscription();\n            this.subscription.add(\n            // mark model as touched if editor lost focus\n            fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n                this.selectionChangeHandler(range, oldRange, source);\n            }));\n            // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n            // will be invoked upon subscription and teardown.\n            let textChange$ = fromEvent(this.quillEditor, 'text-change');\n            let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n            if (typeof this.debounceTime === 'number') {\n                textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n                editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n            }\n            this.subscription.add(\n            // update model if text changes\n            textChange$.subscribe(([delta, oldDelta, source]) => {\n                this.textChangeHandler(delta, oldDelta, source);\n            }));\n            this.subscription.add(\n            // triggered if selection or text changed\n            editorChange$.subscribe(([event, current, old, source]) => {\n                this.editorChangeHandler(event, current, old, source);\n            }));\n        });\n    }\n    dispose() {\n        if (this.subscription !== null) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillEditorBase, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.8\", type: QuillEditorBase, inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", required: \"required\", formats: \"formats\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", beforeRender: \"beforeRender\", styles: \"styles\", strict: \"strict\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", customOptions: \"customOptions\", customModules: \"customModules\", trackChanges: \"trackChanges\", preserveWhitespace: \"preserveWhitespace\", classes: \"classes\", trimOnValidation: \"trimOnValidation\", linkPlaceholder: \"linkPlaceholder\", compareValues: \"compareValues\", filterNull: \"filterNull\", debounceTime: \"debounceTime\", defaultEmptyValue: \"defaultEmptyValue\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\", onNativeFocus: \"onNativeFocus\", onNativeBlur: \"onNativeBlur\" }, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillEditorBase, decorators: [{\n            type: Directive\n        }], propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], readOnly: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], customToolbarPosition: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], beforeRender: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], scrollingContainer: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], trackChanges: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], classes: [{\n                type: Input\n            }], trimOnValidation: [{\n                type: Input\n            }], linkPlaceholder: [{\n                type: Input\n            }], compareValues: [{\n                type: Input\n            }], filterNull: [{\n                type: Input\n            }], debounceTime: [{\n                type: Input\n            }], defaultEmptyValue: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }], onEditorChanged: [{\n                type: Output\n            }], onContentChanged: [{\n                type: Output\n            }], onSelectionChanged: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onNativeFocus: [{\n                type: Output\n            }], onNativeBlur: [{\n                type: Output\n            }], valueGetter: [{\n                type: Input\n            }], valueSetter: [{\n                type: Input\n            }] } });\nclass QuillEditorComponent extends QuillEditorBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillEditorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.8\", type: QuillEditorComponent, isStandalone: true, selector: \"quill-editor\", providers: [\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            },\n            {\n                multi: true,\n                provide: NG_VALIDATORS,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            }\n        ], usesInheritance: true, ngImport: i0, template: `\n    <ng-template [ngIf]=\"toolbarPosition !== 'top'\">\n      <pre quill-editor-element *ngIf=\"preserve; else noPreserveTpl\"></pre>\n    </ng-template>\n\n    <ng-content select=\"[above-quill-editor-toolbar]\"></ng-content>\n    <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n    <ng-content select=\"[below-quill-editor-toolbar]\"></ng-content>\n\n    <ng-template [ngIf]=\"toolbarPosition === 'top'\">\n      <pre quill-editor-element *ngIf=\"preserve; else noPreserveTpl\"></pre>  \n    </ng-template>\n\n    <ng-template #noPreserveTpl>\n      <div quill-editor-element></div>\n    </ng-template>\n  `, isInline: true, styles: [\":host{display:inline-block}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillEditorComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.Emulated, providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALIDATORS,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        }\n                    ], selector: 'quill-editor', template: `\n    <ng-template [ngIf]=\"toolbarPosition !== 'top'\">\n      <pre quill-editor-element *ngIf=\"preserve; else noPreserveTpl\"></pre>\n    </ng-template>\n\n    <ng-content select=\"[above-quill-editor-toolbar]\"></ng-content>\n    <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n    <ng-content select=\"[below-quill-editor-toolbar]\"></ng-content>\n\n    <ng-template [ngIf]=\"toolbarPosition === 'top'\">\n      <pre quill-editor-element *ngIf=\"preserve; else noPreserveTpl\"></pre>  \n    </ng-template>\n\n    <ng-template #noPreserveTpl>\n      <div quill-editor-element></div>\n    </ng-template>\n  `, standalone: true, imports: [CommonModule], styles: [\":host{display:inline-block}\\n\"] }]\n        }] });\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.content = '';\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            const content = changes.content.currentValue;\n            const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n            this.innerHTML = sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillViewHTMLComponent, deps: [{ token: DomSanitizer }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.8\", type: QuillViewHTMLComponent, isStandalone: true, selector: \"quill-view-html\", inputs: { content: \"content\", theme: \"theme\", sanitize: \"sanitize\" }, usesOnChanges: true, ngImport: i0, template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillViewHTMLComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, selector: 'quill-view-html', template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, standalone: true, imports: [CommonModule], styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i2.DomSanitizer, decorators: [{\n                    type: Inject,\n                    args: [DomSanitizer]\n                }] }, { type: QuillService }]; }, propDecorators: { content: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }] } });\n\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.onEditorCreated = new EventEmitter();\n        this.preserve = false;\n        this.quillSubscription = null;\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                    if (sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert(value);\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        this.quillSubscription = this.service.getQuill().pipe(mergeMap((Quill) => {\n            const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n            const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n            if (beforeRender) {\n                promises.push(beforeRender());\n            }\n            return Promise.all(promises).then(() => Quill);\n        })).subscribe(Quill => {\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                this.onEditorCreated.emit(this.quillEditor);\n                this.onEditorCreated.complete();\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.quillSubscription?.unsubscribe();\n        this.quillSubscription = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillViewComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }, { token: i2.DomSanitizer }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.8\", type: QuillViewComponent, isStandalone: true, selector: \"quill-view\", inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", sanitize: \"sanitize\", beforeRender: \"beforeRender\", strict: \"strict\", content: \"content\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\" }, outputs: { onEditorCreated: \"onEditorCreated\" }, usesOnChanges: true, ngImport: i0, template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view{border:0}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillViewComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, selector: 'quill-view', template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`, standalone: true, imports: [CommonModule], styles: [\".ql-container.ngx-quill-view{border:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], beforeRender: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }] } });\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillModule, imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent], exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillModule, imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.8\", ngImport: i0, type: QuillModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                    exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-quill\n */\n// Re-export everything from the secondary entry-point so we can be backwards-compatible\n// and don't introduce breaking changes for consumers.\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent };\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppFormsModule } from 'src/app/shared/app-forms.module';\r\nimport { TextEditorComponent } from './text-editor.component';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\nconst routes: Routes = [\r\n  { path: '**', component: TextEditorComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TextEditorComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    AppFormsModule,\r\n    QuillModule.forRoot()\r\n  ]\r\n})\r\nexport class TextEditorModule { }","import { Component, ElementRef } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { QuillModules } from 'ngx-quill';\r\nimport { Quill } from 'quill';\r\n\r\n// https://quilljs.com/docs/\r\n// https://github.com/KillerCodeMonkey/ngx-quill\r\n\r\n@Component({\r\n  selector: 'app-text-editor',\r\n  templateUrl: './text-editor.component.html',\r\n  styleUrls: ['./text-editor.component.scss']\r\n})\r\nexport class TextEditorComponent {\r\n  public textEditorFormControl = new FormControl();\r\n  public quillModules: QuillModules = {\r\n    toolbar: {\r\n      container: [\r\n        ['bold', 'italic', 'underline', 'strike', 'code'],\r\n        [{ align: [] }],\r\n        [{ list: 'ordered' }, { list: 'bullet' }],\r\n        [{ indent: '-1' }, { indent: '+1' }],\r\n        ['link'],\r\n        [{ color: [] }, { background: [] }],\r\n        ['clean'],\r\n        [{ font: [] }, { size: [] }, { header: [1, 2, 3, 4, 5, 6, false] }],\r\n        ['image']\r\n      ],\r\n      // handlers: {\r\n      //   'link': (value) => {\r\n      //     console.log(value);\r\n      //   }\r\n      // }\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    public elementRef: ElementRef\r\n  ) {\r\n\r\n  }\r\n\r\n  public onEditorCreated(quill: Quill) {\r\n    console.log(quill);\r\n    this.elementRef.nativeElement.querySelectorAll('.ql-toolbar button').forEach((el: HTMLElement) => el.tabIndex = -1);\r\n    this.elementRef.nativeElement.querySelectorAll('.ql-toolbar [role=\"button\"]').forEach((el: HTMLElement) => el.tabIndex = -1);\r\n  }\r\n\r\n  public onToggleState() {\r\n    this.textEditorFormControl.disabled ? this.textEditorFormControl.enable() : this.textEditorFormControl.disable();\r\n  }\r\n}","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--title\">Text Editor</h2>\r\n  <forge-button slot=\"end\" type=\"outlined\">\r\n    <button type=\"button\" (click)=\"onToggleState()\">Toggle state</button>\r\n  </forge-button>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <quill-editor [formControl]=\"textEditorFormControl\" sanitize=\"true\" placeholder=\"\" [modules]=\"quillModules\" [bounds]=\"elementRef.nativeElement\" #quillEditor (keydown)=\"$event.stopPropagation()\" (onEditorCreated)=\"onEditorCreated($event)\"></quill-editor>\r\n\r\n  <p>{{textEditorFormControl.value}}</p>\r\n</div>","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n    }\n    else {\n        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n"],"x_google_ignoreList":[1,2,3,7,8,9,10,11,12,13,14,15,16]}