{"version":3,"file":"354.3199566a712cefdf.js","mappings":"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","names":["SearchSaveComponent","constructor","this","dialogConfig","inject","DialogConfig","dialogRef","DialogRef","trapFocusDirective","CdkTrapFocus","formGroup","FormGroup","name","FormControl","validators","Validators","required","description","isDefault","isPublic","record","data","patchValue","nativeElement","setAttribute","autoCapture","onSave","close","getRawValue","onCancel","markAsPristine","static","t","core","VBU","selectors","standalone","features","i0","i1","decls","vars","consts","template","rf","ctx","controls","invalid","CommonModule","ReactiveFormsModule","i2","ForgeButtonModule","i3","ForgeCheckboxModule","ForgeIconButtonModule","ForgeIconModule","ForgeTextFieldModule","FormControlInvalidDirective","styles","INDETERMINATE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","IndeterminateDirective","multi","elementRef","ElementRef","#indeterminateEnabled","onChange","_","onTouched","#value","elementChange","isDefined","indeterminate","checked","change","elementBlur","appIndeterminate","value","toString","writeValue","registerOnChange","fn","registerOnTouched","FsC","hostBindings","ctx_r1","searchName","searchDescription","$event","search_r6","_r5","$implicit","onSearchAction","id","_r4","detail","SearchComponent_ng_template_24_For_6_Template","_forTrack0","searchCache","searches","name_r8","_r7","operatorPopup_r9","onOperatorPopupOpen","_c4","tmp_7_0","get","operator","operatorPopupTemplate_r10","SearchComponent_ng_template_59_For_2_Conditional_3_Template","option_r12","operatorPopupFormGroup","label","_r11","onOperatorSelected","SearchComponent_ng_template_59_For_2_Template","operatorOptions","SearchComponent","dialogService","DialogService","toastService","ToastService","dataService","AppDataService","storageKey","activeSearchId","undefined","dateOfBirth","address","include","facet","facetOptions","nameFilter","filter","lastValueFrom","getPeople","pipe","map","r","p","firstName","toLocaleLowerCase","includes","lastName","facetFilter","of","ngOnInit","getSearches","subscribe","result","activeSearch","find","s","filters","index","push","onSearch","onSaveSearch","search","show","backdropClose","escapeClose","afterClosed","searchIndex","findIndex","length","Math","max","saveSearches","next","message","error","onClearSearch","setValue","reset","event","action","stopPropagation","searchesPopup","copySearch","JSON","parse","stringify","splice","popup","operatorPopup","open","parseInt","viewQuery","SearchComponent_Conditional_4_Template","_r1","searchesPopup_r3","SearchComponent_ng_template_24_Template","SearchComponent_ng_container_35_Template","SearchComponent_ng_container_42_Template","SearchComponent_ng_container_48_Template","SearchComponent_ng_template_57_Template","SearchComponent_ng_template_59_Template","searchesPopupTemplate_r13","opertatorAddonTemplate_r14","_c1","_c2","_c3","ForgeAutocompleteModule","ForgeDatePickerModule","ForgeDividerModule","ForgeListItemModule","ForgeListModule","ForgePopupModule","ForgeToolbarModule","AutocompleteRangeComponent","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","target","eventName","options","resultSelector","isFunction","mapOneOrManyArgs","add","remove","isEventTarget","addEventListener","removeEventListener","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","mergeMap","subTarget","innerFrom","TypeError","Observable","subscriber","args"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/search/save/search-save.component.ts","./src/app/search/save/search-save.component.html","./src/app/shared/directives/indeterminate/indeterminate.directive.ts","./src/app/search/search.component.html","./src/app/search/search.component.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { CdkTrapFocus } from '@angular/cdk/a11y';\r\nimport { DialogConfig, DialogRef, ForgeButtonModule, ForgeCheckboxModule, ForgeIconButtonModule, ForgeIconModule, ForgeTextFieldModule } from '@tylertech/forge-angular';\r\n\r\nimport { AutoFocusDirective } from 'src/app/shared/directives/auto-focus/auto-focus.directive';\r\nimport { FormControlInvalidDirective } from 'src/app/shared/directives/form-control-invalid/form-control-invalid.directive';\r\n\r\n@Component({\r\n  selector: 'app-search-save',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ForgeButtonModule,\r\n    ForgeCheckboxModule,\r\n    ForgeIconButtonModule,\r\n    ForgeIconModule,\r\n    ForgeTextFieldModule,\r\n    AutoFocusDirective,\r\n    FormControlInvalidDirective\r\n  ],\r\n  templateUrl: './search-save.component.html',\r\n  styleUrls: ['./search-save.component.scss'],\r\n  hostDirectives: [CdkTrapFocus]\r\n})\r\nexport class SearchSaveComponent {\r\n  public dialogConfig = inject(DialogConfig);\r\n  private dialogRef = inject(DialogRef);\r\n  private trapFocusDirective = inject(CdkTrapFocus);\r\n\r\n  public record: {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    isDefault: boolean;\r\n    isPublic: boolean;\r\n    filters: { property: string; value: string }[];\r\n  };\r\n  public formGroup = new FormGroup({\r\n    name: new FormControl<string | null>(null, { validators: [Validators.required] }),\r\n    description: new FormControl(),\r\n    isDefault: new FormControl(),\r\n    isPublic: new FormControl()\r\n  });\r\n\r\n  constructor() {\r\n    this.record = this.dialogConfig.data;\r\n    this.formGroup.patchValue(this.record);\r\n    this.dialogRef.nativeElement.setAttribute('aria-labelledby', 'save-search--title');\r\n    this.trapFocusDirective.autoCapture = true;\r\n  }\r\n\r\n  public onSave() {\r\n    this.dialogRef.close(this.formGroup.getRawValue());\r\n  }\r\n\r\n  public onCancel() {\r\n    this.formGroup.markAsPristine();\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<div class=\"dialog__header\">\r\n  <h2 class=\"forge-typography--headline5\" id=\"save-search--title\">Save search</h2>\r\n  <forge-icon-button class=\"forge-flex-item--right\">\r\n    <button type=\"button\" aria-label=\"Close\" (click)=\"onCancel()\">\r\n      <forge-icon name=\"close\"></forge-icon>\r\n    </button>\r\n  </forge-icon-button>\r\n</div>\r\n\r\n<div class=\"dialog__body\">\r\n  <form class=\"form-grid\" novalidate autocomplete=\"off\" [formGroup]=\"formGroup\">\r\n    <forge-text-field required [appFormControlInvalid]=\"formGroup.controls.name\">\r\n      <input type=\"text\" id=\"search-save-name\" formControlName=\"name\">\r\n      <label for=\"search-save-name\" slot=\"label\">Name</label>\r\n      <span slot=\"helper-text\" class=\"app-form-control-invalid\">A name is required</span>\r\n    </forge-text-field>\r\n    <forge-text-field>\r\n      <input type=\"text\" id=\"search-save-description\" formControlName=\"description\">\r\n      <label for=\"search-save-description\" slot=\"label\">Description</label>\r\n    </forge-text-field>\r\n    <forge-checkbox>\r\n      <input type=\"checkbox\" id=\"search-save-default\" formControlName=\"isDefault\">\r\n      <label for=\"search-save-default\">Make this your default search</label>\r\n    </forge-checkbox>\r\n    <forge-checkbox>\r\n      <input type=\"checkbox\" id=\"search-save-public\" formControlName=\"isPublic\">\r\n      <label for=\"search-save-public\">Make this search public</label>\r\n    </forge-checkbox>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"dialog__footer\">\r\n  <forge-button type=\"outlined\" class=\"forge-flex-item--right\">\r\n    <button type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n  </forge-button>\r\n  <forge-button type=\"raised\">\r\n    <button type=\"button\" (click)=\"onSave()\" [disabled]=\"formGroup.invalid\">Save</button>\r\n  </forge-button>\r\n</div>","import { Directive, ElementRef, forwardRef, HostListener, inject, Input } from '@angular/core';\r\nimport { StaticProvider } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { isDefined } from '@tylertech/forge-core';\r\n\r\nexport const INDETERMINATE_VALUE_ACCESSOR: StaticProvider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => IndeterminateDirective),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[appIndeterminate]',\r\n  standalone: true,\r\n  providers: [INDETERMINATE_VALUE_ACCESSOR]\r\n})\r\nexport class IndeterminateDirective implements ControlValueAccessor {\r\n  private elementRef = inject(ElementRef);\r\n\r\n  #value?: boolean | null;\r\n  #indeterminateEnabled = true;\r\n\r\n  @HostListener('change')\r\n  public elementChange() {\r\n    if (this.#indeterminateEnabled) {\r\n      if (!isDefined(this.#value)) {\r\n        this.#value = true;\r\n      } else if (this.#value) {\r\n        this.#value = false;\r\n      } else {\r\n        this.#value = null;\r\n      }\r\n      (this.elementRef.nativeElement as HTMLInputElement).indeterminate = !isDefined(this.#value);\r\n      (this.elementRef.nativeElement as HTMLInputElement).checked = this.#value ? true : false;\r\n    } else {\r\n      this.#value = (this.elementRef.nativeElement as HTMLInputElement).checked;\r\n    }\r\n\r\n    this.change(this.#value);\r\n    this.onTouched();\r\n  }\r\n  @HostListener('blur')\r\n  public elementBlur() {\r\n    this.onTouched();\r\n  }\r\n\r\n  @Input()\r\n  public set appIndeterminate(value: boolean) {\r\n    this.#indeterminateEnabled = value?.toString() === 'false' ? false : true;\r\n    if (!this.#indeterminateEnabled && (this.elementRef.nativeElement as HTMLInputElement).indeterminate) {\r\n      (this.elementRef.nativeElement as HTMLInputElement).indeterminate = false;\r\n      (this.elementRef.nativeElement as HTMLInputElement).checked = false;\r\n      this.#value = false;\r\n      this.change(this.#value);\r\n    }\r\n  }\r\n\r\n  public onChange = (_: any) => { };\r\n  public onTouched = () => { };\r\n\r\n  public writeValue(value: any): void {\r\n    if (this.#value !== value) {\r\n      this.#value = value;\r\n      if (this.#indeterminateEnabled) {\r\n        (this.elementRef.nativeElement as HTMLInputElement).indeterminate = !isDefined(this.#value);\r\n      }\r\n      (this.elementRef.nativeElement as HTMLInputElement).checked = this.#value ? true : false;\r\n    }\r\n  }\r\n\r\n  public registerOnChange(fn: (_: boolean) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public change(value: boolean | null): void {\r\n    this.onChange(value);\r\n  }\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <div slot=\"start\">\r\n    <h2 class=\"forge-typography--title\">Search</h2>\r\n    @if (searchCache.activeSearchId) {\r\n    <forge-divider vertical></forge-divider>\r\n    <span class=\"forge-typography--subtitle1-secondary\">{{searchName}}</span>\r\n    <span class=\"forge-typography--subtitle2-secondary\">{{searchDescription}}</span>\r\n    }\r\n  </div>\r\n  <div slot=\"end\">\r\n    <forge-button type=\"outlined\">\r\n      <button type=\"button\" (click)=\"onSaveSearch()\">\r\n        <span>Save search</span>\r\n      </button>\r\n    </forge-button>\r\n    <forge-button type=\"outlined\">\r\n      <button type=\"button\" #searchesPopup=\"forgePopup\" [forgePopup]=\"searchesPopupTemplate\" [forgePopupPlacement]=\"'bottom-start'\" (click)=\"searchesPopup.open()\">\r\n        <span>Saved searches</span>\r\n        <forge-icon name=\"arrow_drop_down\"></forge-icon>\r\n      </button>\r\n    </forge-button>\r\n    <forge-button type=\"outlined\">\r\n      <button type=\"button\" (click)=\"onClearSearch()\">\r\n        <span>Clear all</span>\r\n      </button>\r\n    </forge-button>\r\n    <forge-button type=\"raised\">\r\n      <button type=\"button\" (click)=\"onSearch()\">\r\n        <span>Search</span>\r\n      </button>\r\n    </forge-button>\r\n  </div>\r\n</forge-toolbar>\r\n\r\n<ng-template #searchesPopupTemplate>\r\n  <forge-list class=\"searches-popup\" (forge-list-item-select)=\"onSearchAction($event, 'search', $event.detail.value)\">\r\n    <forge-list-item>\r\n      <span>Add new search</span>\r\n    </forge-list-item>\r\n    <forge-divider></forge-divider>\r\n    @for (search of searchCache.searches; track search.id) {\r\n    <forge-list-item [value]=\"search.id\">\r\n      <span>{{search.name}}</span>\r\n      <div slot=\"trailing\">\r\n        <forge-icon-button>\r\n          <button (click)=\"onSearchAction($any($event), 'edit', search.id)\" aria-label=\"Edit\">\r\n            <forge-icon name=\"edit\"></forge-icon>\r\n          </button>\r\n        </forge-icon-button>\r\n        <forge-icon-button>\r\n          <button (click)=\"onSearchAction($any($event), 'delete', search.id)\" aria-label=\"Delete\">\r\n            <forge-icon name=\"delete\"></forge-icon>\r\n          </button>\r\n        </forge-icon-button>\r\n      </div>\r\n    </forge-list-item>\r\n    }\r\n  </forge-list>\r\n</ng-template>\r\n\r\n<div class=\"body\">\r\n  <form novalidate autocomplete=\"off\" [formGroup]=\"formGroup\" class=\"form\" (ngSubmit)=\"onSearch()\">\r\n    <ng-container formGroupName=\"name\">\r\n      <forge-autocomplete multiple=\"true\" formControlName=\"value\" [filter]=\"nameFilter\" allow-unmatched=\"true\">\r\n        <forge-text-field>\r\n          <input type=\"text\" id=\"app--search--name\" />\r\n          <label for=\"app--search--name\">Name</label>\r\n          <forge-icon slot=\"trailing\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\r\n          <ng-container *ngTemplateOutlet=\"opertatorAddonTemplate, context: { name: 'name' }\"></ng-container>\r\n        </forge-text-field>\r\n      </forge-autocomplete>\r\n    </ng-container>\r\n\r\n    <ng-container formGroupName=\"dateOfBirth\">\r\n      <forge-date-picker formControlName=\"value\">\r\n        <forge-text-field>\r\n          <input type=\"text\" id=\"app--search--date-of-birth\" />\r\n          <label for=\"app--search--date-of-birth\">Date</label>\r\n          <ng-container *ngTemplateOutlet=\"opertatorAddonTemplate, context: { name: 'dateOfBirth' }\"></ng-container>\r\n        </forge-text-field>\r\n      </forge-date-picker>\r\n    </ng-container>\r\n\r\n    <ng-container formGroupName=\"address\">\r\n      <forge-text-field>\r\n        <input type=\"text\" id=\"app--search--address\" formControlName=\"value\" />\r\n        <label for=\"app--search--address\" slot=\"label\">Address</label>\r\n        <ng-container *ngTemplateOutlet=\"opertatorAddonTemplate, context: { name: 'address' }\"></ng-container>\r\n      </forge-text-field>\r\n    </ng-container>\r\n\r\n    <forge-checkbox>\r\n      <input type=\"checkbox\" id=\"app--search--include\" formControlName=\"include\" [appIndeterminate]=\"true\" />\r\n      <label for=\"app--search--include\">Include</label>\r\n    </forge-checkbox>\r\n\r\n    <app-autocomplete-range [optionFilter]=\"facetFilter\" formControlName=\"facet\" label=\"Facet\"></app-autocomplete-range>\r\n  </form>\r\n\r\n  <p>{{formGroup.getRawValue() | json}}</p>\r\n</div>\r\n\r\n<ng-template #opertatorAddonTemplate let-name=\"name\">\r\n  <forge-icon-button slot=\"addon-end\" class=\"operator__addon\" [ngClass]=\"{'operator__addon--selected': formGroup.get(name)?.value.operator}\">\r\n    <button type=\"button\" #operatorPopup=\"forgePopup\" [forgePopup]=\"operatorPopupTemplate\" (click)=\"onOperatorPopupOpen($event, operatorPopup, name)\" aria-label=\"Filter operator\">\r\n      <forge-icon name=\"bolt\"></forge-icon>\r\n    </button>\r\n  </forge-icon-button>\r\n</ng-template>\r\n\r\n<ng-template #operatorPopupTemplate>\r\n  <forge-list class=\"operator-popup\" (forge-list-item-select)=\"onOperatorSelected($event.detail.value)\">\r\n    @for (option of operatorOptions; track i; let i = $index) {\r\n    <forge-list-item [value]=\"option.value\" [selected]=\"operatorPopupFormGroup?.value.operator === option.value\">\r\n      <span>{{option.label}}</span>\r\n      @if (operatorPopupFormGroup?.value.operator === option.value) {\r\n      <forge-icon name=\"check\" slot=\"trailing\"></forge-icon>\r\n      }\r\n    </forge-list-item>\r\n    }\r\n  </forge-list>\r\n</ng-template>","import { Component, ViewChild, OnInit, inject } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { AutocompleteFilterCallback, IOption } from '@tylertech/forge';\r\nimport { PopupDirective, DialogService, ToastService, ForgeToolbarModule, ForgeDividerModule, ForgeButtonModule, ForgeIconModule, ForgeListModule, ForgeListItemModule, ForgeIconButtonModule, ForgeAutocompleteModule, ForgeTextFieldModule, ForgeDatePickerModule, ForgeCheckboxModule, ForgePopupModule } from '@tylertech/forge-angular';\r\nimport { Observable, lastValueFrom, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { ISearch } from 'src/app/shared/interfaces/search.interface';\r\nimport { SearchSaveComponent } from './save/search-save.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AutocompleteRangeComponent } from 'src/app/shared/components/autocomplete-range/autocomplete-range.component';\r\nimport { IndeterminateDirective } from 'src/app/shared/directives/indeterminate/indeterminate.directive';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ForgeAutocompleteModule,\r\n    ForgeButtonModule,\r\n    ForgeCheckboxModule,\r\n    ForgeDatePickerModule,\r\n    ForgeDividerModule,\r\n    ForgeIconButtonModule,\r\n    ForgeIconModule,\r\n    ForgeListItemModule,\r\n    ForgeListModule,\r\n    ForgePopupModule,\r\n    ForgeTextFieldModule,\r\n    ForgeToolbarModule,\r\n    AutocompleteRangeComponent,\r\n    IndeterminateDirective\r\n  ],\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  private dialogService = inject(DialogService);\r\n  private toastService = inject(ToastService);\r\n  private dataService = inject(AppDataService);\r\n\r\n  @ViewChild('searchesPopup', { static: false })\r\n  private searchesPopup?: PopupDirective;\r\n  private storageKey = 'search-searches';\r\n  private operatorPopup?: PopupDirective;\r\n\r\n  public searchName?: string;\r\n  public searchDescription?: string;\r\n  // TODO consider moving to a cache service\r\n  public searchCache: { activeSearchId?: number; searches: ISearch[] } = {\r\n    activeSearchId: undefined,\r\n    searches: []\r\n  };\r\n  // TODO consider moving to a cache service\r\n  public formGroup = new FormGroup({\r\n    name: new FormGroup({\r\n      value: new FormControl(),\r\n      operator: new FormControl()\r\n    }),\r\n    dateOfBirth: new FormGroup({\r\n      value: new FormControl(),\r\n      operator: new FormControl()\r\n    }),\r\n    address: new FormGroup({\r\n      value: new FormControl(),\r\n      operator: new FormControl()\r\n    }),\r\n    include: new FormControl(),\r\n    facet: new FormControl()\r\n  });\r\n  public facetOptions: { label: string; value: number }[] = [];\r\n  public operatorOptions = [\r\n    { value: null, label: 'None' },\r\n    { value: 0, label: 'Equal' },\r\n    { value: 1, label: 'Not equal' },\r\n    { value: 2, label: 'Greater than' },\r\n    { value: 3, label: 'Less than' },\r\n    { value: 4, label: 'Greater than equal to' },\r\n    { value: 5, label: 'Less than equal to' },\r\n    { value: 6, label: 'Range' },\r\n    { value: 7, label: 'Contains' },\r\n    { value: 8, label: 'Not contains' },\r\n    { value: 9, label: 'Empty' }\r\n  ];\r\n  public operatorPopupFormGroup?: FormGroup;\r\n  public nameFilter: AutocompleteFilterCallback = (filter: string) => lastValueFrom(this.dataService.getPeople().pipe(\r\n    map(r => r.data\r\n      .filter(p => p.firstName.toLocaleLowerCase().includes(filter.toLocaleLowerCase()) || p.lastName.toLocaleLowerCase().includes(filter.toLocaleLowerCase()))\r\n      .map(p => ({ label: `${p.firstName} ${p.lastName}`, value: p.id }))\r\n    )\r\n  ));\r\n  public facetFilter = (filter: string): Observable<IOption[]> => {\r\n    return of(this.facetOptions);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataService.getSearches(this.storageKey).subscribe((result) => {\r\n      this.searchCache.searches = result || [];\r\n\r\n      const activeSearch = this.searchCache.searches.find((s) => s.id === this.searchCache.activeSearchId);\r\n      if (isDefined(activeSearch)) {\r\n        this.searchName = activeSearch?.name;\r\n        this.searchDescription = activeSearch?.description;\r\n        this.formGroup.patchValue(activeSearch?.filters);\r\n      }\r\n    });\r\n    for (let index = 0; index < 20; index++) {\r\n      this.facetOptions.push({ value: index, label: `Facet Option ${index}` });\r\n    }\r\n  }\r\n\r\n  public onSearch() {\r\n    // TODO implement search action\r\n  }\r\n\r\n  public onSaveSearch(search?: {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    isDefault: boolean;\r\n    isPublic: boolean;\r\n    filters: { property: string; value: string }[];\r\n  }) {\r\n    const activeSearch = isDefined(search) ? search : this.searchCache.searches.find((s) => s.id === this.searchCache.activeSearchId);\r\n    const record = {\r\n      id: activeSearch?.id,\r\n      name: activeSearch?.name,\r\n      description: activeSearch?.description,\r\n      isDefault: activeSearch?.isDefault,\r\n      isPublic: activeSearch?.isPublic,\r\n      filters: this.formGroup.value\r\n    };\r\n\r\n    this.dialogService.show(SearchSaveComponent, { backdropClose: false, escapeClose: false }, { data: record }).afterClosed.subscribe(result => {\r\n      if (result) {\r\n        if (isDefined(result.id)) {\r\n          const searchIndex = this.searchCache.searches.findIndex((s) => s.id === result.id);\r\n          if (searchIndex !== -1) {\r\n            this.searchCache.searches[searchIndex] = result;\r\n          }\r\n        } else {\r\n          result.id = this.searchCache.searches.length ? Math.max(...this.searchCache.searches.map((s) => s.id)) + 1 : 1;\r\n          this.searchCache.searches.push(result);\r\n        }\r\n\r\n        this.dataService.saveSearches(this.storageKey, this.searchCache.searches).subscribe(\r\n          {\r\n            next: () => {\r\n              this.searchCache.activeSearchId = result.id;\r\n              this.searchName = result.name;\r\n              this.searchDescription = result.description;\r\n              this.toastService.show({ message: 'Search saved' });\r\n            },\r\n            error: () => this.toastService.show({ message: 'Search save failed' })\r\n          }\r\n        );\r\n      }\r\n    })\r\n  }\r\n\r\n  public onClearSearch() {\r\n    this.formGroup.controls.include.setValue(null);\r\n    this.formGroup.reset();\r\n  }\r\n\r\n  public onSearchAction(event: CustomEvent, action: string, id: number) {\r\n    event.stopPropagation();\r\n    this.searchesPopup?.close();\r\n\r\n    if (!isDefined(id)) {\r\n      this.searchCache.activeSearchId = undefined;\r\n      this.searchName = '';\r\n      this.searchDescription = '';\r\n      this.formGroup.reset();\r\n    } else {\r\n      const search = this.searchCache.searches.find((s) => s.id === id);\r\n      if (isDefined(search)) {\r\n        switch (action) {\r\n          case 'search':\r\n            this.searchCache.activeSearchId = search?.id;\r\n            this.searchName = search?.name;\r\n            this.searchDescription = search?.description;\r\n            this.onSearch();\r\n            break;\r\n          case 'edit':\r\n            this.searchCache.activeSearchId = search?.id;\r\n            this.searchName = search?.name;\r\n            this.searchDescription = search?.description;\r\n            this.formGroup.patchValue(search?.filters);\r\n            break;\r\n          case 'copy': {\r\n            const copySearch = JSON.parse(JSON.stringify(search));\r\n            copySearch.id = undefined;\r\n            copySearch.name = `${copySearch.name} copy`;\r\n            copySearch.isDefault = false;\r\n            this.onSaveSearch(copySearch);\r\n            break;\r\n          }\r\n          case 'delete': {\r\n            const searchIndex = this.searchCache.searches.findIndex((s) => s.id === search?.id);\r\n            if (searchIndex !== -1) {\r\n              this.searchCache.searches.splice(searchIndex, 1);\r\n              this.dataService.saveSearches(this.storageKey, this.searchCache.searches).subscribe((result) => { });\r\n            }\r\n\r\n            if (this.searchCache.activeSearchId === search?.id) {\r\n              this.searchCache.activeSearchId = undefined;\r\n              this.searchName = '';\r\n              this.searchDescription = '';\r\n            }\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public onOperatorPopupOpen(event: Event, popup: PopupDirective, name: string) {\r\n    event.stopPropagation();\r\n    this.operatorPopupFormGroup = this.formGroup.get(name) as FormGroup;\r\n    this.operatorPopup = popup;\r\n    this.operatorPopup.open();\r\n  }\r\n\r\n  public onOperatorSelected(value: string | number) {\r\n    value = parseInt(value as string, 10);\r\n    this.operatorPopupFormGroup?.get('operator')?.setValue(value);\r\n    this.operatorPopup?.close();\r\n  }\r\n\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n"],"x_google_ignoreList":[5]}