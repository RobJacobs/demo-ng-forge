"use strict";(self.webpackChunkdemo_ng_forge=self.webpackChunkdemo_ng_forge||[]).push([[9852],{89852:(nt,j,s)=>{s.r(j),s.d(j,{default:()=>st});var w=s(71670),V=s(18100),F=s(84489),W=s(97621),u=s(53661),H=s(7521),T=s(55050),P=s(9497),J=(s(83382),s(19420),s(20891)),B=s(10465),R=s(21789),G=s(68230),C=s(14103),K=s(25820),E=s(33928),U=s(88770),k=s(21109),Q=s(63982),A=s(76179),L=s(18825),X=s(3589),$=s(1897),N=s(35787),O=s(13110),_=s(5692),q=s(38512),p=s(69923),tt=s(2512),et=s(27725),it=s(2206),Y=s(74697);let at=(()=>{class t{constructor(e){if(this._ownsRctx=!1,e)this._ownsRctx=!1,this._rctx=e;else{if(t._instance)return t._instanceRefCount++,t._instance;t._instanceRefCount=1,t._instance=this,this._ownsRctx=!0;const a=document.createElement("canvas").getContext("webgl");a.getExtension("OES_texture_float"),this._rctx=new it.x(a,{})}const o=(0,q.s)("raster/reproject","raster/reproject",new Map([["a_position",0]]),{applyProjection:!0,bilinear:!1,bicubic:!1});this._program=this._rctx.programCache.acquire(o.shaders.vertexShader,o.shaders.fragmentShader,o.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new _.Z(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(e,r,o=!1){const a=(0,R.iV)(e.extent,r),n=new N.Z({x:(e.extent.xmax-e.extent.xmin)/e.texture.descriptor.width,y:(e.extent.ymax-e.extent.ymin)/e.texture.descriptor.height,spatialReference:e.extent.spatialReference}),{x:h,y:d}=(0,O.VO)(n,r,e.extent);let m=(h+d)/2;const c=Math.round((a.xmax-a.xmin)/m),l=Math.round((a.ymax-a.ymin)/m);m=(a.width/c+a.height/l)/2;const Z=new N.Z({x:m,y:m,spatialReference:a.spatialReference}),f=(0,O.Qp)({projectedExtent:a,srcBufferExtent:e.extent,pixelSize:Z,hasWrapAround:!0,spacing:[16,16]}),b=(0,et.Br)(this._rctx,f),v=new Y.x(this._rctx,{width:c,height:l,pixelFormat:p.VI.RGBA,dataType:p.Br.UNSIGNED_BYTE,wrapMode:p.e8.CLAMP_TO_EDGE,samplingMode:p.cw.LINEAR,hasMipmap:!1}),g=new tt.X(this._rctx,{colorTarget:p.Lm.TEXTURE,depthStencilTarget:p.OU.NONE,width:c,height:l},v);this._rctx.bindFramebuffer(g),this._rctx.setViewport(0,0,c,l),this._rctx.useProgram(this._program),this._rctx.bindTexture(e.texture,0),this._rctx.bindTexture(b,1),this._quad.bind();const{width:S=0,height:I=0}=e.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",S,I),this._program.setUniform2fv("u_transformSpacing",f.spacing),this._program.setUniform2fv("u_transformGridSize",f.size),this._program.setUniform2f("u_targetImageSize",c,l),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),b.dispose(),o){const{width:y=0,height:D=0}=g.descriptor,M=new ImageData(y,D);return g.readPixels(0,0,y,D,p.VI.RGBA,p.Br.UNSIGNED_BYTE,M.data),g.detachColorTexture(p.VY.COLOR_ATTACHMENT0),g.dispose(),{texture:v,extent:a,imageData:M}}return g.detachColorTexture(p.VY.COLOR_ATTACHMENT0),g.dispose(),{texture:v,extent:a}}reprojectBitmapData(e,r){const o=(0,U.JZ)(e.bitmapData)?(0,U.RL)(e.bitmapData):e.bitmapData,a=new Y.x(this._rctx,{width:e.bitmapData.width,height:e.bitmapData.height,pixelFormat:p.VI.RGBA,dataType:p.Br.UNSIGNED_BYTE,wrapMode:p.e8.CLAMP_TO_EDGE,samplingMode:p.cw.LINEAR,hasMipmap:!1},o),n=this.reprojectTexture({texture:a,extent:e.extent},r,!0);n.texture.dispose();const h=document.createElement("canvas"),d=n.imageData;return h.width=d.width,h.height=d.height,h.getContext("2d").putImageData(d,0,0),{bitmapData:h,extent:n.extent}}loadAndReprojectBitmapData(e,r,o){var a=this;return(0,w.Z)(function*(){const n=(yield(0,$.default)(e,{responseType:"image"})).data,h=document.createElement("canvas");h.width=n.width,h.height=n.height;const d=h.getContext("2d");d.drawImage(n,0,0);const m=d.getImageData(0,0,h.width,h.height);if(r.spatialReference.equals(o))return{bitmapData:m,extent:r};const c=a.reprojectBitmapData({bitmapData:m,extent:r},o);return{bitmapData:c.bitmapData,extent:c.extent}})()}destroy(){this._ownsRctx?(t._instanceRefCount--,0===t._instanceRefCount&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),t._instance=null)):(this._quad.dispose(),this._program.dispose())}}return t._instanceRefCount=0,t})();class z{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let x=class extends((0,Q.y)(X.Z)){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new k.c,this._kmlVisualData=new z,this._fetchController=null,this.allVisiblePoints=new E.J,this.allVisiblePolylines=new E.J,this.allVisiblePolygons=new E.J,this.allVisibleMapImages=new W.Z}hitTest(t,i){var e=this;return(0,w.Z)(function*(){const r=e.layer;return[e._pointsView?.hitTest(t),e._polylinesView?.hitTest(t),e._polygonsView?.hitTest(t)].flat().filter(Boolean).map(o=>(o.layer=r,o.sourceLayer=r,{type:"graphic",graphic:o,layer:r,mapPoint:t}))})()}update(t){this._polygonsView&&this._polygonsView.processUpdate(t),this._polylinesView&&this._polylinesView.processUpdate(t),this._pointsView&&this._pointsView.processUpdate(t)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new L.Z({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new A.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new L.Z({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new A.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new L.Z({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new A.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",t=>{t.added.forEach(i=>this._addMapImage(i)),t.removed.forEach(i=>this._removeMapImage(i))}),(0,H.YP)(()=>this.layer.visibleSublayers,t=>{for(const[i,e]of this._kmlVisualData.allSublayers)e.visibility=0;for(const i of t){const e=this._kmlVisualData.allSublayers.get(i.id);e&&(e.visibility=1)}this._refreshCollections()})]),this.updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new at}detach(){this._fetchController=(0,u.IM)(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=(0,u.SC)(this._polygonsView),this._polylinesView=(0,u.SC)(this._polylinesView),this._pointsView=(0,u.SC)(this._pointsView),this._imageReprojector=(0,u.SC)(this._imageReprojector)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(t){(this.view.spatialReference?.isWGS84||this.view.spatialReference?.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(t.href,B.Z.fromJSON(t.extent),this.view.spatialReference).then(i=>{const e=new U.eY(i.bitmapData,{immutable:!1,requestRenderOnSourceChangedEnabled:!0});e.x=i.extent.xmin,e.y=i.extent.ymax,e.resolution=i.extent.width/i.bitmapData.width,e.rotation=t.rotation,this._mapImageContainer.addChild(e),this._bitmapIndex.set(t,e)})}_getViewDependentUrl(t,i){return(0,w.Z)(function*(){const{viewFormat:e,viewBoundScale:r,httpQuery:o}=t;if((0,u.pC)(e)){if((0,u.Wi)(i))throw new Error("Loading this network link requires a view state.");let a;if(yield(0,R.zD)(),(0,u.pC)(r)&&1!==r){const y=new B.Z(i.extent);y.expand(r),a=y}else a=i.extent;a=(0,R.iV)(a,G.Z.WGS84);const n=(0,R.iV)(a,G.Z.WebMercator),h=a.xmin,d=a.xmax,m=a.ymin,c=a.ymax,l=i.size[0]*i.pixelRatio,Z=i.size[1]*i.pixelRatio,f=Math.max(n.width,n.height),b={"[bboxWest]":h.toString(),"[bboxEast]":d.toString(),"[bboxSouth]":m.toString(),"[bboxNorth]":c.toString(),"[lookatLon]":a.center.x.toString(),"[lookatLat]":a.center.y.toString(),"[lookatRange]":f.toString(),"[lookatTilt]":"0","[lookatHeading]":i.rotation.toString(),"[lookatTerrainLon]":a.center.x.toString(),"[lookatTerrainLat]":a.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":a.center.x.toString(),"[cameraLat]":a.center.y.toString(),"[cameraAlt]":f.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":l.toString(),"[vertPixels]":Z.toString(),"[terrainEnabled]":"0","[clientVersion]":F.i8,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},v=y=>{for(const D in y)for(const M in b)y[D]=y[D].replace(M,b[M])},g=(0,T.u0)(e);v(g);let S={};(0,u.pC)(o)&&(S=(0,T.u0)(o),v(S));const I=(0,K.en)(t.href);return I.query={...I.query,...g,...S},`${I.path}?${(0,T.B7)(g)}`}return t.href})()}_fetchService(t){var i=this;return(0,w.Z)(function*(){const e=new z;yield i._loadVisualData(i.layer.url,e,t),i._kmlVisualData=e,i._refreshCollections()})()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t))}_isSublayerVisible(t){const i=this._kmlVisualData.allSublayers.get(t);return!!i?.visibility&&(-1===i.parentFolderId||this._isSublayerVisible(i.parentFolderId))}_loadVisualData(t,i,e){var r=this;return this._fetchParsedKML(t,e).then(function(){var o=(0,w.Z)(function*(a){for(const n of a.sublayers){i.allSublayers.set(n.id,n);const h=n.points?yield(0,C.Yu)(n.points):[],d=n.polylines?yield(0,C.Yu)(n.polylines):[],m=n.polygons?yield(0,C.Yu)(n.polygons):[],c=n.mapImages||[];if(i.allPoints.push(...h.map(l=>({item:l,sublayerId:n.id}))),i.allPolylines.push(...d.map(l=>({item:l,sublayerId:n.id}))),i.allPolygons.push(...m.map(l=>({item:l,sublayerId:n.id}))),i.allMapImages.push(...c.map(l=>({item:l,sublayerId:n.id}))),n.networkLink){const l=yield r._getViewDependentUrl(n.networkLink,r.view.state);yield r._loadVisualData(l,i,e)}}});return function(a){return o.apply(this,arguments)}}())}_fetchParsedKML(t,i){return(0,C.CS)(t,this.layer.spatialReference,this.layer.refreshInterval,i).then(e=>(0,C.Cw)(e.data))}_removeMapImage(t){const i=this._bitmapIndex.get(t);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(t))}};(0,V._)([(0,P.Cb)()],x.prototype,"_pointsView",void 0),(0,V._)([(0,P.Cb)()],x.prototype,"_polylinesView",void 0),(0,V._)([(0,P.Cb)()],x.prototype,"_polygonsView",void 0),(0,V._)([(0,P.Cb)()],x.prototype,"updating",void 0),x=(0,V._)([(0,J.j)("esri.views.2d.layers.KMLLayerView2D")],x);const st=x}}]);
//# sourceMappingURL=9852.42d1cabc48235ab8.js.map