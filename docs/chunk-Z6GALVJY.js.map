{
  "version": 3,
  "sources": ["src/app/dynamic-component/external/external.component.ts", "src/app/dynamic-component/external/external.component.html", "src/app/dynamic-component/dynamic-component.component.ts", "src/app/dynamic-component/dynamic-component.component.html"],
  "sourcesContent": ["import { CommonModule } from '@angular/common';\r\nimport { Component, input, model, output } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ForgeButtonModule, ForgeLabelValueModule, ForgeTextFieldModule } from '@tylertech/forge-angular';\r\n\r\nimport { Utils } from 'src/utils';\r\n\r\n@Component({\r\n  selector: 'app-external',\r\n  imports: [CommonModule, FormsModule, ForgeButtonModule, ForgeLabelValueModule, ForgeTextFieldModule],\r\n  templateUrl: './external.component.html',\r\n  styleUrl: './external.component.scss'\r\n})\r\nexport class ExternalComponent {\r\n  public oneWayBinding = input.required<string>();\r\n  public twoWayBinding = model<string>();\r\n  public callbackBinding = output<string>();\r\n\r\n  public onEmit() {\r\n    this.callbackBinding.emit(`The date and time is: ${Utils.formatDate(new Date(), 'MM/dd/yyyy h:mm:ss a')}`);\r\n  }\r\n}\r\n", "<div class=\"forge-typography--heading3\">External component</div>\r\n\r\n<forge-label-value>\r\n  <span slot=\"label\">One way binding</span>\r\n  <span slot=\"value\">{{ oneWayBinding() }}</span>\r\n</forge-label-value>\r\n\r\n<forge-text-field>\r\n  <label for=\"external--two-way-binding\" slot=\"label\">Two way binding</label>\r\n  <input type=\"text\" id=\"external--two-way-binding\" [(ngModel)]=\"twoWayBinding\" autocomplete=\"off\" />\r\n</forge-text-field>\r\n\r\n<forge-button variant=\"filled\" (click)=\"onEmit()\">Emit callback</forge-button>\r\n", "import { CommonModule } from '@angular/common';\r\nimport { Component, inputBinding, model, outputBinding, signal, TemplateRef, twoWayBinding, Type, viewChild, ViewContainerRef } from '@angular/core';\r\nimport { ForgeToolbarModule, ForgeButtonModule, ForgeTextFieldModule, ForgeLabelValueModule } from '@tylertech/forge-angular';\r\n\r\nimport { ExternalComponent } from './external/external.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Utils } from 'src/utils';\r\n\r\n// https://angular.love/angular-20-whats-new#New%20Features%20of%20NgComponentOutlet\r\n\r\n@Component({\r\n  selector: 'app-dynamic-component',\r\n  imports: [CommonModule, FormsModule, ForgeButtonModule, ForgeLabelValueModule, ForgeTextFieldModule, ForgeToolbarModule],\r\n  templateUrl: './dynamic-component.component.html',\r\n  styleUrl: './dynamic-component.component.scss'\r\n})\r\nexport class DynamicComponentComponent {\r\n  private externalContainerRef = viewChild.required('externalContainer', { read: ViewContainerRef });\r\n  private componentTemplateContainerRef = viewChild.required('componentTemplateContainer', { read: ViewContainerRef });\r\n  private componentTemplateRef = viewChild.required('componentTemplate', { read: TemplateRef });\r\n\r\n  public oneWayBinding = signal('One way binding from parent');\r\n  public twoWayBinding = model<string>();\r\n  public callbackMessage = signal<string>('');\r\n\r\n  public onLoadExternal() {\r\n    // this.externalContainerRef().clear();\r\n\r\n    this.externalContainerRef().createComponent(ExternalComponent, {\r\n      bindings: [\r\n        inputBinding('oneWayBinding', this.oneWayBinding),\r\n        twoWayBinding('twoWayBinding', this.twoWayBinding),\r\n        outputBinding<string>('callbackBinding', (msg) => this.onExternalCallback(msg))\r\n      ]\r\n    });\r\n  }\r\n\r\n  private onExternalCallback(message: string) {\r\n    this.callbackMessage.set(message);\r\n  }\r\n\r\n  public onLoadTemplate() {\r\n    // this.componentTemplateContainerRef().clear();\r\n\r\n    this.componentTemplateContainerRef().createEmbeddedView(this.componentTemplateRef());\r\n  }\r\n\r\n  public onEmit() {\r\n    this.callbackMessage.set(`The date and time is: ${Utils.formatDate(new Date(), 'MM/dd/yyyy h:mm:ss a')}`);\r\n  }\r\n}\r\n", "<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--subheading4\">Dynamic component</h2>\r\n  <forge-button slot=\"end\" variant=\"outlined\" (click)=\"onLoadExternal()\">Load external component</forge-button>\r\n  <forge-button slot=\"end\" variant=\"outlined\" (click)=\"onLoadTemplate()\">Load template component</forge-button>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <div class=\"card\">\r\n    <forge-text-field>\r\n      <label for=\"dynamic--one-way-binding\" slot=\"label\">One way binding</label>\r\n      <input type=\"text\" id=\"dynamic--one-way-binding\" [(ngModel)]=\"oneWayBinding\" autocomplete=\"off\" />\r\n    </forge-text-field>\r\n    <forge-text-field>\r\n      <label for=\"dynamic--two-way-binding\" slot=\"label\">Two way binding</label>\r\n      <input type=\"text\" id=\"dynamic--two-way-binding\" [(ngModel)]=\"twoWayBinding\" autocomplete=\"off\" />\r\n    </forge-text-field>\r\n    <forge-label-value>\r\n      <span slot=\"label\">Callback message</span>\r\n      <span slot=\"value\">{{ callbackMessage() }}</span>\r\n    </forge-label-value>\r\n  </div>\r\n\r\n  <ng-container #externalContainer></ng-container>\r\n\r\n  <ng-container #componentTemplateContainer></ng-container>\r\n\r\n  <ng-template #componentTemplate>\r\n    <div class=\"template-card\">\r\n      <div class=\"forge-typography--heading3\">Template component</div>\r\n      <forge-label-value>\r\n        <span slot=\"label\">One way binding</span>\r\n        <span slot=\"value\">{{ oneWayBinding() }}</span>\r\n      </forge-label-value>\r\n\r\n      <forge-text-field>\r\n        <label for=\"template--two-way-binding\" slot=\"label\">Two way binding</label>\r\n        <input type=\"text\" id=\"template--two-way-binding\" [(ngModel)]=\"twoWayBinding\" autocomplete=\"off\" />\r\n      </forge-text-field>\r\n\r\n      <forge-button variant=\"filled\" (click)=\"onEmit()\">Emit callback</forge-button>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["ExternalComponent", "constructor", "oneWayBinding", "input", "required", "twoWayBinding", "model", "callbackBinding", "output", "onEmit", "emit", "Utils", "formatDate", "Date", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "\u0275\u0275listener", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "\u0275\u0275twoWayProperty", "CommonModule", "FormsModule", "DefaultValueAccessor", "NgControlStatus", "NgModel", "ForgeButtonModule", "ButtonComponent", "ForgeLabelValueModule", "LabelValueComponent", "ForgeTextFieldModule", "TextFieldComponent", "styles", "_ExternalComponent", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275twoWayListener", "$event", "\u0275\u0275restoreView", "_r2", "ctx_r2", "\u0275\u0275nextContext", "i0", "\u0275\u0275twoWayBindingSet", "twoWayBinding", "\u0275\u0275resetView", "\u0275\u0275listener", "onEmit", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "oneWayBinding", "\u0275\u0275twoWayProperty", "DynamicComponentComponent", "constructor", "externalContainerRef", "viewChild", "required", "read", "ViewContainerRef", "componentTemplateContainerRef", "componentTemplateRef", "TemplateRef", "signal", "model", "callbackMessage", "onLoadExternal", "createComponent", "ExternalComponent", "bindings", "inputBinding", "outputBinding", "msg", "onExternalCallback", "message", "set", "onLoadTemplate", "createEmbeddedView", "Utils", "formatDate", "Date", "selectors", "viewQuery", "rf", "ctx", "_r1", "\u0275\u0275elementContainer", "\u0275\u0275template", "DynamicComponentComponent_ng_template_26_Template", "\u0275\u0275templateRefExtractor", "CommonModule", "FormsModule", "DefaultValueAccessor", "NgControlStatus", "NgModel", "ForgeButtonModule", "ButtonComponent", "ForgeLabelValueModule", "LabelValueComponent", "ForgeTextFieldModule", "TextFieldComponent", "ForgeToolbarModule", "ToolbarComponent", "styles", "_DynamicComponentComponent"]
}
