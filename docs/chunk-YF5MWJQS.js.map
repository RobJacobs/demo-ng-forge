{
  "version": 3,
  "sources": ["src/app/app-cache.service.ts", "src/app/shared/interceptors/busy.interceptor.ts"],
  "sourcesContent": ["import { Injectable, signal } from '@angular/core';\r\n\r\nexport interface IAppCacheService {\r\n  isBusy: ReturnType<typeof signal<boolean>>;\r\n  layoutMode: string;\r\n  menu: {\r\n    open: boolean;\r\n    options: any[];\r\n  };\r\n  activeRoute: { path: string; params: any }[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppCacheService implements IAppCacheService {\r\n  public isBusy = signal<boolean>(false);\r\n  public storageKey = 'demo-ng-forge--app';\r\n  public theme: 'dark' | 'light' = 'light';\r\n  public layoutMode: 'sm' | 'md' | 'lg' = 'lg';\r\n  public menu = {\r\n    // type: 'dismissible' as 'dismissible' | 'mini',\r\n    open: true,\r\n    options: [\r\n      { label: 'Dashboard', value: 'dashboard', icon: 'home' },\r\n      { label: 'Profile', value: 'profile', icon: 'person' },\r\n      { label: 'People', value: 'people', icon: 'list_alt' },\r\n      { label: 'Pets', value: 'pets', icon: 'pets' },\r\n      {\r\n        label: 'Test',\r\n        icon: 'child_friendly',\r\n        options: [\r\n          {\r\n            label: 'Parent',\r\n            value: 'test/parent',\r\n            icon: 'home',\r\n            leadingIconType: 'component'\r\n          },\r\n          {\r\n            label: 'Child',\r\n            value: 'test/child',\r\n            icon: 'person',\r\n            leadingIconType: 'component'\r\n          }\r\n        ]\r\n      },\r\n      { label: 'Search', value: 'search', icon: 'search' },\r\n      { label: 'Query Builder', value: 'query-builder', icon: 'category' },\r\n      { label: 'Icons', value: 'icons', icon: 'star' },\r\n      { label: 'CSS Variables', value: 'css-variables', icon: 'adjust' },\r\n      {\r\n        label: 'Examples',\r\n        icon: 'directions',\r\n        options: [\r\n          { label: 'Autocomplete', value: 'examples/autocomplete' },\r\n          { label: 'Drag Drop', value: 'examples/drag-drop' },\r\n          { label: 'Select', value: 'examples/select' },\r\n          { label: 'Binding', value: 'examples/binding' },\r\n          { label: 'Misc', value: 'examples/misc' }\r\n        ]\r\n      },\r\n      { label: 'Formly', value: 'formly-demo', icon: 'article' },\r\n      { label: 'Table', value: 'table-demo', icon: 'table_rows' },\r\n      { label: 'AG Grid', value: 'ag-grid-demo', icon: 'table_rows' },\r\n      { label: 'Storage', value: 'storage', icon: 'storage' },\r\n      { label: 'IMask', value: 'imask', icon: 'masks' },\r\n      { label: 'Charts', value: 'charts', icon: 'bar_chart' },\r\n      { label: 'Text Edit', value: 'text-edit', icon: 'auto_stories' },\r\n      { label: 'PDF Viewer', value: 'pdf-viewer', icon: 'picture_as_pdf' }\r\n    ]\r\n  };\r\n  public activeRoute: { path: string; params: any }[] = [];\r\n}\r\n", "import { Injectable, inject } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpContextToken } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { AppCacheService } from 'src/app/app-cache.service';\n\nexport const SHOW_BUSY_INDICATOR = new HttpContextToken<boolean>(() => false);\n\n@Injectable()\nexport class BusyInterceptor implements HttpInterceptor {\n  private appCache = inject(AppCacheService);\n  private activeRequests = 0;\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    if (req.context.get(SHOW_BUSY_INDICATOR)) {\n      if (this.activeRequests === 0) {\n        this.appCache.isBusy.set(true);\n      }\n      this.activeRequests++;\n\n      return next.handle(req).pipe(\n        finalize(() => {\n          this.activeRequests--;\n          if (this.activeRequests === 0) {\n            this.appCache.isBusy.set(false);\n          }\n        })\n      );\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n"],
  "mappings": "wGAeA,IAAaA,GAAe,IAAA,CAAtB,IAAOA,EAAP,MAAOA,CAAe,CAH5BC,aAAA,CAIS,KAAAC,OAASC,EAAgB,EAAK,EAC9B,KAAAC,WAAa,qBACb,KAAAC,MAA0B,QAC1B,KAAAC,WAAiC,KACjC,KAAAC,KAAO,CAEZC,KAAM,GACNC,QAAS,CACP,CAAEC,MAAO,YAAaC,MAAO,YAAaC,KAAM,MAAM,EACtD,CAAEF,MAAO,UAAWC,MAAO,UAAWC,KAAM,QAAQ,EACpD,CAAEF,MAAO,SAAUC,MAAO,SAAUC,KAAM,UAAU,EACpD,CAAEF,MAAO,OAAQC,MAAO,OAAQC,KAAM,MAAM,EAC5C,CACEF,MAAO,OACPE,KAAM,iBACNH,QAAS,CACP,CACEC,MAAO,SACPC,MAAO,cACPC,KAAM,OACNC,gBAAiB,aAEnB,CACEH,MAAO,QACPC,MAAO,aACPC,KAAM,SACNC,gBAAiB,YAClB,GAGL,CAAEH,MAAO,SAAUC,MAAO,SAAUC,KAAM,QAAQ,EAClD,CAAEF,MAAO,gBAAiBC,MAAO,gBAAiBC,KAAM,UAAU,EAClE,CAAEF,MAAO,QAASC,MAAO,QAASC,KAAM,MAAM,EAC9C,CAAEF,MAAO,gBAAiBC,MAAO,gBAAiBC,KAAM,QAAQ,EAChE,CACEF,MAAO,WACPE,KAAM,aACNH,QAAS,CACP,CAAEC,MAAO,eAAgBC,MAAO,uBAAuB,EACvD,CAAED,MAAO,YAAaC,MAAO,oBAAoB,EACjD,CAAED,MAAO,SAAUC,MAAO,iBAAiB,EAC3C,CAAED,MAAO,UAAWC,MAAO,kBAAkB,EAC7C,CAAED,MAAO,OAAQC,MAAO,eAAe,CAAE,GAG7C,CAAED,MAAO,SAAUC,MAAO,cAAeC,KAAM,SAAS,EACxD,CAAEF,MAAO,QAASC,MAAO,aAAcC,KAAM,YAAY,EACzD,CAAEF,MAAO,UAAWC,MAAO,eAAgBC,KAAM,YAAY,EAC7D,CAAEF,MAAO,UAAWC,MAAO,UAAWC,KAAM,SAAS,EACrD,CAAEF,MAAO,QAASC,MAAO,QAASC,KAAM,OAAO,EAC/C,CAAEF,MAAO,SAAUC,MAAO,SAAUC,KAAM,WAAW,EACrD,CAAEF,MAAO,YAAaC,MAAO,YAAaC,KAAM,cAAc,EAC9D,CAAEF,MAAO,aAAcC,MAAO,aAAcC,KAAM,gBAAgB,CAAE,GAGjE,KAAAE,YAA+C,CAAA,0CAxD3Cd,EAAe,wBAAfA,EAAee,QAAff,EAAegB,UAAAC,WAFd,MAAM,CAAA,EAEd,IAAOjB,EAAPkB,SAAOlB,CAAe,GAAA,ECTrB,IAAMmB,EAAsB,IAAIC,EAA0B,IAAM,EAAK,EAG/DC,GAAe,IAAA,CAAtB,IAAOA,EAAP,MAAOA,CAAe,CAD5BC,aAAA,CAEU,KAAAC,SAAWC,EAAOC,CAAe,EACjC,KAAAC,eAAiB,EAEzBC,UAAUC,EAAuBC,EAAiB,CAChD,OAAID,EAAIE,QAAQC,IAAIZ,CAAmB,GACjC,KAAKO,iBAAmB,GAC1B,KAAKH,SAASS,OAAOC,IAAI,EAAI,EAE/B,KAAKP,iBAEEG,EAAKK,OAAON,CAAG,EAAEO,KACtBC,EAAS,IAAK,CACZ,KAAKV,iBACD,KAAKA,iBAAmB,GAC1B,KAAKH,SAASS,OAAOC,IAAI,EAAK,CAElC,CAAC,CAAC,GAGGJ,EAAKK,OAAON,CAAG,CAE1B,yCAtBWP,EAAe,wBAAfA,EAAegB,QAAfhB,EAAeiB,SAAA,CAAA,EAAtB,IAAOjB,EAAPkB,SAAOlB,CAAe,GAAA",
  "names": ["AppCacheService", "constructor", "isBusy", "signal", "storageKey", "theme", "layoutMode", "menu", "open", "options", "label", "value", "icon", "leadingIconType", "activeRoute", "factory", "\u0275fac", "providedIn", "_AppCacheService", "SHOW_BUSY_INDICATOR", "HttpContextToken", "BusyInterceptor", "constructor", "appCache", "inject", "AppCacheService", "activeRequests", "intercept", "req", "next", "context", "get", "isBusy", "set", "handle", "pipe", "finalize", "factory", "\u0275fac", "_BusyInterceptor"]
}
