"use strict";(self.webpackChunkdemo_ng_forge=self.webpackChunkdemo_ng_forge||[]).push([[3520],{53520:(y,l,s)=>{s.r(l),s.d(l,{default:()=>O});var _=s(18100),a=s(32995),E=s(90642),u=s(91409),t=s(9497),i=(s(83382),s(19420),s(20891)),p=s(22735),c=s(16617);let r=class extends((0,c.I)((0,E.R)(p.Z))){constructor(o){super(o),this.resourceInfo=null,this.type="unsupported"}initialize(){this.addResolvingPromise(new Promise((o,n)=>{(0,u.Os)(()=>{const e=this.resourceInfo&&(this.resourceInfo.layerType||this.resourceInfo.type);let d="Unsupported layer type";e&&(d+=" "+e),n(new a.Z("layer:unsupported-layer-type",d,{layerType:e}))})}))}read(o,n){const e={resourceInfo:o};null!=o.id&&(e.id=o.id),null!=o.title&&(e.title=o.title),super.read(e,n)}write(o){return Object.assign(o||{},this.resourceInfo,{id:this.id})}};(0,_._)([(0,t.Cb)({readOnly:!0})],r.prototype,"resourceInfo",void 0),(0,_._)([(0,t.Cb)({type:["show","hide"]})],r.prototype,"listMode",void 0),(0,_._)([(0,t.Cb)({json:{read:!1},readOnly:!0,value:"unsupported"})],r.prototype,"type",void 0),r=(0,_._)([(0,i.j)("esri.layers.UnsupportedLayer")],r);const O=r}}]);
//# sourceMappingURL=3520.7f9b35a289be5dfd.js.map