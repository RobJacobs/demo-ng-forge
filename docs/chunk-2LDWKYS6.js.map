{"version":3,"sources":["node_modules/ag-grid-community/dist/package/main.esm.mjs","node_modules/ag-grid-angular/fesm2022/ag-grid-angular.mjs","src/app/ag-grid-demo/ag-grid-demo.component.ts","src/app/ag-grid-demo/ag-grid-demo.component.html"],"sourcesContent":["// packages/ag-grid-community/src/localEventService.ts\nvar LocalEventService = class {\n  constructor() {\n    this.allSyncListeners = /* @__PURE__ */new Map();\n    this.allAsyncListeners = /* @__PURE__ */new Map();\n    this.globalSyncListeners = /* @__PURE__ */new Set();\n    this.globalAsyncListeners = /* @__PURE__ */new Set();\n    this.asyncFunctionsQueue = [];\n    this.scheduled = false;\n    // using an object performs better than a Set for the number of different events we have\n    this.firedEvents = {};\n  }\n  setFrameworkOverrides(frameworkOverrides) {\n    this.frameworkOverrides = frameworkOverrides;\n  }\n  getListeners(eventType, async, autoCreateListenerCollection) {\n    const listenerMap = async ? this.allAsyncListeners : this.allSyncListeners;\n    let listeners = listenerMap.get(eventType);\n    if (!listeners && autoCreateListenerCollection) {\n      listeners = /* @__PURE__ */new Set();\n      listenerMap.set(eventType, listeners);\n    }\n    return listeners;\n  }\n  noRegisteredListenersExist() {\n    return this.allSyncListeners.size === 0 && this.allAsyncListeners.size === 0 && this.globalSyncListeners.size === 0 && this.globalAsyncListeners.size === 0;\n  }\n  addEventListener(eventType, listener, async = false) {\n    this.getListeners(eventType, async, true).add(listener);\n  }\n  removeEventListener(eventType, listener, async = false) {\n    const listeners = this.getListeners(eventType, async, false);\n    if (!listeners) {\n      return;\n    }\n    listeners.delete(listener);\n    if (listeners.size === 0) {\n      (async ? this.allAsyncListeners : this.allSyncListeners).delete(eventType);\n    }\n  }\n  addGlobalListener(listener, async = false) {\n    this.getGlobalListeners(async).add(listener);\n  }\n  removeGlobalListener(listener, async = false) {\n    this.getGlobalListeners(async).delete(listener);\n  }\n  dispatchEvent(event) {\n    this.dispatchToListeners(event, true);\n    this.dispatchToListeners(event, false);\n    this.firedEvents[event.type] = true;\n  }\n  dispatchEventOnce(event) {\n    if (!this.firedEvents[event.type]) {\n      this.dispatchEvent(event);\n    }\n  }\n  dispatchToListeners(event, async) {\n    const eventType = event.type;\n    if (async && \"event\" in event) {\n      const browserEvent = event.event;\n      if (browserEvent instanceof Event) {\n        event.eventPath = browserEvent.composedPath();\n      }\n    }\n    const {\n      frameworkOverrides\n    } = this;\n    const runCallback = func => {\n      const callback = frameworkOverrides ? () => frameworkOverrides.wrapIncoming(func) : func;\n      if (async) {\n        this.dispatchAsync(callback);\n      } else {\n        callback();\n      }\n    };\n    const originalListeners = this.getListeners(eventType, async, false);\n    if ((originalListeners?.size ?? 0) > 0) {\n      const listeners = new Set(originalListeners);\n      for (const listener of listeners) {\n        if (!originalListeners?.has(listener)) {\n          continue;\n        }\n        runCallback(() => listener(event));\n      }\n    }\n    const globalListenersSrc = this.getGlobalListeners(async);\n    if (globalListenersSrc.size > 0) {\n      const globalListeners = new Set(globalListenersSrc);\n      for (const listener of globalListeners) {\n        runCallback(() => listener(eventType, event));\n      }\n    }\n  }\n  getGlobalListeners(async) {\n    return async ? this.globalAsyncListeners : this.globalSyncListeners;\n  }\n  // this gets called inside the grid's thread, for each event that it\n  // wants to set async. the grid then batches the events into one setTimeout()\n  // because setTimeout() is an expensive operation. ideally we would have\n  // each event in it's own setTimeout(), but we batch for performance.\n  dispatchAsync(func) {\n    this.asyncFunctionsQueue.push(func);\n    if (!this.scheduled) {\n      const flush = () => {\n        window.setTimeout(this.flushAsyncQueue.bind(this), 0);\n      };\n      this.frameworkOverrides ? this.frameworkOverrides.wrapIncoming(flush) : flush();\n      this.scheduled = true;\n    }\n  }\n  // this happens in the next VM turn only, and empties the queue of events\n  flushAsyncQueue() {\n    this.scheduled = false;\n    const queueCopy = this.asyncFunctionsQueue.slice();\n    this.asyncFunctionsQueue = [];\n    queueCopy.forEach(func => func());\n  }\n};\n\n// packages/ag-grid-community/src/misc/locale/localeUtils.ts\nfunction defaultLocaleTextFunc(_key, defaultValue) {\n  return defaultValue;\n}\nfunction _getLocaleTextFunc(localeSvc) {\n  return localeSvc?.getLocaleTextFunc() ?? defaultLocaleTextFunc;\n}\nfunction _translate(bean, localeValues, key, variableValues) {\n  const defaultValue = localeValues[key];\n  return bean.getLocaleTextFunc()(key, typeof defaultValue === \"function\" ? defaultValue(variableValues) : defaultValue, variableValues);\n}\n\n// packages/ag-grid-community/src/utils/generic.ts\nfunction _makeNull(value) {\n  if (value == null || value === \"\") {\n    return null;\n  }\n  return value;\n}\nfunction _exists(value) {\n  return value != null && value !== \"\";\n}\nfunction _missing(value) {\n  return !_exists(value);\n}\nfunction _toStringOrNull(value) {\n  return value != null && typeof value.toString === \"function\" ? value.toString() : null;\n}\nfunction _jsonEquals(val1, val2) {\n  const val1Json = val1 ? JSON.stringify(val1) : null;\n  const val2Json = val2 ? JSON.stringify(val2) : null;\n  return val1Json === val2Json;\n}\nfunction _defaultComparator(valueA, valueB, accentedCompare = false) {\n  const valueAMissing = valueA == null;\n  const valueBMissing = valueB == null;\n  if (valueA && valueA.toNumber) {\n    valueA = valueA.toNumber();\n  }\n  if (valueB && valueB.toNumber) {\n    valueB = valueB.toNumber();\n  }\n  if (valueAMissing && valueBMissing) {\n    return 0;\n  }\n  if (valueAMissing) {\n    return -1;\n  }\n  if (valueBMissing) {\n    return 1;\n  }\n  function doQuickCompare(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n  if (typeof valueA !== \"string\") {\n    return doQuickCompare(valueA, valueB);\n  }\n  if (!accentedCompare) {\n    return doQuickCompare(valueA, valueB);\n  }\n  try {\n    return valueA.localeCompare(valueB);\n  } catch (e) {\n    return doQuickCompare(valueA, valueB);\n  }\n}\n\n// packages/ag-grid-community/src/utils/object.ts\nvar SKIP_JS_BUILTINS = /* @__PURE__ */new Set([\"__proto__\", \"constructor\", \"prototype\"]);\nfunction _iterateObject(object, callback) {\n  if (object == null) {\n    return;\n  }\n  if (Array.isArray(object)) {\n    for (let i = 0; i < object.length; i++) {\n      callback(i.toString(), object[i]);\n    }\n    return;\n  }\n  for (const key of Object.keys(object).filter(key2 => !SKIP_JS_BUILTINS.has(key2))) {\n    callback(key, object[key]);\n  }\n}\nfunction _mergeDeep(dest, source, copyUndefined = true, makeCopyOfSimpleObjects = false) {\n  if (!_exists(source)) {\n    return;\n  }\n  _iterateObject(source, (key, sourceValue) => {\n    let destValue = dest[key];\n    if (destValue === sourceValue) {\n      return;\n    }\n    if (makeCopyOfSimpleObjects) {\n      const objectIsDueToBeCopied = destValue == null && sourceValue != null;\n      if (objectIsDueToBeCopied) {\n        const doNotCopyAsSourceIsSimpleObject = typeof sourceValue === \"object\" && sourceValue.constructor === Object;\n        if (doNotCopyAsSourceIsSimpleObject) {\n          destValue = {};\n          dest[key] = destValue;\n        }\n      }\n    }\n    if (_isNonNullObject(sourceValue) && _isNonNullObject(destValue) && !Array.isArray(destValue)) {\n      _mergeDeep(destValue, sourceValue, copyUndefined, makeCopyOfSimpleObjects);\n    } else if (copyUndefined || sourceValue !== void 0) {\n      dest[key] = sourceValue;\n    }\n  });\n}\nfunction _getValueUsingField(data, field, fieldContainsDots) {\n  if (!field || !data) {\n    return;\n  }\n  if (!fieldContainsDots) {\n    return data[field];\n  }\n  const fields = field.split(\".\");\n  let currentObject = data;\n  for (let i = 0; i < fields.length; i++) {\n    if (currentObject == null) {\n      return void 0;\n    }\n    currentObject = currentObject[fields[i]];\n  }\n  return currentObject;\n}\nfunction _isNonNullObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\n\n// packages/ag-grid-community/src/globalGridOptions.ts\nvar _GlobalGridOptions = /*#__PURE__*/(() => {\n  let _GlobalGridOptions = class _GlobalGridOptions {\n    /**\n     * @param providedOptions\n     * @returns Shallow copy of the provided options with global options merged in.\n     */\n    static applyGlobalGridOptions(providedOptions) {\n      if (!_GlobalGridOptions.gridOptions) {\n        return {\n          ...providedOptions\n        };\n      }\n      let mergedGridOps = {};\n      _mergeDeep(mergedGridOps, _GlobalGridOptions.gridOptions, true, true);\n      if (_GlobalGridOptions.mergeStrategy === \"deep\") {\n        _mergeDeep(mergedGridOps, providedOptions, true, true);\n      } else {\n        mergedGridOps = {\n          ...mergedGridOps,\n          ...providedOptions\n        };\n      }\n      if (_GlobalGridOptions.gridOptions.context) {\n        mergedGridOps.context = _GlobalGridOptions.gridOptions.context;\n      }\n      if (providedOptions.context) {\n        if (_GlobalGridOptions.mergeStrategy === \"deep\" && mergedGridOps.context) {\n          _mergeDeep(providedOptions.context, mergedGridOps.context, true, true);\n        }\n        mergedGridOps.context = providedOptions.context;\n      }\n      return mergedGridOps;\n    }\n  };\n  _GlobalGridOptions.gridOptions = void 0;\n  _GlobalGridOptions.mergeStrategy = \"shallow\";\n  return _GlobalGridOptions;\n})();\nvar GlobalGridOptions = _GlobalGridOptions;\nfunction provideGlobalGridOptions(gridOptions, mergeStrategy = \"shallow\") {\n  GlobalGridOptions.gridOptions = gridOptions;\n  GlobalGridOptions.mergeStrategy = mergeStrategy;\n}\nfunction _getGlobalGridOption(gridOption) {\n  return GlobalGridOptions.gridOptions?.[gridOption];\n}\n\n// packages/ag-grid-community/src/gridOptionsDefault.ts\nvar GRID_OPTION_DEFAULTS = {\n  suppressContextMenu: false,\n  preventDefaultOnContextMenu: false,\n  allowContextMenuWithControlKey: false,\n  suppressMenuHide: true,\n  enableBrowserTooltips: false,\n  tooltipTrigger: \"hover\",\n  tooltipShowDelay: 2e3,\n  tooltipHideDelay: 1e4,\n  tooltipMouseTrack: false,\n  tooltipShowMode: \"standard\",\n  tooltipInteraction: false,\n  copyHeadersToClipboard: false,\n  copyGroupHeadersToClipboard: false,\n  clipboardDelimiter: \"\t\",\n  suppressCopyRowsToClipboard: false,\n  suppressCopySingleCellRanges: false,\n  suppressLastEmptyLineOnPaste: false,\n  suppressClipboardPaste: false,\n  suppressClipboardApi: false,\n  suppressCutToClipboard: false,\n  maintainColumnOrder: false,\n  enableStrictPivotColumnOrder: false,\n  suppressFieldDotNotation: false,\n  allowDragFromColumnsToolPanel: false,\n  suppressMovableColumns: false,\n  suppressColumnMoveAnimation: false,\n  suppressMoveWhenColumnDragging: false,\n  suppressDragLeaveHidesColumns: false,\n  suppressRowGroupHidesColumns: false,\n  suppressAutoSize: false,\n  autoSizePadding: 20,\n  skipHeaderOnAutoSize: false,\n  singleClickEdit: false,\n  suppressClickEdit: false,\n  readOnlyEdit: false,\n  stopEditingWhenCellsLoseFocus: false,\n  enterNavigatesVertically: false,\n  enterNavigatesVerticallyAfterEdit: false,\n  enableCellEditingOnBackspace: false,\n  undoRedoCellEditing: false,\n  undoRedoCellEditingLimit: 10,\n  suppressCsvExport: false,\n  suppressExcelExport: false,\n  cacheQuickFilter: false,\n  includeHiddenColumnsInQuickFilter: false,\n  excludeChildrenWhenTreeDataFiltering: false,\n  enableAdvancedFilter: false,\n  includeHiddenColumnsInAdvancedFilter: false,\n  enableCharts: false,\n  masterDetail: false,\n  keepDetailRows: false,\n  keepDetailRowsCount: 10,\n  detailRowAutoHeight: false,\n  tabIndex: 0,\n  rowBuffer: 10,\n  valueCache: false,\n  valueCacheNeverExpires: false,\n  enableCellExpressions: false,\n  suppressTouch: false,\n  suppressFocusAfterRefresh: false,\n  suppressBrowserResizeObserver: false,\n  suppressPropertyNamesCheck: false,\n  suppressChangeDetection: false,\n  debug: false,\n  suppressLoadingOverlay: false,\n  suppressNoRowsOverlay: false,\n  pagination: false,\n  paginationPageSize: 100,\n  paginationPageSizeSelector: true,\n  paginationAutoPageSize: false,\n  paginateChildRows: false,\n  suppressPaginationPanel: false,\n  pivotMode: false,\n  pivotPanelShow: \"never\",\n  pivotDefaultExpanded: 0,\n  pivotSuppressAutoColumn: false,\n  suppressExpandablePivotGroups: false,\n  functionsReadOnly: false,\n  suppressAggFuncInHeader: false,\n  alwaysAggregateAtRootLevel: false,\n  aggregateOnlyChangedColumns: false,\n  suppressAggFilteredOnly: false,\n  removePivotHeaderRowWhenSingleValueColumn: false,\n  animateRows: true,\n  cellFlashDuration: 500,\n  cellFadeDuration: 1e3,\n  allowShowChangeAfterFilter: false,\n  domLayout: \"normal\",\n  ensureDomOrder: false,\n  enableRtl: false,\n  suppressColumnVirtualisation: false,\n  suppressMaxRenderedRowRestriction: false,\n  suppressRowVirtualisation: false,\n  rowDragManaged: false,\n  rowDragInsertDelay: 500,\n  suppressRowDrag: false,\n  suppressMoveWhenRowDragging: false,\n  rowDragEntireRow: false,\n  rowDragMultiRow: false,\n  embedFullWidthRows: false,\n  groupDisplayType: \"singleColumn\",\n  groupDefaultExpanded: 0,\n  groupMaintainOrder: false,\n  groupSelectsChildren: false,\n  groupSuppressBlankHeader: false,\n  groupSelectsFiltered: false,\n  showOpenedGroup: false,\n  groupRemoveSingleChildren: false,\n  groupRemoveLowestSingleChildren: false,\n  groupHideOpenParents: false,\n  groupAllowUnbalanced: false,\n  rowGroupPanelShow: \"never\",\n  suppressMakeColumnVisibleAfterUnGroup: false,\n  treeData: false,\n  rowGroupPanelSuppressSort: false,\n  suppressGroupRowsSticky: false,\n  rowModelType: \"clientSide\",\n  asyncTransactionWaitMillis: 50,\n  suppressModelUpdateAfterUpdateTransaction: false,\n  cacheOverflowSize: 1,\n  infiniteInitialRowCount: 1,\n  serverSideInitialRowCount: 1,\n  cacheBlockSize: 100,\n  maxBlocksInCache: -1,\n  maxConcurrentDatasourceRequests: 2,\n  blockLoadDebounceMillis: 0,\n  purgeClosedRowNodes: false,\n  serverSideSortAllLevels: false,\n  serverSideOnlyRefreshFilteredGroups: false,\n  serverSidePivotResultFieldSeparator: \"_\",\n  viewportRowModelPageSize: 5,\n  viewportRowModelBufferSize: 5,\n  alwaysShowHorizontalScroll: false,\n  alwaysShowVerticalScroll: false,\n  debounceVerticalScrollbar: false,\n  suppressHorizontalScroll: false,\n  suppressScrollOnNewData: false,\n  suppressScrollWhenPopupsAreOpen: false,\n  suppressAnimationFrame: false,\n  suppressMiddleClickScrolls: false,\n  suppressPreventDefaultOnMouseWheel: false,\n  rowMultiSelectWithClick: false,\n  suppressRowDeselection: false,\n  suppressRowClickSelection: false,\n  suppressCellFocus: false,\n  suppressHeaderFocus: false,\n  suppressMultiRangeSelection: false,\n  enableCellTextSelection: false,\n  enableRangeSelection: false,\n  enableRangeHandle: false,\n  enableFillHandle: false,\n  fillHandleDirection: \"xy\",\n  suppressClearOnFillReduction: false,\n  accentedSort: false,\n  unSortIcon: false,\n  suppressMultiSort: false,\n  alwaysMultiSort: false,\n  suppressMaintainUnsortedOrder: false,\n  suppressRowHoverHighlight: false,\n  suppressRowTransform: false,\n  columnHoverHighlight: false,\n  deltaSort: false,\n  enableGroupEdit: false,\n  groupLockGroupColumns: 0,\n  serverSideEnableClientSideSort: false,\n  suppressServerSideFullWidthLoadingRow: false,\n  pivotMaxGeneratedColumns: -1,\n  columnMenu: \"new\",\n  reactiveCustomComponents: true,\n  suppressSetFilterByDefault: false,\n  rowNumbers: false,\n  enableFilterHandlers: false\n};\n\n// packages/ag-grid-community/src/utils/aria.ts\nfunction _toggleAriaAttribute(element, attribute, value) {\n  if (value == null || typeof value === \"string\" && value == \"\") {\n    _removeAriaAttribute(element, attribute);\n  } else {\n    _setAriaAttribute(element, attribute, value);\n  }\n}\nfunction _setAriaAttribute(element, attribute, value) {\n  element.setAttribute(_ariaAttributeName(attribute), value.toString());\n}\nfunction _removeAriaAttribute(element, attribute) {\n  element.removeAttribute(_ariaAttributeName(attribute));\n}\nfunction _ariaAttributeName(attribute) {\n  return `aria-${attribute}`;\n}\nfunction _setAriaRole(element, role) {\n  if (role) {\n    element.setAttribute(\"role\", role);\n  } else {\n    element.removeAttribute(\"role\");\n  }\n}\nfunction _getAriaSortState(sortDirection) {\n  let sort;\n  if (sortDirection === \"asc\") {\n    sort = \"ascending\";\n  } else if (sortDirection === \"desc\") {\n    sort = \"descending\";\n  } else if (sortDirection === \"mixed\") {\n    sort = \"other\";\n  } else {\n    sort = \"none\";\n  }\n  return sort;\n}\nfunction _getAriaPosInSet(element) {\n  return parseInt(element.getAttribute(\"aria-posinset\"), 10);\n}\nfunction _getAriaLabel(element) {\n  return element.getAttribute(\"aria-label\");\n}\nfunction _setAriaLabel(element, label) {\n  _toggleAriaAttribute(element, \"label\", label);\n}\nfunction _setAriaLabelledBy(element, labelledBy) {\n  _toggleAriaAttribute(element, \"labelledby\", labelledBy);\n}\nfunction _setAriaDescribedBy(element, describedby) {\n  _toggleAriaAttribute(element, \"describedby\", describedby);\n}\nfunction _setAriaLive(element, live) {\n  _toggleAriaAttribute(element, \"live\", live);\n}\nfunction _setAriaAtomic(element, atomic) {\n  _toggleAriaAttribute(element, \"atomic\", atomic);\n}\nfunction _setAriaRelevant(element, relevant) {\n  _toggleAriaAttribute(element, \"relevant\", relevant);\n}\nfunction _setAriaInvalid(element, invalid) {\n  _toggleAriaAttribute(element, \"invalid\", invalid);\n}\nfunction _setAriaLevel(element, level) {\n  _toggleAriaAttribute(element, \"level\", level);\n}\nfunction _setAriaDisabled(element, disabled) {\n  _toggleAriaAttribute(element, \"disabled\", disabled);\n}\nfunction _setAriaHidden(element, hidden) {\n  _toggleAriaAttribute(element, \"hidden\", hidden);\n}\nfunction _setAriaActiveDescendant(element, descendantId) {\n  _toggleAriaAttribute(element, \"activedescendant\", descendantId);\n}\nfunction _setAriaExpanded(element, expanded) {\n  _setAriaAttribute(element, \"expanded\", expanded);\n}\nfunction _removeAriaExpanded(element) {\n  _removeAriaAttribute(element, \"expanded\");\n}\nfunction _setAriaSetSize(element, setsize) {\n  _setAriaAttribute(element, \"setsize\", setsize);\n}\nfunction _setAriaPosInSet(element, position) {\n  _setAriaAttribute(element, \"posinset\", position);\n}\nfunction _setAriaMultiSelectable(element, multiSelectable) {\n  _setAriaAttribute(element, \"multiselectable\", multiSelectable);\n}\nfunction _setAriaRowCount(element, rowCount) {\n  _setAriaAttribute(element, \"rowcount\", rowCount);\n}\nfunction _setAriaRowIndex(element, rowIndex) {\n  _setAriaAttribute(element, \"rowindex\", rowIndex);\n}\nfunction _setAriaRowSpan(element, spanCount) {\n  _setAriaAttribute(element, \"rowspan\", spanCount);\n}\nfunction _setAriaColCount(element, colCount) {\n  _setAriaAttribute(element, \"colcount\", colCount);\n}\nfunction _setAriaColIndex(element, colIndex) {\n  _setAriaAttribute(element, \"colindex\", colIndex);\n}\nfunction _setAriaColSpan(element, colSpan) {\n  _setAriaAttribute(element, \"colspan\", colSpan);\n}\nfunction _setAriaSort(element, sort) {\n  _setAriaAttribute(element, \"sort\", sort);\n}\nfunction _removeAriaSort(element) {\n  _removeAriaAttribute(element, \"sort\");\n}\nfunction _setAriaSelected(element, selected) {\n  _toggleAriaAttribute(element, \"selected\", selected);\n}\nfunction _setAriaChecked(element, checked) {\n  _setAriaAttribute(element, \"checked\", checked === void 0 ? \"mixed\" : checked);\n}\nfunction _setAriaControls(controllerElement, controlledId) {\n  _toggleAriaAttribute(controllerElement, \"controls\", controlledId);\n}\nfunction _setAriaControlsAndLabel(controllerElement, controlledElement) {\n  _setAriaControls(controllerElement, controlledElement.id);\n  _setAriaLabelledBy(controlledElement, controllerElement.id);\n}\nfunction _setAriaOwns(ownerElement, ownedId) {\n  _toggleAriaAttribute(ownerElement, \"owns\", ownedId);\n}\nfunction _setAriaHasPopup(element, hasPopup) {\n  _toggleAriaAttribute(element, \"haspopup\", hasPopup === false ? null : hasPopup);\n}\nfunction _getAriaCheckboxStateName(translate, state) {\n  return state === void 0 ? translate(\"ariaIndeterminate\", \"indeterminate\") : state === true ? translate(\"ariaChecked\", \"checked\") : translate(\"ariaUnchecked\", \"unchecked\");\n}\n\n// packages/ag-grid-community/src/utils/browser.ts\nvar isSafari;\nvar isFirefox;\nvar isMacOs;\nvar isIOS;\nvar invisibleScrollbar;\nvar browserScrollbarWidth;\nvar maxDivHeight;\nfunction _isBrowserSafari() {\n  if (isSafari === void 0) {\n    isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  }\n  return isSafari;\n}\nfunction _isBrowserFirefox() {\n  if (isFirefox === void 0) {\n    isFirefox = /(firefox)/i.test(navigator.userAgent);\n  }\n  return isFirefox;\n}\nfunction _isMacOsUserAgent() {\n  if (isMacOs === void 0) {\n    isMacOs = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n  }\n  return isMacOs;\n}\nfunction _isIOSUserAgent() {\n  if (isIOS === void 0) {\n    isIOS = /iPad|iPhone|iPod/.test(navigator.platform) || navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\n  }\n  return isIOS;\n}\nfunction _getTabIndex(el) {\n  if (!el) {\n    return null;\n  }\n  const numberTabIndex = el.tabIndex;\n  const tabIndex = el.getAttribute(\"tabIndex\");\n  if (numberTabIndex === -1 && (tabIndex === null || tabIndex === \"\" && !_isBrowserFirefox())) {\n    return null;\n  }\n  return numberTabIndex.toString();\n}\nfunction _getMaxDivHeight() {\n  if (maxDivHeight !== void 0) {\n    return maxDivHeight;\n  }\n  if (!document.body) {\n    return -1;\n  }\n  let res = 1e6;\n  const testUpTo = _isBrowserFirefox() ? 6e6 : 1e9;\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  while (true) {\n    const test = res * 2;\n    div.style.height = test + \"px\";\n    if (test > testUpTo || div.clientHeight !== test) {\n      break;\n    } else {\n      res = test;\n    }\n  }\n  document.body.removeChild(div);\n  maxDivHeight = res;\n  return res;\n}\nfunction _getScrollbarWidth() {\n  if (browserScrollbarWidth == null) {\n    initScrollbarWidthAndVisibility();\n  }\n  return browserScrollbarWidth;\n}\nfunction initScrollbarWidthAndVisibility() {\n  const body = document.body;\n  const div = document.createElement(\"div\");\n  div.style.width = div.style.height = \"100px\";\n  div.style.opacity = \"0\";\n  div.style.overflow = \"scroll\";\n  div.style.msOverflowStyle = \"scrollbar\";\n  div.style.position = \"absolute\";\n  body.appendChild(div);\n  let width = div.offsetWidth - div.clientWidth;\n  if (width === 0 && div.clientWidth === 0) {\n    width = null;\n  }\n  if (div.parentNode) {\n    div.parentNode.removeChild(div);\n  }\n  if (width != null) {\n    browserScrollbarWidth = width;\n    invisibleScrollbar = width === 0;\n  }\n}\nfunction _isInvisibleScrollbar() {\n  if (invisibleScrollbar == null) {\n    initScrollbarWidthAndVisibility();\n  }\n  return invisibleScrollbar;\n}\n\n// packages/ag-grid-community/src/utils/dom.ts\nfunction _radioCssClass(element, elementClass, otherElementClass) {\n  const parent = element.parentElement;\n  let sibling = parent && parent.firstChild;\n  while (sibling) {\n    if (elementClass) {\n      sibling.classList.toggle(elementClass, sibling === element);\n    }\n    if (otherElementClass) {\n      sibling.classList.toggle(otherElementClass, sibling !== element);\n    }\n    sibling = sibling.nextSibling;\n  }\n}\nvar FOCUSABLE_SELECTOR = \"[tabindex], input, select, button, textarea, [href]\";\nvar FOCUSABLE_EXCLUDE = \"[disabled], .ag-disabled:not(.ag-button), .ag-disabled *\";\nfunction _isFocusableFormField(element) {\n  const matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n  const inputSelector = \"input, select, button, textarea\";\n  const isFocusable = matches.call(element, inputSelector);\n  const isNotFocusable = matches.call(element, FOCUSABLE_EXCLUDE);\n  const isElementVisible = _isVisible(element);\n  const focusable = isFocusable && !isNotFocusable && isElementVisible;\n  return focusable;\n}\nfunction _setDisplayed(element, displayed, options = {}) {\n  const {\n    skipAriaHidden\n  } = options;\n  element.classList.toggle(\"ag-hidden\", !displayed);\n  if (!skipAriaHidden) {\n    _setAriaHidden(element, !displayed);\n  }\n}\nfunction _setVisible(element, visible, options = {}) {\n  const {\n    skipAriaHidden\n  } = options;\n  element.classList.toggle(\"ag-invisible\", !visible);\n  if (!skipAriaHidden) {\n    _setAriaHidden(element, !visible);\n  }\n}\nfunction _setDisabled(element, disabled) {\n  const attributeName = \"disabled\";\n  const addOrRemoveDisabledAttribute = disabled ? e => e.setAttribute(attributeName, \"\") : e => e.removeAttribute(attributeName);\n  addOrRemoveDisabledAttribute(element);\n  const inputs = element.querySelectorAll(\"input\") ?? [];\n  for (const input of inputs) {\n    addOrRemoveDisabledAttribute(input);\n  }\n}\nfunction _isElementChildOfClass(element, cls, maxNest) {\n  let counter = 0;\n  while (element) {\n    if (element.classList.contains(cls)) {\n      return true;\n    }\n    element = element.parentElement;\n    if (typeof maxNest == \"number\") {\n      if (++counter > maxNest) {\n        break;\n      }\n    } else if (element === maxNest) {\n      break;\n    }\n  }\n  return false;\n}\nfunction _getElementSize(el) {\n  const {\n    height,\n    width,\n    borderTopWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderLeftWidth,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    boxSizing\n  } = window.getComputedStyle(el);\n  return {\n    height: parseFloat(height || \"0\"),\n    width: parseFloat(width || \"0\"),\n    borderTopWidth: parseFloat(borderTopWidth || \"0\"),\n    borderRightWidth: parseFloat(borderRightWidth || \"0\"),\n    borderBottomWidth: parseFloat(borderBottomWidth || \"0\"),\n    borderLeftWidth: parseFloat(borderLeftWidth || \"0\"),\n    paddingTop: parseFloat(paddingTop || \"0\"),\n    paddingRight: parseFloat(paddingRight || \"0\"),\n    paddingBottom: parseFloat(paddingBottom || \"0\"),\n    paddingLeft: parseFloat(paddingLeft || \"0\"),\n    marginTop: parseFloat(marginTop || \"0\"),\n    marginRight: parseFloat(marginRight || \"0\"),\n    marginBottom: parseFloat(marginBottom || \"0\"),\n    marginLeft: parseFloat(marginLeft || \"0\"),\n    boxSizing\n  };\n}\nfunction _getInnerHeight(el) {\n  const size = _getElementSize(el);\n  if (size.boxSizing === \"border-box\") {\n    return size.height - size.paddingTop - size.paddingBottom;\n  }\n  return size.height;\n}\nfunction _getInnerWidth(el) {\n  const size = _getElementSize(el);\n  if (size.boxSizing === \"border-box\") {\n    return size.width - size.paddingLeft - size.paddingRight;\n  }\n  return size.width;\n}\nfunction _getAbsoluteHeight(el) {\n  const {\n    height,\n    marginBottom,\n    marginTop\n  } = _getElementSize(el);\n  return Math.floor(height + marginBottom + marginTop);\n}\nfunction _getAbsoluteWidth(el) {\n  const {\n    width,\n    marginLeft,\n    marginRight\n  } = _getElementSize(el);\n  return Math.floor(width + marginLeft + marginRight);\n}\nfunction _getElementRectWithOffset(el) {\n  const offsetElementRect = el.getBoundingClientRect();\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth\n  } = _getElementSize(el);\n  return {\n    top: offsetElementRect.top + (borderTopWidth || 0),\n    left: offsetElementRect.left + (borderLeftWidth || 0),\n    right: offsetElementRect.right + (borderRightWidth || 0),\n    bottom: offsetElementRect.bottom + (borderBottomWidth || 0)\n  };\n}\nfunction _getScrollLeft(element, rtl) {\n  let scrollLeft = element.scrollLeft;\n  if (rtl) {\n    scrollLeft = Math.abs(scrollLeft);\n  }\n  return scrollLeft;\n}\nfunction _setScrollLeft(element, value, rtl) {\n  if (rtl) {\n    value *= -1;\n  }\n  element.scrollLeft = value;\n}\nfunction _clearElement(el) {\n  while (el && el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n}\nfunction _removeFromParent(node) {\n  if (node && node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n}\nfunction _isInDOM(element) {\n  return !!element.offsetParent;\n}\nfunction _isVisible(element) {\n  const el = element;\n  if (el.checkVisibility) {\n    return el.checkVisibility({\n      checkVisibilityCSS: true\n    });\n  }\n  const isHidden = !_isInDOM(element) || window.getComputedStyle(element).visibility !== \"visible\";\n  return !isHidden;\n}\nfunction _loadTemplate(template) {\n  const tempDiv = document.createElement(\"div\");\n  tempDiv.innerHTML = (template || \"\").trim();\n  return tempDiv.firstChild;\n}\nfunction _ensureDomOrder(eContainer, eChild, eChildBefore) {\n  if (eChildBefore && eChildBefore.nextSibling === eChild) {\n    return;\n  }\n  if (!eContainer.firstChild) {\n    eContainer.appendChild(eChild);\n  } else if (eChildBefore) {\n    if (eChildBefore.nextSibling) {\n      eContainer.insertBefore(eChild, eChildBefore.nextSibling);\n    } else {\n      eContainer.appendChild(eChild);\n    }\n  } else if (eContainer.firstChild && eContainer.firstChild !== eChild) {\n    eContainer.insertAdjacentElement(\"afterbegin\", eChild);\n  }\n}\nfunction _setDomChildOrder(eContainer, orderedChildren) {\n  for (let i = 0; i < orderedChildren.length; i++) {\n    const correctCellAtIndex = orderedChildren[i];\n    const actualCellAtIndex = eContainer.children[i];\n    if (actualCellAtIndex !== correctCellAtIndex) {\n      eContainer.insertBefore(correctCellAtIndex, actualCellAtIndex);\n    }\n  }\n}\nfunction _camelCaseToHyphenated(camelCase) {\n  return camelCase.replace(/[A-Z]/g, s => `-${s.toLocaleLowerCase()}`);\n}\nfunction _addStylesToElement(eElement, styles) {\n  if (!styles) {\n    return;\n  }\n  for (const key of Object.keys(styles)) {\n    const value = styles[key];\n    if (!key || !key.length || value == null) {\n      continue;\n    }\n    const parsedKey = _camelCaseToHyphenated(key);\n    const valueAsString = value.toString();\n    const parsedValue = valueAsString.replace(/\\s*!important/g, \"\");\n    const priority = parsedValue.length != valueAsString.length ? \"important\" : void 0;\n    eElement.style.setProperty(parsedKey, parsedValue, priority);\n  }\n}\nfunction _isElementOverflowingCallback(getElement2) {\n  return () => {\n    const element = getElement2();\n    if (!element) {\n      return true;\n    }\n    return _isHorizontalScrollShowing(element) || _isVerticalScrollShowing(element);\n  };\n}\nfunction _isHorizontalScrollShowing(element) {\n  return element.clientWidth < element.scrollWidth;\n}\nfunction _isVerticalScrollShowing(element) {\n  return element.clientHeight < element.scrollHeight;\n}\nfunction _setElementWidth(element, width) {\n  if (width === \"flex\") {\n    element.style.removeProperty(\"width\");\n    element.style.removeProperty(\"minWidth\");\n    element.style.removeProperty(\"maxWidth\");\n    element.style.flex = \"1 1 auto\";\n  } else {\n    _setFixedWidth(element, width);\n  }\n}\nfunction _setFixedWidth(element, width) {\n  width = _formatSize(width);\n  element.style.width = width;\n  element.style.maxWidth = width;\n  element.style.minWidth = width;\n}\nfunction _setFixedHeight(element, height) {\n  height = _formatSize(height);\n  element.style.height = height;\n  element.style.maxHeight = height;\n  element.style.minHeight = height;\n}\nfunction _formatSize(size) {\n  return typeof size === \"number\" ? `${size}px` : size;\n}\nfunction _isNodeOrElement(o) {\n  return o instanceof Node || o instanceof HTMLElement;\n}\nfunction _addOrRemoveAttribute(element, name, value) {\n  if (value == null || value === \"\") {\n    element.removeAttribute(name);\n  } else {\n    element.setAttribute(name, value.toString());\n  }\n}\nfunction _observeResize(beans, element, callback) {\n  const win = _getWindow(beans);\n  const ResizeObserverImpl = win.ResizeObserver;\n  const resizeObserver = ResizeObserverImpl ? new ResizeObserverImpl(callback) : null;\n  resizeObserver?.observe(element);\n  return () => resizeObserver?.disconnect();\n}\nfunction _getTextSelectionRanges(beans) {\n  const rootNode = _getRootNode(beans);\n  const selection = \"getSelection\" in rootNode ? rootNode.getSelection() : null;\n  const ranges = [];\n  for (let i = 0; i < (selection?.rangeCount ?? 0); i++) {\n    const range = selection?.getRangeAt(i);\n    if (range) {\n      ranges.push(range);\n    }\n  }\n  return {\n    selection,\n    ranges\n  };\n}\nfunction _preserveRangesWhile(beans, fn) {\n  const enableCellTextSelection = beans.gos.get(\"enableCellTextSelection\");\n  if (!enableCellTextSelection) {\n    return fn();\n  }\n  if (!_isBrowserFirefox() && !_isBrowserSafari()) {\n    return fn();\n  }\n  const {\n    selection,\n    ranges\n  } = _getTextSelectionRanges(beans);\n  fn();\n  selection?.removeAllRanges();\n  for (const range of ranges) {\n    selection?.addRange(range);\n  }\n}\nfunction _requestAnimationFrame(beans, callback) {\n  const win = _getWindow(beans);\n  if (win.requestAnimationFrame) {\n    win.requestAnimationFrame(callback);\n  } else if (win.webkitRequestAnimationFrame) {\n    win.webkitRequestAnimationFrame(callback);\n  } else {\n    win.setTimeout(callback, 0);\n  }\n}\nvar DataRefAttribute = \"data-ref\";\nvar whitespaceNode;\nfunction getWhitespaceNode() {\n  whitespaceNode ?? (whitespaceNode = document.createTextNode(\" \"));\n  return whitespaceNode.cloneNode();\n}\nfunction _createElement(params) {\n  const {\n    attrs,\n    children,\n    cls,\n    ref,\n    role,\n    tag\n  } = params;\n  const element = document.createElement(tag);\n  if (cls) {\n    element.className = cls;\n  }\n  if (ref) {\n    element.setAttribute(DataRefAttribute, ref);\n  }\n  if (role) {\n    element.setAttribute(\"role\", role);\n  }\n  if (attrs) {\n    for (const key of Object.keys(attrs)) {\n      element.setAttribute(key, attrs[key]);\n    }\n  }\n  if (children) {\n    if (typeof children === \"string\") {\n      element.textContent = children;\n    } else {\n      let addFirstWhitespace = true;\n      for (const child of children) {\n        if (child) {\n          if (typeof child === \"string\") {\n            element.appendChild(document.createTextNode(child));\n            addFirstWhitespace = false;\n          } else if (typeof child === \"function\") {\n            element.appendChild(child());\n          } else {\n            if (addFirstWhitespace) {\n              element.appendChild(getWhitespaceNode());\n              addFirstWhitespace = false;\n            }\n            element.append(_createElement(child));\n            element.appendChild(getWhitespaceNode());\n          }\n        }\n      }\n    }\n  }\n  return element;\n}\n\n// packages/ag-grid-community/src/utils/function.ts\nvar doOnceFlags = {};\nfunction _doOnce(func, key) {\n  if (doOnceFlags[key]) {\n    return;\n  }\n  func();\n  doOnceFlags[key] = true;\n}\nfunction _logIfDebug(gos, message, ...args) {\n  if (gos.get(\"debug\")) {\n    console.log(\"AG Grid: \" + message, ...args);\n  }\n}\nfunction _warnOnce(msg, ...args) {\n  _doOnce(() => console.warn(\"AG Grid: \" + msg, ...args), msg + args?.join(\"\"));\n}\nfunction _errorOnce(msg, ...args) {\n  _doOnce(() => console.error(\"AG Grid: \" + msg, ...args), msg + args?.join(\"\"));\n}\nvar batchedCallsSetTimeout = {\n  pending: false,\n  funcs: []\n};\nvar batchedCallsRaf = {\n  pending: false,\n  funcs: []\n};\nfunction _batchCall(func, mode = \"setTimeout\", beans) {\n  const batch = mode === \"raf\" ? batchedCallsRaf : batchedCallsSetTimeout;\n  batch.funcs.push(func);\n  if (batch.pending) {\n    return;\n  }\n  batch.pending = true;\n  const runBatch = () => {\n    const funcsCopy = batch.funcs.slice();\n    batch.funcs.length = 0;\n    batch.pending = false;\n    funcsCopy.forEach(func2 => func2());\n  };\n  if (mode === \"raf\") {\n    _requestAnimationFrame(beans, runBatch);\n  } else {\n    window.setTimeout(runBatch, 0);\n  }\n}\nfunction _debounce(bean, func, delay) {\n  let timeout;\n  return function (...args) {\n    const context = this;\n    window.clearTimeout(timeout);\n    timeout = window.setTimeout(function () {\n      if (bean.isAlive()) {\n        func.apply(context, args);\n      }\n    }, delay);\n  };\n}\nfunction _throttle(func, wait) {\n  let previousCall = 0;\n  return function (...args) {\n    const context = this;\n    const currentCall = Date.now();\n    if (currentCall - previousCall < wait) {\n      return;\n    }\n    previousCall = currentCall;\n    func.apply(context, args);\n  };\n}\nfunction _waitUntil(condition, callback, timeout = 100, timeoutMessage) {\n  const timeStamp = Date.now();\n  let interval = null;\n  let executed = false;\n  const internalCallback = () => {\n    const reachedTimeout = Date.now() - timeStamp > timeout;\n    if (condition() || reachedTimeout) {\n      callback();\n      executed = true;\n      if (interval != null) {\n        window.clearInterval(interval);\n        interval = null;\n      }\n      if (reachedTimeout && timeoutMessage) {\n        _warnOnce(timeoutMessage);\n      }\n    }\n  };\n  internalCallback();\n  if (!executed) {\n    interval = window.setInterval(internalCallback, 10);\n  }\n}\n\n// packages/ag-grid-community/src/baseUrl.ts\nvar BASE_URL = \"https://www.ag-grid.com\";\n\n// packages/ag-grid-community/src/version.ts\nvar VERSION = \"34.1.1\";\n\n// packages/ag-grid-community/src/validation/logging.ts\nvar MAX_URL_LENGTH = 2e3;\nvar MIN_PARAM_LENGTH = 100;\nvar VERSION_PARAM_NAME = \"_version_\";\nvar validation = null;\nvar baseDocLink = `${BASE_URL}/javascript-data-grid`;\nfunction provideValidationServiceLogger(logger) {\n  validation = logger;\n}\nfunction setValidationDocLink(docLink) {\n  baseDocLink = docLink;\n}\nfunction getErrorParts(id, args, defaultMessage) {\n  return validation?.getConsoleMessage(id, args) ?? [minifiedLog(id, args, defaultMessage)];\n}\nfunction getMsgOrDefault(logger, id, args, defaultMessage) {\n  logger(`error #${id}`, ...getErrorParts(id, args, defaultMessage));\n}\nfunction stringifyObject(inputObj) {\n  if (!inputObj) return String(inputObj);\n  const object = {};\n  for (const prop of Object.keys(inputObj)) {\n    if (typeof inputObj[prop] !== \"object\" && typeof inputObj[prop] !== \"function\") {\n      object[prop] = inputObj[prop];\n    }\n  }\n  return JSON.stringify(object);\n}\nfunction stringifyValue(value) {\n  let output = value;\n  if (value instanceof Error) {\n    output = value.toString();\n  } else if (typeof value === \"object\") {\n    output = stringifyObject(value);\n  }\n  return output;\n}\nfunction toStringWithNullUndefined(str) {\n  return str === void 0 ? \"undefined\" : str === null ? \"null\" : str;\n}\nfunction getParamsUrl(baseUrl, params) {\n  return `${baseUrl}?${params.toString()}`;\n}\nfunction truncateUrl(baseUrl, params, maxLength) {\n  const sortedParams = Array.from(params.entries()).sort((a, b) => b[1].length - a[1].length);\n  let url = getParamsUrl(baseUrl, params);\n  for (const [key, value] of sortedParams) {\n    if (key === VERSION_PARAM_NAME) {\n      continue;\n    }\n    const excessLength = url.length - maxLength;\n    if (excessLength <= 0) {\n      break;\n    }\n    const ellipse = \"...\";\n    const truncateAmount = excessLength + ellipse.length;\n    const truncatedValue = value.length - truncateAmount > MIN_PARAM_LENGTH ? value.slice(0, value.length - truncateAmount) + ellipse : value.slice(0, MIN_PARAM_LENGTH) + ellipse;\n    params.set(key, truncatedValue);\n    url = getParamsUrl(baseUrl, params);\n  }\n  return url;\n}\nfunction getErrorLink(errorNum, args) {\n  const params = new URLSearchParams();\n  params.append(VERSION_PARAM_NAME, VERSION);\n  if (args) {\n    for (const key of Object.keys(args)) {\n      params.append(key, stringifyValue(args[key]));\n    }\n  }\n  const baseUrl = `${baseDocLink}/errors/${errorNum}`;\n  const url = getParamsUrl(baseUrl, params);\n  return url.length <= MAX_URL_LENGTH ? url : truncateUrl(baseUrl, params, MAX_URL_LENGTH);\n}\nvar minifiedLog = (errorNum, args, defaultMessage) => {\n  const errorLink = getErrorLink(errorNum, args);\n  return `${defaultMessage ? defaultMessage + \" \\n\" : \"\"}Visit ${errorLink}${defaultMessage ? \"\" : \" \\n  Alternatively register the ValidationModule to see the full message in the console.\"}`;\n};\nfunction _warn(...args) {\n  getMsgOrDefault(_warnOnce, args[0], args[1]);\n}\nfunction _error(...args) {\n  getMsgOrDefault(_errorOnce, args[0], args[1]);\n}\nfunction _logPreInitErr(id, args, defaultMessage) {\n  getMsgOrDefault(_errorOnce, id, args, defaultMessage);\n}\nfunction getErrMsg(defaultMessage, args) {\n  const id = args[0];\n  return `error #${id} ` + getErrorParts(id, args[1], defaultMessage).join(\" \");\n}\nfunction _errMsg(...args) {\n  return getErrMsg(void 0, args);\n}\nfunction _preInitErrMsg(...args) {\n  return getErrMsg(\"\\n\", args);\n}\n\n// packages/ag-grid-community/src/gridOptionsUtils.ts\nfunction isRowModelType(gos, rowModelType) {\n  return gos.get(\"rowModelType\") === rowModelType;\n}\nfunction _isClientSideRowModel(gos, rowModel) {\n  return isRowModelType(gos, \"clientSide\");\n}\nfunction _isServerSideRowModel(gos, rowModel) {\n  return isRowModelType(gos, \"serverSide\");\n}\nfunction _isDomLayout(gos, domLayout) {\n  return gos.get(\"domLayout\") === domLayout;\n}\nfunction _isRowSelection(gos) {\n  return _getRowSelectionMode(gos) !== void 0;\n}\nfunction _isGetRowHeightFunction(gos) {\n  return typeof gos.get(\"getRowHeight\") === \"function\";\n}\nfunction _shouldMaintainColumnOrder(gos, isPivotColumns) {\n  if (isPivotColumns) {\n    return !gos.get(\"enableStrictPivotColumnOrder\");\n  }\n  return gos.get(\"maintainColumnOrder\");\n}\nfunction _getRowHeightForNode(beans, rowNode, allowEstimate = false, defaultRowHeight) {\n  const {\n    gos,\n    environment\n  } = beans;\n  if (defaultRowHeight == null) {\n    defaultRowHeight = environment.getDefaultRowHeight();\n  }\n  if (_isGetRowHeightFunction(gos)) {\n    if (allowEstimate) {\n      return {\n        height: defaultRowHeight,\n        estimated: true\n      };\n    }\n    const params = {\n      node: rowNode,\n      data: rowNode.data\n    };\n    const height = gos.getCallback(\"getRowHeight\")(params);\n    if (isNumeric(height)) {\n      if (height === 0) {\n        _warn(23);\n      }\n      return {\n        height: Math.max(1, height),\n        estimated: false\n      };\n    }\n  }\n  if (rowNode.detail && gos.get(\"masterDetail\")) {\n    return getMasterDetailRowHeight(gos);\n  }\n  const gridOptionsRowHeight = gos.get(\"rowHeight\");\n  const rowHeight = gridOptionsRowHeight && isNumeric(gridOptionsRowHeight) ? gridOptionsRowHeight : defaultRowHeight;\n  return {\n    height: rowHeight,\n    estimated: false\n  };\n}\nfunction getMasterDetailRowHeight(gos) {\n  if (gos.get(\"detailRowAutoHeight\")) {\n    return {\n      height: 1,\n      estimated: false\n    };\n  }\n  const defaultRowHeight = gos.get(\"detailRowHeight\");\n  if (isNumeric(defaultRowHeight)) {\n    return {\n      height: defaultRowHeight,\n      estimated: false\n    };\n  }\n  return {\n    height: 300,\n    estimated: false\n  };\n}\nfunction _getRowHeightAsNumber(beans) {\n  const {\n    environment,\n    gos\n  } = beans;\n  const gridOptionsRowHeight = gos.get(\"rowHeight\");\n  if (!gridOptionsRowHeight || _missing(gridOptionsRowHeight)) {\n    return environment.getDefaultRowHeight();\n  }\n  const rowHeight = environment.refreshRowHeightVariable();\n  if (rowHeight !== -1) {\n    return rowHeight;\n  }\n  _warn(24);\n  return environment.getDefaultRowHeight();\n}\nfunction isNumeric(value) {\n  return !isNaN(value) && typeof value === \"number\" && isFinite(value);\n}\nfunction _getDomData(gos, element, key) {\n  const domData = element[gos.getDomDataKey()];\n  return domData ? domData[key] : void 0;\n}\nfunction _setDomData(gos, element, key, value) {\n  const domDataKey = gos.getDomDataKey();\n  let domData = element[domDataKey];\n  if (_missing(domData)) {\n    domData = {};\n    element[domDataKey] = domData;\n  }\n  domData[key] = value;\n}\nfunction _getDocument(beans) {\n  const {\n    gos,\n    eGridDiv\n  } = beans;\n  let result = null;\n  const gridOptionsGetDocument = gos.get(\"getDocument\");\n  if (gridOptionsGetDocument && _exists(gridOptionsGetDocument)) {\n    result = gridOptionsGetDocument();\n  } else if (eGridDiv) {\n    result = eGridDiv.ownerDocument;\n  }\n  if (result && _exists(result)) {\n    return result;\n  }\n  return document;\n}\nfunction _getWindow(beans) {\n  const eDocument = _getDocument(beans);\n  return eDocument.defaultView || window;\n}\nfunction _getRootNode(beans) {\n  return beans.eGridDiv.getRootNode();\n}\nfunction _getActiveDomElement(beans) {\n  return _getRootNode(beans).activeElement;\n}\nfunction _getPageBody(beans) {\n  let rootNode = null;\n  let targetEl = null;\n  try {\n    rootNode = _getDocument(beans).fullscreenElement;\n  } catch (e) {} finally {\n    if (!rootNode) {\n      rootNode = _getRootNode(beans);\n    }\n    const body = rootNode.querySelector(\"body\");\n    if (body) {\n      targetEl = body;\n    } else if (rootNode instanceof ShadowRoot) {\n      targetEl = rootNode;\n    } else if (rootNode instanceof Document) {\n      targetEl = rootNode?.documentElement;\n    } else {\n      targetEl = rootNode;\n    }\n  }\n  return targetEl;\n}\nfunction _getBodyWidth(beans) {\n  const body = _getPageBody(beans);\n  return body?.clientWidth ?? (window.innerWidth || -1);\n}\nfunction _getBodyHeight(beans) {\n  const body = _getPageBody(beans);\n  return body?.clientHeight ?? (window.innerHeight || -1);\n}\nfunction _anchorElementToMouseMoveEvent(element, mouseMoveEvent, beans) {\n  const eRect = element.getBoundingClientRect();\n  const height = eRect.height;\n  const browserWidth = _getBodyWidth(beans) - 2;\n  const browserHeight = _getBodyHeight(beans) - 2;\n  const offsetParent = element.offsetParent;\n  if (!offsetParent) {\n    return;\n  }\n  const offsetParentSize = _getElementRectWithOffset(element.offsetParent);\n  const {\n    clientY,\n    clientX\n  } = mouseMoveEvent;\n  let top = clientY - offsetParentSize.top - height / 2;\n  let left = clientX - offsetParentSize.left - 10;\n  const eDocument = _getDocument(beans);\n  const win = eDocument.defaultView || window;\n  const windowScrollY = win.pageYOffset || eDocument.documentElement.scrollTop;\n  const windowScrollX = win.pageXOffset || eDocument.documentElement.scrollLeft;\n  if (browserWidth > 0 && left + element.clientWidth > browserWidth + windowScrollX) {\n    left = browserWidth + windowScrollX - element.clientWidth;\n  }\n  if (left < 0) {\n    left = 0;\n  }\n  if (browserHeight > 0 && top + element.clientHeight > browserHeight + windowScrollY) {\n    top = browserHeight + windowScrollY - element.clientHeight;\n  }\n  if (top < 0) {\n    top = 0;\n  }\n  element.style.left = `${left}px`;\n  element.style.top = `${top}px`;\n}\nfunction _isNothingFocused(beans) {\n  const activeEl = _getActiveDomElement(beans);\n  return activeEl === null || activeEl === _getDocument(beans).body;\n}\nfunction _isAnimateRows(gos) {\n  if (gos.get(\"ensureDomOrder\")) {\n    return false;\n  }\n  return gos.get(\"animateRows\");\n}\nfunction _isGroupRowsSticky(gos) {\n  if (gos.get(\"paginateChildRows\") || gos.get(\"groupHideOpenParents\") || _isDomLayout(gos, \"print\")) {\n    return false;\n  }\n  return true;\n}\nfunction _isColumnsSortingCoupledToGroup(gos) {\n  const autoGroupColumnDef = gos.get(\"autoGroupColumnDef\");\n  return !autoGroupColumnDef?.comparator && !gos.get(\"treeData\");\n}\nfunction _getGroupAggFiltering(gos) {\n  const userValue = gos.get(\"groupAggFiltering\");\n  if (typeof userValue === \"function\") {\n    return gos.getCallback(\"groupAggFiltering\");\n  }\n  if (userValue === true) {\n    return () => true;\n  }\n  return void 0;\n}\nfunction _getGrandTotalRow(gos) {\n  return gos.get(\"grandTotalRow\");\n}\nfunction _getGroupTotalRowCallback(gos) {\n  const userValue = gos.get(\"groupTotalRow\");\n  if (typeof userValue === \"function\") {\n    return gos.getCallback(\"groupTotalRow\");\n  }\n  return () => userValue ?? void 0;\n}\nfunction _isGroupMultiAutoColumn(gos) {\n  const isHideOpenParents = !!gos.get(\"groupHideOpenParents\");\n  if (isHideOpenParents) {\n    return true;\n  }\n  return gos.get(\"groupDisplayType\") === \"multipleColumns\";\n}\nfunction _isGroupUseEntireRow(gos, pivotMode) {\n  if (pivotMode) {\n    return false;\n  }\n  return gos.get(\"groupDisplayType\") === \"groupRows\";\n}\nfunction _isFullWidthGroupRow(gos, node, pivotMode) {\n  return !!node.group && !node.footer && _isGroupUseEntireRow(gos, pivotMode);\n}\nfunction _getRowIdCallback(gos) {\n  const getRowId = gos.getCallback(\"getRowId\");\n  if (getRowId === void 0) {\n    return getRowId;\n  }\n  return params => {\n    let id = getRowId(params);\n    if (typeof id !== \"string\") {\n      _doOnce(() => _warn(25, {\n        id\n      }), \"getRowIdString\");\n      id = String(id);\n    }\n    return id;\n  };\n}\nfunction _canSkipShowingRowGroup(gos, node) {\n  const isSkippingGroups = gos.get(\"groupHideParentOfSingleChild\");\n  if (isSkippingGroups === true) {\n    return true;\n  }\n  if (isSkippingGroups === \"leafGroupsOnly\" && node.leafGroup) {\n    return true;\n  }\n  if (gos.get(\"groupRemoveSingleChildren\")) {\n    return true;\n  }\n  if (gos.get(\"groupRemoveLowestSingleChildren\") && node.leafGroup) {\n    return true;\n  }\n  return false;\n}\nfunction _getMaxConcurrentDatasourceRequests(gos) {\n  const res = gos.get(\"maxConcurrentDatasourceRequests\");\n  return res > 0 ? res : void 0;\n}\nfunction _shouldUpdateColVisibilityAfterGroup(gos, isGrouped) {\n  const preventVisibilityChanges = gos.get(\"suppressGroupChangesColumnVisibility\");\n  if (preventVisibilityChanges === true) {\n    return false;\n  }\n  if (isGrouped && preventVisibilityChanges === \"suppressHideOnGroup\") {\n    return false;\n  }\n  if (!isGrouped && preventVisibilityChanges === \"suppressShowOnUngroup\") {\n    return false;\n  }\n  const legacySuppressOnGroup = gos.get(\"suppressRowGroupHidesColumns\");\n  if (isGrouped && legacySuppressOnGroup === true) {\n    return false;\n  }\n  const legacySuppressOnUngroup = gos.get(\"suppressMakeColumnVisibleAfterUnGroup\");\n  if (!isGrouped && legacySuppressOnUngroup === true) {\n    return false;\n  }\n  return true;\n}\nfunction _getCheckboxes(selection) {\n  return selection?.checkboxes ?? true;\n}\nfunction _getHeaderCheckbox(selection) {\n  return selection?.mode === \"multiRow\" && (selection.headerCheckbox ?? true);\n}\nfunction _getCheckboxLocation(rowSelection) {\n  if (typeof rowSelection !== \"object\") {\n    return void 0;\n  }\n  return rowSelection.checkboxLocation ?? \"selectionColumn\";\n}\nfunction _getHideDisabledCheckboxes(selection) {\n  return selection?.hideDisabledCheckboxes ?? false;\n}\nfunction _isUsingNewRowSelectionAPI(gos) {\n  const rowSelection = gos.get(\"rowSelection\");\n  return typeof rowSelection !== \"string\";\n}\nfunction _isUsingNewCellSelectionAPI(gos) {\n  return gos.get(\"cellSelection\") !== void 0;\n}\nfunction _getSuppressMultiRanges(gos) {\n  const selection = gos.get(\"cellSelection\");\n  const useNewAPI = selection !== void 0;\n  if (!useNewAPI) {\n    return gos.get(\"suppressMultiRangeSelection\");\n  }\n  return typeof selection !== \"boolean\" ? selection?.suppressMultiRanges ?? false : false;\n}\nfunction _isCellSelectionEnabled(gos) {\n  const selection = gos.get(\"cellSelection\");\n  const useNewAPI = selection !== void 0;\n  return useNewAPI ? !!selection : gos.get(\"enableRangeSelection\");\n}\nfunction _getFillHandle(gos) {\n  const selection = gos.get(\"cellSelection\");\n  const useNewAPI = selection !== void 0;\n  if (!useNewAPI) {\n    return {\n      mode: \"fill\",\n      setFillValue: gos.get(\"fillOperation\"),\n      direction: gos.get(\"fillHandleDirection\"),\n      suppressClearOnFillReduction: gos.get(\"suppressClearOnFillReduction\")\n    };\n  }\n  return typeof selection !== \"boolean\" && selection.handle?.mode === \"fill\" ? selection.handle : void 0;\n}\nfunction _getEnableClickSelection(gos) {\n  const selection = gos.get(\"rowSelection\") ?? \"single\";\n  if (typeof selection === \"string\") {\n    const suppressRowClickSelection = gos.get(\"suppressRowClickSelection\");\n    const suppressRowDeselection = gos.get(\"suppressRowDeselection\");\n    if (suppressRowClickSelection && suppressRowDeselection) {\n      return false;\n    } else if (suppressRowClickSelection) {\n      return \"enableDeselection\";\n    } else if (suppressRowDeselection) {\n      return \"enableSelection\";\n    } else {\n      return true;\n    }\n  }\n  return selection.mode === \"singleRow\" || selection.mode === \"multiRow\" ? selection.enableClickSelection ?? false : false;\n}\nfunction _getEnableSelection(gos) {\n  const enableClickSelection = _getEnableClickSelection(gos);\n  return enableClickSelection === true || enableClickSelection === \"enableSelection\";\n}\nfunction _getEnableDeselection(gos) {\n  const enableClickSelection = _getEnableClickSelection(gos);\n  return enableClickSelection === true || enableClickSelection === \"enableDeselection\";\n}\nfunction _getIsRowSelectable(gos) {\n  const selection = gos.get(\"rowSelection\");\n  if (typeof selection === \"string\") {\n    return gos.get(\"isRowSelectable\");\n  }\n  return selection?.isRowSelectable;\n}\nfunction _getRowSelectionMode(arg) {\n  const selection = \"beanName\" in arg && arg.beanName === \"gos\" ? arg.get(\"rowSelection\") : arg.rowSelection;\n  if (typeof selection === \"string\") {\n    switch (selection) {\n      case \"multiple\":\n        return \"multiRow\";\n      case \"single\":\n        return \"singleRow\";\n      default:\n        return;\n    }\n  }\n  switch (selection?.mode) {\n    case \"multiRow\":\n    case \"singleRow\":\n      return selection.mode;\n    default:\n      return;\n  }\n}\nfunction _isMultiRowSelection(arg) {\n  const mode = _getRowSelectionMode(arg);\n  return mode === \"multiRow\";\n}\nfunction _getEnableSelectionWithoutKeys(gos) {\n  const selection = gos.get(\"rowSelection\");\n  if (typeof selection === \"string\") {\n    return gos.get(\"rowMultiSelectWithClick\");\n  }\n  return selection?.enableSelectionWithoutKeys ?? false;\n}\nfunction _getGroupSelection(gos) {\n  const selection = gos.get(\"rowSelection\");\n  if (typeof selection === \"string\") {\n    const groupSelectsChildren = gos.get(\"groupSelectsChildren\");\n    const groupSelectsFiltered = gos.get(\"groupSelectsFiltered\");\n    if (groupSelectsChildren && groupSelectsFiltered) {\n      return \"filteredDescendants\";\n    } else if (groupSelectsChildren) {\n      return \"descendants\";\n    } else {\n      return \"self\";\n    }\n  }\n  return selection?.mode === \"multiRow\" ? selection.groupSelects : void 0;\n}\nfunction _getSelectAll(gos, defaultValue = true) {\n  const rowSelection = gos.get(\"rowSelection\");\n  if (typeof rowSelection !== \"object\") {\n    return defaultValue ? \"all\" : void 0;\n  }\n  return rowSelection.mode === \"multiRow\" ? rowSelection.selectAll : \"all\";\n}\nfunction _getGroupSelectsDescendants(gos) {\n  const groupSelection = _getGroupSelection(gos);\n  return groupSelection === \"descendants\" || groupSelection === \"filteredDescendants\";\n}\nfunction _getMasterSelects(gos) {\n  const rowSelection = gos.get(\"rowSelection\");\n  return typeof rowSelection === \"object\" && rowSelection.masterSelects || \"self\";\n}\nfunction _isSetFilterByDefault(gos) {\n  return gos.isModuleRegistered(\"SetFilter\") && !gos.get(\"suppressSetFilterByDefault\");\n}\nfunction _isLegacyMenuEnabled(gos) {\n  return gos.get(\"columnMenu\") === \"legacy\";\n}\nfunction _isColumnMenuAnchoringEnabled(gos) {\n  return !_isLegacyMenuEnabled(gos);\n}\nfunction _getCallbackForEvent(eventName) {\n  if (!eventName || eventName.length < 2) {\n    return eventName;\n  }\n  return \"on\" + eventName[0].toUpperCase() + eventName.substring(1);\n}\nfunction _combineAttributesAndGridOptions(gridOptions, component, gridOptionsKeys) {\n  if (typeof gridOptions !== \"object\") {\n    gridOptions = {};\n  }\n  const mergedOptions = {\n    ...gridOptions\n  };\n  gridOptionsKeys.forEach(key => {\n    const value = component[key];\n    if (typeof value !== \"undefined\") {\n      mergedOptions[key] = value;\n    }\n  });\n  return mergedOptions;\n}\nfunction _processOnChange(changes, api) {\n  if (!changes) {\n    return;\n  }\n  const gridChanges = {};\n  let hasChanges = false;\n  Object.keys(changes).forEach(key => {\n    gridChanges[key] = changes[key];\n    hasChanges = true;\n  });\n  if (!hasChanges) {\n    return;\n  }\n  const internalUpdateEvent = {\n    type: \"gridOptionsChanged\",\n    options: gridChanges\n  };\n  api.dispatchEvent(internalUpdateEvent);\n  const event = {\n    type: \"componentStateChanged\",\n    ...gridChanges\n  };\n  api.dispatchEvent(event);\n}\nfunction _addGridCommonParams(gos, params) {\n  return gos.addGridCommonParams(params);\n}\nfunction _getGroupingApproach(gos) {\n  if (gos.get(\"treeData\")) {\n    if (gos.get(\"treeDataParentIdField\")) {\n      return \"treeSelfRef\";\n    }\n    if (gos.get(\"treeDataChildrenField\")) {\n      return \"treeNested\";\n    }\n    return \"treePath\";\n  }\n  return \"group\";\n}\nfunction _getGridOption(providedGridOptions, gridOption) {\n  return providedGridOptions[gridOption] ?? providedGridOptions[`gridOptions`]?.[gridOption] ?? _getGlobalGridOption(gridOption) ?? GRID_OPTION_DEFAULTS[gridOption];\n}\n\n// packages/ag-grid-community/src/utils/event.ts\nvar AG_GRID_STOP_PROPAGATION = \"__ag_Grid_Stop_Propagation\";\nvar PASSIVE_EVENTS = [\"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\", \"scroll\"];\nvar NON_PASSIVE_EVENTS = [\"wheel\"];\nvar supports = {};\nfunction _stopPropagationForAgGrid(event) {\n  event[AG_GRID_STOP_PROPAGATION] = true;\n}\nfunction _isStopPropagationForAgGrid(event) {\n  return event[AG_GRID_STOP_PROPAGATION] === true;\n}\nvar _isEventSupported = /* @__PURE__ */(() => {\n  const tags = {\n    select: \"input\",\n    change: \"input\",\n    submit: \"form\",\n    reset: \"form\",\n    error: \"img\",\n    load: \"img\",\n    abort: \"img\"\n  };\n  const eventChecker = eventName => {\n    if (typeof supports[eventName] === \"boolean\") {\n      return supports[eventName];\n    }\n    const el = document.createElement(tags[eventName] || \"div\");\n    eventName = \"on\" + eventName;\n    return supports[eventName] = eventName in el;\n  };\n  return eventChecker;\n})();\nfunction _getCtrlForEventTarget(gos, eventTarget, type) {\n  let sourceElement = eventTarget;\n  while (sourceElement) {\n    const renderedComp = _getDomData(gos, sourceElement, type);\n    if (renderedComp) {\n      return renderedComp;\n    }\n    sourceElement = sourceElement.parentElement;\n  }\n  return null;\n}\nfunction _isElementInEventPath(element, event) {\n  if (!event || !element) {\n    return false;\n  }\n  return _getEventPath(event).indexOf(element) >= 0;\n}\nfunction _createEventPath(event) {\n  const res = [];\n  let pointer = event.target;\n  while (pointer) {\n    res.push(pointer);\n    pointer = pointer.parentElement;\n  }\n  return res;\n}\nfunction _getEventPath(event) {\n  const eventNoType = event;\n  if (eventNoType.path) {\n    return eventNoType.path;\n  }\n  if (eventNoType.composedPath) {\n    return eventNoType.composedPath();\n  }\n  return _createEventPath(eventNoType);\n}\nfunction _addSafePassiveEventListener(frameworkOverrides, eElement, event, listener) {\n  const passive = getPassiveStateForEvent(event);\n  let options;\n  if (passive != null) {\n    options = {\n      passive\n    };\n  }\n  if (frameworkOverrides && frameworkOverrides.addEventListener) {\n    frameworkOverrides.addEventListener(eElement, event, listener, options);\n  }\n}\nvar getPassiveStateForEvent = event => {\n  const isPassive = PASSIVE_EVENTS.includes(event);\n  const isNonPassive = NON_PASSIVE_EVENTS.includes(event);\n  if (isPassive) {\n    return true;\n  }\n  if (isNonPassive) {\n    return false;\n  }\n};\n\n// packages/ag-grid-community/src/context/beanStub.ts\nvar BeanStub = class {\n  constructor() {\n    // not named context to allow children to use 'context' as a variable name\n    this.destroyFunctions = [];\n    this.destroyed = false;\n    // for vue 3 - prevents Vue from trying to make this (and obviously any sub classes) from being reactive\n    // prevents vue from creating proxies for created objects and prevents identity related issues\n    this.__v_skip = true;\n    this.propertyListenerId = 0;\n    // Enable multiple grid properties to be updated together by the user but only trigger shared logic once.\n    // Closely related to logic in GridOptionsUtils.ts _processOnChange\n    this.lastChangeSetIdLookup = {};\n    this.isAlive = () => !this.destroyed;\n  }\n  preWireBeans(beans) {\n    this.beans = beans;\n    this.stubContext = beans.context;\n    this.eventSvc = beans.eventSvc;\n    this.gos = beans.gos;\n  }\n  // this was a test constructor niall built, when active, it prints after 5 seconds all beans/components that are\n  // not destroyed. to use, create a new grid, then api.destroy() before 5 seconds. then anything that gets printed\n  // points to a bean or component that was not properly disposed of.\n  // constructor() {\n  //     setTimeout(()=> {\n  //         if (this.isAlive()) {\n  //             let prototype: any = Object.getPrototypeOf(this);\n  //             const constructor: any = prototype.constructor;\n  //             const constructorString = constructor.toString();\n  //             const beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n  //             console.log('is alive ' + beanName);\n  //         }\n  //     }, 5000);\n  // }\n  destroy() {\n    const {\n      destroyFunctions\n    } = this;\n    for (let i = 0; i < destroyFunctions.length; i++) {\n      destroyFunctions[i]();\n    }\n    destroyFunctions.length = 0;\n    this.destroyed = true;\n    this.dispatchLocalEvent({\n      type: \"destroyed\"\n    });\n  }\n  // The typing of AgEventListener<any, any, any> is not ideal, but it's the best we can do at the moment to enable\n  // eventSvc to have the best typing at the expense of BeanStub local events\n  /** Add a local event listener against this BeanStub */\n  addEventListener(eventType, listener, async) {\n    if (!this.localEventService) {\n      this.localEventService = new LocalEventService();\n    }\n    this.localEventService.addEventListener(eventType, listener, async);\n  }\n  /** Remove a local event listener from this BeanStub */\n  removeEventListener(eventType, listener, async) {\n    this.localEventService?.removeEventListener(eventType, listener, async);\n  }\n  dispatchLocalEvent(event) {\n    this.localEventService?.dispatchEvent(event);\n  }\n  addManagedElementListeners(object, handlers) {\n    return this._setupListeners(object, handlers);\n  }\n  addManagedEventListeners(handlers) {\n    return this._setupListeners(this.eventSvc, handlers);\n  }\n  addManagedListeners(object, handlers) {\n    return this._setupListeners(object, handlers);\n  }\n  _setupListeners(object, handlers) {\n    const destroyFuncs = [];\n    for (const k of Object.keys(handlers)) {\n      const handler = handlers[k];\n      if (handler) {\n        destroyFuncs.push(this._setupListener(object, k, handler));\n      }\n    }\n    return destroyFuncs;\n  }\n  _setupListener(object, event, listener) {\n    if (this.destroyed) {\n      return () => null;\n    }\n    let destroyFunc;\n    if (isAgEventEmitter(object)) {\n      object.__addEventListener(event, listener);\n      destroyFunc = () => {\n        object.__removeEventListener(event, listener);\n        return null;\n      };\n    } else {\n      if (object instanceof HTMLElement) {\n        _addSafePassiveEventListener(this.beans.frameworkOverrides, object, event, listener);\n      } else {\n        object.addEventListener(event, listener);\n      }\n      destroyFunc = () => {\n        object.removeEventListener(event, listener);\n        return null;\n      };\n    }\n    this.destroyFunctions.push(destroyFunc);\n    return () => {\n      destroyFunc();\n      this.destroyFunctions = this.destroyFunctions.filter(fn => fn !== destroyFunc);\n      return null;\n    };\n  }\n  /**\n   * Setup a managed property listener for the given GridOption property.\n   * However, stores the destroy function in the beanStub so that if this bean\n   * is a component the destroy function will be called when the component is destroyed\n   * as opposed to being cleaned up only when the GridOptionsService is destroyed.\n   */\n  setupGridOptionListener(event, listener) {\n    const {\n      gos\n    } = this;\n    gos.addPropertyEventListener(event, listener);\n    const destroyFunc = () => {\n      gos.removePropertyEventListener(event, listener);\n      return null;\n    };\n    this.destroyFunctions.push(destroyFunc);\n    return () => {\n      destroyFunc();\n      this.destroyFunctions = this.destroyFunctions.filter(fn => fn !== destroyFunc);\n      return null;\n    };\n  }\n  /**\n   * Setup a managed property listener for the given GridOption property.\n   * @param event GridOption property to listen to changes for.\n   * @param listener Listener to run when property value changes\n   */\n  addManagedPropertyListener(event, listener) {\n    if (this.destroyed) {\n      return () => null;\n    }\n    return this.setupGridOptionListener(event, listener);\n  }\n  /**\n   * Setup managed property listeners for the given set of GridOption properties.\n   * The listener will be run if any of the property changes but will only run once if\n   * multiple of the properties change within the same framework lifecycle event.\n   * Works on the basis that GridOptionsService updates all properties *before* any property change events are fired.\n   * @param events Array of GridOption properties to listen for changes too.\n   * @param listener Shared listener to run if any of the properties change\n   */\n  addManagedPropertyListeners(events, listener) {\n    if (this.destroyed) {\n      return;\n    }\n    const eventsKey = events.join(\"-\") + this.propertyListenerId++;\n    const wrappedListener = event => {\n      if (event.changeSet) {\n        if (event.changeSet && event.changeSet.id === this.lastChangeSetIdLookup[eventsKey]) {\n          return;\n        }\n        this.lastChangeSetIdLookup[eventsKey] = event.changeSet.id;\n      }\n      const propertiesChangeEvent = {\n        type: \"gridPropertyChanged\",\n        changeSet: event.changeSet,\n        source: event.source\n      };\n      listener(propertiesChangeEvent);\n    };\n    events.forEach(event => this.setupGridOptionListener(event, wrappedListener));\n  }\n  getLocaleTextFunc() {\n    return _getLocaleTextFunc(this.beans.localeSvc);\n  }\n  addDestroyFunc(func) {\n    if (this.isAlive()) {\n      this.destroyFunctions.push(func);\n    } else {\n      func();\n    }\n  }\n  /** doesn't throw an error if `bean` is undefined */\n  createOptionalManagedBean(bean, context) {\n    return bean ? this.createManagedBean(bean, context) : void 0;\n  }\n  createManagedBean(bean, context) {\n    const res = this.createBean(bean, context);\n    this.addDestroyFunc(this.destroyBean.bind(this, bean, context));\n    return res;\n  }\n  createBean(bean, context, afterPreCreateCallback) {\n    return (context || this.stubContext).createBean(bean, afterPreCreateCallback);\n  }\n  /**\n   * Destroys a bean and returns undefined to support destruction and clean up in a single line.\n   * this.dateComp = this.context.destroyBean(this.dateComp);\n   */\n  destroyBean(bean, context) {\n    return (context || this.stubContext).destroyBean(bean);\n  }\n  /**\n   * Destroys an array of beans and returns an empty array to support destruction and clean up in a single line.\n   * this.dateComps = this.context.destroyBeans(this.dateComps);\n   */\n  destroyBeans(beans, context) {\n    return (context || this.stubContext).destroyBeans(beans);\n  }\n};\nfunction isAgEventEmitter(object) {\n  return object.__addEventListener !== void 0;\n}\n\n// packages/ag-grid-community/src/utils/string.ts\nvar reUnescapedHtml = /[&<>\"']/g;\nvar HTML_ESCAPES = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\"\n};\nfunction _toString(toEscape) {\n  return toEscape?.toString().toString() ?? null;\n}\nfunction _escapeString(toEscape) {\n  return _toString(toEscape)?.replace(reUnescapedHtml, chr => HTML_ESCAPES[chr]) ?? null;\n}\n\n// packages/ag-grid-community/src/entities/agColumn.ts\nvar COL_DEF_DEFAULTS = {\n  resizable: true,\n  sortable: true\n};\nvar instanceIdSequence = 0;\nfunction getNextColInstanceId() {\n  return instanceIdSequence++;\n}\nfunction isColumn(col) {\n  return col instanceof AgColumn;\n}\nvar AgColumn = class extends BeanStub {\n  constructor(colDef, userProvidedColDef, colId, primary) {\n    super();\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.colId = colId;\n    this.primary = primary;\n    this.isColumn = true;\n    // used by React (and possibly other frameworks) as key for rendering. also used to\n    // identify old vs new columns for destroying cols when no longer used.\n    this.instanceId = getNextColInstanceId();\n    // The measured height of this column's header when autoHeaderHeight is enabled\n    this.autoHeaderHeight = null;\n    this.moving = false;\n    this.resizing = false;\n    this.menuVisible = false;\n    this.lastLeftPinned = false;\n    this.firstRightPinned = false;\n    this.filterActive = false;\n    this.colEventSvc = new LocalEventService();\n    this.tooltipEnabled = false;\n    this.rowGroupActive = false;\n    this.pivotActive = false;\n    this.aggregationActive = false;\n    this.flex = null;\n    this.colIdSanitised = _escapeString(colId);\n  }\n  destroy() {\n    super.destroy();\n    this.beans.rowSpanSvc?.deregister(this);\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  setState() {\n    const {\n      colDef,\n      beans: {\n        sortSvc,\n        pinnedCols,\n        colFlex\n      }\n    } = this;\n    sortSvc?.initCol(this);\n    const hide = colDef.hide;\n    if (hide !== void 0) {\n      this.visible = !hide;\n    } else {\n      this.visible = !colDef.initialHide;\n    }\n    pinnedCols?.initCol(this);\n    colFlex?.initCol(this);\n  }\n  // gets called when user provides an alternative colDef, eg\n  setColDef(colDef, userProvidedColDef, source) {\n    const colSpanChanged = colDef.spanRows !== this.colDef.spanRows;\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.initMinAndMaxWidths();\n    this.initDotNotation();\n    this.initTooltip();\n    if (colSpanChanged) {\n      this.beans.rowSpanSvc?.deregister(this);\n      this.initRowSpan();\n    }\n    this.dispatchColEvent(\"colDefChanged\", source);\n  }\n  getUserProvidedColDef() {\n    return this.userProvidedColDef;\n  }\n  getParent() {\n    return this.parent;\n  }\n  getOriginalParent() {\n    return this.originalParent;\n  }\n  // this is done after constructor as it uses gridOptionsService\n  postConstruct() {\n    this.setState();\n    this.initMinAndMaxWidths();\n    this.resetActualWidth(\"gridInitializing\");\n    this.initDotNotation();\n    this.initTooltip();\n    this.initRowSpan();\n    this.addPivotListener();\n  }\n  initDotNotation() {\n    const {\n      gos,\n      colDef: {\n        field,\n        tooltipField\n      }\n    } = this;\n    const suppressDotNotation = gos.get(\"suppressFieldDotNotation\");\n    this.fieldContainsDots = _exists(field) && field.indexOf(\".\") >= 0 && !suppressDotNotation;\n    this.tooltipFieldContainsDots = _exists(tooltipField) && tooltipField.indexOf(\".\") >= 0 && !suppressDotNotation;\n  }\n  initMinAndMaxWidths() {\n    const colDef = this.colDef;\n    this.minWidth = colDef.minWidth ?? this.beans.environment.getDefaultColumnMinWidth();\n    this.maxWidth = colDef.maxWidth ?? Number.MAX_SAFE_INTEGER;\n  }\n  initTooltip() {\n    this.beans.tooltipSvc?.initCol(this);\n  }\n  initRowSpan() {\n    if (this.colDef.spanRows) {\n      this.beans.rowSpanSvc?.register(this);\n    }\n  }\n  addPivotListener() {\n    const pivotColDefSvc = this.beans.pivotColDefSvc;\n    const pivotValueColumn = this.colDef.pivotValueColumn;\n    if (!pivotColDefSvc || !pivotValueColumn) {\n      return;\n    }\n    this.addManagedListeners(pivotValueColumn, {\n      colDefChanged: evt => {\n        const colDef = pivotColDefSvc.recreateColDef(this.colDef);\n        this.setColDef(colDef, colDef, evt.source);\n      }\n    });\n  }\n  resetActualWidth(source) {\n    const initialWidth = this.calculateColInitialWidth(this.colDef);\n    this.setActualWidth(initialWidth, source, true);\n  }\n  calculateColInitialWidth(colDef) {\n    let width;\n    const colDefWidth = colDef.width;\n    const colDefInitialWidth = colDef.initialWidth;\n    if (colDefWidth != null) {\n      width = colDefWidth;\n    } else if (colDefInitialWidth != null) {\n      width = colDefInitialWidth;\n    } else {\n      width = 200;\n    }\n    return Math.max(Math.min(width, this.maxWidth), this.minWidth);\n  }\n  isEmptyGroup() {\n    return false;\n  }\n  isRowGroupDisplayed(colId) {\n    return this.beans.showRowGroupCols?.isRowGroupDisplayed(this, colId) ?? false;\n  }\n  isPrimary() {\n    return this.primary;\n  }\n  isFilterAllowed() {\n    const filterDefined = !!this.colDef.filter;\n    return filterDefined;\n  }\n  isFieldContainsDots() {\n    return this.fieldContainsDots;\n  }\n  isTooltipEnabled() {\n    return this.tooltipEnabled;\n  }\n  isTooltipFieldContainsDots() {\n    return this.tooltipFieldContainsDots;\n  }\n  getHighlighted() {\n    return this.highlighted;\n  }\n  __addEventListener(eventType, listener) {\n    this.colEventSvc.addEventListener(eventType, listener);\n  }\n  __removeEventListener(eventType, listener) {\n    this.colEventSvc.removeEventListener(eventType, listener);\n  }\n  /**\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\n   */\n  addEventListener(eventType, userListener) {\n    this.frameworkEventListenerService = this.beans.frameworkOverrides.createLocalEventListenerWrapper?.(this.frameworkEventListenerService, this.colEventSvc);\n    const listener = this.frameworkEventListenerService?.wrap(eventType, userListener) ?? userListener;\n    this.colEventSvc.addEventListener(eventType, listener);\n  }\n  /**\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\n   */\n  removeEventListener(eventType, userListener) {\n    const listener = this.frameworkEventListenerService?.unwrap(eventType, userListener) ?? userListener;\n    this.colEventSvc.removeEventListener(eventType, listener);\n  }\n  createColumnFunctionCallbackParams(rowNode) {\n    return _addGridCommonParams(this.gos, {\n      node: rowNode,\n      data: rowNode.data,\n      column: this,\n      colDef: this.colDef\n    });\n  }\n  isSuppressNavigable(rowNode) {\n    return this.beans.cellNavigation?.isSuppressNavigable(this, rowNode) ?? false;\n  }\n  isCellEditable(rowNode) {\n    return this.beans.editSvc?.isCellEditable({\n      rowNode,\n      column: this\n    }) ?? false;\n  }\n  isSuppressFillHandle() {\n    return !!this.colDef.suppressFillHandle;\n  }\n  isAutoHeight() {\n    return !!this.colDef.autoHeight;\n  }\n  isAutoHeaderHeight() {\n    return !!this.colDef.autoHeaderHeight;\n  }\n  isRowDrag(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n  }\n  isDndSource(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.dndSource);\n  }\n  isCellCheckboxSelection(rowNode) {\n    return this.beans.selectionSvc?.isCellCheckboxSelection(this, rowNode) ?? false;\n  }\n  isSuppressPaste(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef?.suppressPaste ?? null);\n  }\n  isResizable() {\n    return !!this.getColDefValue(\"resizable\");\n  }\n  /** Get value from ColDef or default if it exists. */\n  getColDefValue(key) {\n    return this.colDef[key] ?? COL_DEF_DEFAULTS[key];\n  }\n  isColumnFunc(rowNode, value) {\n    if (typeof value === \"boolean\") {\n      return value;\n    }\n    if (typeof value === \"function\") {\n      const params = this.createColumnFunctionCallbackParams(rowNode);\n      const editableFunc = value;\n      return editableFunc(params);\n    }\n    return false;\n  }\n  createColumnEvent(type, source) {\n    return _addGridCommonParams(this.gos, {\n      type,\n      column: this,\n      columns: [this],\n      source\n    });\n  }\n  isMoving() {\n    return this.moving;\n  }\n  getSort() {\n    return this.sort;\n  }\n  isSortable() {\n    return !!this.getColDefValue(\"sortable\");\n  }\n  /** @deprecated v32 use col.getSort() === 'asc */\n  isSortAscending() {\n    return this.sort === \"asc\";\n  }\n  /** @deprecated v32 use col.getSort() === 'desc */\n  isSortDescending() {\n    return this.sort === \"desc\";\n  }\n  /** @deprecated v32 use col.getSort() === undefined */\n  isSortNone() {\n    return _missing(this.sort);\n  }\n  /** @deprecated v32 use col.getSort() !== undefined */\n  isSorting() {\n    return _exists(this.sort);\n  }\n  getSortIndex() {\n    return this.sortIndex;\n  }\n  isMenuVisible() {\n    return this.menuVisible;\n  }\n  getAggFunc() {\n    return this.aggFunc;\n  }\n  getLeft() {\n    return this.left;\n  }\n  getOldLeft() {\n    return this.oldLeft;\n  }\n  getRight() {\n    return this.left + this.actualWidth;\n  }\n  setLeft(left, source) {\n    this.oldLeft = this.left;\n    if (this.left !== left) {\n      this.left = left;\n      this.dispatchColEvent(\"leftChanged\", source);\n    }\n  }\n  isFilterActive() {\n    return this.filterActive;\n  }\n  /** @deprecated v33 Use `api.isColumnHovered(column)` instead. */\n  isHovered() {\n    _warn(261);\n    return !!this.beans.colHover?.isHovered(this);\n  }\n  setFirstRightPinned(firstRightPinned, source) {\n    if (this.firstRightPinned !== firstRightPinned) {\n      this.firstRightPinned = firstRightPinned;\n      this.dispatchColEvent(\"firstRightPinnedChanged\", source);\n    }\n  }\n  setLastLeftPinned(lastLeftPinned, source) {\n    if (this.lastLeftPinned !== lastLeftPinned) {\n      this.lastLeftPinned = lastLeftPinned;\n      this.dispatchColEvent(\"lastLeftPinnedChanged\", source);\n    }\n  }\n  isFirstRightPinned() {\n    return this.firstRightPinned;\n  }\n  isLastLeftPinned() {\n    return this.lastLeftPinned;\n  }\n  isPinned() {\n    return this.pinned === \"left\" || this.pinned === \"right\";\n  }\n  isPinnedLeft() {\n    return this.pinned === \"left\";\n  }\n  isPinnedRight() {\n    return this.pinned === \"right\";\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  setVisible(visible, source) {\n    const newValue = visible === true;\n    if (this.visible !== newValue) {\n      this.visible = newValue;\n      this.dispatchColEvent(\"visibleChanged\", source);\n    }\n    this.dispatchStateUpdatedEvent(\"hide\");\n  }\n  isVisible() {\n    return this.visible;\n  }\n  isSpanHeaderHeight() {\n    const colDef = this.getColDef();\n    return !colDef.suppressSpanHeaderHeight;\n  }\n  /**\n   * Returns the first parent that is not a padding group.\n   */\n  getFirstRealParent() {\n    let parent = this.getOriginalParent();\n    while (parent && parent.isPadding()) {\n      parent = parent.getOriginalParent();\n    }\n    return parent;\n  }\n  getColumnGroupPaddingInfo() {\n    let parent = this.getParent();\n    if (!parent || !parent.isPadding()) {\n      return {\n        numberOfParents: 0,\n        isSpanningTotal: false\n      };\n    }\n    const numberOfParents = parent.getPaddingLevel() + 1;\n    let isSpanningTotal = true;\n    while (parent) {\n      if (!parent.isPadding()) {\n        isSpanningTotal = false;\n        break;\n      }\n      parent = parent.getParent();\n    }\n    return {\n      numberOfParents,\n      isSpanningTotal\n    };\n  }\n  getColDef() {\n    return this.colDef;\n  }\n  getDefinition() {\n    return this.colDef;\n  }\n  getColumnGroupShow() {\n    return this.colDef.columnGroupShow;\n  }\n  getColId() {\n    return this.colId;\n  }\n  getId() {\n    return this.colId;\n  }\n  getUniqueId() {\n    return this.colId;\n  }\n  getActualWidth() {\n    return this.actualWidth;\n  }\n  getAutoHeaderHeight() {\n    return this.autoHeaderHeight;\n  }\n  /** Returns true if the header height has changed */\n  setAutoHeaderHeight(height) {\n    const changed = height !== this.autoHeaderHeight;\n    this.autoHeaderHeight = height;\n    return changed;\n  }\n  createBaseColDefParams(rowNode) {\n    const params = _addGridCommonParams(this.gos, {\n      node: rowNode,\n      data: rowNode.data,\n      colDef: this.colDef,\n      column: this\n    });\n    return params;\n  }\n  getColSpan(rowNode) {\n    if (_missing(this.colDef.colSpan)) {\n      return 1;\n    }\n    const params = this.createBaseColDefParams(rowNode);\n    const colSpan = this.colDef.colSpan(params);\n    return Math.max(colSpan, 1);\n  }\n  getRowSpan(rowNode) {\n    if (_missing(this.colDef.rowSpan)) {\n      return 1;\n    }\n    const params = this.createBaseColDefParams(rowNode);\n    const rowSpan = this.colDef.rowSpan(params);\n    return Math.max(rowSpan, 1);\n  }\n  setActualWidth(actualWidth, source, silent = false) {\n    actualWidth = Math.max(actualWidth, this.minWidth);\n    actualWidth = Math.min(actualWidth, this.maxWidth);\n    if (this.actualWidth !== actualWidth) {\n      this.actualWidth = actualWidth;\n      if (this.flex != null && source !== \"flex\" && source !== \"gridInitializing\") {\n        this.flex = null;\n      }\n      if (!silent) {\n        this.fireColumnWidthChangedEvent(source);\n      }\n    }\n    this.dispatchStateUpdatedEvent(\"width\");\n  }\n  fireColumnWidthChangedEvent(source) {\n    this.dispatchColEvent(\"widthChanged\", source);\n  }\n  isGreaterThanMax(width) {\n    return width > this.maxWidth;\n  }\n  getMinWidth() {\n    return this.minWidth;\n  }\n  getMaxWidth() {\n    return this.maxWidth;\n  }\n  getFlex() {\n    return this.flex;\n  }\n  isRowGroupActive() {\n    return this.rowGroupActive;\n  }\n  isPivotActive() {\n    return this.pivotActive;\n  }\n  isAnyFunctionActive() {\n    return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n  }\n  isAnyFunctionAllowed() {\n    return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n  }\n  isValueActive() {\n    return this.aggregationActive;\n  }\n  isAllowPivot() {\n    return this.colDef.enablePivot === true;\n  }\n  isAllowValue() {\n    return this.colDef.enableValue === true;\n  }\n  isAllowRowGroup() {\n    return this.colDef.enableRowGroup === true;\n  }\n  dispatchColEvent(type, source, additionalEventAttributes) {\n    const colEvent = this.createColumnEvent(type, source);\n    if (additionalEventAttributes) {\n      _mergeDeep(colEvent, additionalEventAttributes);\n    }\n    this.colEventSvc.dispatchEvent(colEvent);\n  }\n  dispatchStateUpdatedEvent(key) {\n    this.colEventSvc.dispatchEvent({\n      type: \"columnStateUpdated\",\n      key\n    });\n  }\n};\n\n// packages/ag-grid-community/src/entities/agProvidedColumnGroup.ts\nfunction isProvidedColumnGroup(col) {\n  return col instanceof AgProvidedColumnGroup;\n}\nvar AgProvidedColumnGroup = class extends BeanStub {\n  constructor(colGroupDef, groupId, padding, level) {\n    super();\n    this.colGroupDef = colGroupDef;\n    this.groupId = groupId;\n    this.padding = padding;\n    this.level = level;\n    this.isColumn = false;\n    this.expandable = false;\n    // used by React (and possibly other frameworks) as key for rendering. also used to\n    // identify old vs new columns for destroying cols when no longer used.\n    this.instanceId = getNextColInstanceId();\n    this.expandableListenerRemoveCallback = null;\n    this.expanded = !!colGroupDef?.openByDefault;\n  }\n  destroy() {\n    if (this.expandableListenerRemoveCallback) {\n      this.reset(null, void 0);\n    }\n    super.destroy();\n  }\n  reset(colGroupDef, level) {\n    this.colGroupDef = colGroupDef;\n    this.level = level;\n    this.originalParent = null;\n    if (this.expandableListenerRemoveCallback) {\n      this.expandableListenerRemoveCallback();\n    }\n    this.children = void 0;\n    this.expandable = void 0;\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  getOriginalParent() {\n    return this.originalParent;\n  }\n  getLevel() {\n    return this.level;\n  }\n  isVisible() {\n    if (this.children) {\n      return this.children.some(child => child.isVisible());\n    }\n    return false;\n  }\n  isPadding() {\n    return this.padding;\n  }\n  setExpanded(expanded) {\n    this.expanded = expanded === void 0 ? false : expanded;\n    this.dispatchLocalEvent({\n      type: \"expandedChanged\"\n    });\n  }\n  isExpandable() {\n    return this.expandable;\n  }\n  isExpanded() {\n    return this.expanded;\n  }\n  getGroupId() {\n    return this.groupId;\n  }\n  getId() {\n    return this.getGroupId();\n  }\n  setChildren(children) {\n    this.children = children;\n  }\n  getChildren() {\n    return this.children;\n  }\n  getColGroupDef() {\n    return this.colGroupDef;\n  }\n  getLeafColumns() {\n    const result = [];\n    this.addLeafColumns(result);\n    return result;\n  }\n  forEachLeafColumn(callback) {\n    if (!this.children) {\n      return;\n    }\n    for (const child of this.children) {\n      if (isColumn(child)) {\n        callback(child);\n      } else if (isProvidedColumnGroup(child)) {\n        child.forEachLeafColumn(callback);\n      }\n    }\n  }\n  addLeafColumns(leafColumns) {\n    if (!this.children) {\n      return;\n    }\n    this.children.forEach(child => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isProvidedColumnGroup(child)) {\n        child.addLeafColumns(leafColumns);\n      }\n    });\n  }\n  getColumnGroupShow() {\n    const colGroupDef = this.colGroupDef;\n    if (!colGroupDef) {\n      return;\n    }\n    return colGroupDef.columnGroupShow;\n  }\n  // need to check that this group has at least one col showing when both expanded and contracted.\n  // if not, then we don't allow expanding and contracting on this group\n  setupExpandable() {\n    this.setExpandable();\n    if (this.expandableListenerRemoveCallback) {\n      this.expandableListenerRemoveCallback();\n    }\n    const listener = this.onColumnVisibilityChanged.bind(this);\n    this.getLeafColumns().forEach(col => col.__addEventListener(\"visibleChanged\", listener));\n    this.expandableListenerRemoveCallback = () => {\n      this.getLeafColumns().forEach(col => col.__removeEventListener(\"visibleChanged\", listener));\n      this.expandableListenerRemoveCallback = null;\n    };\n  }\n  setExpandable() {\n    if (this.isPadding()) {\n      return;\n    }\n    let atLeastOneShowingWhenOpen = false;\n    let atLeastOneShowingWhenClosed = false;\n    let atLeastOneChangeable = false;\n    const children = this.findChildrenRemovingPadding();\n    for (let i = 0, j = children.length; i < j; i++) {\n      const abstractColumn = children[i];\n      if (!abstractColumn.isVisible()) {\n        continue;\n      }\n      const headerGroupShow = abstractColumn.getColumnGroupShow();\n      if (headerGroupShow === \"open\") {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneChangeable = true;\n      } else if (headerGroupShow === \"closed\") {\n        atLeastOneShowingWhenClosed = true;\n        atLeastOneChangeable = true;\n      } else {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneShowingWhenClosed = true;\n      }\n    }\n    const expandable = atLeastOneShowingWhenOpen && atLeastOneShowingWhenClosed && atLeastOneChangeable;\n    if (this.expandable !== expandable) {\n      this.expandable = expandable;\n      this.dispatchLocalEvent({\n        type: \"expandableChanged\"\n      });\n    }\n  }\n  findChildrenRemovingPadding() {\n    const res = [];\n    const process = items => {\n      items.forEach(item => {\n        const skipBecausePadding = isProvidedColumnGroup(item) && item.isPadding();\n        if (skipBecausePadding) {\n          process(item.children);\n        } else {\n          res.push(item);\n        }\n      });\n    };\n    process(this.children);\n    return res;\n  }\n  onColumnVisibilityChanged() {\n    this.setExpandable();\n  }\n};\n\n// packages/ag-grid-community/src/entities/defaultColumnTypes.ts\nvar DefaultColumnTypes = {\n  numericColumn: {\n    headerClass: \"ag-right-aligned-header\",\n    cellClass: \"ag-right-aligned-cell\"\n  },\n  rightAligned: {\n    headerClass: \"ag-right-aligned-header\",\n    cellClass: \"ag-right-aligned-cell\"\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnGroups/columnGroupUtils.ts\nfunction createMergedColGroupDef(beans, colGroupDef, groupId) {\n  const colGroupDefMerged = {};\n  const gos = beans.gos;\n  Object.assign(colGroupDefMerged, gos.get(\"defaultColGroupDef\"));\n  Object.assign(colGroupDefMerged, colGroupDef);\n  gos.validateColDef(colGroupDefMerged, groupId);\n  return colGroupDefMerged;\n}\n\n// packages/ag-grid-community/src/columns/columnKeyCreator.ts\nvar ColumnKeyCreator = class {\n  constructor() {\n    this.existingKeys = {};\n  }\n  addExistingKeys(keys) {\n    for (let i = 0; i < keys.length; i++) {\n      this.existingKeys[keys[i]] = true;\n    }\n  }\n  getUniqueKey(colId, colField) {\n    colId = _toStringOrNull(colId);\n    let count = 0;\n    while (true) {\n      let idToTry = colId ?? colField;\n      if (idToTry) {\n        if (count !== 0) {\n          idToTry += \"_\" + count;\n        }\n      } else {\n        idToTry = count;\n      }\n      if (!this.existingKeys[idToTry]) {\n        const usedId = String(idToTry);\n        if (colId && count > 0) {\n          _warn(273, {\n            providedId: colId,\n            usedId\n          });\n        }\n        this.existingKeys[usedId] = true;\n        return usedId;\n      }\n      count++;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/utils/array.ts\nvar _EmptyArray = Object.freeze([]);\nfunction _last(arr) {\n  if (!arr?.length) {\n    return;\n  }\n  return arr[arr.length - 1];\n}\nfunction _areEqual(a, b, comparator) {\n  if (a == null && b == null) {\n    return true;\n  }\n  return a != null && b != null && a.length === b.length && a.every((value, index) => comparator ? comparator(value, b[index]) : b[index] === value);\n}\nfunction _forAll(array, callback) {\n  if (!array) {\n    return;\n  }\n  for (const value of array) {\n    callback(value);\n  }\n}\nfunction _removeFromArray(array, object) {\n  const index = array.indexOf(object);\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction _moveInArray(array, objectsToMove, toIndex) {\n  for (let i = 0; i < objectsToMove.length; i++) {\n    _removeFromArray(array, objectsToMove[i]);\n  }\n  for (let i = objectsToMove.length - 1; i >= 0; i--) {\n    array.splice(toIndex, 0, objectsToMove[i]);\n  }\n}\nfunction _flatten(arrays) {\n  return [].concat.apply([], arrays);\n}\n\n// packages/ag-grid-community/src/columns/columnUtils.ts\nvar GROUP_AUTO_COLUMN_ID = \"ag-Grid-AutoColumn\";\nvar SELECTION_COLUMN_ID = \"ag-Grid-SelectionColumn\";\nvar ROW_NUMBERS_COLUMN_ID = \"ag-Grid-RowNumbersColumn\";\nfunction _getColumnsFromTree(rootColumns) {\n  const result = [];\n  const recursiveFindColumns = childColumns => {\n    for (let i = 0; i < childColumns.length; i++) {\n      const child = childColumns[i];\n      if (isColumn(child)) {\n        result.push(child);\n      } else if (isProvidedColumnGroup(child)) {\n        recursiveFindColumns(child.getChildren());\n      }\n    }\n  };\n  recursiveFindColumns(rootColumns);\n  return result;\n}\nfunction getWidthOfColsInList(columnList) {\n  return columnList.reduce((width, col) => width + col.getActualWidth(), 0);\n}\nfunction _destroyColumnTree(beans, oldTree, newTree) {\n  const oldObjectsById = {};\n  if (!oldTree) {\n    return;\n  }\n  depthFirstOriginalTreeSearch(null, oldTree, child => {\n    oldObjectsById[child.getInstanceId()] = child;\n  });\n  if (newTree) {\n    depthFirstOriginalTreeSearch(null, newTree, child => {\n      oldObjectsById[child.getInstanceId()] = null;\n    });\n  }\n  const colsToDestroy = Object.values(oldObjectsById).filter(item => item != null);\n  beans.context.destroyBeans(colsToDestroy);\n}\nfunction isColumnGroupAutoCol(col) {\n  const colId = col.getId();\n  return colId.startsWith(GROUP_AUTO_COLUMN_ID);\n}\nfunction isColumnSelectionCol(col) {\n  const id = typeof col === \"string\" ? col : \"getColId\" in col ? col.getColId() : col.colId;\n  return id?.startsWith(SELECTION_COLUMN_ID) ?? false;\n}\nfunction isRowNumberCol(col) {\n  const id = typeof col === \"string\" ? col : \"getColId\" in col ? col.getColId() : col.colId;\n  return id?.startsWith(ROW_NUMBERS_COLUMN_ID) ?? false;\n}\nfunction isSpecialCol(col) {\n  return isColumnSelectionCol(col) || isRowNumberCol(col);\n}\nfunction convertColumnTypes(type) {\n  let typeKeys = [];\n  if (type instanceof Array) {\n    typeKeys = type;\n  } else if (typeof type === \"string\") {\n    typeKeys = type.split(\",\");\n  }\n  return typeKeys;\n}\nfunction _areColIdsEqual(colsA, colsB) {\n  return _areEqual(colsA, colsB, (a, b) => a.getColId() === b.getColId());\n}\nfunction _updateColsMap(cols) {\n  cols.map = {};\n  cols.list.forEach(col => cols.map[col.getId()] = col);\n}\nfunction _convertColumnEventSourceType(source) {\n  return source === \"gridOptionsUpdated\" ? \"gridOptionsChanged\" : source;\n}\nfunction _columnsMatch(column, key) {\n  const columnMatches = column === key;\n  const colDefMatches = column.getColDef() === key;\n  const idMatches = column.getColId() == key;\n  return columnMatches || colDefMatches || idMatches;\n}\nvar getValueFactory = (stateItem, defaultState) => (key1, key2) => {\n  const obj = {\n    value1: void 0,\n    value2: void 0\n  };\n  let calculated = false;\n  if (stateItem) {\n    if (stateItem[key1] !== void 0) {\n      obj.value1 = stateItem[key1];\n      calculated = true;\n    }\n    if (_exists(key2) && stateItem[key2] !== void 0) {\n      obj.value2 = stateItem[key2];\n      calculated = true;\n    }\n  }\n  if (!calculated && defaultState) {\n    if (defaultState[key1] !== void 0) {\n      obj.value1 = defaultState[key1];\n    }\n    if (_exists(key2) && defaultState[key2] !== void 0) {\n      obj.value2 = defaultState[key2];\n    }\n  }\n  return obj;\n};\n\n// packages/ag-grid-community/src/columns/columnFactoryUtils.ts\nfunction _createColumnTreeWithIds(beans, defs = null, primaryColumns, existingTree, source) {\n  const {\n    existingCols,\n    existingGroups\n  } = extractExistingTreeData(existingTree);\n  const colIdMap = new Map(existingCols.map(col => [col.getId(), col]));\n  const colGroupIdMap = new Map(existingGroups.map(group => [group.getId(), group]));\n  let maxDepth = 0;\n  const recursivelyProcessColDef = (def, level) => {\n    maxDepth = Math.max(maxDepth, level);\n    if (isColumnGroupDef(def)) {\n      if (!beans.colGroupSvc) {\n        return null;\n      }\n      const groupId = def.groupId;\n      const group = colGroupIdMap.get(groupId);\n      const colGroupDef = createMergedColGroupDef(beans, def, groupId);\n      const newGroup = new AgProvidedColumnGroup(colGroupDef, groupId, false, level);\n      beans.context.createBean(newGroup);\n      if (group) {\n        newGroup.setExpanded(group.isExpanded());\n      }\n      newGroup.setChildren(def.children.map(child => recursivelyProcessColDef(child, level + 1)));\n      return newGroup;\n    }\n    const colId = def.colId;\n    let column = colIdMap.get(colId);\n    const colDefMerged = _addColumnDefaultAndTypes(beans, def, column?.getColId() ?? colId);\n    if (!column) {\n      column = new AgColumn(colDefMerged, def, colId, primaryColumns);\n      beans.context.createBean(column);\n    } else {\n      column.setColDef(colDefMerged, def, source);\n      _updateColumnState(beans, column, colDefMerged, source);\n    }\n    beans.dataTypeSvc?.addColumnListeners(column);\n    return column;\n  };\n  const root = defs?.map(def => recursivelyProcessColDef(def, 0)) ?? [];\n  let counter = 0;\n  const keyCreator = {\n    getUniqueKey: (_colId, _field) => String(++counter)\n  };\n  const columnTree = beans.colGroupSvc ? beans.colGroupSvc.balanceColumnTree(root, 0, maxDepth, keyCreator) : root;\n  const depthFirstCallback = (child, parent) => {\n    if (isProvidedColumnGroup(child)) {\n      child.setupExpandable();\n    }\n    child.originalParent = parent;\n  };\n  depthFirstOriginalTreeSearch(null, columnTree, depthFirstCallback);\n  return {\n    columnTree,\n    treeDepth: maxDepth\n  };\n}\nfunction _createColumnTree(beans, defs = null, primaryColumns, existingTree, source) {\n  const columnKeyCreator = new ColumnKeyCreator();\n  const {\n    existingCols,\n    existingGroups,\n    existingColKeys\n  } = extractExistingTreeData(existingTree);\n  columnKeyCreator.addExistingKeys(existingColKeys);\n  const unbalancedTree = _recursivelyCreateColumns(beans, defs, 0, primaryColumns, existingCols, columnKeyCreator, existingGroups, source);\n  const {\n    colGroupSvc\n  } = beans;\n  const treeDepth = colGroupSvc?.findMaxDepth(unbalancedTree, 0) ?? 0;\n  const columnTree = colGroupSvc ? colGroupSvc.balanceColumnTree(unbalancedTree, 0, treeDepth, columnKeyCreator) : unbalancedTree;\n  const depthFirstCallback = (child, parent) => {\n    if (isProvidedColumnGroup(child)) {\n      child.setupExpandable();\n    }\n    child.originalParent = parent;\n  };\n  depthFirstOriginalTreeSearch(null, columnTree, depthFirstCallback);\n  return {\n    columnTree,\n    treeDepth\n  };\n}\nfunction extractExistingTreeData(existingTree) {\n  const existingCols = [];\n  const existingGroups = [];\n  const existingColKeys = [];\n  if (existingTree) {\n    depthFirstOriginalTreeSearch(null, existingTree, item => {\n      if (isProvidedColumnGroup(item)) {\n        const group = item;\n        existingGroups.push(group);\n      } else {\n        const col = item;\n        existingColKeys.push(col.getId());\n        existingCols.push(col);\n      }\n    });\n  }\n  return {\n    existingCols,\n    existingGroups,\n    existingColKeys\n  };\n}\nfunction _recursivelyCreateColumns(beans, defs, level, primaryColumns, existingColsCopy, columnKeyCreator, existingGroups, source) {\n  if (!defs) return [];\n  const {\n    colGroupSvc\n  } = beans;\n  const result = new Array(defs.length);\n  for (let i = 0; i < result.length; i++) {\n    const def = defs[i];\n    if (colGroupSvc && isColumnGroupDef(def)) {\n      result[i] = colGroupSvc.createProvidedColumnGroup(primaryColumns, def, level, existingColsCopy, columnKeyCreator, existingGroups, source);\n    } else {\n      result[i] = createColumn(beans, primaryColumns, def, existingColsCopy, columnKeyCreator, source);\n    }\n  }\n  return result;\n}\nfunction createColumn(beans, primaryColumns, colDef, existingColsCopy, columnKeyCreator, source) {\n  const existingColAndIndex = findExistingColumn(colDef, existingColsCopy);\n  if (existingColAndIndex) {\n    existingColsCopy?.splice(existingColAndIndex.idx, 1);\n  }\n  let column = existingColAndIndex?.column;\n  if (!column) {\n    const colId = columnKeyCreator.getUniqueKey(colDef.colId, colDef.field);\n    const colDefMerged = _addColumnDefaultAndTypes(beans, colDef, colId);\n    column = new AgColumn(colDefMerged, colDef, colId, primaryColumns);\n    beans.context.createBean(column);\n  } else {\n    const colDefMerged = _addColumnDefaultAndTypes(beans, colDef, column.getColId());\n    column.setColDef(colDefMerged, colDef, source);\n    _updateColumnState(beans, column, colDefMerged, source);\n  }\n  beans.dataTypeSvc?.addColumnListeners(column);\n  return column;\n}\nfunction updateSomeColumnState(beans, column, hide, sort, sortIndex, pinned, flex, source) {\n  const {\n    sortSvc,\n    pinnedCols,\n    colFlex\n  } = beans;\n  if (hide !== void 0) {\n    column.setVisible(!hide, source);\n  }\n  if (sortSvc) {\n    sortSvc.updateColSort(column, sort, source);\n    if (sortIndex !== void 0) {\n      sortSvc.setColSortIndex(column, sortIndex);\n    }\n  }\n  if (pinned !== void 0) {\n    pinnedCols?.setColPinned(column, pinned);\n  }\n  if (flex !== void 0) {\n    colFlex?.setColFlex(column, flex);\n  }\n}\nfunction _updateColumnState(beans, column, colDef, source) {\n  updateSomeColumnState(beans, column, colDef.hide, colDef.sort, colDef.sortIndex, colDef.pinned, colDef.flex, source);\n  const colFlex = column.getFlex();\n  if (colFlex != null && colFlex > 0) {\n    return;\n  }\n  if (colDef.width != null) {\n    column.setActualWidth(colDef.width, source);\n  } else {\n    const widthBeforeUpdate = column.getActualWidth();\n    column.setActualWidth(widthBeforeUpdate, source);\n  }\n}\nfunction findExistingColumn(newColDef, existingColsCopy) {\n  if (!existingColsCopy) return void 0;\n  for (let i = 0; i < existingColsCopy.length; i++) {\n    const def = existingColsCopy[i].getUserProvidedColDef();\n    if (!def) continue;\n    const newHasId = newColDef.colId != null;\n    if (newHasId) {\n      if (existingColsCopy[i].getId() === newColDef.colId) {\n        return {\n          idx: i,\n          column: existingColsCopy[i]\n        };\n      }\n      continue;\n    }\n    const newHasField = newColDef.field != null;\n    if (newHasField) {\n      if (def.field === newColDef.field) {\n        return {\n          idx: i,\n          column: existingColsCopy[i]\n        };\n      }\n      continue;\n    }\n    if (def === newColDef) {\n      return {\n        idx: i,\n        column: existingColsCopy[i]\n      };\n    }\n  }\n  return void 0;\n}\nfunction _addColumnDefaultAndTypes(beans, colDef, colId, isAutoCol) {\n  const {\n    gos,\n    dataTypeSvc\n  } = beans;\n  const res = {};\n  const defaultColDef = gos.get(\"defaultColDef\");\n  _mergeDeep(res, defaultColDef, false, true);\n  const columnType = updateColDefAndGetColumnType(beans, res, colDef, colId);\n  if (columnType) {\n    assignColumnTypes(beans, columnType, res);\n  }\n  const cellDataType = res.cellDataType;\n  _mergeDeep(res, colDef, false, true);\n  if (cellDataType !== void 0) {\n    res.cellDataType = cellDataType;\n  }\n  const autoGroupColDef = gos.get(\"autoGroupColumnDef\");\n  const isSortingCoupled = _isColumnsSortingCoupledToGroup(gos);\n  if (colDef.rowGroup && autoGroupColDef && isSortingCoupled) {\n    _mergeDeep(res, {\n      sort: autoGroupColDef.sort,\n      initialSort: autoGroupColDef.initialSort\n    }, false, true);\n  }\n  if (dataTypeSvc) {\n    dataTypeSvc.postProcess(res);\n    dataTypeSvc.validateColDef(res);\n  }\n  gos.validateColDef(res, colId, isAutoCol);\n  return res;\n}\nfunction updateColDefAndGetColumnType(beans, colDef, userColDef, colId) {\n  const dataTypeDefinitionColumnType = beans.dataTypeSvc?.updateColDefAndGetColumnType(colDef, userColDef, colId);\n  const columnTypes = userColDef.type ?? dataTypeDefinitionColumnType ?? colDef.type;\n  colDef.type = columnTypes;\n  return columnTypes ? convertColumnTypes(columnTypes) : void 0;\n}\nfunction assignColumnTypes(beans, typeKeys, colDefMerged) {\n  if (!typeKeys.length) {\n    return;\n  }\n  const allColumnTypes = Object.assign({}, DefaultColumnTypes);\n  const userTypes = beans.gos.get(\"columnTypes\") || {};\n  for (const key of Object.keys(userTypes)) {\n    const value = userTypes[key];\n    if (key in allColumnTypes) {\n      _warn(34, {\n        key\n      });\n    } else {\n      const colType = value;\n      if (colType.type) {\n        _warn(35);\n      }\n      allColumnTypes[key] = value;\n    }\n  }\n  typeKeys.forEach(t => {\n    const typeColDef = allColumnTypes[t.trim()];\n    if (typeColDef) {\n      _mergeDeep(colDefMerged, typeColDef, false, true);\n    } else {\n      _warn(36, {\n        t\n      });\n    }\n  });\n}\nfunction isColumnGroupDef(abstractColDef) {\n  return abstractColDef.children !== void 0;\n}\nfunction depthFirstOriginalTreeSearch(parent, tree, callback) {\n  if (!tree) {\n    return;\n  }\n  for (let i = 0; i < tree.length; i++) {\n    const child = tree[i];\n    if (isProvidedColumnGroup(child)) {\n      depthFirstOriginalTreeSearch(child, child.getChildren(), callback);\n    }\n    callback(child, parent);\n  }\n}\n\n// packages/ag-grid-community/src/columnMove/columnMoveUtils.ts\nfunction placeLockedColumns(cols, gos) {\n  const left = [];\n  const normal = [];\n  const right = [];\n  cols.forEach(col => {\n    const position = col.getColDef().lockPosition;\n    if (position === \"right\") {\n      right.push(col);\n    } else if (position === \"left\" || position === true) {\n      left.push(col);\n    } else {\n      normal.push(col);\n    }\n  });\n  const isRtl = gos.get(\"enableRtl\");\n  if (isRtl) {\n    return [...right, ...normal, ...left];\n  }\n  return [...left, ...normal, ...right];\n}\nfunction doesMovePassMarryChildren(allColumnsCopy, gridBalancedTree) {\n  let rulePassed = true;\n  depthFirstOriginalTreeSearch(null, gridBalancedTree, child => {\n    if (!isProvidedColumnGroup(child)) {\n      return;\n    }\n    const columnGroup = child;\n    const colGroupDef = columnGroup.getColGroupDef();\n    const marryChildren = colGroupDef && colGroupDef.marryChildren;\n    if (!marryChildren) {\n      return;\n    }\n    const newIndexes = [];\n    columnGroup.getLeafColumns().forEach(col => {\n      const newColIndex = allColumnsCopy.indexOf(col);\n      newIndexes.push(newColIndex);\n    });\n    const maxIndex = Math.max.apply(Math, newIndexes);\n    const minIndex = Math.min.apply(Math, newIndexes);\n    const spread = maxIndex - minIndex;\n    const maxSpread = columnGroup.getLeafColumns().length - 1;\n    if (spread > maxSpread) {\n      rulePassed = false;\n    }\n  });\n  return rulePassed;\n}\n\n// packages/ag-grid-community/src/columns/columnEventUtils.ts\nfunction getCommonValue(cols, valueGetter) {\n  if (!cols || cols.length == 0) {\n    return void 0;\n  }\n  const firstValue = valueGetter(cols[0]);\n  for (let i = 1; i < cols.length; i++) {\n    if (firstValue !== valueGetter(cols[i])) {\n      return void 0;\n    }\n  }\n  return firstValue;\n}\nfunction dispatchColumnPinnedEvent(eventSvc, changedColumns, source) {\n  if (!changedColumns.length) {\n    return;\n  }\n  const column = changedColumns.length === 1 ? changedColumns[0] : null;\n  const pinned = getCommonValue(changedColumns, col => col.getPinned());\n  eventSvc.dispatchEvent({\n    type: \"columnPinned\",\n    // mistake in typing, 'undefined' should be allowed, as 'null' means 'not pinned'\n    pinned: pinned != null ? pinned : null,\n    columns: changedColumns,\n    column,\n    source\n  });\n}\nfunction dispatchColumnVisibleEvent(eventSvc, changedColumns, source) {\n  if (!changedColumns.length) {\n    return;\n  }\n  const column = changedColumns.length === 1 ? changedColumns[0] : null;\n  const visible = getCommonValue(changedColumns, col => col.isVisible());\n  eventSvc.dispatchEvent({\n    type: \"columnVisible\",\n    visible,\n    columns: changedColumns,\n    column,\n    source\n  });\n}\nfunction dispatchColumnChangedEvent(eventSvc, type, columns, source) {\n  eventSvc.dispatchEvent({\n    type,\n    columns,\n    column: columns && columns.length == 1 ? columns[0] : null,\n    source\n  });\n}\nfunction dispatchColumnResizedEvent(eventSvc, columns, finished, source, flexColumns = null) {\n  if (columns?.length) {\n    eventSvc.dispatchEvent({\n      type: \"columnResized\",\n      columns,\n      column: columns.length === 1 ? columns[0] : null,\n      flexColumns,\n      finished,\n      source\n    });\n  }\n}\n\n// packages/ag-grid-community/src/columns/columnStateUtils.ts\nfunction _applyColumnState(beans, params, source) {\n  const {\n    colModel,\n    rowGroupColsSvc,\n    pivotColsSvc,\n    autoColSvc,\n    selectionColSvc,\n    colAnimation,\n    visibleCols,\n    pivotResultCols,\n    environment,\n    valueColsSvc,\n    eventSvc,\n    gos\n  } = beans;\n  const providedCols = colModel.getColDefCols() ?? [];\n  const selectionCols = selectionColSvc?.getColumns();\n  if (!providedCols?.length && !selectionCols?.length) {\n    return false;\n  }\n  if (params?.state && !params.state.forEach) {\n    _warn(32);\n    return false;\n  }\n  const syncColumnWithStateItem = (column, stateItem, rowGroupIndexes, pivotIndexes, autoCol) => {\n    if (!column) {\n      return;\n    }\n    const getValue = getValueFactory(stateItem, params.defaultState);\n    const flex = getValue(\"flex\").value1;\n    updateSomeColumnState(beans, column, getValue(\"hide\").value1, getValue(\"sort\").value1, getValue(\"sortIndex\").value1, getValue(\"pinned\").value1, flex, source);\n    if (flex == null) {\n      const width = getValue(\"width\").value1;\n      if (width != null) {\n        const minColWidth = column.getColDef().minWidth ?? environment.getDefaultColumnMinWidth();\n        if (minColWidth != null && width >= minColWidth) {\n          column.setActualWidth(width, source);\n        }\n      }\n    }\n    if (autoCol || !column.isPrimary()) {\n      return;\n    }\n    valueColsSvc?.syncColumnWithState(column, source, getValue);\n    rowGroupColsSvc?.syncColumnWithState(column, source, getValue, rowGroupIndexes);\n    pivotColsSvc?.syncColumnWithState(column, source, getValue, pivotIndexes);\n  };\n  const applyStates = (states, existingColumns, getById2) => {\n    const dispatchEventsFunc = _compareColumnStatesAndDispatchEvents(beans, source);\n    const columnsWithNoState = existingColumns.slice();\n    const rowGroupIndexes = {};\n    const pivotIndexes = {};\n    const autoColStates = [];\n    const selectionColStates = [];\n    const unmatchedAndAutoStates2 = [];\n    let unmatchedCount2 = 0;\n    const previousRowGroupCols = rowGroupColsSvc?.columns.slice() ?? [];\n    const previousPivotCols = pivotColsSvc?.columns.slice() ?? [];\n    states.forEach(state => {\n      const colId = state.colId;\n      const isAutoGroupColumn = colId.startsWith(GROUP_AUTO_COLUMN_ID);\n      if (isAutoGroupColumn) {\n        autoColStates.push(state);\n        unmatchedAndAutoStates2.push(state);\n        return;\n      }\n      if (isColumnSelectionCol(colId)) {\n        selectionColStates.push(state);\n        unmatchedAndAutoStates2.push(state);\n        return;\n      }\n      const column = getById2(colId);\n      if (!column) {\n        unmatchedAndAutoStates2.push(state);\n        unmatchedCount2 += 1;\n      } else {\n        syncColumnWithStateItem(column, state, rowGroupIndexes, pivotIndexes, false);\n        _removeFromArray(columnsWithNoState, column);\n      }\n    });\n    const applyDefaultsFunc = col => syncColumnWithStateItem(col, null, rowGroupIndexes, pivotIndexes, false);\n    columnsWithNoState.forEach(applyDefaultsFunc);\n    rowGroupColsSvc?.sortColumns(comparatorByIndex.bind(rowGroupColsSvc, rowGroupIndexes, previousRowGroupCols));\n    pivotColsSvc?.sortColumns(comparatorByIndex.bind(pivotColsSvc, pivotIndexes, previousPivotCols));\n    colModel.refreshCols(false);\n    const syncColStates = (getCol, colStates, columns = []) => {\n      colStates.forEach(stateItem => {\n        const col = getCol(stateItem.colId);\n        _removeFromArray(columns, col);\n        syncColumnWithStateItem(col, stateItem, null, null, true);\n      });\n      columns.forEach(applyDefaultsFunc);\n    };\n    syncColStates(colId => autoColSvc?.getColumn(colId) ?? null, autoColStates, autoColSvc?.getColumns()?.slice());\n    syncColStates(colId => selectionColSvc?.getColumn(colId) ?? null, selectionColStates, selectionColSvc?.getColumns()?.slice());\n    orderLiveColsLikeState(params, colModel, gos);\n    visibleCols.refresh(source);\n    eventSvc.dispatchEvent({\n      type: \"columnEverythingChanged\",\n      source\n    });\n    dispatchEventsFunc();\n    return {\n      unmatchedAndAutoStates: unmatchedAndAutoStates2,\n      unmatchedCount: unmatchedCount2\n    };\n  };\n  colAnimation?.start();\n  let {\n    unmatchedAndAutoStates,\n    unmatchedCount\n  } = applyStates(params.state || [], providedCols, id => colModel.getColDefCol(id));\n  if (unmatchedAndAutoStates.length > 0 || _exists(params.defaultState)) {\n    const pivotResultColsList = pivotResultCols?.getPivotResultCols()?.list ?? [];\n    unmatchedCount = applyStates(unmatchedAndAutoStates, pivotResultColsList, id => pivotResultCols?.getPivotResultCol(id) ?? null).unmatchedCount;\n  }\n  colAnimation?.finish();\n  return unmatchedCount === 0;\n}\nfunction _resetColumnState(beans, source) {\n  const {\n    colModel,\n    autoColSvc,\n    selectionColSvc,\n    eventSvc,\n    gos\n  } = beans;\n  const primaryCols = colModel.getColDefCols();\n  if (!primaryCols?.length) {\n    return;\n  }\n  const primaryColumnTree = colModel.getColDefColTree();\n  const primaryColumns = _getColumnsFromTree(primaryColumnTree);\n  const columnStates = [];\n  let letRowGroupIndex = 1e3;\n  let letPivotIndex = 1e3;\n  const addColState = col => {\n    const stateItem = getColumnStateFromColDef(col);\n    if (_missing(stateItem.rowGroupIndex) && stateItem.rowGroup) {\n      stateItem.rowGroupIndex = letRowGroupIndex++;\n    }\n    if (_missing(stateItem.pivotIndex) && stateItem.pivot) {\n      stateItem.pivotIndex = letPivotIndex++;\n    }\n    columnStates.push(stateItem);\n  };\n  autoColSvc?.getColumns()?.forEach(addColState);\n  selectionColSvc?.getColumns()?.forEach(addColState);\n  primaryColumns?.forEach(addColState);\n  _applyColumnState(beans, {\n    state: columnStates\n  }, source);\n  const autoCols = autoColSvc?.getColumns() ?? [];\n  const selectionCols = selectionColSvc?.getColumns() ?? [];\n  const orderedCols = [...selectionCols, ...autoCols, ...primaryCols];\n  const orderedColState = orderedCols.map(col => ({\n    colId: col.colId\n  }));\n  _applyColumnState(beans, {\n    state: orderedColState,\n    applyOrder: true\n  }, source);\n  eventSvc.dispatchEvent(_addGridCommonParams(gos, {\n    type: \"columnsReset\",\n    source\n  }));\n}\nfunction _compareColumnStatesAndDispatchEvents(beans, source) {\n  const {\n    rowGroupColsSvc,\n    pivotColsSvc,\n    valueColsSvc,\n    colModel,\n    sortSvc,\n    eventSvc\n  } = beans;\n  const startState = {\n    rowGroupColumns: rowGroupColsSvc?.columns.slice() ?? [],\n    pivotColumns: pivotColsSvc?.columns.slice() ?? [],\n    valueColumns: valueColsSvc?.columns.slice() ?? []\n  };\n  const columnStateBefore = _getColumnState(beans);\n  const columnStateBeforeMap = {};\n  columnStateBefore.forEach(col => {\n    columnStateBeforeMap[col.colId] = col;\n  });\n  return () => {\n    const dispatchWhenListsDifferent = (eventType, colsBefore, colsAfter, idMapper) => {\n      const beforeList = colsBefore.map(idMapper);\n      const afterList = colsAfter.map(idMapper);\n      const unchanged = _areEqual(beforeList, afterList);\n      if (unchanged) {\n        return;\n      }\n      const changes = new Set(colsBefore);\n      colsAfter.forEach(id => {\n        if (!changes.delete(id)) {\n          changes.add(id);\n        }\n      });\n      const changesArr = [...changes];\n      eventSvc.dispatchEvent({\n        type: eventType,\n        columns: changesArr,\n        column: changesArr.length === 1 ? changesArr[0] : null,\n        source\n      });\n    };\n    const getChangedColumns = changedPredicate => {\n      const changedColumns2 = [];\n      colModel.forAllCols(column => {\n        const colStateBefore = columnStateBeforeMap[column.getColId()];\n        if (colStateBefore && changedPredicate(colStateBefore, column)) {\n          changedColumns2.push(column);\n        }\n      });\n      return changedColumns2;\n    };\n    const columnIdMapper = c => c.getColId();\n    dispatchWhenListsDifferent(\"columnRowGroupChanged\", startState.rowGroupColumns, rowGroupColsSvc?.columns ?? [], columnIdMapper);\n    dispatchWhenListsDifferent(\"columnPivotChanged\", startState.pivotColumns, pivotColsSvc?.columns ?? [], columnIdMapper);\n    const valueChangePredicate = (cs, c) => {\n      const oldActive = cs.aggFunc != null;\n      const activeChanged = oldActive != c.isValueActive();\n      const aggFuncChanged = oldActive && cs.aggFunc != c.getAggFunc();\n      return activeChanged || aggFuncChanged;\n    };\n    const changedValues = getChangedColumns(valueChangePredicate);\n    if (changedValues.length > 0) {\n      dispatchColumnChangedEvent(eventSvc, \"columnValueChanged\", changedValues, source);\n    }\n    const resizeChangePredicate = (cs, c) => cs.width != c.getActualWidth();\n    dispatchColumnResizedEvent(eventSvc, getChangedColumns(resizeChangePredicate), true, source);\n    const pinnedChangePredicate = (cs, c) => cs.pinned != c.getPinned();\n    dispatchColumnPinnedEvent(eventSvc, getChangedColumns(pinnedChangePredicate), source);\n    const visibilityChangePredicate = (cs, c) => cs.hide == c.isVisible();\n    dispatchColumnVisibleEvent(eventSvc, getChangedColumns(visibilityChangePredicate), source);\n    const sortChangePredicate = (cs, c) => cs.sort != c.getSort() || cs.sortIndex != c.getSortIndex();\n    const changedColumns = getChangedColumns(sortChangePredicate);\n    if (changedColumns.length > 0) {\n      sortSvc?.dispatchSortChangedEvents(source, changedColumns);\n    }\n    const colStateAfter = _getColumnState(beans);\n    normaliseColumnMovedEventForColumnState(columnStateBefore, colStateAfter, source, colModel, eventSvc);\n  };\n}\nfunction _getColumnState(beans) {\n  const {\n    colModel,\n    rowGroupColsSvc,\n    pivotColsSvc\n  } = beans;\n  const primaryCols = colModel.getColDefCols();\n  if (_missing(primaryCols) || !colModel.isAlive()) {\n    return [];\n  }\n  const rowGroupColumns = rowGroupColsSvc?.columns;\n  const pivotColumns = pivotColsSvc?.columns;\n  const res = [];\n  const createStateItemFromColumn = column => {\n    const rowGroupIndex = column.isRowGroupActive() && rowGroupColumns ? rowGroupColumns.indexOf(column) : null;\n    const pivotIndex = column.isPivotActive() && pivotColumns ? pivotColumns.indexOf(column) : null;\n    const aggFunc = column.isValueActive() ? column.getAggFunc() : null;\n    const sort = column.getSort() != null ? column.getSort() : null;\n    const sortIndex = column.getSortIndex() != null ? column.getSortIndex() : null;\n    res.push({\n      colId: column.getColId(),\n      width: column.getActualWidth(),\n      hide: !column.isVisible(),\n      pinned: column.getPinned(),\n      sort,\n      sortIndex,\n      aggFunc,\n      rowGroup: column.isRowGroupActive(),\n      rowGroupIndex,\n      pivot: column.isPivotActive(),\n      pivotIndex,\n      flex: column.getFlex() ?? null\n    });\n  };\n  colModel.forAllCols(col => createStateItemFromColumn(col));\n  const colIdToGridIndexMap = new Map(colModel.getCols().map((col, index) => [col.getColId(), index]));\n  res.sort((itemA, itemB) => {\n    const posA = colIdToGridIndexMap.has(itemA.colId) ? colIdToGridIndexMap.get(itemA.colId) : -1;\n    const posB = colIdToGridIndexMap.has(itemB.colId) ? colIdToGridIndexMap.get(itemB.colId) : -1;\n    return posA - posB;\n  });\n  return res;\n}\nfunction getColumnStateFromColDef(column) {\n  const getValueOrNull = (a, b) => a != null ? a : b != null ? b : null;\n  const colDef = column.getColDef();\n  const sort = getValueOrNull(colDef.sort, colDef.initialSort);\n  const sortIndex = getValueOrNull(colDef.sortIndex, colDef.initialSortIndex);\n  const hide = getValueOrNull(colDef.hide, colDef.initialHide);\n  const pinned = getValueOrNull(colDef.pinned, colDef.initialPinned);\n  const width = getValueOrNull(colDef.width, colDef.initialWidth);\n  const flex = getValueOrNull(colDef.flex, colDef.initialFlex);\n  let rowGroupIndex = getValueOrNull(colDef.rowGroupIndex, colDef.initialRowGroupIndex);\n  let rowGroup = getValueOrNull(colDef.rowGroup, colDef.initialRowGroup);\n  if (rowGroupIndex == null && (rowGroup == null || rowGroup == false)) {\n    rowGroupIndex = null;\n    rowGroup = null;\n  }\n  let pivotIndex = getValueOrNull(colDef.pivotIndex, colDef.initialPivotIndex);\n  let pivot = getValueOrNull(colDef.pivot, colDef.initialPivot);\n  if (pivotIndex == null && (pivot == null || pivot == false)) {\n    pivotIndex = null;\n    pivot = null;\n  }\n  const aggFunc = getValueOrNull(colDef.aggFunc, colDef.initialAggFunc);\n  return {\n    colId: column.getColId(),\n    sort,\n    sortIndex,\n    hide,\n    pinned,\n    width,\n    flex,\n    rowGroup,\n    rowGroupIndex,\n    pivot,\n    pivotIndex,\n    aggFunc\n  };\n}\nfunction orderLiveColsLikeState(params, colModel, gos) {\n  if (!params.applyOrder || !params.state) {\n    return;\n  }\n  const colIds = [];\n  params.state.forEach(item => {\n    if (item.colId != null) {\n      colIds.push(item.colId);\n    }\n  });\n  sortColsLikeKeys(colModel.cols, colIds, colModel, gos);\n}\nfunction sortColsLikeKeys(cols, colIds, colModel, gos) {\n  if (cols == null) {\n    return;\n  }\n  let newOrder = [];\n  const processedColIds = {};\n  colIds.forEach(colId => {\n    if (processedColIds[colId]) {\n      return;\n    }\n    const col = cols.map[colId];\n    if (col) {\n      newOrder.push(col);\n      processedColIds[colId] = true;\n    }\n  });\n  let autoGroupInsertIndex = 0;\n  cols.list.forEach(col => {\n    const colId = col.getColId();\n    const alreadyProcessed = processedColIds[colId] != null;\n    if (alreadyProcessed) {\n      return;\n    }\n    const isAutoGroupCol = colId.startsWith(GROUP_AUTO_COLUMN_ID);\n    if (isAutoGroupCol) {\n      newOrder.splice(autoGroupInsertIndex++, 0, col);\n    } else {\n      newOrder.push(col);\n    }\n  });\n  newOrder = placeLockedColumns(newOrder, gos);\n  if (!doesMovePassMarryChildren(newOrder, colModel.getColTree())) {\n    _warn(39);\n    return;\n  }\n  cols.list = newOrder;\n}\nfunction normaliseColumnMovedEventForColumnState(colStateBefore, colStateAfter, source, colModel, eventSvc) {\n  const colStateAfterMapped = {};\n  colStateAfter.forEach(s => colStateAfterMapped[s.colId] = s);\n  const colsIntersectIds = {};\n  colStateBefore.forEach(s => {\n    if (colStateAfterMapped[s.colId]) {\n      colsIntersectIds[s.colId] = true;\n    }\n  });\n  const beforeFiltered = colStateBefore.filter(c => colsIntersectIds[c.colId]);\n  const afterFiltered = colStateAfter.filter(c => colsIntersectIds[c.colId]);\n  const movedColumns = [];\n  afterFiltered.forEach((csAfter, index) => {\n    const csBefore = beforeFiltered && beforeFiltered[index];\n    if (csBefore && csBefore.colId !== csAfter.colId) {\n      const gridCol = colModel.getCol(csBefore.colId);\n      if (gridCol) {\n        movedColumns.push(gridCol);\n      }\n    }\n  });\n  if (!movedColumns.length) {\n    return;\n  }\n  eventSvc.dispatchEvent({\n    type: \"columnMoved\",\n    columns: movedColumns,\n    column: movedColumns.length === 1 ? movedColumns[0] : null,\n    finished: true,\n    source\n  });\n}\nvar comparatorByIndex = (indexes, oldList, colA, colB) => {\n  const indexA = indexes[colA.getId()];\n  const indexB = indexes[colB.getId()];\n  const aHasIndex = indexA != null;\n  const bHasIndex = indexB != null;\n  if (aHasIndex && bHasIndex) {\n    return indexA - indexB;\n  }\n  if (aHasIndex) {\n    return -1;\n  }\n  if (bHasIndex) {\n    return 1;\n  }\n  const oldIndexA = oldList.indexOf(colA);\n  const oldIndexB = oldList.indexOf(colB);\n  const aHasOldIndex = oldIndexA >= 0;\n  const bHasOldIndex = oldIndexB >= 0;\n  if (aHasOldIndex && bHasOldIndex) {\n    return oldIndexA - oldIndexB;\n  }\n  if (aHasOldIndex) {\n    return -1;\n  }\n  return 1;\n};\n\n// packages/ag-grid-community/src/columns/columnModel.ts\nvar ColumnModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colModel\";\n    // if pivotMode is on, however pivot results are NOT shown if no pivot columns are set\n    this.pivotMode = false;\n    this.ready = false;\n    this.changeEventsDispatching = false;\n  }\n  postConstruct() {\n    this.pivotMode = this.gos.get(\"pivotMode\");\n    this.addManagedPropertyListeners([\"groupDisplayType\", \"treeData\", \"treeDataDisplayType\", \"groupHideOpenParents\", \"rowNumbers\", \"hidePaddedHeaderRows\"], event => this.refreshAll(_convertColumnEventSourceType(event.source)));\n    this.addManagedPropertyListeners([\"defaultColDef\", \"defaultColGroupDef\", \"columnTypes\", \"suppressFieldDotNotation\"], this.recreateColumnDefs.bind(this));\n    this.addManagedPropertyListener(\"pivotMode\", event => this.setPivotMode(this.gos.get(\"pivotMode\"), _convertColumnEventSourceType(event.source)));\n  }\n  // called from SyncService, when grid has finished initialising\n  createColsFromColDefs(source) {\n    const {\n      beans\n    } = this;\n    const {\n      valueCache,\n      colAutosize,\n      rowGroupColsSvc,\n      pivotColsSvc,\n      valueColsSvc,\n      visibleCols,\n      eventSvc\n    } = beans;\n    const dispatchEventsFunc = this.colDefs ? _compareColumnStatesAndDispatchEvents(beans, source) : void 0;\n    valueCache?.expire();\n    const oldCols = this.colDefCols?.list;\n    const oldTree = this.colDefCols?.tree;\n    const newTree = _createColumnTree(beans, this.colDefs, true, oldTree, source);\n    _destroyColumnTree(beans, this.colDefCols?.tree, newTree.columnTree);\n    const tree = newTree.columnTree;\n    const treeDepth = newTree.treeDepth;\n    const list = _getColumnsFromTree(tree);\n    const map = {};\n    list.forEach(col => map[col.getId()] = col);\n    this.colDefCols = {\n      tree,\n      treeDepth,\n      list,\n      map\n    };\n    rowGroupColsSvc?.extractCols(source, oldCols);\n    pivotColsSvc?.extractCols(source, oldCols);\n    valueColsSvc?.extractCols(source, oldCols);\n    this.ready = true;\n    this.refreshCols(true);\n    visibleCols.refresh(source);\n    eventSvc.dispatchEvent({\n      type: \"columnEverythingChanged\",\n      source\n    });\n    if (dispatchEventsFunc) {\n      this.changeEventsDispatching = true;\n      dispatchEventsFunc();\n      this.changeEventsDispatching = false;\n    }\n    eventSvc.dispatchEvent({\n      type: \"newColumnsLoaded\",\n      source\n    });\n    if (source === \"gridInitializing\") {\n      colAutosize?.applyAutosizeStrategy();\n    }\n  }\n  // called from: buildAutoGroupColumns (events 'groupDisplayType', 'treeData', 'treeDataDisplayType', 'groupHideOpenParents')\n  // createColsFromColDefs (recreateColumnDefs, setColumnsDefs),\n  // setPivotMode, applyColumnState,\n  // functionColsService.setPrimaryColList, functionColsService.updatePrimaryColList,\n  // pivotResultCols.setPivotResultCols\n  refreshCols(newColDefs) {\n    if (!this.colDefCols) {\n      return;\n    }\n    const prevColTree = this.cols?.tree;\n    this.saveColOrder();\n    const {\n      autoColSvc,\n      selectionColSvc,\n      rowNumbersSvc,\n      quickFilter,\n      pivotResultCols,\n      showRowGroupCols,\n      rowAutoHeight,\n      visibleCols,\n      colViewport,\n      eventSvc\n    } = this.beans;\n    const cols = this.selectCols(pivotResultCols, this.colDefCols);\n    this.createColumnsForService([autoColSvc, selectionColSvc, rowNumbersSvc], cols);\n    const shouldSortNewColDefs = _shouldMaintainColumnOrder(this.gos, this.showingPivotResult);\n    if (!newColDefs || shouldSortNewColDefs) {\n      this.restoreColOrder(cols);\n    }\n    this.positionLockedCols(cols);\n    showRowGroupCols?.refresh();\n    quickFilter?.refreshCols();\n    this.setColSpanActive();\n    rowAutoHeight?.setAutoHeightActive(cols);\n    visibleCols.clear();\n    colViewport.clear();\n    const dispatchChangedEvent = !_areEqual(prevColTree, this.cols.tree);\n    if (dispatchChangedEvent) {\n      eventSvc.dispatchEvent({\n        type: \"gridColumnsChanged\"\n      });\n    }\n  }\n  createColumnsForService(services, cols) {\n    for (const service of services) {\n      if (!service) {\n        continue;\n      }\n      service.createColumns(cols, updateOrder => {\n        this.lastOrder = updateOrder(this.lastOrder);\n        this.lastPivotOrder = updateOrder(this.lastPivotOrder);\n      });\n      service.addColumns(cols);\n    }\n  }\n  selectCols(pivotResultColsSvc, colDefCols) {\n    const pivotResultCols = pivotResultColsSvc?.getPivotResultCols() ?? null;\n    this.showingPivotResult = pivotResultCols != null;\n    const {\n      map,\n      list,\n      tree,\n      treeDepth\n    } = pivotResultCols ?? colDefCols;\n    this.cols = {\n      list: list.slice(),\n      map: {\n        ...map\n      },\n      tree: tree.slice(),\n      treeDepth\n    };\n    if (pivotResultCols) {\n      const hasSameColumns = pivotResultCols.list.some(col => this.cols?.map[col.getColId()] !== void 0);\n      if (!hasSameColumns) {\n        this.lastPivotOrder = null;\n      }\n    }\n    return this.cols;\n  }\n  getColsToShow() {\n    if (!this.cols) {\n      return [];\n    }\n    const {\n      valueColsSvc,\n      selectionColSvc,\n      gos\n    } = this.beans;\n    const showAutoGroupAndValuesOnly = this.isPivotMode() && !this.showingPivotResult;\n    const showSelectionColumn = selectionColSvc?.isSelectionColumnEnabled();\n    const showRowNumbers = gos.get(\"rowNumbers\");\n    const valueColumns = valueColsSvc?.columns;\n    const res = this.cols.list.filter(col => {\n      const isAutoGroupCol = isColumnGroupAutoCol(col);\n      if (showAutoGroupAndValuesOnly) {\n        const isValueCol = valueColumns?.includes(col);\n        return isAutoGroupCol || isValueCol || showSelectionColumn && isColumnSelectionCol(col) || showRowNumbers && isRowNumberCol(col);\n      } else {\n        return isAutoGroupCol || col.isVisible();\n      }\n    });\n    return res;\n  }\n  // on events 'groupDisplayType', 'treeData', 'treeDataDisplayType', 'groupHideOpenParents'\n  refreshAll(source) {\n    if (!this.ready) {\n      return;\n    }\n    this.refreshCols(false);\n    this.beans.visibleCols.refresh(source);\n  }\n  setColsVisible(keys, visible = false, source) {\n    _applyColumnState(this.beans, {\n      state: keys.map(key => ({\n        colId: typeof key === \"string\" ? key : key.getColId(),\n        hide: !visible\n      }))\n    }, source);\n  }\n  /**\n   * Restores provided columns order to the previous order in this.lastPivotOrder / this.lastOrder\n   * If columns are not in the last order:\n   *  - Check column groups, and apply column after the last column in the lowest shared group\n   *  - If no sibling is found, apply the column at the end of the cols\n   */\n  restoreColOrder(cols) {\n    const lastOrder = this.showingPivotResult ? this.lastPivotOrder : this.lastOrder;\n    if (!lastOrder) {\n      return;\n    }\n    const preservedOrder = lastOrder.filter(col => cols.map[col.getId()] != null);\n    if (preservedOrder.length === 0) {\n      return;\n    }\n    if (preservedOrder.length === cols.list.length) {\n      cols.list = preservedOrder;\n      return;\n    }\n    const hasSiblings = col => {\n      const ancestor = col.getOriginalParent();\n      if (!ancestor) {\n        return false;\n      }\n      const children = ancestor.getChildren();\n      if (children.length > 1) {\n        return true;\n      }\n      return hasSiblings(ancestor);\n    };\n    if (!preservedOrder.some(col => hasSiblings(col))) {\n      const preservedOrderSet = new Set(preservedOrder);\n      for (const col of cols.list) {\n        if (!preservedOrderSet.has(col)) {\n          preservedOrder.push(col);\n        }\n      }\n      cols.list = preservedOrder;\n      return;\n    }\n    const colPositionMap = /* @__PURE__ */new Map();\n    for (let i = 0; i < preservedOrder.length; i++) {\n      const col = preservedOrder[i];\n      colPositionMap.set(col, i);\n    }\n    const additionalCols = cols.list.filter(col => !colPositionMap.has(col));\n    if (additionalCols.length === 0) {\n      cols.list = preservedOrder;\n      return;\n    }\n    const getPreviousSibling = (col, group) => {\n      const parent = group ? group.getOriginalParent() : col.getOriginalParent();\n      if (!parent) {\n        return null;\n      }\n      let highestIdx = null;\n      let highestSibling = null;\n      for (const child of parent.getChildren()) {\n        if (child === group || child === col) {\n          continue;\n        }\n        if (child instanceof AgColumn) {\n          const colIdx = colPositionMap.get(child);\n          if (colIdx == null) {\n            continue;\n          }\n          if (highestIdx == null || highestIdx < colIdx) {\n            highestIdx = colIdx;\n            highestSibling = child;\n          }\n          continue;\n        }\n        child.forEachLeafColumn(leafCol => {\n          const colIdx = colPositionMap.get(leafCol);\n          if (colIdx == null) {\n            return;\n          }\n          if (highestIdx == null || highestIdx < colIdx) {\n            highestIdx = colIdx;\n            highestSibling = leafCol;\n          }\n        });\n      }\n      if (highestSibling == null) {\n        return getPreviousSibling(col, parent);\n      }\n      return highestSibling;\n    };\n    const noSiblingsAvailable = [];\n    const previousSiblingPosMap = /* @__PURE__ */new Map();\n    for (const col of additionalCols) {\n      const prevSiblingIdx = getPreviousSibling(col, null);\n      if (prevSiblingIdx == null) {\n        noSiblingsAvailable.push(col);\n        continue;\n      }\n      const prev = previousSiblingPosMap.get(prevSiblingIdx);\n      if (prev === void 0) {\n        previousSiblingPosMap.set(prevSiblingIdx, col);\n      } else if (Array.isArray(prev)) {\n        prev.push(col);\n      } else {\n        previousSiblingPosMap.set(prevSiblingIdx, [prev, col]);\n      }\n    }\n    const result = new Array(cols.list.length);\n    let resultPointer = result.length - 1;\n    for (let i = noSiblingsAvailable.length - 1; i >= 0; i--) {\n      result[resultPointer--] = noSiblingsAvailable[i];\n    }\n    for (let i = preservedOrder.length - 1; i >= 0; i--) {\n      const nextCol = preservedOrder[i];\n      const extraCols = previousSiblingPosMap.get(nextCol);\n      if (extraCols) {\n        if (Array.isArray(extraCols)) {\n          for (let x = extraCols.length - 1; x >= 0; x--) {\n            const col = extraCols[x];\n            result[resultPointer--] = col;\n          }\n        } else {\n          result[resultPointer--] = extraCols;\n        }\n      }\n      result[resultPointer--] = nextCol;\n    }\n    cols.list = result;\n  }\n  positionLockedCols(cols) {\n    cols.list = placeLockedColumns(cols.list, this.gos);\n  }\n  saveColOrder() {\n    if (this.showingPivotResult) {\n      this.lastPivotOrder = this.cols?.list ?? null;\n    } else {\n      this.lastOrder = this.cols?.list ?? null;\n    }\n  }\n  getColumnDefs() {\n    return this.colDefCols ? this.beans.colDefFactory?.getColumnDefs(this.colDefCols.list, this.showingPivotResult, this.lastOrder, this.cols?.list ?? []) : void 0;\n  }\n  setColSpanActive() {\n    this.colSpanActive = !!this.cols?.list.some(col => col.getColDef().colSpan != null);\n  }\n  isPivotMode() {\n    return this.pivotMode;\n  }\n  setPivotMode(pivotMode, source) {\n    if (pivotMode === this.pivotMode) {\n      return;\n    }\n    this.pivotMode = pivotMode;\n    if (!this.ready) {\n      return;\n    }\n    this.refreshCols(false);\n    const {\n      visibleCols,\n      eventSvc\n    } = this.beans;\n    visibleCols.refresh(source);\n    eventSvc.dispatchEvent({\n      type: \"columnPivotModeChanged\"\n    });\n  }\n  // + clientSideRowModel\n  isPivotActive() {\n    const pivotColumns = this.beans.pivotColsSvc?.columns;\n    return this.pivotMode && !!pivotColumns?.length;\n  }\n  // called when dataTypes change\n  recreateColumnDefs(e) {\n    if (!this.cols) {\n      return;\n    }\n    this.beans.autoColSvc?.updateColumns(e);\n    const source = _convertColumnEventSourceType(e.source);\n    this.createColsFromColDefs(source);\n  }\n  setColumnDefs(columnDefs, source) {\n    this.colDefs = columnDefs;\n    this.createColsFromColDefs(source);\n  }\n  destroy() {\n    _destroyColumnTree(this.beans, this.colDefCols?.tree);\n    super.destroy();\n  }\n  getColTree() {\n    return this.cols?.tree ?? [];\n  }\n  // + columnSelectPanel\n  getColDefColTree() {\n    return this.colDefCols?.tree ?? [];\n  }\n  // + clientSideRowController -> sorting, building quick filter text\n  // + headerRenderer -> sorting (clearing icon)\n  getColDefCols() {\n    return this.colDefCols?.list ?? null;\n  }\n  // + moveColumnController\n  getCols() {\n    return this.cols?.list ?? [];\n  }\n  forAllCols(callback) {\n    const {\n      pivotResultCols,\n      autoColSvc,\n      selectionColSvc\n    } = this.beans;\n    _forAll(this.colDefCols?.list, callback);\n    _forAll(autoColSvc?.columns?.list, callback);\n    _forAll(selectionColSvc?.columns?.list, callback);\n    _forAll(pivotResultCols?.getPivotResultCols()?.list, callback);\n  }\n  getColsForKeys(keys) {\n    if (!keys) {\n      return [];\n    }\n    return keys.map(key => this.getCol(key)).filter(col => col != null);\n  }\n  getColDefCol(key) {\n    if (!this.colDefCols?.list) {\n      return null;\n    }\n    return this.getColFromCollection(key, this.colDefCols);\n  }\n  getCol(key) {\n    if (key == null) {\n      return null;\n    }\n    return this.getColFromCollection(key, this.cols);\n  }\n  /**\n   * Get column exclusively by ID.\n   *\n   * Note getCol/getColFromCollection have poor performance when col has been removed.\n   */\n  getColById(key) {\n    return this.cols?.map[key] ?? null;\n  }\n  getColFromCollection(key, cols) {\n    if (cols == null) {\n      return null;\n    }\n    const {\n      map,\n      list\n    } = cols;\n    if (typeof key == \"string\" && map[key]) {\n      return map[key];\n    }\n    for (let i = 0; i < list.length; i++) {\n      if (_columnsMatch(list[i], key)) {\n        return list[i];\n      }\n    }\n    return this.beans.autoColSvc?.getColumn(key) ?? this.beans.selectionColSvc?.getColumn(key) ?? null;\n  }\n};\n\n// packages/ag-grid-community/src/columns/baseColsService.ts\nvar BaseColsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.dispatchColumnChangedEvent = dispatchColumnChangedEvent;\n    this.columns = [];\n    this.columnIndexMap = {};\n    this.updateIndexMap = () => {\n      this.columnIndexMap = {};\n      this.columns.forEach((col, index) => this.columnIndexMap[col.getId()] = index);\n    };\n  }\n  wireBeans(beans) {\n    this.colModel = beans.colModel;\n    this.aggFuncSvc = beans.aggFuncSvc;\n    this.visibleCols = beans.visibleCols;\n  }\n  sortColumns(compareFn) {\n    this.columns.sort(compareFn);\n    this.updateIndexMap();\n  }\n  setColumns(colKeys, source) {\n    this.setColList(colKeys, this.columns, this.eventName, true, true, this.columnProcessors.set, source);\n  }\n  addColumns(colKeys, source) {\n    this.updateColList(colKeys, this.columns, true, true, this.columnProcessors.add, this.eventName, source);\n  }\n  removeColumns(colKeys, source) {\n    this.updateColList(colKeys, this.columns, false, true, this.columnProcessors.remove, this.eventName, source);\n  }\n  getColumnIndex(colId) {\n    return this.columnIndexMap[colId];\n  }\n  setColList(colKeys = [], masterList, eventName, detectOrderChange, autoGroupsNeedBuilding, columnCallback, source) {\n    const gridColumns = this.colModel.getCols();\n    if (!gridColumns || gridColumns.length === 0) {\n      return;\n    }\n    const changes = /* @__PURE__ */new Map();\n    masterList.forEach((col, idx) => changes.set(col, idx));\n    masterList.length = 0;\n    if (_exists(colKeys)) {\n      colKeys.forEach(key => {\n        const column = this.colModel.getColDefCol(key);\n        if (column) {\n          masterList.push(column);\n        }\n      });\n    }\n    masterList.forEach((col, idx) => {\n      const oldIndex = changes.get(col);\n      if (oldIndex === void 0) {\n        changes.set(col, 0);\n        return;\n      }\n      if (detectOrderChange && oldIndex !== idx) {\n        return;\n      }\n      changes.delete(col);\n    });\n    this.updateIndexMap();\n    const primaryCols = this.colModel.getColDefCols();\n    (primaryCols || []).forEach(column => {\n      const added = masterList.indexOf(column) >= 0;\n      columnCallback(column, added, source);\n    });\n    autoGroupsNeedBuilding && this.colModel.refreshCols(false);\n    this.visibleCols.refresh(source);\n    this.dispatchColumnChangedEvent(this.eventSvc, eventName, [...changes.keys()], source);\n  }\n  updateColList(keys = [], masterList, actionIsAdd, autoGroupsNeedBuilding, columnCallback, eventType, source) {\n    if (!keys || keys.length === 0) {\n      return;\n    }\n    let atLeastOne = false;\n    const updatedCols = /* @__PURE__ */new Set();\n    keys.forEach(key => {\n      if (!key) {\n        return;\n      }\n      const columnToAdd = this.colModel.getColDefCol(key);\n      if (!columnToAdd) {\n        return;\n      }\n      updatedCols.add(columnToAdd);\n      if (actionIsAdd) {\n        if (masterList.indexOf(columnToAdd) >= 0) {\n          return;\n        }\n        masterList.push(columnToAdd);\n      } else {\n        const currentIndex = masterList.indexOf(columnToAdd);\n        if (currentIndex < 0) {\n          return;\n        }\n        for (let i = currentIndex + 1; i < masterList.length; i++) {\n          updatedCols.add(masterList[i]);\n        }\n        _removeFromArray(masterList, columnToAdd);\n      }\n      columnCallback(columnToAdd, actionIsAdd, source);\n      atLeastOne = true;\n    });\n    if (!atLeastOne) {\n      return;\n    }\n    this.updateIndexMap();\n    if (autoGroupsNeedBuilding) {\n      this.colModel.refreshCols(false);\n    }\n    this.visibleCols.refresh(source);\n    const eventColumns = Array.from(updatedCols);\n    this.eventSvc.dispatchEvent({\n      type: eventType,\n      columns: eventColumns,\n      column: eventColumns.length === 1 ? eventColumns[0] : null,\n      source\n    });\n  }\n  extractCols(source, oldProvidedCols = []) {\n    const previousCols = this.columns;\n    const colsWithIndex = [];\n    const colsWithValue = [];\n    const {\n      setFlagFunc,\n      getIndexFunc,\n      getInitialIndexFunc,\n      getValueFunc,\n      getInitialValueFunc\n    } = this.columnExtractors;\n    const primaryCols = this.colModel.getColDefCols() || [];\n    primaryCols.forEach(col => {\n      const colIsNew = oldProvidedCols.indexOf(col) < 0;\n      const colDef = col.getColDef();\n      const value = getValueFunc(colDef);\n      const initialValue = getInitialValueFunc(colDef);\n      const index = getIndexFunc(colDef);\n      const initialIndex = getInitialIndexFunc(colDef);\n      let include;\n      const valuePresent = value !== void 0;\n      const indexPresent = index !== void 0;\n      const initialValuePresent = initialValue !== void 0;\n      const initialIndexPresent = initialIndex !== void 0;\n      if (valuePresent) {\n        include = value;\n      } else if (indexPresent) {\n        if (index === null) {\n          include = false;\n        } else {\n          include = index >= 0;\n        }\n      } else {\n        if (colIsNew) {\n          if (initialValuePresent) {\n            include = initialValue;\n          } else if (initialIndexPresent) {\n            include = initialIndex != null && initialIndex >= 0;\n          } else {\n            include = false;\n          }\n        } else {\n          include = previousCols.indexOf(col) >= 0;\n        }\n      }\n      if (include) {\n        const useIndex = colIsNew ? index != null || initialIndex != null : index != null;\n        useIndex ? colsWithIndex.push(col) : colsWithValue.push(col);\n      }\n    });\n    const getIndexForCol = col => {\n      const index = getIndexFunc(col.getColDef());\n      const defaultIndex = getInitialIndexFunc(col.getColDef());\n      return index != null ? index : defaultIndex;\n    };\n    colsWithIndex.sort((colA, colB) => {\n      const indexA = getIndexForCol(colA);\n      const indexB = getIndexForCol(colB);\n      if (indexA === indexB) {\n        return 0;\n      }\n      if (indexA < indexB) {\n        return -1;\n      }\n      return 1;\n    });\n    const res = [].concat(colsWithIndex);\n    previousCols.forEach(col => {\n      if (colsWithValue.indexOf(col) >= 0) {\n        res.push(col);\n      }\n    });\n    colsWithValue.forEach(col => {\n      if (res.indexOf(col) < 0) {\n        res.push(col);\n      }\n    });\n    previousCols.forEach(col => {\n      if (res.indexOf(col) < 0) {\n        setFlagFunc(col, false, source);\n      }\n    });\n    res.forEach(col => {\n      if (previousCols.indexOf(col) < 0) {\n        setFlagFunc(col, true, source);\n      }\n    });\n    this.columns = res;\n    this.updateIndexMap();\n    return this.columns;\n  }\n  restoreColumnOrder(columnStateAccumulator, incomingColumnState) {\n    const colList = this.columns;\n    const primaryCols = this.colModel.getColDefCols();\n    if (!colList.length || !primaryCols) {\n      return columnStateAccumulator;\n    }\n    const updatedColIdArray = Object.keys(incomingColumnState);\n    const updatedColIds = new Set(updatedColIdArray);\n    const newColIds = new Set(updatedColIdArray);\n    const allColIds = new Set(colList.map(column => {\n      const colId = column.getColId();\n      newColIds.delete(colId);\n      return colId;\n    }).concat(updatedColIdArray));\n    const colIdsInOriginalOrder = [];\n    const originalOrderMap = {};\n    let orderIndex = 0;\n    for (let i = 0; i < primaryCols.length; i++) {\n      const colId = primaryCols[i].getColId();\n      if (allColIds.has(colId)) {\n        colIdsInOriginalOrder.push(colId);\n        originalOrderMap[colId] = orderIndex++;\n      }\n    }\n    let index = 1e3;\n    let hasAddedNewCols = false;\n    let lastIndex = 0;\n    const enableProp = this.columnOrdering.enableProp;\n    const initialEnableProp = this.columnOrdering.initialEnableProp;\n    const indexProp = this.columnOrdering.indexProp;\n    const initialIndexProp = this.columnOrdering.initialIndexProp;\n    const processPrecedingNewCols = colId => {\n      const originalOrderIndex = originalOrderMap[colId];\n      for (let i = lastIndex; i < originalOrderIndex; i++) {\n        const newColId = colIdsInOriginalOrder[i];\n        if (newColIds.has(newColId)) {\n          incomingColumnState[newColId][indexProp] = index++;\n          newColIds.delete(newColId);\n        }\n      }\n      lastIndex = originalOrderIndex;\n    };\n    colList.forEach(column => {\n      const colId = column.getColId();\n      if (updatedColIds.has(colId)) {\n        processPrecedingNewCols(colId);\n        incomingColumnState[colId][indexProp] = index++;\n      } else {\n        const colDef = column.getColDef();\n        const missingIndex = colDef[indexProp] === null || colDef[indexProp] === void 0 && colDef[initialIndexProp] == null;\n        if (missingIndex) {\n          if (!hasAddedNewCols) {\n            const propEnabled = colDef[enableProp] || colDef[enableProp] === void 0 && colDef[initialEnableProp];\n            if (propEnabled) {\n              processPrecedingNewCols(colId);\n            } else {\n              newColIds.forEach(newColId => {\n                incomingColumnState[newColId][indexProp] = index + originalOrderMap[newColId];\n              });\n              index += colIdsInOriginalOrder.length;\n              hasAddedNewCols = true;\n            }\n          }\n          if (!columnStateAccumulator[colId]) {\n            columnStateAccumulator[colId] = {\n              colId\n            };\n          }\n          columnStateAccumulator[colId][indexProp] = index++;\n        }\n      }\n    });\n    return columnStateAccumulator;\n  }\n};\n\n// packages/ag-grid-community/src/columns/groupInstanceIdCreator.ts\nvar GroupInstanceIdCreator = class {\n  constructor() {\n    // this map contains keys to numbers, so we remember what the last call was\n    this.existingIds = {};\n  }\n  getInstanceIdForKey(key) {\n    const lastResult = this.existingIds[key];\n    let result;\n    if (typeof lastResult !== \"number\") {\n      result = 0;\n    } else {\n      result = lastResult + 1;\n    }\n    this.existingIds[key] = result;\n    return result;\n  }\n};\n\n// packages/ag-grid-community/src/components/emptyBean.ts\nvar EmptyBean = class extends BeanStub {};\nfunction setupCompBean(ctrl, ctx, compBean) {\n  if (compBean) {\n    ctrl.addDestroyFunc(() => ctx.destroyBean(compBean));\n  }\n  return compBean ?? ctrl;\n}\n\n// packages/ag-grid-community/src/rendering/cssClassManager.ts\nvar CssClassManager = class {\n  constructor(getGui) {\n    // to minimise DOM hits, we only apply CSS classes if they have changed. as adding a CSS class that is already\n    // there, or removing one that wasn't present, all takes CPU.\n    this.cssClassStates = {};\n    this.getGui = getGui;\n  }\n  toggleCss(className, addOrRemove) {\n    if (!className) {\n      return;\n    }\n    if (className.indexOf(\" \") >= 0) {\n      const list = (className || \"\").split(\" \");\n      if (list.length > 1) {\n        list.forEach(cls => this.toggleCss(cls, addOrRemove));\n        return;\n      }\n    }\n    const updateNeeded = this.cssClassStates[className] !== addOrRemove;\n    if (updateNeeded && className.length) {\n      this.getGui()?.classList.toggle(className, addOrRemove);\n      this.cssClassStates[className] = addOrRemove;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/widgets/component.ts\nvar compIdSequence = 0;\nvar RefPlaceholder = null;\nvar Component = class extends BeanStub {\n  constructor(templateOrParams, componentSelectors) {\n    super();\n    this.suppressDataRefValidation = false;\n    // if false, then CSS class \"ag-hidden\" is applied, which sets \"display: none\"\n    this.displayed = true;\n    // if false, then CSS class \"ag-invisible\" is applied, which sets \"visibility: hidden\"\n    this.visible = true;\n    // unique id for this row component. this is used for getting a reference to the HTML dom.\n    // we cannot use the RowNode id as this is not unique (due to animation, old rows can be lying\n    // around as we create a new rowComp instance for the same row node).\n    this.compId = compIdSequence++;\n    this.cssManager = new CssClassManager(() => this.eGui);\n    this.componentSelectors = new Map((componentSelectors ?? []).map(comp => [comp.selector, comp]));\n    if (templateOrParams) {\n      this.setTemplate(templateOrParams);\n    }\n  }\n  preConstruct() {\n    this.wireTemplate(this.getGui());\n    const debugId = \"component-\" + Object.getPrototypeOf(this)?.constructor?.name;\n    this.css?.forEach(css => this.beans.environment.addGlobalCSS(css, debugId));\n  }\n  wireTemplate(element, paramsMap) {\n    if (element && this.gos) {\n      this.applyElementsToComponent(element);\n      this.createChildComponentsFromTags(element, paramsMap);\n    }\n  }\n  getCompId() {\n    return this.compId;\n  }\n  getDataRefAttribute(element) {\n    if (element.getAttribute) {\n      return element.getAttribute(DataRefAttribute);\n    }\n    return null;\n  }\n  applyElementsToComponent(element, elementRef, paramsMap, newComponent = null) {\n    if (elementRef === void 0) {\n      elementRef = this.getDataRefAttribute(element);\n    }\n    if (elementRef) {\n      const current = this[elementRef];\n      if (current === RefPlaceholder) {\n        this[elementRef] = newComponent ?? element;\n      } else {\n        const usedAsParamRef = paramsMap && paramsMap[elementRef];\n        if (!this.suppressDataRefValidation && !usedAsParamRef) {\n          throw new Error(`data-ref: ${elementRef} on ${this.constructor.name} with ${current}`);\n        }\n      }\n    }\n  }\n  // for registered components only, eg creates AgCheckbox instance from ag-checkbox HTML tag\n  createChildComponentsFromTags(parentNode, paramsMap) {\n    const childNodeList = [];\n    for (const childNode of parentNode.childNodes ?? []) {\n      childNodeList.push(childNode);\n    }\n    childNodeList.forEach(childNode => {\n      if (!(childNode instanceof HTMLElement)) {\n        return;\n      }\n      const childComp = this.createComponentFromElement(childNode, childComp2 => {\n        const childGui = childComp2.getGui();\n        if (childGui) {\n          for (const attr of childNode.attributes ?? []) {\n            childGui.setAttribute(attr.name, attr.value);\n          }\n        }\n      }, paramsMap);\n      if (childComp) {\n        if (childComp.addItems && childNode.children.length) {\n          this.createChildComponentsFromTags(childNode, paramsMap);\n          const items = Array.prototype.slice.call(childNode.children);\n          childComp.addItems(items);\n        }\n        this.swapComponentForNode(childComp, parentNode, childNode);\n      } else if (childNode.childNodes) {\n        this.createChildComponentsFromTags(childNode, paramsMap);\n      }\n    });\n  }\n  createComponentFromElement(element, afterPreCreateCallback, paramsMap) {\n    const key = element.nodeName;\n    const elementRef = this.getDataRefAttribute(element);\n    const isAgGridComponent = key.indexOf(\"AG-\") === 0;\n    const componentSelector = isAgGridComponent ? this.componentSelectors.get(key) : null;\n    let newComponent = null;\n    if (componentSelector) {\n      const componentParams = paramsMap && elementRef ? paramsMap[elementRef] : void 0;\n      newComponent = new componentSelector.component(componentParams);\n      newComponent.setParentComponent(this);\n      this.createBean(newComponent, null, afterPreCreateCallback);\n    } else if (isAgGridComponent) {\n      throw new Error(`selector: ${key}`);\n    }\n    this.applyElementsToComponent(element, elementRef, paramsMap, newComponent);\n    return newComponent;\n  }\n  swapComponentForNode(newComponent, parentNode, childNode) {\n    const eComponent = newComponent.getGui();\n    parentNode.replaceChild(eComponent, childNode);\n    parentNode.insertBefore(document.createComment(childNode.nodeName), eComponent);\n    this.addDestroyFunc(this.destroyBean.bind(this, newComponent));\n  }\n  activateTabIndex(elements) {\n    const tabIndex = this.gos.get(\"tabIndex\");\n    if (!elements) {\n      elements = [];\n    }\n    if (!elements.length) {\n      elements.push(this.getGui());\n    }\n    elements.forEach(el => el.setAttribute(\"tabindex\", tabIndex.toString()));\n  }\n  setTemplate(templateOrParams, componentSelectors, paramsMap) {\n    let eGui;\n    if (typeof templateOrParams === \"string\" || templateOrParams == null) {\n      eGui = _loadTemplate(templateOrParams);\n    } else {\n      eGui = _createElement(templateOrParams);\n    }\n    this.setTemplateFromElement(eGui, componentSelectors, paramsMap);\n  }\n  setTemplateFromElement(element, components, paramsMap, suppressDataRefValidation = false) {\n    this.eGui = element;\n    this.suppressDataRefValidation = suppressDataRefValidation;\n    if (components) {\n      for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n        this.componentSelectors.set(component.selector, component);\n      }\n    }\n    this.wireTemplate(element, paramsMap);\n  }\n  getGui() {\n    return this.eGui;\n  }\n  getFocusableElement() {\n    return this.eGui;\n  }\n  getAriaElement() {\n    return this.getFocusableElement();\n  }\n  setParentComponent(component) {\n    this.parentComponent = component;\n  }\n  getParentComponent() {\n    return this.parentComponent;\n  }\n  // this method is for older code, that wants to provide the gui element,\n  // it is not intended for this to be in ag-Stack\n  setGui(eGui) {\n    this.eGui = eGui;\n  }\n  queryForHtmlElement(cssSelector) {\n    return this.eGui.querySelector(cssSelector);\n  }\n  getContainerAndElement(newChild, container) {\n    let parent = container;\n    if (newChild == null) {\n      return null;\n    }\n    if (!parent) {\n      parent = this.eGui;\n    }\n    if (_isNodeOrElement(newChild)) {\n      return {\n        element: newChild,\n        parent\n      };\n    }\n    return {\n      element: newChild.getGui(),\n      parent\n    };\n  }\n  prependChild(newChild, container) {\n    const {\n      element,\n      parent\n    } = this.getContainerAndElement(newChild, container) || {};\n    if (!element || !parent) {\n      return;\n    }\n    parent.insertAdjacentElement(\"afterbegin\", element);\n  }\n  appendChild(newChild, container) {\n    const {\n      element,\n      parent\n    } = this.getContainerAndElement(newChild, container) || {};\n    if (!element || !parent) {\n      return;\n    }\n    parent.appendChild(element);\n  }\n  isDisplayed() {\n    return this.displayed;\n  }\n  setVisible(visible, options = {}) {\n    if (visible !== this.visible) {\n      this.visible = visible;\n      const {\n        skipAriaHidden\n      } = options;\n      _setVisible(this.eGui, visible, {\n        skipAriaHidden\n      });\n    }\n  }\n  setDisplayed(displayed, options = {}) {\n    if (displayed !== this.displayed) {\n      this.displayed = displayed;\n      const {\n        skipAriaHidden\n      } = options;\n      _setDisplayed(this.eGui, displayed, {\n        skipAriaHidden\n      });\n      const event = {\n        type: \"displayChanged\",\n        visible: this.displayed\n      };\n      this.dispatchLocalEvent(event);\n    }\n  }\n  destroy() {\n    if (this.parentComponent) {\n      this.parentComponent = void 0;\n    }\n    super.destroy();\n  }\n  addGuiEventListener(event, listener, options) {\n    this.eGui.addEventListener(event, listener, options);\n    this.addDestroyFunc(() => this.eGui.removeEventListener(event, listener));\n  }\n  addCss(className) {\n    this.cssManager.toggleCss(className, true);\n  }\n  removeCss(className) {\n    this.cssManager.toggleCss(className, false);\n  }\n  toggleCss(className, addOrRemove) {\n    this.cssManager.toggleCss(className, addOrRemove);\n  }\n  registerCSS(css) {\n    this.css || (this.css = []);\n    this.css.push(css);\n  }\n};\n\n// packages/ag-grid-community/src/interfaces/iFilter.ts\nfunction isColumnFilterComp(filter) {\n  return typeof filter === \"object\" && !!filter.component;\n}\n\n// packages/ag-grid-community/src/utils/promise.ts\nfunction _isPromise(fn) {\n  if (typeof fn.then === \"function\") {\n    return true;\n  }\n  return false;\n}\nvar AgPromise = class _AgPromise {\n  constructor(callback) {\n    this.status = 0 /* IN_PROGRESS */;\n    this.resolution = null;\n    this.waiters = [];\n    callback(value => this.onDone(value), params => this.onReject(params));\n  }\n  static all(promises) {\n    return promises.length ? new _AgPromise(resolve => {\n      let remainingToResolve = promises.length;\n      const combinedValues = new Array(remainingToResolve);\n      promises.forEach((promise, index) => {\n        promise.then(value => {\n          combinedValues[index] = value;\n          remainingToResolve--;\n          if (remainingToResolve === 0) {\n            resolve(combinedValues);\n          }\n        });\n      });\n    }) : _AgPromise.resolve();\n  }\n  static resolve(value = null) {\n    return new _AgPromise(resolve => resolve(value));\n  }\n  then(func) {\n    return new _AgPromise(resolve => {\n      if (this.status === 1 /* RESOLVED */) {\n        resolve(func(this.resolution));\n      } else {\n        this.waiters.push(value => resolve(func(value)));\n      }\n    });\n  }\n  onDone(value) {\n    this.status = 1 /* RESOLVED */;\n    this.resolution = value;\n    this.waiters.forEach(waiter => waiter(value));\n  }\n  onReject(_) {}\n};\n\n// packages/ag-grid-community/src/components/framework/userComponentFactory.ts\nfunction doesImplementIComponent(candidate) {\n  if (!candidate) {\n    return false;\n  }\n  return candidate.prototype && \"getGui\" in candidate.prototype;\n}\nfunction _getUserCompKeys(frameworkOverrides, defObject, type, params) {\n  const {\n    name\n  } = type;\n  let compName;\n  let jsComp;\n  let fwComp;\n  let paramsFromSelector;\n  let popupFromSelector;\n  let popupPositionFromSelector;\n  if (defObject) {\n    const defObjectAny = defObject;\n    const selectorFunc = defObjectAny[name + \"Selector\"];\n    const selectorRes = selectorFunc ? selectorFunc(params) : null;\n    const assignComp = providedJsComp => {\n      if (typeof providedJsComp === \"string\") {\n        compName = providedJsComp;\n      } else if (providedJsComp != null && providedJsComp !== true) {\n        const isFwkComp = frameworkOverrides.isFrameworkComponent(providedJsComp);\n        if (isFwkComp) {\n          fwComp = providedJsComp;\n        } else {\n          jsComp = providedJsComp;\n        }\n      }\n    };\n    if (selectorRes) {\n      assignComp(selectorRes.component);\n      paramsFromSelector = selectorRes.params;\n      popupFromSelector = selectorRes.popup;\n      popupPositionFromSelector = selectorRes.popupPosition;\n    } else {\n      assignComp(defObjectAny[name]);\n    }\n  }\n  return {\n    compName,\n    jsComp,\n    fwComp,\n    paramsFromSelector,\n    popupFromSelector,\n    popupPositionFromSelector\n  };\n}\nvar UserComponentFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"userCompFactory\";\n  }\n  wireBeans(beans) {\n    this.agCompUtils = beans.agCompUtils;\n    this.registry = beans.registry;\n    this.frameworkCompWrapper = beans.frameworkCompWrapper;\n    this.gridOptions = beans.gridOptions;\n  }\n  getCompDetailsFromGridOptions(type, defaultName, params, mandatory = false) {\n    return this.getCompDetails(this.gridOptions, type, defaultName, params, mandatory);\n  }\n  getCompDetails(defObject, type, defaultName, params, mandatory = false) {\n    const {\n      name,\n      cellRenderer\n    } = type;\n    let {\n      compName,\n      jsComp,\n      fwComp,\n      paramsFromSelector,\n      popupFromSelector,\n      popupPositionFromSelector\n    } = _getUserCompKeys(this.beans.frameworkOverrides, defObject, type, params);\n    let defaultCompParams;\n    let defaultCompProcessParams;\n    const lookupFromRegistry = key => {\n      const item = this.registry.getUserComponent(name, key);\n      if (item) {\n        jsComp = !item.componentFromFramework ? item.component : void 0;\n        fwComp = item.componentFromFramework ? item.component : void 0;\n        defaultCompParams = item.params;\n        defaultCompProcessParams = item.processParams;\n      }\n    };\n    if (compName != null) {\n      lookupFromRegistry(compName);\n    }\n    if (jsComp == null && fwComp == null && defaultName != null) {\n      lookupFromRegistry(defaultName);\n    }\n    if (jsComp && cellRenderer && !doesImplementIComponent(jsComp)) {\n      jsComp = this.agCompUtils?.adaptFunction(type, jsComp);\n    }\n    if (!jsComp && !fwComp) {\n      const {\n        validation: validation2\n      } = this.beans;\n      if (mandatory && (compName !== defaultName || !defaultName)) {\n        if (compName) {\n          if (!validation2?.isProvidedUserComp(compName)) {\n            _error(50, {\n              compName\n            });\n          }\n        } else {\n          if (defaultName) {\n            if (!validation2) {\n              _error(260, {\n                ...this.gos.getModuleErrorParams(),\n                propName: name,\n                compName: defaultName\n              });\n            }\n          } else {\n            _error(216, {\n              name\n            });\n          }\n        }\n      } else if (defaultName && !validation2) {\n        _error(146, {\n          comp: defaultName\n        });\n      }\n      return;\n    }\n    const paramsMerged = this.mergeParams(defObject, type, params, paramsFromSelector, defaultCompParams, defaultCompProcessParams);\n    const componentFromFramework = jsComp == null;\n    const componentClass = jsComp ?? fwComp;\n    return {\n      componentFromFramework,\n      componentClass,\n      params: paramsMerged,\n      type,\n      popupFromSelector,\n      popupPositionFromSelector,\n      newAgStackInstance: () => this.newAgStackInstance(componentClass, componentFromFramework, paramsMerged, type)\n    };\n  }\n  newAgStackInstance(ComponentClass, componentFromFramework, params, type) {\n    const jsComponent = !componentFromFramework;\n    let instance;\n    if (jsComponent) {\n      instance = new ComponentClass();\n    } else {\n      instance = this.frameworkCompWrapper.wrap(ComponentClass, type.mandatoryMethods, type.optionalMethods, type);\n    }\n    this.createBean(instance);\n    const deferredInit = instance.init?.(params);\n    if (deferredInit == null) {\n      return AgPromise.resolve(instance);\n    }\n    return deferredInit.then(() => instance);\n  }\n  /**\n   * merges params with application provided params\n   * used by Floating Filter\n   */\n  mergeParams(defObject, type, paramsFromGrid, paramsFromSelector = null, defaultCompParams, defaultCompProcessParams) {\n    const params = {\n      ...paramsFromGrid,\n      ...defaultCompParams\n    };\n    const defObjectAny = defObject;\n    const userParams = defObjectAny && defObjectAny[type.name + \"Params\"];\n    if (typeof userParams === \"function\") {\n      const userParamsFromFunc = userParams(paramsFromGrid);\n      _mergeDeep(params, userParamsFromFunc);\n    } else if (typeof userParams === \"object\") {\n      _mergeDeep(params, userParams);\n    }\n    _mergeDeep(params, paramsFromSelector);\n    return defaultCompProcessParams ? defaultCompProcessParams(params) : params;\n  }\n};\n\n// packages/ag-grid-community/src/components/framework/userCompUtils.ts\nvar DateComponent = {\n  name: \"dateComponent\",\n  mandatoryMethods: [\"getDate\", \"setDate\"],\n  optionalMethods: [\"afterGuiAttached\", \"setInputPlaceholder\", \"setInputAriaLabel\", \"setDisabled\", \"refresh\"]\n};\nvar DragAndDropImageComponent = {\n  name: \"dragAndDropImageComponent\",\n  mandatoryMethods: [\"setIcon\", \"setLabel\"]\n};\nvar HeaderComponent = {\n  name: \"headerComponent\",\n  optionalMethods: [\"refresh\"]\n};\nvar InnerHeaderComponent = {\n  name: \"innerHeaderComponent\"\n};\nvar InnerHeaderGroupComponent = {\n  name: \"innerHeaderGroupComponent\"\n};\nvar HeaderGroupComponent = {\n  name: \"headerGroupComponent\"\n};\nvar InnerCellRendererComponent = {\n  name: \"innerRenderer\",\n  cellRenderer: true,\n  optionalMethods: [\"afterGuiAttached\"]\n};\nvar CellRendererComponent = {\n  name: \"cellRenderer\",\n  optionalMethods: [\"refresh\", \"afterGuiAttached\"],\n  cellRenderer: true\n};\nvar EditorRendererComponent = {\n  name: \"cellRenderer\",\n  optionalMethods: [\"refresh\", \"afterGuiAttached\"]\n};\nvar LoadingCellRendererComponent = {\n  name: \"loadingCellRenderer\",\n  cellRenderer: true\n};\nvar CellEditorComponent = {\n  name: \"cellEditor\",\n  mandatoryMethods: [\"getValue\"],\n  optionalMethods: [\"isPopup\", \"isCancelBeforeStart\", \"isCancelAfterEnd\", \"getPopupPosition\", \"focusIn\", \"focusOut\", \"afterGuiAttached\", \"refresh\"]\n};\nvar LoadingOverlayComponent = {\n  name: \"loadingOverlayComponent\",\n  optionalMethods: [\"refresh\"]\n};\nvar NoRowsOverlayComponent = {\n  name: \"noRowsOverlayComponent\",\n  optionalMethods: [\"refresh\"]\n};\nvar TooltipComponent = {\n  name: \"tooltipComponent\"\n};\nvar FilterComponent = {\n  name: \"filter\",\n  mandatoryMethods: [\"isFilterActive\", \"doesFilterPass\", \"getModel\", \"setModel\"],\n  optionalMethods: [\"afterGuiAttached\", \"afterGuiDetached\", \"onNewRowsLoaded\", \"getModelAsString\", \"onFloatingFilterChanged\", \"onAnyFilterChanged\", \"refresh\"]\n};\nvar FloatingFilterComponent = {\n  name: \"floatingFilterComponent\",\n  mandatoryMethods: [\"onParentModelChanged\"],\n  optionalMethods: [\"afterGuiAttached\", \"refresh\"]\n};\nvar FullWidth = {\n  name: \"fullWidthCellRenderer\",\n  optionalMethods: [\"refresh\", \"afterGuiAttached\"],\n  cellRenderer: true\n};\nvar FullWidthLoading = {\n  name: \"loadingCellRenderer\",\n  cellRenderer: true\n};\nvar FullWidthGroup = {\n  name: \"groupRowRenderer\",\n  optionalMethods: [\"afterGuiAttached\"],\n  cellRenderer: true\n};\nvar FullWidthDetail = {\n  name: \"detailCellRenderer\",\n  optionalMethods: [\"refresh\"],\n  cellRenderer: true\n};\nfunction _getDragAndDropImageCompDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(DragAndDropImageComponent, \"agDragAndDropImage\", params, true);\n}\nfunction _getInnerCellRendererDetails(userCompFactory, def, params) {\n  return userCompFactory.getCompDetails(def, InnerCellRendererComponent, void 0, params);\n}\nfunction _getHeaderCompDetails(userCompFactory, colDef, params) {\n  return userCompFactory.getCompDetails(colDef, HeaderComponent, \"agColumnHeader\", params);\n}\nfunction _getInnerHeaderCompDetails(userCompFactory, headerCompParams, params) {\n  return userCompFactory.getCompDetails(headerCompParams, InnerHeaderComponent, void 0, params);\n}\nfunction _getHeaderGroupCompDetails(userCompFactory, params) {\n  const colGroupDef = params.columnGroup.getColGroupDef();\n  return userCompFactory.getCompDetails(colGroupDef, HeaderGroupComponent, \"agColumnGroupHeader\", params);\n}\nfunction _getInnerHeaderGroupCompDetails(userCompFactory, headerGroupCompParams, params) {\n  return userCompFactory.getCompDetails(headerGroupCompParams, InnerHeaderGroupComponent, void 0, params);\n}\nfunction _getFullWidthCellRendererDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidth, void 0, params, true);\n}\nfunction _getFullWidthLoadingCellRendererDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidthLoading, \"agLoadingCellRenderer\", params, true);\n}\nfunction _getFullWidthGroupCellRendererDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidthGroup, \"agGroupRowRenderer\", params, true);\n}\nfunction _getFullWidthDetailCellRendererDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidthDetail, \"agDetailCellRenderer\", params, true);\n}\nfunction _getCellRendererDetails(userCompFactory, def, params) {\n  return userCompFactory.getCompDetails(def, CellRendererComponent, void 0, params);\n}\nfunction _getEditorRendererDetails(userCompFactory, def, params) {\n  return userCompFactory.getCompDetails(def, EditorRendererComponent, void 0, params);\n}\nfunction _getLoadingCellRendererDetails(userCompFactory, def, params) {\n  return userCompFactory.getCompDetails(def, LoadingCellRendererComponent, \"agSkeletonCellRenderer\", params, true);\n}\nfunction _getCellEditorDetails(userCompFactory, def, params) {\n  return userCompFactory.getCompDetails(def, CellEditorComponent, \"agCellEditor\", params, true);\n}\nfunction _getFilterDetails(userCompFactory, def, params, defaultFilter) {\n  const filter = def.filter;\n  if (isColumnFilterComp(filter)) {\n    def = {\n      filter: filter.component,\n      filterParams: def.filterParams\n    };\n  }\n  return userCompFactory.getCompDetails(def, FilterComponent, defaultFilter, params, true);\n}\nfunction _getDateCompDetails(userCompFactory, def, params) {\n  return userCompFactory.getCompDetails(def, DateComponent, \"agDateInput\", params, true);\n}\nfunction _getLoadingOverlayCompDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(LoadingOverlayComponent, \"agLoadingOverlay\", params, true);\n}\nfunction _getNoRowsOverlayCompDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(NoRowsOverlayComponent, \"agNoRowsOverlay\", params, true);\n}\nfunction _getTooltipCompDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetails(params.colDef, TooltipComponent, \"agTooltipComponent\", params, true);\n}\nfunction _getFloatingFilterCompDetails(userCompFactory, def, params, defaultFloatingFilter) {\n  return userCompFactory.getCompDetails(def, FloatingFilterComponent, defaultFloatingFilter, params);\n}\nfunction _getFilterCompKeys(frameworkOverrides, def) {\n  return _getUserCompKeys(frameworkOverrides, def, FilterComponent);\n}\nfunction _mergeFilterParamsWithApplicationProvidedParams(userCompFactory, defObject, paramsFromGrid) {\n  return userCompFactory.mergeParams(defObject, FilterComponent, paramsFromGrid);\n}\n\n// packages/ag-grid-community/src/components/framework/unwrapUserComp.ts\nfunction _unwrapUserComp(comp) {\n  const compAsAny = comp;\n  const isProxy = compAsAny != null && compAsAny.getFrameworkComponentInstance != null;\n  return isProxy ? compAsAny.getFrameworkComponentInstance() : comp;\n}\n\n// packages/ag-grid-community/src/modules/moduleRegistry.ts\nvar allRegisteredModules = /* @__PURE__ */new Set();\nvar globalModulesMap = {};\nvar gridModulesMap = {};\nvar currentModuleVersion;\nvar userHasRegistered = false;\nvar areGridScopedModules = false;\nvar isUmd = false;\nfunction isValidModuleVersion(module) {\n  const [moduleMajor, moduleMinor] = module.version.split(\".\") || [];\n  const [currentModuleMajor, currentModuleMinor] = currentModuleVersion.split(\".\") || [];\n  return moduleMajor === currentModuleMajor && moduleMinor === currentModuleMinor;\n}\nfunction runVersionChecks(module) {\n  if (!currentModuleVersion) {\n    currentModuleVersion = module.version;\n  }\n  const errorMsg = details => `You are using incompatible versions of AG Grid modules. Major and minor versions should always match across modules. ${details} Please update all modules to the same version.`;\n  if (!module.version) {\n    _errorOnce(errorMsg(`'${module.moduleName}' is incompatible.`));\n  } else if (!isValidModuleVersion(module)) {\n    _errorOnce(errorMsg(`'${module.moduleName}' is version ${module.version} but the other modules are version ${currentModuleVersion}.`));\n  }\n  if (module.validate) {\n    const result = module.validate();\n    if (!result.isValid) {\n      const errorResult = result;\n      _errorOnce(`${errorResult.message}`);\n    }\n  }\n}\nfunction _registerModule(module, gridId, isInternalRegistration = false) {\n  if (!isInternalRegistration) {\n    userHasRegistered = true;\n  }\n  runVersionChecks(module);\n  const rowModels = module.rowModels ?? [\"all\"];\n  allRegisteredModules.add(module);\n  let moduleStore;\n  if (gridId !== void 0) {\n    areGridScopedModules = true;\n    if (gridModulesMap[gridId] === void 0) {\n      gridModulesMap[gridId] = {};\n    }\n    moduleStore = gridModulesMap[gridId];\n  } else {\n    moduleStore = globalModulesMap;\n  }\n  rowModels.forEach(rowModel => {\n    if (moduleStore[rowModel] === void 0) {\n      moduleStore[rowModel] = {};\n    }\n    moduleStore[rowModel][module.moduleName] = module;\n  });\n  if (module.dependsOn) {\n    module.dependsOn.forEach(dependency => _registerModule(dependency, gridId, isInternalRegistration));\n  }\n}\nfunction _unRegisterGridModules(gridId) {\n  delete gridModulesMap[gridId];\n}\nfunction _isModuleRegistered(moduleName, gridId, rowModel) {\n  const isRegisteredForRowModel = model => !!globalModulesMap[model]?.[moduleName] || !!gridModulesMap[gridId]?.[model]?.[moduleName];\n  return isRegisteredForRowModel(rowModel) || isRegisteredForRowModel(\"all\");\n}\nfunction _areModulesGridScoped() {\n  return areGridScopedModules;\n}\nfunction _getRegisteredModules(gridId, rowModel) {\n  const gridModules = gridModulesMap[gridId] ?? {};\n  return [...Object.values(globalModulesMap[\"all\"] ?? {}), ...Object.values(gridModules[\"all\"] ?? {}), ...Object.values(globalModulesMap[rowModel] ?? {}), ...Object.values(gridModules[rowModel] ?? {})];\n}\nfunction _getAllRegisteredModules() {\n  return new Set(allRegisteredModules);\n}\nfunction _getGridRegisteredModules(gridId, rowModel) {\n  const gridModules = gridModulesMap[gridId] ?? {};\n  return [...Object.values(gridModules[\"all\"] ?? {}), ...Object.values(gridModules[rowModel] ?? {})];\n}\nfunction _hasUserRegistered() {\n  return userHasRegistered;\n}\nfunction _isUmd() {\n  return isUmd;\n}\nfunction _setUmd() {\n  isUmd = true;\n}\nvar ModuleRegistry = class {\n  /**\n   * @deprecated v33 Use `registerModules([module])` instead.\n   */\n  static register(module) {\n    _registerModule(module, void 0);\n  }\n  /**\n   * Globally register the given modules for all grids.\n   * @param modules - modules to register\n   */\n  static registerModules(modules) {\n    modules.forEach(module => _registerModule(module, void 0));\n  }\n};\n\n// packages/ag-grid-community/src/context/genericContext.ts\nvar GenericContext = class {\n  constructor(params) {\n    this.beans = {};\n    this.createdBeans = [];\n    this.destroyed = false;\n    if (!params || !params.beanClasses) {\n      return;\n    }\n    this.beanDestroyComparator = params.beanDestroyComparator;\n    this.init(params);\n  }\n  init(params) {\n    for (const beanName of Object.keys(params.providedBeanInstances)) {\n      this.beans[beanName] = params.providedBeanInstances[beanName];\n    }\n    params.beanClasses.forEach(BeanClass => {\n      const instance = new BeanClass();\n      if (instance.beanName) {\n        this.beans[instance.beanName] = instance;\n      } else {\n        console.error(`Bean ${BeanClass.name} is missing beanName`);\n      }\n      this.createdBeans.push(instance);\n    });\n    params.derivedBeans?.forEach(beanFunc => {\n      const {\n        beanName,\n        bean\n      } = beanFunc(this);\n      this.beans[beanName] = bean;\n      this.createdBeans.push(bean);\n    });\n    if (params.beanInitComparator) {\n      this.createdBeans.sort(params.beanInitComparator);\n    }\n    this.initBeans(this.createdBeans);\n  }\n  getBeanInstances() {\n    return Object.values(this.beans);\n  }\n  createBean(bean, afterPreCreateCallback) {\n    this.initBeans([bean], afterPreCreateCallback);\n    return bean;\n  }\n  initBeans(beanInstances, afterPreCreateCallback) {\n    beanInstances.forEach(instance => {\n      instance.preWireBeans?.(this.beans);\n      instance.wireBeans?.(this.beans);\n    });\n    beanInstances.forEach(instance => instance.preConstruct?.());\n    if (afterPreCreateCallback) {\n      beanInstances.forEach(afterPreCreateCallback);\n    }\n    beanInstances.forEach(instance => instance.postConstruct?.());\n  }\n  getBeans() {\n    return this.beans;\n  }\n  getBean(name) {\n    return this.beans[name];\n  }\n  destroy() {\n    if (this.destroyed) {\n      return;\n    }\n    this.destroyed = true;\n    const beanInstances = this.getBeanInstances();\n    if (this.beanDestroyComparator) {\n      beanInstances.sort(this.beanDestroyComparator);\n    }\n    this.destroyBeans(beanInstances);\n    this.beans = {};\n    this.createdBeans = [];\n  }\n  /**\n   * Destroys a bean and returns undefined to support destruction and clean up in a single line.\n   * this.dateComp = this.context.destroyBean(this.dateComp);\n   */\n  destroyBean(bean) {\n    bean?.destroy?.();\n  }\n  /**\n   * Destroys an array of beans and returns an empty array to support destruction and clean up in a single line.\n   * this.dateComps = this.context.destroyBeans(this.dateComps);\n   */\n  destroyBeans(beans) {\n    if (beans) {\n      for (let i = 0; i < beans.length; i++) {\n        this.destroyBean(beans[i]);\n      }\n    }\n    return [];\n  }\n  isDestroyed() {\n    return this.destroyed;\n  }\n};\n\n// packages/ag-grid-community/src/context/context.ts\nfunction isComponentMetaFunc(componentMeta) {\n  return typeof componentMeta === \"object\" && !!componentMeta.getComp;\n}\nvar Context = class extends GenericContext {\n  init(params) {\n    this.gridId = params.gridId;\n    this.beans.context = this;\n    this.destroyCallback = params.destroyCallback;\n    super.init(params);\n  }\n  destroy() {\n    super.destroy();\n    _unRegisterGridModules(this.gridId);\n    this.destroyCallback?.();\n  }\n  getGridId() {\n    return this.gridId;\n  }\n};\n\n// packages/ag-grid-community/src/edit/editModelService.ts\nvar EditModelService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"editModelSvc\";\n    this.edits = /* @__PURE__ */new Map();\n    this.cellValidations = new EditCellValidationModel();\n    this.rowValidations = new EditRowValidationModel();\n    // during some operations, we want to always return false from `hasEdits`\n    this.suspendEdits = false;\n  }\n  suspend(suspend) {\n    this.suspendEdits = suspend;\n  }\n  removeEdits({\n    rowNode,\n    column\n  }) {\n    if (!this.hasEdits({\n      rowNode\n    }) || !rowNode) {\n      return;\n    }\n    const editRow = this.getEditRow(rowNode);\n    if (column) {\n      editRow.delete(column);\n    } else {\n      editRow.clear();\n    }\n    if (editRow.size === 0) {\n      this.edits.delete(rowNode);\n    }\n  }\n  getEditRow(rowNode, params = {}) {\n    if (this.suspendEdits) {\n      return void 0;\n    }\n    if (this.edits.size === 0) {\n      return void 0;\n    }\n    const edits = rowNode && this.edits.get(rowNode);\n    if (edits) {\n      return edits;\n    }\n    if (params.checkSiblings) {\n      const pinnedSibling = rowNode.pinnedSibling;\n      if (pinnedSibling) {\n        return this.getEditRow(pinnedSibling);\n      }\n    }\n    return void 0;\n  }\n  getEditRowDataValue(rowNode, {\n    checkSiblings\n  } = {}) {\n    if (this.edits.size === 0) {\n      return rowNode.data;\n    }\n    const editRow = this.getEditRow(rowNode);\n    const pinnedSibling = rowNode.pinnedSibling;\n    const siblingRow = checkSiblings && pinnedSibling && this.getEditRow(pinnedSibling);\n    if (!editRow && !siblingRow) {\n      return rowNode.data;\n    }\n    const data = Object.assign({}, rowNode.data);\n    const applyEdits = (edits, data2) => edits.forEach(({\n      pendingValue\n    }, column) => {\n      if (pendingValue !== UNEDITED) {\n        data2[column.getColId()] = pendingValue;\n      }\n    });\n    if (editRow) {\n      applyEdits(editRow, data);\n    }\n    if (siblingRow) {\n      applyEdits(siblingRow, data);\n    }\n    return data;\n  }\n  getEdit(position, copy) {\n    const edit = this._getEdit(position);\n    return copy && edit ? {\n      ...edit\n    } : edit;\n  }\n  _getEdit(position) {\n    if (this.suspendEdits) {\n      return void 0;\n    }\n    if (this.edits.size === 0) {\n      return void 0;\n    }\n    return position.rowNode && position.column && this.getEditRow(position.rowNode)?.get(position.column);\n  }\n  getEditMap(copy = true) {\n    if (this.suspendEdits || this.edits.size === 0) {\n      return /* @__PURE__ */new Map();\n    }\n    if (!copy) {\n      return this.edits;\n    }\n    const map = /* @__PURE__ */new Map();\n    this.edits.forEach((editRow, rowNode) => map.set(rowNode, new Map(editRow)));\n    return map;\n  }\n  setEditMap(newEdits) {\n    this.edits.clear();\n    newEdits.forEach((editRow, rowNode) => {\n      const newRow = /* @__PURE__ */new Map();\n      editRow.forEach((cellData, column) =>\n      // Ensure we copy the cell data to avoid reference issues\n      newRow.set(column, {\n        ...cellData\n      }));\n      this.edits.set(rowNode, newRow);\n    });\n  }\n  setEdit(position, edit) {\n    (this.edits.size === 0 || !this.edits.has(position.rowNode)) && this.edits.set(position.rowNode, /* @__PURE__ */new Map());\n    const currentEdit = {\n      ...this._getEdit(position),\n      ...edit\n    };\n    this.getEditRow(position.rowNode).set(position.column, currentEdit);\n    return currentEdit;\n  }\n  clearEditValue(position) {\n    const {\n      rowNode,\n      column\n    } = position;\n    if (rowNode) {\n      if (column) {\n        const edit = this._getEdit(position);\n        if (edit) {\n          edit.editorValue = void 0;\n          edit.pendingValue = edit.sourceValue;\n          edit.state = \"changed\";\n        }\n      } else {\n        this.getEditRow(rowNode)?.forEach(cellData => {\n          cellData.editorValue = void 0;\n          cellData.pendingValue = cellData.sourceValue;\n          cellData.state = \"changed\";\n        });\n      }\n    }\n  }\n  getState(position) {\n    if (this.suspendEdits) {\n      return void 0;\n    }\n    return this.getEdit(position)?.state;\n  }\n  getEditPositions(editMap) {\n    if (this.suspendEdits || (editMap ?? this.edits).size === 0) {\n      return [];\n    }\n    const positions = [];\n    (editMap ?? this.edits).forEach((editRow, rowNode) => {\n      for (const column of editRow.keys()) {\n        positions.push({\n          rowNode,\n          column,\n          ...editRow.get(column)\n        });\n      }\n    });\n    return positions;\n  }\n  hasRowEdits(rowNode, params) {\n    if (this.suspendEdits) {\n      return false;\n    }\n    if (this.edits.size === 0) {\n      return false;\n    }\n    const rowEdits = this.getEditRow(rowNode, params);\n    return !!rowEdits;\n  }\n  hasEdits(position = {}, params = {}) {\n    if (this.suspendEdits) {\n      return false;\n    }\n    if (this.edits.size === 0) {\n      return false;\n    }\n    const {\n      rowNode,\n      column\n    } = position;\n    const {\n      withOpenEditor\n    } = params;\n    if (rowNode) {\n      const rowEdits = this.getEditRow(rowNode, params);\n      if (!rowEdits) {\n        return false;\n      }\n      if (column) {\n        if (withOpenEditor) {\n          return this.getEdit(position)?.state === \"editing\";\n        }\n        return rowEdits.has(column) ?? false;\n      }\n      if (rowEdits.size !== 0) {\n        if (withOpenEditor) {\n          return Array.from(rowEdits.values()).some(({\n            state\n          }) => state === \"editing\");\n        }\n        return true;\n      }\n      return false;\n    }\n    if (withOpenEditor) {\n      return this.getEditPositions().some(({\n        state\n      }) => state === \"editing\");\n    }\n    return this.edits.size > 0;\n  }\n  start(position) {\n    const map = this.getEditRow(position.rowNode) ?? /* @__PURE__ */new Map();\n    const {\n      rowNode,\n      column\n    } = position;\n    if (column && !map.has(column)) {\n      map.set(column, {\n        editorValue: void 0,\n        pendingValue: UNEDITED,\n        sourceValue: this.beans.valueSvc.getValue(column, rowNode, true, \"api\"),\n        state: \"editing\"\n      });\n    }\n    this.edits.set(rowNode, map);\n  }\n  stop(position) {\n    if (!this.hasEdits(position)) {\n      return;\n    }\n    if (position) {\n      this.removeEdits(position);\n    } else {\n      this.clear();\n    }\n    return;\n  }\n  clear() {\n    for (const pendingRowEdits of this.edits.values()) {\n      pendingRowEdits.clear();\n    }\n    this.edits.clear();\n  }\n  getCellValidationModel() {\n    return this.cellValidations;\n  }\n  getRowValidationModel() {\n    return this.rowValidations;\n  }\n  setCellValidationModel(model) {\n    this.cellValidations = model;\n  }\n  setRowValidationModel(model) {\n    this.rowValidations = model;\n  }\n  destroy() {\n    super.destroy();\n    this.clear();\n  }\n};\nvar EditCellValidationModel = class {\n  constructor() {\n    this.cellValidations = /* @__PURE__ */new Map();\n  }\n  getCellValidation(position) {\n    const {\n      rowNode,\n      column\n    } = position || {};\n    return this.cellValidations?.get(rowNode)?.get(column);\n  }\n  hasCellValidation(position) {\n    if (!position || !position.rowNode || !position.column) {\n      return this.cellValidations.size > 0;\n    }\n    return !!this.getCellValidation(position);\n  }\n  setCellValidation(position, validation2) {\n    const {\n      rowNode,\n      column\n    } = position;\n    if (!this.cellValidations.has(rowNode)) {\n      this.cellValidations.set(rowNode, /* @__PURE__ */new Map());\n    }\n    this.cellValidations.get(rowNode).set(column, validation2);\n  }\n  clearCellValidation(position) {\n    const {\n      rowNode,\n      column\n    } = position;\n    this.cellValidations.get(rowNode)?.delete(column);\n  }\n  setCellValidationMap(validationMap) {\n    this.cellValidations = validationMap;\n  }\n  getCellValidationMap() {\n    return this.cellValidations;\n  }\n  clearCellValidationMap() {\n    this.cellValidations.clear();\n  }\n};\nvar EditRowValidationModel = class {\n  constructor() {\n    this.rowValidations = /* @__PURE__ */new Map();\n  }\n  getRowValidation(position) {\n    const {\n      rowNode\n    } = position || {};\n    return this.rowValidations.get(rowNode);\n  }\n  hasRowValidation(position) {\n    if (!position || !position.rowNode) {\n      return this.rowValidations.size > 0;\n    }\n    return !!this.getRowValidation(position);\n  }\n  setRowValidation({\n    rowNode\n  }, rowValidation) {\n    this.rowValidations.set(rowNode, rowValidation);\n  }\n  clearRowValidation({\n    rowNode\n  }) {\n    this.rowValidations.delete(rowNode);\n  }\n  setRowValidationMap(validationMap) {\n    this.rowValidations = validationMap;\n  }\n  getRowValidationMap() {\n    return this.rowValidations;\n  }\n  clearRowValidationMap() {\n    this.rowValidations.clear();\n  }\n};\n\n// packages/ag-grid-community/src/entities/positionUtils.ts\nfunction _createCellId(cellPosition) {\n  const {\n    rowIndex,\n    rowPinned,\n    column\n  } = cellPosition;\n  return `${rowIndex}.${rowPinned == null ? \"null\" : rowPinned}.${column.getId()}`;\n}\nfunction _areCellsEqual(cellA, cellB) {\n  const colsMatch = cellA.column === cellB.column;\n  const floatingMatch = cellA.rowPinned === cellB.rowPinned;\n  const indexMatch = cellA.rowIndex === cellB.rowIndex;\n  return colsMatch && floatingMatch && indexMatch;\n}\nfunction _isRowBefore(rowA, rowB) {\n  switch (rowA.rowPinned) {\n    case \"top\":\n      if (rowB.rowPinned !== \"top\") {\n        return true;\n      }\n      break;\n    case \"bottom\":\n      if (rowB.rowPinned !== \"bottom\") {\n        return false;\n      }\n      break;\n    default:\n      if (_exists(rowB.rowPinned)) {\n        return rowB.rowPinned !== \"top\";\n      }\n      break;\n  }\n  return rowA.rowIndex < rowB.rowIndex;\n}\nfunction _isSameRow(rowA, rowB) {\n  if (!rowA && !rowB) {\n    return true;\n  }\n  if (rowA && !rowB || !rowA && rowB) {\n    return false;\n  }\n  return rowA.rowIndex === rowB.rowIndex && rowA.rowPinned == rowB.rowPinned;\n}\nfunction _getFirstRow(beans) {\n  let rowIndex = 0;\n  let rowPinned;\n  const {\n    pinnedRowModel,\n    rowModel,\n    pageBounds\n  } = beans;\n  if (pinnedRowModel?.getPinnedTopRowCount()) {\n    rowPinned = \"top\";\n  } else if (rowModel.getRowCount()) {\n    rowPinned = null;\n    rowIndex = pageBounds.getFirstRow();\n  } else if (pinnedRowModel?.getPinnedBottomRowCount()) {\n    rowPinned = \"bottom\";\n  }\n  return rowPinned === void 0 ? null : {\n    rowIndex,\n    rowPinned\n  };\n}\nfunction _getLastRow(beans) {\n  let rowIndex;\n  let rowPinned = null;\n  const {\n    pinnedRowModel,\n    pageBounds\n  } = beans;\n  const pinnedBottomCount = pinnedRowModel?.getPinnedBottomRowCount();\n  const pinnedTopCount = pinnedRowModel?.getPinnedTopRowCount();\n  if (pinnedBottomCount) {\n    rowPinned = \"bottom\";\n    rowIndex = pinnedBottomCount - 1;\n  } else if (beans.rowModel.getRowCount()) {\n    rowPinned = null;\n    rowIndex = pageBounds.getLastRow();\n  } else if (pinnedTopCount) {\n    rowPinned = \"top\";\n    rowIndex = pinnedTopCount - 1;\n  }\n  return rowIndex === void 0 ? null : {\n    rowIndex,\n    rowPinned\n  };\n}\nfunction _getRowNode(beans, gridRow) {\n  switch (gridRow.rowPinned) {\n    case \"top\":\n      return beans.pinnedRowModel?.getPinnedTopRow(gridRow.rowIndex);\n    case \"bottom\":\n      return beans.pinnedRowModel?.getPinnedBottomRow(gridRow.rowIndex);\n    default:\n      return beans.rowModel.getRow(gridRow.rowIndex);\n  }\n}\nfunction _getCellByPosition(beans, cellPosition) {\n  const spannedCellCtrl = beans.spannedRowRenderer?.getCellByPosition(cellPosition);\n  if (spannedCellCtrl) {\n    return spannedCellCtrl;\n  }\n  const rowCtrl = beans.rowRenderer.getRowByPosition(cellPosition);\n  if (!rowCtrl) {\n    return null;\n  }\n  return rowCtrl.getCellCtrl(cellPosition.column);\n}\nfunction _getRowById(beans, rowId, rowPinned) {\n  const {\n    rowModel: rm,\n    pinnedRowModel: prm\n  } = beans;\n  let node;\n  node ?? (node = rm?.getRowNode(rowId));\n  if (rowPinned) {\n    node ?? (node = prm?.getPinnedRowById(rowId, rowPinned));\n  } else {\n    node ?? (node = prm?.getPinnedRowById(rowId, \"top\"));\n    node ?? (node = prm?.getPinnedRowById(rowId, \"bottom\"));\n  }\n  return node;\n}\nfunction _getRowAbove(beans, rowPosition) {\n  const {\n    rowIndex: index,\n    rowPinned: pinned\n  } = rowPosition;\n  const {\n    pageBounds,\n    pinnedRowModel,\n    rowModel\n  } = beans;\n  if (index === 0) {\n    if (pinned === \"top\") {\n      return null;\n    }\n    if (pinned === \"bottom\" && rowModel.isRowsToRender()) {\n      return {\n        rowIndex: pageBounds.getLastRow(),\n        rowPinned: null\n      };\n    }\n    return pinnedRowModel?.isRowsToRender(\"top\") ? {\n      rowIndex: pinnedRowModel.getPinnedTopRowCount() - 1,\n      rowPinned: \"top\"\n    } : null;\n  }\n  const rowNode = pinned ? void 0 : rowModel.getRow(index);\n  return getNextStickyPosition(beans, rowNode, true) ?? {\n    rowIndex: index - 1,\n    rowPinned: pinned\n  };\n}\nfunction _getRowBelow(beans, rowPosition) {\n  const {\n    rowIndex: index,\n    rowPinned: pinned\n  } = rowPosition;\n  const {\n    pageBounds,\n    pinnedRowModel,\n    rowModel\n  } = beans;\n  if (isLastRowInContainer(beans, rowPosition)) {\n    if (pinned === \"bottom\") {\n      return null;\n    }\n    if (pinned === \"top\" && rowModel.isRowsToRender()) {\n      return {\n        rowIndex: pageBounds.getFirstRow(),\n        rowPinned: null\n      };\n    }\n    return pinnedRowModel?.isRowsToRender(\"bottom\") ? {\n      rowIndex: 0,\n      rowPinned: \"bottom\"\n    } : null;\n  }\n  const rowNode = pinned ? void 0 : rowModel.getRow(index);\n  return getNextStickyPosition(beans, rowNode) ?? {\n    rowIndex: index + 1,\n    rowPinned: pinned\n  };\n}\nfunction getNextStickyPosition(beans, rowNode, up = false) {\n  const {\n    gos,\n    rowRenderer\n  } = beans;\n  if (!rowNode?.sticky || !_isGroupRowsSticky(gos)) {\n    return;\n  }\n  const stickyTopCtrls = rowRenderer.getStickyTopRowCtrls();\n  const stickyBottomCtrls = rowRenderer.getStickyBottomRowCtrls();\n  const isStickyTop = !stickyBottomCtrls.some(ctrl => ctrl.rowNode.rowIndex === rowNode.rowIndex);\n  const stickyRowCtrls = isStickyTop ? stickyTopCtrls : stickyBottomCtrls;\n  const increment = (up ? -1 : 1) * (isStickyTop ? -1 : 1);\n  let nextCtrl;\n  for (let i = 0; i < stickyRowCtrls.length; i++) {\n    if (stickyRowCtrls[i].rowNode.rowIndex === rowNode.rowIndex) {\n      nextCtrl = stickyRowCtrls[i + increment];\n      break;\n    }\n  }\n  return nextCtrl ? {\n    rowIndex: nextCtrl.rowNode.rowIndex,\n    rowPinned: null\n  } : void 0;\n}\nfunction isLastRowInContainer(beans, rowPosition) {\n  const {\n    rowPinned,\n    rowIndex\n  } = rowPosition;\n  const {\n    pinnedRowModel,\n    pageBounds\n  } = beans;\n  if (rowPinned === \"top\") {\n    const lastTopIndex = (pinnedRowModel?.getPinnedTopRowCount() ?? 0) - 1;\n    return lastTopIndex <= rowIndex;\n  }\n  if (rowPinned === \"bottom\") {\n    const lastBottomIndex = (pinnedRowModel?.getPinnedBottomRowCount() ?? 0) - 1;\n    return lastBottomIndex <= rowIndex;\n  }\n  const lastBodyIndex = pageBounds.getLastRow();\n  return lastBodyIndex <= rowIndex;\n}\n\n// packages/ag-grid-community/src/edit/utils/controllers.ts\nfunction _getRowCtrl(beans, inputs = {}) {\n  const {\n    rowIndex,\n    rowId,\n    rowCtrl,\n    rowPinned\n  } = inputs;\n  if (rowCtrl) {\n    return rowCtrl;\n  }\n  const {\n    rowModel,\n    rowRenderer\n  } = beans;\n  let {\n    rowNode\n  } = inputs;\n  if (!rowNode) {\n    if (rowId) {\n      rowNode = _getRowById(beans, rowId, rowPinned);\n    } else if (rowIndex != null) {\n      rowNode = rowModel.getRow(rowIndex);\n    }\n  }\n  return rowRenderer.getRowCtrls(rowNode ? [rowNode] : [])?.[0];\n}\nfunction _getCellCtrl(beans, inputs = {}) {\n  const {\n    cellCtrl,\n    colId,\n    columnId,\n    column\n  } = inputs;\n  if (cellCtrl) {\n    return cellCtrl;\n  }\n  const actualColumn = beans.colModel.getCol(colId ?? columnId ?? _getColId(column));\n  const rowCtrl = inputs.rowCtrl ?? _getRowCtrl(beans, inputs);\n  const result = rowCtrl?.getCellCtrl(actualColumn) ?? void 0;\n  if (result) {\n    return result;\n  }\n  const rowNode = inputs.rowNode ?? rowCtrl?.rowNode;\n  if (rowNode) {\n    return beans.rowRenderer.getCellCtrls([rowNode], [actualColumn])?.[0];\n  }\n  return void 0;\n}\nfunction _stopEditing(beans) {\n  const {\n    editSvc\n  } = beans;\n  if (editSvc?.isBatchEditing()) {\n    _destroyEditors(beans);\n  } else {\n    editSvc?.stopEditing(void 0, {\n      source: \"api\"\n    });\n  }\n}\nfunction _addStopEditingWhenGridLosesFocus(bean, beans, viewports) {\n  const {\n    gos,\n    popupSvc\n  } = beans;\n  if (!gos.get(\"stopEditingWhenCellsLoseFocus\")) {\n    return;\n  }\n  const focusOutListener = event => {\n    const elementWithFocus = event.relatedTarget;\n    if (_getTabIndex(elementWithFocus) === null) {\n      _stopEditing(beans);\n      return;\n    }\n    let clickInsideGrid =\n    // see if click came from inside the viewports\n    viewports.some(viewport => viewport.contains(elementWithFocus)) &&\n    // and also that it's not from a detail grid\n    _isElementInThisGrid(gos, elementWithFocus);\n    if (!clickInsideGrid) {\n      clickInsideGrid = !!popupSvc && (popupSvc.getActivePopups().some(popup => popup.contains(elementWithFocus)) || popupSvc.isElementWithinCustomPopup(elementWithFocus));\n    }\n    if (!clickInsideGrid) {\n      _stopEditing(beans);\n    }\n  };\n  viewports.forEach(viewport => bean.addManagedElementListeners(viewport, {\n    focusout: focusOutListener\n  }));\n}\nfunction _getColId(column) {\n  if (!column) {\n    return void 0;\n  }\n  if (typeof column === \"string\") {\n    return column;\n  }\n  return column.getColId();\n}\n\n// packages/ag-grid-community/src/edit/utils/editors.ts\nvar UNEDITED = Symbol(\"unedited\");\nfunction getCellEditorInstanceMap(beans, params = {}) {\n  const res = [];\n  const ctrls = beans.rowRenderer.getCellCtrls(params.rowNodes, params.columns);\n  for (const ctrl of ctrls) {\n    const cellEditor = ctrl.comp?.getCellEditor();\n    if (cellEditor) {\n      res.push({\n        ctrl,\n        editor: _unwrapUserComp(cellEditor)\n      });\n    }\n  }\n  return res;\n}\nvar getCellEditorInstances = (beans, params = {}) => getCellEditorInstanceMap(beans, params).map(res => res.editor);\nfunction _setupEditors(beans, editingCells, position, key, event, cellStartedEdit) {\n  if (editingCells.length === 0 && position?.rowNode && position?.column) {\n    _setupEditor(beans, position, {\n      key,\n      event,\n      cellStartedEdit\n    });\n  }\n  const {\n    valueSvc,\n    editSvc,\n    editModelSvc\n  } = beans;\n  const {\n    rowNode,\n    column\n  } = position ?? {};\n  for (const cellPosition of editingCells) {\n    const {\n      rowNode: cellRowNode,\n      column: cellColumn\n    } = cellPosition;\n    const curCellCtrl = _getCellCtrl(beans, cellPosition);\n    if (!curCellCtrl) {\n      if (cellRowNode && cellColumn) {\n        const oldValue = valueSvc.getValue(cellColumn, cellRowNode, void 0, \"api\");\n        const isNewValueCell = position?.rowNode === cellRowNode && position?.column === cellColumn;\n        const cellStartValue = isNewValueCell && key || void 0;\n        const newValue = cellStartValue ?? editSvc?.getCellDataValue(cellPosition, false) ?? valueSvc.getValueForDisplay(cellColumn, cellRowNode)?.value ?? oldValue ?? UNEDITED;\n        editModelSvc?.setEdit(cellPosition, {\n          pendingValue: newValue,\n          sourceValue: oldValue,\n          state: \"editing\"\n        });\n      }\n      continue;\n    }\n    const shouldStartEditing = cellStartedEdit && rowNode === curCellCtrl.rowNode && curCellCtrl.column === column;\n    _setupEditor(beans, {\n      rowNode,\n      column: curCellCtrl.column\n    }, {\n      key: shouldStartEditing ? key : null,\n      event: shouldStartEditing ? event : null,\n      cellStartedEdit: shouldStartEditing\n    });\n  }\n  return;\n}\nfunction _sourceAndPendingDiffer({\n  pendingValue,\n  sourceValue\n}) {\n  if (pendingValue === UNEDITED) {\n    pendingValue = sourceValue;\n  }\n  return pendingValue !== sourceValue;\n}\nfunction _setupEditor(beans, position, params) {\n  const {\n    key,\n    event,\n    cellStartedEdit,\n    silent\n  } = params ?? {};\n  const cellCtrl = _getCellCtrl(beans, position);\n  const editorComp = cellCtrl?.comp?.getCellEditor();\n  const editorParams = _createEditorParams(beans, position, key, cellStartedEdit);\n  const previousEdit = beans.editModelSvc?.getEdit(position);\n  let newValue = key?.length === 1 ? key : editorParams.value;\n  if (newValue === void 0) {\n    newValue = previousEdit?.sourceValue;\n  }\n  beans.editModelSvc?.setEdit(position, {\n    editorValue: newValue,\n    state: \"editing\"\n  });\n  if (editorComp) {\n    editorComp.refresh?.(editorParams);\n    return;\n  }\n  const colDef = position.column.getColDef();\n  const compDetails = _getCellEditorDetails(beans.userCompFactory, colDef, editorParams);\n  const popup = compDetails?.popupFromSelector != null ? compDetails.popupFromSelector : !!colDef.cellEditorPopup;\n  const popupLocation = compDetails?.popupPositionFromSelector != null ? compDetails.popupPositionFromSelector : colDef.cellEditorPopupPosition;\n  checkAndPreventDefault(compDetails.params, event);\n  if (cellCtrl) {\n    cellCtrl.editCompDetails = compDetails;\n    cellCtrl.comp?.setEditDetails(compDetails, popup, popupLocation, beans.gos.get(\"reactiveCustomComponents\"));\n    cellCtrl?.rowCtrl?.refreshRow({\n      suppressFlash: true\n    });\n    if (!silent) {\n      beans.editSvc?.dispatchCellEvent(position, event, \"cellEditingStarted\");\n    }\n  }\n  return;\n}\nfunction _valueFromEditor(cellEditor) {\n  const noValueResult = {\n    editorValueExists: false\n  };\n  const validationErrors = cellEditor.getValidationErrors?.();\n  if ((validationErrors?.length ?? 0) > 0) {\n    return noValueResult;\n  }\n  const editorValue = cellEditor.getValue();\n  return {\n    editorValue,\n    editorValueExists: true\n  };\n}\nfunction _createEditorParams(beans, position, key, cellStartedEdit) {\n  const {\n    valueSvc,\n    gos,\n    editSvc\n  } = beans;\n  const cellCtrl = _getCellCtrl(beans, position);\n  const rowIndex = position.rowNode?.rowIndex ?? void 0;\n  const batchEdit = editSvc?.isBatchEditing();\n  const agColumn = beans.colModel.getCol(position.column.getId());\n  const {\n    rowNode,\n    column\n  } = position;\n  const editor = cellCtrl.comp?.getCellEditor();\n  const initialNewValue = editSvc?.getCellDataValue(position, false) ?? (editor ? _valueFromEditor(editor)?.editorValue : void 0);\n  const value = initialNewValue === UNEDITED ? valueSvc.getValueForDisplay(agColumn, rowNode)?.value : initialNewValue;\n  return _addGridCommonParams(gos, {\n    value,\n    eventKey: key ?? null,\n    column,\n    colDef: column.getColDef(),\n    rowIndex,\n    node: rowNode,\n    data: rowNode.data,\n    cellStartedEdit: cellStartedEdit ?? false,\n    onKeyDown: cellCtrl?.onKeyDown.bind(cellCtrl),\n    stopEditing: suppressNavigateAfterEdit => {\n      editSvc.stopEditing(position, {\n        source: batchEdit ? \"ui\" : \"api\",\n        suppressNavigateAfterEdit\n      });\n      _destroyEditor(beans, position);\n    },\n    eGridCell: cellCtrl?.eGui,\n    parseValue: newValue => valueSvc.parseValue(agColumn, rowNode, newValue, cellCtrl?.value),\n    formatValue: cellCtrl?.formatValue.bind(cellCtrl),\n    validate: () => {\n      editSvc?.validateEdit();\n    }\n  });\n}\nfunction _purgeUnchangedEdits(beans, includeEditing) {\n  const {\n    editModelSvc\n  } = beans;\n  editModelSvc?.getEditMap().forEach((editRow, rowNode) => {\n    editRow.forEach((edit, column) => {\n      if (!includeEditing && (edit.state === \"editing\" || edit.pendingValue === UNEDITED)) {\n        return;\n      }\n      if (!_sourceAndPendingDiffer(edit) && (edit.state !== \"editing\" || includeEditing)) {\n        editModelSvc?.removeEdits({\n          rowNode,\n          column\n        });\n      }\n    });\n  });\n}\nfunction _refreshEditorOnColDefChanged(beans, cellCtrl) {\n  const editor = cellCtrl.comp?.getCellEditor();\n  if (!editor?.refresh) {\n    return;\n  }\n  const {\n    eventKey,\n    cellStartedEdit\n  } = cellCtrl.editCompDetails.params;\n  const {\n    column\n  } = cellCtrl;\n  const editorParams = _createEditorParams(beans, cellCtrl, eventKey, cellStartedEdit);\n  const colDef = column.getColDef();\n  const compDetails = _getCellEditorDetails(beans.userCompFactory, colDef, editorParams);\n  editor.refresh(checkAndPreventDefault(compDetails.params, eventKey));\n}\nfunction checkAndPreventDefault(params, event) {\n  if (event instanceof KeyboardEvent && params.column.getColDef().cellEditor === \"agNumberCellEditor\") {\n    params.suppressPreventDefault = [\"-\", \"+\", \".\", \"e\"].includes(event?.key ?? \"\") || params.suppressPreventDefault;\n  } else {\n    event?.preventDefault?.();\n  }\n  return params;\n}\nfunction _syncFromEditors(beans, persist) {\n  beans.editModelSvc?.getEditPositions().forEach(cellId => {\n    const cellCtrl = _getCellCtrl(beans, cellId);\n    if (!cellCtrl) {\n      return;\n    }\n    const editor = cellCtrl.comp.getCellEditor();\n    if (!editor) {\n      return;\n    }\n    const {\n      editorValue,\n      editorValueExists\n    } = _valueFromEditor(editor);\n    _syncFromEditor(beans, cellId, persist, editorValue, void 0, !editorValueExists);\n  });\n}\nfunction _syncFromEditor(beans, position, persist, editorValue, _source, valueSameAsSource) {\n  const {\n    editModelSvc,\n    valueSvc\n  } = beans;\n  if (!editModelSvc) {\n    return;\n  }\n  const {\n    rowNode,\n    column\n  } = position;\n  if (!(rowNode && column)) {\n    return;\n  }\n  const cellCtrl = _getCellCtrl(beans, position);\n  const hasEditor = !!cellCtrl?.comp?.getCellEditor();\n  let edit = editModelSvc.getEdit(position, true);\n  if (!edit?.sourceValue) {\n    edit = editModelSvc.setEdit(position, {\n      sourceValue: valueSvc.getValue(column, rowNode, void 0, \"api\"),\n      pendingValue: UNEDITED,\n      state: hasEditor ? \"editing\" : \"changed\"\n    });\n  }\n  editModelSvc.setEdit(position, {\n    editorValue: valueSameAsSource ? edit.sourceValue : editorValue,\n    state: hasEditor ? \"editing\" : \"changed\"\n  });\n  if (persist) {\n    _persistEditorValue(beans, position);\n  }\n}\nfunction _persistEditorValue(beans, position) {\n  const {\n    editModelSvc\n  } = beans;\n  const edit = editModelSvc?.getEdit(position, true);\n  editModelSvc?.setEdit(position, {\n    pendingValue: edit?.editorValue\n  });\n}\nfunction _destroyEditors(beans, edits, params) {\n  if (!edits) {\n    edits = beans.editModelSvc?.getEditPositions();\n  }\n  edits.forEach(cellPosition => _destroyEditor(beans, cellPosition, params));\n}\nfunction _destroyEditor(beans, position, params) {\n  const {\n    editSvc,\n    editModelSvc\n  } = beans;\n  const {\n    rowNode,\n    column\n  } = position;\n  const cellCtrl = _getCellCtrl(beans, position);\n  if (!cellCtrl) {\n    if (editModelSvc?.hasEdits(position) && rowNode && column) {\n      editModelSvc?.setEdit(position, {\n        state: \"changed\"\n      });\n    }\n    return;\n  }\n  const {\n    comp\n  } = cellCtrl;\n  if (comp && !comp.getCellEditor()) {\n    return;\n  }\n  const errorMessages = comp?.getCellEditor()?.getValidationErrors?.();\n  const cellValidationModel = editModelSvc?.getCellValidationModel();\n  if (errorMessages?.length) {\n    cellValidationModel?.setCellValidation(position, {\n      errorMessages\n    });\n  } else {\n    cellValidationModel?.clearCellValidation(position);\n  }\n  if (editModelSvc?.getEdit(position)) {\n    editModelSvc?.setEdit(position, {\n      state: \"changed\"\n    });\n  }\n  comp?.setEditDetails();\n  comp?.refreshEditStyles(false, false);\n  cellCtrl?.refreshCell({\n    force: true,\n    suppressFlash: true\n  });\n  const latest = editModelSvc?.getEdit(position);\n  if (latest?.state === \"changed\" && !params?.silent) {\n    editSvc?.dispatchCellEvent(position, params?.event, \"cellEditingStopped\", {\n      valueChanged: _sourceAndPendingDiffer(latest),\n      newValue: latest?.pendingValue,\n      oldValue: latest?.sourceValue\n    });\n  }\n}\nfunction _populateModelValidationErrors(beans) {\n  const mappedEditors = getCellEditorInstanceMap(beans);\n  const cellValidationModel = new EditCellValidationModel();\n  const {\n    ariaAnnounce,\n    localeSvc,\n    editModelSvc,\n    gos\n  } = beans;\n  const includeRows = gos.get(\"editType\") === \"fullRow\";\n  const translate = _getLocaleTextFunc(localeSvc);\n  const ariaValidationErrorPrefix = translate(\"ariaValidationErrorPrefix\", \"Cell Editor Validation\");\n  for (const mappedEditor of mappedEditors) {\n    const {\n      ctrl,\n      editor\n    } = mappedEditor;\n    const {\n      rowNode,\n      column\n    } = ctrl;\n    const errorMessages = editor.getValidationErrors?.() ?? [];\n    const el = editor.getValidationElement?.(false) || !editor.isPopup?.() && ctrl.eGui;\n    if (el) {\n      const isInvalid = errorMessages != null && errorMessages.length > 0;\n      const invalidMessage = isInvalid ? errorMessages.join(\". \") : \"\";\n      _setAriaInvalid(el, isInvalid);\n      if (isInvalid) {\n        ariaAnnounce.announceValue(`${ariaValidationErrorPrefix} ${errorMessages}`, \"editorValidation\");\n      }\n      if (el instanceof HTMLInputElement) {\n        el.setCustomValidity(invalidMessage);\n      } else {\n        el.classList.toggle(\"invalid\", isInvalid);\n      }\n    }\n    if (errorMessages?.length > 0) {\n      cellValidationModel.setCellValidation({\n        rowNode,\n        column\n      }, {\n        errorMessages\n      });\n    }\n  }\n  _syncFromEditors(beans, false);\n  editModelSvc?.setCellValidationModel(cellValidationModel);\n  const rowCtrlSet = /* @__PURE__ */new Set();\n  for (const {\n    ctrl\n  } of mappedEditors) {\n    rowCtrlSet.add(ctrl.rowCtrl);\n  }\n  if (includeRows) {\n    const rowValidations = _generateRowValidationErrors(beans);\n    editModelSvc?.setRowValidationModel(rowValidations);\n  }\n  for (const rowCtrl of rowCtrlSet.values()) {\n    rowCtrl.rowEditStyleFeature?.applyRowStyles();\n    for (const cellCtrl of rowCtrl.getAllCellCtrls()) {\n      cellCtrl.tooltipFeature?.refreshTooltip(true);\n      cellCtrl.editorTooltipFeature?.refreshTooltip(true);\n      cellCtrl.editStyleFeature?.applyCellStyles?.();\n    }\n  }\n}\nvar _generateRowValidationErrors = beans => {\n  const rowValidationModel = new EditRowValidationModel();\n  const getFullRowEditValidationErrors = beans.gos.get(\"getFullRowEditValidationErrors\");\n  const editMap = beans.editModelSvc?.getEditMap();\n  if (!editMap) {\n    return rowValidationModel;\n  }\n  for (const rowNode of editMap.keys()) {\n    const rowEditMap = editMap.get(rowNode);\n    if (!rowEditMap) {\n      continue;\n    }\n    const editorsState = [];\n    const {\n      rowIndex,\n      rowPinned\n    } = rowNode;\n    for (const column of rowEditMap.keys()) {\n      const editValue = rowEditMap.get(column);\n      if (!editValue) {\n        continue;\n      }\n      const {\n        editorValue,\n        pendingValue,\n        sourceValue\n      } = editValue;\n      const newValue = editorValue ?? (pendingValue === UNEDITED ? void 0 : pendingValue) ?? sourceValue;\n      editorsState.push({\n        column,\n        colId: column.getColId(),\n        rowIndex,\n        rowPinned,\n        oldValue: sourceValue,\n        newValue\n      });\n    }\n    const errorMessages = getFullRowEditValidationErrors?.({\n      editorsState\n    }) ?? [];\n    if (errorMessages.length > 0) {\n      rowValidationModel.setRowValidation({\n        rowNode\n      }, {\n        errorMessages\n      });\n    }\n  }\n  return rowValidationModel;\n};\nfunction _validateEdit(beans) {\n  _populateModelValidationErrors(beans);\n  const map = beans.editModelSvc?.getCellValidationModel().getCellValidationMap();\n  if (!map) {\n    return null;\n  }\n  const validations = [];\n  map.forEach((rowValidations, rowNode) => {\n    rowValidations.forEach(({\n      errorMessages\n    }, column) => {\n      validations.push({\n        column,\n        rowIndex: rowNode.rowIndex,\n        rowPinned: rowNode.rowPinned,\n        messages: errorMessages ?? null\n      });\n    });\n  });\n  return validations;\n}\n\n// packages/ag-grid-community/src/headerRendering/cells/cssClassApplier.ts\nvar CSS_FIRST_COLUMN = \"ag-column-first\";\nvar CSS_LAST_COLUMN = \"ag-column-last\";\nfunction _getHeaderClassesFromColDef(abstractColDef, gos, column, columnGroup) {\n  if (_missing(abstractColDef)) {\n    return [];\n  }\n  return getColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, gos, column, columnGroup);\n}\nfunction _getToolPanelClassesFromColDef(abstractColDef, gos, column, columnGroup) {\n  if (_missing(abstractColDef)) {\n    return [];\n  }\n  return getColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, gos, column, columnGroup);\n}\nfunction refreshFirstAndLastStyles(comp, column, presentedColsService) {\n  comp.toggleCss(CSS_FIRST_COLUMN, presentedColsService.isColAtEdge(column, \"first\"));\n  comp.toggleCss(CSS_LAST_COLUMN, presentedColsService.isColAtEdge(column, \"last\"));\n}\nfunction getClassParams(abstractColDef, gos, column, columnGroup) {\n  return _addGridCommonParams(gos, {\n    // bad naming, as colDef here can be a group or a column,\n    // however most people won't appreciate the difference,\n    // so keeping it as colDef to avoid confusion.\n    colDef: abstractColDef,\n    column,\n    columnGroup\n  });\n}\nfunction getColumnClassesFromCollDef(classesOrFunc, abstractColDef, gos, column, columnGroup) {\n  if (_missing(classesOrFunc)) {\n    return [];\n  }\n  let classToUse;\n  if (typeof classesOrFunc === \"function\") {\n    const params = getClassParams(abstractColDef, gos, column, columnGroup);\n    classToUse = classesOrFunc(params);\n  } else {\n    classToUse = classesOrFunc;\n  }\n  if (typeof classToUse === \"string\") {\n    return [classToUse];\n  }\n  if (Array.isArray(classToUse)) {\n    return [...classToUse];\n  }\n  return [];\n}\n\n// packages/ag-grid-community/src/pinnedRowModel/pinnedRowUtils.ts\nfunction _isManualPinnedRow(rowNode) {\n  return !!(rowNode.rowPinned && rowNode.pinnedSibling);\n}\nfunction _getNodesInRangeForSelection(rowModel, float, start, end) {\n  const isTop = float === \"top\";\n  if (!start) {\n    return _getNodesInRangeForSelection(rowModel, float, isTop ? rowModel.getPinnedTopRow(0) : rowModel.getPinnedBottomRow(0), end);\n  }\n  if (!end) {\n    const count = isTop ? rowModel.getPinnedTopRowCount() : rowModel.getPinnedBottomRowCount();\n    return _getNodesInRangeForSelection(rowModel, float, start, isTop ? rowModel.getPinnedTopRow(count - 1) : rowModel.getPinnedBottomRow(count - 1));\n  }\n  let started = false;\n  let finished = false;\n  const range = [];\n  rowModel.forEachPinnedRow(float, node => {\n    if (node === start && !started) {\n      started = true;\n      range.push(node);\n      return;\n    }\n    if (started && node === end) {\n      finished = true;\n      range.push(node);\n      return;\n    }\n    if (started && !finished) {\n      range.push(node);\n    }\n  });\n  return range;\n}\n\n// packages/ag-grid-community/src/constants/keyCode.ts\nvar KeyCode = {\n  BACKSPACE: \"Backspace\",\n  TAB: \"Tab\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  SPACE: \" \",\n  LEFT: \"ArrowLeft\",\n  UP: \"ArrowUp\",\n  RIGHT: \"ArrowRight\",\n  DOWN: \"ArrowDown\",\n  DELETE: \"Delete\",\n  F2: \"F2\",\n  PAGE_UP: \"PageUp\",\n  PAGE_DOWN: \"PageDown\",\n  PAGE_HOME: \"Home\",\n  PAGE_END: \"End\",\n  // these should be used with `event.code` instead of `event.key`\n  // as `event.key` changes when non-latin keyboards are used\n  A: \"KeyA\",\n  C: \"KeyC\",\n  D: \"KeyD\",\n  V: \"KeyV\",\n  X: \"KeyX\",\n  Y: \"KeyY\",\n  Z: \"KeyZ\"\n};\n\n// packages/ag-grid-community/src/utils/focus.ts\nvar keyboardModeActive = false;\nvar instanceCount = 0;\nfunction addKeyboardModeEvents(doc) {\n  if (instanceCount > 0) {\n    return;\n  }\n  doc.addEventListener(\"keydown\", toggleKeyboardMode);\n  doc.addEventListener(\"mousedown\", toggleKeyboardMode);\n}\nfunction removeKeyboardModeEvents(doc) {\n  if (instanceCount > 0) return;\n  doc.removeEventListener(\"keydown\", toggleKeyboardMode);\n  doc.removeEventListener(\"mousedown\", toggleKeyboardMode);\n}\nfunction toggleKeyboardMode(event) {\n  const isKeyboardActive = keyboardModeActive;\n  const isKeyboardEvent = event.type === \"keydown\";\n  if (isKeyboardEvent) {\n    if (event.ctrlKey || event.metaKey || event.altKey) {\n      return;\n    }\n  }\n  if (isKeyboardActive === isKeyboardEvent) {\n    return;\n  }\n  keyboardModeActive = isKeyboardEvent;\n}\nfunction _registerKeyboardFocusEvents(beans) {\n  const eDocument = _getDocument(beans);\n  addKeyboardModeEvents(eDocument);\n  instanceCount++;\n  return () => {\n    instanceCount--;\n    removeKeyboardModeEvents(eDocument);\n  };\n}\nfunction _isKeyboardMode() {\n  return keyboardModeActive;\n}\nfunction _addFocusableContainerListener(beans, comp, eGui) {\n  comp.addManagedElementListeners(eGui, {\n    keydown: e => {\n      if (!e.defaultPrevented && e.key === KeyCode.TAB) {\n        const backwards = e.shiftKey;\n        if (!_findNextFocusableElement(beans, eGui, false, backwards)) {\n          if (_focusNextGridCoreContainer(beans, backwards)) {\n            e.preventDefault();\n          }\n        }\n      }\n    }\n  });\n}\nfunction _findFocusableElements(rootNode, exclude, onlyUnmanaged = false) {\n  const focusableString = FOCUSABLE_SELECTOR;\n  let excludeString = FOCUSABLE_EXCLUDE;\n  if (exclude) {\n    excludeString += \", \" + exclude;\n  }\n  if (onlyUnmanaged) {\n    excludeString += ', [tabindex=\"-1\"]';\n  }\n  const nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString)).filter(node => {\n    return _isVisible(node);\n  });\n  const excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\n  if (!excludeNodes.length) {\n    return nodes;\n  }\n  const diff = (a, b) => a.filter(element => b.indexOf(element) === -1);\n  return diff(nodes, excludeNodes);\n}\nfunction _focusInto(rootNode, up = false, onlyUnmanaged = false, excludeTabGuards = false) {\n  const focusableElements = _findFocusableElements(rootNode, excludeTabGuards ? \".ag-tab-guard\" : null, onlyUnmanaged);\n  const toFocus = up ? _last(focusableElements) : focusableElements[0];\n  if (toFocus) {\n    toFocus.focus({\n      preventScroll: true\n    });\n    return true;\n  }\n  return false;\n}\nfunction _findNextFocusableElement(beans, rootNode, onlyManaged, backwards) {\n  const focusable = _findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\n  const activeEl = _getActiveDomElement(beans);\n  let currentIndex;\n  if (onlyManaged) {\n    currentIndex = focusable.findIndex(el => el.contains(activeEl));\n  } else {\n    currentIndex = focusable.indexOf(activeEl);\n  }\n  const nextIndex = currentIndex + (backwards ? -1 : 1);\n  if (nextIndex < 0 || nextIndex >= focusable.length) {\n    return null;\n  }\n  return focusable[nextIndex];\n}\nfunction _findTabbableParent(node, limit = 5) {\n  let counter = 0;\n  while (node && _getTabIndex(node) === null && ++counter <= limit) {\n    node = node.parentElement;\n  }\n  if (_getTabIndex(node) === null) {\n    return null;\n  }\n  return node;\n}\nfunction _focusGridInnerElement(beans, fromBottom) {\n  return beans.ctrlsSvc.get(\"gridCtrl\").focusInnerElement(fromBottom);\n}\nfunction _isHeaderFocusSuppressed(beans) {\n  return beans.gos.get(\"suppressHeaderFocus\") || !!beans.overlays?.isExclusive();\n}\nfunction _isCellFocusSuppressed(beans) {\n  return beans.gos.get(\"suppressCellFocus\") || !!beans.overlays?.isExclusive();\n}\nfunction _focusNextGridCoreContainer(beans, backwards, forceOut = false) {\n  const gridCtrl = beans.ctrlsSvc.get(\"gridCtrl\");\n  if (!forceOut && gridCtrl.focusNextInnerContainer(backwards)) {\n    return true;\n  }\n  if (forceOut || !backwards && !gridCtrl.isDetailGrid()) {\n    gridCtrl.forceFocusOutOfContainer(backwards);\n  }\n  return false;\n}\n\n// packages/ag-grid-community/src/rendering/cell/cellEvent.ts\nfunction _createCellEvent(beans, domEvent, eventType, {\n  rowNode,\n  column\n}, value) {\n  const event = _addGridCommonParams(beans.gos, {\n    type: eventType,\n    node: rowNode,\n    data: rowNode.data,\n    value,\n    column,\n    colDef: column.getColDef(),\n    rowPinned: rowNode.rowPinned,\n    event: domEvent,\n    rowIndex: rowNode.rowIndex\n  });\n  return event;\n}\n\n// packages/ag-grid-community/src/rendering/cell/cellKeyboardListenerFeature.ts\nfunction _isDeleteKey(key, alwaysReturnFalseOnBackspace = false) {\n  if (key === KeyCode.DELETE) {\n    return true;\n  }\n  if (!alwaysReturnFalseOnBackspace && key === KeyCode.BACKSPACE) {\n    return _isMacOsUserAgent();\n  }\n  return false;\n}\nvar CellKeyboardListenerFeature = class extends BeanStub {\n  constructor(cellCtrl, beans, rowNode, rowCtrl) {\n    super();\n    this.cellCtrl = cellCtrl;\n    this.rowNode = rowNode;\n    this.rowCtrl = rowCtrl;\n    this.beans = beans;\n  }\n  init() {\n    this.eGui = this.cellCtrl.eGui;\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    switch (key) {\n      case KeyCode.ENTER:\n        this.onEnterKeyDown(event);\n        break;\n      case KeyCode.F2:\n        this.onF2KeyDown(event);\n        break;\n      case KeyCode.ESCAPE:\n        this.onEscapeKeyDown(event);\n        break;\n      case KeyCode.TAB:\n        this.onTabKeyDown(event);\n        break;\n      case KeyCode.BACKSPACE:\n      case KeyCode.DELETE:\n        this.onBackspaceOrDeleteKeyDown(key, event);\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n      case KeyCode.RIGHT:\n      case KeyCode.LEFT:\n        this.onNavigationKeyDown(event, key);\n        break;\n    }\n  }\n  onNavigationKeyDown(event, key) {\n    const {\n      cellCtrl,\n      beans\n    } = this;\n    if (beans.editSvc?.isEditing(cellCtrl, {\n      withOpenEditor: true\n    })) {\n      return;\n    }\n    if (event.shiftKey && cellCtrl.isRangeSelectionEnabled()) {\n      this.onShiftRangeSelect(event);\n    } else {\n      const currentCellPosition = cellCtrl.getFocusedCellPosition();\n      beans.navigation?.navigateToNextCell(event, key, currentCellPosition, true);\n    }\n    event.preventDefault();\n  }\n  onShiftRangeSelect(event) {\n    const {\n      rangeSvc,\n      navigation\n    } = this.beans;\n    if (!rangeSvc) {\n      return;\n    }\n    const endCell = rangeSvc.extendLatestRangeInDirection(event);\n    if (!endCell) {\n      return;\n    }\n    if (event.key === KeyCode.LEFT || event.key === KeyCode.RIGHT) {\n      navigation?.ensureColumnVisible(endCell.column);\n    } else {\n      navigation?.ensureRowVisible(endCell.rowIndex);\n    }\n  }\n  onTabKeyDown(event) {\n    this.beans.navigation?.onTabKeyDown(this.cellCtrl, event);\n  }\n  onBackspaceOrDeleteKeyDown(key, event) {\n    const {\n      cellCtrl,\n      beans,\n      rowNode\n    } = this;\n    const {\n      gos,\n      rangeSvc,\n      eventSvc,\n      editSvc\n    } = beans;\n    eventSvc.dispatchEvent({\n      type: \"keyShortcutChangedCellStart\"\n    });\n    if (_isDeleteKey(key, gos.get(\"enableCellEditingOnBackspace\")) && !editSvc?.isEditing(cellCtrl, {\n      withOpenEditor: true\n    })) {\n      if (rangeSvc && _isCellSelectionEnabled(gos)) {\n        rangeSvc.clearCellRangeCellValues({\n          dispatchWrapperEvents: true,\n          wrapperEventSource: \"deleteKey\"\n        });\n      } else if (cellCtrl.isCellEditable()) {\n        const {\n          column\n        } = cellCtrl;\n        const emptyValue = this.beans.valueSvc.getDeleteValue(column, rowNode);\n        rowNode.setDataValue(column, emptyValue, \"cellClear\");\n      }\n    } else if (!editSvc?.isEditing(cellCtrl, {\n      withOpenEditor: true\n    })) {\n      beans.editSvc?.startEditing(cellCtrl, {\n        startedEdit: true,\n        event\n      });\n    }\n    eventSvc.dispatchEvent({\n      type: \"keyShortcutChangedCellEnd\"\n    });\n  }\n  onEnterKeyDown(event) {\n    const {\n      cellCtrl,\n      beans\n    } = this;\n    const {\n      editSvc,\n      navigation\n    } = beans;\n    const cellEditing = editSvc?.isEditing(cellCtrl);\n    const rowNode = cellCtrl.rowNode;\n    const rowEditing = editSvc?.isRowEditing(rowNode);\n    const startEditingAction = cellCtrl2 => {\n      const started = editSvc?.startEditing(cellCtrl2, {\n        startedEdit: true,\n        event\n      });\n      if (started) {\n        event.preventDefault();\n      }\n    };\n    if (cellEditing || rowEditing) {\n      if (this.isCtrlEnter(event)) {\n        editSvc?.applyBulkEdit(cellCtrl, beans?.rangeSvc?.getCellRanges() || []);\n        return;\n      }\n      _populateModelValidationErrors(beans);\n      if (editSvc?.checkNavWithValidation(void 0, event) === \"block-stop\") {\n        return;\n      }\n      if (editSvc?.isEditing(cellCtrl, {\n        withOpenEditor: true\n      })) {\n        editSvc?.stopEditing(cellCtrl, {\n          event\n        });\n      } else if (rowEditing && !cellCtrl.isCellEditable()) {\n        editSvc?.stopEditing({\n          rowNode\n        }, {\n          event\n        });\n      } else {\n        startEditingAction(cellCtrl);\n      }\n    } else {\n      if (beans.gos.get(\"enterNavigatesVertically\")) {\n        const key = event.shiftKey ? KeyCode.UP : KeyCode.DOWN;\n        navigation?.navigateToNextCell(null, key, cellCtrl.cellPosition, false);\n      } else {\n        if (editSvc?.hasValidationErrors()) {\n          return;\n        }\n        if (editSvc?.hasValidationErrors(cellCtrl)) {\n          editSvc.revertSingleCellEdit(cellCtrl, true);\n        }\n        startEditingAction(cellCtrl);\n      }\n    }\n  }\n  isCtrlEnter(e) {\n    return (e.ctrlKey || e.metaKey) && e.key === KeyCode.ENTER;\n  }\n  onF2KeyDown(event) {\n    const {\n      cellCtrl,\n      beans: {\n        editSvc\n      }\n    } = this;\n    const editing = editSvc?.isEditing();\n    if (editing) {\n      _populateModelValidationErrors(this.beans);\n      if (editSvc?.checkNavWithValidation(void 0, event) === \"block-stop\") {\n        return;\n      }\n    }\n    editSvc?.startEditing(cellCtrl, {\n      startedEdit: true,\n      event\n    });\n  }\n  onEscapeKeyDown(event) {\n    const {\n      cellCtrl,\n      beans: {\n        editSvc\n      }\n    } = this;\n    if (editSvc?.checkNavWithValidation(cellCtrl, event) === \"block-stop\") {\n      editSvc.revertSingleCellEdit(cellCtrl);\n    }\n    editSvc?.stopEditing(cellCtrl, {\n      event,\n      cancel: true\n    });\n  }\n  processCharacter(event) {\n    const eventTarget = event.target;\n    const eventOnChildComponent = eventTarget !== this.eGui;\n    const {\n      beans: {\n        editSvc\n      },\n      cellCtrl\n    } = this;\n    if (eventOnChildComponent) {\n      return;\n    }\n    if (editSvc?.isEditing(cellCtrl, {\n      withOpenEditor: true\n    })) {\n      return;\n    }\n    const key = event.key;\n    if (key === KeyCode.SPACE) {\n      this.onSpaceKeyDown(event);\n    } else if (editSvc?.isCellEditable(cellCtrl, \"ui\")) {\n      if (editSvc?.hasValidationErrors() && !editSvc?.hasValidationErrors(cellCtrl)) {\n        return;\n      }\n      editSvc?.startEditing(cellCtrl, {\n        startedEdit: true,\n        event,\n        source: \"api\"\n      });\n      const compDetails = cellCtrl.editCompDetails;\n      const shouldPreventDefault = !compDetails?.params?.suppressPreventDefault;\n      if (shouldPreventDefault) {\n        event.preventDefault();\n      }\n    }\n  }\n  onSpaceKeyDown(event) {\n    const {\n      gos,\n      editSvc\n    } = this.beans;\n    const {\n      rowNode\n    } = this.cellCtrl;\n    if (!editSvc?.isEditing(this.cellCtrl, {\n      withOpenEditor: true\n    }) && _isRowSelection(gos)) {\n      this.beans.selectionSvc?.handleSelectionEvent(event, rowNode, \"spaceKey\");\n    }\n    event.preventDefault();\n  }\n};\n\n// packages/ag-grid-community/src/utils/mouse.ts\nfunction _areEventsNear(e1, e2, pixelCount) {\n  if (pixelCount === 0) {\n    return false;\n  }\n  const diffX = Math.abs(e1.clientX - e2.clientX);\n  const diffY = Math.abs(e1.clientY - e2.clientY);\n  return Math.max(diffX, diffY) <= pixelCount;\n}\nfunction _interpretAsRightClick({\n  gos\n}, event) {\n  return event.button === 2 || event.ctrlKey && gos.get(\"allowContextMenuWithControlKey\");\n}\n\n// packages/ag-grid-community/src/rendering/cell/cellMouseListenerFeature.ts\nvar CellMouseListenerFeature = class extends BeanStub {\n  constructor(cellCtrl, beans, column) {\n    super();\n    this.cellCtrl = cellCtrl;\n    this.column = column;\n    this.beans = beans;\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    if (_isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    switch (eventName) {\n      case \"click\":\n        this.onCellClicked(mouseEvent);\n        break;\n      case \"mousedown\":\n      case \"touchstart\":\n        this.onMouseDown(mouseEvent);\n        break;\n      case \"dblclick\":\n        this.onCellDoubleClicked(mouseEvent);\n        break;\n      case \"mouseout\":\n        this.onMouseOut(mouseEvent);\n        break;\n      case \"mouseover\":\n        this.onMouseOver(mouseEvent);\n        break;\n    }\n  }\n  onCellClicked(event) {\n    if (this.beans.touchSvc?.handleCellDoubleClick(this, event)) {\n      return;\n    }\n    const {\n      eventSvc,\n      rangeSvc,\n      editSvc,\n      editModelSvc,\n      frameworkOverrides\n    } = this.beans;\n    const isMultiKey = event.ctrlKey || event.metaKey;\n    const {\n      cellCtrl\n    } = this;\n    const {\n      column,\n      cellPosition\n    } = cellCtrl;\n    if (rangeSvc && isMultiKey) {\n      if (rangeSvc.getCellRangeCount(cellPosition) > 1) {\n        rangeSvc.intersectLastRange(true);\n      }\n    }\n    const cellClickedEvent = cellCtrl.createEvent(event, \"cellClicked\");\n    eventSvc.dispatchEvent(cellClickedEvent);\n    const colDef = column.getColDef();\n    if (colDef.onCellClicked) {\n      window.setTimeout(() => {\n        frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellClicked(cellClickedEvent);\n        });\n      }, 0);\n    }\n    if (editModelSvc?.getState(cellCtrl) !== \"editing\") {\n      const editing = editSvc?.isEditing();\n      const cellValidations = editModelSvc?.getCellValidationModel().getCellValidationMap().size ?? 0;\n      const rowValidations = editModelSvc?.getRowValidationModel().getRowValidationMap().size ?? 0;\n      if (editing && (cellValidations > 0 || rowValidations > 0)) {\n        return;\n      }\n      if (editSvc?.shouldStartEditing(cellCtrl, event)) {\n        editSvc?.startEditing(cellCtrl, {\n          event\n        });\n      } else if (editSvc?.shouldStopEditing(cellCtrl, event)) {\n        editSvc?.stopEditing(cellCtrl);\n      }\n    }\n  }\n  onCellDoubleClicked(event) {\n    const {\n      column,\n      beans,\n      cellCtrl\n    } = this;\n    const {\n      eventSvc,\n      frameworkOverrides,\n      editSvc,\n      editModelSvc\n    } = beans;\n    const colDef = column.getColDef();\n    const cellDoubleClickedEvent = cellCtrl.createEvent(event, \"cellDoubleClicked\");\n    eventSvc.dispatchEvent(cellDoubleClickedEvent);\n    if (typeof colDef.onCellDoubleClicked === \"function\") {\n      window.setTimeout(() => {\n        frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellDoubleClicked(cellDoubleClickedEvent);\n        });\n      }, 0);\n    }\n    if (editSvc?.shouldStartEditing(this.cellCtrl, event) && this.beans.editModelSvc?.getState(this.cellCtrl) !== \"editing\") {\n      const editing = editSvc?.isEditing();\n      const cellValidations = editModelSvc?.getCellValidationModel().getCellValidationMap().size ?? 0;\n      const rowValidations = editModelSvc?.getRowValidationModel().getRowValidationMap().size ?? 0;\n      if (editing && (cellValidations > 0 || rowValidations > 0)) {\n        return;\n      }\n      editSvc?.startEditing(cellCtrl, {\n        event\n      });\n    }\n  }\n  onMouseDown(mouseEvent) {\n    const {\n      ctrlKey,\n      metaKey,\n      shiftKey\n    } = mouseEvent;\n    const target = mouseEvent.target;\n    const {\n      cellCtrl,\n      beans\n    } = this;\n    const {\n      eventSvc,\n      rangeSvc,\n      rowNumbersSvc,\n      focusSvc,\n      gos,\n      editSvc\n    } = beans;\n    if (this.isRightClickInExistingRange(mouseEvent)) {\n      return;\n    }\n    const hasRanges = rangeSvc && !rangeSvc.isEmpty();\n    const containsWidget = this.containsWidget(target);\n    const {\n      cellPosition,\n      column\n    } = cellCtrl;\n    const isRowNumberColumn = isRowNumberCol(column);\n    if (rowNumbersSvc && isRowNumberColumn && !rowNumbersSvc.handleMouseDownOnCell(cellPosition, mouseEvent)) {\n      if (rangeSvc) {\n        mouseEvent.preventDefault();\n      }\n      mouseEvent.stopImmediatePropagation();\n      return;\n    }\n    if (!shiftKey || !hasRanges) {\n      const editing = editSvc?.isEditing(cellCtrl);\n      const isEnableCellTextSelection = gos.get(\"enableCellTextSelection\");\n      const shouldFocus = isEnableCellTextSelection && mouseEvent.defaultPrevented;\n      const forceBrowserFocus = (_isBrowserSafari() || shouldFocus) && !editing && !_isFocusableFormField(target) && !containsWidget;\n      cellCtrl.focusCell(forceBrowserFocus, mouseEvent);\n    }\n    if (shiftKey && hasRanges && !focusSvc.isCellFocused(cellPosition)) {\n      mouseEvent.preventDefault();\n      const focusedCell = focusSvc.getFocusedCell();\n      if (focusedCell) {\n        const {\n          column: column2,\n          rowIndex,\n          rowPinned\n        } = focusedCell;\n        if (editSvc?.isEditing(focusedCell)) {\n          editSvc?.stopEditing(focusedCell);\n        }\n        focusSvc.setFocusedCell({\n          column: column2,\n          rowIndex,\n          rowPinned,\n          forceBrowserFocus: true,\n          preventScrollOnBrowserFocus: true,\n          sourceEvent: mouseEvent\n        });\n      }\n    }\n    if (containsWidget) {\n      return;\n    }\n    if (rangeSvc) {\n      if (isRowNumberColumn) {\n        mouseEvent.preventDefault();\n      }\n      const hasRightClickedOnRowNumber = _interpretAsRightClick(this.beans, mouseEvent) && isRowNumberColumn;\n      if (shiftKey) {\n        rangeSvc.extendLatestRangeToCell(cellPosition);\n      } else if (!hasRightClickedOnRowNumber) {\n        const isMultiKey = ctrlKey || metaKey;\n        rangeSvc.setRangeToCell(cellPosition, isMultiKey);\n      }\n    }\n    eventSvc.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseDown\"));\n  }\n  isRightClickInExistingRange(mouseEvent) {\n    const {\n      rangeSvc\n    } = this.beans;\n    if (rangeSvc) {\n      const cellInRange = rangeSvc.isCellInAnyRange(this.cellCtrl.cellPosition);\n      const isRightClick = _interpretAsRightClick(this.beans, mouseEvent);\n      if (cellInRange && isRightClick) {\n        return true;\n      }\n    }\n    return false;\n  }\n  containsWidget(target) {\n    return _isElementChildOfClass(target, \"ag-selection-checkbox\", 3) || _isElementChildOfClass(target, \"ag-drag-handle\", 3);\n  }\n  onMouseOut(mouseEvent) {\n    if (this.mouseStayingInsideCell(mouseEvent)) {\n      return;\n    }\n    const {\n      eventSvc,\n      colHover\n    } = this.beans;\n    eventSvc.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseOut\"));\n    colHover?.clearMouseOver();\n  }\n  onMouseOver(mouseEvent) {\n    if (this.mouseStayingInsideCell(mouseEvent)) {\n      return;\n    }\n    const {\n      eventSvc,\n      colHover\n    } = this.beans;\n    eventSvc.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseOver\"));\n    colHover?.setMouseOver([this.column]);\n  }\n  mouseStayingInsideCell(e) {\n    if (!e.target || !e.relatedTarget) {\n      return false;\n    }\n    const eCell = this.cellCtrl.eGui;\n    const cellContainsTarget = eCell.contains(e.target);\n    const cellContainsRelatedTarget = eCell.contains(e.relatedTarget);\n    return cellContainsTarget && cellContainsRelatedTarget;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cell/cellPositionFeature.ts\nvar CellPositionFeature = class extends BeanStub {\n  constructor(cellCtrl, beans) {\n    super();\n    this.cellCtrl = cellCtrl;\n    this.beans = beans;\n    this.column = cellCtrl.column;\n    this.rowNode = cellCtrl.rowNode;\n  }\n  setupRowSpan() {\n    this.rowSpan = this.column.getRowSpan(this.rowNode);\n    this.addManagedListeners(this.beans.eventSvc, {\n      newColumnsLoaded: () => this.onNewColumnsLoaded()\n    });\n  }\n  init() {\n    this.eSetLeft = this.cellCtrl.getRootElement();\n    this.eContent = this.cellCtrl.eGui;\n    const cellSpan = this.cellCtrl.getCellSpan();\n    if (!cellSpan) {\n      this.setupColSpan();\n      this.setupRowSpan();\n    }\n    this.onLeftChanged();\n    this.onWidthChanged();\n    if (!cellSpan) {\n      this._legacyApplyRowSpan();\n    }\n    if (cellSpan) {\n      const refreshSpanHeight = this.refreshSpanHeight.bind(this, cellSpan);\n      refreshSpanHeight();\n      this.addManagedListeners(this.beans.eventSvc, {\n        paginationChanged: refreshSpanHeight,\n        recalculateRowBounds: refreshSpanHeight,\n        pinnedHeightChanged: refreshSpanHeight\n      });\n    }\n  }\n  refreshSpanHeight(cellSpan) {\n    const spanHeight = cellSpan.getCellHeight();\n    if (spanHeight != null) {\n      this.eContent.style.height = `${spanHeight}px`;\n    }\n  }\n  onNewColumnsLoaded() {\n    const rowSpan = this.column.getRowSpan(this.rowNode);\n    if (this.rowSpan === rowSpan) {\n      return;\n    }\n    this.rowSpan = rowSpan;\n    this._legacyApplyRowSpan(true);\n  }\n  onDisplayColumnsChanged() {\n    const colsSpanning = this.getColSpanningList();\n    if (!_areEqual(this.colsSpanning, colsSpanning)) {\n      this.colsSpanning = colsSpanning;\n      this.onWidthChanged();\n      this.onLeftChanged();\n    }\n  }\n  setupColSpan() {\n    if (this.column.getColDef().colSpan == null) {\n      return;\n    }\n    this.colsSpanning = this.getColSpanningList();\n    this.addManagedListeners(this.beans.eventSvc, {\n      // because we are col spanning, a reorder of the cols can change what cols we are spanning over\n      displayedColumnsChanged: this.onDisplayColumnsChanged.bind(this),\n      // because we are spanning over multiple cols, we check for width any time any cols width changes.\n      // this is expensive - really we should be explicitly checking only the cols we are spanning over\n      // instead of every col, however it would be tricky code to track the cols we are spanning over, so\n      // because hardly anyone will be using colSpan, am favouring this easier way for more maintainable code.\n      displayedColumnsWidthChanged: this.onWidthChanged.bind(this)\n    });\n  }\n  onWidthChanged() {\n    if (!this.eContent) {\n      return;\n    }\n    const width = this.getCellWidth();\n    this.eContent.style.width = `${width}px`;\n  }\n  getCellWidth() {\n    if (!this.colsSpanning) {\n      return this.column.getActualWidth();\n    }\n    return this.colsSpanning.reduce((width, col) => width + col.getActualWidth(), 0);\n  }\n  getColSpanningList() {\n    const {\n      column,\n      rowNode\n    } = this;\n    const colSpan = column.getColSpan(rowNode);\n    const colsSpanning = [];\n    if (colSpan === 1) {\n      colsSpanning.push(column);\n    } else {\n      let pointer = column;\n      const pinned = column.getPinned();\n      for (let i = 0; pointer && i < colSpan; i++) {\n        colsSpanning.push(pointer);\n        pointer = this.beans.visibleCols.getColAfter(pointer);\n        if (!pointer || _missing(pointer)) {\n          break;\n        }\n        if (pinned !== pointer.getPinned()) {\n          break;\n        }\n      }\n    }\n    return colsSpanning;\n  }\n  onLeftChanged() {\n    if (!this.eSetLeft) {\n      return;\n    }\n    const left = this.modifyLeftForPrintLayout(this.getCellLeft());\n    this.eSetLeft.style.left = left + \"px\";\n  }\n  getCellLeft() {\n    let mostLeftCol;\n    if (this.beans.gos.get(\"enableRtl\") && this.colsSpanning) {\n      mostLeftCol = _last(this.colsSpanning);\n    } else {\n      mostLeftCol = this.column;\n    }\n    return mostLeftCol.getLeft();\n  }\n  modifyLeftForPrintLayout(leftPosition) {\n    if (!this.cellCtrl.printLayout || this.column.getPinned() === \"left\") {\n      return leftPosition;\n    }\n    const {\n      visibleCols\n    } = this.beans;\n    const leftWidth = visibleCols.getColsLeftWidth();\n    if (this.column.getPinned() === \"right\") {\n      const bodyWidth = visibleCols.bodyWidth;\n      return leftWidth + bodyWidth + (leftPosition || 0);\n    }\n    return leftWidth + (leftPosition || 0);\n  }\n  _legacyApplyRowSpan(force) {\n    if (this.rowSpan === 1 && !force) {\n      return;\n    }\n    const singleRowHeight = _getRowHeightAsNumber(this.beans);\n    const totalRowHeight = singleRowHeight * this.rowSpan;\n    this.eContent.style.height = `${totalRowHeight}px`;\n    this.eContent.style.zIndex = \"1\";\n  }\n  // overriding to make public, as we don't dispose this bean via context\n  destroy() {\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cell/cellCtrl.ts\nvar CSS_CELL = \"ag-cell\";\nvar CSS_AUTO_HEIGHT = \"ag-cell-auto-height\";\nvar CSS_NORMAL_HEIGHT = \"ag-cell-normal-height\";\nvar CSS_CELL_FOCUS = \"ag-cell-focus\";\nvar CSS_CELL_FIRST_RIGHT_PINNED = \"ag-cell-first-right-pinned\";\nvar CSS_CELL_LAST_LEFT_PINNED = \"ag-cell-last-left-pinned\";\nvar CSS_CELL_NOT_INLINE_EDITING = \"ag-cell-not-inline-editing\";\nvar CSS_CELL_WRAP_TEXT = \"ag-cell-wrap-text\";\nvar DOM_DATA_KEY_CELL_CTRL = \"cellCtrl\";\nfunction _getCellCtrlForEventTarget(gos, eventTarget) {\n  return _getCtrlForEventTarget(gos, eventTarget, DOM_DATA_KEY_CELL_CTRL);\n}\nvar instanceIdSequence2 = 0;\nvar CellCtrl = class extends BeanStub {\n  constructor(column, rowNode, beans, rowCtrl) {\n    super();\n    this.column = column;\n    this.rowNode = rowNode;\n    this.rowCtrl = rowCtrl;\n    this.rangeFeature = void 0;\n    this.rowResizeFeature = void 0;\n    this.positionFeature = void 0;\n    this.customStyleFeature = void 0;\n    this.editStyleFeature = void 0;\n    this.mouseListener = void 0;\n    this.keyboardListener = void 0;\n    this.suppressRefreshCell = false;\n    this.onCompAttachedFuncs = [];\n    this.onEditorAttachedFuncs = [];\n    this.focusEventWhileNotReady = null;\n    // if cell has been focused, check if it's focused when destroyed\n    this.hasBeenFocused = false;\n    this.hasEdit = false;\n    this.tooltipFeature = void 0;\n    this.editorTooltipFeature = void 0;\n    this.beans = beans;\n    this.gos = beans.gos;\n    this.editSvc = beans.editSvc;\n    this.hasEdit = !!beans.editSvc;\n    const {\n      colId\n    } = column;\n    this.instanceId = colId + \"-\" + instanceIdSequence2++;\n    this.createCellPosition();\n    this.updateAndFormatValue(false);\n  }\n  addFeatures() {\n    const {\n      beans\n    } = this;\n    this.positionFeature = new CellPositionFeature(this, beans);\n    this.customStyleFeature = beans.cellStyles?.createCellCustomStyleFeature(this, beans);\n    this.editStyleFeature = beans.editSvc?.createCellStyleFeature(this, beans);\n    this.mouseListener = new CellMouseListenerFeature(this, beans, this.column);\n    this.keyboardListener = new CellKeyboardListenerFeature(this, beans, this.rowNode, this.rowCtrl);\n    this.enableTooltipFeature();\n    const {\n      rangeSvc\n    } = beans;\n    const cellSelectionEnabled = rangeSvc && _isCellSelectionEnabled(beans.gos);\n    if (cellSelectionEnabled) {\n      this.rangeFeature = rangeSvc.createCellRangeFeature(beans, this);\n    }\n    if (isRowNumberCol(this.column)) {\n      this.rowResizeFeature = this.beans.rowNumbersSvc.createRowNumbersRowResizerFeature(beans, this);\n    }\n  }\n  isCellSpanning() {\n    return false;\n  }\n  getCellSpan() {\n    return void 0;\n  }\n  removeFeatures() {\n    const context = this.beans.context;\n    this.positionFeature = context.destroyBean(this.positionFeature);\n    this.editorTooltipFeature = context.destroyBean(this.editorTooltipFeature);\n    this.customStyleFeature = context.destroyBean(this.customStyleFeature);\n    this.editStyleFeature = context.destroyBean(this.editStyleFeature);\n    this.mouseListener = context.destroyBean(this.mouseListener);\n    this.keyboardListener = context.destroyBean(this.keyboardListener);\n    this.rangeFeature = context.destroyBean(this.rangeFeature);\n    this.rowResizeFeature = context.destroyBean(this.rowResizeFeature);\n    this.disableTooltipFeature();\n  }\n  enableTooltipFeature(value, shouldDisplayTooltip) {\n    this.tooltipFeature = this.beans.tooltipSvc?.enableCellTooltipFeature(this, value, shouldDisplayTooltip);\n  }\n  disableTooltipFeature() {\n    this.tooltipFeature = this.beans.context.destroyBean(this.tooltipFeature);\n  }\n  enableEditorTooltipFeature(editor) {\n    if (this.editorTooltipFeature) {\n      this.disableEditorTooltipFeature();\n    }\n    this.editorTooltipFeature = this.beans.tooltipSvc?.setupCellEditorTooltip(this, editor);\n    _populateModelValidationErrors(this.beans);\n  }\n  disableEditorTooltipFeature() {\n    this.editorTooltipFeature = this.beans.context.destroyBean(this.editorTooltipFeature);\n  }\n  setComp(comp, eCell, _eWrapper, eCellWrapper, printLayout, startEditing, compBean) {\n    this.comp = comp;\n    this.eGui = eCell;\n    this.printLayout = printLayout;\n    compBean ?? (compBean = this);\n    this.addDomData(compBean);\n    this.addFeatures();\n    compBean.addDestroyFunc(() => this.removeFeatures());\n    this.onSuppressCellFocusChanged(this.beans.gos.get(\"suppressCellFocus\"));\n    this.setupFocus();\n    this.applyStaticCssClasses();\n    this.setWrapText();\n    this.onFirstRightPinnedChanged();\n    this.onLastLeftPinnedChanged();\n    this.onColumnHover();\n    this.setupControlComps();\n    this.setupAutoHeight(eCellWrapper, compBean);\n    this.refreshFirstAndLastStyles();\n    this.refreshAriaColIndex();\n    this.positionFeature?.init();\n    this.customStyleFeature?.setComp(comp);\n    this.editStyleFeature?.setComp(comp);\n    this.tooltipFeature?.refreshTooltip();\n    this.keyboardListener?.init();\n    this.rangeFeature?.setComp(comp);\n    this.rowResizeFeature?.refreshRowResizer();\n    if (startEditing && this.isCellEditable()) {\n      this.editSvc?.startEditing(this, {\n        startedEdit: true,\n        source: \"api\"\n      });\n    } else {\n      this.showValue(false, true);\n    }\n    if (this.onCompAttachedFuncs.length) {\n      this.onCompAttachedFuncs.forEach(func => func());\n      this.onCompAttachedFuncs = [];\n    }\n  }\n  setupAutoHeight(eCellWrapper, compBean) {\n    this.isAutoHeight = this.beans.rowAutoHeight?.setupCellAutoHeight(this, eCellWrapper, compBean) ?? false;\n  }\n  getCellAriaRole() {\n    return this.column.getColDef().cellAriaRole ?? \"gridcell\";\n  }\n  isCellRenderer() {\n    const colDef = this.column.getColDef();\n    return colDef.cellRenderer != null || colDef.cellRendererSelector != null;\n  }\n  getValueToDisplay() {\n    return this.valueFormatted ?? this.value;\n  }\n  getDeferLoadingCellRenderer() {\n    const {\n      beans,\n      column\n    } = this;\n    const {\n      userCompFactory,\n      ctrlsSvc,\n      eventSvc\n    } = beans;\n    const colDef = column.getColDef();\n    const params = this.createCellRendererParams();\n    params.deferRender = true;\n    const loadingDetails = _getLoadingCellRendererDetails(userCompFactory, colDef, params);\n    if (ctrlsSvc.getGridBodyCtrl()?.scrollFeature?.isScrolling()) {\n      let resolver;\n      const onReady = new AgPromise(resolve => {\n        resolver = resolve;\n      });\n      this.addManagedListeners(eventSvc, {\n        bodyScrollEnd: () => resolver()\n      });\n      return {\n        loadingComp: loadingDetails,\n        onReady\n      };\n    }\n    return {\n      loadingComp: loadingDetails,\n      onReady: AgPromise.resolve()\n    };\n  }\n  showValue(forceNewCellRendererInstance, skipRangeHandleRefresh) {\n    const {\n      beans,\n      column,\n      rowNode,\n      rangeFeature\n    } = this;\n    const {\n      userCompFactory\n    } = beans;\n    let valueToDisplay = this.getValueToDisplay();\n    let compDetails;\n    const isSsrmLoading = rowNode.stub && rowNode.groupData?.[column.getId()] == null;\n    const colDef = column.getColDef();\n    if (isSsrmLoading || this.isCellRenderer()) {\n      const params = this.createCellRendererParams();\n      if (!isSsrmLoading || isRowNumberCol(column)) {\n        compDetails = _getCellRendererDetails(userCompFactory, colDef, params);\n      } else {\n        compDetails = _getLoadingCellRendererDetails(userCompFactory, colDef, params);\n      }\n    }\n    if (!compDetails && !isSsrmLoading && beans.findSvc?.isMatch(rowNode, column)) {\n      const params = this.createCellRendererParams();\n      compDetails = _getCellRendererDetails(userCompFactory, {\n        ...column.getColDef(),\n        cellRenderer: \"agFindCellRenderer\"\n      }, params);\n    }\n    if (this.hasEdit && this.editSvc.isBatchEditing() && this.editSvc.isRowEditing(rowNode, {\n      checkSiblings: true\n    })) {\n      const result = this.editSvc.prepDetailsDuringBatch(this, {\n        compDetails,\n        valueToDisplay\n      });\n      if (result) {\n        if (result.compDetails) {\n          compDetails = result.compDetails;\n        } else if (result.valueToDisplay) {\n          valueToDisplay = result.valueToDisplay;\n        }\n      }\n    }\n    this.comp.setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance);\n    if (!skipRangeHandleRefresh && rangeFeature) {\n      _requestAnimationFrame(beans, () => rangeFeature?.refreshHandle());\n    }\n    this.rowResizeFeature?.refreshRowResizer();\n  }\n  setupControlComps() {\n    const colDef = this.column.getColDef();\n    this.includeSelection = this.isIncludeControl(this.isCheckboxSelection(colDef), true);\n    this.includeRowDrag = this.isIncludeControl(colDef.rowDrag);\n    this.includeDndSource = this.isIncludeControl(colDef.dndSource);\n    this.comp.setIncludeSelection(this.includeSelection);\n    this.comp.setIncludeDndSource(this.includeDndSource);\n    this.comp.setIncludeRowDrag(this.includeRowDrag);\n  }\n  isForceWrapper() {\n    return this.beans.gos.get(\"enableCellTextSelection\") || this.column.isAutoHeight();\n  }\n  /**\n   * Wrapper providing general conditions under which control elements (e.g. checkboxes and drag handles)\n   * are rendered for a particular cell.\n   * @param value Whether to render the control in the specific context of the caller\n   * @param allowManuallyPinned Whether manually pinned rows are permitted this form of control element\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  isIncludeControl(value, allowManuallyPinned = false) {\n    const rowUnpinned = this.rowNode.rowPinned == null;\n    return (rowUnpinned || allowManuallyPinned && _isManualPinnedRow(this.rowNode)) && !!value;\n  }\n  isCheckboxSelection(colDef) {\n    const {\n      rowSelection,\n      groupDisplayType\n    } = this.beans.gridOptions;\n    const checkboxLocation = _getCheckboxLocation(rowSelection);\n    const isSelectionColumn = isColumnSelectionCol(this.column);\n    if (groupDisplayType === \"custom\" && checkboxLocation !== \"selectionColumn\" && isSelectionColumn) {\n      return false;\n    }\n    return colDef.checkboxSelection || isSelectionColumn && typeof rowSelection === \"object\" && _getCheckboxes(rowSelection);\n  }\n  refreshShouldDestroy() {\n    const colDef = this.column.getColDef();\n    const selectionChanged = this.includeSelection != this.isIncludeControl(this.isCheckboxSelection(colDef), true);\n    const rowDragChanged = this.includeRowDrag != this.isIncludeControl(colDef.rowDrag);\n    const dndSourceChanged = this.includeDndSource != this.isIncludeControl(colDef.dndSource);\n    const autoHeightChanged = this.isAutoHeight != this.column.isAutoHeight();\n    return selectionChanged || rowDragChanged || dndSourceChanged || autoHeightChanged;\n  }\n  onPopupEditorClosed() {\n    const {\n      editSvc\n    } = this.beans;\n    if (!editSvc?.isEditing(this, {\n      withOpenEditor: true\n    })) {\n      return;\n    }\n    editSvc?.stopEditing(this, {\n      source: editSvc?.isBatchEditing() ? \"ui\" : \"api\"\n    });\n  }\n  /**\n   * Ends the Cell Editing\n   * @param cancel `True` if the edit process is being canceled.\n   * @returns `True` if the value of the `GridCell` has been updated, otherwise `False`.\n   */\n  stopEditing(cancel = false) {\n    const {\n      editSvc\n    } = this.beans;\n    return editSvc?.stopEditing(this, {\n      cancel,\n      source: editSvc?.isBatchEditing() ? \"ui\" : \"api\"\n    }) ?? false;\n  }\n  createCellRendererParams() {\n    const {\n      value,\n      valueFormatted,\n      column,\n      rowNode,\n      comp,\n      eGui,\n      beans: {\n        valueSvc,\n        gos,\n        editSvc\n      }\n    } = this;\n    const res = _addGridCommonParams(gos, {\n      value,\n      valueFormatted,\n      getValue: () => valueSvc.getValueForDisplay(column, rowNode).value,\n      setValue: value2 => editSvc?.setDataValue({\n        rowNode,\n        column\n      }, value2) || valueSvc.setValue(rowNode, column, value2),\n      formatValue: this.formatValue.bind(this),\n      data: rowNode.data,\n      node: rowNode,\n      pinned: column.getPinned(),\n      colDef: column.getColDef(),\n      column,\n      refreshCell: this.refreshCell.bind(this),\n      eGridCell: eGui,\n      eParentOfValue: comp.getParentOfValue(),\n      registerRowDragger: (rowDraggerElement, dragStartPixels, value2, suppressVisibilityChange) => this.registerRowDragger(rowDraggerElement, dragStartPixels, suppressVisibilityChange),\n      setTooltip: (value2, shouldDisplayTooltip) => {\n        gos.assertModuleRegistered(\"Tooltip\", 3);\n        if (this.tooltipFeature) {\n          this.disableTooltipFeature();\n        }\n        this.enableTooltipFeature(value2, shouldDisplayTooltip);\n        this.tooltipFeature?.refreshTooltip();\n      }\n    });\n    return res;\n  }\n  onCellChanged(event) {\n    const eventImpactsThisCell = event.column === this.column;\n    if (eventImpactsThisCell) {\n      this.refreshCell({});\n    }\n  }\n  refreshOrDestroyCell(params) {\n    if (this.refreshShouldDestroy()) {\n      this.rowCtrl?.recreateCell(this);\n    } else {\n      this.refreshCell(params);\n    }\n  }\n  // + stop editing {force: true, suppressFlash: true}\n  // + event cellChanged {}\n  // + cellRenderer.params.refresh() {} -> method passes 'as is' to the cellRenderer, so params could be anything\n  // + rowCtrl: event dataChanged {suppressFlash: !update, newData: !update}\n  // + rowCtrl: api refreshCells() {animate: true/false}\n  // + rowRenderer: api softRefreshView() {}\n  refreshCell({\n    force,\n    suppressFlash,\n    newData\n  } = {}) {\n    if (this.suppressRefreshCell) {\n      return;\n    }\n    const colDef = this.column.getColDef();\n    const noValueProvided = colDef.field == null && colDef.valueGetter == null && colDef.showRowGroup == null;\n    const forceRefresh = force || noValueProvided || newData;\n    const isCellCompReady = !!this.comp;\n    const valuesDifferent = this.updateAndFormatValue(isCellCompReady);\n    const dataNeedsUpdating = forceRefresh || valuesDifferent;\n    if (!isCellCompReady) {\n      return;\n    }\n    if (dataNeedsUpdating) {\n      this.showValue(!!newData, false);\n      const processingFilterChange = this.beans.filterManager?.isSuppressFlashingCellsBecauseFiltering();\n      const flashCell = !suppressFlash && !processingFilterChange && colDef.enableCellChangeFlash;\n      if (flashCell) {\n        this.beans.cellFlashSvc?.flashCell(this);\n      }\n      this.editStyleFeature?.applyCellStyles?.();\n      this.customStyleFeature?.applyUserStyles();\n      this.customStyleFeature?.applyClassesFromColDef();\n    }\n    this.tooltipFeature?.refreshTooltip();\n    this.customStyleFeature?.applyCellClassRules();\n  }\n  isCellEditable() {\n    return this.column.isCellEditable(this.rowNode);\n  }\n  formatValue(value) {\n    return this.callValueFormatter(value) ?? value;\n  }\n  callValueFormatter(value) {\n    return this.beans.valueSvc.formatValue(this.column, this.rowNode, value);\n  }\n  updateAndFormatValue(compareValues) {\n    const oldValue = this.value;\n    const oldValueFormatted = this.valueFormatted;\n    const {\n      value,\n      valueFormatted\n    } = this.beans.valueSvc.getValueForDisplay(this.column, this.rowNode, true);\n    this.value = value;\n    this.valueFormatted = valueFormatted;\n    if (compareValues) {\n      return !this.valuesAreEqual(oldValue, this.value) || this.valueFormatted != oldValueFormatted;\n    }\n    return true;\n  }\n  valuesAreEqual(val1, val2) {\n    const colDef = this.column.getColDef();\n    return colDef.equals ? colDef.equals(val1, val2) : val1 === val2;\n  }\n  addDomData(compBean) {\n    const element = this.eGui;\n    _setDomData(this.beans.gos, element, DOM_DATA_KEY_CELL_CTRL, this);\n    compBean.addDestroyFunc(() => _setDomData(this.beans.gos, element, DOM_DATA_KEY_CELL_CTRL, null));\n  }\n  createEvent(domEvent, eventType) {\n    const {\n      rowNode,\n      column,\n      value,\n      beans\n    } = this;\n    return _createCellEvent(beans, domEvent, eventType, {\n      rowNode,\n      column\n    }, value);\n  }\n  processCharacter(event) {\n    this.keyboardListener?.processCharacter(event);\n  }\n  onKeyDown(event) {\n    this.keyboardListener?.onKeyDown(event);\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    this.mouseListener?.onMouseEvent(eventName, mouseEvent);\n  }\n  getColSpanningList() {\n    return this.positionFeature?.getColSpanningList() ?? [];\n  }\n  onLeftChanged() {\n    if (!this.comp) {\n      return;\n    }\n    this.positionFeature?.onLeftChanged();\n  }\n  onDisplayedColumnsChanged() {\n    if (!this.eGui) {\n      return;\n    }\n    this.refreshAriaColIndex();\n    this.refreshFirstAndLastStyles();\n  }\n  refreshFirstAndLastStyles() {\n    const {\n      comp,\n      column,\n      beans\n    } = this;\n    refreshFirstAndLastStyles(comp, column, beans.visibleCols);\n  }\n  refreshAriaColIndex() {\n    const colIdx = this.beans.visibleCols.getAriaColIndex(this.column);\n    _setAriaColIndex(this.eGui, colIdx);\n  }\n  onWidthChanged() {\n    return this.positionFeature?.onWidthChanged();\n  }\n  getRowPosition() {\n    const {\n      rowIndex,\n      rowPinned\n    } = this.cellPosition;\n    return {\n      rowIndex,\n      rowPinned\n    };\n  }\n  updateRangeBordersIfRangeCount() {\n    if (!this.comp) {\n      return;\n    }\n    this.rangeFeature?.updateRangeBordersIfRangeCount();\n  }\n  onCellSelectionChanged() {\n    if (!this.comp) {\n      return;\n    }\n    this.rangeFeature?.onCellSelectionChanged();\n  }\n  isRangeSelectionEnabled() {\n    return this.rangeFeature != null;\n  }\n  focusCell(forceBrowserFocus = false, sourceEvent) {\n    const allowedTarget = this.editSvc?.allowedFocusTargetOnValidation(this);\n    if (allowedTarget && allowedTarget !== this) {\n      return;\n    }\n    this.beans.focusSvc.setFocusedCell({\n      ...this.getFocusedCellPosition(),\n      forceBrowserFocus,\n      sourceEvent\n    });\n  }\n  /**\n   * Restores focus to the cell, if it should have it\n   * @param waitForRender if the cell has just setComp, it may not be rendered yet, so we wait for the next render\n   */\n  restoreFocus(waitForRender = false) {\n    const {\n      beans: {\n        editSvc,\n        focusSvc\n      },\n      comp\n    } = this;\n    if (!comp || editSvc?.isEditing(this) || !this.isCellFocused() || !focusSvc.shouldTakeFocus()) {\n      return;\n    }\n    const focus = () => {\n      if (!this.isAlive()) {\n        return;\n      }\n      const focusableElement = comp.getFocusableElement();\n      if (this.isCellFocused()) {\n        focusableElement.focus({\n          preventScroll: true\n        });\n      }\n    };\n    if (waitForRender) {\n      setTimeout(focus, 0);\n      return;\n    }\n    focus();\n  }\n  onRowIndexChanged() {\n    this.createCellPosition();\n    this.onCellFocused();\n    this.restoreFocus();\n    this.rangeFeature?.onCellSelectionChanged();\n    this.rowResizeFeature?.refreshRowResizer();\n  }\n  onSuppressCellFocusChanged(suppressCellFocus) {\n    const element = this.eGui;\n    if (!element) {\n      return;\n    }\n    if (isRowNumberCol(this.column)) {\n      suppressCellFocus = true;\n    }\n    _addOrRemoveAttribute(element, \"tabindex\", suppressCellFocus ? void 0 : -1);\n  }\n  onFirstRightPinnedChanged() {\n    if (!this.comp) {\n      return;\n    }\n    const firstRightPinned = this.column.isFirstRightPinned();\n    this.comp.toggleCss(CSS_CELL_FIRST_RIGHT_PINNED, firstRightPinned);\n  }\n  onLastLeftPinnedChanged() {\n    if (!this.comp) {\n      return;\n    }\n    const lastLeftPinned = this.column.isLastLeftPinned();\n    this.comp.toggleCss(CSS_CELL_LAST_LEFT_PINNED, lastLeftPinned);\n  }\n  /**\n   * Returns whether cell is focused by the focusSvc, overridden by spannedCellCtrl\n   */\n  checkCellFocused() {\n    return this.beans.focusSvc.isCellFocused(this.cellPosition);\n  }\n  isCellFocused() {\n    const isFocused = this.checkCellFocused();\n    this.hasBeenFocused || (this.hasBeenFocused = isFocused);\n    return isFocused;\n  }\n  setupFocus() {\n    this.restoreFocus(true);\n    this.onCellFocused(this.focusEventWhileNotReady ?? void 0);\n  }\n  onCellFocused(event) {\n    const {\n      beans\n    } = this;\n    if (_isCellFocusSuppressed(beans)) {\n      return;\n    }\n    if (!this.comp) {\n      if (event) {\n        this.focusEventWhileNotReady = event;\n      }\n      return;\n    }\n    const cellFocused = this.isCellFocused();\n    const editing = beans.editSvc?.isEditing(this) ?? false;\n    this.comp.toggleCss(CSS_CELL_FOCUS, cellFocused);\n    if (cellFocused && event && event.forceBrowserFocus) {\n      let focusEl = this.comp.getFocusableElement();\n      if (editing) {\n        const focusableEls = _findFocusableElements(focusEl, null, true);\n        if (focusableEls.length) {\n          focusEl = focusableEls[0];\n        }\n      }\n      focusEl.focus({\n        preventScroll: !!event.preventScrollOnBrowserFocus\n      });\n    }\n    if (cellFocused) {\n      this.rowCtrl.announceDescription();\n    }\n  }\n  createCellPosition() {\n    const {\n      rowIndex,\n      rowPinned\n    } = this.rowNode;\n    this.cellPosition = {\n      rowIndex,\n      rowPinned: _makeNull(rowPinned),\n      column: this.column\n    };\n  }\n  // CSS Classes that only get applied once, they never change\n  applyStaticCssClasses() {\n    const {\n      comp\n    } = this;\n    comp.toggleCss(CSS_CELL, true);\n    comp.toggleCss(CSS_CELL_NOT_INLINE_EDITING, true);\n    const autoHeight = this.column.isAutoHeight() == true;\n    comp.toggleCss(CSS_AUTO_HEIGHT, autoHeight);\n    comp.toggleCss(CSS_NORMAL_HEIGHT, !autoHeight);\n  }\n  onColumnHover() {\n    this.beans.colHover?.onCellColumnHover(this.column, this.comp);\n  }\n  onColDefChanged() {\n    if (!this.comp) {\n      return;\n    }\n    if (this.column.isTooltipEnabled()) {\n      this.disableTooltipFeature();\n      this.enableTooltipFeature();\n    } else {\n      this.disableTooltipFeature();\n    }\n    this.setWrapText();\n    if (this.editSvc?.isEditing(this)) {\n      this.editSvc?.handleColDefChanged(this);\n    } else {\n      this.refreshOrDestroyCell({\n        force: true,\n        suppressFlash: true\n      });\n    }\n  }\n  setWrapText() {\n    const value = this.column.getColDef().wrapText == true;\n    this.comp.toggleCss(CSS_CELL_WRAP_TEXT, value);\n  }\n  dispatchCellContextMenuEvent(event) {\n    const colDef = this.column.getColDef();\n    const cellContextMenuEvent = this.createEvent(event, \"cellContextMenu\");\n    const {\n      beans\n    } = this;\n    beans.eventSvc.dispatchEvent(cellContextMenuEvent);\n    if (colDef.onCellContextMenu) {\n      window.setTimeout(() => {\n        beans.frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellContextMenu(cellContextMenuEvent);\n        });\n      }, 0);\n    }\n  }\n  getCellRenderer() {\n    return this.comp?.getCellRenderer() ?? null;\n  }\n  destroy() {\n    this.onCompAttachedFuncs = [];\n    this.onEditorAttachedFuncs = [];\n    if (this.isCellFocused() && this.hasBrowserFocus()) {\n      this.beans.focusSvc.attemptToRecoverFocus();\n    }\n    super.destroy();\n  }\n  hasBrowserFocus() {\n    return this.eGui?.contains(_getActiveDomElement(this.beans)) ?? false;\n  }\n  createSelectionCheckbox() {\n    const cbSelectionComponent = this.beans.selectionSvc?.createCheckboxSelectionComponent();\n    if (!cbSelectionComponent) {\n      return void 0;\n    }\n    this.beans.context.createBean(cbSelectionComponent);\n    cbSelectionComponent.init({\n      rowNode: this.rowNode,\n      column: this.column\n    });\n    return cbSelectionComponent;\n  }\n  createDndSource() {\n    const dndSourceComp = this.beans.registry.createDynamicBean(\"dndSourceComp\", false, this.rowNode, this.column, this.eGui);\n    if (dndSourceComp) {\n      this.beans.context.createBean(dndSourceComp);\n    }\n    return dndSourceComp;\n  }\n  registerRowDragger(customElement, dragStartPixels, suppressVisibilityChange) {\n    if (this.customRowDragComp) {\n      this.customRowDragComp.setDragElement(customElement, dragStartPixels);\n      return;\n    }\n    const newComp = this.createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange);\n    if (newComp) {\n      this.customRowDragComp = newComp;\n      this.addDestroyFunc(() => {\n        this.beans.context.destroyBean(newComp);\n        this.customRowDragComp = null;\n      });\n    }\n  }\n  createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange) {\n    const rowDragComp = this.beans.rowDragSvc?.createRowDragCompForCell(this.rowNode, this.column, () => this.value, customElement, dragStartPixels, suppressVisibilityChange);\n    if (!rowDragComp) {\n      return void 0;\n    }\n    this.beans.context.createBean(rowDragComp);\n    return rowDragComp;\n  }\n  cellEditorAttached() {\n    this.onEditorAttachedFuncs.forEach(func => func());\n    this.onEditorAttachedFuncs = [];\n  }\n  setFocusedCellPosition(_cellPosition) {}\n  getFocusedCellPosition() {\n    return this.cellPosition;\n  }\n  // used by spannedCellCtrl\n  refreshAriaRowIndex() {}\n  /**\n   * Returns the root element of the cell, could be a span container rather than the cell element.\n   * @returns The root element of the cell.\n   */\n  getRootElement() {\n    return this.eGui;\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/mouseEventUtils.ts\nvar GRID_DOM_KEY = \"__ag_grid_instance\";\nfunction _stampTopLevelGridCompWithGridInstance(gos, eGridDiv) {\n  eGridDiv[GRID_DOM_KEY] = gos.gridInstanceId;\n}\nfunction _isEventFromThisGrid(gos, event) {\n  const res = _isElementInThisGrid(gos, event.target);\n  return res;\n}\nfunction _isElementInThisGrid(gos, element) {\n  let pointer = element;\n  while (pointer) {\n    const instanceId = pointer[GRID_DOM_KEY];\n    if (_exists(instanceId)) {\n      const eventFromThisGrid = instanceId === gos.gridInstanceId;\n      return eventFromThisGrid;\n    }\n    pointer = pointer.parentElement;\n  }\n  return false;\n}\nfunction _getCellPositionForEvent(gos, event) {\n  return _getCellCtrlForEventTarget(gos, event.target)?.getFocusedCellPosition() ?? null;\n}\nfunction _getNormalisedMousePosition(beans, event) {\n  const gridPanelHasScrolls = _isDomLayout(beans.gos, \"normal\");\n  const e = event;\n  let x;\n  let y;\n  if (e.clientX != null || e.clientY != null) {\n    x = e.clientX;\n    y = e.clientY;\n  } else {\n    x = e.x;\n    y = e.y;\n  }\n  const {\n    pageFirstPixel\n  } = beans.pageBounds.getCurrentPagePixelRange();\n  y += pageFirstPixel;\n  if (gridPanelHasScrolls) {\n    const scrollFeature = beans.ctrlsSvc.getScrollFeature();\n    const vRange = scrollFeature.getVScrollPosition();\n    const hRange = scrollFeature.getHScrollPosition();\n    x += hRange.left;\n    y += vRange.top;\n  }\n  return {\n    x,\n    y\n  };\n}\n\n// packages/ag-grid-community/src/dragAndDrop/dragAndDropService.ts\nvar DragSourceType = /* @__PURE__ */(DragSourceType2 => {\n  DragSourceType2[DragSourceType2[\"ToolPanel\"] = 0] = \"ToolPanel\";\n  DragSourceType2[DragSourceType2[\"HeaderCell\"] = 1] = \"HeaderCell\";\n  DragSourceType2[DragSourceType2[\"RowDrag\"] = 2] = \"RowDrag\";\n  DragSourceType2[DragSourceType2[\"ChartPanel\"] = 3] = \"ChartPanel\";\n  DragSourceType2[DragSourceType2[\"AdvancedFilterBuilder\"] = 4] = \"AdvancedFilterBuilder\";\n  return DragSourceType2;\n})(DragSourceType || {});\nvar DragAndDropService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dragAndDrop\";\n    this.dragSourceAndParamsList = [];\n    this.dropTargets = [];\n  }\n  wireBeans(beans) {\n    this.ctrlsSvc = beans.ctrlsSvc;\n    this.dragSvc = beans.dragSvc;\n    this.environment = beans.environment;\n    this.userCompFactory = beans.userCompFactory;\n  }\n  addDragSource(dragSource, allowTouch = false) {\n    const params = {\n      eElement: dragSource.eElement,\n      dragStartPixels: dragSource.dragStartPixels,\n      onDragStart: this.onDragStart.bind(this, dragSource),\n      onDragStop: this.onDragStop.bind(this),\n      onDragging: this.onDragging.bind(this),\n      onDragCancel: this.onDragCancel.bind(this),\n      includeTouch: allowTouch\n    };\n    this.dragSourceAndParamsList.push({\n      params,\n      dragSource\n    });\n    this.dragSvc.addDragSource(params);\n  }\n  getDragAndDropImageComponent() {\n    const {\n      dragAndDropImageComp\n    } = this;\n    if (!dragAndDropImageComp || !dragAndDropImageComp.comp) {\n      return null;\n    }\n    return dragAndDropImageComp.comp;\n  }\n  removeDragSource(dragSource) {\n    const {\n      dragSourceAndParamsList,\n      dragSvc\n    } = this;\n    const sourceAndParams = dragSourceAndParamsList.find(item => item.dragSource === dragSource);\n    if (sourceAndParams) {\n      dragSvc.removeDragSource(sourceAndParams.params);\n      _removeFromArray(dragSourceAndParamsList, sourceAndParams);\n    }\n  }\n  destroy() {\n    const {\n      dragSourceAndParamsList,\n      dragSvc,\n      dropTargets\n    } = this;\n    dragSourceAndParamsList.forEach(sourceAndParams => dragSvc.removeDragSource(sourceAndParams.params));\n    dragSourceAndParamsList.length = 0;\n    dropTargets.length = 0;\n    this.clearDragAndDropProperties();\n    super.destroy();\n  }\n  nudge() {\n    if (this.dragging) {\n      this.onDragging(this.eventLastTime, true);\n    }\n  }\n  onDragStart(dragSource, mouseEvent) {\n    this.dragging = true;\n    this.dragSource = dragSource;\n    this.eventLastTime = mouseEvent;\n    this.dragItem = dragSource.getDragItem();\n    dragSource.onDragStarted?.();\n    this.createDragAndDropImageComponent();\n  }\n  onDragStop(mouseEvent) {\n    this.dragSource?.onDragStopped?.();\n    const {\n      lastDropTarget\n    } = this;\n    if (lastDropTarget?.onDragStop) {\n      const draggingEvent = this.createDropTargetEvent(lastDropTarget, mouseEvent, null, null, false);\n      lastDropTarget.onDragStop(draggingEvent);\n    }\n    this.clearDragAndDropProperties();\n  }\n  onDragCancel() {\n    const {\n      dragSource,\n      lastDropTarget\n    } = this;\n    dragSource?.onDragCancelled?.();\n    if (lastDropTarget?.onDragCancel) {\n      lastDropTarget.onDragCancel(this.createDropTargetEvent(lastDropTarget, this.eventLastTime, null, null, false));\n    }\n    this.clearDragAndDropProperties();\n  }\n  clearDragAndDropProperties() {\n    this.eventLastTime = null;\n    this.dragging = false;\n    this.lastDropTarget = void 0;\n    this.dragItem = null;\n    this.dragSource = null;\n    this.removeDragAndDropImageComponent();\n  }\n  onDragging(mouseEvent, fromNudge = false) {\n    const hDirection = this.getHorizontalDirection(mouseEvent);\n    const vDirection = this.getVerticalDirection(mouseEvent);\n    this.eventLastTime = mouseEvent;\n    this.positionDragAndDropImageComp(mouseEvent);\n    const validDropTargets = this.dropTargets.filter(target => this.isMouseOnDropTarget(mouseEvent, target));\n    const dropTarget = this.findCurrentDropTarget(mouseEvent, validDropTargets);\n    const {\n      lastDropTarget,\n      dragSource,\n      dragAndDropImageComp,\n      dragItem\n    } = this;\n    if (dropTarget !== lastDropTarget) {\n      this.leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge);\n      if (lastDropTarget !== null && dropTarget === null) {\n        dragSource?.onGridExit?.(dragItem);\n      }\n      if (lastDropTarget === null && dropTarget !== null) {\n        dragSource?.onGridEnter?.(dragItem);\n      }\n      this.enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      if (dropTarget && dragAndDropImageComp) {\n        const {\n          comp,\n          promise\n        } = dragAndDropImageComp;\n        if (comp) {\n          comp.setIcon(dropTarget.getIconName ? dropTarget.getIconName() : null, false);\n        } else {\n          promise.then(resolvedComponent => {\n            if (resolvedComponent) {\n              resolvedComponent.setIcon(dropTarget.getIconName ? dropTarget.getIconName() : null, false);\n            }\n          });\n        }\n      }\n      this.lastDropTarget = dropTarget;\n    } else if (dropTarget && dropTarget.onDragging) {\n      const draggingEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      dropTarget.onDragging(draggingEvent);\n    }\n  }\n  getAllContainersFromDropTarget(dropTarget) {\n    const secondaryContainers = dropTarget.getSecondaryContainers ? dropTarget.getSecondaryContainers() : null;\n    const containers = [[dropTarget.getContainer()]];\n    return secondaryContainers ? containers.concat(secondaryContainers) : containers;\n  }\n  // checks if the mouse is on the drop target. it checks eContainer and eSecondaryContainers\n  isMouseOnDropTarget(mouseEvent, dropTarget) {\n    const allContainersFromDropTarget = this.getAllContainersFromDropTarget(dropTarget);\n    let mouseOverTarget = false;\n    const allContainersIntersect = (mouseEvent2, containers) => {\n      for (const container of containers) {\n        const {\n          width,\n          height,\n          left,\n          right,\n          top,\n          bottom\n        } = container.getBoundingClientRect();\n        if (width === 0 || height === 0) {\n          return false;\n        }\n        const horizontalFit = mouseEvent2.clientX >= left && mouseEvent2.clientX < right;\n        const verticalFit = mouseEvent2.clientY >= top && mouseEvent2.clientY < bottom;\n        if (!horizontalFit || !verticalFit) {\n          return false;\n        }\n      }\n      return true;\n    };\n    for (const currentContainers of allContainersFromDropTarget) {\n      if (allContainersIntersect(mouseEvent, currentContainers)) {\n        mouseOverTarget = true;\n        break;\n      }\n    }\n    const {\n      eElement,\n      type\n    } = this.dragSource;\n    if (dropTarget.targetContainsSource && !dropTarget.getContainer().contains(eElement)) {\n      return false;\n    }\n    return mouseOverTarget && dropTarget.isInterestedIn(type, eElement);\n  }\n  findCurrentDropTarget(mouseEvent, validDropTargets) {\n    const len = validDropTargets.length;\n    if (len === 0) {\n      return null;\n    }\n    if (len === 1) {\n      return validDropTargets[0];\n    }\n    const rootNode = _getRootNode(this.beans);\n    const elementStack = rootNode.elementsFromPoint(mouseEvent.clientX, mouseEvent.clientY);\n    for (const el of elementStack) {\n      for (const dropTarget of validDropTargets) {\n        const containers = this.getAllContainersFromDropTarget(dropTarget).flatMap(a => a);\n        if (containers.indexOf(el) !== -1) {\n          return dropTarget;\n        }\n      }\n    }\n    return null;\n  }\n  enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge) {\n    if (!dropTarget) {\n      return;\n    }\n    if (dropTarget.onDragEnter) {\n      const dragEnterEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      dropTarget.onDragEnter(dragEnterEvent);\n    }\n  }\n  leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge) {\n    const {\n      lastDropTarget\n    } = this;\n    if (!lastDropTarget) {\n      return;\n    }\n    if (lastDropTarget.onDragLeave) {\n      const dragLeaveEvent = this.createDropTargetEvent(lastDropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      lastDropTarget.onDragLeave(dragLeaveEvent);\n    }\n    const dragAndDropImageComponent = this.getDragAndDropImageComponent();\n    if (dragAndDropImageComponent) {\n      dragAndDropImageComponent.setIcon(null, false);\n    }\n  }\n  addDropTarget(dropTarget) {\n    this.dropTargets.push(dropTarget);\n  }\n  removeDropTarget(dropTarget) {\n    this.dropTargets = this.dropTargets.filter(target => target.getContainer() !== dropTarget.getContainer());\n  }\n  hasExternalDropZones() {\n    return this.dropTargets.some(zones => zones.external);\n  }\n  findExternalZone(params) {\n    const externalTargets = this.dropTargets.filter(target => target.external);\n    return externalTargets.find(zone => zone.getContainer() === params.getContainer()) || null;\n  }\n  isDropZoneWithinThisGrid(draggingEvent) {\n    const gridBodyCon = this.ctrlsSvc.getGridBodyCtrl();\n    const gridGui = gridBodyCon.eGridBody;\n    const {\n      dropZoneTarget\n    } = draggingEvent;\n    return gridGui.contains(dropZoneTarget);\n  }\n  getHorizontalDirection(event) {\n    const clientX = this.eventLastTime?.clientX;\n    const eClientX = event.clientX;\n    if (clientX === eClientX) {\n      return null;\n    }\n    return clientX > eClientX ? \"left\" : \"right\";\n  }\n  getVerticalDirection(event) {\n    const clientY = this.eventLastTime?.clientY;\n    const eClientY = event.clientY;\n    if (clientY === eClientY) {\n      return null;\n    }\n    return clientY > eClientY ? \"up\" : \"down\";\n  }\n  createDropTargetEvent(dropTarget, event, hDirection, vDirection, fromNudge) {\n    const dropZoneTarget = dropTarget.getContainer();\n    const rect = dropZoneTarget.getBoundingClientRect();\n    const {\n      dragItem,\n      dragSource,\n      gos\n    } = this;\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    return _addGridCommonParams(gos, {\n      event,\n      x,\n      y,\n      vDirection,\n      hDirection,\n      dragSource,\n      fromNudge,\n      dragItem,\n      dropZoneTarget\n    });\n  }\n  positionDragAndDropImageComp(event) {\n    const dragAndDropImageComponent = this.getDragAndDropImageComponent();\n    if (!dragAndDropImageComponent) {\n      return;\n    }\n    _anchorElementToMouseMoveEvent(dragAndDropImageComponent.getGui(), event, this.beans);\n  }\n  removeDragAndDropImageComponent() {\n    const {\n      dragAndDropImageComp\n    } = this;\n    if (dragAndDropImageComp) {\n      const {\n        comp\n      } = dragAndDropImageComp;\n      if (comp) {\n        const eGui = comp.getGui();\n        this.dragAndDropImageParent?.removeChild(eGui);\n        this.destroyBean(comp);\n      }\n    }\n    this.dragAndDropImageComp = null;\n  }\n  createDragAndDropImageComponent() {\n    const {\n      dragSource,\n      gos,\n      userCompFactory\n    } = this;\n    if (!dragSource) {\n      return;\n    }\n    const userCompDetails = _getDragAndDropImageCompDetails(userCompFactory, _addGridCommonParams(gos, {\n      dragSource\n    }));\n    if (!userCompDetails) {\n      return;\n    }\n    const promise = userCompDetails.newAgStackInstance();\n    this.dragAndDropImageComp = {\n      promise\n    };\n    promise.then(comp => {\n      if (!comp || !this.isAlive()) {\n        return;\n      }\n      this.processDragAndDropImageComponent(comp);\n      this.dragAndDropImageComp.comp = comp;\n    });\n  }\n  processDragAndDropImageComponent(dragAndDropImageComponent) {\n    const {\n      dragSource,\n      environment\n    } = this;\n    if (!dragSource) {\n      return;\n    }\n    const eGui = dragAndDropImageComponent.getGui();\n    eGui.style.setProperty(\"position\", \"absolute\");\n    eGui.style.setProperty(\"z-index\", \"9999\");\n    _stampTopLevelGridCompWithGridInstance(this.gos, eGui);\n    environment.applyThemeClasses(eGui);\n    dragAndDropImageComponent.setIcon(null, false);\n    let {\n      dragItemName\n    } = dragSource;\n    if (typeof dragItemName === \"function\") {\n      dragItemName = dragItemName();\n    }\n    dragAndDropImageComponent.setLabel(dragItemName || \"\");\n    eGui.style.top = \"20px\";\n    eGui.style.left = \"20px\";\n    const targetEl = _getPageBody(this.beans);\n    this.dragAndDropImageParent = targetEl;\n    if (!targetEl) {\n      _warn(54);\n    } else {\n      targetEl.appendChild(eGui);\n    }\n  }\n  registerGridDropTarget(elementFn, ctrl) {\n    const dropTarget = {\n      getContainer: elementFn,\n      isInterestedIn: type => type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */,\n      getIconName: () => \"notAllowed\"\n    };\n    this.addDropTarget(dropTarget);\n    ctrl.addDestroyFunc(() => this.removeDropTarget(dropTarget));\n  }\n};\n\n// packages/ag-grid-community/src/dragAndDrop/dragService.ts\nvar DragService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dragSvc\";\n    this.dragEndFunctions = [];\n    this.dragSources = [];\n  }\n  destroy() {\n    const {\n      dragSources\n    } = this;\n    dragSources.forEach(this.removeListener.bind(this));\n    dragSources.length = 0;\n    super.destroy();\n  }\n  removeListener(dragSourceAndListener) {\n    const element = dragSourceAndListener.dragSource.eElement;\n    const mouseDownListener = dragSourceAndListener.mouseDownListener;\n    element.removeEventListener(\"mousedown\", mouseDownListener);\n    if (dragSourceAndListener.touchEnabled) {\n      const touchStartListener = dragSourceAndListener.touchStartListener;\n      element.removeEventListener(\"touchstart\", touchStartListener, {\n        passive: true\n      });\n    }\n  }\n  removeDragSource(params) {\n    const {\n      dragSources\n    } = this;\n    const dragSourceAndListener = dragSources.find(item => item.dragSource === params);\n    if (!dragSourceAndListener) {\n      return;\n    }\n    this.removeListener(dragSourceAndListener);\n    _removeFromArray(dragSources, dragSourceAndListener);\n  }\n  addDragSource(params) {\n    const mouseListener = this.onMouseDown.bind(this, params);\n    const {\n      eElement,\n      includeTouch,\n      stopPropagationForTouch\n    } = params;\n    eElement.addEventListener(\"mousedown\", mouseListener);\n    let touchListener = null;\n    const suppressTouch = this.gos.get(\"suppressTouch\");\n    if (includeTouch && !suppressTouch) {\n      touchListener = touchEvent => {\n        if (_isFocusableFormField(touchEvent.target)) {\n          return;\n        }\n        if (stopPropagationForTouch) {\n          touchEvent.stopPropagation();\n        }\n        this.onTouchStart(params, touchEvent);\n      };\n      eElement.addEventListener(\"touchstart\", touchListener, {\n        passive: false\n      });\n    }\n    this.dragSources.push({\n      dragSource: params,\n      mouseDownListener: mouseListener,\n      touchStartListener: touchListener,\n      touchEnabled: !!includeTouch\n    });\n  }\n  // gets called whenever mouse down on any drag source\n  onTouchStart(params, touchEvent) {\n    this.currentDragParams = params;\n    this.dragging = false;\n    const touch = touchEvent.touches[0];\n    this.touchLastTime = touch;\n    this.touchStart = touch;\n    const touchMoveEvent = e => this.onTouchMove(e, params.eElement);\n    const touchEndEvent = e => this.onTouchUp(e, params.eElement);\n    const documentTouchMove = e => {\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n    };\n    const target = touchEvent.target;\n    const events = [\n    // Prevents the page document from moving while we are dragging items around.\n    // preventDefault needs to be called in the touchmove listener and never inside the\n    // touchstart, because using touchstart causes the click event to be cancelled on touch devices.\n    {\n      target: _getRootNode(this.beans),\n      type: \"touchmove\",\n      listener: documentTouchMove,\n      options: {\n        passive: false\n      }\n    }, {\n      target,\n      type: \"touchmove\",\n      listener: touchMoveEvent,\n      options: {\n        passive: true\n      }\n    }, {\n      target,\n      type: \"touchend\",\n      listener: touchEndEvent,\n      options: {\n        passive: true\n      }\n    }, {\n      target,\n      type: \"touchcancel\",\n      listener: touchEndEvent,\n      options: {\n        passive: true\n      }\n    }];\n    this.addTemporaryEvents(events);\n    if (params.dragStartPixels === 0) {\n      this.onCommonMove(touch, this.touchStart, params.eElement);\n    }\n  }\n  // gets called whenever mouse down on any drag source\n  onMouseDown(params, mouseEvent) {\n    const e = mouseEvent;\n    if (params.skipMouseEvent && params.skipMouseEvent(mouseEvent)) {\n      return;\n    }\n    if (e._alreadyProcessedByDragService) {\n      return;\n    }\n    e._alreadyProcessedByDragService = true;\n    if (mouseEvent.button !== 0) {\n      return;\n    }\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\n      mouseEvent.preventDefault();\n    }\n    this.currentDragParams = params;\n    this.dragging = false;\n    this.mouseStartEvent = mouseEvent;\n    this.startTarget = mouseEvent.target;\n    const mouseMoveEvent = event => this.onMouseMove(event, params.eElement);\n    const mouseUpEvent = event => this.onMouseUp(event, params.eElement);\n    const contextEvent = event => event.preventDefault();\n    const keydownEvent = event => {\n      if (event.key === KeyCode.ESCAPE) {\n        this.cancelDrag(params.eElement);\n      }\n    };\n    const target = _getRootNode(this.beans);\n    const events = [{\n      target,\n      type: \"mousemove\",\n      listener: mouseMoveEvent\n    }, {\n      target,\n      type: \"mouseup\",\n      listener: mouseUpEvent\n    }, {\n      target,\n      type: \"contextmenu\",\n      listener: contextEvent\n    }, {\n      target,\n      type: \"keydown\",\n      listener: keydownEvent\n    }];\n    this.addTemporaryEvents(events);\n    if (params.dragStartPixels === 0) {\n      this.onMouseMove(mouseEvent, params.eElement);\n    }\n  }\n  addTemporaryEvents(events) {\n    events.forEach(currentEvent => {\n      const {\n        target,\n        type,\n        listener,\n        options\n      } = currentEvent;\n      target.addEventListener(type, listener, options);\n    });\n    this.dragEndFunctions.push(() => {\n      events.forEach(currentEvent => {\n        const {\n          target,\n          type,\n          listener,\n          options\n        } = currentEvent;\n        target.removeEventListener(type, listener, options);\n      });\n    });\n  }\n  // returns true if the event is close to the original event by X pixels either vertically or horizontally.\n  // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n  isEventNearStartEvent(currentEvent, startEvent) {\n    const {\n      dragStartPixels\n    } = this.currentDragParams;\n    const requiredPixelDiff = _exists(dragStartPixels) ? dragStartPixels : 4;\n    return _areEventsNear(currentEvent, startEvent, requiredPixelDiff);\n  }\n  getFirstActiveTouch(touchList) {\n    for (let i = 0; i < touchList.length; i++) {\n      if (touchList[i].identifier === this.touchStart.identifier) {\n        return touchList[i];\n      }\n    }\n    return null;\n  }\n  onCommonMove(currentEvent, startEvent, el) {\n    if (!this.dragging) {\n      if (this.isEventNearStartEvent(currentEvent, startEvent)) {\n        return;\n      }\n      this.dragging = true;\n      this.eventSvc.dispatchEvent({\n        type: \"dragStarted\",\n        target: el\n      });\n      this.currentDragParams.onDragStart(startEvent);\n      if (!this.currentDragParams) {\n        this.dragging = false;\n        return;\n      }\n      this.currentDragParams.onDragging(startEvent);\n    }\n    this.currentDragParams?.onDragging(currentEvent);\n  }\n  onTouchMove(touchEvent, el) {\n    const touch = this.getFirstActiveTouch(touchEvent.touches);\n    if (!touch) {\n      return;\n    }\n    this.onCommonMove(touch, this.touchStart, el);\n  }\n  // only gets called after a mouse down - as this is only added after mouseDown\n  // and is removed when mouseUp happens\n  onMouseMove(mouseEvent, el) {\n    if (_isBrowserSafari()) {\n      const eDocument = _getDocument(this.beans);\n      eDocument.getSelection()?.removeAllRanges();\n    }\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\n      mouseEvent.preventDefault();\n    }\n    this.onCommonMove(mouseEvent, this.mouseStartEvent, el);\n  }\n  shouldPreventMouseEvent(mouseEvent) {\n    const {\n      gos\n    } = this;\n    const isEnableCellTextSelect = gos.get(\"enableCellTextSelection\");\n    const isMouseMove = mouseEvent.type === \"mousemove\";\n    const isOverFormFieldElement = mouseEvent2 => {\n      const el = mouseEvent2.target;\n      const tagName = el?.tagName.toLocaleLowerCase();\n      return !!tagName?.match(\"^a$|textarea|input|select|button\");\n    };\n    return (\n      // when `isEnableCellTextSelect` is `true`, we need to preventDefault on mouseMove\n      // to avoid the grid text being selected while dragging components.\n      isEnableCellTextSelect && isMouseMove && mouseEvent.cancelable && _isEventFromThisGrid(gos, mouseEvent) && !isOverFormFieldElement(mouseEvent)\n    );\n  }\n  onTouchUp(touchEvent, el) {\n    let touch = this.getFirstActiveTouch(touchEvent.changedTouches);\n    if (!touch) {\n      touch = this.touchLastTime;\n    }\n    this.onUpCommon(touch, el);\n  }\n  onMouseUp(mouseEvent, el) {\n    this.onUpCommon(mouseEvent, el);\n  }\n  onUpCommon(eventOrTouch, el) {\n    if (this.dragging) {\n      this.dragging = false;\n      this.currentDragParams.onDragStop(eventOrTouch);\n      this.eventSvc.dispatchEvent({\n        type: \"dragStopped\",\n        target: el\n      });\n    }\n    this.resetDragProperties();\n  }\n  cancelDrag(el) {\n    this.eventSvc.dispatchEvent({\n      type: \"dragCancelled\",\n      target: el\n    });\n    this.currentDragParams?.onDragCancel?.();\n    this.resetDragProperties();\n  }\n  resetDragProperties() {\n    this.mouseStartEvent = null;\n    this.startTarget = null;\n    this.touchStart = null;\n    this.touchLastTime = null;\n    this.currentDragParams = null;\n    const {\n      dragEndFunctions\n    } = this;\n    dragEndFunctions.forEach(func => func());\n    dragEndFunctions.length = 0;\n  }\n};\n\n// packages/ag-grid-community/src/entities/agColumnGroup.ts\nfunction createUniqueColumnGroupId(groupId, instanceId) {\n  return groupId + \"_\" + instanceId;\n}\nfunction isColumnGroup(col) {\n  return col instanceof AgColumnGroup;\n}\nvar AgColumnGroup = class extends BeanStub {\n  constructor(providedColumnGroup, groupId, partId, pinned) {\n    super();\n    this.providedColumnGroup = providedColumnGroup;\n    this.groupId = groupId;\n    this.partId = partId;\n    this.pinned = pinned;\n    this.isColumn = false;\n    // depends on the open/closed state of the group, only displaying columns are stored here\n    this.displayedChildren = [];\n    // The measured height of this column's header when autoHeaderHeight is enabled\n    this.autoHeaderHeight = null;\n    this.parent = null;\n  }\n  // as the user is adding and removing columns, the groups are recalculated.\n  // this reset clears out all children, ready for children to be added again\n  reset() {\n    this.parent = null;\n    this.children = null;\n    this.displayedChildren = null;\n  }\n  getParent() {\n    return this.parent;\n  }\n  getUniqueId() {\n    return createUniqueColumnGroupId(this.groupId, this.partId);\n  }\n  isEmptyGroup() {\n    return this.displayedChildren.length === 0;\n  }\n  isMoving() {\n    const allLeafColumns = this.getProvidedColumnGroup().getLeafColumns();\n    if (!allLeafColumns || allLeafColumns.length === 0) {\n      return false;\n    }\n    return allLeafColumns.every(col => col.isMoving());\n  }\n  checkLeft() {\n    this.displayedChildren.forEach(child => {\n      if (isColumnGroup(child)) {\n        child.checkLeft();\n      }\n    });\n    if (this.displayedChildren.length > 0) {\n      if (this.gos.get(\"enableRtl\")) {\n        const lastChild = _last(this.displayedChildren);\n        const lastChildLeft = lastChild.getLeft();\n        this.setLeft(lastChildLeft);\n      } else {\n        const firstChildLeft = this.displayedChildren[0].getLeft();\n        this.setLeft(firstChildLeft);\n      }\n    } else {\n      this.setLeft(null);\n    }\n  }\n  getLeft() {\n    return this.left;\n  }\n  getOldLeft() {\n    return this.oldLeft;\n  }\n  setLeft(left) {\n    this.oldLeft = this.left;\n    if (this.left !== left) {\n      this.left = left;\n      this.dispatchLocalEvent({\n        type: \"leftChanged\"\n      });\n    }\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  getGroupId() {\n    return this.groupId;\n  }\n  getPartId() {\n    return this.partId;\n  }\n  getActualWidth() {\n    let groupActualWidth = 0;\n    this.displayedChildren?.forEach(child => {\n      groupActualWidth += child.getActualWidth();\n    });\n    return groupActualWidth;\n  }\n  isResizable() {\n    if (!this.displayedChildren) {\n      return false;\n    }\n    let result = false;\n    this.displayedChildren.forEach(child => {\n      if (child.isResizable()) {\n        result = true;\n      }\n    });\n    return result;\n  }\n  getMinWidth() {\n    let result = 0;\n    this.displayedChildren.forEach(groupChild => {\n      result += groupChild.getMinWidth();\n    });\n    return result;\n  }\n  addChild(child) {\n    if (!this.children) {\n      this.children = [];\n    }\n    this.children.push(child);\n  }\n  getDisplayedChildren() {\n    return this.displayedChildren;\n  }\n  getLeafColumns() {\n    const result = [];\n    this.addLeafColumns(result);\n    return result;\n  }\n  getDisplayedLeafColumns() {\n    const result = [];\n    this.addDisplayedLeafColumns(result);\n    return result;\n  }\n  getDefinition() {\n    return this.providedColumnGroup.getColGroupDef();\n  }\n  getColGroupDef() {\n    return this.providedColumnGroup.getColGroupDef();\n  }\n  isPadding() {\n    return this.providedColumnGroup.isPadding();\n  }\n  isExpandable() {\n    return this.providedColumnGroup.isExpandable();\n  }\n  isExpanded() {\n    return this.providedColumnGroup.isExpanded();\n  }\n  setExpanded(expanded) {\n    this.providedColumnGroup.setExpanded(expanded);\n  }\n  isAutoHeaderHeight() {\n    return !!this.getColGroupDef()?.autoHeaderHeight;\n  }\n  getAutoHeaderHeight() {\n    return this.autoHeaderHeight;\n  }\n  /** Returns true if the header height has changed */\n  setAutoHeaderHeight(height) {\n    const changed = height !== this.autoHeaderHeight;\n    this.autoHeaderHeight = height;\n    return changed;\n  }\n  addDisplayedLeafColumns(leafColumns) {\n    this.displayedChildren.forEach(child => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isColumnGroup(child)) {\n        child.addDisplayedLeafColumns(leafColumns);\n      }\n    });\n  }\n  addLeafColumns(leafColumns) {\n    this.children.forEach(child => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isColumnGroup(child)) {\n        child.addLeafColumns(leafColumns);\n      }\n    });\n  }\n  getChildren() {\n    return this.children;\n  }\n  getColumnGroupShow() {\n    return this.providedColumnGroup.getColumnGroupShow();\n  }\n  getProvidedColumnGroup() {\n    return this.providedColumnGroup;\n  }\n  getPaddingLevel() {\n    const parent = this.getParent();\n    if (!this.isPadding() || !parent || !parent.isPadding()) {\n      return 0;\n    }\n    return 1 + parent.getPaddingLevel();\n  }\n  calculateDisplayedColumns() {\n    this.displayedChildren = [];\n    let parentWithExpansion = this;\n    while (parentWithExpansion != null && parentWithExpansion.isPadding()) {\n      parentWithExpansion = parentWithExpansion.getParent();\n    }\n    const isExpandable = parentWithExpansion ? parentWithExpansion.getProvidedColumnGroup().isExpandable() : false;\n    if (!isExpandable) {\n      this.displayedChildren = this.children;\n      this.dispatchLocalEvent({\n        type: \"displayedChildrenChanged\"\n      });\n      return;\n    }\n    this.children.forEach(child => {\n      const emptyGroup = isColumnGroup(child) && !child.displayedChildren?.length;\n      if (emptyGroup) {\n        return;\n      }\n      const headerGroupShow = child.getColumnGroupShow();\n      switch (headerGroupShow) {\n        case \"open\":\n          if (parentWithExpansion.getProvidedColumnGroup().isExpanded()) {\n            this.displayedChildren.push(child);\n          }\n          break;\n        case \"closed\":\n          if (!parentWithExpansion.getProvidedColumnGroup().isExpanded()) {\n            this.displayedChildren.push(child);\n          }\n          break;\n        default:\n          this.displayedChildren.push(child);\n          break;\n      }\n    });\n    this.dispatchLocalEvent({\n      type: \"displayedChildrenChanged\"\n    });\n  }\n};\n\n// packages/ag-grid-community/src/entities/rowNode.ts\nvar ROW_ID_PREFIX_ROW_GROUP = \"row-group-\";\nvar ROW_ID_PREFIX_TOP_PINNED = \"t-\";\nvar ROW_ID_PREFIX_BOTTOM_PINNED = \"b-\";\nvar OBJECT_ID_SEQUENCE = 0;\nvar RowNode = class {\n  constructor(beans) {\n    /** `true` if this row is a master row, part of master / detail (ie row can be expanded to show detail) */\n    this.master = false;\n    /** `true` if this row is a detail row, part of master / detail (ie child row of an expanded master row)*/\n    this.detail = void 0;\n    /** The current row index. If the row is filtered out or in a collapsed group, this value is set to `null`. */\n    this.rowIndex = null;\n    /** The key for the group eg Ireland, UK, USA */\n    this.key = null;\n    /**\n     * The index of the row in the source rowData array including any updates via transactions.\n     * It does not change when sorting, filtering, grouping, pivoting or any other UI related operations.\n     * If this is a filler node (a visual row created by AG Grid in tree data or grouping) the value is set to `-1`.\n     *\n     * Generally readonly. It is modified only by:\n     * - ClientSideNodeManager, cast to ClientSideNodeManagerRowNode\n     * - ClientSideRowModel, cast to ClientSideRowModelRowNode\n     */\n    this.sourceRowIndex = -1;\n    /** Children mapped by the pivot columns or group key */\n    this.childrenMapped = null;\n    /**\n     * Parent RowNode for tree data.\n     * When set, the parent node in the hierarchy is updated during Client-Side Row Model (CSRM) grouping.\n     * Used by the ClientSideChildrenTreeNodeManager, TreeGroupStrategy, RowDragFeature\n     */\n    this.treeParent = null;\n    /** The flags associated to this node. Used only internally within TreeGroupStrategy. */\n    this.treeNodeFlags = 0;\n    /**\n     * This is `true` if the row has a rowIndex assigned, otherwise `false`.\n     */\n    this.displayed = false;\n    /** The row top position in pixels. */\n    this.rowTop = null;\n    /** The top pixel for this row last time, makes sense if data set was ordered or filtered,\n     * it is used so new rows can animate in from their old position. */\n    this.oldRowTop = null;\n    /** `true` by default - can be overridden via gridOptions.isRowSelectable(rowNode) */\n    this.selectable = true;\n    /**\n     * Used by sorting service - to give deterministic sort to groups. Previously we\n     * just id for this, however id is a string and had slower sorting compared to numbers.\n     * If re-naming this property, you must also update `IGNORED_SIBLING_PROPERTIES`\n     */\n    this.__objectId = OBJECT_ID_SEQUENCE++;\n    /** `true` when nodes with the same id are being removed and added as part of the same batch transaction */\n    this.alreadyRendered = false;\n    this.hovered = false;\n    this.__selected = false;\n    this.beans = beans;\n  }\n  /**\n   * Replaces the data on the `rowNode`. When this method is called, the grid refreshes the entire rendered row if it is displayed.\n   */\n  setData(data) {\n    this.setDataCommon(data, false);\n  }\n  // similar to setRowData, however it is expected that the data is the same data item. this\n  // is intended to be used with Redux type stores, where the whole data can be changed. we are\n  // guaranteed that the data is the same entity (so grid doesn't need to worry about the id of the\n  // underlying data changing, hence doesn't need to worry about selection). the grid, upon receiving\n  // dataChanged event, refreshes the cells rather than rip them all out (so user can show transitions).\n  /**\n   * Updates the data on the `rowNode`. When this method is called, the grid refreshes the entire rendered row if it is displayed.\n   */\n  updateData(data) {\n    this.setDataCommon(data, true);\n  }\n  setDataCommon(data, update) {\n    const {\n      valueCache,\n      eventSvc\n    } = this.beans;\n    const oldData = this.data;\n    this.data = data;\n    valueCache?.onDataChanged();\n    this.updateDataOnDetailNode();\n    this.resetQuickFilterAggregateText();\n    const event = this.createDataChangedEvent(data, oldData, update);\n    this.__localEventService?.dispatchEvent(event);\n    if (this.sibling) {\n      this.sibling.data = data;\n      const event2 = this.sibling.createDataChangedEvent(data, oldData, update);\n      this.sibling.__localEventService?.dispatchEvent(event2);\n    }\n    eventSvc.dispatchEvent({\n      type: \"rowNodeDataChanged\",\n      node: this\n    });\n    const pinnedSibling = this.pinnedSibling;\n    if (pinnedSibling) {\n      pinnedSibling.data = data;\n      pinnedSibling.__localEventService?.dispatchEvent(pinnedSibling.createDataChangedEvent(data, oldData, update));\n      eventSvc.dispatchEvent({\n        type: \"rowNodeDataChanged\",\n        node: pinnedSibling\n      });\n    }\n  }\n  // when we are doing master / detail, the detail node is lazy created, but then kept around.\n  // so if we show / hide the detail, the same detail rowNode is used. so we need to keep the data\n  // in sync, otherwise expand/collapse of the detail would still show the old values.\n  updateDataOnDetailNode() {\n    if (this.detailNode) {\n      this.detailNode.data = this.data;\n    }\n  }\n  createDataChangedEvent(newData, oldData, update) {\n    return {\n      type: \"dataChanged\",\n      node: this,\n      oldData,\n      newData,\n      update\n    };\n  }\n  getRowIndexString() {\n    if (this.rowIndex == null) {\n      _error(13);\n      return null;\n    }\n    if (this.rowPinned === \"top\") {\n      return ROW_ID_PREFIX_TOP_PINNED + this.rowIndex;\n    }\n    if (this.rowPinned === \"bottom\") {\n      return ROW_ID_PREFIX_BOTTOM_PINNED + this.rowIndex;\n    }\n    return this.rowIndex.toString();\n  }\n  setDataAndId(data, id) {\n    const {\n      selectionSvc\n    } = this.beans;\n    const oldNode = selectionSvc?.createDaemonNode?.(this);\n    const oldData = this.data;\n    this.data = data;\n    this.updateDataOnDetailNode();\n    this.setId(id);\n    if (selectionSvc) {\n      selectionSvc.updateRowSelectable(this);\n      selectionSvc.syncInRowNode(this, oldNode);\n    }\n    const event = this.createDataChangedEvent(data, oldData, false);\n    this.__localEventService?.dispatchEvent(event);\n  }\n  setId(id) {\n    const getRowIdFunc = _getRowIdCallback(this.beans.gos);\n    if (getRowIdFunc) {\n      if (this.data) {\n        const parentKeys = this.parent?.getRoute() ?? [];\n        this.id = getRowIdFunc({\n          data: this.data,\n          parentKeys: parentKeys.length > 0 ? parentKeys : void 0,\n          level: this.level,\n          rowPinned: this.rowPinned\n        });\n        if (this.id.startsWith(ROW_ID_PREFIX_ROW_GROUP)) {\n          _error(14, {\n            groupPrefix: ROW_ID_PREFIX_ROW_GROUP\n          });\n        }\n      } else {\n        this.id = void 0;\n      }\n    } else {\n      this.id = id;\n    }\n  }\n  setRowTop(rowTop) {\n    this.oldRowTop = this.rowTop;\n    if (this.rowTop === rowTop) {\n      return;\n    }\n    this.rowTop = rowTop;\n    this.dispatchRowEvent(\"topChanged\");\n    this.setDisplayed(rowTop !== null);\n  }\n  clearRowTopAndRowIndex() {\n    this.oldRowTop = null;\n    this.setRowTop(null);\n    this.setRowIndex(null);\n  }\n  setHovered(hovered) {\n    this.hovered = hovered;\n  }\n  isHovered() {\n    return this.hovered;\n  }\n  /**\n   * Sets the row height.\n   * Call if you want to change the height initially assigned to the row.\n   * After calling, you must call `api.onRowHeightChanged()` so the grid knows it needs to work out the placement of the rows. */\n  setRowHeight(rowHeight, estimated = false) {\n    this.rowHeight = rowHeight;\n    this.rowHeightEstimated = estimated;\n    this.dispatchRowEvent(\"heightChanged\");\n  }\n  setExpanded(expanded, e, forceSync) {\n    this.beans.expansionSvc?.setExpanded(this, expanded, e, forceSync);\n  }\n  /**\n   * Replaces the value on the `rowNode` for the specified column. When complete,\n   * the grid refreshes the rendered cell on the required row only.\n   * **Note**: This method only fires `onCellEditRequest` when the Grid is in **Read Only** mode.\n   * **Note**: This method defers to EditModule if available and batches the edit when `fullRow` or `batchEdit` is enabled.\n   *\n   * @param colKey The column where the value should be updated\n   * @param newValue The new value\n   * @param eventSource The source of the event\n   * @returns `true` if the value was changed, otherwise `false`.\n   */\n  setDataValue(colKey, newValue, eventSource) {\n    const {\n      colModel,\n      valueSvc,\n      gos,\n      editSvc\n    } = this.beans;\n    const column = typeof colKey !== \"string\" ? colKey : colModel.getCol(colKey) ?? colModel.getColDefCol(colKey);\n    if (!column) {\n      return false;\n    }\n    const oldValue = valueSvc.getValueForDisplay(column, this, void 0, void 0, \"api\").value;\n    if (gos.get(\"readOnlyEdit\")) {\n      const {\n        beans: {\n          eventSvc\n        },\n        data,\n        rowIndex,\n        rowPinned\n      } = this;\n      eventSvc.dispatchEvent({\n        type: \"cellEditRequest\",\n        event: null,\n        rowIndex,\n        rowPinned,\n        column,\n        colDef: column.colDef,\n        data,\n        node: this,\n        oldValue,\n        newValue,\n        value: newValue,\n        source: eventSource\n      });\n      return false;\n    }\n    if (editSvc) {\n      const result = editSvc.setDataValue({\n        rowNode: this,\n        column\n      }, newValue, eventSource);\n      if (result != null) {\n        return result;\n      }\n    }\n    const valueChanged = valueSvc.setValue(this, column, newValue, eventSource);\n    this.dispatchCellChangedEvent(column, newValue, oldValue);\n    const pinnedSibling = this.pinnedSibling;\n    if (pinnedSibling) {\n      if (valueChanged) {\n        pinnedSibling.dispatchCellChangedEvent(column, newValue, oldValue);\n      }\n    }\n    return valueChanged;\n  }\n  updateHasChildren() {\n    let newValue = this.group && !this.footer || this.childrenAfterGroup && this.childrenAfterGroup.length > 0;\n    const {\n      rowChildrenSvc\n    } = this.beans;\n    if (rowChildrenSvc) {\n      newValue = rowChildrenSvc.getHasChildrenValue(this);\n    }\n    if (newValue !== this.__hasChildren) {\n      this.__hasChildren = !!newValue;\n      this.dispatchRowEvent(\"hasChildrenChanged\");\n    }\n  }\n  hasChildren() {\n    if (this.__hasChildren == null) {\n      this.updateHasChildren();\n    }\n    return this.__hasChildren;\n  }\n  dispatchCellChangedEvent(column, newValue, oldValue) {\n    const cellChangedEvent = {\n      type: \"cellChanged\",\n      node: this,\n      column,\n      newValue,\n      oldValue\n    };\n    this.__localEventService?.dispatchEvent(cellChangedEvent);\n  }\n  /**\n   * The first time `quickFilter` runs, the grid creates a one-off string representation of the row.\n   * This string is then used for the quick filter instead of hitting each column separately.\n   * When you edit, using grid editing, this string gets cleared down.\n   * However, if you edit without using grid editing, you need to clear this string down for the row to be updated with the new values.\n   * Otherwise, new values would not work with the `quickFilter`. */\n  resetQuickFilterAggregateText() {\n    this.quickFilterAggregateText = null;\n  }\n  /** Returns:\n   * - `true` if the node can be expanded, i.e it is a group or master row.\n   * - `false` if the node cannot be expanded\n   */\n  isExpandable() {\n    return this.beans.expansionSvc?.isExpandable(this) ?? false;\n  }\n  /** Returns:\n   * - `true` if node is selected,\n   * - `false` if the node isn't selected\n   * - `undefined` if it's partially selected (group where not all children are selected). */\n  isSelected() {\n    if (this.footer) {\n      return this.sibling.isSelected();\n    }\n    if (this.rowPinned && this.pinnedSibling) {\n      return this.pinnedSibling.isSelected();\n    }\n    return this.__selected;\n  }\n  /** Perform a depth-first search of this node and its children. */\n  depthFirstSearch(callback) {\n    this.childrenAfterGroup?.forEach(child => child.depthFirstSearch(callback));\n    callback(this);\n  }\n  dispatchRowEvent(type) {\n    this.__localEventService?.dispatchEvent({\n      type,\n      node: this\n    });\n  }\n  /**\n   * Select (or deselect) the node.\n   * @param newValue -`true` for selection, `false` for deselection.\n   * @param clearSelection - If selecting, then passing `true` selects the node exclusively (i.e. NOT do multi select). If doing deselection, `clearSelection` has no impact.\n   * @param source - Source property that appears in the `selectionChanged` event.\n   */\n  setSelected(newValue, clearSelection = false, source = \"api\") {\n    this.beans.selectionSvc?.setNodesSelected({\n      nodes: [this],\n      newValue,\n      clearSelection,\n      source\n    });\n  }\n  /**\n   * Returns:\n   * - `true` if node is either pinned to the `top` or `bottom`\n   * - `false` if the node isn't pinned\n   */\n  isRowPinned() {\n    return !!this.rowPinned;\n  }\n  __addEventListener(eventType, listener) {\n    if (!this.__localEventService) {\n      this.__localEventService = new LocalEventService();\n    }\n    this.__localEventService.addEventListener(eventType, listener);\n  }\n  __removeEventListener(eventType, listener) {\n    this.removeLocalListener(eventType, listener);\n  }\n  /**\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\n   */\n  addEventListener(eventType, userListener) {\n    this.beans.validation?.checkRowEvents(eventType);\n    if (!this.__localEventService) {\n      this.__localEventService = new LocalEventService();\n    }\n    this.frameworkEventListenerService = this.beans.frameworkOverrides.createLocalEventListenerWrapper?.(this.frameworkEventListenerService, this.__localEventService);\n    const listener = this.frameworkEventListenerService?.wrap(eventType, userListener) ?? userListener;\n    this.__localEventService.addEventListener(eventType, listener);\n  }\n  /**\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\n   */\n  removeEventListener(eventType, userListener) {\n    const listener = this.frameworkEventListenerService?.unwrap(eventType, userListener) ?? userListener;\n    this.removeLocalListener(eventType, listener);\n  }\n  removeLocalListener(eventType, listener) {\n    this.__localEventService?.removeEventListener(eventType, listener);\n    if (this.__localEventService?.noRegisteredListenersExist()) {\n      this.__localEventService = null;\n    }\n  }\n  /**\n   * @deprecated v32.2.0 Check `node.detail` then user provided callback `isFullWidthRow` instead.\n   *\n   * Returns:\n   * - `true` if the node is a full width cell\n   * - `false` if the node is not a full width cell\n   */\n  isFullWidthCell() {\n    _warn(61);\n    if (this.detail) {\n      return true;\n    }\n    const isFullWidthCellFunc = this.beans.gos.getCallback(\"isFullWidthRow\");\n    return isFullWidthCellFunc ? isFullWidthCellFunc({\n      rowNode: this\n    }) : false;\n  }\n  /**\n   * Returns the route of keys to the row node. Returns undefined if the node has no key.\n   */\n  getRoute() {\n    if (this.level === -1) {\n      return [];\n    }\n    if (this.key == null) {\n      return void 0;\n    }\n    const res = [];\n    let pointer = this;\n    while (pointer && pointer.key != null) {\n      res.push(pointer.key);\n      pointer = pointer.parent;\n    }\n    return res.reverse();\n  }\n  setFirstChild(firstChild) {\n    if (this.firstChild !== firstChild) {\n      this.firstChild = firstChild;\n      this.dispatchRowEvent(\"firstChildChanged\");\n    }\n  }\n  setDisplayed(displayed) {\n    if (this.displayed !== displayed) {\n      this.displayed = displayed;\n      this.dispatchRowEvent(\"displayedChanged\");\n    }\n  }\n  setRowIndex(rowIndex) {\n    if (this.rowIndex !== rowIndex) {\n      this.rowIndex = rowIndex;\n      this.dispatchRowEvent(\"rowIndexChanged\");\n    }\n  }\n  setAllChildrenCount(allChildrenCount) {\n    if (this.allChildrenCount !== allChildrenCount) {\n      this.allChildrenCount = allChildrenCount;\n      this.dispatchRowEvent(\"allChildrenCountChanged\");\n    }\n  }\n  setUiLevel(uiLevel) {\n    if (this.uiLevel !== uiLevel) {\n      this.uiLevel = uiLevel;\n      this.dispatchRowEvent(\"uiLevelChanged\");\n    }\n  }\n  getFirstChild() {\n    if (this.childStore) {\n      return this.childStore.getFirstNode();\n    }\n    return this.childrenAfterSort?.[0] ?? null;\n  }\n};\n\n// packages/ag-grid-community/src/entities/rowNodeUtils.ts\nfunction _createGlobalRowEvent(rowNode, gos, type) {\n  return _addGridCommonParams(gos, {\n    type,\n    node: rowNode,\n    data: rowNode.data,\n    rowIndex: rowNode.rowIndex,\n    rowPinned: rowNode.rowPinned\n  });\n}\nvar IGNORED_SIBLING_PROPERTIES = /* @__PURE__ */new Set([\"__localEventService\", \"__objectId\", \"sticky\", \"__autoHeights\", \"__checkAutoHeightsDebounced\", \"childStore\"]);\nfunction _createRowNodeSibling(rowNode, beans) {\n  const sibling = new RowNode(beans);\n  Object.keys(rowNode).forEach(key => {\n    if (IGNORED_SIBLING_PROPERTIES.has(key)) {\n      return;\n    }\n    sibling[key] = rowNode[key];\n  });\n  sibling.oldRowTop = null;\n  return sibling;\n}\n\n// packages/ag-grid-community/src/filter/columnFilterUtils.ts\nvar FILTER_HANDLER_MAP = {\n  agSetColumnFilter: \"agSetColumnFilterHandler\",\n  agMultiColumnFilter: \"agMultiColumnFilterHandler\",\n  agGroupColumnFilter: \"agGroupColumnFilterHandler\",\n  agNumberColumnFilter: \"agNumberColumnFilterHandler\",\n  agDateColumnFilter: \"agDateColumnFilterHandler\",\n  agTextColumnFilter: \"agTextColumnFilterHandler\"\n};\nvar FILTER_HANDLERS = new Set(Object.values(FILTER_HANDLER_MAP));\nfunction getFilterUiFromWrapper(filterWrapper, skipCreate) {\n  const filterUi = filterWrapper.filterUi;\n  if (!filterUi) {\n    return null;\n  }\n  if (filterUi.created) {\n    return filterUi.promise;\n  }\n  if (skipCreate) {\n    return null;\n  }\n  const promise = filterUi.create(filterUi.refreshed);\n  const createdFilterUi = filterUi;\n  createdFilterUi.created = true;\n  createdFilterUi.promise = promise;\n  return promise;\n}\nfunction _refreshHandlerAndUi(getFilterUi, handler, handlerParams, model, state, source) {\n  handler.refresh?.({\n    ...handlerParams,\n    model,\n    source\n  });\n  return getFilterUi().then(filterUi => {\n    if (filterUi) {\n      const {\n        filter,\n        filterParams\n      } = filterUi;\n      _refreshFilterUi(filter, filterParams, model, state, source);\n    }\n  });\n}\nfunction _refreshFilterUi(filter, filterParams, model, state, source) {\n  filter?.refresh?.({\n    ...filterParams,\n    model,\n    state,\n    source\n  });\n}\nfunction getAndRefreshFilterUi(getFilterUi, getModel, getState2) {\n  const filterUi = getFilterUi();\n  if (filterUi?.created) {\n    filterUi.promise.then(filter => {\n      const model = getModel();\n      _refreshFilterUi(filter, filterUi.filterParams, model, getState2() ?? {\n        model\n      }, \"ui\");\n    });\n  }\n}\nfunction _updateFilterModel(action, getFilterUi, getModel, getState2, updateState, updateModel) {\n  let state;\n  let shouldUpdateModel = false;\n  let model;\n  switch (action) {\n    case \"apply\":\n      {\n        const oldState = getState2();\n        model = oldState?.model ?? null;\n        state = {\n          // keep the other UI state\n          state: oldState?.state,\n          model\n        };\n        shouldUpdateModel = true;\n        break;\n      }\n    case \"clear\":\n      {\n        state = {\n          // wipe other UI state\n          model: null\n        };\n        break;\n      }\n    case \"reset\":\n      {\n        state = {\n          // wipe other UI state\n          model: null\n        };\n        shouldUpdateModel = true;\n        model = null;\n        break;\n      }\n    case \"cancel\":\n      {\n        state = {\n          // wipe other UI state\n          model: getModel()\n        };\n        break;\n      }\n  }\n  updateState(state);\n  if (shouldUpdateModel) {\n    updateModel(model);\n  } else {\n    getAndRefreshFilterUi(getFilterUi, getModel, getState2);\n  }\n}\nfunction _getFilterModel(model, colId) {\n  return model[colId] ?? null;\n}\n\n// packages/ag-grid-community/src/filter/filterButtonComp.ts\nfunction getElement(className) {\n  return {\n    tag: \"div\",\n    cls: className\n  };\n}\nvar FilterButtonComp = class extends Component {\n  constructor(config) {\n    const {\n      className = \"ag-filter-apply-panel\"\n    } = config ?? {};\n    super(getElement(className));\n    this.listeners = [];\n    this.validationMessage = null;\n    this.className = className;\n  }\n  updateButtons(buttons, useForm) {\n    const oldButtons = this.buttons;\n    this.buttons = buttons;\n    if (oldButtons === buttons) {\n      return;\n    }\n    const eGui = this.getGui();\n    _clearElement(eGui);\n    let eApplyButton;\n    this.destroyListeners();\n    const fragment = document.createDocumentFragment();\n    const className = this.className;\n    const addButton = ({\n      type,\n      label\n    }) => {\n      const clickListener = event => {\n        this.dispatchLocalEvent({\n          type,\n          event\n        });\n      };\n      if (![\"apply\", \"clear\", \"reset\", \"cancel\"].includes(type)) {\n        _warn(75);\n      }\n      const isApply = type === \"apply\";\n      const buttonType = isApply && useForm ? \"submit\" : \"button\";\n      const button = _createElement({\n        tag: \"button\",\n        attrs: {\n          type: buttonType\n        },\n        ref: `${type}FilterButton`,\n        cls: `ag-button ag-standard-button ${className}-button${isApply ? \" \" + className + \"-apply-button\" : \"\"}`,\n        children: label\n      });\n      this.activateTabIndex([button]);\n      if (isApply) {\n        eApplyButton = button;\n      }\n      const keydownListener = event => {\n        if (event.key === KeyCode.ENTER) {\n          event.preventDefault();\n          clickListener(event);\n        }\n      };\n      const listeners = this.listeners;\n      button.addEventListener(\"click\", clickListener);\n      listeners.push(() => button.removeEventListener(\"click\", clickListener));\n      button.addEventListener(\"keydown\", keydownListener);\n      listeners.push(() => button.removeEventListener(\"keydown\", keydownListener));\n      fragment.append(button);\n    };\n    buttons.forEach(button => addButton(button));\n    this.eApply = eApplyButton;\n    const tooltip = this.validationTooltipFeature;\n    if (eApplyButton && !tooltip) {\n      this.validationTooltipFeature = this.createOptionalManagedBean(this.beans.registry.createDynamicBean(\"tooltipFeature\", false, {\n        getGui: () => this.eApply,\n        getLocation: () => \"advancedFilter\",\n        getTooltipShowDelayOverride: () => 1e3\n      }));\n    } else if (!eApplyButton && tooltip) {\n      this.validationTooltipFeature = this.destroyBean(tooltip);\n    }\n    eGui.append(fragment);\n  }\n  getApplyButton() {\n    return this.eApply;\n  }\n  updateValidity(valid, message = null) {\n    const eApplyButton = this.eApply;\n    if (!eApplyButton) {\n      return;\n    }\n    _setDisabled(eApplyButton, valid === false);\n    this.validationMessage = message ?? null;\n    this.validationTooltipFeature?.setTooltipAndRefresh(this.validationMessage);\n  }\n  destroyListeners() {\n    this.listeners.forEach(destroyFunc => destroyFunc());\n    this.listeners = [];\n  }\n  destroy() {\n    this.destroyListeners();\n    super.destroy();\n  }\n};\nvar AgFilterButtonSelector = {\n  selector: \"AG-FILTER-BUTTON\",\n  component: FilterButtonComp\n};\n\n// packages/ag-grid-community/src/filter/filterLocaleText.ts\nvar FILTER_LOCALE_TEXT = {\n  applyFilter: \"Apply\",\n  clearFilter: \"Clear\",\n  resetFilter: \"Reset\",\n  cancelFilter: \"Cancel\",\n  textFilter: \"Text Filter\",\n  numberFilter: \"Number Filter\",\n  dateFilter: \"Date Filter\",\n  setFilter: \"Set Filter\",\n  filterOoo: \"Filter...\",\n  empty: \"Choose one\",\n  equals: \"Equals\",\n  notEqual: \"Does not equal\",\n  lessThan: \"Less than\",\n  greaterThan: \"Greater than\",\n  inRange: \"Between\",\n  inRangeStart: \"From\",\n  inRangeEnd: \"To\",\n  lessThanOrEqual: \"Less than or equal to\",\n  greaterThanOrEqual: \"Greater than or equal to\",\n  contains: \"Contains\",\n  notContains: \"Does not contain\",\n  startsWith: \"Begins with\",\n  endsWith: \"Ends with\",\n  blank: \"Blank\",\n  notBlank: \"Not blank\",\n  before: \"Before\",\n  after: \"After\",\n  andCondition: \"AND\",\n  orCondition: \"OR\",\n  dateFormatOoo: \"yyyy-mm-dd\",\n  filterSummaryInactive: \"is (All)\",\n  filterSummaryContains: \"contains\",\n  filterSummaryNotContains: \"does not contain\",\n  filterSummaryTextEquals: \"equals\",\n  filterSummaryTextNotEqual: \"does not equal\",\n  filterSummaryStartsWith: \"begins with\",\n  filterSummaryEndsWith: \"ends with\",\n  filterSummaryBlank: \"is blank\",\n  filterSummaryNotBlank: \"is not blank\",\n  filterSummaryEquals: \"=\",\n  filterSummaryNotEqual: \"!=\",\n  filterSummaryGreaterThan: \">\",\n  filterSummaryGreaterThanOrEqual: \">=\",\n  filterSummaryLessThan: \"<\",\n  filterSummaryLessThanOrEqual: \"<=\",\n  filterSummaryInRange: \"between\",\n  filterSummaryInRangeValues: variableValues => `(${variableValues[0]}, ${variableValues[1]})`,\n  filterSummaryTextQuote: variableValues => `\"${variableValues[0]}\"`\n};\nfunction translateForFilter(bean, key, variableValues) {\n  return _translate(bean, FILTER_LOCALE_TEXT, key, variableValues);\n}\n\n// packages/ag-grid-community/src/filter/provided/providedFilterUtils.ts\nfunction getDebounceMs(params, debounceDefault) {\n  const {\n    debounceMs\n  } = params;\n  if (_isUseApplyButton(params)) {\n    if (debounceMs != null) {\n      _warn(71);\n    }\n    return 0;\n  }\n  return debounceMs ?? debounceDefault;\n}\nfunction _isUseApplyButton(params) {\n  return (params.buttons?.indexOf(\"apply\") ?? -1) >= 0;\n}\n\n// packages/ag-grid-community/src/filter/filterWrapperComp.ts\nvar FilterWrapperComp = class extends Component {\n  constructor(column, wrapper, eventParent, updateModel, isGlobalButtons, enableGlobalButtonCheck) {\n    super();\n    this.column = column;\n    this.wrapper = wrapper;\n    this.eventParent = eventParent;\n    this.updateModel = updateModel;\n    this.isGlobalButtons = isGlobalButtons;\n    this.enableGlobalButtonCheck = enableGlobalButtonCheck;\n    this.hidePopup = null;\n    this.applyActive = false;\n  }\n  postConstruct() {\n    const {\n      comp,\n      params: originalParams\n    } = this.wrapper;\n    const params = originalParams;\n    const useForm = params.useForm;\n    const tag = useForm ? \"form\" : \"div\";\n    this.setTemplate({\n      tag,\n      cls: \"ag-filter-wrapper\"\n    });\n    if (useForm) {\n      this.addManagedElementListeners(this.getGui(), {\n        submit: e => {\n          e?.preventDefault();\n        },\n        keydown: this.handleKeyDown.bind(this)\n      });\n    }\n    this.appendChild(comp.getGui());\n    this.params = params;\n    this.resetButtonsPanel(params);\n    this.addManagedListeners(this.eventParent, {\n      filterParamsChanged: ({\n        column,\n        params: eventParams\n      }) => {\n        if (column === this.column) {\n          this.resetButtonsPanel(eventParams, this.params);\n        }\n      },\n      filterStateChanged: ({\n        column,\n        state\n      }) => {\n        if (column === this.column) {\n          this.eButtons?.updateValidity(state.valid !== false);\n        }\n      },\n      filterAction: ({\n        column,\n        action,\n        event: keyboardEvent\n      }) => {\n        if (column === this.column) {\n          this.afterAction(action, keyboardEvent);\n        }\n      },\n      ...(this.enableGlobalButtonCheck ? {\n        filterGlobalButtons: ({\n          isGlobal\n        }) => {\n          if (isGlobal !== this.isGlobalButtons) {\n            this.isGlobalButtons = isGlobal;\n            const currentParams = this.params;\n            this.resetButtonsPanel(currentParams, currentParams, true);\n          }\n        }\n      } : void 0)\n    });\n  }\n  afterGuiAttached(params) {\n    if (params) {\n      this.hidePopup = params.hidePopup;\n    }\n  }\n  resetButtonsPanel(newParams, oldParams, forceUpdate) {\n    const {\n      buttons: oldButtons,\n      readOnly: oldReadOnly\n    } = oldParams ?? {};\n    const {\n      buttons: newButtons,\n      readOnly,\n      useForm\n    } = newParams;\n    if (!forceUpdate && oldReadOnly === readOnly && _jsonEquals(oldButtons, newButtons)) {\n      return;\n    }\n    const hasButtons = newButtons && newButtons.length > 0 && !newParams.readOnly && !this.isGlobalButtons;\n    let eButtonsPanel = this.eButtons;\n    if (hasButtons) {\n      const buttons = newButtons.map(type => {\n        const localeKey = `${type}Filter`;\n        return {\n          type,\n          label: translateForFilter(this, localeKey)\n        };\n      });\n      this.applyActive = _isUseApplyButton(this.params);\n      if (!eButtonsPanel) {\n        eButtonsPanel = this.createBean(new FilterButtonComp());\n        this.appendChild(eButtonsPanel.getGui());\n        const column = this.column;\n        const getListener = action => ({\n          event\n        }) => {\n          this.updateModel(column, action);\n          this.afterAction(action, event);\n        };\n        eButtonsPanel?.addManagedListeners(eButtonsPanel, {\n          apply: getListener(\"apply\"),\n          clear: getListener(\"clear\"),\n          reset: getListener(\"reset\"),\n          cancel: getListener(\"cancel\")\n        });\n        this.eButtons = eButtonsPanel;\n      }\n      eButtonsPanel.updateButtons(buttons, useForm);\n    } else {\n      this.applyActive = false;\n      if (eButtonsPanel) {\n        _removeFromParent(eButtonsPanel.getGui());\n        this.eButtons = this.destroyBean(eButtonsPanel);\n      }\n    }\n  }\n  close(e) {\n    const hidePopup = this.hidePopup;\n    if (!hidePopup) {\n      return;\n    }\n    const keyboardEvent = e;\n    const key = keyboardEvent && keyboardEvent.key;\n    let params;\n    if (key === KeyCode.ENTER || key === KeyCode.SPACE) {\n      params = {\n        keyboardEvent\n      };\n    }\n    hidePopup(params);\n    this.hidePopup = null;\n  }\n  afterAction(action, event) {\n    const {\n      params,\n      applyActive\n    } = this;\n    const closeOnApply = params?.closeOnApply;\n    switch (action) {\n      case \"apply\":\n        {\n          event?.preventDefault();\n          if (closeOnApply && applyActive) {\n            this.close(event);\n          }\n          break;\n        }\n      case \"reset\":\n        {\n          if (closeOnApply && applyActive) {\n            this.close();\n          }\n          break;\n        }\n      case \"cancel\":\n        {\n          if (closeOnApply) {\n            this.close(event);\n          }\n          break;\n        }\n    }\n  }\n  handleKeyDown(event) {\n    if (!event.defaultPrevented && event.key === KeyCode.ENTER && this.applyActive) {\n      this.updateModel(this.column, \"apply\");\n      this.afterAction(\"apply\", event);\n    }\n  }\n  destroy() {\n    this.hidePopup = null;\n    this.eButtons = this.destroyBean(this.eButtons);\n  }\n};\n\n// packages/ag-grid-community/src/filter/filterComp.ts\nvar FilterElement = {\n  tag: \"div\",\n  cls: \"ag-filter\"\n};\nvar FilterComp = class extends Component {\n  constructor(column, source, enableGlobalButtonCheck) {\n    super(FilterElement);\n    this.column = column;\n    this.source = source;\n    this.enableGlobalButtonCheck = enableGlobalButtonCheck;\n    this.wrapper = null;\n  }\n  postConstruct() {\n    this.beans.colFilter?.activeFilterComps.add(this);\n    this.createFilter(true);\n    this.addManagedEventListeners({\n      filterDestroyed: this.onFilterDestroyed.bind(this)\n    });\n  }\n  hasFilter() {\n    return this.wrapper != null;\n  }\n  getFilter() {\n    return this.wrapper?.then(wrapper => wrapper.comp) ?? null;\n  }\n  afterInit() {\n    return this.wrapper?.then(() => {}) ?? AgPromise.resolve();\n  }\n  afterGuiAttached(params) {\n    this.afterGuiAttachedParams = params;\n    this.wrapper?.then(wrapper => {\n      this.comp?.afterGuiAttached(params);\n      wrapper?.comp?.afterGuiAttached?.(params);\n    });\n  }\n  afterGuiDetached() {\n    this.wrapper?.then(wrapper => {\n      wrapper?.comp?.afterGuiDetached?.();\n    });\n  }\n  createFilter(init) {\n    const {\n      column,\n      source,\n      beans: {\n        colFilter\n      }\n    } = this;\n    const filterPromise = colFilter.getFilterUiForDisplay(column) ?? null;\n    this.wrapper = filterPromise;\n    filterPromise?.then(wrapper => {\n      if (!wrapper) {\n        return;\n      }\n      const {\n        isHandler,\n        comp\n      } = wrapper;\n      let filterGui;\n      if (isHandler) {\n        const enableGlobalButtonCheck = !!this.enableGlobalButtonCheck;\n        const displayComp = this.createBean(new FilterWrapperComp(column, wrapper, colFilter, colFilter.updateModel.bind(colFilter), enableGlobalButtonCheck && colFilter.isGlobalButtons, enableGlobalButtonCheck));\n        this.comp = displayComp;\n        filterGui = displayComp.getGui();\n      } else {\n        filterGui = comp.getGui();\n        if (!_exists(filterGui)) {\n          _warn(69, {\n            guiFromFilter: filterGui\n          });\n        }\n      }\n      this.appendChild(filterGui);\n      if (init) {\n        this.eventSvc.dispatchEvent({\n          type: \"filterOpened\",\n          column,\n          source,\n          eGui: this.getGui()\n        });\n      } else {\n        comp.afterGuiAttached?.(this.afterGuiAttachedParams);\n      }\n    });\n  }\n  onFilterDestroyed(event) {\n    const {\n      source,\n      column\n    } = event;\n    if ((source === \"api\" || source === \"paramsUpdated\") && column.getId() === this.column.getId() && this.beans.colModel.getColDefCol(this.column)) {\n      _clearElement(this.getGui());\n      this.comp = this.destroyBean(this.comp);\n      this.createFilter();\n    }\n  }\n  destroy() {\n    this.beans.colFilter?.activeFilterComps.delete(this);\n    this.eventSvc.dispatchEvent({\n      type: \"filterClosed\",\n      column: this.column\n    });\n    this.wrapper = null;\n    this.comp = this.destroyBean(this.comp);\n    this.afterGuiAttachedParams = void 0;\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/utils/date.ts\nvar DATE_TIME_SEPARATOR = \"T\";\nvar DATE_TIME_REGEXP = new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}(${DATE_TIME_SEPARATOR}\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\D?)?`);\nfunction _padStartWidthZeros(value, totalStringSize) {\n  return value.toString().padStart(totalStringSize, \"0\");\n}\nfunction _serialiseDate(date, includeTime = true, separator = \"-\") {\n  if (!date) {\n    return null;\n  }\n  let serialised = [date.getFullYear(), date.getMonth() + 1, date.getDate()].map(part => _padStartWidthZeros(part, 2)).join(separator);\n  if (includeTime) {\n    serialised += DATE_TIME_SEPARATOR + [date.getHours(), date.getMinutes(), date.getSeconds()].map(part => _padStartWidthZeros(part, 2)).join(\":\");\n  }\n  return serialised;\n}\nfunction _getDateParts(d, includeTime = true) {\n  if (!d) {\n    return null;\n  }\n  if (includeTime) {\n    return [String(d.getFullYear()), String(d.getMonth() + 1), _padStartWidthZeros(d.getDate(), 2), _padStartWidthZeros(d.getHours(), 2), `:${_padStartWidthZeros(d.getMinutes(), 2)}`, `:${_padStartWidthZeros(d.getSeconds(), 2)}`];\n  }\n  return [d.getFullYear(), d.getMonth() + 1, _padStartWidthZeros(d.getDate(), 2)].map(String);\n}\nvar calculateOrdinal = value => {\n  if (value > 3 && value < 21) {\n    return \"th\";\n  }\n  const remainder = value % 10;\n  switch (remainder) {\n    case 1:\n      return \"st\";\n    case 2:\n      return \"nd\";\n    case 3:\n      return \"rd\";\n  }\n  return \"th\";\n};\nfunction _dateToFormattedString(date, format) {\n  if (format == null) {\n    return _serialiseDate(date, false);\n  }\n  const fullYear = _padStartWidthZeros(date.getFullYear(), 4);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const replace = {\n    YYYY: () => fullYear.slice(fullYear.length - 4, fullYear.length),\n    YY: () => fullYear.slice(fullYear.length - 2, fullYear.length),\n    Y: () => `${date.getFullYear()}`,\n    MMMM: () => months[date.getMonth()],\n    MMM: () => months[date.getMonth()].slice(0, 3),\n    MM: () => _padStartWidthZeros(date.getMonth() + 1, 2),\n    Mo: () => `${date.getMonth() + 1}${calculateOrdinal(date.getMonth() + 1)}`,\n    M: () => `${date.getMonth() + 1}`,\n    Do: () => `${date.getDate()}${calculateOrdinal(date.getDate())}`,\n    DD: () => _padStartWidthZeros(date.getDate(), 2),\n    D: () => `${date.getDate()}`,\n    dddd: () => days[date.getDay()],\n    ddd: () => days[date.getDay()].slice(0, 3),\n    dd: () => days[date.getDay()].slice(0, 2),\n    do: () => `${date.getDay()}${calculateOrdinal(date.getDay())}`,\n    d: () => `${date.getDay()}`\n  };\n  const regexp = new RegExp(Object.keys(replace).join(\"|\"), \"g\");\n  return format.replace(regexp, match => {\n    if (match in replace) {\n      return replace[match]();\n    }\n    return match;\n  });\n}\nfunction _isValidDate(value, bailIfInvalidTime = false) {\n  return !!_parseDateTimeFromString(value, bailIfInvalidTime);\n}\nfunction _isValidDateTime(value) {\n  return _isValidDate(value, true);\n}\nfunction _parseDateTimeFromString(value, bailIfInvalidTime = false) {\n  if (!value) {\n    return null;\n  }\n  if (!DATE_TIME_REGEXP.test(value)) {\n    return null;\n  }\n  const [dateStr, timeStr] = value.split(DATE_TIME_SEPARATOR);\n  if (!dateStr) {\n    return null;\n  }\n  const fields = dateStr.split(\"-\").map(f => parseInt(f, 10));\n  if (fields.filter(f => !isNaN(f)).length !== 3) {\n    return null;\n  }\n  const [year, month, day] = fields;\n  const date = new Date(year, month - 1, day);\n  if (date.getFullYear() !== year || date.getMonth() !== month - 1 || date.getDate() !== day) {\n    return null;\n  }\n  if (!timeStr && bailIfInvalidTime) {\n    return null;\n  }\n  if (!timeStr || timeStr === \"00:00:00\") {\n    return date;\n  }\n  const [hours, minutes, seconds] = timeStr.split(\":\").map(part => parseInt(part, 10));\n  if (hours >= 0 && hours < 24) {\n    date.setHours(hours);\n  } else if (bailIfInvalidTime) {\n    return null;\n  }\n  if (minutes >= 0 && minutes < 60) {\n    date.setMinutes(minutes);\n  } else if (bailIfInvalidTime) {\n    return null;\n  }\n  if (seconds >= 0 && seconds < 60) {\n    date.setSeconds(seconds);\n  } else if (bailIfInvalidTime) {\n    return null;\n  }\n  return date;\n}\n\n// packages/ag-grid-community/src/filter/filterDataTypeUtils.ts\nvar MONTH_LOCALE_TEXT = {\n  january: \"January\",\n  february: \"February\",\n  march: \"March\",\n  april: \"April\",\n  may: \"May\",\n  june: \"June\",\n  july: \"July\",\n  august: \"August\",\n  september: \"September\",\n  october: \"October\",\n  november: \"November\",\n  december: \"December\"\n};\nvar MONTH_KEYS = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\nfunction setFilterNumberComparator(a, b) {\n  if (a == null) {\n    return -1;\n  }\n  if (b == null) {\n    return 1;\n  }\n  return parseFloat(a) - parseFloat(b);\n}\nfunction isValidDate(value) {\n  return value instanceof Date && !isNaN(value.getTime());\n}\nvar filterParamsForEachDataType = {\n  number: () => void 0,\n  boolean: () => ({\n    maxNumConditions: 1,\n    debounceMs: 0,\n    filterOptions: [\"empty\", {\n      displayKey: \"true\",\n      displayName: \"True\",\n      predicate: (_filterValues, cellValue) => cellValue,\n      numberOfInputs: 0\n    }, {\n      displayKey: \"false\",\n      displayName: \"False\",\n      predicate: (_filterValues, cellValue) => cellValue === false,\n      numberOfInputs: 0\n    }]\n  }),\n  date: () => ({\n    isValidDate\n  }),\n  dateString: ({\n    dataTypeDefinition\n  }) => ({\n    comparator: (filterDate, cellValue) => {\n      const cellAsDate = dataTypeDefinition.dateParser(cellValue);\n      if (cellValue == null || cellAsDate < filterDate) {\n        return -1;\n      }\n      if (cellAsDate > filterDate) {\n        return 1;\n      }\n      return 0;\n    },\n    isValidDate: value => typeof value === \"string\" && isValidDate(dataTypeDefinition.dateParser(value))\n  }),\n  dateTime: args => filterParamsForEachDataType.date(args),\n  dateTimeString: args => filterParamsForEachDataType.dateString(args),\n  object: () => void 0,\n  text: () => void 0\n};\nvar setFilterParamsForEachDataType = {\n  number: () => ({\n    comparator: setFilterNumberComparator\n  }),\n  boolean: ({\n    t\n  }) => ({\n    valueFormatter: params => _exists(params.value) ? t(String(params.value), params.value ? \"True\" : \"False\") : t(\"blanks\", \"(Blanks)\")\n  }),\n  date: ({\n    formatValue,\n    t\n  }) => ({\n    valueFormatter: params => {\n      const valueFormatted = formatValue(params);\n      return _exists(valueFormatted) ? valueFormatted : t(\"blanks\", \"(Blanks)\");\n    },\n    treeList: true,\n    treeListFormatter: (pathKey, level) => {\n      if (pathKey === \"NaN\") {\n        return t(\"invalidDate\", \"Invalid Date\");\n      }\n      if (level === 1 && pathKey != null) {\n        const monthKey = MONTH_KEYS[Number(pathKey) - 1];\n        return t(monthKey, MONTH_LOCALE_TEXT[monthKey]);\n      }\n      return pathKey ?? t(\"blanks\", \"(Blanks)\");\n    },\n    treeListPathGetter: date => _getDateParts(date, false)\n  }),\n  dateString: ({\n    formatValue,\n    dataTypeDefinition,\n    t\n  }) => ({\n    valueFormatter: params => {\n      const valueFormatted = formatValue(params);\n      return _exists(valueFormatted) ? valueFormatted : t(\"blanks\", \"(Blanks)\");\n    },\n    treeList: true,\n    treeListPathGetter: value => _getDateParts(dataTypeDefinition.dateParser(value ?? void 0), false),\n    treeListFormatter: (pathKey, level) => {\n      if (level === 1 && pathKey != null) {\n        const monthKey = MONTH_KEYS[Number(pathKey) - 1];\n        return t(monthKey, MONTH_LOCALE_TEXT[monthKey]);\n      }\n      return pathKey ?? t(\"blanks\", \"(Blanks)\");\n    }\n  }),\n  dateTime: args => {\n    const params = setFilterParamsForEachDataType.date(args);\n    params.treeListPathGetter = _getDateParts;\n    return params;\n  },\n  dateTimeString(args) {\n    const convertToDate = args.dataTypeDefinition.dateParser;\n    const params = setFilterParamsForEachDataType.dateString(args);\n    params.treeListPathGetter = value => _getDateParts(convertToDate(value ?? void 0));\n    return params;\n  },\n  object: ({\n    formatValue,\n    t\n  }) => ({\n    valueFormatter: params => {\n      const valueFormatted = formatValue(params);\n      return _exists(valueFormatted) ? valueFormatted : t(\"blanks\", \"(Blanks)\");\n    }\n  }),\n  text: () => void 0\n};\nfunction _getFilterParamsForDataType(filter, existingFilterParams, existingFilterValueGetter, dataTypeDefinition, formatValue, beans, translate) {\n  let filterParams = existingFilterParams;\n  let filterValueGetter = existingFilterValueGetter;\n  const usingSetFilter = filter === \"agSetColumnFilter\";\n  if (!filterValueGetter && dataTypeDefinition.baseDataType === \"object\" && !usingSetFilter) {\n    filterValueGetter = ({\n      column,\n      node\n    }) => formatValue({\n      column,\n      node,\n      value: beans.valueSvc.getValue(column, node)\n    });\n  }\n  const filterParamsMap = usingSetFilter ? setFilterParamsForEachDataType : filterParamsForEachDataType;\n  const filterParamsGetter = filterParamsMap[dataTypeDefinition.baseDataType];\n  const newFilterParams = filterParamsGetter({\n    dataTypeDefinition,\n    formatValue,\n    t: translate\n  });\n  filterParams = typeof existingFilterParams === \"object\" ? {\n    ...newFilterParams,\n    ...existingFilterParams\n  } : newFilterParams;\n  return {\n    filterParams,\n    filterValueGetter\n  };\n}\nvar defaultFilters = {\n  boolean: \"agTextColumnFilter\",\n  date: \"agDateColumnFilter\",\n  dateString: \"agDateColumnFilter\",\n  dateTime: \"agDateColumnFilter\",\n  dateTimeString: \"agDateColumnFilter\",\n  number: \"agNumberColumnFilter\",\n  object: \"agTextColumnFilter\",\n  text: \"agTextColumnFilter\"\n};\nvar defaultFloatingFilters = {\n  boolean: \"agTextColumnFloatingFilter\",\n  date: \"agDateColumnFloatingFilter\",\n  dateString: \"agDateColumnFloatingFilter\",\n  dateTime: \"agDateColumnFloatingFilter\",\n  dateTimeString: \"agDateColumnFloatingFilter\",\n  number: \"agNumberColumnFloatingFilter\",\n  object: \"agTextColumnFloatingFilter\",\n  text: \"agTextColumnFloatingFilter\"\n};\nfunction _getDefaultSimpleFilter(cellDataType, isFloating = false) {\n  const filterSet = isFloating ? defaultFloatingFilters : defaultFilters;\n  return filterSet[cellDataType ?? \"text\"];\n}\n\n// packages/ag-grid-community/src/rendering/features/positionableFeature.ts\nvar RESIZE_CONTAINER_STYLE = \"ag-resizer-wrapper\";\nvar makeDiv = (dataRefPrefix, classSuffix) => ({\n  tag: \"div\",\n  ref: `${dataRefPrefix}Resizer`,\n  cls: `ag-resizer ag-resizer-${classSuffix}`\n});\nvar RESIZE_TEMPLATE = {\n  tag: \"div\",\n  cls: RESIZE_CONTAINER_STYLE,\n  children: [makeDiv(\"eTopLeft\", \"topLeft\"), makeDiv(\"eTop\", \"top\"), makeDiv(\"eTopRight\", \"topRight\"), makeDiv(\"eRight\", \"right\"), makeDiv(\"eBottomRight\", \"bottomRight\"), makeDiv(\"eBottom\", \"bottom\"), makeDiv(\"eBottomLeft\", \"bottomLeft\"), makeDiv(\"eLeft\", \"left\")]\n};\nvar PositionableFeature = class extends BeanStub {\n  constructor(element, config) {\n    super();\n    this.element = element;\n    this.dragStartPosition = {\n      x: 0,\n      y: 0\n    };\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.lastSize = {\n      width: -1,\n      height: -1\n    };\n    this.positioned = false;\n    this.resizersAdded = false;\n    this.resizeListeners = [];\n    this.boundaryEl = null;\n    this.isResizing = false;\n    this.isMoving = false;\n    this.resizable = {};\n    this.movable = false;\n    this.currentResizer = null;\n    this.config = Object.assign({}, {\n      popup: false\n    }, config);\n  }\n  wireBeans(beans) {\n    this.popupSvc = beans.popupSvc;\n    this.dragSvc = beans.dragSvc;\n  }\n  center(postProcessCallback) {\n    const {\n      clientHeight,\n      clientWidth\n    } = this.offsetParent;\n    const x = clientWidth / 2 - this.getWidth() / 2;\n    const y = clientHeight / 2 - this.getHeight() / 2;\n    this.offsetElement(x, y, postProcessCallback);\n  }\n  initialisePosition(postProcessCallback) {\n    if (this.positioned) {\n      return;\n    }\n    const {\n      centered,\n      forcePopupParentAsOffsetParent,\n      minWidth,\n      width,\n      minHeight,\n      height,\n      x,\n      y\n    } = this.config;\n    if (!this.offsetParent) {\n      this.setOffsetParent();\n    }\n    let computedMinHeight = 0;\n    let computedMinWidth = 0;\n    const isElementVisible = _isVisible(this.element);\n    if (isElementVisible) {\n      const boundaryEl = this.findBoundaryElement();\n      const offsetParentComputedStyles = window.getComputedStyle(boundaryEl);\n      if (offsetParentComputedStyles.minWidth != null) {\n        const paddingWidth = boundaryEl.offsetWidth - this.element.offsetWidth;\n        computedMinWidth = parseInt(offsetParentComputedStyles.minWidth, 10) - paddingWidth;\n      }\n      if (offsetParentComputedStyles.minHeight != null) {\n        const paddingHeight = boundaryEl.offsetHeight - this.element.offsetHeight;\n        computedMinHeight = parseInt(offsetParentComputedStyles.minHeight, 10) - paddingHeight;\n      }\n    }\n    this.minHeight = minHeight || computedMinHeight;\n    this.minWidth = minWidth || computedMinWidth;\n    if (width) {\n      this.setWidth(width);\n    }\n    if (height) {\n      this.setHeight(height);\n    }\n    if (!width || !height) {\n      this.refreshSize();\n    }\n    if (centered) {\n      this.center(postProcessCallback);\n    } else if (x || y) {\n      this.offsetElement(x, y, postProcessCallback);\n    } else if (isElementVisible && forcePopupParentAsOffsetParent) {\n      let boundaryEl = this.boundaryEl;\n      let initialisedDuringPositioning = true;\n      if (!boundaryEl) {\n        boundaryEl = this.findBoundaryElement();\n        initialisedDuringPositioning = false;\n      }\n      if (boundaryEl) {\n        const top = parseFloat(boundaryEl.style.top);\n        const left = parseFloat(boundaryEl.style.left);\n        if (initialisedDuringPositioning) {\n          this.offsetElement(isNaN(left) ? 0 : left, isNaN(top) ? 0 : top, postProcessCallback);\n        } else {\n          this.setPosition(left, top);\n        }\n      }\n    }\n    this.positioned = !!this.offsetParent;\n  }\n  isPositioned() {\n    return this.positioned;\n  }\n  getPosition() {\n    return this.position;\n  }\n  setMovable(movable, moveElement) {\n    if (!this.config.popup || movable === this.movable) {\n      return;\n    }\n    this.movable = movable;\n    const params = this.moveElementDragListener || {\n      eElement: moveElement,\n      onDragStart: this.onMoveStart.bind(this),\n      onDragging: this.onMove.bind(this),\n      onDragStop: this.onMoveEnd.bind(this)\n    };\n    if (movable) {\n      this.dragSvc?.addDragSource(params);\n      this.moveElementDragListener = params;\n    } else {\n      this.dragSvc?.removeDragSource(params);\n      this.moveElementDragListener = void 0;\n    }\n  }\n  setResizable(resizable) {\n    this.clearResizeListeners();\n    if (resizable) {\n      this.addResizers();\n    } else {\n      this.removeResizers();\n    }\n    if (typeof resizable === \"boolean\") {\n      if (resizable === false) {\n        return;\n      }\n      resizable = {\n        topLeft: resizable,\n        top: resizable,\n        topRight: resizable,\n        right: resizable,\n        bottomRight: resizable,\n        bottom: resizable,\n        bottomLeft: resizable,\n        left: resizable\n      };\n    }\n    Object.keys(resizable).forEach(side => {\n      const resizableStructure = resizable;\n      const isSideResizable = !!resizableStructure[side];\n      const resizerEl = this.getResizerElement(side);\n      const params = {\n        dragStartPixels: 0,\n        eElement: resizerEl,\n        onDragStart: e => this.onResizeStart(e, side),\n        onDragging: this.onResize.bind(this),\n        onDragStop: e => this.onResizeEnd(e, side)\n      };\n      if (isSideResizable || !this.isAlive() && !isSideResizable) {\n        if (isSideResizable) {\n          this.dragSvc?.addDragSource(params);\n          this.resizeListeners.push(params);\n          resizerEl.style.pointerEvents = \"all\";\n        } else {\n          resizerEl.style.pointerEvents = \"none\";\n        }\n        this.resizable[side] = isSideResizable;\n      }\n    });\n  }\n  removeSizeFromEl() {\n    this.element.style.removeProperty(\"height\");\n    this.element.style.removeProperty(\"width\");\n    this.element.style.removeProperty(\"flex\");\n  }\n  restoreLastSize() {\n    this.element.style.flex = \"0 0 auto\";\n    const {\n      height,\n      width\n    } = this.lastSize;\n    if (width !== -1) {\n      this.element.style.width = `${width}px`;\n    }\n    if (height !== -1) {\n      this.element.style.height = `${height}px`;\n    }\n  }\n  getHeight() {\n    return this.element.offsetHeight;\n  }\n  setHeight(height) {\n    const {\n      popup\n    } = this.config;\n    const eGui = this.element;\n    let isPercent = false;\n    if (typeof height === \"string\" && height.indexOf(\"%\") !== -1) {\n      _setFixedHeight(eGui, height);\n      height = _getAbsoluteHeight(eGui);\n      isPercent = true;\n    } else {\n      height = Math.max(this.minHeight, height);\n      if (this.positioned) {\n        const availableHeight = this.getAvailableHeight();\n        if (availableHeight && height > availableHeight) {\n          height = availableHeight;\n        }\n      }\n    }\n    if (this.getHeight() === height) {\n      return;\n    }\n    if (!isPercent) {\n      if (popup) {\n        _setFixedHeight(eGui, height);\n      } else {\n        eGui.style.height = `${height}px`;\n        eGui.style.flex = \"0 0 auto\";\n        this.lastSize.height = typeof height === \"number\" ? height : parseFloat(height);\n      }\n    } else {\n      eGui.style.maxHeight = \"unset\";\n      eGui.style.minHeight = \"unset\";\n    }\n  }\n  getAvailableHeight() {\n    const {\n      popup,\n      forcePopupParentAsOffsetParent\n    } = this.config;\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    const {\n      clientHeight\n    } = this.offsetParent;\n    if (!clientHeight) {\n      return null;\n    }\n    const elRect = this.element.getBoundingClientRect();\n    const offsetParentRect = this.offsetParent.getBoundingClientRect();\n    const yPosition = popup ? this.position.y : elRect.top;\n    const parentTop = popup ? 0 : offsetParentRect.top;\n    let additionalHeight = 0;\n    if (forcePopupParentAsOffsetParent) {\n      const parentEl = this.element.parentElement;\n      if (parentEl) {\n        const {\n          bottom\n        } = parentEl.getBoundingClientRect();\n        additionalHeight = bottom - elRect.bottom;\n      }\n    }\n    const availableHeight = clientHeight + parentTop - yPosition - additionalHeight;\n    return availableHeight;\n  }\n  getWidth() {\n    return this.element.offsetWidth;\n  }\n  setWidth(width) {\n    const eGui = this.element;\n    const {\n      popup\n    } = this.config;\n    let isPercent = false;\n    if (typeof width === \"string\" && width.indexOf(\"%\") !== -1) {\n      _setFixedWidth(eGui, width);\n      width = _getAbsoluteWidth(eGui);\n      isPercent = true;\n    } else if (this.positioned) {\n      width = Math.max(this.minWidth, width);\n      const {\n        clientWidth\n      } = this.offsetParent;\n      const xPosition = popup ? this.position.x : this.element.getBoundingClientRect().left;\n      if (clientWidth && width + xPosition > clientWidth) {\n        width = clientWidth - xPosition;\n      }\n    }\n    if (this.getWidth() === width) {\n      return;\n    }\n    if (!isPercent) {\n      if (this.config.popup) {\n        _setFixedWidth(eGui, width);\n      } else {\n        eGui.style.width = `${width}px`;\n        eGui.style.flex = \" unset\";\n        this.lastSize.width = typeof width === \"number\" ? width : parseFloat(width);\n      }\n    } else {\n      eGui.style.maxWidth = \"unset\";\n      eGui.style.minWidth = \"unset\";\n    }\n  }\n  offsetElement(x = 0, y = 0, postProcessCallback) {\n    const {\n      forcePopupParentAsOffsetParent\n    } = this.config;\n    const ePopup = forcePopupParentAsOffsetParent ? this.boundaryEl : this.element;\n    if (!ePopup) {\n      return;\n    }\n    this.popupSvc?.positionPopup({\n      ePopup,\n      keepWithinBounds: true,\n      skipObserver: this.movable || this.isResizable(),\n      updatePosition: () => ({\n        x,\n        y\n      }),\n      postProcessCallback\n    });\n    this.setPosition(parseFloat(ePopup.style.left), parseFloat(ePopup.style.top));\n  }\n  constrainSizeToAvailableHeight(constrain) {\n    if (!this.config.forcePopupParentAsOffsetParent) {\n      return;\n    }\n    const applyMaxHeightToElement = () => {\n      const availableHeight = this.getAvailableHeight();\n      this.element.style.setProperty(\"max-height\", `${availableHeight}px`);\n    };\n    if (constrain && this.popupSvc) {\n      this.resizeObserverSubscriber?.();\n      this.resizeObserverSubscriber = _observeResize(this.beans, this.popupSvc?.getPopupParent(), applyMaxHeightToElement);\n    } else {\n      this.element.style.removeProperty(\"max-height\");\n      if (this.resizeObserverSubscriber) {\n        this.resizeObserverSubscriber();\n        this.resizeObserverSubscriber = void 0;\n      }\n    }\n  }\n  setPosition(x, y) {\n    this.position.x = x;\n    this.position.y = y;\n  }\n  updateDragStartPosition(x, y) {\n    this.dragStartPosition = {\n      x,\n      y\n    };\n  }\n  calculateMouseMovement(params) {\n    const {\n      e,\n      isLeft,\n      isTop,\n      anywhereWithin,\n      topBuffer\n    } = params;\n    const xDiff = e.clientX - this.dragStartPosition.x;\n    const yDiff = e.clientY - this.dragStartPosition.y;\n    const movementX = this.shouldSkipX(e, !!isLeft, !!anywhereWithin, xDiff) ? 0 : xDiff;\n    const movementY = this.shouldSkipY(e, !!isTop, topBuffer, yDiff) ? 0 : yDiff;\n    return {\n      movementX,\n      movementY\n    };\n  }\n  shouldSkipX(e, isLeft, anywhereWithin, diff) {\n    const elRect = this.element.getBoundingClientRect();\n    const parentRect = this.offsetParent.getBoundingClientRect();\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\n    const xPosition = this.config.popup ? this.position.x : elRect.left;\n    let skipX = xPosition <= 0 && parentRect.left >= e.clientX || parentRect.right <= e.clientX && parentRect.right <= boundaryElRect.right;\n    if (skipX) {\n      return true;\n    }\n    if (isLeft) {\n      skipX =\n      // skip if we are moving to the left and the cursor\n      // is positioned to the right of the left side anchor\n      diff < 0 && e.clientX > xPosition + parentRect.left ||\n      // skip if we are moving to the right and the cursor\n      // is positioned to the left of the dialog\n      diff > 0 && e.clientX < xPosition + parentRect.left;\n    } else {\n      if (anywhereWithin) {\n        skipX = diff < 0 && e.clientX > boundaryElRect.right || diff > 0 && e.clientX < xPosition + parentRect.left;\n      } else {\n        skipX =\n        // if the movement is bound to the right side of the dialog\n        // we skip if we are moving to the left and the cursor\n        // is to the right of the dialog\n        diff < 0 && e.clientX > boundaryElRect.right ||\n        // or skip if we are moving to the right and the cursor\n        // is to the left of the right side anchor\n        diff > 0 && e.clientX < boundaryElRect.right;\n      }\n    }\n    return skipX;\n  }\n  shouldSkipY(e, isTop, topBuffer = 0, diff) {\n    const elRect = this.element.getBoundingClientRect();\n    const parentRect = this.offsetParent.getBoundingClientRect();\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\n    const yPosition = this.config.popup ? this.position.y : elRect.top;\n    let skipY = yPosition <= 0 && parentRect.top >= e.clientY || parentRect.bottom <= e.clientY && parentRect.bottom <= boundaryElRect.bottom;\n    if (skipY) {\n      return true;\n    }\n    if (isTop) {\n      skipY =\n      // skip if we are moving to towards top and the cursor is\n      // below the top anchor + topBuffer\n      // note: topBuffer is used when moving the dialog using the title bar\n      diff < 0 && e.clientY > yPosition + parentRect.top + topBuffer ||\n      // skip if we are moving to the bottom and the cursor is\n      // above the top anchor\n      diff > 0 && e.clientY < yPosition + parentRect.top;\n    } else {\n      skipY =\n      // skip if we are moving towards the top and the cursor\n      // is below the bottom anchor\n      diff < 0 && e.clientY > boundaryElRect.bottom ||\n      // skip if we are moving towards the bottom and the cursor\n      // is above the bottom anchor\n      diff > 0 && e.clientY < boundaryElRect.bottom;\n    }\n    return skipY;\n  }\n  createResizeMap() {\n    const getElement2 = ref => ({\n      element: this.element.querySelector(`[data-ref=${ref}Resizer]`)\n    });\n    this.resizerMap = {\n      topLeft: getElement2(\"eTopLeft\"),\n      top: getElement2(\"eTop\"),\n      topRight: getElement2(\"eTopRight\"),\n      right: getElement2(\"eRight\"),\n      bottomRight: getElement2(\"eBottomRight\"),\n      bottom: getElement2(\"eBottom\"),\n      bottomLeft: getElement2(\"eBottomLeft\"),\n      left: getElement2(\"eLeft\")\n    };\n  }\n  addResizers() {\n    if (this.resizersAdded) {\n      return;\n    }\n    const eGui = this.element;\n    if (!eGui) {\n      return;\n    }\n    eGui.appendChild(_createElement(RESIZE_TEMPLATE));\n    this.createResizeMap();\n    this.resizersAdded = true;\n  }\n  removeResizers() {\n    this.resizerMap = void 0;\n    const resizerEl = this.element.querySelector(`.${RESIZE_CONTAINER_STYLE}`);\n    if (resizerEl) {\n      this.element.removeChild(resizerEl);\n    }\n    this.resizersAdded = false;\n  }\n  getResizerElement(side) {\n    return this.resizerMap[side].element;\n  }\n  onResizeStart(e, side) {\n    this.boundaryEl = this.findBoundaryElement();\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    this.currentResizer = {\n      isTop: !!side.match(/top/i),\n      isRight: !!side.match(/right/i),\n      isBottom: !!side.match(/bottom/i),\n      isLeft: !!side.match(/left/i)\n    };\n    this.element.classList.add(\"ag-resizing\");\n    this.resizerMap[side].element.classList.add(\"ag-active\");\n    const {\n      popup,\n      forcePopupParentAsOffsetParent\n    } = this.config;\n    if (!popup && !forcePopupParentAsOffsetParent) {\n      this.applySizeToSiblings(this.currentResizer.isBottom || this.currentResizer.isTop);\n    }\n    this.isResizing = true;\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  getSiblings() {\n    const element = this.element;\n    const parent = element.parentElement;\n    if (!parent) {\n      return null;\n    }\n    return Array.prototype.slice.call(parent.children).filter(el => !el.classList.contains(\"ag-hidden\"));\n  }\n  getMinSizeOfSiblings() {\n    const siblings = this.getSiblings() || [];\n    let height = 0;\n    let width = 0;\n    for (let i = 0; i < siblings.length; i++) {\n      const currentEl = siblings[i];\n      const isFlex = !!currentEl.style.flex && currentEl.style.flex !== \"0 0 auto\";\n      if (currentEl === this.element) {\n        continue;\n      }\n      let nextHeight = this.minHeight || 0;\n      let nextWidth = this.minWidth || 0;\n      if (isFlex) {\n        const computedStyle = window.getComputedStyle(currentEl);\n        if (computedStyle.minHeight) {\n          nextHeight = parseInt(computedStyle.minHeight, 10);\n        }\n        if (computedStyle.minWidth) {\n          nextWidth = parseInt(computedStyle.minWidth, 10);\n        }\n      } else {\n        nextHeight = currentEl.offsetHeight;\n        nextWidth = currentEl.offsetWidth;\n      }\n      height += nextHeight;\n      width += nextWidth;\n    }\n    return {\n      height,\n      width\n    };\n  }\n  applySizeToSiblings(vertical) {\n    let containerToFlex = null;\n    const siblings = this.getSiblings();\n    if (!siblings) {\n      return;\n    }\n    for (let i = 0; i < siblings.length; i++) {\n      const el = siblings[i];\n      if (el === containerToFlex) {\n        continue;\n      }\n      if (vertical) {\n        el.style.height = `${el.offsetHeight}px`;\n      } else {\n        el.style.width = `${el.offsetWidth}px`;\n      }\n      el.style.flex = \"0 0 auto\";\n      if (el === this.element) {\n        containerToFlex = siblings[i + 1];\n      }\n    }\n    if (containerToFlex) {\n      containerToFlex.style.removeProperty(\"height\");\n      containerToFlex.style.removeProperty(\"min-height\");\n      containerToFlex.style.removeProperty(\"max-height\");\n      containerToFlex.style.flex = \"1 1 auto\";\n    }\n  }\n  isResizable() {\n    return Object.values(this.resizable).some(value => value);\n  }\n  onResize(e) {\n    if (!this.isResizing || !this.currentResizer) {\n      return;\n    }\n    const {\n      popup,\n      forcePopupParentAsOffsetParent\n    } = this.config;\n    const {\n      isTop,\n      isRight,\n      isBottom,\n      isLeft\n    } = this.currentResizer;\n    const isHorizontal = isRight || isLeft;\n    const isVertical = isBottom || isTop;\n    const {\n      movementX,\n      movementY\n    } = this.calculateMouseMovement({\n      e,\n      isLeft,\n      isTop\n    });\n    const xPosition = this.position.x;\n    const yPosition = this.position.y;\n    let offsetLeft = 0;\n    let offsetTop = 0;\n    if (isHorizontal && movementX) {\n      const direction = isLeft ? -1 : 1;\n      const oldWidth = this.getWidth();\n      const newWidth = oldWidth + movementX * direction;\n      let skipWidth = false;\n      if (isLeft) {\n        offsetLeft = oldWidth - newWidth;\n        if (xPosition + offsetLeft <= 0 || newWidth <= this.minWidth) {\n          skipWidth = true;\n          offsetLeft = 0;\n        }\n      }\n      if (!skipWidth) {\n        this.setWidth(newWidth);\n      }\n    }\n    if (isVertical && movementY) {\n      const direction = isTop ? -1 : 1;\n      const oldHeight = this.getHeight();\n      const newHeight = oldHeight + movementY * direction;\n      let skipHeight = false;\n      if (isTop) {\n        offsetTop = oldHeight - newHeight;\n        if (yPosition + offsetTop <= 0 || newHeight <= this.minHeight) {\n          skipHeight = true;\n          offsetTop = 0;\n        }\n      } else {\n        if (!this.config.popup && !this.config.forcePopupParentAsOffsetParent && oldHeight < newHeight && this.getMinSizeOfSiblings().height + newHeight > this.element.parentElement.offsetHeight) {\n          skipHeight = true;\n        }\n      }\n      if (!skipHeight) {\n        this.setHeight(newHeight);\n      }\n    }\n    this.updateDragStartPosition(e.clientX, e.clientY);\n    if ((popup || forcePopupParentAsOffsetParent) && offsetLeft || offsetTop) {\n      this.offsetElement(xPosition + offsetLeft, yPosition + offsetTop);\n    }\n  }\n  onResizeEnd(e, side) {\n    this.isResizing = false;\n    this.currentResizer = null;\n    this.boundaryEl = null;\n    this.element.classList.remove(\"ag-resizing\");\n    this.resizerMap[side].element.classList.remove(\"ag-active\");\n    this.dispatchLocalEvent({\n      type: \"resize\"\n    });\n  }\n  refreshSize() {\n    const eGui = this.element;\n    if (this.config.popup) {\n      if (!this.config.width) {\n        this.setWidth(eGui.offsetWidth);\n      }\n      if (!this.config.height) {\n        this.setHeight(eGui.offsetHeight);\n      }\n    }\n  }\n  onMoveStart(e) {\n    this.boundaryEl = this.findBoundaryElement();\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    this.isMoving = true;\n    this.element.classList.add(\"ag-moving\");\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  onMove(e) {\n    if (!this.isMoving) {\n      return;\n    }\n    const {\n      x,\n      y\n    } = this.position;\n    let topBuffer;\n    if (this.config.calculateTopBuffer) {\n      topBuffer = this.config.calculateTopBuffer();\n    }\n    const {\n      movementX,\n      movementY\n    } = this.calculateMouseMovement({\n      e,\n      isTop: true,\n      anywhereWithin: true,\n      topBuffer\n    });\n    this.offsetElement(x + movementX, y + movementY);\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  onMoveEnd() {\n    this.isMoving = false;\n    this.boundaryEl = null;\n    this.element.classList.remove(\"ag-moving\");\n  }\n  setOffsetParent() {\n    if (this.config.forcePopupParentAsOffsetParent && this.popupSvc) {\n      this.offsetParent = this.popupSvc.getPopupParent();\n    } else {\n      this.offsetParent = this.element.offsetParent;\n    }\n  }\n  findBoundaryElement() {\n    let el = this.element;\n    while (el) {\n      if (window.getComputedStyle(el).position !== \"static\") {\n        return el;\n      }\n      el = el.parentElement;\n    }\n    return this.element;\n  }\n  clearResizeListeners() {\n    while (this.resizeListeners.length) {\n      const params = this.resizeListeners.pop();\n      this.dragSvc?.removeDragSource(params);\n    }\n  }\n  destroy() {\n    super.destroy();\n    if (this.moveElementDragListener) {\n      this.dragSvc?.removeDragSource(this.moveElementDragListener);\n    }\n    this.constrainSizeToAvailableHeight(false);\n    this.clearResizeListeners();\n    this.removeResizers();\n  }\n};\n\n// packages/ag-grid-community/src/widgets/managedFocusFeature.ts\nvar FOCUS_MANAGED_CLASS = \"ag-focus-managed\";\nvar ManagedFocusFeature = class extends BeanStub {\n  constructor(eFocusable, callbacks = {}) {\n    super();\n    this.eFocusable = eFocusable;\n    this.callbacks = callbacks;\n    this.callbacks = {\n      shouldStopEventPropagation: () => false,\n      onTabKeyDown: e => {\n        if (e.defaultPrevented) {\n          return;\n        }\n        const nextRoot = _findNextFocusableElement(this.beans, this.eFocusable, false, e.shiftKey);\n        if (!nextRoot) {\n          return;\n        }\n        nextRoot.focus();\n        e.preventDefault();\n      },\n      ...callbacks\n    };\n  }\n  postConstruct() {\n    const {\n      eFocusable,\n      callbacks: {\n        onFocusIn,\n        onFocusOut\n      }\n    } = this;\n    eFocusable.classList.add(FOCUS_MANAGED_CLASS);\n    this.addKeyDownListeners(eFocusable);\n    if (onFocusIn) {\n      this.addManagedElementListeners(eFocusable, {\n        focusin: onFocusIn\n      });\n    }\n    if (onFocusOut) {\n      this.addManagedElementListeners(eFocusable, {\n        focusout: onFocusOut\n      });\n    }\n  }\n  addKeyDownListeners(eGui) {\n    this.addManagedElementListeners(eGui, {\n      keydown: e => {\n        if (e.defaultPrevented || _isStopPropagationForAgGrid(e)) {\n          return;\n        }\n        const {\n          callbacks\n        } = this;\n        if (callbacks.shouldStopEventPropagation(e)) {\n          _stopPropagationForAgGrid(e);\n          return;\n        }\n        if (e.key === KeyCode.TAB) {\n          callbacks.onTabKeyDown(e);\n        } else if (callbacks.handleKeyDown) {\n          callbacks.handleKeyDown(e);\n        }\n      }\n    });\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/providedFilter.ts\nvar ProvidedFilter = class extends Component {\n  constructor(filterNameKey, cssIdentifier) {\n    super();\n    this.filterNameKey = filterNameKey;\n    this.cssIdentifier = cssIdentifier;\n    this.applyActive = false;\n    this.debouncePending = false;\n    // subclasses can override this to provide alternative debounce defaults\n    this.defaultDebounceMs = 0;\n  }\n  postConstruct() {\n    const element = {\n      tag: \"div\",\n      cls: `ag-filter-body-wrapper ag-${this.cssIdentifier}-body-wrapper`,\n      children: [this.createBodyTemplate()]\n    };\n    this.setTemplate(element, this.getAgComponents());\n    this.createManagedBean(new ManagedFocusFeature(this.getFocusableElement(), {\n      handleKeyDown: this.handleKeyDown.bind(this)\n    }));\n    this.positionableFeature = this.createBean(new PositionableFeature(this.getPositionableElement(), {\n      forcePopupParentAsOffsetParent: true\n    }));\n  }\n  handleKeyDown(_e) {}\n  init(legacyParams) {\n    const params = legacyParams;\n    this.setParams(params);\n    this.setModelIntoUi(params.state.model, true).then(() => this.updateUiVisibility());\n  }\n  refresh(legacyNewParams) {\n    const newParams = legacyNewParams;\n    const oldParams = this.params;\n    this.params = newParams;\n    const source = newParams.source;\n    if (source === \"colDef\") {\n      this.updateParams(newParams, oldParams);\n    }\n    const newState = newParams.state;\n    const oldState = this.state;\n    this.state = newState;\n    if (newState.model !== oldState.model || newState.state !== oldState.state) {\n      this.setModelIntoUi(newState.model);\n    }\n    return true;\n  }\n  /** Called on init only. Override in subclasses */\n  setParams(params) {\n    this.params = params;\n    this.state = params.state;\n    this.commonUpdateParams(params);\n  }\n  /** Called on refresh only. Override in subclasses */\n  updateParams(newParams, oldParams) {\n    this.commonUpdateParams(newParams, oldParams);\n  }\n  commonUpdateParams(newParams, _oldParams) {\n    this.applyActive = _isUseApplyButton(newParams);\n    this.setupApplyDebounced();\n  }\n  /**\n   * @deprecated v34 Use the same method on the filter handler (`api.getColumnFilterHandler()`) instead.\n   */\n  doesFilterPass(params) {\n    _warn(283);\n    const {\n      getHandler,\n      model,\n      column\n    } = this.params;\n    return getHandler().doesFilterPass({\n      ...params,\n      model,\n      handlerParams: this.beans.colFilter.getHandlerParams(column)\n    });\n  }\n  getFilterTitle() {\n    return this.translate(this.filterNameKey);\n  }\n  /**\n   * @deprecated v34 Filters are active when they have a model. Use `api.getColumnFilterModel()` instead.\n   */\n  isFilterActive() {\n    _warn(284);\n    return this.params.model != null;\n  }\n  setupApplyDebounced() {\n    const debounceMs = getDebounceMs(this.params, this.defaultDebounceMs);\n    const debounceFunc = _debounce(this, this.checkApplyDebounce.bind(this), debounceMs);\n    this.applyDebounced = () => {\n      this.debouncePending = true;\n      debounceFunc();\n    };\n  }\n  checkApplyDebounce() {\n    if (this.debouncePending) {\n      this.debouncePending = false;\n      this.doApplyModel();\n    }\n  }\n  /**\n   * @deprecated v34 Use (`api.getColumnFilterModel()`) instead.\n   */\n  getModel() {\n    _warn(285);\n    return this.params.model;\n  }\n  /**\n   * @deprecated v34 Use (`api.setColumnFilterModel()`) instead.\n   */\n  setModel(model) {\n    _warn(286);\n    const {\n      beans,\n      params\n    } = this;\n    return beans.colFilter.setModelForColumnLegacy(params.column, model);\n  }\n  /**\n   * Applies changes made in the UI to the filter, and returns true if the model has changed.\n   */\n  applyModel(_source = \"api\") {\n    return this.doApplyModel();\n  }\n  canApply(_model) {\n    return true;\n  }\n  doApplyModel(additionalEventAttributes) {\n    const {\n      params,\n      state\n    } = this;\n    const changed = !this.areModelsEqual(params.model, state.model);\n    if (changed) {\n      params.onAction(\"apply\", additionalEventAttributes);\n    }\n    return changed;\n  }\n  /**\n   * @deprecated v34 Internal method - should only be called by the grid.\n   */\n  onNewRowsLoaded() {}\n  /**\n   * By default, if the change came from a floating filter it will be applied immediately, otherwise if there is no\n   * apply button it will be applied after a debounce, otherwise it will not be applied at all. This behaviour can\n   * be adjusted by using the apply parameter.\n   */\n  onUiChanged(apply, afterFloatingFilter = false) {\n    this.updateUiVisibility();\n    const model = this.getModelFromUi();\n    const state = {\n      model,\n      state: this.getState(),\n      valid: this.canApply(model)\n    };\n    this.state = state;\n    const params = this.params;\n    params.onStateChange(state);\n    params.onUiChange(this.getUiChangeEventParams());\n    if (!this.gos.get(\"enableFilterHandlers\")) {\n      this.eventSvc.dispatchEvent({\n        type: \"filterModified\",\n        column: params.column,\n        filterInstance: this\n      });\n    }\n    apply ?? (apply = this.applyActive ? void 0 : \"debounce\");\n    if (apply === \"immediately\") {\n      this.doApplyModel({\n        afterFloatingFilter,\n        afterDataChange: false\n      });\n    } else if (apply === \"debounce\") {\n      this.applyDebounced();\n    }\n  }\n  getState() {\n    return void 0;\n  }\n  getUiChangeEventParams() {\n    return void 0;\n  }\n  afterGuiAttached(params) {\n    this.lastContainerType = params?.container;\n    this.refreshFilterResizer(params?.container);\n  }\n  refreshFilterResizer(containerType) {\n    const {\n      positionableFeature,\n      gos\n    } = this;\n    if (!positionableFeature) {\n      return;\n    }\n    const isResizable = containerType === \"floatingFilter\" || containerType === \"columnFilter\";\n    if (isResizable) {\n      positionableFeature.restoreLastSize();\n      positionableFeature.setResizable(gos.get(\"enableRtl\") ? {\n        bottom: true,\n        bottomLeft: true,\n        left: true\n      } : {\n        bottom: true,\n        bottomRight: true,\n        right: true\n      });\n    } else {\n      positionableFeature.removeSizeFromEl();\n      positionableFeature.setResizable(false);\n    }\n    positionableFeature.constrainSizeToAvailableHeight(isResizable);\n  }\n  afterGuiDetached() {\n    this.checkApplyDebounce();\n    this.positionableFeature?.constrainSizeToAvailableHeight(false);\n  }\n  destroy() {\n    this.positionableFeature = this.destroyBean(this.positionableFeature);\n    super.destroy();\n  }\n  translate(key) {\n    return translateForFilter(this, key);\n  }\n  // override to control positionable feature\n  getPositionableElement() {\n    return this.getGui();\n  }\n  areModelsEqual(a, b) {\n    if (a === b || a == null && b == null) {\n      return true;\n    }\n    if (a == null || b == null) {\n      return false;\n    }\n    return this.areNonNullModelsEqual(a, b);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/iSimpleFilter.ts\nfunction isCombinedFilterModel(model) {\n  return !!model.operator;\n}\n\n// packages/ag-grid-community/src/filter/floating/floatingFilterMapper.ts\nfunction _getDefaultFloatingFilterType(frameworkOverrides, def, getFromDefault) {\n  if (def == null) {\n    return null;\n  }\n  let defaultFloatingFilterType = null;\n  const {\n    compName,\n    jsComp,\n    fwComp\n  } = _getFilterCompKeys(frameworkOverrides, def);\n  if (compName) {\n    const floatingFilterTypeMap = {\n      agSetColumnFilter: \"agSetColumnFloatingFilter\",\n      agMultiColumnFilter: \"agMultiColumnFloatingFilter\",\n      agGroupColumnFilter: \"agGroupColumnFloatingFilter\",\n      agNumberColumnFilter: \"agNumberColumnFloatingFilter\",\n      agDateColumnFilter: \"agDateColumnFloatingFilter\",\n      agTextColumnFilter: \"agTextColumnFloatingFilter\"\n    };\n    defaultFloatingFilterType = floatingFilterTypeMap[compName];\n  } else {\n    const usingDefaultFilter = jsComp == null && fwComp == null && def.filter === true;\n    if (usingDefaultFilter) {\n      defaultFloatingFilterType = getFromDefault();\n    }\n  }\n  return defaultFloatingFilterType;\n}\n\n// packages/ag-grid-community/src/styling/layoutFeature.ts\nvar LayoutCssClasses = {\n  AUTO_HEIGHT: \"ag-layout-auto-height\",\n  NORMAL: \"ag-layout-normal\",\n  PRINT: \"ag-layout-print\"\n};\nvar LayoutFeature = class extends BeanStub {\n  constructor(view) {\n    super();\n    this.view = view;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"domLayout\", this.updateLayoutClasses.bind(this));\n    this.updateLayoutClasses();\n  }\n  updateLayoutClasses() {\n    const domLayout = this.gos.get(\"domLayout\");\n    const params = {\n      autoHeight: domLayout === \"autoHeight\",\n      normal: domLayout === \"normal\",\n      print: domLayout === \"print\"\n    };\n    const cssClass = params.autoHeight ? LayoutCssClasses.AUTO_HEIGHT : params.print ? LayoutCssClasses.PRINT : LayoutCssClasses.NORMAL;\n    this.view.updateLayoutClasses(cssClass, params);\n  }\n};\n\n// packages/ag-grid-community/src/constants/direction.ts\nvar Direction = /* @__PURE__ */(Direction2 => {\n  Direction2[Direction2[\"Vertical\"] = 0] = \"Vertical\";\n  Direction2[Direction2[\"Horizontal\"] = 1] = \"Horizontal\";\n  return Direction2;\n})(Direction || {});\n\n// packages/ag-grid-community/src/gridBodyComp/gridBodyScrollFeature.ts\nvar VIEWPORT = \"Viewport\";\nvar FAKE_V_SCROLLBAR = \"fakeVScrollComp\";\nvar HORIZONTAL_SOURCES = [\"fakeHScrollComp\", \"centerHeader\", \"topCenter\", \"bottomCenter\", \"stickyTopCenter\", \"stickyBottomCenter\"];\nvar SCROLL_DEBOUNCE_TIMEOUT = 100;\nvar SCROLL_END_TIMEOUT = 150;\nvar GridBodyScrollFeature = class extends BeanStub {\n  constructor(eBodyViewport) {\n    super();\n    // listeners for when ensureIndexVisible is waiting for SSRM data to load\n    this.clearRetryListenerFncs = [];\n    this.lastScrollSource = [null, null];\n    this.scrollLeft = -1;\n    this.nextScrollTop = -1;\n    this.scrollTop = -1;\n    // Used to provide approximate values of scrollTop and offsetHeight\n    // without forcing the browser to recalculate styles.\n    this.lastOffsetHeight = -1;\n    this.lastScrollTop = -1;\n    this.lastIsHorizontalScrollShowing = false;\n    this.scrollTimer = 0;\n    this.isScrollActive = false;\n    this.isVerticalPositionInvalidated = true;\n    this.isHorizontalPositionInvalidated = true;\n    this.eBodyViewport = eBodyViewport;\n    this.resetLastHScrollDebounced = _debounce(this, () => this.lastScrollSource[1 /* Horizontal */] = null, SCROLL_END_TIMEOUT);\n    this.resetLastVScrollDebounced = _debounce(this, () => this.lastScrollSource[0 /* Vertical */] = null, SCROLL_END_TIMEOUT);\n  }\n  wireBeans(beans) {\n    this.ctrlsSvc = beans.ctrlsSvc;\n    this.animationFrameSvc = beans.animationFrameSvc;\n    this.visibleCols = beans.visibleCols;\n  }\n  destroy() {\n    super.destroy();\n    this.clearRetryListenerFncs = [];\n    window.clearTimeout(this.scrollTimer);\n  }\n  postConstruct() {\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    const invalidateVerticalScroll = this.invalidateVerticalScroll.bind(this);\n    const invalidateHorizontalScroll = this.invalidateHorizontalScroll.bind(this);\n    this.addManagedEventListeners({\n      displayedColumnsWidthChanged: this.onDisplayedColumnsWidthChanged.bind(this),\n      gridSizeChanged: invalidateVerticalScroll,\n      // We only invalidate horizontal scrolling when the viewport switches\n      // between scrollable and non-scrollable, avoiding unnecessary\n      // invalidation on every gridSizeChanged event. If more properties\n      // require invalidation, read/write DOM cycles may be needed.\n      scrollGapChanged: invalidateHorizontalScroll\n    });\n    this.addManagedElementListeners(this.eBodyViewport, {\n      scroll: invalidateVerticalScroll\n    });\n    this.ctrlsSvc.whenReady(this, p => {\n      this.centerRowsCtrl = p.center;\n      this.onDisplayedColumnsWidthChanged();\n      this.addScrollListener();\n    });\n  }\n  invalidateHorizontalScroll() {\n    this.isHorizontalPositionInvalidated = true;\n  }\n  invalidateVerticalScroll() {\n    this.isVerticalPositionInvalidated = true;\n  }\n  addScrollListener() {\n    this.addHorizontalScrollListeners();\n    this.addVerticalScrollListeners();\n  }\n  addHorizontalScrollListeners() {\n    this.addManagedElementListeners(this.centerRowsCtrl.eViewport, {\n      scroll: this.onHScroll.bind(this, VIEWPORT)\n    });\n    for (const source of HORIZONTAL_SOURCES) {\n      const scrollPartner = this.ctrlsSvc.get(source);\n      this.registerScrollPartner(scrollPartner, this.onHScroll.bind(this, source));\n    }\n  }\n  addVerticalScrollListeners() {\n    const fakeVScrollComp = this.ctrlsSvc.get(\"fakeVScrollComp\");\n    const isDebounce = this.gos.get(\"debounceVerticalScrollbar\");\n    const onVScroll = isDebounce ? _debounce(this, this.onVScroll.bind(this, VIEWPORT), SCROLL_DEBOUNCE_TIMEOUT) : this.onVScroll.bind(this, VIEWPORT);\n    const onFakeVScroll = isDebounce ? _debounce(this, this.onVScroll.bind(this, FAKE_V_SCROLLBAR), SCROLL_DEBOUNCE_TIMEOUT) : this.onVScroll.bind(this, FAKE_V_SCROLLBAR);\n    this.addManagedElementListeners(this.eBodyViewport, {\n      scroll: onVScroll\n    });\n    this.registerScrollPartner(fakeVScrollComp, onFakeVScroll);\n  }\n  registerScrollPartner(comp, callback) {\n    comp.onScrollCallback(callback);\n  }\n  onDisplayedColumnsWidthChanged() {\n    if (this.enableRtl) {\n      this.horizontallyScrollHeaderCenterAndFloatingCenter();\n    }\n  }\n  horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft) {\n    const notYetInitialised = this.centerRowsCtrl == null;\n    if (notYetInitialised) {\n      return;\n    }\n    if (scrollLeft === void 0) {\n      scrollLeft = this.centerRowsCtrl.getCenterViewportScrollLeft();\n    }\n    this.setScrollLeftForAllContainersExceptCurrent(Math.abs(scrollLeft));\n  }\n  setScrollLeftForAllContainersExceptCurrent(scrollLeft) {\n    for (const container of [...HORIZONTAL_SOURCES, VIEWPORT]) {\n      if (this.lastScrollSource[1 /* Horizontal */] === container) {\n        continue;\n      }\n      const viewport = this.getViewportForSource(container);\n      _setScrollLeft(viewport, scrollLeft, this.enableRtl);\n    }\n  }\n  getViewportForSource(source) {\n    if (source === VIEWPORT) {\n      return this.centerRowsCtrl.eViewport;\n    }\n    return this.ctrlsSvc.get(source).eViewport;\n  }\n  isControllingScroll(source, direction) {\n    if (this.lastScrollSource[direction] == null) {\n      if (direction === 0 /* Vertical */) {\n        this.lastScrollSource[0] = source;\n      } else {\n        this.lastScrollSource[1] = source;\n      }\n      return true;\n    }\n    return this.lastScrollSource[direction] === source;\n  }\n  onHScroll(source) {\n    if (!this.isControllingScroll(source, 1 /* Horizontal */)) {\n      return;\n    }\n    const centerContainerViewport = this.centerRowsCtrl.eViewport;\n    const {\n      scrollLeft\n    } = centerContainerViewport;\n    if (this.shouldBlockScrollUpdate(1 /* Horizontal */, scrollLeft, true)) {\n      return;\n    }\n    const newScrollLeft = _getScrollLeft(this.getViewportForSource(source), this.enableRtl);\n    this.doHorizontalScroll(newScrollLeft);\n    this.resetLastHScrollDebounced();\n  }\n  onVScroll(source) {\n    if (!this.isControllingScroll(source, 0 /* Vertical */)) {\n      return;\n    }\n    let scrollTop;\n    if (source === VIEWPORT) {\n      scrollTop = this.eBodyViewport.scrollTop;\n    } else {\n      scrollTop = this.ctrlsSvc.get(\"fakeVScrollComp\").getScrollPosition();\n    }\n    if (this.shouldBlockScrollUpdate(0 /* Vertical */, scrollTop, true)) {\n      return;\n    }\n    const {\n      animationFrameSvc\n    } = this;\n    animationFrameSvc?.setScrollTop(scrollTop);\n    this.nextScrollTop = scrollTop;\n    if (source === VIEWPORT) {\n      this.ctrlsSvc.get(\"fakeVScrollComp\").setScrollPosition(scrollTop);\n    } else {\n      this.eBodyViewport.scrollTop = scrollTop;\n    }\n    if (animationFrameSvc?.active) {\n      animationFrameSvc.schedule();\n    } else {\n      this.scrollGridIfNeeded(true);\n    }\n    this.resetLastVScrollDebounced();\n  }\n  doHorizontalScroll(scrollLeft) {\n    const fakeScrollLeft = this.ctrlsSvc.get(\"fakeHScrollComp\").getScrollPosition();\n    if (this.scrollLeft === scrollLeft && scrollLeft === fakeScrollLeft) {\n      return;\n    }\n    this.scrollLeft = scrollLeft;\n    this.fireScrollEvent(1 /* Horizontal */);\n    this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\n    this.centerRowsCtrl.onHorizontalViewportChanged(true);\n  }\n  isScrolling() {\n    return this.isScrollActive;\n  }\n  fireScrollEvent(direction) {\n    const bodyScrollEvent = {\n      type: \"bodyScroll\",\n      direction: direction === 1 /* Horizontal */ ? \"horizontal\" : \"vertical\",\n      left: this.scrollLeft,\n      top: this.scrollTop\n    };\n    this.isScrollActive = true;\n    this.eventSvc.dispatchEvent(bodyScrollEvent);\n    window.clearTimeout(this.scrollTimer);\n    this.scrollTimer = window.setTimeout(() => {\n      this.scrollTimer = 0;\n      this.isScrollActive = false;\n      this.eventSvc.dispatchEvent({\n        ...bodyScrollEvent,\n        type: \"bodyScrollEnd\"\n      });\n    }, SCROLL_END_TIMEOUT);\n  }\n  shouldBlockScrollUpdate(direction, scrollTo, touchOnly = false) {\n    if (touchOnly && !_isIOSUserAgent()) {\n      return false;\n    }\n    if (direction === 0 /* Vertical */) {\n      return this.shouldBlockVerticalScroll(scrollTo);\n    }\n    return this.shouldBlockHorizontalScroll(scrollTo);\n  }\n  shouldBlockVerticalScroll(scrollTo) {\n    const clientHeight = _getInnerHeight(this.eBodyViewport);\n    const {\n      scrollHeight\n    } = this.eBodyViewport;\n    if (scrollTo < 0 || scrollTo + clientHeight > scrollHeight) {\n      return true;\n    }\n    return false;\n  }\n  shouldBlockHorizontalScroll(scrollTo) {\n    const clientWidth = this.centerRowsCtrl.getCenterWidth();\n    const {\n      scrollWidth\n    } = this.centerRowsCtrl.eViewport;\n    if (this.enableRtl) {\n      if (scrollTo > 0) {\n        return true;\n      }\n    } else if (scrollTo < 0) {\n      return true;\n    }\n    if (Math.abs(scrollTo) + clientWidth > scrollWidth) {\n      return true;\n    }\n    return false;\n  }\n  redrawRowsAfterScroll() {\n    this.fireScrollEvent(0 /* Vertical */);\n  }\n  // this is to cater for AG-3274, where grid is removed from the dom and then inserted back in again.\n  // (which happens with some implementations of tabbing). this can result in horizontal scroll getting\n  // reset back to the left, however no scroll event is fired. so we need to get header to also scroll\n  // back to the left to be kept in sync.\n  // adding and removing the grid from the DOM both resets the scroll position and\n  // triggers a resize event, so notify listeners if the scroll position has changed\n  checkScrollLeft() {\n    const scrollLeft = this.scrollLeft;\n    let hasHorizontalScrollersOutOfSync = false;\n    for (const source of HORIZONTAL_SOURCES) {\n      const viewport = this.getViewportForSource(source);\n      if (viewport.scrollLeft !== scrollLeft) {\n        hasHorizontalScrollersOutOfSync = true;\n        break;\n      }\n    }\n    if (hasHorizontalScrollersOutOfSync) {\n      this.onHScroll(VIEWPORT);\n    }\n  }\n  scrollGridIfNeeded(suppressedAnimationFrame = false) {\n    const frameNeeded = this.scrollTop != this.nextScrollTop;\n    if (frameNeeded) {\n      this.scrollTop = this.nextScrollTop;\n      if (suppressedAnimationFrame) {\n        this.invalidateVerticalScroll();\n      }\n      this.redrawRowsAfterScroll();\n    }\n    return frameNeeded;\n  }\n  // called by scrollHorizontally method and alignedGridsService\n  setHorizontalScrollPosition(hScrollPosition, fromAlignedGridsService = false) {\n    const minScrollLeft = 0;\n    const maxScrollLeft = this.centerRowsCtrl.eViewport.scrollWidth - this.centerRowsCtrl.getCenterWidth();\n    if (!fromAlignedGridsService && this.shouldBlockScrollUpdate(1 /* Horizontal */, hScrollPosition)) {\n      if (this.enableRtl) {\n        hScrollPosition = hScrollPosition > 0 ? 0 : maxScrollLeft;\n      } else {\n        hScrollPosition = Math.min(Math.max(hScrollPosition, minScrollLeft), maxScrollLeft);\n      }\n    }\n    _setScrollLeft(this.centerRowsCtrl.eViewport, Math.abs(hScrollPosition), this.enableRtl);\n    this.doHorizontalScroll(hScrollPosition);\n  }\n  setVerticalScrollPosition(vScrollPosition) {\n    this.invalidateVerticalScroll();\n    this.eBodyViewport.scrollTop = vScrollPosition;\n  }\n  getVScrollPosition() {\n    if (!this.isVerticalPositionInvalidated) {\n      const {\n        lastOffsetHeight,\n        lastScrollTop\n      } = this;\n      return {\n        top: lastScrollTop,\n        bottom: lastScrollTop + lastOffsetHeight\n      };\n    }\n    this.isVerticalPositionInvalidated = false;\n    const {\n      scrollTop,\n      offsetHeight\n    } = this.eBodyViewport;\n    this.lastScrollTop = scrollTop;\n    this.lastOffsetHeight = offsetHeight;\n    return {\n      top: scrollTop,\n      bottom: scrollTop + offsetHeight\n    };\n  }\n  /** Get an approximate scroll position that returns the last real value read.\n   * This is useful for avoiding repeated DOM reads that force the browser to recalculate styles.\n   * This can have big performance improvements but may not be 100% accurate so only use if this is acceptable.\n   */\n  getApproximateVScollPosition() {\n    if (this.lastScrollTop >= 0 && this.lastOffsetHeight >= 0) {\n      return {\n        top: this.scrollTop,\n        bottom: this.scrollTop + this.lastOffsetHeight\n      };\n    }\n    return this.getVScrollPosition();\n  }\n  getHScrollPosition() {\n    return this.centerRowsCtrl.getHScrollPosition();\n  }\n  isHorizontalScrollShowing() {\n    if (this.isHorizontalPositionInvalidated) {\n      this.lastIsHorizontalScrollShowing = this.centerRowsCtrl.isHorizontalScrollShowing();\n      this.isHorizontalPositionInvalidated = false;\n    }\n    return this.lastIsHorizontalScrollShowing;\n  }\n  // called by the headerRootComp and moveColumnController\n  scrollHorizontally(pixels) {\n    const oldScrollPosition = this.centerRowsCtrl.eViewport.scrollLeft;\n    this.setHorizontalScrollPosition(oldScrollPosition + pixels);\n    return this.centerRowsCtrl.eViewport.scrollLeft - oldScrollPosition;\n  }\n  // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\n  scrollToTop() {\n    this.eBodyViewport.scrollTop = 0;\n  }\n  // Valid values for position are bottom, middle and top\n  ensureNodeVisible(comparator, position = null) {\n    const {\n      rowModel\n    } = this.beans;\n    const rowCount = rowModel.getRowCount();\n    let indexToSelect = -1;\n    for (let i = 0; i < rowCount; i++) {\n      const node = rowModel.getRow(i);\n      if (typeof comparator === \"function\") {\n        const predicate = comparator;\n        if (node && predicate(node)) {\n          indexToSelect = i;\n          break;\n        }\n      } else {\n        if (comparator === node || comparator === node.data) {\n          indexToSelect = i;\n          break;\n        }\n      }\n    }\n    if (indexToSelect >= 0) {\n      this.ensureIndexVisible(indexToSelect, position);\n    }\n  }\n  // Valid values for position are bottom, middle and top\n  // position should be {'top','middle','bottom', or undefined/null}.\n  // if undefined/null, then the grid will to the minimal amount of scrolling,\n  // eg if grid needs to scroll up, it scrolls until row is on top,\n  //    if grid needs to scroll down, it scrolls until row is on bottom,\n  //    if row is already in view, grid does not scroll\n  ensureIndexVisible(index, position, retry = 0) {\n    if (_isDomLayout(this.gos, \"print\")) {\n      return;\n    }\n    const {\n      rowModel\n    } = this.beans;\n    const rowCount = rowModel.getRowCount();\n    if (typeof index !== \"number\" || index < 0 || index >= rowCount) {\n      _warn(88, {\n        index\n      });\n      return;\n    }\n    this.clearRetryListeners();\n    const {\n      frameworkOverrides,\n      pageBounds,\n      rowContainerHeight: heightScaler,\n      rowRenderer\n    } = this.beans;\n    frameworkOverrides.wrapIncoming(() => {\n      const gridBodyCtrl = this.ctrlsSvc.getGridBodyCtrl();\n      const rowNode = rowModel.getRow(index);\n      let rowGotShiftedDuringOperation;\n      let stickyHeightsChanged;\n      let attempt = 0;\n      this.invalidateVerticalScroll();\n      do {\n        const {\n          stickyTopHeight,\n          stickyBottomHeight\n        } = gridBodyCtrl;\n        const startingRowTop = rowNode.rowTop;\n        const startingRowHeight = rowNode.rowHeight;\n        const paginationOffset = pageBounds.getPixelOffset();\n        const rowTopPixel = rowNode.rowTop - paginationOffset;\n        const rowBottomPixel = rowTopPixel + rowNode.rowHeight;\n        const scrollPosition = this.getVScrollPosition();\n        const heightOffset = heightScaler.divStretchOffset;\n        const vScrollTop = scrollPosition.top + heightOffset;\n        const vScrollBottom = scrollPosition.bottom + heightOffset;\n        const viewportHeight = vScrollBottom - vScrollTop;\n        const pxTop = heightScaler.getScrollPositionForPixel(rowTopPixel);\n        const pxBottom = heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight);\n        const pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\n        const rowAboveViewport = vScrollTop + stickyTopHeight > rowTopPixel;\n        const rowBelowViewport = vScrollBottom - stickyBottomHeight < rowBottomPixel;\n        let newScrollPosition = null;\n        if (position === \"top\") {\n          newScrollPosition = pxTop - stickyTopHeight;\n        } else if (position === \"bottom\") {\n          newScrollPosition = pxBottom + stickyBottomHeight;\n        } else if (position === \"middle\") {\n          newScrollPosition = pxMiddle;\n        } else if (rowAboveViewport) {\n          newScrollPosition = pxTop - stickyTopHeight;\n        } else if (rowBelowViewport) {\n          if (pxBottom - pxTop > viewportHeight) {\n            newScrollPosition = pxTop - stickyTopHeight;\n          } else {\n            newScrollPosition = pxBottom + stickyBottomHeight;\n          }\n        }\n        if (newScrollPosition !== null) {\n          this.setVerticalScrollPosition(newScrollPosition);\n          rowRenderer.redraw({\n            afterScroll: true\n          });\n        }\n        rowGotShiftedDuringOperation = startingRowTop !== rowNode.rowTop || startingRowHeight !== rowNode.rowHeight;\n        stickyHeightsChanged = stickyTopHeight !== gridBodyCtrl.stickyTopHeight || stickyBottomHeight !== gridBodyCtrl.stickyBottomHeight;\n        attempt++;\n      } while ((rowGotShiftedDuringOperation || stickyHeightsChanged) && attempt < 10);\n      this.animationFrameSvc?.flushAllFrames();\n      if (retry < 10 && (rowNode?.stub || !this.beans.rowAutoHeight?.areRowsMeasured())) {\n        const scrollTop = this.getVScrollPosition().top;\n        this.clearRetryListenerFncs = this.addManagedEventListeners({\n          bodyScroll: () => {\n            const newScrollTop = this.getVScrollPosition().top;\n            if (scrollTop === newScrollTop) {\n              return;\n            }\n            this.clearRetryListeners();\n          },\n          modelUpdated: () => {\n            this.clearRetryListeners();\n            if (index >= rowModel.getRowCount()) {\n              return;\n            }\n            this.ensureIndexVisible(index, position, retry + 1);\n          }\n        });\n      }\n    });\n  }\n  clearRetryListeners() {\n    this.clearRetryListenerFncs.forEach(callback => callback());\n    this.clearRetryListenerFncs = [];\n  }\n  ensureColumnVisible(key, position = \"auto\") {\n    const {\n      colModel,\n      frameworkOverrides\n    } = this.beans;\n    const column = colModel.getCol(key);\n    if (!column) {\n      return;\n    }\n    if (column.isPinned()) {\n      return;\n    }\n    if (!this.visibleCols.isColDisplayed(column)) {\n      return;\n    }\n    const newHorizontalScroll = this.getPositionedHorizontalScroll(column, position);\n    frameworkOverrides.wrapIncoming(() => {\n      if (newHorizontalScroll !== null) {\n        this.centerRowsCtrl.setCenterViewportScrollLeft(newHorizontalScroll);\n      }\n      this.centerRowsCtrl.onHorizontalViewportChanged();\n      this.animationFrameSvc?.flushAllFrames();\n    });\n  }\n  getPositionedHorizontalScroll(column, position) {\n    const {\n      columnBeforeStart,\n      columnAfterEnd\n    } = this.isColumnOutsideViewport(column);\n    const viewportTooSmallForColumn = this.centerRowsCtrl.getCenterWidth() < column.getActualWidth();\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\n    const isRtl = this.enableRtl;\n    let alignColToStart = (isRtl ? columnBeforeStart : columnAfterEnd) || viewportTooSmallForColumn;\n    let alignColToEnd = isRtl ? columnAfterEnd : columnBeforeStart;\n    if (position !== \"auto\") {\n      alignColToStart = position === \"start\";\n      alignColToEnd = position === \"end\";\n    }\n    const isMiddle = position === \"middle\";\n    if (alignColToStart || alignColToEnd || isMiddle) {\n      const {\n        colLeft,\n        colMiddle,\n        colRight\n      } = this.getColumnBounds(column);\n      if (isMiddle) {\n        return colMiddle - viewportWidth / 2;\n      }\n      if (alignColToStart) {\n        return isRtl ? colRight : colLeft;\n      }\n      return isRtl ? colLeft - viewportWidth : colRight - viewportWidth;\n    }\n    return null;\n  }\n  isColumnOutsideViewport(column) {\n    const {\n      start: viewportStart,\n      end: viewportEnd\n    } = this.getViewportBounds();\n    const {\n      colLeft,\n      colRight\n    } = this.getColumnBounds(column);\n    const isRtl = this.enableRtl;\n    const columnBeforeStart = isRtl ? viewportStart > colRight : viewportEnd < colRight;\n    const columnAfterEnd = isRtl ? viewportEnd < colLeft : viewportStart > colLeft;\n    return {\n      columnBeforeStart,\n      columnAfterEnd\n    };\n  }\n  getColumnBounds(column) {\n    const isRtl = this.enableRtl;\n    const bodyWidth = this.visibleCols.bodyWidth;\n    const colWidth = column.getActualWidth();\n    const colLeft = column.getLeft();\n    const multiplier = isRtl ? -1 : 1;\n    const colLeftPixel = isRtl ? bodyWidth - colLeft : colLeft;\n    const colRightPixel = colLeftPixel + colWidth * multiplier;\n    const colMidPixel = colLeftPixel + colWidth / 2 * multiplier;\n    return {\n      colLeft: colLeftPixel,\n      colMiddle: colMidPixel,\n      colRight: colRightPixel\n    };\n  }\n  getViewportBounds() {\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\n    const scrollPosition = this.centerRowsCtrl.getCenterViewportScrollLeft();\n    const viewportStartPixel = scrollPosition;\n    const viewportEndPixel = viewportWidth + scrollPosition;\n    return {\n      start: viewportStartPixel,\n      end: viewportEndPixel,\n      width: viewportWidth\n    };\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/centerWidthFeature.ts\nvar CenterWidthFeature = class extends BeanStub {\n  constructor(callback, addSpacer = false) {\n    super();\n    this.callback = callback;\n    this.addSpacer = addSpacer;\n  }\n  postConstruct() {\n    const listener = this.setWidth.bind(this);\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    this.addManagedEventListeners({\n      columnContainerWidthChanged: listener,\n      displayedColumnsChanged: listener,\n      leftPinnedWidthChanged: listener\n    });\n    if (this.addSpacer) {\n      this.addManagedEventListeners({\n        rightPinnedWidthChanged: listener,\n        scrollVisibilityChanged: listener,\n        scrollbarWidthChanged: listener\n      });\n    }\n    this.setWidth();\n  }\n  setWidth() {\n    const printLayout = _isDomLayout(this.gos, \"print\");\n    const {\n      visibleCols,\n      scrollVisibleSvc\n    } = this.beans;\n    const centerWidth = visibleCols.bodyWidth;\n    const leftWidth = visibleCols.getColsLeftWidth();\n    const rightWidth = visibleCols.getDisplayedColumnsRightWidth();\n    let totalWidth;\n    if (printLayout) {\n      totalWidth = centerWidth + leftWidth + rightWidth;\n    } else {\n      totalWidth = centerWidth;\n      if (this.addSpacer) {\n        const relevantWidth = this.gos.get(\"enableRtl\") ? leftWidth : rightWidth;\n        if (relevantWidth === 0 && scrollVisibleSvc.verticalScrollShowing) {\n          totalWidth += scrollVisibleSvc.getScrollbarWidth();\n        }\n      }\n    }\n    this.callback(totalWidth);\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/viewportSizeFeature.ts\nvar ViewportSizeFeature = class extends BeanStub {\n  constructor(centerContainerCtrl) {\n    super();\n    this.centerContainerCtrl = centerContainerCtrl;\n  }\n  wireBeans(beans) {\n    this.scrollVisibleSvc = beans.scrollVisibleSvc;\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, p => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n      this.listenForResize();\n    });\n    this.addManagedEventListeners({\n      scrollbarWidthChanged: this.onScrollbarWidthChanged.bind(this)\n    });\n    this.addManagedPropertyListeners([\"alwaysShowHorizontalScroll\", \"alwaysShowVerticalScroll\"], () => {\n      this.checkViewportAndScrolls();\n    });\n  }\n  listenForResize() {\n    const {\n      beans,\n      centerContainerCtrl,\n      gridBodyCtrl\n    } = this;\n    const listener = () => {\n      _requestAnimationFrame(beans, () => {\n        this.onCenterViewportResized();\n      });\n    };\n    centerContainerCtrl.registerViewportResizeListener(listener);\n    gridBodyCtrl.registerBodyViewportResizeListener(listener);\n  }\n  onScrollbarWidthChanged() {\n    this.checkViewportAndScrolls();\n  }\n  onCenterViewportResized() {\n    this.scrollVisibleSvc.updateScrollGap();\n    if (this.centerContainerCtrl.isViewportInTheDOMTree()) {\n      const {\n        pinnedCols,\n        colFlex\n      } = this.beans;\n      pinnedCols?.keepPinnedColumnsNarrowerThanViewport();\n      this.checkViewportAndScrolls();\n      const newWidth = this.centerContainerCtrl.getCenterWidth();\n      if (newWidth !== this.centerWidth) {\n        this.centerWidth = newWidth;\n        colFlex?.refreshFlexedColumns({\n          viewportWidth: this.centerWidth,\n          updateBodyWidths: true,\n          fireResizedEvent: true\n        });\n      }\n    } else {\n      this.bodyHeight = 0;\n    }\n  }\n  // gets called every time the viewport size changes. we use this to check visibility of scrollbars\n  // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\n  checkViewportAndScrolls() {\n    this.updateScrollVisibleService();\n    this.checkBodyHeight();\n    this.onHorizontalViewportChanged();\n    this.gridBodyCtrl.scrollFeature.checkScrollLeft();\n  }\n  getBodyHeight() {\n    return this.bodyHeight;\n  }\n  checkBodyHeight() {\n    const eBodyViewport = this.gridBodyCtrl.eBodyViewport;\n    const bodyHeight = _getInnerHeight(eBodyViewport);\n    if (this.bodyHeight !== bodyHeight) {\n      this.bodyHeight = bodyHeight;\n      this.eventSvc.dispatchEvent({\n        type: \"bodyHeightChanged\"\n      });\n    }\n  }\n  updateScrollVisibleService() {\n    this.updateScrollVisibleServiceImpl();\n    setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\n  }\n  updateScrollVisibleServiceImpl() {\n    const params = {\n      horizontalScrollShowing: this.centerContainerCtrl.isHorizontalScrollShowing(),\n      verticalScrollShowing: this.gridBodyCtrl.isVerticalScrollShowing()\n    };\n    this.scrollVisibleSvc.setScrollsVisible(params);\n  }\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\n  onHorizontalViewportChanged() {\n    const scrollWidth = this.centerContainerCtrl.getCenterWidth();\n    const scrollPosition = this.centerContainerCtrl.getViewportScrollLeft();\n    this.beans.colViewport.setScrollPosition(scrollWidth, scrollPosition);\n  }\n};\n\n// packages/ag-grid-community/src/styling/stylingUtils.ts\nfunction processClassRules(expressionSvc, previousClassRules, classRules, params, onApplicableClass, onNotApplicableClass) {\n  if (classRules == null && previousClassRules == null) {\n    return;\n  }\n  const classesToApply = {};\n  const classesToRemove = {};\n  const forEachSingleClass = (className, callback) => {\n    className.split(\" \").forEach(singleClass => {\n      if (singleClass.trim() == \"\") return;\n      callback(singleClass);\n    });\n  };\n  if (classRules) {\n    const classNames = Object.keys(classRules);\n    for (let i = 0; i < classNames.length; i++) {\n      const className = classNames[i];\n      const rule = classRules[className];\n      let resultOfRule;\n      if (typeof rule === \"string\") {\n        resultOfRule = expressionSvc ? expressionSvc.evaluate(rule, params) : true;\n      } else if (typeof rule === \"function\") {\n        resultOfRule = rule(params);\n      }\n      forEachSingleClass(className, singleClass => {\n        resultOfRule ? classesToApply[singleClass] = true : classesToRemove[singleClass] = true;\n      });\n    }\n  }\n  if (previousClassRules && onNotApplicableClass) {\n    Object.keys(previousClassRules).forEach(className => forEachSingleClass(className, singleClass => {\n      if (!classesToApply[singleClass]) {\n        classesToRemove[singleClass] = true;\n      }\n    }));\n  }\n  if (onNotApplicableClass) {\n    Object.keys(classesToRemove).forEach(onNotApplicableClass);\n  }\n  Object.keys(classesToApply).forEach(onApplicableClass);\n}\n\n// packages/ag-grid-community/src/styling/rowStyleService.ts\nfunction calculateRowLevel(rowNode) {\n  if (rowNode.group) {\n    return rowNode.level;\n  }\n  const parent = rowNode.parent;\n  return parent ? parent.level + 1 : 0;\n}\nvar RowStyleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowStyleSvc\";\n  }\n  processClassesFromGridOptions(classes, rowNode) {\n    const gos = this.gos;\n    const process = rowCls => {\n      if (typeof rowCls === \"string\") {\n        classes.push(rowCls);\n      } else if (Array.isArray(rowCls)) {\n        rowCls.forEach(e => classes.push(e));\n      }\n    };\n    const rowClass = gos.get(\"rowClass\");\n    if (rowClass) {\n      process(rowClass);\n    }\n    const rowClassFunc = gos.getCallback(\"getRowClass\");\n    if (rowClassFunc) {\n      const params = {\n        data: rowNode.data,\n        node: rowNode,\n        rowIndex: rowNode.rowIndex\n      };\n      const rowClassFuncResult = rowClassFunc(params);\n      process(rowClassFuncResult);\n    }\n  }\n  preProcessRowClassRules(classes, rowNode) {\n    this.processRowClassRules(rowNode, className => {\n      classes.push(className);\n    }, () => {});\n  }\n  processRowClassRules(rowNode, onApplicableClass, onNotApplicableClass) {\n    const {\n      gos,\n      expressionSvc\n    } = this.beans;\n    const rowClassParams = _addGridCommonParams(gos, {\n      data: rowNode.data,\n      node: rowNode,\n      rowIndex: rowNode.rowIndex\n    });\n    processClassRules(expressionSvc, void 0, gos.get(\"rowClassRules\"), rowClassParams, onApplicableClass, onNotApplicableClass);\n  }\n  processStylesFromGridOptions(rowNode) {\n    const gos = this.gos;\n    const rowStyle = gos.get(\"rowStyle\");\n    const rowStyleFunc = gos.getCallback(\"getRowStyle\");\n    let rowStyleFuncResult;\n    if (rowStyleFunc) {\n      const params = {\n        data: rowNode.data,\n        node: rowNode,\n        rowIndex: rowNode.rowIndex\n      };\n      rowStyleFuncResult = rowStyleFunc(params);\n    }\n    if (rowStyleFuncResult || rowStyle) {\n      return Object.assign({}, rowStyle, rowStyleFuncResult);\n    }\n    return void 0;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/row/rowCtrl.ts\nvar instanceIdSequence3 = 0;\nvar DOM_DATA_KEY_ROW_CTRL = \"renderedRow\";\nvar RowCtrl = class extends BeanStub {\n  constructor(rowNode, beans, animateIn, useAnimationFrameForCreate, printLayout) {\n    super();\n    this.rowNode = rowNode;\n    this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n    this.printLayout = printLayout;\n    this.allRowGuis = [];\n    this.active = true;\n    this.centerCellCtrls = {\n      list: [],\n      map: {}\n    };\n    this.leftCellCtrls = {\n      list: [],\n      map: {}\n    };\n    this.rightCellCtrls = {\n      list: [],\n      map: {}\n    };\n    this.slideInAnimation = {\n      left: false,\n      center: false,\n      right: false,\n      fullWidth: false\n    };\n    this.fadeInAnimation = {\n      left: false,\n      center: false,\n      right: false,\n      fullWidth: false\n    };\n    this.rowDragComps = [];\n    this.lastMouseDownOnDragger = false;\n    this.emptyStyle = {};\n    this.updateColumnListsPending = false;\n    this.rowId = null;\n    /** sanitised */\n    this.businessKey = null;\n    this.beans = beans;\n    this.gos = beans.gos;\n    this.paginationPage = beans.pagination?.getCurrentPage() ?? 0;\n    this.suppressRowTransform = this.gos.get(\"suppressRowTransform\");\n    this.instanceId = rowNode.id + \"-\" + instanceIdSequence3++;\n    this.rowId = _escapeString(rowNode.id);\n    this.initRowBusinessKey();\n    this.rowFocused = beans.focusSvc.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n    this.rowLevel = calculateRowLevel(this.rowNode);\n    this.setRowType();\n    this.setAnimateFlags(animateIn);\n    this.rowStyles = this.processStylesFromGridOptions();\n    this.rowEditStyleFeature = beans.editSvc?.createRowStyleFeature(this, beans);\n    this.addListeners();\n  }\n  initRowBusinessKey() {\n    this.businessKeyForNodeFunc = this.gos.get(\"getBusinessKeyForNode\");\n    this.updateRowBusinessKey();\n  }\n  updateRowBusinessKey() {\n    if (typeof this.businessKeyForNodeFunc !== \"function\") {\n      return;\n    }\n    const businessKey = this.businessKeyForNodeFunc(this.rowNode);\n    this.businessKey = _escapeString(businessKey);\n  }\n  updateGui(containerType, gui) {\n    if (containerType === \"left\") {\n      this.leftGui = gui;\n    } else if (containerType === \"right\") {\n      this.rightGui = gui;\n    } else if (containerType === \"fullWidth\") {\n      this.fullWidthGui = gui;\n    } else {\n      this.centerGui = gui;\n    }\n  }\n  setComp(rowComp, element, containerType, compBean) {\n    const {\n      context,\n      focusSvc\n    } = this.beans;\n    compBean = setupCompBean(this, context, compBean);\n    const gui = {\n      rowComp,\n      element,\n      containerType,\n      compBean\n    };\n    this.allRowGuis.push(gui);\n    this.updateGui(containerType, gui);\n    this.initialiseRowComp(gui);\n    const rowNode = this.rowNode;\n    const isSsrmLoadingRow = this.rowType === \"FullWidthLoading\" || rowNode.stub;\n    const isIrmLoadingRow = !rowNode.data && this.beans.rowModel.getType() === \"infinite\";\n    if (!isSsrmLoadingRow && !isIrmLoadingRow && !rowNode.rowPinned) {\n      this.beans.rowRenderer.dispatchFirstDataRenderedEvent();\n    }\n    const focusableElement = this.fullWidthGui?.element;\n    if (focusableElement) {\n      const editing = this.beans.editSvc?.isEditing(this);\n      if (!editing && focusSvc.isRowFocused(rowNode.rowIndex, rowNode.rowPinned) && focusSvc.shouldTakeFocus()) {\n        setTimeout(() => focusableElement.focus({\n          preventScroll: true\n        }), 0);\n      }\n    }\n  }\n  unsetComp(containerType) {\n    this.allRowGuis = this.allRowGuis.filter(rowGui => rowGui.containerType !== containerType);\n    this.updateGui(containerType, void 0);\n  }\n  isCacheable() {\n    return this.rowType === \"FullWidthDetail\" && this.gos.get(\"keepDetailRows\");\n  }\n  setCached(cached) {\n    const displayValue = cached ? \"none\" : \"\";\n    this.allRowGuis.forEach(rg => rg.element.style.display = displayValue);\n  }\n  initialiseRowComp(gui) {\n    const gos = this.gos;\n    this.onSuppressCellFocusChanged(this.beans.gos.get(\"suppressCellFocus\"));\n    this.listenOnDomOrder(gui);\n    this.onRowHeightChanged(gui);\n    this.updateRowIndexes(gui);\n    this.setFocusedClasses(gui);\n    this.setStylesFromGridOptions(false, gui);\n    if (_isRowSelection(gos) && this.rowNode.selectable) {\n      this.onRowSelected(gui);\n    }\n    this.updateColumnLists(!this.useAnimationFrameForCreate);\n    const comp = gui.rowComp;\n    const initialRowClasses = this.getInitialRowClasses(gui.containerType);\n    initialRowClasses.forEach(name => comp.toggleCss(name, true));\n    this.executeSlideAndFadeAnimations(gui);\n    if (this.rowNode.group) {\n      _setAriaExpanded(gui.element, this.rowNode.expanded == true);\n    }\n    this.setRowCompRowId(comp);\n    this.setRowCompRowBusinessKey(comp);\n    _setDomData(gos, gui.element, DOM_DATA_KEY_ROW_CTRL, this);\n    gui.compBean.addDestroyFunc(() => _setDomData(gos, gui.element, DOM_DATA_KEY_ROW_CTRL, null));\n    if (this.useAnimationFrameForCreate) {\n      this.beans.animationFrameSvc.createTask(this.addHoverFunctionality.bind(this, gui), this.rowNode.rowIndex, \"p2\", false);\n    } else {\n      this.addHoverFunctionality(gui);\n    }\n    if (this.isFullWidth()) {\n      this.setupFullWidth(gui);\n    }\n    if (gos.get(\"rowDragEntireRow\")) {\n      this.addRowDraggerToRow(gui);\n    }\n    if (this.useAnimationFrameForCreate) {\n      this.beans.animationFrameSvc.addDestroyTask(() => {\n        if (!this.isAlive()) {\n          return;\n        }\n        gui.rowComp.toggleCss(\"ag-after-created\", true);\n      });\n    }\n    this.executeProcessRowPostCreateFunc();\n  }\n  setRowCompRowBusinessKey(comp) {\n    if (this.businessKey == null) {\n      return;\n    }\n    comp.setRowBusinessKey(this.businessKey);\n  }\n  setRowCompRowId(comp) {\n    const rowId = _escapeString(this.rowNode.id);\n    this.rowId = rowId;\n    if (rowId == null) {\n      return;\n    }\n    comp.setRowId(rowId);\n  }\n  executeSlideAndFadeAnimations(gui) {\n    const {\n      containerType\n    } = gui;\n    const shouldSlide = this.slideInAnimation[containerType];\n    if (shouldSlide) {\n      _batchCall(() => {\n        this.onTopChanged();\n      });\n      this.slideInAnimation[containerType] = false;\n    }\n    const shouldFade = this.fadeInAnimation[containerType];\n    if (shouldFade) {\n      _batchCall(() => {\n        gui.rowComp.toggleCss(\"ag-opacity-zero\", false);\n      });\n      this.fadeInAnimation[containerType] = false;\n    }\n  }\n  addRowDraggerToRow(gui) {\n    const rowDragComp = this.beans.rowDragSvc?.createRowDragCompForRow(this.rowNode, gui.element);\n    if (!rowDragComp) {\n      return;\n    }\n    const rowDragBean = this.createBean(rowDragComp, this.beans.context);\n    this.rowDragComps.push(rowDragBean);\n    gui.compBean.addDestroyFunc(() => {\n      this.rowDragComps = this.rowDragComps.filter(r => r !== rowDragBean);\n      this.rowEditStyleFeature = this.destroyBean(this.rowEditStyleFeature, this.beans.context);\n      this.destroyBean(rowDragBean, this.beans.context);\n    });\n  }\n  setupFullWidth(gui) {\n    const pinned = this.getPinnedForContainer(gui.containerType);\n    const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\n    gui.rowComp.showFullWidth(compDetails);\n  }\n  getFullWidthCellRenderers() {\n    if (this.gos.get(\"embedFullWidthRows\")) {\n      return this.allRowGuis.map(gui => gui?.rowComp?.getFullWidthCellRenderer());\n    }\n    return [this.fullWidthGui?.rowComp?.getFullWidthCellRenderer()];\n  }\n  executeProcessRowPostCreateFunc() {\n    const func = this.gos.getCallback(\"processRowPostCreate\");\n    if (!func || !this.areAllContainersReady()) {\n      return;\n    }\n    const params = {\n      // areAllContainersReady asserts that centerGui is not null\n      eRow: this.centerGui.element,\n      ePinnedLeftRow: this.leftGui ? this.leftGui.element : void 0,\n      ePinnedRightRow: this.rightGui ? this.rightGui.element : void 0,\n      node: this.rowNode,\n      rowIndex: this.rowNode.rowIndex,\n      addRenderedRowListener: this.addEventListener.bind(this)\n    };\n    func(params);\n  }\n  areAllContainersReady() {\n    const {\n      leftGui,\n      centerGui,\n      rightGui,\n      beans: {\n        visibleCols\n      }\n    } = this;\n    const isLeftReady = !!leftGui || !visibleCols.isPinningLeft();\n    const isCenterReady = !!centerGui;\n    const isRightReady = !!rightGui || !visibleCols.isPinningRight();\n    return isLeftReady && isCenterReady && isRightReady;\n  }\n  isNodeFullWidthCell() {\n    if (this.rowNode.detail) {\n      return true;\n    }\n    const isFullWidthCellFunc = this.beans.gos.getCallback(\"isFullWidthRow\");\n    return isFullWidthCellFunc ? isFullWidthCellFunc({\n      rowNode: this.rowNode\n    }) : false;\n  }\n  setRowType() {\n    const isStub = this.rowNode.stub && !this.gos.get(\"suppressServerSideFullWidthLoadingRow\") && !this.gos.get(\"groupHideOpenParents\");\n    const isFullWidthCell = this.isNodeFullWidthCell();\n    const isDetailCell = this.gos.get(\"masterDetail\") && this.rowNode.detail;\n    const pivotMode = this.beans.colModel.isPivotMode();\n    const isFullWidthGroup = _isFullWidthGroupRow(this.gos, this.rowNode, pivotMode);\n    if (isStub) {\n      this.rowType = \"FullWidthLoading\";\n    } else if (isDetailCell) {\n      this.rowType = \"FullWidthDetail\";\n    } else if (isFullWidthCell) {\n      this.rowType = \"FullWidth\";\n    } else if (isFullWidthGroup) {\n      this.rowType = \"FullWidthGroup\";\n    } else {\n      this.rowType = \"Normal\";\n    }\n  }\n  updateColumnLists(suppressAnimationFrame = false, useFlushSync = false) {\n    if (this.isFullWidth()) {\n      return;\n    }\n    const {\n      animationFrameSvc\n    } = this.beans;\n    const noAnimation = !animationFrameSvc?.active || suppressAnimationFrame || this.printLayout;\n    if (noAnimation) {\n      this.updateColumnListsImpl(useFlushSync);\n      return;\n    }\n    if (this.updateColumnListsPending) {\n      return;\n    }\n    animationFrameSvc.createTask(() => {\n      if (!this.active) {\n        return;\n      }\n      this.updateColumnListsImpl(true);\n    }, this.rowNode.rowIndex, \"p1\", false);\n    this.updateColumnListsPending = true;\n  }\n  /**\n   * Overridden by SpannedRowCtrl\n   */\n  getNewCellCtrl(col) {\n    const isCellSpan = this.beans.rowSpanSvc?.isCellSpanning(col, this.rowNode);\n    if (isCellSpan) {\n      return void 0;\n    }\n    return new CellCtrl(col, this.rowNode, this.beans, this);\n  }\n  /**\n   * Overridden by SpannedRowCtrl, if span context changes cell needs rebuilt\n   */\n  isCorrectCtrlForSpan(cell) {\n    return !this.beans.rowSpanSvc?.isCellSpanning(cell.column, this.rowNode);\n  }\n  createCellCtrls(prev, cols, pinned = null) {\n    const res = {\n      list: [],\n      map: {}\n    };\n    const addCell = (colInstanceId, cellCtrl, index) => {\n      if (index != null) {\n        res.list.splice(index, 0, cellCtrl);\n      } else {\n        res.list.push(cellCtrl);\n      }\n      res.map[colInstanceId] = cellCtrl;\n    };\n    const colsFromPrev = [];\n    for (const col of cols) {\n      const colInstanceId = col.getInstanceId();\n      let cellCtrl = prev.map[colInstanceId];\n      if (cellCtrl && !this.isCorrectCtrlForSpan(cellCtrl)) {\n        cellCtrl.destroy();\n        cellCtrl = void 0;\n      }\n      if (!cellCtrl) {\n        cellCtrl = this.getNewCellCtrl(col);\n      }\n      if (!cellCtrl) {\n        continue;\n      }\n      addCell(colInstanceId, cellCtrl);\n    }\n    for (const prevCellCtrl of prev.list) {\n      const colInstanceId = prevCellCtrl.column.getInstanceId();\n      const cellInResult = res.map[colInstanceId] != null;\n      if (cellInResult) {\n        continue;\n      }\n      const keepCell = !this.isCellEligibleToBeRemoved(prevCellCtrl, pinned);\n      if (keepCell) {\n        colsFromPrev.push([colInstanceId, prevCellCtrl]);\n      } else {\n        prevCellCtrl.destroy();\n      }\n    }\n    if (colsFromPrev.length) {\n      for (const [colInstanceId, cellCtrl] of colsFromPrev) {\n        const index = res.list.findIndex(ctrl => ctrl.column.getLeft() > cellCtrl.column.getLeft());\n        const normalisedIndex = index === -1 ? void 0 : Math.max(index - 1, 0);\n        addCell(colInstanceId, cellCtrl, normalisedIndex);\n      }\n    }\n    const {\n      focusSvc,\n      visibleCols\n    } = this.beans;\n    const focusedCell = focusSvc.getFocusedCell();\n    if (focusedCell && focusedCell.column.getPinned() == pinned) {\n      const focusedColInstanceId = focusedCell.column.getInstanceId();\n      const focusedCellCtrl = res.map[focusedColInstanceId];\n      if (!focusedCellCtrl && visibleCols.allCols.includes(focusedCell.column)) {\n        const cellCtrl = this.createFocusedCellCtrl();\n        if (cellCtrl) {\n          const index = res.list.findIndex(ctrl => ctrl.column.getLeft() > cellCtrl.column.getLeft());\n          const normalisedIndex = index === -1 ? void 0 : Math.max(index - 1, 0);\n          addCell(focusedColInstanceId, cellCtrl, normalisedIndex);\n        }\n      }\n    }\n    return res;\n  }\n  /**\n   * Creates a new cell ctrl for the focused cell, if this is the correct row ctrl.\n   * @returns a CellCtrl for the focused cell, if required.\n   */\n  createFocusedCellCtrl() {\n    const {\n      focusSvc,\n      rowSpanSvc\n    } = this.beans;\n    const focusedCell = focusSvc.getFocusedCell();\n    if (!focusedCell) {\n      return void 0;\n    }\n    const focusedSpan = rowSpanSvc?.getCellSpan(focusedCell.column, this.rowNode);\n    if (focusedSpan) {\n      if (focusedSpan.firstNode !== this.rowNode || !focusedSpan.doesSpanContain(focusedCell)) {\n        return void 0;\n      }\n    } else {\n      if (!focusSvc.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned)) {\n        return void 0;\n      }\n    }\n    return this.getNewCellCtrl(focusedCell.column);\n  }\n  updateColumnListsImpl(useFlushSync) {\n    this.updateColumnListsPending = false;\n    this.createAllCellCtrls();\n    this.setCellCtrls(useFlushSync);\n  }\n  setCellCtrls(useFlushSync) {\n    this.allRowGuis.forEach(item => {\n      const cellControls = this.getCellCtrlsForContainer(item.containerType);\n      item.rowComp.setCellCtrls(cellControls, useFlushSync);\n    });\n  }\n  getCellCtrlsForContainer(containerType) {\n    switch (containerType) {\n      case \"left\":\n        return this.leftCellCtrls.list;\n      case \"right\":\n        return this.rightCellCtrls.list;\n      case \"fullWidth\":\n        return [];\n      case \"center\":\n        return this.centerCellCtrls.list;\n    }\n  }\n  createAllCellCtrls() {\n    const colViewport = this.beans.colViewport;\n    const presentedColsService = this.beans.visibleCols;\n    if (this.printLayout) {\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, presentedColsService.allCols);\n      this.leftCellCtrls = {\n        list: [],\n        map: {}\n      };\n      this.rightCellCtrls = {\n        list: [],\n        map: {}\n      };\n    } else {\n      const centerCols = colViewport.getColsWithinViewport(this.rowNode);\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, centerCols);\n      const leftCols = presentedColsService.getLeftColsForRow(this.rowNode);\n      this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, leftCols, \"left\");\n      const rightCols = presentedColsService.getRightColsForRow(this.rowNode);\n      this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, rightCols, \"right\");\n    }\n  }\n  isCellEligibleToBeRemoved(cellCtrl, nextContainerPinned) {\n    const REMOVE_CELL = true;\n    const KEEP_CELL = false;\n    const {\n      column\n    } = cellCtrl;\n    if (column.getPinned() != nextContainerPinned) {\n      return REMOVE_CELL;\n    }\n    if (!this.isCorrectCtrlForSpan(cellCtrl)) {\n      return REMOVE_CELL;\n    }\n    const {\n      visibleCols,\n      editSvc\n    } = this.beans;\n    const editing = editSvc?.isEditing(cellCtrl);\n    const focused = cellCtrl.isCellFocused();\n    const mightWantToKeepCell = editing || focused;\n    if (mightWantToKeepCell) {\n      const displayedColumns = visibleCols.allCols;\n      const cellStillDisplayed = displayedColumns.indexOf(column) >= 0;\n      return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n    }\n    return REMOVE_CELL;\n  }\n  getDomOrder() {\n    const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n    return isEnsureDomOrder || _isDomLayout(this.gos, \"print\");\n  }\n  listenOnDomOrder(gui) {\n    const listener = () => {\n      gui.rowComp.setDomOrder(this.getDomOrder());\n    };\n    gui.compBean.addManagedPropertyListeners([\"domLayout\", \"ensureDomOrder\"], listener);\n  }\n  setAnimateFlags(animateIn) {\n    if (this.rowNode.sticky || !animateIn) {\n      return;\n    }\n    const oldRowTopExists = _exists(this.rowNode.oldRowTop);\n    const {\n      visibleCols\n    } = this.beans;\n    const pinningLeft = visibleCols.isPinningLeft();\n    const pinningRight = visibleCols.isPinningRight();\n    if (oldRowTopExists) {\n      const {\n        slideInAnimation\n      } = this;\n      if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\n        slideInAnimation.fullWidth = true;\n        return;\n      }\n      slideInAnimation.center = true;\n      slideInAnimation.left = pinningLeft;\n      slideInAnimation.right = pinningRight;\n    } else {\n      const {\n        fadeInAnimation\n      } = this;\n      if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\n        fadeInAnimation.fullWidth = true;\n        return;\n      }\n      fadeInAnimation.center = true;\n      fadeInAnimation.left = pinningLeft;\n      fadeInAnimation.right = pinningRight;\n    }\n  }\n  isFullWidth() {\n    return this.rowType !== \"Normal\";\n  }\n  refreshFullWidth() {\n    const tryRefresh = (gui, pinned) => {\n      if (!gui) {\n        return true;\n      }\n      return gui.rowComp.refreshFullWidth(() => {\n        const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\n        return compDetails.params;\n      });\n    };\n    const fullWidthSuccess = tryRefresh(this.fullWidthGui, null);\n    const centerSuccess = tryRefresh(this.centerGui, null);\n    const leftSuccess = tryRefresh(this.leftGui, \"left\");\n    const rightSuccess = tryRefresh(this.rightGui, \"right\");\n    const allFullWidthRowsRefreshed = fullWidthSuccess && centerSuccess && leftSuccess && rightSuccess;\n    return allFullWidthRowsRefreshed;\n  }\n  addListeners() {\n    const {\n      beans,\n      gos,\n      rowNode\n    } = this;\n    const {\n      expansionSvc,\n      eventSvc,\n      context,\n      rowSpanSvc\n    } = beans;\n    this.addManagedListeners(this.rowNode, {\n      heightChanged: () => this.onRowHeightChanged(),\n      rowSelected: () => this.onRowSelected(),\n      rowIndexChanged: this.onRowIndexChanged.bind(this),\n      topChanged: this.onTopChanged.bind(this),\n      ...(expansionSvc?.getRowExpandedListeners(this) ?? {})\n    });\n    if (rowNode.detail) {\n      this.addManagedListeners(rowNode.parent, {\n        dataChanged: this.onRowNodeDataChanged.bind(this)\n      });\n    }\n    this.addManagedListeners(rowNode, {\n      dataChanged: this.onRowNodeDataChanged.bind(this),\n      cellChanged: this.postProcessCss.bind(this),\n      rowHighlightChanged: this.onRowNodeHighlightChanged.bind(this),\n      draggingChanged: this.postProcessRowDragging.bind(this),\n      uiLevelChanged: this.onUiLevelChanged.bind(this),\n      rowPinned: this.onRowPinned.bind(this)\n    });\n    this.addManagedListeners(eventSvc, {\n      paginationPixelOffsetChanged: this.onPaginationPixelOffsetChanged.bind(this),\n      heightScaleChanged: this.onTopChanged.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      virtualColumnsChanged: this.onVirtualColumnsChanged.bind(this),\n      cellFocused: this.onCellFocusChanged.bind(this),\n      cellFocusCleared: this.onCellFocusChanged.bind(this),\n      paginationChanged: this.onPaginationChanged.bind(this),\n      modelUpdated: this.refreshFirstAndLastRowStyles.bind(this),\n      columnMoved: () => this.updateColumnLists()\n    });\n    if (rowSpanSvc) {\n      this.addManagedListeners(rowSpanSvc, {\n        spannedCellsUpdated: ({\n          pinned\n        }) => {\n          if (pinned && !rowNode.rowPinned) {\n            return;\n          }\n          this.updateColumnLists();\n        }\n      });\n    }\n    this.addDestroyFunc(() => {\n      this.rowDragComps = this.destroyBeans(this.rowDragComps, context);\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature, context);\n      this.rowEditStyleFeature = this.destroyBean(this.rowEditStyleFeature, context);\n    });\n    this.addManagedPropertyListeners([\"rowStyle\", \"getRowStyle\", \"rowClass\", \"getRowClass\", \"rowClassRules\"], this.postProcessCss.bind(this));\n    this.addManagedPropertyListener(\"rowDragEntireRow\", () => {\n      const useRowDragEntireRow = gos.get(\"rowDragEntireRow\");\n      if (useRowDragEntireRow) {\n        this.allRowGuis.forEach(gui => {\n          this.addRowDraggerToRow(gui);\n        });\n        return;\n      }\n      this.rowDragComps = this.destroyBeans(this.rowDragComps, context);\n    });\n    this.addListenersForCellComps();\n  }\n  addListenersForCellComps() {\n    this.addManagedListeners(this.rowNode, {\n      rowIndexChanged: () => this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onRowIndexChanged()),\n      cellChanged: event => this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onCellChanged(event))\n    });\n  }\n  /** Should only ever be triggered on source rows (i.e. not on pinned siblings) */\n  onRowPinned() {\n    for (const gui of this.allRowGuis) {\n      gui.rowComp.toggleCss(\"ag-row-pinned-source\", !!this.rowNode.pinnedSibling);\n    }\n  }\n  onRowNodeDataChanged(event) {\n    this.refreshRow({\n      suppressFlash: !event.update,\n      newData: !event.update\n    });\n  }\n  refreshRow(params) {\n    const fullWidthChanged = this.isFullWidth() !== !!this.isNodeFullWidthCell();\n    if (fullWidthChanged) {\n      this.beans.rowRenderer.redrawRow(this.rowNode);\n      return;\n    }\n    if (this.isFullWidth()) {\n      const refresh = this.refreshFullWidth();\n      if (!refresh) {\n        this.beans.rowRenderer.redrawRow(this.rowNode);\n      }\n      return;\n    }\n    this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.refreshCell(params));\n    this.allRowGuis.forEach(gui => {\n      this.setRowCompRowId(gui.rowComp);\n      this.updateRowBusinessKey();\n      this.setRowCompRowBusinessKey(gui.rowComp);\n    });\n    this.onRowSelected();\n    this.postProcessCss();\n  }\n  postProcessCss() {\n    this.setStylesFromGridOptions(true);\n    this.postProcessClassesFromGridOptions();\n    this.postProcessRowClassRules();\n    this.rowEditStyleFeature?.applyRowStyles();\n    this.postProcessRowDragging();\n  }\n  onRowNodeHighlightChanged() {\n    const rowDropHighlightSvc = this.beans.rowDropHighlightSvc;\n    const highlighted = rowDropHighlightSvc?.row === this.rowNode ? rowDropHighlightSvc.position : \"none\";\n    const aboveOn = highlighted === \"above\";\n    const insideOn = highlighted === \"inside\";\n    const belowOn = highlighted === \"below\";\n    const treeData = this.gos.get(\"treeData\");\n    const indented = treeData && (belowOn || aboveOn);\n    const uiLevel = this.rowNode.uiLevel.toString();\n    this.allRowGuis.forEach(gui => {\n      const rowComp = gui.rowComp;\n      rowComp.toggleCss(\"ag-row-highlight-above\", aboveOn);\n      rowComp.toggleCss(\"ag-row-highlight-inside\", insideOn);\n      rowComp.toggleCss(\"ag-row-highlight-below\", belowOn);\n      rowComp.toggleCss(\"ag-row-highlight-indent\", indented);\n      if (indented) {\n        gui.element.style.setProperty(\"--ag-row-highlight-level\", uiLevel);\n      } else {\n        gui.element.style.removeProperty(\"--ag-row-highlight-level\");\n      }\n    });\n  }\n  postProcessRowDragging() {\n    const dragging = this.rowNode.dragging;\n    this.allRowGuis.forEach(gui => gui.rowComp.toggleCss(\"ag-row-dragging\", dragging));\n  }\n  onDisplayedColumnsChanged() {\n    this.updateColumnLists(true);\n    this.beans.rowAutoHeight?.requestCheckAutoHeight();\n  }\n  onVirtualColumnsChanged() {\n    this.updateColumnLists(false, true);\n  }\n  getRowPosition() {\n    return {\n      rowPinned: _makeNull(this.rowNode.rowPinned),\n      rowIndex: this.rowNode.rowIndex\n    };\n  }\n  onKeyboardNavigate(keyboardEvent) {\n    const groupInfo = this.findFullWidthInfoForEvent(keyboardEvent);\n    if (!groupInfo) {\n      return;\n    }\n    const {\n      rowGui,\n      column\n    } = groupInfo;\n    const currentFullWidthContainer = rowGui.element;\n    const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n    if (!isFullWidthContainerFocused) {\n      return;\n    }\n    const node = this.rowNode;\n    const {\n      focusSvc,\n      navigation\n    } = this.beans;\n    const lastFocusedCell = focusSvc.getFocusedCell();\n    const cellPosition = {\n      rowIndex: node.rowIndex,\n      rowPinned: node.rowPinned,\n      column: lastFocusedCell?.column ?? column\n    };\n    navigation?.navigateToNextCell(keyboardEvent, keyboardEvent.key, cellPosition, true);\n    keyboardEvent.preventDefault();\n  }\n  onTabKeyDown(keyboardEvent) {\n    if (keyboardEvent.defaultPrevented || _isStopPropagationForAgGrid(keyboardEvent)) {\n      return;\n    }\n    const currentFullWidthComp = this.allRowGuis.find(c => c.element.contains(keyboardEvent.target));\n    const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n    const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n    const activeEl = _getActiveDomElement(this.beans);\n    let isDetailGridCellFocused = false;\n    if (currentFullWidthContainer && activeEl) {\n      isDetailGridCellFocused = currentFullWidthContainer.contains(activeEl) && activeEl.classList.contains(\"ag-cell\");\n    }\n    let nextEl = null;\n    if (!isFullWidthContainerFocused && !isDetailGridCellFocused) {\n      nextEl = _findNextFocusableElement(this.beans, currentFullWidthContainer, false, keyboardEvent.shiftKey);\n    }\n    if (this.isFullWidth() && isFullWidthContainerFocused || !nextEl) {\n      this.beans.navigation?.onTabKeyDown(this, keyboardEvent);\n    }\n  }\n  getFullWidthElement() {\n    if (this.fullWidthGui) {\n      return this.fullWidthGui.element;\n    }\n    return null;\n  }\n  getRowYPosition() {\n    const displayedEl = this.allRowGuis.find(el => _isVisible(el.element))?.element;\n    if (displayedEl) {\n      return displayedEl.getBoundingClientRect().top;\n    }\n    return 0;\n  }\n  onSuppressCellFocusChanged(suppressCellFocus) {\n    const tabIndex = this.isFullWidth() && suppressCellFocus ? void 0 : -1;\n    this.allRowGuis.forEach(gui => {\n      _addOrRemoveAttribute(gui.element, \"tabindex\", tabIndex);\n    });\n  }\n  onFullWidthRowFocused(event) {\n    const node = this.rowNode;\n    const isFocused = !event ? false : this.isFullWidth() && event.rowIndex === node.rowIndex && event.rowPinned == node.rowPinned;\n    let element;\n    if (this.fullWidthGui) {\n      element = this.fullWidthGui.element;\n    } else {\n      const column = this.beans.colModel.getCol(event?.column);\n      const pinned = column?.pinned;\n      if (pinned) {\n        element = pinned === \"right\" ? this.rightGui?.element : this.leftGui?.element;\n      } else {\n        element = this.centerGui?.element;\n      }\n    }\n    if (!element) {\n      return;\n    }\n    element.classList.toggle(\"ag-full-width-focus\", isFocused);\n    if (isFocused && event?.forceBrowserFocus) {\n      element.focus({\n        preventScroll: true\n      });\n    }\n  }\n  recreateCell(cellCtrl) {\n    this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, cellCtrl);\n    this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, cellCtrl);\n    this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, cellCtrl);\n    cellCtrl.destroy();\n    this.updateColumnLists();\n  }\n  removeCellCtrl(prev, cellCtrlToRemove) {\n    const res = {\n      list: [],\n      map: {}\n    };\n    prev.list.forEach(cellCtrl => {\n      if (cellCtrl === cellCtrlToRemove) {\n        return;\n      }\n      res.list.push(cellCtrl);\n      res.map[cellCtrl.column.getInstanceId()] = cellCtrl;\n    });\n    return res;\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    switch (eventName) {\n      case \"dblclick\":\n        this.onRowDblClick(mouseEvent);\n        break;\n      case \"click\":\n        this.onRowClick(mouseEvent);\n        break;\n      case \"touchstart\":\n      case \"mousedown\":\n        this.onRowMouseDown(mouseEvent);\n        break;\n    }\n  }\n  createRowEvent(type, domEvent) {\n    const {\n      rowNode\n    } = this;\n    return _addGridCommonParams(this.gos, {\n      type,\n      node: rowNode,\n      data: rowNode.data,\n      rowIndex: rowNode.rowIndex,\n      rowPinned: rowNode.rowPinned,\n      event: domEvent\n    });\n  }\n  createRowEventWithSource(type, domEvent) {\n    const event = this.createRowEvent(type, domEvent);\n    event.source = this;\n    return event;\n  }\n  onRowDblClick(mouseEvent) {\n    if (_isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    this.beans.eventSvc.dispatchEvent(this.createRowEventWithSource(\"rowDoubleClicked\", mouseEvent));\n  }\n  findFullWidthInfoForEvent(event) {\n    if (!event) {\n      return;\n    }\n    const rowGui = this.findFullWidthRowGui(event.target);\n    const column = this.getColumnForFullWidth(rowGui);\n    if (!rowGui || !column) {\n      return;\n    }\n    return {\n      rowGui,\n      column\n    };\n  }\n  findFullWidthRowGui(target) {\n    return this.allRowGuis.find(c => c.element.contains(target));\n  }\n  getColumnForFullWidth(fullWidthRowGui) {\n    const {\n      visibleCols\n    } = this.beans;\n    switch (fullWidthRowGui?.containerType) {\n      case \"center\":\n        return visibleCols.centerCols[0];\n      case \"left\":\n        return visibleCols.leftCols[0];\n      case \"right\":\n        return visibleCols.rightCols[0];\n      default:\n        return visibleCols.allCols[0];\n    }\n  }\n  onRowMouseDown(mouseEvent) {\n    this.lastMouseDownOnDragger = _isElementChildOfClass(mouseEvent.target, \"ag-row-drag\", 3);\n    if (!this.isFullWidth()) {\n      return;\n    }\n    const node = this.rowNode;\n    const {\n      rangeSvc,\n      focusSvc\n    } = this.beans;\n    rangeSvc?.removeAllCellRanges();\n    const groupInfo = this.findFullWidthInfoForEvent(mouseEvent);\n    if (!groupInfo) {\n      return;\n    }\n    const {\n      rowGui,\n      column\n    } = groupInfo;\n    const element = rowGui.element;\n    const target = mouseEvent.target;\n    let forceBrowserFocus = mouseEvent.defaultPrevented || _isBrowserSafari();\n    if (element && element.contains(target) && _isFocusableFormField(target)) {\n      forceBrowserFocus = false;\n    }\n    focusSvc.setFocusedCell({\n      rowIndex: node.rowIndex,\n      column,\n      rowPinned: node.rowPinned,\n      forceBrowserFocus\n    });\n  }\n  onRowClick(mouseEvent) {\n    const stop = _isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\n    if (stop) {\n      return;\n    }\n    const {\n      eventSvc,\n      selectionSvc\n    } = this.beans;\n    eventSvc.dispatchEvent(this.createRowEventWithSource(\"rowClicked\", mouseEvent));\n    selectionSvc?.handleSelectionEvent(mouseEvent, this.rowNode, \"rowClicked\");\n  }\n  setupDetailRowAutoHeight(eDetailGui) {\n    if (this.rowType !== \"FullWidthDetail\") {\n      return;\n    }\n    this.beans.masterDetailSvc?.setupDetailRowAutoHeight(this, eDetailGui);\n  }\n  createFullWidthCompDetails(eRow, pinned) {\n    const {\n      gos,\n      rowNode\n    } = this;\n    const params = _addGridCommonParams(gos, {\n      fullWidth: true,\n      data: rowNode.data,\n      node: rowNode,\n      value: rowNode.key,\n      valueFormatted: rowNode.key,\n      // these need to be taken out, as part of 'afterAttached' now\n      eGridCell: eRow,\n      eParentOfValue: eRow,\n      pinned,\n      addRenderedRowListener: this.addEventListener.bind(this),\n      // This is not on the type of ICellRendererParams\n      registerRowDragger: (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) => this.addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value, suppressVisibilityChange),\n      setTooltip: (value, shouldDisplayTooltip) => {\n        gos.assertModuleRegistered(\"Tooltip\", 3);\n        this.setupFullWidthRowTooltip(value, shouldDisplayTooltip);\n      }\n    });\n    const compFactory = this.beans.userCompFactory;\n    switch (this.rowType) {\n      case \"FullWidthDetail\":\n        return _getFullWidthDetailCellRendererDetails(compFactory, params);\n      case \"FullWidthGroup\":\n        {\n          const {\n            value,\n            valueFormatted\n          } = this.beans.valueSvc.getValueForDisplay(void 0, this.rowNode, true);\n          params.value = value;\n          params.valueFormatted = valueFormatted;\n          return _getFullWidthGroupCellRendererDetails(compFactory, params);\n        }\n      case \"FullWidthLoading\":\n        return _getFullWidthLoadingCellRendererDetails(compFactory, params);\n      default:\n        return _getFullWidthCellRendererDetails(compFactory, params);\n    }\n  }\n  setupFullWidthRowTooltip(value, shouldDisplayTooltip) {\n    if (!this.fullWidthGui) {\n      return;\n    }\n    this.tooltipFeature = this.beans.tooltipSvc?.setupFullWidthRowTooltip(this.tooltipFeature, this, value, shouldDisplayTooltip);\n  }\n  addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value = \"\", suppressVisibilityChange) {\n    const {\n      rowDragSvc,\n      context\n    } = this.beans;\n    if (!rowDragSvc || !this.isFullWidth()) {\n      return;\n    }\n    const rowDragComp = rowDragSvc.createRowDragComp(() => value, this.rowNode, void 0, rowDraggerElement, dragStartPixels, suppressVisibilityChange);\n    this.createBean(rowDragComp, context);\n    this.addDestroyFunc(() => {\n      this.destroyBean(rowDragComp, context);\n    });\n  }\n  onUiLevelChanged() {\n    const newLevel = calculateRowLevel(this.rowNode);\n    if (this.rowLevel != newLevel) {\n      const classToAdd = \"ag-row-level-\" + newLevel;\n      const classToRemove = \"ag-row-level-\" + this.rowLevel;\n      this.allRowGuis.forEach(gui => {\n        gui.rowComp.toggleCss(classToAdd, true);\n        gui.rowComp.toggleCss(classToRemove, false);\n      });\n    }\n    this.rowLevel = newLevel;\n  }\n  isFirstRowOnPage() {\n    return this.rowNode.rowIndex === this.beans.pageBounds.getFirstRow();\n  }\n  isLastRowOnPage() {\n    return this.rowNode.rowIndex === this.beans.pageBounds.getLastRow();\n  }\n  refreshFirstAndLastRowStyles() {\n    const newFirst = this.isFirstRowOnPage();\n    const newLast = this.isLastRowOnPage();\n    if (this.firstRowOnPage !== newFirst) {\n      this.firstRowOnPage = newFirst;\n      this.allRowGuis.forEach(gui => gui.rowComp.toggleCss(\"ag-row-first\", newFirst));\n    }\n    if (this.lastRowOnPage !== newLast) {\n      this.lastRowOnPage = newLast;\n      this.allRowGuis.forEach(gui => gui.rowComp.toggleCss(\"ag-row-last\", newLast));\n    }\n  }\n  getAllCellCtrls() {\n    if (this.leftCellCtrls.list.length === 0 && this.rightCellCtrls.list.length === 0) {\n      return this.centerCellCtrls.list;\n    }\n    const res = [...this.centerCellCtrls.list, ...this.leftCellCtrls.list, ...this.rightCellCtrls.list];\n    return res;\n  }\n  postProcessClassesFromGridOptions() {\n    const cssClasses = [];\n    this.beans.rowStyleSvc?.processClassesFromGridOptions(cssClasses, this.rowNode);\n    if (!cssClasses.length) {\n      return;\n    }\n    cssClasses.forEach(classStr => {\n      this.allRowGuis.forEach(c => c.rowComp.toggleCss(classStr, true));\n    });\n  }\n  postProcessRowClassRules() {\n    this.beans.rowStyleSvc?.processRowClassRules(this.rowNode, className => {\n      this.allRowGuis.forEach(gui => gui.rowComp.toggleCss(className, true));\n    }, className => {\n      this.allRowGuis.forEach(gui => gui.rowComp.toggleCss(className, false));\n    });\n  }\n  setStylesFromGridOptions(updateStyles, gui) {\n    if (updateStyles) {\n      this.rowStyles = this.processStylesFromGridOptions();\n    }\n    this.forEachGui(gui, gui2 => gui2.rowComp.setUserStyles(this.rowStyles));\n  }\n  getPinnedForContainer(rowContainerType) {\n    if (rowContainerType === \"left\" || rowContainerType === \"right\") {\n      return rowContainerType;\n    }\n    return null;\n  }\n  getInitialRowClasses(rowContainerType) {\n    const pinned = this.getPinnedForContainer(rowContainerType);\n    const fullWidthRow = this.isFullWidth();\n    const {\n      rowNode,\n      beans\n    } = this;\n    const classes = [];\n    classes.push(\"ag-row\");\n    classes.push(this.rowFocused ? \"ag-row-focus\" : \"ag-row-no-focus\");\n    if (this.fadeInAnimation[rowContainerType]) {\n      classes.push(\"ag-opacity-zero\");\n    }\n    classes.push(rowNode.rowIndex % 2 === 0 ? \"ag-row-even\" : \"ag-row-odd\");\n    if (rowNode.isRowPinned()) {\n      classes.push(\"ag-row-pinned\");\n      if (beans.pinnedRowModel?.isManual()) {\n        classes.push(\"ag-row-pinned-manual\");\n      }\n    }\n    if (!rowNode.isRowPinned() && rowNode.pinnedSibling) {\n      classes.push(\"ag-row-pinned-source\");\n    }\n    if (rowNode.isSelected()) {\n      classes.push(\"ag-row-selected\");\n    }\n    if (rowNode.footer) {\n      classes.push(\"ag-row-footer\");\n    }\n    classes.push(\"ag-row-level-\" + this.rowLevel);\n    if (rowNode.stub) {\n      classes.push(\"ag-row-loading\");\n    }\n    if (fullWidthRow) {\n      classes.push(\"ag-full-width-row\");\n    }\n    beans.expansionSvc?.addExpandedCss(classes, rowNode);\n    if (rowNode.dragging) {\n      classes.push(\"ag-row-dragging\");\n    }\n    const {\n      rowStyleSvc\n    } = beans;\n    if (rowStyleSvc) {\n      rowStyleSvc.processClassesFromGridOptions(classes, rowNode);\n      rowStyleSvc.preProcessRowClassRules(classes, rowNode);\n    }\n    classes.push(this.printLayout ? \"ag-row-position-relative\" : \"ag-row-position-absolute\");\n    if (this.isFirstRowOnPage()) {\n      classes.push(\"ag-row-first\");\n    }\n    if (this.isLastRowOnPage()) {\n      classes.push(\"ag-row-last\");\n    }\n    if (fullWidthRow) {\n      if (pinned === \"left\") {\n        classes.push(\"ag-cell-last-left-pinned\");\n      }\n      if (pinned === \"right\") {\n        classes.push(\"ag-cell-first-right-pinned\");\n      }\n    }\n    return classes;\n  }\n  processStylesFromGridOptions() {\n    return this.beans.rowStyleSvc?.processStylesFromGridOptions(this.rowNode) ?? this.emptyStyle;\n  }\n  onRowSelected(gui) {\n    this.beans.selectionSvc?.onRowCtrlSelected(this, gui2 => {\n      if (gui2 === this.centerGui || gui2 === this.fullWidthGui) {\n        this.announceDescription();\n      }\n    }, gui);\n  }\n  announceDescription() {\n    this.beans.selectionSvc?.announceAriaRowSelection(this.rowNode);\n  }\n  addHoverFunctionality(eGui) {\n    if (!this.active) {\n      return;\n    }\n    const {\n      element,\n      compBean\n    } = eGui;\n    const {\n      rowNode,\n      beans,\n      gos\n    } = this;\n    compBean.addManagedListeners(element, {\n      // We use pointer events here instead of mouse events, as pointer events\n      // are more reliable for hover detection, especially with touch devices\n      // or hybrid touch + mouse devices.\n      pointerenter: e => {\n        if (e.pointerType === \"mouse\") {\n          rowNode.dispatchRowEvent(\"mouseEnter\");\n        }\n      },\n      pointerleave: e => {\n        if (e.pointerType === \"mouse\") {\n          rowNode.dispatchRowEvent(\"mouseLeave\");\n        }\n      }\n    });\n    compBean.addManagedListeners(rowNode, {\n      mouseEnter: () => {\n        if (!beans.dragSvc?.dragging && !gos.get(\"suppressRowHoverHighlight\")) {\n          element.classList.add(\"ag-row-hover\");\n          rowNode.setHovered(true);\n        }\n      },\n      mouseLeave: () => {\n        this.resetHoveredStatus(element);\n      }\n    });\n  }\n  resetHoveredStatus(el) {\n    const elements = el ? [el] : this.allRowGuis.map(gui => gui.element);\n    for (const element of elements) {\n      element.classList.remove(\"ag-row-hover\");\n    }\n    this.rowNode.setHovered(false);\n  }\n  // for animation, we don't want to animate entry or exit to a very far away pixel,\n  // otherwise the row would move so fast, it would appear to disappear. so this method\n  // moves the row closer to the viewport if it is far away, so the row slide in / out\n  // at a speed the user can see.\n  roundRowTopToBounds(rowTop) {\n    const range = this.beans.ctrlsSvc.getScrollFeature().getApproximateVScollPosition();\n    const minPixel = this.applyPaginationOffset(range.top, true) - 100;\n    const maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n    return Math.min(Math.max(minPixel, rowTop), maxPixel);\n  }\n  forEachGui(gui, callback) {\n    if (gui) {\n      callback(gui);\n    } else {\n      this.allRowGuis.forEach(callback);\n    }\n  }\n  isRowRendered() {\n    return this.allRowGuis.length > 0;\n  }\n  onRowHeightChanged(gui) {\n    if (this.rowNode.rowHeight == null) {\n      return;\n    }\n    const rowHeight = this.rowNode.rowHeight;\n    const defaultRowHeight = this.beans.environment.getDefaultRowHeight();\n    const isHeightFromFunc = _isGetRowHeightFunction(this.gos);\n    const heightFromFunc = isHeightFromFunc ? _getRowHeightForNode(this.beans, this.rowNode).height : void 0;\n    const lineHeight = heightFromFunc ? `${Math.min(defaultRowHeight, heightFromFunc) - 2}px` : void 0;\n    this.forEachGui(gui, gui2 => {\n      gui2.element.style.height = `${rowHeight}px`;\n      if (lineHeight) {\n        gui2.element.style.setProperty(\"--ag-line-height\", lineHeight);\n      }\n    });\n  }\n  // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n  destroyFirstPass(suppressAnimation = false) {\n    this.active = false;\n    const {\n      rowNode\n    } = this;\n    if (!suppressAnimation && _isAnimateRows(this.gos) && !rowNode.sticky) {\n      const rowStillVisibleJustNotInViewport = rowNode.rowTop != null;\n      if (rowStillVisibleJustNotInViewport) {\n        const rowTop = this.roundRowTopToBounds(rowNode.rowTop);\n        this.setRowTop(rowTop);\n      } else {\n        this.allRowGuis.forEach(gui => gui.rowComp.toggleCss(\"ag-opacity-zero\", true));\n      }\n    }\n    if (this.fullWidthGui?.element.contains(_getActiveDomElement(this.beans))) {\n      this.beans.focusSvc.attemptToRecoverFocus();\n    }\n    rowNode.setHovered(false);\n    const event = this.createRowEvent(\"virtualRowRemoved\");\n    this.dispatchLocalEvent(event);\n    this.beans.eventSvc.dispatchEvent(event);\n    super.destroy();\n  }\n  destroySecondPass() {\n    this.allRowGuis.length = 0;\n    const destroyCellCtrls = ctrls => {\n      ctrls.list.forEach(c => c.destroy());\n      return {\n        list: [],\n        map: {}\n      };\n    };\n    this.centerCellCtrls = destroyCellCtrls(this.centerCellCtrls);\n    this.leftCellCtrls = destroyCellCtrls(this.leftCellCtrls);\n    this.rightCellCtrls = destroyCellCtrls(this.rightCellCtrls);\n  }\n  setFocusedClasses(gui) {\n    this.forEachGui(gui, gui2 => {\n      gui2.rowComp.toggleCss(\"ag-row-focus\", this.rowFocused);\n      gui2.rowComp.toggleCss(\"ag-row-no-focus\", !this.rowFocused);\n    });\n  }\n  onCellFocusChanged() {\n    const {\n      focusSvc\n    } = this.beans;\n    const rowFocused = focusSvc.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n    if (rowFocused !== this.rowFocused) {\n      this.rowFocused = rowFocused;\n      this.setFocusedClasses();\n    }\n  }\n  onPaginationChanged() {\n    const currentPage = this.beans.pagination?.getCurrentPage() ?? 0;\n    if (this.paginationPage !== currentPage) {\n      this.paginationPage = currentPage;\n      this.onTopChanged();\n    }\n    this.refreshFirstAndLastRowStyles();\n  }\n  onTopChanged() {\n    this.setRowTop(this.rowNode.rowTop);\n  }\n  onPaginationPixelOffsetChanged() {\n    this.onTopChanged();\n  }\n  // applies pagination offset, eg if on second page, and page height is 500px, then removes\n  // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n  // reverse will take the offset away rather than add.\n  applyPaginationOffset(topPx, reverse = false) {\n    if (this.rowNode.isRowPinned() || this.rowNode.sticky) {\n      return topPx;\n    }\n    const pixelOffset = this.beans.pageBounds.getPixelOffset();\n    const multiplier = reverse ? 1 : -1;\n    return topPx + pixelOffset * multiplier;\n  }\n  setRowTop(pixels) {\n    if (this.printLayout) {\n      return;\n    }\n    if (_exists(pixels)) {\n      const afterPaginationPixels = this.applyPaginationOffset(pixels);\n      const skipScaling = this.rowNode.isRowPinned() || this.rowNode.sticky;\n      const afterScalingPixels = skipScaling ? afterPaginationPixels : this.beans.rowContainerHeight.getRealPixelPosition(afterPaginationPixels);\n      const topPx = `${afterScalingPixels}px`;\n      this.setRowTopStyle(topPx);\n    }\n  }\n  // the top needs to be set into the DOM element when the element is created, not updated afterwards.\n  // otherwise the transition would not work, as it would be transitioning from zero (the unset value).\n  // for example, suppose a row that is outside the viewport, then user does a filter to remove other rows\n  // and this row now appears in the viewport, and the row moves up (ie it was under the viewport and not rendered,\n  // but now is in the viewport) then a new RowComp is created, however it should have it's position initialised\n  // to below the viewport, so the row will appear to animate up. if we didn't set the initial position at creation\n  // time, the row would animate down (ie from position zero).\n  getInitialRowTop(rowContainerType) {\n    return this.suppressRowTransform ? this.getInitialRowTopShared(rowContainerType) : void 0;\n  }\n  getInitialTransform(rowContainerType) {\n    return this.suppressRowTransform ? void 0 : `translateY(${this.getInitialRowTopShared(rowContainerType)})`;\n  }\n  getInitialRowTopShared(rowContainerType) {\n    if (this.printLayout) {\n      return \"\";\n    }\n    const rowNode = this.rowNode;\n    let rowTop;\n    if (rowNode.sticky) {\n      rowTop = rowNode.stickyRowTop;\n    } else {\n      const pixels = this.slideInAnimation[rowContainerType] ? this.roundRowTopToBounds(rowNode.oldRowTop) : rowNode.rowTop;\n      const afterPaginationPixels = this.applyPaginationOffset(pixels);\n      rowTop = rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeight.getRealPixelPosition(afterPaginationPixels);\n    }\n    return rowTop + \"px\";\n  }\n  setRowTopStyle(topPx) {\n    this.allRowGuis.forEach(gui => this.suppressRowTransform ? gui.rowComp.setTop(topPx) : gui.rowComp.setTransform(`translateY(${topPx})`));\n  }\n  getCellCtrl(column, skipColSpanSearch = false) {\n    let res = null;\n    this.getAllCellCtrls().forEach(cellCtrl => {\n      if (cellCtrl.column == column) {\n        res = cellCtrl;\n      }\n    });\n    if (res != null || skipColSpanSearch) {\n      return res;\n    }\n    this.getAllCellCtrls().forEach(cellCtrl => {\n      if (cellCtrl?.getColSpanningList().indexOf(column) >= 0) {\n        res = cellCtrl;\n      }\n    });\n    return res;\n  }\n  onRowIndexChanged() {\n    if (this.rowNode.rowIndex != null) {\n      this.onCellFocusChanged();\n      this.updateRowIndexes();\n      this.postProcessCss();\n    }\n  }\n  updateRowIndexes(gui) {\n    const rowIndexStr = this.rowNode.getRowIndexString();\n    if (rowIndexStr === null) {\n      return;\n    }\n    const headerRowCount = (this.beans.ctrlsSvc.getHeaderRowContainerCtrl()?.getRowCount() ?? 0) + (this.beans.filterManager?.getHeaderRowCount() ?? 0);\n    const rowIsEven = this.rowNode.rowIndex % 2 === 0;\n    const ariaRowIndex = headerRowCount + this.rowNode.rowIndex + 1;\n    this.forEachGui(gui, c => {\n      c.rowComp.setRowIndex(rowIndexStr);\n      c.rowComp.toggleCss(\"ag-row-even\", rowIsEven);\n      c.rowComp.toggleCss(\"ag-row-odd\", !rowIsEven);\n      _setAriaRowIndex(c.element, ariaRowIndex);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/utils/keyboard.ts\nfunction _isEventFromPrintableCharacter(event) {\n  if (event.altKey || event.ctrlKey || event.metaKey) {\n    return false;\n  }\n  const printableCharacter = event.key?.length === 1;\n  return printableCharacter;\n}\nfunction _isUserSuppressingKeyboardEvent(gos, keyboardEvent, rowNode, column, editing) {\n  const colDefFunc = column ? column.getColDef().suppressKeyboardEvent : void 0;\n  if (!colDefFunc) {\n    return false;\n  }\n  const params = _addGridCommonParams(gos, {\n    event: keyboardEvent,\n    editing,\n    column,\n    node: rowNode,\n    data: rowNode.data,\n    colDef: column.getColDef()\n  });\n  if (colDefFunc) {\n    const colDefFuncResult = colDefFunc(params);\n    if (colDefFuncResult) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// packages/ag-grid-community/src/utils/selection.ts\nfunction _selectAllCells(beans) {\n  const {\n    pinnedRowModel,\n    rowModel\n  } = beans;\n  const [isEmptyPinnedTop, isEmptyPinnedBottom] = [pinnedRowModel?.isEmpty(\"top\") ?? true, pinnedRowModel?.isEmpty(\"bottom\") ?? true];\n  const floatingStart = isEmptyPinnedTop ? null : \"top\";\n  let floatingEnd;\n  let rowEnd;\n  if (isEmptyPinnedBottom) {\n    floatingEnd = null;\n    rowEnd = rowModel.getRowCount() - 1;\n  } else {\n    floatingEnd = \"bottom\";\n    rowEnd = pinnedRowModel?.getPinnedBottomRowCount() ?? 0 - 1;\n  }\n  const {\n    visibleCols,\n    rangeSvc\n  } = beans;\n  const allDisplayedColumns = visibleCols.allCols;\n  if (!rangeSvc || !allDisplayedColumns?.length) {\n    return;\n  }\n  rangeSvc.setCellRange({\n    rowStartIndex: 0,\n    rowStartPinned: floatingStart,\n    rowEndIndex: rowEnd,\n    rowEndPinned: floatingEnd\n  });\n}\n\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/rowContainerEventsFeature.ts\nvar A_KEYCODE = 65;\nvar C_KEYCODE = 67;\nvar V_KEYCODE = 86;\nvar D_KEYCODE = 68;\nvar Z_KEYCODE = 90;\nvar Y_KEYCODE = 89;\nfunction _normaliseQwertyAzerty(keyboardEvent) {\n  const {\n    keyCode\n  } = keyboardEvent;\n  let code;\n  switch (keyCode) {\n    case A_KEYCODE:\n      code = KeyCode.A;\n      break;\n    case C_KEYCODE:\n      code = KeyCode.C;\n      break;\n    case V_KEYCODE:\n      code = KeyCode.V;\n      break;\n    case D_KEYCODE:\n      code = KeyCode.D;\n      break;\n    case Z_KEYCODE:\n      code = KeyCode.Z;\n      break;\n    case Y_KEYCODE:\n      code = KeyCode.Y;\n      break;\n    default:\n      code = keyboardEvent.code;\n  }\n  return code;\n}\nvar RowContainerEventsFeature = class extends BeanStub {\n  constructor(element) {\n    super();\n    this.element = element;\n  }\n  postConstruct() {\n    this.addKeyboardListeners();\n    this.addMouseListeners();\n    this.beans.touchSvc?.mockRowContextMenu(this);\n    this.editSvc = this.beans.editSvc;\n  }\n  addKeyboardListeners() {\n    const eventName = \"keydown\";\n    const listener = this.processKeyboardEvent.bind(this, eventName);\n    this.addManagedElementListeners(this.element, {\n      [eventName]: listener\n    });\n  }\n  addMouseListeners() {\n    const mouseDownEvent = _isEventSupported(\"touchstart\") ? \"touchstart\" : \"mousedown\";\n    const eventNames = [\"dblclick\", \"contextmenu\", \"mouseover\", \"mouseout\", \"click\", mouseDownEvent];\n    eventNames.forEach(eventName => {\n      const listener = this.processMouseEvent.bind(this, eventName);\n      this.addManagedElementListeners(this.element, {\n        [eventName]: listener\n      });\n    });\n  }\n  processMouseEvent(eventName, mouseEvent) {\n    if (!_isEventFromThisGrid(this.gos, mouseEvent) || _isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    const {\n      cellCtrl,\n      rowCtrl\n    } = this.getControlsForEventTarget(mouseEvent.target);\n    if (eventName === \"contextmenu\") {\n      if (cellCtrl?.column) {\n        cellCtrl.dispatchCellContextMenuEvent(mouseEvent);\n      }\n      this.beans.contextMenuSvc?.handleContextMenuMouseEvent(mouseEvent, void 0, rowCtrl, cellCtrl);\n    } else {\n      if (cellCtrl) {\n        cellCtrl.onMouseEvent(eventName, mouseEvent);\n      }\n      if (rowCtrl) {\n        rowCtrl.onMouseEvent(eventName, mouseEvent);\n      }\n    }\n  }\n  getControlsForEventTarget(target) {\n    const {\n      gos\n    } = this;\n    return {\n      cellCtrl: _getCellCtrlForEventTarget(gos, target),\n      rowCtrl: _getCtrlForEventTarget(gos, target, DOM_DATA_KEY_ROW_CTRL)\n    };\n  }\n  processKeyboardEvent(eventName, keyboardEvent) {\n    const {\n      cellCtrl,\n      rowCtrl\n    } = this.getControlsForEventTarget(keyboardEvent.target);\n    if (keyboardEvent.defaultPrevented) {\n      return;\n    }\n    if (cellCtrl) {\n      this.processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent);\n    } else if (rowCtrl?.isFullWidth()) {\n      this.processFullWidthRowKeyboardEvent(rowCtrl, eventName, keyboardEvent);\n    }\n  }\n  processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent) {\n    const editing = this.editSvc?.isEditing(cellCtrl, {\n      withOpenEditor: true\n    }) ?? false;\n    const gridProcessingAllowed = !_isUserSuppressingKeyboardEvent(this.gos, keyboardEvent, cellCtrl.rowNode, cellCtrl.column, editing);\n    if (gridProcessingAllowed) {\n      if (eventName === \"keydown\") {\n        const wasScrollKey = !editing && this.beans.navigation?.handlePageScrollingKey(keyboardEvent);\n        if (!wasScrollKey) {\n          cellCtrl.onKeyDown(keyboardEvent);\n        }\n        this.doGridOperations(keyboardEvent, editing);\n        if (_isEventFromPrintableCharacter(keyboardEvent)) {\n          cellCtrl.processCharacter(keyboardEvent);\n        }\n      }\n    }\n    if (eventName === \"keydown\") {\n      this.eventSvc.dispatchEvent(cellCtrl.createEvent(keyboardEvent, \"cellKeyDown\"));\n    }\n  }\n  processFullWidthRowKeyboardEvent(rowCtrl, eventName, keyboardEvent) {\n    const {\n      rowNode\n    } = rowCtrl;\n    const {\n      focusSvc,\n      navigation\n    } = this.beans;\n    const focusedCell = focusSvc.getFocusedCell();\n    const column = focusedCell?.column;\n    const gridProcessingAllowed = !_isUserSuppressingKeyboardEvent(this.gos, keyboardEvent, rowNode, column, false);\n    if (gridProcessingAllowed) {\n      const key = keyboardEvent.key;\n      if (eventName === \"keydown\") {\n        switch (key) {\n          case KeyCode.PAGE_HOME:\n          case KeyCode.PAGE_END:\n          case KeyCode.PAGE_UP:\n          case KeyCode.PAGE_DOWN:\n            navigation?.handlePageScrollingKey(keyboardEvent, true);\n            break;\n          case KeyCode.LEFT:\n          case KeyCode.RIGHT:\n            if (!this.gos.get(\"embedFullWidthRows\")) {\n              break;\n            }\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n            rowCtrl.onKeyboardNavigate(keyboardEvent);\n            break;\n          case KeyCode.TAB:\n            rowCtrl.onTabKeyDown(keyboardEvent);\n            break;\n          default:\n        }\n      }\n    }\n    if (eventName === \"keydown\") {\n      this.eventSvc.dispatchEvent(rowCtrl.createRowEvent(\"cellKeyDown\", keyboardEvent));\n    }\n  }\n  doGridOperations(keyboardEvent, editing) {\n    if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n      return;\n    }\n    if (editing) {\n      return;\n    }\n    if (!_isEventFromThisGrid(this.gos, keyboardEvent)) {\n      return;\n    }\n    const keyCode = _normaliseQwertyAzerty(keyboardEvent);\n    const {\n      clipboardSvc,\n      undoRedo\n    } = this.beans;\n    if (keyCode === KeyCode.A) {\n      return this.onCtrlAndA(keyboardEvent);\n    }\n    if (keyCode === KeyCode.C) {\n      return this.onCtrlAndC(clipboardSvc, keyboardEvent);\n    }\n    if (keyCode === KeyCode.D) {\n      return this.onCtrlAndD(clipboardSvc, keyboardEvent);\n    }\n    if (keyCode === KeyCode.V) {\n      return this.onCtrlAndV(clipboardSvc, keyboardEvent);\n    }\n    if (keyCode === KeyCode.X) {\n      return this.onCtrlAndX(clipboardSvc, keyboardEvent);\n    }\n    if (keyCode === KeyCode.Y) {\n      return this.onCtrlAndY(undoRedo);\n    }\n    if (keyCode === KeyCode.Z) {\n      return this.onCtrlAndZ(undoRedo, keyboardEvent);\n    }\n  }\n  onCtrlAndA(event) {\n    const {\n      beans: {\n        rowModel,\n        rangeSvc,\n        selectionSvc\n      },\n      gos\n    } = this;\n    if (rangeSvc && _isCellSelectionEnabled(gos) && rowModel.isRowsToRender()) {\n      _selectAllCells(this.beans);\n    } else if (selectionSvc) {\n      selectionSvc?.selectAllRowNodes({\n        source: \"keyboardSelectAll\",\n        selectAll: _getSelectAll(gos)\n      });\n    }\n    event.preventDefault();\n  }\n  onCtrlAndC(clipboardSvc, event) {\n    if (!clipboardSvc || this.gos.get(\"enableCellTextSelection\")) {\n      return;\n    }\n    const {\n      cellCtrl\n    } = this.getControlsForEventTarget(event.target);\n    if (this.editSvc?.isEditing(cellCtrl, {\n      withOpenEditor: true\n    })) {\n      return;\n    }\n    event.preventDefault();\n    clipboardSvc.copyToClipboard();\n  }\n  onCtrlAndX(clipboardSvc, event) {\n    if (!clipboardSvc || this.gos.get(\"enableCellTextSelection\") || this.gos.get(\"suppressCutToClipboard\")) {\n      return;\n    }\n    const {\n      cellCtrl\n    } = this.getControlsForEventTarget(event.target);\n    if (this.editSvc?.isEditing(cellCtrl, {\n      withOpenEditor: true\n    })) {\n      return;\n    }\n    event.preventDefault();\n    clipboardSvc.cutToClipboard(void 0, \"ui\");\n  }\n  onCtrlAndV(clipboardSvc, event) {\n    const {\n      cellCtrl\n    } = this.getControlsForEventTarget(event.target);\n    if (this.editSvc?.isEditing(cellCtrl, {\n      withOpenEditor: true\n    })) {\n      return;\n    }\n    if (clipboardSvc && !this.gos.get(\"suppressClipboardPaste\")) {\n      clipboardSvc.pasteFromClipboard();\n    }\n  }\n  onCtrlAndD(clipboardSvc, event) {\n    if (clipboardSvc && !this.gos.get(\"suppressClipboardPaste\")) {\n      clipboardSvc.copyRangeDown();\n    }\n    event.preventDefault();\n  }\n  onCtrlAndZ(undoRedo, event) {\n    if (!this.gos.get(\"undoRedoCellEditing\") || !undoRedo) {\n      return;\n    }\n    event.preventDefault();\n    if (event.shiftKey) {\n      undoRedo.redo(\"ui\");\n    } else {\n      undoRedo.undo(\"ui\");\n    }\n  }\n  onCtrlAndY(undoRedo) {\n    undoRedo?.redo(\"ui\");\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/setHeightFeature.ts\nvar SetHeightFeature = class extends BeanStub {\n  constructor(eContainer, eViewport) {\n    super();\n    this.eContainer = eContainer;\n    this.eViewport = eViewport;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      rowContainerHeightChanged: this.onHeightChanged.bind(this, this.beans.rowContainerHeight)\n    });\n  }\n  onHeightChanged(maxDivHeightScaler) {\n    const height = maxDivHeightScaler.uiContainerHeight;\n    const heightString = height != null ? `${height}px` : ``;\n    this.eContainer.style.height = heightString;\n    if (this.eViewport) {\n      this.eViewport.style.height = heightString;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/rowContainerCtrl.ts\nvar getTopRowCtrls = r => r.topRowCtrls;\nvar getStickyTopRowCtrls = r => r.getStickyTopRowCtrls();\nvar getStickyBottomRowCtrls = r => r.getStickyBottomRowCtrls();\nvar getBottomRowCtrls = r => r.bottomRowCtrls;\nvar getCentreRowCtrls = r => r.allRowCtrls;\nvar getSpannedTopRowCtrls = r => r.getCtrls(\"top\");\nvar getSpannedCenterRowCtrls = r => r.getCtrls(\"center\");\nvar getSpannedBottomRowCtrls = r => r.getCtrls(\"bottom\");\nvar ContainerCssClasses = {\n  center: {\n    type: \"center\",\n    name: \"center-cols\",\n    getRowCtrls: getCentreRowCtrls,\n    getSpannedRowCtrls: getSpannedCenterRowCtrls\n  },\n  left: {\n    type: \"left\",\n    name: \"pinned-left-cols\",\n    pinnedType: \"left\",\n    getRowCtrls: getCentreRowCtrls,\n    getSpannedRowCtrls: getSpannedCenterRowCtrls\n  },\n  right: {\n    type: \"right\",\n    name: \"pinned-right-cols\",\n    pinnedType: \"right\",\n    getRowCtrls: getCentreRowCtrls,\n    getSpannedRowCtrls: getSpannedCenterRowCtrls\n  },\n  fullWidth: {\n    type: \"fullWidth\",\n    name: \"full-width\",\n    fullWidth: true,\n    getRowCtrls: getCentreRowCtrls\n  },\n  topCenter: {\n    type: \"center\",\n    name: \"floating-top\",\n    getRowCtrls: getTopRowCtrls,\n    getSpannedRowCtrls: getSpannedTopRowCtrls\n  },\n  topLeft: {\n    type: \"left\",\n    name: \"pinned-left-floating\",\n    container: \"ag-pinned-left-floating-top\",\n    pinnedType: \"left\",\n    getRowCtrls: getTopRowCtrls,\n    getSpannedRowCtrls: getSpannedTopRowCtrls\n  },\n  topRight: {\n    type: \"right\",\n    name: \"pinned-right-floating\",\n    container: \"ag-pinned-right-floating-top\",\n    pinnedType: \"right\",\n    getRowCtrls: getTopRowCtrls,\n    getSpannedRowCtrls: getSpannedTopRowCtrls\n  },\n  topFullWidth: {\n    type: \"fullWidth\",\n    name: \"floating-top-full-width\",\n    fullWidth: true,\n    getRowCtrls: getTopRowCtrls\n  },\n  stickyTopCenter: {\n    type: \"center\",\n    name: \"sticky-top\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopLeft: {\n    type: \"left\",\n    name: \"pinned-left-sticky-top\",\n    container: \"ag-pinned-left-sticky-top\",\n    pinnedType: \"left\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopRight: {\n    type: \"right\",\n    name: \"pinned-right-sticky-top\",\n    container: \"ag-pinned-right-sticky-top\",\n    pinnedType: \"right\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopFullWidth: {\n    type: \"fullWidth\",\n    name: \"sticky-top-full-width\",\n    fullWidth: true,\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyBottomCenter: {\n    type: \"center\",\n    name: \"sticky-bottom\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomLeft: {\n    type: \"left\",\n    name: \"pinned-left-sticky-bottom\",\n    container: \"ag-pinned-left-sticky-bottom\",\n    pinnedType: \"left\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomRight: {\n    type: \"right\",\n    name: \"pinned-right-sticky-bottom\",\n    container: \"ag-pinned-right-sticky-bottom\",\n    pinnedType: \"right\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomFullWidth: {\n    type: \"fullWidth\",\n    name: \"sticky-bottom-full-width\",\n    fullWidth: true,\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  bottomCenter: {\n    type: \"center\",\n    name: \"floating-bottom\",\n    getRowCtrls: getBottomRowCtrls,\n    getSpannedRowCtrls: getSpannedBottomRowCtrls\n  },\n  bottomLeft: {\n    type: \"left\",\n    name: \"pinned-left-floating-bottom\",\n    container: \"ag-pinned-left-floating-bottom\",\n    pinnedType: \"left\",\n    getRowCtrls: getBottomRowCtrls,\n    getSpannedRowCtrls: getSpannedBottomRowCtrls\n  },\n  bottomRight: {\n    type: \"right\",\n    name: \"pinned-right-floating-bottom\",\n    container: \"ag-pinned-right-floating-bottom\",\n    pinnedType: \"right\",\n    getRowCtrls: getBottomRowCtrls,\n    getSpannedRowCtrls: getSpannedBottomRowCtrls\n  },\n  bottomFullWidth: {\n    type: \"fullWidth\",\n    name: \"floating-bottom-full-width\",\n    fullWidth: true,\n    getRowCtrls: getBottomRowCtrls\n  }\n};\nfunction _getRowViewportClass(name) {\n  const options = _getRowContainerOptions(name);\n  return `ag-${options.name}-viewport`;\n}\nfunction _getRowContainerClass(name) {\n  const options = _getRowContainerOptions(name);\n  return options.container ?? `ag-${options.name}-container`;\n}\nfunction _getRowSpanContainerClass(name) {\n  const options = _getRowContainerOptions(name);\n  return `ag-${options.name}-spanned-cells-container`;\n}\nfunction _getRowContainerOptions(name) {\n  return ContainerCssClasses[name];\n}\nvar allTopNoFW = [\"topCenter\", \"topLeft\", \"topRight\"];\nvar allBottomNoFW = [\"bottomCenter\", \"bottomLeft\", \"bottomRight\"];\nvar allMiddleNoFW = [\"center\", \"left\", \"right\"];\nvar allMiddle = [\"center\", \"left\", \"right\", \"fullWidth\"];\nvar allCenter = [\"stickyTopCenter\", \"stickyBottomCenter\", \"center\", \"topCenter\", \"bottomCenter\"];\nvar allLeft = [\"left\", \"bottomLeft\", \"topLeft\", \"stickyTopLeft\", \"stickyBottomLeft\"];\nvar allRight = [\"right\", \"bottomRight\", \"topRight\", \"stickyTopRight\", \"stickyBottomRight\"];\nvar allStickyTopNoFW = [\"stickyTopCenter\", \"stickyTopLeft\", \"stickyTopRight\"];\nvar allStickyBottomNoFW = [\"stickyBottomCenter\", \"stickyBottomLeft\", \"stickyBottomRight\"];\nvar allStickyContainers = [...allStickyTopNoFW, \"stickyTopFullWidth\", ...allStickyBottomNoFW, \"stickyBottomFullWidth\"];\nvar allNoFW = [...allTopNoFW, ...allBottomNoFW, ...allMiddleNoFW, ...allStickyTopNoFW, ...allStickyBottomNoFW];\nvar RowContainerCtrl = class extends BeanStub {\n  constructor(name) {\n    super();\n    this.name = name;\n    this.visible = true;\n    // Maintaining a constant reference enables optimization in React.\n    this.EMPTY_CTRLS = [];\n    this.options = _getRowContainerOptions(name);\n  }\n  postConstruct() {\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    this.forContainers([\"center\"], () => {\n      this.viewportSizeFeature = this.createManagedBean(new ViewportSizeFeature(this));\n      this.addManagedEventListeners({\n        stickyTopOffsetChanged: this.onStickyTopOffsetChanged.bind(this)\n      });\n    });\n  }\n  onStickyTopOffsetChanged(event) {\n    this.comp.setOffsetTop(`${event.offset}px`);\n  }\n  registerWithCtrlsService() {\n    if (this.options.fullWidth) return;\n    this.beans.ctrlsSvc.register(this.name, this);\n  }\n  forContainers(names, callback) {\n    if (names.indexOf(this.name) >= 0) {\n      callback();\n    }\n  }\n  setComp(view, eContainer, eSpannedContainer, eViewport) {\n    this.comp = view;\n    this.eContainer = eContainer;\n    this.eSpannedContainer = eSpannedContainer;\n    this.eViewport = eViewport;\n    this.createManagedBean(new RowContainerEventsFeature(this.eViewport ?? this.eContainer));\n    this.addPreventScrollWhileDragging();\n    this.listenOnDomOrder();\n    const {\n      pinnedCols,\n      rangeSvc\n    } = this.beans;\n    const pinnedWidthChanged = () => this.onPinnedWidthChanged();\n    this.forContainers(allLeft, () => {\n      this.pinnedWidthFeature = this.createOptionalManagedBean(pinnedCols?.createPinnedWidthFeature(true, this.eContainer, this.eSpannedContainer));\n      this.addManagedEventListeners({\n        leftPinnedWidthChanged: pinnedWidthChanged\n      });\n    });\n    this.forContainers(allRight, () => {\n      this.pinnedWidthFeature = this.createOptionalManagedBean(pinnedCols?.createPinnedWidthFeature(false, this.eContainer, this.eSpannedContainer));\n      this.addManagedEventListeners({\n        rightPinnedWidthChanged: pinnedWidthChanged\n      });\n    });\n    this.forContainers(allMiddle, () => this.createManagedBean(new SetHeightFeature(this.eContainer, this.name === \"center\" ? eViewport : void 0)));\n    if (rangeSvc) {\n      this.forContainers(allNoFW, () => this.createManagedBean(rangeSvc.createDragListenerFeature(this.eContainer)));\n    }\n    this.forContainers(allCenter, () => this.createManagedBean(new CenterWidthFeature(width => this.comp.setContainerWidth(`${width}px`))));\n    this.visible = this.isContainerVisible();\n    this.addListeners();\n    this.registerWithCtrlsService();\n  }\n  onScrollCallback(fn) {\n    this.addManagedElementListeners(this.eViewport, {\n      scroll: fn\n    });\n  }\n  addListeners() {\n    const {\n      spannedRowRenderer,\n      gos\n    } = this.beans;\n    const onDisplayedColumnsChanged = this.onDisplayedColumnsChanged.bind(this);\n    this.addManagedEventListeners({\n      displayedColumnsChanged: onDisplayedColumnsChanged,\n      displayedColumnsWidthChanged: onDisplayedColumnsChanged,\n      displayedRowsChanged: params => this.onDisplayedRowsChanged(params.afterScroll)\n    });\n    onDisplayedColumnsChanged();\n    this.onDisplayedRowsChanged();\n    if (spannedRowRenderer && this.options.getSpannedRowCtrls && gos.get(\"enableCellSpan\")) {\n      this.addManagedListeners(spannedRowRenderer, {\n        spannedRowsUpdated: () => {\n          const spannedCtrls = this.options.getSpannedRowCtrls(spannedRowRenderer);\n          if (!spannedCtrls) {\n            return;\n          }\n          this.comp.setSpannedRowCtrls(spannedCtrls, false);\n        }\n      });\n    }\n  }\n  listenOnDomOrder() {\n    const isStickContainer = allStickyContainers.indexOf(this.name) >= 0;\n    if (isStickContainer) {\n      this.comp.setDomOrder(true);\n      return;\n    }\n    const listener = () => {\n      const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n      const isPrintLayout = _isDomLayout(this.gos, \"print\");\n      this.comp.setDomOrder(isEnsureDomOrder || isPrintLayout);\n    };\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    listener();\n  }\n  onDisplayedColumnsChanged() {\n    this.forContainers([\"center\"], () => this.onHorizontalViewportChanged());\n  }\n  // this methods prevents the grid views from being scrolled while the dragService is being used\n  // eg. the view should not scroll up and down while dragging rows using the rowDragComp.\n  addPreventScrollWhileDragging() {\n    const {\n      dragSvc\n    } = this.beans;\n    if (!dragSvc) {\n      return;\n    }\n    const preventScroll = e => {\n      if (dragSvc.dragging) {\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n      }\n    };\n    this.eContainer.addEventListener(\"touchmove\", preventScroll, {\n      passive: false\n    });\n    this.addDestroyFunc(() => this.eContainer.removeEventListener(\"touchmove\", preventScroll));\n  }\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\n  onHorizontalViewportChanged(afterScroll = false) {\n    const scrollWidth = this.getCenterWidth();\n    const scrollPosition = this.getCenterViewportScrollLeft();\n    this.beans.colViewport.setScrollPosition(scrollWidth, scrollPosition, afterScroll);\n  }\n  hasHorizontalScrollGap() {\n    return this.eContainer.clientWidth - this.eViewport.clientWidth < 0;\n  }\n  hasVerticalScrollGap() {\n    return this.eContainer.clientHeight - this.eViewport.clientHeight < 0;\n  }\n  getCenterWidth() {\n    return _getInnerWidth(this.eViewport);\n  }\n  getCenterViewportScrollLeft() {\n    return _getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  registerViewportResizeListener(listener) {\n    const unsubscribeFromResize = _observeResize(this.beans, this.eViewport, listener);\n    this.addDestroyFunc(() => unsubscribeFromResize());\n  }\n  isViewportInTheDOMTree() {\n    return _isInDOM(this.eViewport);\n  }\n  getViewportScrollLeft() {\n    return _getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  isHorizontalScrollShowing() {\n    const isAlwaysShowHorizontalScroll = this.gos.get(\"alwaysShowHorizontalScroll\");\n    return isAlwaysShowHorizontalScroll || _isHorizontalScrollShowing(this.eViewport);\n  }\n  setHorizontalScroll(offset) {\n    this.comp.setHorizontalScroll(offset);\n  }\n  getHScrollPosition() {\n    const res = {\n      left: this.eViewport.scrollLeft,\n      right: this.eViewport.scrollLeft + this.eViewport.offsetWidth\n    };\n    return res;\n  }\n  setCenterViewportScrollLeft(value) {\n    _setScrollLeft(this.eViewport, value, this.enableRtl);\n  }\n  isContainerVisible() {\n    const pinned = this.options.pinnedType != null;\n    return !pinned || !!this.pinnedWidthFeature && this.pinnedWidthFeature.getWidth() > 0;\n  }\n  onPinnedWidthChanged() {\n    const visible = this.isContainerVisible();\n    if (this.visible != visible) {\n      this.visible = visible;\n      this.onDisplayedRowsChanged();\n    }\n  }\n  onDisplayedRowsChanged(afterScroll = false) {\n    const rows = this.options.getRowCtrls(this.beans.rowRenderer);\n    if (!this.visible || rows.length === 0) {\n      this.comp.setRowCtrls({\n        rowCtrls: this.EMPTY_CTRLS\n      });\n      return;\n    }\n    const printLayout = _isDomLayout(this.gos, \"print\");\n    const embedFullWidthRows = this.gos.get(\"embedFullWidthRows\");\n    const embedFW = embedFullWidthRows || printLayout;\n    const rowsThisContainer = rows.filter(rowCtrl => {\n      const fullWidthRow = rowCtrl.isFullWidth();\n      const match = this.options.fullWidth ? !embedFW && fullWidthRow : embedFW || !fullWidthRow;\n      return match;\n    });\n    this.comp.setRowCtrls({\n      rowCtrls: rowsThisContainer,\n      useFlushSync: afterScroll\n    });\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/gridBodyCtrl.ts\nvar CSS_CLASS_FORCE_VERTICAL_SCROLL = \"ag-force-vertical-scroll\";\nvar CSS_CLASS_CELL_SELECTABLE = \"ag-selectable\";\nvar CSS_CLASS_COLUMN_MOVING = \"ag-column-moving\";\nvar GridBodyCtrl = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.stickyTopHeight = 0;\n    this.stickyBottomHeight = 0;\n  }\n  wireBeans(beans) {\n    this.ctrlsSvc = beans.ctrlsSvc;\n    this.colModel = beans.colModel;\n    this.scrollVisibleSvc = beans.scrollVisibleSvc;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.filterManager = beans.filterManager;\n    this.rowGroupColsSvc = beans.rowGroupColsSvc;\n  }\n  setComp(comp, eGridBody, eBodyViewport, eTop, eBottom, eStickyTop, eStickyBottom) {\n    this.comp = comp;\n    this.eGridBody = eGridBody;\n    this.eBodyViewport = eBodyViewport;\n    this.eTop = eTop;\n    this.eBottom = eBottom;\n    this.eStickyTop = eStickyTop;\n    this.eStickyBottom = eStickyBottom;\n    this.eCenterColsViewport = eBodyViewport.querySelector(`.${_getRowViewportClass(\"center\")}`);\n    this.eFullWidthContainer = eBodyViewport.querySelector(`.${_getRowContainerClass(\"fullWidth\")}`);\n    this.eStickyTopFullWidthContainer = eStickyTop.querySelector(`.${_getRowContainerClass(\"stickyTopFullWidth\")}`);\n    this.eStickyBottomFullWidthContainer = eStickyBottom.querySelector(`.${_getRowContainerClass(\"stickyBottomFullWidth\")}`);\n    this.setCellTextSelection(this.gos.get(\"enableCellTextSelection\"));\n    this.addManagedPropertyListener(\"enableCellTextSelection\", props => this.setCellTextSelection(props.currentValue));\n    this.createManagedBean(new LayoutFeature(this.comp));\n    this.scrollFeature = this.createManagedBean(new GridBodyScrollFeature(eBodyViewport));\n    this.beans.rowDragSvc?.setupRowDrag(eBodyViewport, this);\n    this.setupRowAnimationCssClass();\n    this.addEventListeners();\n    this.addFocusListeners([eTop, eBodyViewport, eBottom, eStickyTop, eStickyBottom]);\n    this.setGridRootRole();\n    this.onGridColumnsChanged();\n    this.addBodyViewportListener();\n    this.setFloatingHeights();\n    this.disableBrowserDragging();\n    this.addStopEditingWhenGridLosesFocus();\n    this.updateScrollingClasses();\n    this.filterManager?.setupAdvFilterHeaderComp(eTop);\n    this.ctrlsSvc.register(\"gridBodyCtrl\", this);\n  }\n  addEventListeners() {\n    const setFloatingHeights = this.setFloatingHeights.bind(this);\n    const setGridRootRole = this.setGridRootRole.bind(this);\n    const toggleRowResizeStyle = this.toggleRowResizeStyles.bind(this);\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.onGridColumnsChanged.bind(this),\n      scrollVisibilityChanged: this.onScrollVisibilityChanged.bind(this),\n      scrollGapChanged: this.updateScrollingClasses.bind(this),\n      pinnedRowDataChanged: setFloatingHeights,\n      pinnedHeightChanged: setFloatingHeights,\n      pinnedRowsChanged: setFloatingHeights,\n      headerHeightChanged: this.setStickyTopOffsetTop.bind(this),\n      columnRowGroupChanged: setGridRootRole,\n      columnPivotChanged: setGridRootRole,\n      rowResizeStarted: toggleRowResizeStyle,\n      rowResizeEnded: toggleRowResizeStyle\n    });\n    this.addManagedPropertyListener(\"treeData\", setGridRootRole);\n  }\n  toggleRowResizeStyles(params) {\n    const isResizingRow = params.type === \"rowResizeStarted\";\n    this.eBodyViewport.classList.toggle(\"ag-prevent-animation\", isResizingRow);\n  }\n  onGridColumnsChanged() {\n    const columns = this.beans.colModel.getCols();\n    this.comp.setColumnCount(columns.length);\n  }\n  onScrollVisibilityChanged() {\n    const {\n      scrollVisibleSvc\n    } = this;\n    const visible = scrollVisibleSvc.verticalScrollShowing;\n    this.setVerticalScrollPaddingVisible(visible);\n    this.setStickyWidth(visible);\n    this.setStickyBottomOffsetBottom();\n    const scrollbarWidth = visible ? scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\n    const pad = _isInvisibleScrollbar() ? 16 : 0;\n    const width = `calc(100% + ${scrollbarWidth + pad}px)`;\n    _requestAnimationFrame(this.beans, () => this.comp.setBodyViewportWidth(width));\n    this.updateScrollingClasses();\n  }\n  setGridRootRole() {\n    const {\n      rowGroupColsSvc,\n      colModel\n    } = this;\n    let isTreeGrid = this.gos.get(\"treeData\");\n    if (!isTreeGrid) {\n      const isPivotActive = colModel.isPivotMode();\n      const rowGroupColumnLen = !rowGroupColsSvc ? 0 : rowGroupColsSvc.columns.length;\n      const columnsNeededForGrouping = isPivotActive ? 2 : 1;\n      isTreeGrid = rowGroupColumnLen >= columnsNeededForGrouping;\n    }\n    this.comp.setGridRootRole(isTreeGrid ? \"treegrid\" : \"grid\");\n  }\n  addFocusListeners(elements) {\n    elements.forEach(element => {\n      this.addManagedElementListeners(element, {\n        focusin: e => {\n          const {\n            target\n          } = e;\n          const isFocusedElementNested = _isElementChildOfClass(target, \"ag-root\", element);\n          element.classList.toggle(\"ag-has-focus\", !isFocusedElementNested);\n        },\n        focusout: e => {\n          const {\n            target,\n            relatedTarget\n          } = e;\n          const gridContainRelatedTarget = element.contains(relatedTarget);\n          const isNestedRelatedTarget = _isElementChildOfClass(relatedTarget, \"ag-root\", element);\n          const isNestedTarget = _isElementChildOfClass(target, \"ag-root\", element);\n          if (isNestedTarget) {\n            return;\n          }\n          if (!gridContainRelatedTarget || isNestedRelatedTarget) {\n            element.classList.remove(\"ag-has-focus\");\n          }\n        }\n      });\n    });\n  }\n  // used by ColumnAnimationService\n  setColumnMovingCss(moving) {\n    this.comp.setColumnMovingCss(CSS_CLASS_COLUMN_MOVING, moving);\n  }\n  setCellTextSelection(selectable = false) {\n    this.comp.setCellSelectableCss(CSS_CLASS_CELL_SELECTABLE, selectable);\n  }\n  updateScrollingClasses() {\n    const {\n      eGridBody: {\n        classList\n      },\n      scrollVisibleSvc\n    } = this;\n    classList.toggle(\"ag-body-vertical-content-no-gap\", !scrollVisibleSvc.verticalScrollGap);\n    classList.toggle(\"ag-body-horizontal-content-no-gap\", !scrollVisibleSvc.horizontalScrollGap);\n  }\n  // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\n  // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\n  disableBrowserDragging() {\n    this.addManagedElementListeners(this.eGridBody, {\n      dragstart: event => {\n        if (event.target instanceof HTMLImageElement) {\n          event.preventDefault();\n          return false;\n        }\n      }\n    });\n  }\n  addStopEditingWhenGridLosesFocus() {\n    this.beans.editSvc?.addStopEditingWhenGridLosesFocus([this.eBodyViewport, this.eBottom, this.eTop, this.eStickyTop, this.eStickyBottom]);\n  }\n  updateRowCount() {\n    const headerCount = (this.ctrlsSvc.getHeaderRowContainerCtrl()?.getRowCount() ?? 0) + (this.filterManager?.getHeaderRowCount() ?? 0);\n    const {\n      rowModel\n    } = this.beans;\n    const rowCount = rowModel.isLastRowIndexKnown() ? rowModel.getRowCount() : -1;\n    const total = rowCount === -1 ? -1 : headerCount + rowCount;\n    this.comp.setRowCount(total);\n  }\n  registerBodyViewportResizeListener(listener) {\n    this.comp.registerBodyViewportResizeListener(listener);\n  }\n  setVerticalScrollPaddingVisible(visible) {\n    const overflowY = visible ? \"scroll\" : \"hidden\";\n    this.comp.setPinnedTopBottomOverflowY(overflowY);\n  }\n  isVerticalScrollShowing() {\n    const show = this.gos.get(\"alwaysShowVerticalScroll\");\n    const cssClass = show ? CSS_CLASS_FORCE_VERTICAL_SCROLL : null;\n    const allowVerticalScroll = _isDomLayout(this.gos, \"normal\");\n    this.comp.setAlwaysVerticalScrollClass(cssClass, show);\n    return show || allowVerticalScroll && _isVerticalScrollShowing(this.eBodyViewport);\n  }\n  setupRowAnimationCssClass() {\n    const {\n      rowContainerHeight,\n      environment\n    } = this.beans;\n    let initialSizeMeasurementComplete = environment.sizesMeasured;\n    const updateAnimationClass = () => {\n      const animateRows = initialSizeMeasurementComplete && _isAnimateRows(this.gos) && !rowContainerHeight.stretching;\n      const animateRowsCssClass = animateRows ? \"ag-row-animation\" : \"ag-row-no-animation\";\n      this.comp.setRowAnimationCssOnBodyViewport(animateRowsCssClass, animateRows);\n    };\n    updateAnimationClass();\n    this.addManagedEventListeners({\n      heightScaleChanged: updateAnimationClass\n    });\n    this.addManagedPropertyListener(\"animateRows\", updateAnimationClass);\n    this.addManagedEventListeners({\n      gridStylesChanged: () => {\n        if (!initialSizeMeasurementComplete && environment.sizesMeasured) {\n          initialSizeMeasurementComplete = true;\n          updateAnimationClass();\n        }\n      }\n    });\n  }\n  addBodyViewportListener() {\n    const {\n      eBodyViewport,\n      eStickyTop,\n      eStickyBottom,\n      eTop,\n      eBottom,\n      beans: {\n        popupSvc,\n        touchSvc\n      }\n    } = this;\n    const listener = this.onBodyViewportContextMenu.bind(this);\n    this.addManagedElementListeners(eBodyViewport, {\n      contextmenu: listener\n    });\n    touchSvc?.mockBodyContextMenu(this, listener);\n    this.addManagedElementListeners(eBodyViewport, {\n      wheel: this.onBodyViewportWheel.bind(this, popupSvc)\n    });\n    const onStickyWheel = this.onStickyWheel.bind(this);\n    for (const container of [eStickyTop, eStickyBottom, eTop, eBottom]) {\n      this.addManagedElementListeners(container, {\n        wheel: onStickyWheel\n      });\n    }\n    const onHorizontalWheel = this.onHorizontalWheel.bind(this);\n    for (const container of [\"left\", \"right\", \"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\"]) {\n      this.addManagedElementListeners(this.ctrlsSvc.get(container).eContainer, {\n        wheel: onHorizontalWheel\n      });\n    }\n    this.addFullWidthContainerWheelListener();\n  }\n  addFullWidthContainerWheelListener() {\n    this.addManagedElementListeners(this.eFullWidthContainer, {\n      wheel: e => this.onFullWidthContainerWheel(e)\n    });\n  }\n  onFullWidthContainerWheel(e) {\n    const {\n      deltaX,\n      deltaY,\n      shiftKey\n    } = e;\n    const isHorizontalScroll = shiftKey || Math.abs(deltaX) > Math.abs(deltaY);\n    if (isHorizontalScroll && _isEventFromThisGrid(this.gos, e)) {\n      this.scrollGridBodyToMatchEvent(e);\n    }\n  }\n  onStickyWheel(e) {\n    const {\n      deltaY\n    } = e;\n    const scrolled = this.scrollVertically(deltaY);\n    if (scrolled > 0) {\n      e.preventDefault();\n    }\n  }\n  onHorizontalWheel(e) {\n    const {\n      deltaX,\n      deltaY,\n      shiftKey\n    } = e;\n    const isHorizontalScroll = shiftKey || Math.abs(deltaX) > Math.abs(deltaY);\n    if (!isHorizontalScroll) {\n      return;\n    }\n    this.scrollGridBodyToMatchEvent(e);\n  }\n  scrollGridBodyToMatchEvent(e) {\n    const {\n      deltaX,\n      deltaY\n    } = e;\n    e.preventDefault();\n    this.eCenterColsViewport.scrollBy({\n      left: deltaX || deltaY\n    });\n  }\n  onBodyViewportContextMenu(mouseEvent, touch, touchEvent) {\n    if (!mouseEvent && !touchEvent) {\n      return;\n    }\n    if (this.gos.get(\"preventDefaultOnContextMenu\")) {\n      const event = mouseEvent || touchEvent;\n      event.preventDefault();\n    }\n    const {\n      target\n    } = mouseEvent || touch;\n    if (target === this.eBodyViewport || target === this.ctrlsSvc.get(\"center\").eViewport) {\n      this.beans.contextMenuSvc?.showContextMenu({\n        mouseEvent,\n        touchEvent,\n        value: null,\n        anchorToElement: this.eGridBody,\n        source: \"ui\"\n      });\n    }\n  }\n  onBodyViewportWheel(popupSvc, e) {\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\n      return;\n    }\n    if (popupSvc?.hasAnchoredPopup()) {\n      e.preventDefault();\n    }\n  }\n  // called by rowDragFeature\n  scrollVertically(pixels) {\n    const oldScrollPosition = this.eBodyViewport.scrollTop;\n    this.scrollFeature.setVerticalScrollPosition(oldScrollPosition + pixels);\n    return this.eBodyViewport.scrollTop - oldScrollPosition;\n  }\n  setFloatingHeights() {\n    const {\n      pinnedRowModel,\n      beans: {\n        environment\n      }\n    } = this;\n    const floatingTopHeight = pinnedRowModel?.getPinnedTopTotalHeight();\n    const floatingBottomHeight = pinnedRowModel?.getPinnedBottomTotalHeight();\n    const pinnedBorderWidth = environment.getPinnedRowBorderWidth();\n    const rowBorderWidth = environment.getRowBorderWidth();\n    const additionalHeight = pinnedBorderWidth - rowBorderWidth;\n    const normalisedFloatingTopHeight = !floatingTopHeight ? 0 : additionalHeight + floatingTopHeight;\n    const normalisedFloatingBottomHeight = !floatingBottomHeight ? 0 : additionalHeight + floatingBottomHeight;\n    this.comp.setTopHeight(normalisedFloatingTopHeight);\n    this.comp.setBottomHeight(normalisedFloatingBottomHeight);\n    this.comp.setTopInvisible(normalisedFloatingTopHeight <= 0);\n    this.comp.setBottomInvisible(normalisedFloatingBottomHeight <= 0);\n    this.setStickyTopOffsetTop();\n    this.setStickyBottomOffsetBottom();\n  }\n  setStickyTopHeight(height = 0) {\n    this.comp.setStickyTopHeight(`${height}px`);\n    this.stickyTopHeight = height;\n  }\n  setStickyBottomHeight(height = 0) {\n    this.comp.setStickyBottomHeight(`${height}px`);\n    this.stickyBottomHeight = height;\n  }\n  setStickyWidth(vScrollVisible) {\n    if (!vScrollVisible) {\n      this.comp.setStickyTopWidth(\"100%\");\n      this.comp.setStickyBottomWidth(\"100%\");\n    } else {\n      const scrollbarWidth = this.scrollVisibleSvc.getScrollbarWidth();\n      this.comp.setStickyTopWidth(`calc(100% - ${scrollbarWidth}px)`);\n      this.comp.setStickyBottomWidth(`calc(100% - ${scrollbarWidth}px)`);\n    }\n  }\n  setStickyTopOffsetTop() {\n    const headerCtrl = this.ctrlsSvc.get(\"gridHeaderCtrl\");\n    const headerHeight = headerCtrl.headerHeight + (this.filterManager?.getHeaderHeight() ?? 0);\n    const pinnedTopHeight = this.pinnedRowModel?.getPinnedTopTotalHeight() ?? 0;\n    let height = 0;\n    if (headerHeight > 0) {\n      height += headerHeight;\n    }\n    if (pinnedTopHeight > 0) {\n      height += pinnedTopHeight;\n    }\n    if (height > 0) {\n      height += 1;\n    }\n    this.comp.setStickyTopTop(`${height}px`);\n  }\n  setStickyBottomOffsetBottom() {\n    const {\n      pinnedRowModel,\n      scrollVisibleSvc,\n      comp\n    } = this;\n    const pinnedBottomHeight = pinnedRowModel?.getPinnedBottomTotalHeight() ?? 0;\n    const hScrollShowing = scrollVisibleSvc.horizontalScrollShowing;\n    const scrollbarWidth = hScrollShowing ? scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\n    const height = pinnedBottomHeight + scrollbarWidth;\n    comp.setStickyBottomBottom(`${height}px`);\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/abstractFakeScrollComp.ts\nvar AbstractFakeScrollComp = class extends Component {\n  constructor(template, direction) {\n    super();\n    this.direction = direction;\n    this.eViewport = RefPlaceholder;\n    this.eContainer = RefPlaceholder;\n    this.hideTimeout = 0;\n    this.setTemplate(template);\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      scrollVisibilityChanged: this.onScrollVisibilityChanged.bind(this)\n    });\n    this.onScrollVisibilityChanged();\n    this.toggleCss(\"ag-apple-scrollbar\", _isMacOsUserAgent() || _isIOSUserAgent());\n  }\n  destroy() {\n    super.destroy();\n    window.clearTimeout(this.hideTimeout);\n  }\n  initialiseInvisibleScrollbar() {\n    if (this.invisibleScrollbar !== void 0) {\n      return;\n    }\n    this.invisibleScrollbar = _isInvisibleScrollbar();\n    if (this.invisibleScrollbar) {\n      this.hideAndShowInvisibleScrollAsNeeded();\n      this.addActiveListenerToggles();\n    }\n  }\n  addActiveListenerToggles() {\n    const eGui = this.getGui();\n    const onActivate = () => this.toggleCss(\"ag-scrollbar-active\", true);\n    const onDeactivate = () => this.toggleCss(\"ag-scrollbar-active\", false);\n    this.addManagedListeners(eGui, {\n      mouseenter: onActivate,\n      mousedown: onActivate,\n      touchstart: onActivate,\n      mouseleave: onDeactivate,\n      touchend: onDeactivate\n    });\n  }\n  onScrollVisibilityChanged() {\n    if (this.invisibleScrollbar === void 0) {\n      this.initialiseInvisibleScrollbar();\n    }\n    _requestAnimationFrame(this.beans, () => this.setScrollVisible());\n  }\n  hideAndShowInvisibleScrollAsNeeded() {\n    this.addManagedEventListeners({\n      bodyScroll: params => {\n        if (params.direction === this.direction) {\n          if (this.hideTimeout) {\n            window.clearTimeout(this.hideTimeout);\n            this.hideTimeout = 0;\n          }\n          this.toggleCss(\"ag-scrollbar-scrolling\", true);\n        }\n      },\n      bodyScrollEnd: () => {\n        this.hideTimeout = window.setTimeout(() => {\n          this.toggleCss(\"ag-scrollbar-scrolling\", false);\n          this.hideTimeout = 0;\n        }, 400);\n      }\n    });\n  }\n  attemptSettingScrollPosition(value) {\n    const viewport = this.eViewport;\n    _waitUntil(() => _isVisible(viewport), () => this.setScrollPosition(value), 100);\n  }\n  onScrollCallback(fn) {\n    this.addManagedElementListeners(this.eViewport, {\n      scroll: fn\n    });\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/fakeHScrollComp.ts\nvar FakeHScrollElement = {\n  tag: \"div\",\n  cls: \"ag-body-horizontal-scroll\",\n  attrs: {\n    \"aria-hidden\": \"true\"\n  },\n  children: [{\n    tag: \"div\",\n    ref: \"eLeftSpacer\",\n    cls: \"ag-horizontal-left-spacer\"\n  }, {\n    tag: \"div\",\n    ref: \"eViewport\",\n    cls: \"ag-body-horizontal-scroll-viewport\",\n    children: [{\n      tag: \"div\",\n      ref: \"eContainer\",\n      cls: \"ag-body-horizontal-scroll-container\"\n    }]\n  }, {\n    tag: \"div\",\n    ref: \"eRightSpacer\",\n    cls: \"ag-horizontal-right-spacer\"\n  }]\n};\nvar FakeHScrollComp = class extends AbstractFakeScrollComp {\n  constructor() {\n    super(FakeHScrollElement, \"horizontal\");\n    this.eLeftSpacer = RefPlaceholder;\n    this.eRightSpacer = RefPlaceholder;\n    this.setScrollVisibleDebounce = 0;\n  }\n  wireBeans(beans) {\n    this.visibleCols = beans.visibleCols;\n    this.scrollVisibleSvc = beans.scrollVisibleSvc;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const spacerWidthsListener = this.setFakeHScrollSpacerWidths.bind(this);\n    this.addManagedEventListeners({\n      displayedColumnsChanged: spacerWidthsListener,\n      displayedColumnsWidthChanged: spacerWidthsListener,\n      pinnedRowDataChanged: this.refreshCompBottom.bind(this)\n    });\n    this.addManagedPropertyListener(\"domLayout\", spacerWidthsListener);\n    this.beans.ctrlsSvc.register(\"fakeHScrollComp\", this);\n    this.createManagedBean(new CenterWidthFeature(width => this.eContainer.style.width = `${width}px`));\n    this.addManagedPropertyListeners([\"suppressHorizontalScroll\"], this.onScrollVisibilityChanged.bind(this));\n  }\n  destroy() {\n    window.clearTimeout(this.setScrollVisibleDebounce);\n    super.destroy();\n  }\n  initialiseInvisibleScrollbar() {\n    if (this.invisibleScrollbar !== void 0) {\n      return;\n    }\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    super.initialiseInvisibleScrollbar();\n    if (this.invisibleScrollbar) {\n      this.refreshCompBottom();\n    }\n  }\n  refreshCompBottom() {\n    if (!this.invisibleScrollbar) {\n      return;\n    }\n    const bottomPinnedHeight = this.beans.pinnedRowModel?.getPinnedBottomTotalHeight() ?? 0;\n    this.getGui().style.bottom = `${bottomPinnedHeight}px`;\n  }\n  onScrollVisibilityChanged() {\n    super.onScrollVisibilityChanged();\n    this.setFakeHScrollSpacerWidths();\n  }\n  setFakeHScrollSpacerWidths() {\n    const vScrollShowing = this.scrollVisibleSvc.verticalScrollShowing;\n    let rightSpacing = this.visibleCols.getDisplayedColumnsRightWidth();\n    const scrollOnRight = !this.enableRtl && vScrollShowing;\n    const scrollbarWidth = this.scrollVisibleSvc.getScrollbarWidth();\n    if (scrollOnRight) {\n      rightSpacing += scrollbarWidth;\n    }\n    _setFixedWidth(this.eRightSpacer, rightSpacing);\n    this.eRightSpacer.classList.toggle(\"ag-scroller-corner\", rightSpacing <= scrollbarWidth);\n    let leftSpacing = this.visibleCols.getColsLeftWidth();\n    const scrollOnLeft = this.enableRtl && vScrollShowing;\n    if (scrollOnLeft) {\n      leftSpacing += scrollbarWidth;\n    }\n    _setFixedWidth(this.eLeftSpacer, leftSpacing);\n    this.eLeftSpacer.classList.toggle(\"ag-scroller-corner\", leftSpacing <= scrollbarWidth);\n  }\n  setScrollVisible() {\n    const hScrollShowing = this.scrollVisibleSvc.horizontalScrollShowing;\n    const invisibleScrollbar2 = this.invisibleScrollbar;\n    const isSuppressHorizontalScroll = this.gos.get(\"suppressHorizontalScroll\");\n    const scrollbarWidth = hScrollShowing ? this.scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\n    const scrollContainerSize = !isSuppressHorizontalScroll ? adjustedScrollbarWidth : 0;\n    const apply = () => {\n      this.setScrollVisibleDebounce = 0;\n      this.toggleCss(\"ag-scrollbar-invisible\", invisibleScrollbar2);\n      _setFixedHeight(this.getGui(), scrollContainerSize);\n      _setFixedHeight(this.eViewport, scrollContainerSize);\n      _setFixedHeight(this.eContainer, scrollContainerSize);\n      if (!scrollContainerSize) {\n        this.eContainer.style.setProperty(\"min-height\", \"1px\");\n      }\n      this.setVisible(hScrollShowing, {\n        skipAriaHidden: true\n      });\n    };\n    window.clearTimeout(this.setScrollVisibleDebounce);\n    if (!hScrollShowing) {\n      apply();\n    } else {\n      this.setScrollVisibleDebounce = window.setTimeout(apply, 100);\n    }\n  }\n  getScrollPosition() {\n    return _getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  setScrollPosition(value) {\n    if (!_isVisible(this.eViewport)) {\n      this.attemptSettingScrollPosition(value);\n    }\n    _setScrollLeft(this.eViewport, value, this.enableRtl);\n  }\n};\nvar FakeHScrollSelector = {\n  selector: \"AG-FAKE-HORIZONTAL-SCROLL\",\n  component: FakeHScrollComp\n};\n\n// packages/ag-grid-community/src/gridBodyComp/fakeVScrollComp.ts\nvar FakeVScrollElement = {\n  tag: \"div\",\n  cls: \"ag-body-vertical-scroll\",\n  attrs: {\n    \"aria-hidden\": \"true\"\n  },\n  children: [{\n    tag: \"div\",\n    ref: \"eViewport\",\n    cls: \"ag-body-vertical-scroll-viewport\",\n    children: [{\n      tag: \"div\",\n      ref: \"eContainer\",\n      cls: \"ag-body-vertical-scroll-container\"\n    }]\n  }]\n};\nvar FakeVScrollComp = class extends AbstractFakeScrollComp {\n  constructor() {\n    super(FakeVScrollElement, \"vertical\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.createManagedBean(new SetHeightFeature(this.eContainer));\n    const {\n      ctrlsSvc\n    } = this.beans;\n    ctrlsSvc.register(\"fakeVScrollComp\", this);\n    this.addManagedEventListeners({\n      rowContainerHeightChanged: this.onRowContainerHeightChanged.bind(this, ctrlsSvc)\n    });\n  }\n  setScrollVisible() {\n    const {\n      scrollVisibleSvc\n    } = this.beans;\n    const vScrollShowing = scrollVisibleSvc.verticalScrollShowing;\n    const invisibleScrollbar2 = this.invisibleScrollbar;\n    const scrollbarWidth = vScrollShowing ? scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\n    this.toggleCss(\"ag-scrollbar-invisible\", invisibleScrollbar2);\n    _setFixedWidth(this.getGui(), adjustedScrollbarWidth);\n    _setFixedWidth(this.eViewport, adjustedScrollbarWidth);\n    _setFixedWidth(this.eContainer, adjustedScrollbarWidth);\n    this.setDisplayed(vScrollShowing, {\n      skipAriaHidden: true\n    });\n  }\n  onRowContainerHeightChanged(ctrlsSvc) {\n    const gridBodyCtrl = ctrlsSvc.getGridBodyCtrl();\n    const gridBodyViewportEl = gridBodyCtrl.eBodyViewport;\n    const eViewportScrollTop = this.getScrollPosition();\n    const gridBodyViewportScrollTop = gridBodyViewportEl.scrollTop;\n    if (eViewportScrollTop != gridBodyViewportScrollTop) {\n      this.setScrollPosition(gridBodyViewportScrollTop, true);\n    }\n  }\n  getScrollPosition() {\n    return this.eViewport.scrollTop;\n  }\n  setScrollPosition(value, force) {\n    if (!force && !_isVisible(this.eViewport)) {\n      this.attemptSettingScrollPosition(value);\n    }\n    this.eViewport.scrollTop = value;\n  }\n};\nvar FakeVScrollSelector = {\n  selector: \"AG-FAKE-VERTICAL-SCROLL\",\n  component: FakeVScrollComp\n};\n\n// packages/ag-grid-community/src/headerRendering/headerUtils.ts\nfunction getHeaderRowCount(colModel) {\n  if (!colModel.cols) {\n    return -1;\n  }\n  return colModel.cols.treeDepth + 1;\n}\nfunction getFocusHeaderRowCount(beans) {\n  return beans.ctrlsSvc.getHeaderRowContainerCtrl()?.getRowCount() ?? 0;\n}\nfunction getGroupRowsHeight(beans) {\n  const heights = [];\n  const headerRowContainerCtrls = beans.ctrlsSvc.getHeaderRowContainerCtrls();\n  for (const headerRowContainerCtrl of headerRowContainerCtrls) {\n    if (!headerRowContainerCtrl) {\n      continue;\n    }\n    const groupRowCount = headerRowContainerCtrl.getGroupRowCount() || 0;\n    for (let i = 0; i < groupRowCount; i++) {\n      const headerRowCtrl = headerRowContainerCtrl.getGroupRowCtrlAtIndex(i);\n      const currentHeightAtPos = heights[i];\n      if (headerRowCtrl) {\n        const newHeight = getColumnGroupHeaderRowHeight(beans, headerRowCtrl);\n        if (currentHeightAtPos == null || newHeight > currentHeightAtPos) {\n          heights[i] = newHeight;\n        }\n      }\n    }\n  }\n  return heights;\n}\nfunction getColumnGroupHeaderRowHeight(beans, headerRowCtrl) {\n  const defaultHeight = beans.colModel.isPivotMode() ? getPivotGroupHeaderHeight(beans) : getGroupHeaderHeight(beans);\n  let maxDisplayedHeight = defaultHeight;\n  const headerRowCellCtrls = headerRowCtrl.getHeaderCellCtrls();\n  for (const headerCellCtrl of headerRowCellCtrls) {\n    const {\n      column\n    } = headerCellCtrl;\n    const height = column.getAutoHeaderHeight();\n    if (height != null && height > maxDisplayedHeight && column.isAutoHeaderHeight()) {\n      maxDisplayedHeight = height;\n    }\n  }\n  return maxDisplayedHeight;\n}\nfunction getColumnHeaderRowHeight(beans) {\n  const defaultHeight = beans.colModel.isPivotMode() ? getPivotHeaderHeight(beans) : getHeaderHeight(beans);\n  let maxDisplayedHeight = defaultHeight;\n  beans.colModel.forAllCols(col => {\n    const height = col.getAutoHeaderHeight();\n    if (height != null && height > maxDisplayedHeight && col.isAutoHeaderHeight()) {\n      maxDisplayedHeight = height;\n    }\n  });\n  return maxDisplayedHeight;\n}\nfunction getHeaderHeight(beans) {\n  return beans.gos.get(\"headerHeight\") ?? beans.environment.getDefaultHeaderHeight();\n}\nfunction getFloatingFiltersHeight(beans) {\n  return beans.gos.get(\"floatingFiltersHeight\") ?? getHeaderHeight(beans);\n}\nfunction getGroupHeaderHeight(beans) {\n  return beans.gos.get(\"groupHeaderHeight\") ?? getHeaderHeight(beans);\n}\nfunction getPivotHeaderHeight(beans) {\n  return beans.gos.get(\"pivotHeaderHeight\") ?? getHeaderHeight(beans);\n}\nfunction getPivotGroupHeaderHeight(beans) {\n  return beans.gos.get(\"pivotGroupHeaderHeight\") ?? getGroupHeaderHeight(beans);\n}\n\n// packages/ag-grid-community/src/headerRendering/gridHeaderCtrl.ts\nvar GridHeaderCtrl = class extends BeanStub {\n  setComp(comp, eGui, eFocusableElement) {\n    this.comp = comp;\n    this.eGui = eGui;\n    const {\n      beans\n    } = this;\n    const {\n      headerNavigation,\n      touchSvc,\n      ctrlsSvc\n    } = beans;\n    if (headerNavigation) {\n      this.createManagedBean(new ManagedFocusFeature(eFocusableElement, {\n        onTabKeyDown: this.onTabKeyDown.bind(this),\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusOut: this.onFocusOut.bind(this)\n      }));\n    }\n    this.addManagedEventListeners({\n      columnPivotModeChanged: this.onPivotModeChanged.bind(this, beans),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this, beans)\n    });\n    this.onPivotModeChanged(beans);\n    this.setupHeaderHeight();\n    const listener = this.onHeaderContextMenu.bind(this);\n    this.addManagedElementListeners(this.eGui, {\n      contextmenu: listener\n    });\n    touchSvc?.mockHeaderContextMenu(this, listener);\n    ctrlsSvc.register(\"gridHeaderCtrl\", this);\n  }\n  setupHeaderHeight() {\n    const listener = this.setHeaderHeight.bind(this);\n    listener();\n    this.addManagedPropertyListeners([\"headerHeight\", \"pivotHeaderHeight\", \"groupHeaderHeight\", \"pivotGroupHeaderHeight\", \"floatingFiltersHeight\"], listener);\n    this.addManagedEventListeners({\n      headerRowsChanged: listener,\n      columnHeaderHeightChanged: listener,\n      // add this to the animation frame to avoid a feedback loop\n      columnGroupHeaderHeightChanged: () => _requestAnimationFrame(this.beans, () => listener()),\n      gridStylesChanged: listener,\n      advancedFilterEnabledChanged: listener\n    });\n  }\n  setHeaderHeight() {\n    const {\n      beans\n    } = this;\n    let totalHeaderHeight = 0;\n    const groupHeight = getGroupRowsHeight(beans).reduce((prev, curr) => prev + curr, 0);\n    const headerHeight = getColumnHeaderRowHeight(beans);\n    if (beans.filterManager?.hasFloatingFilters()) {\n      totalHeaderHeight += getFloatingFiltersHeight(beans);\n    }\n    totalHeaderHeight += groupHeight;\n    totalHeaderHeight += headerHeight;\n    if (this.headerHeight === totalHeaderHeight) {\n      return;\n    }\n    this.headerHeight = totalHeaderHeight;\n    const px = `${totalHeaderHeight + 1}px`;\n    this.comp.setHeightAndMinHeight(px);\n    this.eventSvc.dispatchEvent({\n      type: \"headerHeightChanged\"\n    });\n  }\n  onPivotModeChanged(beans) {\n    const pivotMode = beans.colModel.isPivotMode();\n    this.comp.toggleCss(\"ag-pivot-on\", pivotMode);\n    this.comp.toggleCss(\"ag-pivot-off\", !pivotMode);\n  }\n  onDisplayedColumnsChanged(beans) {\n    const columns = beans.visibleCols.allCols;\n    const shouldAllowOverflow = columns.some(col => col.isSpanHeaderHeight());\n    this.comp.toggleCss(\"ag-header-allow-overflow\", shouldAllowOverflow);\n  }\n  onTabKeyDown(e) {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const backwards = e.shiftKey;\n    const direction = backwards !== isRtl ? \"LEFT\" : \"RIGHT\";\n    const {\n      beans\n    } = this;\n    const {\n      headerNavigation,\n      focusSvc\n    } = beans;\n    if (headerNavigation.navigateHorizontally(direction, true, e) || !backwards && focusSvc.focusOverlay(false) || _focusNextGridCoreContainer(beans, backwards, true)) {\n      e.preventDefault();\n    }\n  }\n  handleKeyDown(e) {\n    let direction = null;\n    const {\n      headerNavigation\n    } = this.beans;\n    switch (e.key) {\n      case KeyCode.LEFT:\n        direction = \"LEFT\";\n      case KeyCode.RIGHT:\n        {\n          if (!_exists(direction)) {\n            direction = \"RIGHT\";\n          }\n          if (headerNavigation.navigateHorizontally(direction, false, e)) {\n            e.preventDefault();\n          }\n          break;\n        }\n      case KeyCode.UP:\n        direction = \"UP\";\n      case KeyCode.DOWN:\n        {\n          if (!_exists(direction)) {\n            direction = \"DOWN\";\n          }\n          if (headerNavigation.navigateVertically(direction, e)) {\n            e.preventDefault();\n          }\n          break;\n        }\n      default:\n        return;\n    }\n  }\n  onFocusOut(e) {\n    const {\n      relatedTarget\n    } = e;\n    const {\n      eGui,\n      beans\n    } = this;\n    if (!relatedTarget && eGui.contains(_getActiveDomElement(beans))) {\n      return;\n    }\n    if (!eGui.contains(relatedTarget)) {\n      beans.focusSvc.focusedHeader = null;\n    }\n  }\n  onHeaderContextMenu(mouseEvent, touch, touchEvent) {\n    const {\n      menuSvc,\n      ctrlsSvc\n    } = this.beans;\n    if (!mouseEvent && !touchEvent || !menuSvc?.isHeaderContextMenuEnabled()) {\n      return;\n    }\n    const {\n      target\n    } = mouseEvent ?? touch;\n    if (target === this.eGui || target === ctrlsSvc.getHeaderRowContainerCtrl()?.eViewport) {\n      menuSvc.showHeaderContextMenu(void 0, mouseEvent, touchEvent);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/abstractCell/abstractHeaderCellComp.ts\nvar AbstractHeaderCellComp = class extends Component {\n  constructor(template, ctrl) {\n    super(template);\n    this.ctrl = ctrl;\n  }\n  getCtrl() {\n    return this.ctrl;\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/column/headerCellComp.ts\nvar HeaderCellElement = {\n  tag: \"div\",\n  cls: \"ag-header-cell\",\n  role: \"columnheader\",\n  children: [{\n    tag: \"div\",\n    ref: \"eResize\",\n    cls: \"ag-header-cell-resize\",\n    role: \"presentation\"\n  }, {\n    tag: \"div\",\n    ref: \"eHeaderCompWrapper\",\n    cls: \"ag-header-cell-comp-wrapper\",\n    role: \"presentation\"\n  }]\n};\nvar HeaderCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(HeaderCellElement, ctrl);\n    this.eResize = RefPlaceholder;\n    this.eHeaderCompWrapper = RefPlaceholder;\n    this.headerCompVersion = 0;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const setAttribute = (name, value) => {\n      if (value != null && value != \"\") {\n        eGui.setAttribute(name, value);\n      } else {\n        eGui.removeAttribute(name);\n      }\n    };\n    const refreshSelectAllGui = () => {\n      const selectAllGui = this.ctrl.getSelectAllGui();\n      if (selectAllGui) {\n        this.eResize.insertAdjacentElement(\"afterend\", selectAllGui);\n        this.addDestroyFunc(() => selectAllGui.remove());\n      }\n    };\n    setAttribute(\"col-id\", this.ctrl.column.getColId());\n    const compProxy = {\n      setWidth: width => eGui.style.width = width,\n      toggleCss: (cssClassName, on) => this.toggleCss(cssClassName, on),\n      setUserStyles: styles => _addStylesToElement(eGui, styles),\n      setAriaSort: sort => sort ? _setAriaSort(eGui, sort) : _removeAriaSort(eGui),\n      setUserCompDetails: compDetails => this.setUserCompDetails(compDetails),\n      getUserCompInstance: () => this.headerComp,\n      refreshSelectAllGui,\n      removeSelectAllGui: () => this.ctrl.getSelectAllGui()?.remove()\n    };\n    this.ctrl.setComp(compProxy, this.getGui(), this.eResize, this.eHeaderCompWrapper, void 0);\n    refreshSelectAllGui();\n  }\n  destroy() {\n    this.destroyHeaderComp();\n    super.destroy();\n  }\n  destroyHeaderComp() {\n    if (this.headerComp) {\n      this.eHeaderCompWrapper.removeChild(this.headerCompGui);\n      this.headerComp = this.destroyBean(this.headerComp);\n      this.headerCompGui = void 0;\n    }\n  }\n  setUserCompDetails(compDetails) {\n    this.headerCompVersion++;\n    const versionCopy = this.headerCompVersion;\n    compDetails.newAgStackInstance().then(comp => this.afterCompCreated(versionCopy, comp));\n  }\n  afterCompCreated(version, headerComp) {\n    if (version != this.headerCompVersion || !this.isAlive()) {\n      this.destroyBean(headerComp);\n      return;\n    }\n    this.destroyHeaderComp();\n    this.headerComp = headerComp;\n    this.headerCompGui = headerComp.getGui();\n    this.eHeaderCompWrapper.appendChild(this.headerCompGui);\n    this.ctrl.setDragSource(this.getGui());\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/headerGroupCellComp.ts\nvar HeaderGroupCellCompElement = {\n  tag: \"div\",\n  cls: \"ag-header-group-cell\",\n  role: \"columnheader\",\n  children: [{\n    tag: \"div\",\n    ref: \"eHeaderCompWrapper\",\n    cls: \"ag-header-cell-comp-wrapper\",\n    role: \"presentation\"\n  }, {\n    tag: \"div\",\n    ref: \"eResize\",\n    cls: \"ag-header-cell-resize\",\n    role: \"presentation\"\n  }]\n};\nvar HeaderGroupCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(HeaderGroupCellCompElement, ctrl);\n    this.eResize = RefPlaceholder;\n    this.eHeaderCompWrapper = RefPlaceholder;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const setAttribute = (key, value) => value != void 0 ? eGui.setAttribute(key, value) : eGui.removeAttribute(key);\n    eGui.setAttribute(\"col-id\", this.ctrl.column.getUniqueId());\n    const compProxy = {\n      toggleCss: (cssClassName, on) => this.toggleCss(cssClassName, on),\n      setUserStyles: styles => _addStylesToElement(eGui, styles),\n      setHeaderWrapperHidden: hidden => {\n        if (hidden) {\n          this.eHeaderCompWrapper.style.setProperty(\"display\", \"none\");\n        } else {\n          this.eHeaderCompWrapper.style.removeProperty(\"display\");\n        }\n      },\n      setHeaderWrapperMaxHeight: value => {\n        if (value != null) {\n          this.eHeaderCompWrapper.style.setProperty(\"max-height\", `${value}px`);\n        } else {\n          this.eHeaderCompWrapper.style.removeProperty(\"max-height\");\n        }\n        this.eHeaderCompWrapper.classList.toggle(\"ag-header-cell-comp-wrapper-limited-height\", value != null);\n      },\n      setResizableDisplayed: displayed => _setDisplayed(this.eResize, displayed),\n      setWidth: width => eGui.style.width = width,\n      setAriaExpanded: expanded => setAttribute(\"aria-expanded\", expanded),\n      setUserCompDetails: details => this.setUserCompDetails(details),\n      getUserCompInstance: () => this.headerGroupComp\n    };\n    this.ctrl.setComp(compProxy, eGui, this.eResize, this.eHeaderCompWrapper, void 0);\n  }\n  setUserCompDetails(details) {\n    details.newAgStackInstance().then(comp => this.afterHeaderCompCreated(comp));\n  }\n  afterHeaderCompCreated(headerGroupComp) {\n    const destroyFunc = () => this.destroyBean(headerGroupComp);\n    if (!this.isAlive()) {\n      destroyFunc();\n      return;\n    }\n    const eGui = this.getGui();\n    const eHeaderGroupGui = headerGroupComp.getGui();\n    this.eHeaderCompWrapper.appendChild(eHeaderGroupGui);\n    this.addDestroyFunc(destroyFunc);\n    this.headerGroupComp = headerGroupComp;\n    this.ctrl.setDragSource(eGui);\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/floatingFilter/headerFilterCellComp.ts\nvar HeaderFilterCellCompElement = {\n  tag: \"div\",\n  cls: \"ag-header-cell ag-floating-filter\",\n  role: \"gridcell\",\n  children: [{\n    tag: \"div\",\n    ref: \"eFloatingFilterBody\",\n    role: \"presentation\"\n  }, {\n    tag: \"div\",\n    ref: \"eButtonWrapper\",\n    cls: \"ag-floating-filter-button ag-hidden\",\n    role: \"presentation\",\n    children: [{\n      tag: \"button\",\n      ref: \"eButtonShowMainFilter\",\n      cls: \"ag-button ag-floating-filter-button-button\",\n      attrs: {\n        type: \"button\",\n        tabindex: \"-1\"\n      }\n    }]\n  }]\n};\nvar HeaderFilterCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(HeaderFilterCellCompElement, ctrl);\n    this.eFloatingFilterBody = RefPlaceholder;\n    this.eButtonWrapper = RefPlaceholder;\n    this.eButtonShowMainFilter = RefPlaceholder;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const compProxy = {\n      toggleCss: (cssClassName, on) => this.toggleCss(cssClassName, on),\n      setUserStyles: styles => _addStylesToElement(eGui, styles),\n      addOrRemoveBodyCssClass: (cssClassName, on) => this.eFloatingFilterBody.classList.toggle(cssClassName, on),\n      setButtonWrapperDisplayed: displayed => _setDisplayed(this.eButtonWrapper, displayed),\n      setCompDetails: compDetails => this.setCompDetails(compDetails),\n      getFloatingFilterComp: () => this.compPromise,\n      setWidth: width => eGui.style.width = width,\n      setMenuIcon: eIcon => this.eButtonShowMainFilter.appendChild(eIcon)\n    };\n    this.ctrl.setComp(compProxy, eGui, this.eButtonShowMainFilter, this.eFloatingFilterBody, void 0);\n  }\n  setCompDetails(compDetails) {\n    if (!compDetails) {\n      this.destroyFloatingFilterComp();\n      this.compPromise = null;\n      return;\n    }\n    this.compPromise = compDetails.newAgStackInstance();\n    this.compPromise.then(comp => this.afterCompCreated(comp));\n  }\n  destroy() {\n    this.destroyFloatingFilterComp();\n    super.destroy();\n  }\n  destroyFloatingFilterComp() {\n    if (this.floatingFilterComp) {\n      this.eFloatingFilterBody.removeChild(this.floatingFilterComp.getGui());\n      this.floatingFilterComp = this.destroyBean(this.floatingFilterComp);\n    }\n  }\n  afterCompCreated(comp) {\n    if (!comp) {\n      return;\n    }\n    if (!this.isAlive()) {\n      this.destroyBean(comp);\n      return;\n    }\n    this.destroyFloatingFilterComp();\n    this.floatingFilterComp = comp;\n    this.eFloatingFilterBody.appendChild(comp.getGui());\n    if (comp.afterGuiAttached) {\n      comp.afterGuiAttached();\n    }\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/row/headerRowComp.ts\nvar HeaderRowComp = class extends Component {\n  constructor(ctrl) {\n    super({\n      tag: \"div\",\n      cls: ctrl.headerRowClass,\n      role: \"row\"\n    });\n    this.ctrl = ctrl;\n    this.headerComps = {};\n  }\n  postConstruct() {\n    _setAriaRowIndex(this.getGui(), this.ctrl.getAriaRowIndex());\n    const compProxy = {\n      setHeight: height => this.getGui().style.height = height,\n      setTop: top => this.getGui().style.top = top,\n      setHeaderCtrls: (ctrls, forceOrder) => this.setHeaderCtrls(ctrls, forceOrder),\n      setWidth: width => this.getGui().style.width = width,\n      setRowIndex: rowIndex => _setAriaRowIndex(this.getGui(), rowIndex)\n    };\n    this.ctrl.setComp(compProxy, void 0);\n  }\n  destroy() {\n    this.setHeaderCtrls([], false);\n    super.destroy();\n  }\n  setHeaderCtrls(ctrls, forceOrder) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const oldComps = this.headerComps;\n    this.headerComps = {};\n    ctrls.forEach(ctrl => {\n      const id = ctrl.instanceId;\n      let comp = oldComps[id];\n      delete oldComps[id];\n      if (comp == null) {\n        comp = this.createHeaderComp(ctrl);\n        this.getGui().appendChild(comp.getGui());\n      }\n      this.headerComps[id] = comp;\n    });\n    Object.values(oldComps).forEach(comp => {\n      this.getGui().removeChild(comp.getGui());\n      this.destroyBean(comp);\n    });\n    if (forceOrder) {\n      const comps = Object.values(this.headerComps);\n      comps.sort((a, b) => {\n        const leftA = a.getCtrl().column.getLeft();\n        const leftB = b.getCtrl().column.getLeft();\n        return leftA - leftB;\n      });\n      const elementsInOrder = comps.map(c => c.getGui());\n      _setDomChildOrder(this.getGui(), elementsInOrder);\n    }\n  }\n  createHeaderComp(headerCtrl) {\n    let result;\n    switch (this.ctrl.type) {\n      case \"group\":\n        result = new HeaderGroupCellComp(headerCtrl);\n        break;\n      case \"filter\":\n        result = new HeaderFilterCellComp(headerCtrl);\n        break;\n      default:\n        result = new HeaderCellComp(headerCtrl);\n        break;\n    }\n    this.createBean(result);\n    result.setParentComponent(this);\n    return result;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/features/setLeftFeature.ts\nvar SetLeftFeature = class extends BeanStub {\n  constructor(columnOrGroup, eCell, beans, colsSpanning) {\n    super();\n    this.columnOrGroup = columnOrGroup;\n    this.eCell = eCell;\n    this.colsSpanning = colsSpanning;\n    this.columnOrGroup = columnOrGroup;\n    this.ariaEl = eCell.querySelector(\"[role=columnheader]\") || eCell;\n    this.beans = beans;\n  }\n  setColsSpanning(colsSpanning) {\n    this.colsSpanning = colsSpanning;\n    this.onLeftChanged();\n  }\n  getColumnOrGroup() {\n    const {\n      beans,\n      colsSpanning\n    } = this;\n    if (beans.gos.get(\"enableRtl\") && colsSpanning) {\n      return _last(colsSpanning);\n    }\n    return this.columnOrGroup;\n  }\n  postConstruct() {\n    const onLeftChanged = this.onLeftChanged.bind(this);\n    this.addManagedListeners(this.columnOrGroup, {\n      leftChanged: onLeftChanged\n    });\n    this.setLeftFirstTime();\n    this.addManagedEventListeners({\n      displayedColumnsWidthChanged: onLeftChanged\n    });\n    this.addManagedPropertyListener(\"domLayout\", onLeftChanged);\n  }\n  setLeftFirstTime() {\n    const {\n      gos,\n      colAnimation\n    } = this.beans;\n    const suppressMoveAnimation = gos.get(\"suppressColumnMoveAnimation\");\n    const oldLeftExists = _exists(this.columnOrGroup.getOldLeft());\n    const animateColumnMove = colAnimation?.isActive() && oldLeftExists && !suppressMoveAnimation;\n    if (animateColumnMove) {\n      this.animateInLeft();\n    } else {\n      this.onLeftChanged();\n    }\n  }\n  animateInLeft() {\n    const colOrGroup = this.getColumnOrGroup();\n    const oldActualLeft = this.modifyLeftForPrintLayout(colOrGroup, colOrGroup.getOldLeft());\n    const actualLeft = this.modifyLeftForPrintLayout(colOrGroup, colOrGroup.getLeft());\n    this.setLeft(oldActualLeft);\n    this.actualLeft = actualLeft;\n    this.beans.colAnimation.executeNextVMTurn(() => {\n      if (this.actualLeft === actualLeft) {\n        this.setLeft(actualLeft);\n      }\n    });\n  }\n  onLeftChanged() {\n    const colOrGroup = this.getColumnOrGroup();\n    const left = colOrGroup.getLeft();\n    this.actualLeft = this.modifyLeftForPrintLayout(colOrGroup, left);\n    this.setLeft(this.actualLeft);\n  }\n  modifyLeftForPrintLayout(colOrGroup, leftPosition) {\n    const {\n      gos,\n      visibleCols\n    } = this.beans;\n    const printLayout = _isDomLayout(gos, \"print\");\n    if (!printLayout) {\n      return leftPosition;\n    }\n    if (colOrGroup.getPinned() === \"left\") {\n      return leftPosition;\n    }\n    const leftWidth = visibleCols.getColsLeftWidth();\n    if (colOrGroup.getPinned() === \"right\") {\n      const bodyWidth = visibleCols.bodyWidth;\n      return leftWidth + bodyWidth + leftPosition;\n    }\n    return leftWidth + leftPosition;\n  }\n  setLeft(value) {\n    if (_exists(value)) {\n      this.eCell.style.left = `${value}px`;\n    }\n    if (isColumnGroup(this.columnOrGroup)) {\n      const children = this.columnOrGroup.getLeafColumns();\n      if (!children.length) {\n        return;\n      }\n      if (children.length > 1) {\n        _setAriaColSpan(this.ariaEl, children.length);\n      }\n    }\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/abstractCell/abstractHeaderCellCtrl.ts\nvar instanceIdSequence4 = 0;\nvar DOM_DATA_KEY_HEADER_CTRL = \"headerCtrl\";\nvar AbstractHeaderCellCtrl = class extends BeanStub {\n  constructor(column, rowCtrl) {\n    super();\n    this.column = column;\n    this.rowCtrl = rowCtrl;\n    this.resizeToggleTimeout = 0;\n    this.resizeMultiplier = 1;\n    this.resizeFeature = null;\n    this.lastFocusEvent = null;\n    this.dragSource = null;\n    this.instanceId = column.getUniqueId() + \"-\" + instanceIdSequence4++;\n  }\n  postConstruct() {\n    const refreshTabIndex = this.refreshTabIndex.bind(this);\n    this.addManagedPropertyListeners([\"suppressHeaderFocus\"], refreshTabIndex);\n    this.addManagedEventListeners({\n      overlayExclusiveChanged: refreshTabIndex\n    });\n  }\n  shouldStopEventPropagation(event) {\n    const {\n      headerRowIndex,\n      column\n    } = this.beans.focusSvc.focusedHeader;\n    const colDef = column.getDefinition();\n    const colDefFunc = colDef && colDef.suppressHeaderKeyboardEvent;\n    if (!_exists(colDefFunc)) {\n      return false;\n    }\n    const params = _addGridCommonParams(this.gos, {\n      colDef,\n      column,\n      headerRowIndex,\n      event\n    });\n    return !!colDefFunc(params);\n  }\n  getWrapperHasFocus() {\n    const activeEl = _getActiveDomElement(this.beans);\n    return activeEl === this.eGui;\n  }\n  setGui(eGui, compBean) {\n    this.eGui = eGui;\n    this.addDomData(compBean);\n    compBean.addManagedListeners(this.beans.eventSvc, {\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this)\n    });\n    compBean.addManagedElementListeners(this.eGui, {\n      focus: this.onGuiFocus.bind(this)\n    });\n    this.onDisplayedColumnsChanged();\n    this.refreshTabIndex();\n  }\n  refreshHeaderStyles() {\n    const colDef = this.column.getDefinition();\n    if (!colDef) {\n      return;\n    }\n    const {\n      headerStyle\n    } = colDef;\n    let styles;\n    if (typeof headerStyle === \"function\") {\n      const cellStyleParams = this.getHeaderClassParams();\n      styles = headerStyle(cellStyleParams);\n    } else {\n      styles = headerStyle;\n    }\n    if (styles) {\n      this.comp.setUserStyles(styles);\n    }\n  }\n  onGuiFocus() {\n    this.eventSvc.dispatchEvent({\n      type: \"headerFocused\",\n      column: this.column\n    });\n  }\n  setupAutoHeight(params) {\n    const {\n      wrapperElement,\n      checkMeasuringCallback,\n      compBean\n    } = params;\n    const {\n      beans\n    } = this;\n    const measureHeight = timesCalled => {\n      if (!this.isAlive() || !compBean.isAlive()) {\n        return;\n      }\n      const {\n        paddingTop,\n        paddingBottom,\n        borderBottomWidth,\n        borderTopWidth\n      } = _getElementSize(this.eGui);\n      const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\n      const wrapperHeight = wrapperElement.offsetHeight;\n      const autoHeight = wrapperHeight + extraHeight;\n      if (timesCalled < 5) {\n        const doc = _getDocument(beans);\n        const notYetInDom = !doc || !doc.contains(wrapperElement);\n        const possiblyNoContentYet = autoHeight == 0;\n        if (notYetInDom || possiblyNoContentYet) {\n          _batchCall(() => measureHeight(timesCalled + 1), \"raf\", beans);\n          return;\n        }\n      }\n      this.setColHeaderHeight(this.column, autoHeight);\n    };\n    let isMeasuring = false;\n    let stopResizeObserver;\n    const checkMeasuring = () => {\n      const newValue = this.column.isAutoHeaderHeight();\n      if (newValue && !isMeasuring) {\n        startMeasuring();\n      }\n      if (!newValue && isMeasuring) {\n        stopMeasuring();\n      }\n    };\n    const startMeasuring = () => {\n      isMeasuring = true;\n      measureHeight(0);\n      this.comp.toggleCss(\"ag-header-cell-auto-height\", true);\n      stopResizeObserver = _observeResize(this.beans, wrapperElement, () => measureHeight(0));\n    };\n    const stopMeasuring = () => {\n      isMeasuring = false;\n      if (stopResizeObserver) {\n        stopResizeObserver();\n      }\n      this.comp.toggleCss(\"ag-header-cell-auto-height\", false);\n      stopResizeObserver = void 0;\n    };\n    checkMeasuring();\n    compBean.addDestroyFunc(() => stopMeasuring());\n    compBean.addManagedListeners(this.column, {\n      widthChanged: () => isMeasuring && measureHeight(0)\n    });\n    compBean.addManagedEventListeners({\n      sortChanged: () => {\n        if (isMeasuring) {\n          window.setTimeout(() => measureHeight(0));\n        }\n      }\n    });\n    if (checkMeasuringCallback) {\n      checkMeasuringCallback(checkMeasuring);\n    }\n  }\n  onDisplayedColumnsChanged() {\n    const {\n      comp,\n      column,\n      beans,\n      eGui\n    } = this;\n    if (!comp || !column || !eGui) {\n      return;\n    }\n    refreshFirstAndLastStyles(comp, column, beans.visibleCols);\n    _setAriaColIndex(eGui, beans.visibleCols.getAriaColIndex(column));\n  }\n  addResizeAndMoveKeyboardListeners(compBean) {\n    compBean.addManagedListeners(this.eGui, {\n      keydown: this.onGuiKeyDown.bind(this),\n      keyup: this.onGuiKeyUp.bind(this)\n    });\n  }\n  refreshTabIndex() {\n    const suppressHeaderFocus = _isHeaderFocusSuppressed(this.beans);\n    if (this.eGui) {\n      _addOrRemoveAttribute(this.eGui, \"tabindex\", suppressHeaderFocus ? null : \"-1\");\n    }\n  }\n  onGuiKeyDown(e) {\n    const activeEl = _getActiveDomElement(this.beans);\n    const isLeftOrRight = e.key === KeyCode.LEFT || e.key === KeyCode.RIGHT;\n    if (this.isResizing) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n    if (\n    // if elements within the header are focused, we don't process the event\n    activeEl !== this.eGui ||\n    // if shiftKey and altKey are not pressed, it's cell navigation so we don't process the event\n    !e.shiftKey && !e.altKey) {\n      return;\n    }\n    if (this.isResizing || isLeftOrRight) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n    if (!isLeftOrRight) {\n      return;\n    }\n    const isLeft = e.key === KeyCode.LEFT !== this.gos.get(\"enableRtl\");\n    const direction = isLeft ? \"left\" : \"right\";\n    if (e.altKey) {\n      this.isResizing = true;\n      this.resizeMultiplier += 1;\n      const diff = this.getViewportAdjustedResizeDiff(e);\n      this.resizeHeader(diff, e.shiftKey);\n      this.resizeFeature?.toggleColumnResizing(true);\n    } else {\n      this.moveHeader(direction);\n    }\n  }\n  moveHeader(hDirection) {\n    this.beans.colMoves?.moveHeader(hDirection, this.eGui, this.column, this.rowCtrl.pinned, this);\n  }\n  getViewportAdjustedResizeDiff(e) {\n    const diff = this.getResizeDiff(e);\n    const {\n      pinnedCols\n    } = this.beans;\n    return pinnedCols ? pinnedCols.getHeaderResizeDiff(diff, this.column) : diff;\n  }\n  getResizeDiff(e) {\n    const {\n      gos,\n      column\n    } = this;\n    let isLeft = e.key === KeyCode.LEFT !== gos.get(\"enableRtl\");\n    const pinned = column.getPinned();\n    const isRtl = gos.get(\"enableRtl\");\n    if (pinned) {\n      if (isRtl !== (pinned === \"right\")) {\n        isLeft = !isLeft;\n      }\n    }\n    return (isLeft ? -1 : 1) * this.resizeMultiplier;\n  }\n  onGuiKeyUp() {\n    if (!this.isResizing) {\n      return;\n    }\n    if (this.resizeToggleTimeout) {\n      window.clearTimeout(this.resizeToggleTimeout);\n      this.resizeToggleTimeout = 0;\n    }\n    this.isResizing = false;\n    this.resizeMultiplier = 1;\n    this.resizeToggleTimeout = window.setTimeout(() => {\n      this.resizeFeature?.toggleColumnResizing(false);\n    }, 150);\n  }\n  handleKeyDown(e) {\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    switch (e.key) {\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        if (wrapperHasFocus) {\n          e.preventDefault();\n        }\n    }\n  }\n  addDomData(compBean) {\n    const key = DOM_DATA_KEY_HEADER_CTRL;\n    const {\n      eGui,\n      gos\n    } = this;\n    _setDomData(gos, eGui, key, this);\n    compBean.addDestroyFunc(() => _setDomData(gos, eGui, key, null));\n  }\n  focus(event) {\n    const {\n      eGui\n    } = this;\n    if (!eGui) {\n      return false;\n    }\n    this.lastFocusEvent = event || null;\n    eGui.focus();\n    return true;\n  }\n  focusThis() {\n    this.beans.focusSvc.focusedHeader = {\n      headerRowIndex: this.rowCtrl.rowIndex,\n      column: this.column\n    };\n  }\n  removeDragSource() {\n    if (this.dragSource) {\n      this.beans.dragAndDrop?.removeDragSource(this.dragSource);\n      this.dragSource = null;\n    }\n  }\n  handleContextMenuMouseEvent(mouseEvent, touchEvent, column) {\n    const event = mouseEvent ?? touchEvent;\n    const {\n      menuSvc,\n      gos\n    } = this.beans;\n    if (gos.get(\"preventDefaultOnContextMenu\")) {\n      event.preventDefault();\n    }\n    if (menuSvc?.isHeaderContextMenuEnabled(column)) {\n      menuSvc.showHeaderContextMenu(column, mouseEvent, touchEvent);\n    }\n    this.dispatchColumnMouseEvent(\"columnHeaderContextMenu\", column);\n  }\n  dispatchColumnMouseEvent(eventType, column) {\n    this.eventSvc.dispatchEvent({\n      type: eventType,\n      column\n    });\n  }\n  setColHeaderHeight(col, height) {\n    if (!col.setAutoHeaderHeight(height)) {\n      return;\n    }\n    const {\n      eventSvc\n    } = this;\n    if (col.isColumn) {\n      eventSvc.dispatchEvent({\n        type: \"columnHeaderHeightChanged\",\n        column: col,\n        columns: [col],\n        source: \"autosizeColumnHeaderHeight\"\n      });\n    } else {\n      eventSvc.dispatchEvent({\n        type: \"columnGroupHeaderHeightChanged\",\n        columnGroup: col,\n        source: \"autosizeColumnGroupHeaderHeight\"\n      });\n    }\n  }\n  clearComponent() {\n    this.removeDragSource();\n    this.resizeFeature = null;\n    this.comp = null;\n    this.eGui = null;\n  }\n  destroy() {\n    super.destroy();\n    this.column = null;\n    this.lastFocusEvent = null;\n    this.rowCtrl = null;\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/column/headerCellCtrl.ts\nvar HeaderCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor() {\n    super(...arguments);\n    this.refreshFunctions = {};\n    this.userHeaderClasses = /* @__PURE__ */new Set();\n    this.ariaDescriptionProperties = /* @__PURE__ */new Map();\n  }\n  setComp(comp, eGui, eResize, eHeaderCompWrapper, compBeanInput) {\n    this.comp = comp;\n    const {\n      rowCtrl,\n      column,\n      beans\n    } = this;\n    const {\n      colResize,\n      context,\n      colHover,\n      rangeSvc\n    } = beans;\n    const compBean = setupCompBean(this, context, compBeanInput);\n    this.setGui(eGui, compBean);\n    this.updateState();\n    this.setupWidth(compBean);\n    this.setupMovingCss(compBean);\n    this.setupMenuClass(compBean);\n    this.setupSortableClass(compBean);\n    this.setupWrapTextClass();\n    this.refreshSpanHeaderHeight();\n    this.setupAutoHeight({\n      wrapperElement: eHeaderCompWrapper,\n      checkMeasuringCallback: checkMeasuring => this.setRefreshFunction(\"measuring\", checkMeasuring),\n      compBean\n    });\n    this.addColumnHoverListener(compBean);\n    this.setupFilterClass(compBean);\n    this.setupStylesFromColDef();\n    this.setupClassesFromColDef();\n    this.setupTooltip();\n    this.addActiveHeaderMouseListeners(compBean);\n    this.setupSelectAll(compBean);\n    this.setupUserComp();\n    this.refreshAria();\n    if (colResize) {\n      this.resizeFeature = compBean.createManagedBean(colResize.createResizeFeature(rowCtrl.pinned, column, eResize, comp, this));\n    } else {\n      _setDisplayed(eResize, false);\n    }\n    colHover?.createHoverFeature(compBean, [column], eGui);\n    rangeSvc?.createRangeHighlightFeature(compBean, column, comp);\n    compBean.createManagedBean(new SetLeftFeature(column, eGui, beans));\n    compBean.createManagedBean(new ManagedFocusFeature(eGui, {\n      shouldStopEventPropagation: e => this.shouldStopEventPropagation(e),\n      onTabKeyDown: () => null,\n      handleKeyDown: this.handleKeyDown.bind(this),\n      onFocusIn: this.onFocusIn.bind(this),\n      onFocusOut: this.onFocusOut.bind(this)\n    }));\n    this.addResizeAndMoveKeyboardListeners(compBean);\n    compBean.addManagedPropertyListeners([\"suppressMovableColumns\", \"suppressMenuHide\", \"suppressAggFuncInHeader\", \"enableAdvancedFilter\"], () => this.refresh());\n    compBean.addManagedListeners(column, {\n      colDefChanged: () => this.refresh()\n    });\n    compBean.addManagedListeners(column, {\n      headerHighlightChanged: this.onHeaderHighlightChanged.bind(this)\n    });\n    const listener = () => this.checkDisplayName();\n    compBean.addManagedEventListeners({\n      columnValueChanged: listener,\n      columnRowGroupChanged: listener,\n      columnPivotChanged: listener,\n      headerHeightChanged: this.onHeaderHeightChanged.bind(this)\n    });\n    compBean.addDestroyFunc(() => {\n      this.refreshFunctions = {};\n      this.selectAllFeature = null;\n      this.dragSourceElement = void 0;\n      this.userCompDetails = null;\n      this.userHeaderClasses.clear();\n      this.ariaDescriptionProperties.clear();\n      this.clearComponent();\n    });\n  }\n  resizeHeader(delta, shiftKey) {\n    this.beans.colResize?.resizeHeader(this.column, delta, shiftKey);\n  }\n  getHeaderClassParams() {\n    const {\n      column,\n      beans\n    } = this;\n    const colDef = column.colDef;\n    return _addGridCommonParams(beans.gos, {\n      colDef,\n      column,\n      floatingFilter: false\n    });\n  }\n  setupUserComp() {\n    const compDetails = this.lookupUserCompDetails();\n    if (compDetails) {\n      this.setCompDetails(compDetails);\n    }\n  }\n  setCompDetails(compDetails) {\n    this.userCompDetails = compDetails;\n    this.comp.setUserCompDetails(compDetails);\n  }\n  lookupUserCompDetails() {\n    const params = this.createParams();\n    const colDef = this.column.getColDef();\n    return _getHeaderCompDetails(this.beans.userCompFactory, colDef, params);\n  }\n  createParams() {\n    const {\n      menuSvc,\n      sortSvc,\n      colFilter,\n      gos\n    } = this.beans;\n    const params = _addGridCommonParams(gos, {\n      column: this.column,\n      displayName: this.displayName,\n      enableSorting: this.column.isSortable(),\n      enableMenu: this.menuEnabled,\n      enableFilterButton: this.openFilterEnabled && !!menuSvc?.isHeaderFilterButtonEnabled(this.column),\n      enableFilterIcon: !!colFilter && (!this.openFilterEnabled || _isLegacyMenuEnabled(this.gos)),\n      showColumnMenu: (buttonElement, onClosedCallback) => {\n        menuSvc?.showColumnMenu({\n          column: this.column,\n          buttonElement,\n          positionBy: \"button\",\n          onClosedCallback\n        });\n      },\n      showColumnMenuAfterMouseClick: (mouseEvent, onClosedCallback) => {\n        menuSvc?.showColumnMenu({\n          column: this.column,\n          mouseEvent,\n          positionBy: \"mouse\",\n          onClosedCallback\n        });\n      },\n      showFilter: buttonElement => {\n        menuSvc?.showFilterMenu({\n          column: this.column,\n          buttonElement,\n          containerType: \"columnFilter\",\n          positionBy: \"button\"\n        });\n      },\n      progressSort: multiSort => {\n        sortSvc?.progressSort(this.column, !!multiSort, \"uiColumnSorted\");\n      },\n      setSort: (sort, multiSort) => {\n        sortSvc?.setSortForColumn(this.column, sort, !!multiSort, \"uiColumnSorted\");\n      },\n      eGridHeader: this.eGui,\n      setTooltip: (value, shouldDisplayTooltip) => {\n        gos.assertModuleRegistered(\"Tooltip\", 3);\n        this.setupTooltip(value, shouldDisplayTooltip);\n      }\n    });\n    return params;\n  }\n  setupSelectAll(compBean) {\n    const {\n      selectionSvc\n    } = this.beans;\n    if (!selectionSvc) {\n      return;\n    }\n    this.selectAllFeature = compBean.createOptionalManagedBean(selectionSvc.createSelectAllFeature(this.column));\n    this.selectAllFeature?.setComp(this);\n    compBean.addManagedPropertyListener(\"rowSelection\", () => {\n      const selectAllFeature = selectionSvc.createSelectAllFeature(this.column);\n      if (selectAllFeature && !this.selectAllFeature) {\n        this.selectAllFeature = compBean.createManagedBean(selectAllFeature);\n        this.selectAllFeature?.setComp(this);\n        this.comp.refreshSelectAllGui();\n      } else if (this.selectAllFeature && !selectAllFeature) {\n        this.comp.removeSelectAllGui();\n        this.selectAllFeature = this.destroyBean(this.selectAllFeature);\n      }\n    });\n  }\n  getSelectAllGui() {\n    return this.selectAllFeature?.getCheckboxGui();\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    if (e.key === KeyCode.SPACE) {\n      this.selectAllFeature?.onSpaceKeyDown(e);\n    }\n    if (e.key === KeyCode.ENTER) {\n      this.onEnterKeyDown(e);\n    }\n    if (e.key === KeyCode.DOWN && e.altKey) {\n      this.showMenuOnKeyPress(e, false);\n    }\n  }\n  onEnterKeyDown(e) {\n    if (e.ctrlKey || e.metaKey) {\n      this.showMenuOnKeyPress(e, true);\n    } else if (this.sortable) {\n      this.beans.sortSvc?.progressSort(this.column, e.shiftKey, \"uiColumnSorted\");\n    }\n  }\n  showMenuOnKeyPress(e, isFilterShortcut) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (!isHeaderComp(headerComp)) {\n      return;\n    }\n    if (headerComp.onMenuKeyboardShortcut(isFilterShortcut)) {\n      e.preventDefault();\n    }\n  }\n  onFocusIn(e) {\n    if (!this.eGui.contains(e.relatedTarget)) {\n      this.focusThis();\n      this.announceAriaDescription();\n    }\n    if (_isKeyboardMode()) {\n      this.setActiveHeader(true);\n    }\n  }\n  onFocusOut(e) {\n    if (this.eGui.contains(e.relatedTarget)) {\n      return;\n    }\n    this.setActiveHeader(false);\n  }\n  setupTooltip(value, shouldDisplayTooltip) {\n    this.tooltipFeature = this.beans.tooltipSvc?.setupHeaderTooltip(this.tooltipFeature, this, value, shouldDisplayTooltip);\n  }\n  setupStylesFromColDef() {\n    this.setRefreshFunction(\"headerStyles\", this.refreshHeaderStyles.bind(this));\n    this.refreshHeaderStyles();\n  }\n  setupClassesFromColDef() {\n    const refreshHeaderClasses = () => {\n      const colDef = this.column.getColDef();\n      const classes = _getHeaderClassesFromColDef(colDef, this.gos, this.column, null);\n      const oldClasses = this.userHeaderClasses;\n      this.userHeaderClasses = new Set(classes);\n      classes.forEach(c => {\n        if (oldClasses.has(c)) {\n          oldClasses.delete(c);\n        } else {\n          this.comp.toggleCss(c, true);\n        }\n      });\n      oldClasses.forEach(c => this.comp.toggleCss(c, false));\n    };\n    this.setRefreshFunction(\"headerClasses\", refreshHeaderClasses);\n    refreshHeaderClasses();\n  }\n  setDragSource(eSource) {\n    this.dragSourceElement = eSource;\n    this.removeDragSource();\n    if (!eSource || !this.draggable) {\n      return;\n    }\n    this.dragSource = this.beans.colMoves?.setDragSourceForHeader(eSource, this.column, this.displayName) ?? null;\n  }\n  updateState() {\n    const {\n      menuSvc\n    } = this.beans;\n    this.menuEnabled = !!menuSvc?.isColumnMenuInHeaderEnabled(this.column);\n    this.openFilterEnabled = !!menuSvc?.isFilterMenuInHeaderEnabled(this.column);\n    this.sortable = this.column.isSortable();\n    this.displayName = this.calculateDisplayName();\n    this.draggable = this.workOutDraggable();\n  }\n  setRefreshFunction(name, func) {\n    this.refreshFunctions[name] = func;\n  }\n  refresh() {\n    this.updateState();\n    this.refreshHeaderComp();\n    this.refreshAria();\n    Object.values(this.refreshFunctions).forEach(f => f());\n  }\n  refreshHeaderComp() {\n    const newCompDetails = this.lookupUserCompDetails();\n    if (!newCompDetails) {\n      return;\n    }\n    const compInstance = this.comp.getUserCompInstance();\n    const attemptRefresh = compInstance != null && this.userCompDetails.componentClass == newCompDetails.componentClass;\n    const headerCompRefreshed = attemptRefresh ? this.attemptHeaderCompRefresh(newCompDetails.params) : false;\n    if (headerCompRefreshed) {\n      this.setDragSource(this.dragSourceElement);\n    } else {\n      this.setCompDetails(newCompDetails);\n    }\n  }\n  attemptHeaderCompRefresh(params) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (!headerComp) {\n      return false;\n    }\n    if (!headerComp.refresh) {\n      return false;\n    }\n    const res = headerComp.refresh(params);\n    return res;\n  }\n  calculateDisplayName() {\n    return this.beans.colNames.getDisplayNameForColumn(this.column, \"header\", true);\n  }\n  checkDisplayName() {\n    if (this.displayName !== this.calculateDisplayName()) {\n      this.refresh();\n    }\n  }\n  workOutDraggable() {\n    const colDef = this.column.getColDef();\n    const isSuppressMovableColumns = this.gos.get(\"suppressMovableColumns\");\n    const colCanMove = !isSuppressMovableColumns && !colDef.suppressMovable && !colDef.lockPosition;\n    return !!colCanMove || !!colDef.enableRowGroup || !!colDef.enablePivot;\n  }\n  setupWidth(compBean) {\n    const listener = () => {\n      const columnWidth = this.column.getActualWidth();\n      this.comp.setWidth(`${columnWidth}px`);\n    };\n    compBean.addManagedListeners(this.column, {\n      widthChanged: listener\n    });\n    listener();\n  }\n  setupMovingCss(compBean) {\n    const listener = () => {\n      this.comp.toggleCss(\"ag-header-cell-moving\", this.column.isMoving());\n    };\n    compBean.addManagedListeners(this.column, {\n      movingChanged: listener\n    });\n    listener();\n  }\n  setupMenuClass(compBean) {\n    const listener = () => {\n      this.comp?.toggleCss(\"ag-column-menu-visible\", this.column.isMenuVisible());\n    };\n    compBean.addManagedListeners(this.column, {\n      menuVisibleChanged: listener\n    });\n    listener();\n  }\n  setupSortableClass(compBean) {\n    const updateSortableCssClass = () => {\n      this.comp.toggleCss(\"ag-header-cell-sortable\", !!this.sortable);\n    };\n    updateSortableCssClass();\n    this.setRefreshFunction(\"updateSortable\", updateSortableCssClass);\n    compBean.addManagedEventListeners({\n      sortChanged: this.refreshAriaSort.bind(this)\n    });\n  }\n  setupFilterClass(compBean) {\n    const listener = () => {\n      const isFilterActive = this.column.isFilterActive();\n      this.comp.toggleCss(\"ag-header-cell-filtered\", isFilterActive);\n      this.refreshAria();\n    };\n    compBean.addManagedListeners(this.column, {\n      filterActiveChanged: listener\n    });\n    listener();\n  }\n  setupWrapTextClass() {\n    const listener = () => {\n      const wrapText = !!this.column.getColDef().wrapHeaderText;\n      this.comp.toggleCss(\"ag-header-cell-wrap-text\", wrapText);\n    };\n    listener();\n    this.setRefreshFunction(\"wrapText\", listener);\n  }\n  onHeaderHighlightChanged() {\n    const highlighted = this.column.getHighlighted();\n    const beforeOn = highlighted === 0 /* Before */;\n    const afterOn = highlighted === 1 /* After */;\n    this.comp.toggleCss(\"ag-header-highlight-before\", beforeOn);\n    this.comp.toggleCss(\"ag-header-highlight-after\", afterOn);\n  }\n  onDisplayedColumnsChanged() {\n    super.onDisplayedColumnsChanged();\n    if (!this.isAlive()) {\n      return;\n    }\n    this.onHeaderHeightChanged();\n  }\n  onHeaderHeightChanged() {\n    this.refreshSpanHeaderHeight();\n  }\n  refreshSpanHeaderHeight() {\n    const {\n      eGui,\n      column,\n      comp,\n      beans\n    } = this;\n    const groupHeaderHeight = getGroupRowsHeight(this.beans);\n    const isZeroGroupHeight = groupHeaderHeight.reduce((total, next) => total += next, 0) === 0;\n    comp.toggleCss(\"ag-header-parent-hidden\", isZeroGroupHeight);\n    if (!column.isSpanHeaderHeight()) {\n      eGui.style.removeProperty(\"top\");\n      eGui.style.removeProperty(\"height\");\n      comp.toggleCss(\"ag-header-span-height\", false);\n      comp.toggleCss(\"ag-header-span-total\", false);\n      return;\n    }\n    const {\n      numberOfParents,\n      isSpanningTotal\n    } = this.column.getColumnGroupPaddingInfo();\n    comp.toggleCss(\"ag-header-span-height\", numberOfParents > 0);\n    const headerHeight = getColumnHeaderRowHeight(beans);\n    if (numberOfParents === 0) {\n      comp.toggleCss(\"ag-header-span-total\", false);\n      eGui.style.setProperty(\"top\", `0px`);\n      eGui.style.setProperty(\"height\", `${headerHeight}px`);\n      return;\n    }\n    comp.toggleCss(\"ag-header-span-total\", isSpanningTotal);\n    const indexToStartSpanning = (this.column.getFirstRealParent()?.getLevel() ?? -1) + 1;\n    const rowsToSpan = groupHeaderHeight.length - indexToStartSpanning;\n    let extraHeight = 0;\n    for (let i = 0; i < rowsToSpan; i++) {\n      extraHeight += groupHeaderHeight[groupHeaderHeight.length - 1 - i];\n    }\n    eGui.style.setProperty(\"top\", `${-extraHeight}px`);\n    eGui.style.setProperty(\"height\", `${headerHeight + extraHeight}px`);\n  }\n  refreshAriaSort() {\n    if (this.sortable) {\n      const translate = this.getLocaleTextFunc();\n      const sort = this.beans.sortSvc?.getDisplaySortForColumn(this.column) || null;\n      this.comp.setAriaSort(_getAriaSortState(sort));\n      this.setAriaDescriptionProperty(\"sort\", translate(\"ariaSortableColumn\", \"Press ENTER to sort\"));\n    } else {\n      this.comp.setAriaSort();\n      this.setAriaDescriptionProperty(\"sort\", null);\n    }\n  }\n  refreshAriaMenu() {\n    if (this.menuEnabled) {\n      const translate = this.getLocaleTextFunc();\n      this.setAriaDescriptionProperty(\"menu\", translate(\"ariaMenuColumn\", \"Press ALT DOWN to open column menu\"));\n    } else {\n      this.setAriaDescriptionProperty(\"menu\", null);\n    }\n  }\n  refreshAriaFilterButton() {\n    if (this.openFilterEnabled && !_isLegacyMenuEnabled(this.gos)) {\n      const translate = this.getLocaleTextFunc();\n      this.setAriaDescriptionProperty(\"filterButton\", translate(\"ariaFilterColumn\", \"Press CTRL ENTER to open filter\"));\n    } else {\n      this.setAriaDescriptionProperty(\"filterButton\", null);\n    }\n  }\n  refreshAriaFiltered() {\n    const translate = this.getLocaleTextFunc();\n    const isFilterActive = this.column.isFilterActive();\n    if (isFilterActive) {\n      this.setAriaDescriptionProperty(\"filter\", translate(\"ariaColumnFiltered\", \"Column Filtered\"));\n    } else {\n      this.setAriaDescriptionProperty(\"filter\", null);\n    }\n  }\n  setAriaDescriptionProperty(property, value) {\n    if (value != null) {\n      this.ariaDescriptionProperties.set(property, value);\n    } else {\n      this.ariaDescriptionProperties.delete(property);\n    }\n  }\n  announceAriaDescription() {\n    if (!this.eGui.contains(_getActiveDomElement(this.beans))) {\n      return;\n    }\n    const ariaDescription = Array.from(this.ariaDescriptionProperties.keys()).sort((a, b) => a === \"filter\" ? -1 : b.charCodeAt(0) - a.charCodeAt(0)).map(key => this.ariaDescriptionProperties.get(key)).join(\". \");\n    this.beans.ariaAnnounce?.announceValue(ariaDescription, \"columnHeader\");\n  }\n  refreshAria() {\n    this.refreshAriaSort();\n    this.refreshAriaMenu();\n    this.refreshAriaFilterButton();\n    this.refreshAriaFiltered();\n  }\n  addColumnHoverListener(compBean) {\n    this.beans.colHover?.addHeaderColumnHoverListener(compBean, this.comp, this.column);\n  }\n  addActiveHeaderMouseListeners(compBean) {\n    const listener = e => this.handleMouseOverChange(e.type === \"mouseenter\");\n    const clickListener = () => {\n      this.setActiveHeader(true);\n      this.dispatchColumnMouseEvent(\"columnHeaderClicked\", this.column);\n    };\n    const contextMenuListener = event => this.handleContextMenuMouseEvent(event, void 0, this.column);\n    compBean.addManagedListeners(this.eGui, {\n      mouseenter: listener,\n      mouseleave: listener,\n      click: clickListener,\n      contextmenu: contextMenuListener\n    });\n  }\n  handleMouseOverChange(isMouseOver) {\n    this.setActiveHeader(isMouseOver);\n    this.eventSvc.dispatchEvent({\n      type: isMouseOver ? \"columnHeaderMouseOver\" : \"columnHeaderMouseLeave\",\n      column: this.column\n    });\n  }\n  setActiveHeader(active) {\n    this.comp.toggleCss(\"ag-header-active\", active);\n  }\n  getAnchorElementForMenu(isFilter) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (isHeaderComp(headerComp)) {\n      return headerComp.getAnchorElementForMenu(isFilter);\n    }\n    return this.eGui;\n  }\n  destroy() {\n    this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    super.destroy();\n  }\n};\nfunction isHeaderComp(headerComp) {\n  return typeof headerComp?.getAnchorElementForMenu === \"function\" && typeof headerComp.onMenuKeyboardShortcut === \"function\";\n}\n\n// packages/ag-grid-community/src/headerRendering/row/headerRowCtrl.ts\nvar instanceIdSequence5 = 0;\nvar HeaderRowCtrl = class extends BeanStub {\n  constructor(rowIndex, pinned, type) {\n    super();\n    this.rowIndex = rowIndex;\n    this.pinned = pinned;\n    this.type = type;\n    this.instanceId = instanceIdSequence5++;\n    this.comp = null;\n    this.allCtrls = [];\n    let typeClass = \"ag-header-row-column\";\n    if (type === \"group\") {\n      typeClass = \"ag-header-row-group\";\n    } else if (type === \"filter\") {\n      typeClass = \"ag-header-row-filter\";\n    }\n    this.headerRowClass = `ag-header-row ${typeClass}`;\n  }\n  setRowIndex(rowIndex) {\n    this.rowIndex = rowIndex;\n    this.comp?.setRowIndex(this.getAriaRowIndex());\n    this.onRowHeightChanged();\n  }\n  postConstruct() {\n    this.isPrintLayout = _isDomLayout(this.gos, \"print\");\n    this.isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n  }\n  /** Checks that every header cell that is currently visible has been rendered.\n   * Can only be false under some circumstances when using React\n   */\n  areCellsRendered() {\n    if (!this.comp) {\n      return false;\n    }\n    return this.allCtrls.every(ctrl => ctrl.eGui != null);\n  }\n  /**\n   *\n   * @param comp Proxy to the actual component\n   * @param initCompState Should the component be initialised with the current state of the controller. Default: true\n   */\n  setComp(comp, compBean, initCompState = true) {\n    this.comp = comp;\n    compBean = setupCompBean(this, this.beans.context, compBean);\n    if (initCompState) {\n      this.setRowIndex(this.rowIndex);\n      this.onVirtualColumnsChanged();\n    }\n    this.setWidth();\n    this.addEventListeners(compBean);\n  }\n  getAriaRowIndex() {\n    return this.rowIndex + 1;\n  }\n  addEventListeners(compBean) {\n    const onHeightChanged = this.onRowHeightChanged.bind(this);\n    const onDisplayedColumnsChanged = this.onDisplayedColumnsChanged.bind(this);\n    compBean.addManagedEventListeners({\n      columnResized: this.setWidth.bind(this),\n      displayedColumnsChanged: onDisplayedColumnsChanged,\n      virtualColumnsChanged: params => this.onVirtualColumnsChanged(params.afterScroll),\n      columnGroupHeaderHeightChanged: onHeightChanged,\n      columnHeaderHeightChanged: onHeightChanged,\n      gridStylesChanged: onHeightChanged,\n      advancedFilterEnabledChanged: onHeightChanged\n    });\n    compBean.addManagedPropertyListener(\"domLayout\", onDisplayedColumnsChanged);\n    compBean.addManagedPropertyListener(\"ensureDomOrder\", e => this.isEnsureDomOrder = e.currentValue);\n    compBean.addManagedPropertyListeners([\"headerHeight\", \"pivotHeaderHeight\", \"groupHeaderHeight\", \"pivotGroupHeaderHeight\", \"floatingFiltersHeight\"], onHeightChanged);\n  }\n  onDisplayedColumnsChanged() {\n    this.isPrintLayout = _isDomLayout(this.gos, \"print\");\n    this.onVirtualColumnsChanged();\n    this.setWidth();\n    this.onRowHeightChanged();\n  }\n  setWidth() {\n    if (!this.comp) {\n      return;\n    }\n    const width = this.getWidthForRow();\n    this.comp.setWidth(`${width}px`);\n  }\n  getWidthForRow() {\n    const {\n      visibleCols\n    } = this.beans;\n    if (this.isPrintLayout) {\n      const pinned = this.pinned != null;\n      if (pinned) {\n        return 0;\n      }\n      return visibleCols.getContainerWidth(\"right\") + visibleCols.getContainerWidth(\"left\") + visibleCols.getContainerWidth(null);\n    }\n    return visibleCols.getContainerWidth(this.pinned);\n  }\n  onRowHeightChanged() {\n    if (!this.comp) {\n      return;\n    }\n    const {\n      topOffset,\n      rowHeight\n    } = this.getTopAndHeight();\n    this.comp.setTop(topOffset + \"px\");\n    this.comp.setHeight(rowHeight + \"px\");\n  }\n  getTopAndHeight() {\n    let topOffset = 0;\n    const groupHeadersHeight = getGroupRowsHeight(this.beans);\n    for (let i = 0; i < groupHeadersHeight.length; i++) {\n      if (i === this.rowIndex && this.type === \"group\") {\n        return {\n          topOffset,\n          rowHeight: groupHeadersHeight[i]\n        };\n      }\n      topOffset += groupHeadersHeight[i];\n    }\n    const headerHeight = getColumnHeaderRowHeight(this.beans);\n    if (this.type === \"column\") {\n      return {\n        topOffset,\n        rowHeight: headerHeight\n      };\n    }\n    topOffset += headerHeight;\n    const filterHeight = getFloatingFiltersHeight(this.beans);\n    return {\n      topOffset,\n      rowHeight: filterHeight\n    };\n  }\n  onVirtualColumnsChanged(afterScroll = false) {\n    if (!this.comp) {\n      return;\n    }\n    const ctrlsToDisplay = this.getUpdatedHeaderCtrls();\n    const forceOrder = this.isEnsureDomOrder || this.isPrintLayout;\n    this.comp.setHeaderCtrls(ctrlsToDisplay, forceOrder, afterScroll);\n  }\n  /**\n   * Recycles the header cell ctrls and creates new ones for the columns in the viewport\n   * @returns The updated header cell ctrls\n   */\n  getUpdatedHeaderCtrls() {\n    const oldCtrls = this.ctrlsById;\n    this.ctrlsById = /* @__PURE__ */new Map();\n    const columns = this.getColumnsInViewport();\n    for (const child of columns) {\n      this.recycleAndCreateHeaderCtrls(child, this.ctrlsById, oldCtrls);\n    }\n    const isFocusedAndDisplayed = ctrl => {\n      const {\n        focusSvc,\n        visibleCols\n      } = this.beans;\n      const isFocused = focusSvc.isHeaderWrapperFocused(ctrl);\n      if (!isFocused) {\n        return false;\n      }\n      const isDisplayed = visibleCols.isVisible(ctrl.column);\n      return isDisplayed;\n    };\n    if (oldCtrls) {\n      for (const [id, oldCtrl] of oldCtrls) {\n        const keepCtrl = isFocusedAndDisplayed(oldCtrl);\n        if (keepCtrl) {\n          this.ctrlsById.set(id, oldCtrl);\n        } else {\n          this.destroyBean(oldCtrl);\n        }\n      }\n    }\n    this.allCtrls = Array.from(this.ctrlsById.values());\n    return this.allCtrls;\n  }\n  /** Get the current header cell ctrls */\n  getHeaderCellCtrls() {\n    return this.allCtrls;\n  }\n  recycleAndCreateHeaderCtrls(headerColumn, currCtrls, oldCtrls) {\n    if (headerColumn.isEmptyGroup()) {\n      return;\n    }\n    const idOfChild = headerColumn.getUniqueId();\n    let headerCtrl;\n    if (oldCtrls) {\n      headerCtrl = oldCtrls.get(idOfChild);\n      oldCtrls.delete(idOfChild);\n    }\n    const forOldColumn = headerCtrl && headerCtrl.column != headerColumn;\n    if (forOldColumn) {\n      this.destroyBean(headerCtrl);\n      headerCtrl = void 0;\n    }\n    if (headerCtrl == null) {\n      switch (this.type) {\n        case \"filter\":\n          {\n            headerCtrl = this.createBean(this.beans.registry.createDynamicBean(\"headerFilterCellCtrl\", true, headerColumn, this));\n            break;\n          }\n        case \"group\":\n          headerCtrl = this.createBean(this.beans.registry.createDynamicBean(\"headerGroupCellCtrl\", true, headerColumn, this));\n          break;\n        default:\n          headerCtrl = this.createBean(new HeaderCellCtrl(headerColumn, this));\n          break;\n      }\n    }\n    currCtrls.set(idOfChild, headerCtrl);\n  }\n  getColumnsInViewport() {\n    if (!this.isPrintLayout) {\n      return this.getComponentsToRender();\n    }\n    if (this.pinned) {\n      return [];\n    }\n    const viewportColumns = [];\n    [\"left\", null, \"right\"].forEach(pinned => {\n      viewportColumns.push(...this.getComponentsToRender(pinned));\n    });\n    return viewportColumns;\n  }\n  getComponentsToRender(pinned = this.pinned) {\n    if (this.type === \"group\") {\n      return this.beans.colViewport.getHeadersToRender(pinned, this.rowIndex);\n    }\n    return this.beans.colViewport.getColumnHeadersToRender(pinned);\n  }\n  focusHeader(column, event) {\n    const ctrl = this.allCtrls.find(ctrl2 => ctrl2.column == column);\n    if (!ctrl) {\n      return false;\n    }\n    const focused = ctrl.focus(event);\n    return focused;\n  }\n  destroy() {\n    this.allCtrls = this.destroyBeans(this.allCtrls);\n    this.ctrlsById = void 0;\n    this.comp = null;\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/rowContainer/headerRowContainerCtrl.ts\nvar HeaderRowContainerCtrl = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.pinned = pinned;\n    this.hidden = false;\n    this.includeFloatingFilter = false;\n    this.groupsRowCtrls = [];\n  }\n  setComp(comp, eGui) {\n    this.comp = comp;\n    this.eViewport = eGui;\n    const {\n      pinnedCols,\n      ctrlsSvc,\n      colModel,\n      colMoves\n    } = this.beans;\n    this.setupCenterWidth();\n    pinnedCols?.setupHeaderPinnedWidth(this);\n    this.setupDragAndDrop(colMoves, this.eViewport);\n    const onDisplayedColsChanged = this.refresh.bind(this, true);\n    this.addManagedEventListeners({\n      displayedColumnsChanged: onDisplayedColsChanged,\n      advancedFilterEnabledChanged: onDisplayedColsChanged\n    });\n    const headerType = `${typeof this.pinned === \"string\" ? this.pinned : \"center\"}Header`;\n    ctrlsSvc.register(headerType, this);\n    if (colModel.ready) {\n      this.refresh();\n    }\n  }\n  getAllCtrls() {\n    const res = [...this.groupsRowCtrls];\n    if (this.columnsRowCtrl) {\n      res.push(this.columnsRowCtrl);\n    }\n    if (this.filtersRowCtrl) {\n      res.push(this.filtersRowCtrl);\n    }\n    return res;\n  }\n  refresh(keepColumns = false) {\n    const {\n      focusSvc,\n      filterManager,\n      visibleCols\n    } = this.beans;\n    let sequence = 0;\n    const focusedHeaderPosition = focusSvc.getFocusHeaderToUseAfterRefresh();\n    const refreshColumnGroups = () => {\n      const groupRowCount = visibleCols.headerGroupRowCount;\n      sequence = groupRowCount;\n      const currentGroupCount = this.groupsRowCtrls.length;\n      if (currentGroupCount === groupRowCount) {\n        return;\n      }\n      if (currentGroupCount > groupRowCount) {\n        for (let i = groupRowCount; i < currentGroupCount; i++) {\n          this.destroyBean(this.groupsRowCtrls[i]);\n        }\n        this.groupsRowCtrls.length = groupRowCount;\n        return;\n      }\n      for (let i = currentGroupCount; i < groupRowCount; i++) {\n        const ctrl = this.createBean(new HeaderRowCtrl(i, this.pinned, \"group\"));\n        this.groupsRowCtrls.push(ctrl);\n      }\n    };\n    const refreshColumns = () => {\n      const rowIndex = sequence++;\n      if (this.hidden) {\n        this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\n        return;\n      }\n      if (this.columnsRowCtrl == null || !keepColumns) {\n        this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\n        this.columnsRowCtrl = this.createBean(new HeaderRowCtrl(rowIndex, this.pinned, \"column\"));\n      } else if (this.columnsRowCtrl.rowIndex !== rowIndex) {\n        this.columnsRowCtrl.setRowIndex(rowIndex);\n      }\n    };\n    const refreshFilters = () => {\n      this.includeFloatingFilter = !!filterManager?.hasFloatingFilters() && !this.hidden;\n      const destroyPreviousComp = () => {\n        this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\n      };\n      if (!this.includeFloatingFilter) {\n        destroyPreviousComp();\n        return;\n      }\n      if (!keepColumns) {\n        destroyPreviousComp();\n      }\n      const rowIndex = sequence++;\n      if (this.filtersRowCtrl) {\n        const rowIndexMismatch = this.filtersRowCtrl.rowIndex !== rowIndex;\n        if (rowIndexMismatch) {\n          this.filtersRowCtrl.setRowIndex(rowIndex);\n        }\n      } else {\n        this.filtersRowCtrl = this.createBean(new HeaderRowCtrl(rowIndex, this.pinned, \"filter\"));\n      }\n    };\n    const oldCtrls = this.getAllCtrls();\n    refreshColumnGroups();\n    refreshColumns();\n    refreshFilters();\n    const allCtrls = this.getAllCtrls();\n    this.comp.setCtrls(allCtrls);\n    this.restoreFocusOnHeader(focusSvc, focusedHeaderPosition);\n    if (oldCtrls.length !== allCtrls.length) {\n      this.beans.eventSvc.dispatchEvent({\n        type: \"headerRowsChanged\"\n      });\n    }\n  }\n  getHeaderCtrlForColumn(column) {\n    const findCtrl = ctrl => ctrl?.getHeaderCellCtrls().find(ctrl2 => ctrl2.column === column);\n    if (isColumn(column)) {\n      return findCtrl(this.columnsRowCtrl);\n    }\n    if (this.groupsRowCtrls.length === 0) {\n      return;\n    }\n    for (let i = 0; i < this.groupsRowCtrls.length; i++) {\n      const ctrl = findCtrl(this.groupsRowCtrls[i]);\n      if (ctrl) {\n        return ctrl;\n      }\n    }\n  }\n  getHtmlElementForColumnHeader(column) {\n    return this.getHeaderCtrlForColumn(column)?.eGui ?? null;\n  }\n  getRowType(rowIndex) {\n    return this.getAllCtrls()[rowIndex]?.type;\n  }\n  focusHeader(rowIndex, column, event) {\n    const allCtrls = this.getAllCtrls();\n    const ctrl = allCtrls[rowIndex];\n    if (!ctrl) {\n      return false;\n    }\n    return ctrl.focusHeader(column, event);\n  }\n  getGroupRowCount() {\n    return this.groupsRowCtrls.length;\n  }\n  getGroupRowCtrlAtIndex(index) {\n    return this.groupsRowCtrls[index];\n  }\n  getRowCount() {\n    return this.groupsRowCtrls.length + (this.columnsRowCtrl ? 1 : 0) + (this.filtersRowCtrl ? 1 : 0);\n  }\n  setHorizontalScroll(offset) {\n    this.comp.setViewportScrollLeft(offset);\n  }\n  onScrollCallback(fn) {\n    this.addManagedElementListeners(this.eViewport, {\n      scroll: fn\n    });\n  }\n  destroy() {\n    this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\n    this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\n    this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls);\n    super.destroy();\n  }\n  setupDragAndDrop(colMoves, dropContainer) {\n    const bodyDropTarget = colMoves?.createBodyDropTarget(this.pinned, dropContainer);\n    if (bodyDropTarget) {\n      this.createManagedBean(bodyDropTarget);\n    }\n  }\n  restoreFocusOnHeader(focusSvc, position) {\n    if (!position) {\n      return;\n    }\n    const {\n      column\n    } = position;\n    if (column.getPinned() != this.pinned) {\n      return;\n    }\n    focusSvc.focusHeaderPosition({\n      headerPosition: position\n    });\n  }\n  setupCenterWidth() {\n    if (this.pinned != null) {\n      return;\n    }\n    this.createManagedBean(new CenterWidthFeature(width => this.comp.setCenterWidth(`${width}px`), true));\n  }\n};\n\n// packages/ag-grid-community/src/misc/menu/menuService.ts\nvar MenuService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"menuSvc\";\n  }\n  postConstruct() {\n    const {\n      enterpriseMenuFactory,\n      filterMenuFactory\n    } = this.beans;\n    this.activeMenuFactory = enterpriseMenuFactory ?? filterMenuFactory;\n  }\n  showColumnMenu(params) {\n    this.showColumnMenuCommon(this.activeMenuFactory, params, \"columnMenu\");\n  }\n  showFilterMenu(params) {\n    this.showColumnMenuCommon(getFilterMenuFactory(this.beans), params, params.containerType, true);\n  }\n  showHeaderContextMenu(column, mouseEvent, touchEvent) {\n    this.activeMenuFactory?.showMenuAfterContextMenuEvent(column, mouseEvent, touchEvent);\n  }\n  hidePopupMenu() {\n    this.beans.contextMenuSvc?.hideActiveMenu();\n    this.activeMenuFactory?.hideActiveMenu();\n  }\n  hideFilterMenu() {\n    getFilterMenuFactory(this.beans)?.hideActiveMenu();\n  }\n  isColumnMenuInHeaderEnabled(column) {\n    const {\n      suppressHeaderMenuButton\n    } = column.getColDef();\n    return !suppressHeaderMenuButton && !!this.activeMenuFactory?.isMenuEnabled(column) && (_isLegacyMenuEnabled(this.gos) || !!this.beans.enterpriseMenuFactory);\n  }\n  isFilterMenuInHeaderEnabled(column) {\n    return !column.getColDef().suppressHeaderFilterButton && !!this.beans.filterManager?.isFilterAllowed(column);\n  }\n  isHeaderContextMenuEnabled(column) {\n    const colDef = column && isColumn(column) ? column.getColDef() : column?.getColGroupDef();\n    return !colDef?.suppressHeaderContextMenu && this.gos.get(\"columnMenu\") === \"new\";\n  }\n  isHeaderMenuButtonAlwaysShowEnabled() {\n    return this.isSuppressMenuHide();\n  }\n  isHeaderMenuButtonEnabled() {\n    const menuHides = !this.isSuppressMenuHide();\n    const onIpadAndMenuHides = _isIOSUserAgent() && menuHides;\n    return !onIpadAndMenuHides;\n  }\n  isHeaderFilterButtonEnabled(column) {\n    return this.isFilterMenuInHeaderEnabled(column) && !_isLegacyMenuEnabled(this.gos) && !this.isFloatingFilterButtonDisplayed(column);\n  }\n  isFilterMenuItemEnabled(column) {\n    return !!this.beans.filterManager?.isFilterAllowed(column) && !_isLegacyMenuEnabled(this.gos) && !this.isFilterMenuInHeaderEnabled(column) && !this.isFloatingFilterButtonDisplayed(column);\n  }\n  isFloatingFilterButtonEnabled(column) {\n    return !column.getColDef().suppressFloatingFilterButton;\n  }\n  isFloatingFilterButtonDisplayed(column) {\n    return !!column.getColDef().floatingFilter && this.isFloatingFilterButtonEnabled(column);\n  }\n  isSuppressMenuHide() {\n    const gos = this.gos;\n    const suppressMenuHide = gos.get(\"suppressMenuHide\");\n    if (_isLegacyMenuEnabled(gos)) {\n      return gos.exists(\"suppressMenuHide\") ? suppressMenuHide : false;\n    }\n    return suppressMenuHide;\n  }\n  showColumnMenuCommon(menuFactory, params, containerType, filtersOnly) {\n    const {\n      positionBy,\n      onClosedCallback\n    } = params;\n    const column = params.column;\n    if (positionBy === \"button\") {\n      const {\n        buttonElement\n      } = params;\n      menuFactory?.showMenuAfterButtonClick(column, buttonElement, containerType, onClosedCallback, filtersOnly);\n    } else if (positionBy === \"mouse\") {\n      const {\n        mouseEvent\n      } = params;\n      menuFactory?.showMenuAfterMouseEvent(column, mouseEvent, containerType, onClosedCallback, filtersOnly);\n    } else if (column) {\n      const beans = this.beans;\n      const ctrlsSvc = beans.ctrlsSvc;\n      ctrlsSvc.getScrollFeature().ensureColumnVisible(column, \"auto\");\n      _requestAnimationFrame(beans, () => {\n        const headerCellCtrl = ctrlsSvc.getHeaderRowContainerCtrl(column.getPinned())?.getHeaderCtrlForColumn(column);\n        if (headerCellCtrl) {\n          menuFactory?.showMenuAfterButtonClick(column, headerCellCtrl.getAnchorElementForMenu(filtersOnly), containerType, onClosedCallback, filtersOnly);\n        }\n      });\n    }\n  }\n};\nfunction _setColMenuVisible(column, visible, source) {\n  if (column.menuVisible !== visible) {\n    column.menuVisible = visible;\n    column.dispatchColEvent(\"menuVisibleChanged\", source);\n  }\n}\nfunction getFilterMenuFactory(beans) {\n  const {\n    enterpriseMenuFactory,\n    filterMenuFactory,\n    gos\n  } = beans;\n  return enterpriseMenuFactory && _isLegacyMenuEnabled(gos) ? enterpriseMenuFactory : filterMenuFactory;\n}\n\n// packages/ag-grid-community/src/widgets/popupComponent.ts\nvar PopupComponent = class extends Component {\n  isPopup() {\n    return true;\n  }\n  setParentComponent(container) {\n    container.addCss(\"ag-has-popup\");\n    super.setParentComponent(container);\n  }\n  destroy() {\n    const parentComp = this.parentComponent;\n    const hasParent = parentComp && parentComp.isAlive();\n    if (hasParent) {\n      parentComp.getGui().classList.remove(\"ag-has-popup\");\n    }\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agAbstractCellEditor.ts\nvar AgAbstractCellEditor = class extends PopupComponent {\n  constructor() {\n    super(...arguments);\n    this.errorMessages = null;\n  }\n  init(params) {\n    this.params = params;\n    this.initialiseEditor(params);\n    this.eEditor.onValueChange(() => params.validate());\n  }\n  destroy() {\n    this.errorMessages = null;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/overlays/overlayComponent.ts\nvar OverlayComponent = class extends Component {\n  constructor() {\n    super();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/overlays/loadingOverlayComponent.ts\nvar LoadingOverlayElement = {\n  tag: \"span\",\n  cls: \"ag-overlay-loading-center\",\n  attrs: {\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\"\n  }\n};\nvar LoadingOverlayComponent2 = class extends OverlayComponent {\n  init() {\n    const customTemplate = _makeNull(this.gos.get(\"overlayLoadingTemplate\")?.trim());\n    this.setTemplate(customTemplate ?? LoadingOverlayElement);\n    if (!customTemplate) {\n      const localeTextFunc = this.getLocaleTextFunc();\n      setTimeout(() => {\n        this.getGui().textContent = localeTextFunc(\"loadingOoo\", \"Loading...\");\n      });\n    }\n  }\n};\n\n// packages/ag-grid-community/src/rendering/overlays/noRowsOverlayComponent.ts\nvar NoRowsOverlayElement = {\n  tag: \"span\",\n  cls: \"ag-overlay-no-rows-center\"\n};\nvar NoRowsOverlayComponent2 = class extends OverlayComponent {\n  init() {\n    const customTemplate = _makeNull(this.gos.get(\"overlayNoRowsTemplate\")?.trim());\n    this.setTemplate(customTemplate ?? NoRowsOverlayElement);\n    if (!customTemplate) {\n      const localeTextFunc = this.getLocaleTextFunc();\n      setTimeout(() => {\n        this.getGui().textContent = localeTextFunc(\"noRowsToShow\", \"No Rows To Show\");\n      });\n    }\n  }\n};\n\n// packages/ag-grid-community/src/utils/icon.ts\nfunction _createIcon(iconName, beans, column) {\n  const iconContents = _createIconNoSpan(iconName, beans, column);\n  if (iconContents) {\n    const {\n      className\n    } = iconContents;\n    if (typeof className === \"string\" && className.indexOf(\"ag-icon\") > -1 || typeof className === \"object\" && className[\"ag-icon\"]) {\n      return iconContents;\n    }\n  }\n  const eResult = _createElement({\n    tag: \"span\"\n  });\n  eResult.appendChild(iconContents);\n  return eResult;\n}\nfunction _createIconNoSpan(iconName, beans, column) {\n  let userProvidedIcon = null;\n  if (iconName === \"smallDown\") {\n    _warn(262);\n  } else if (iconName === \"smallLeft\") {\n    _warn(263);\n  } else if (iconName === \"smallRight\") {\n    _warn(264);\n  }\n  const icons = column && column.getColDef().icons;\n  if (icons) {\n    userProvidedIcon = icons[iconName];\n  }\n  if (beans.gos && !userProvidedIcon) {\n    const optionsIcons = beans.gos.get(\"icons\");\n    if (optionsIcons) {\n      userProvidedIcon = optionsIcons[iconName];\n    }\n  }\n  if (userProvidedIcon) {\n    let rendererResult;\n    if (typeof userProvidedIcon === \"function\") {\n      rendererResult = userProvidedIcon();\n    } else if (typeof userProvidedIcon === \"string\") {\n      rendererResult = userProvidedIcon;\n    } else {\n      _warn(38, {\n        iconName\n      });\n      return void 0;\n    }\n    if (typeof rendererResult === \"string\") {\n      return _loadTemplate(rendererResult);\n    }\n    if (_isNodeOrElement(rendererResult)) {\n      return rendererResult;\n    }\n    _warn(133, {\n      iconName\n    });\n    return void 0;\n  } else {\n    const iconValue = beans.registry.getIcon(iconName);\n    if (!iconValue) {\n      beans.validation?.validateIcon(iconName);\n    }\n    return _createElement({\n      tag: \"span\",\n      cls: `ag-icon ag-icon-${iconValue ?? iconName}`,\n      role: \"presentation\",\n      attrs: {\n        unselectable: \"on\"\n      }\n    });\n  }\n}\n\n// packages/ag-grid-community/src/dragAndDrop/dragAndDropImageComponent.css-GENERATED.ts\nvar dragAndDropImageComponentCSS = /*css*/\n`.ag-dnd-ghost{align-items:center;background-color:var(--ag-drag-and-drop-image-background-color);border:var(--ag-drag-and-drop-image-border);border-radius:var(--ag-border-radius);box-shadow:var(--ag-drag-and-drop-image-shadow);color:var(--ag-text-color);cursor:move;display:flex;font-weight:500;gap:var(--ag-cell-widget-spacing);height:var(--ag-header-height);overflow:hidden;padding-left:var(--ag-cell-horizontal-padding);padding-right:var(--ag-cell-horizontal-padding);text-overflow:ellipsis;transform:translateY(calc(var(--ag-spacing)*2));white-space:nowrap}`;\n\n// packages/ag-grid-community/src/dragAndDrop/dragAndDropImageComponent.ts\nvar DragAndDropElement = {\n  tag: \"div\",\n  children: [{\n    tag: \"div\",\n    ref: \"eGhost\",\n    cls: \"ag-dnd-ghost ag-unselectable\",\n    children: [{\n      tag: \"span\",\n      ref: \"eIcon\",\n      cls: \"ag-dnd-ghost-icon ag-shake-left-to-right\"\n    }, {\n      tag: \"div\",\n      ref: \"eLabel\",\n      cls: \"ag-dnd-ghost-label\"\n    }]\n  }]\n};\nvar DragAndDropImageComponent2 = class extends Component {\n  constructor() {\n    super();\n    this.dragSource = null;\n    this.eIcon = RefPlaceholder;\n    this.eLabel = RefPlaceholder;\n    this.eGhost = RefPlaceholder;\n    this.registerCSS(dragAndDropImageComponentCSS);\n  }\n  postConstruct() {\n    const create = iconName => _createIcon(iconName, this.beans, null);\n    this.dropIconMap = {\n      pinned: create(\"columnMovePin\"),\n      hide: create(\"columnMoveHide\"),\n      move: create(\"columnMoveMove\"),\n      left: create(\"columnMoveLeft\"),\n      right: create(\"columnMoveRight\"),\n      group: create(\"columnMoveGroup\"),\n      aggregate: create(\"columnMoveValue\"),\n      pivot: create(\"columnMovePivot\"),\n      notAllowed: create(\"dropNotAllowed\")\n    };\n  }\n  init(params) {\n    this.dragSource = params.dragSource;\n    this.setTemplate(DragAndDropElement);\n    this.beans.environment.applyThemeClasses(this.eGhost);\n  }\n  destroy() {\n    this.dragSource = null;\n    super.destroy();\n  }\n  setIcon(iconName, shake) {\n    const {\n      eIcon,\n      dragSource,\n      dropIconMap,\n      gos\n    } = this;\n    _clearElement(eIcon);\n    let eIconChild = null;\n    if (!iconName) {\n      iconName = dragSource?.getDefaultIconName ? dragSource.getDefaultIconName() : \"notAllowed\";\n    }\n    eIconChild = dropIconMap[iconName];\n    eIcon.classList.toggle(\"ag-shake-left-to-right\", shake);\n    if (eIconChild === dropIconMap[\"hide\"] && gos.get(\"suppressDragLeaveHidesColumns\")) {\n      return;\n    }\n    if (eIconChild) {\n      eIcon.appendChild(eIconChild);\n    }\n  }\n  setLabel(label) {\n    this.eLabel.textContent = label;\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agAbstractLabel.css-GENERATED.ts\nvar agAbstractLabelCSS = /*css*/\n`.ag-label{white-space:nowrap}:where(.ag-ltr) .ag-label{margin-right:var(--ag-spacing)}:where(.ag-rtl) .ag-label{margin-left:var(--ag-spacing)}:where(.ag-label-align-right) .ag-label{order:1}:where(.ag-ltr) :where(.ag-label-align-right) .ag-label{margin-left:var(--ag-spacing)}:where(.ag-rtl) :where(.ag-label-align-right) .ag-label{margin-right:var(--ag-spacing)}.ag-label-align-right>*{flex:none}.ag-label-align-top{align-items:flex-start;flex-direction:column;>*{align-self:stretch}}.ag-label-ellipsis{flex:1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:where(.ag-label-align-top) .ag-label{margin-bottom:calc(var(--ag-spacing)*.5)}`;\n\n// packages/ag-grid-community/src/widgets/agAbstractLabel.ts\nvar AgAbstractLabel = class extends Component {\n  constructor(config, template, components) {\n    super(template, components);\n    this.labelSeparator = \"\";\n    this.labelAlignment = \"left\";\n    this.disabled = false;\n    this.label = \"\";\n    this.config = config || {};\n    this.registerCSS(agAbstractLabelCSS);\n  }\n  postConstruct() {\n    this.addCss(\"ag-labeled\");\n    this.eLabel.classList.add(\"ag-label\");\n    const {\n      labelSeparator,\n      label,\n      labelWidth,\n      labelAlignment,\n      disabled\n    } = this.config;\n    if (disabled != null) {\n      this.setDisabled(disabled);\n    }\n    if (labelSeparator != null) {\n      this.setLabelSeparator(labelSeparator);\n    }\n    if (label != null) {\n      this.setLabel(label);\n    }\n    if (labelWidth != null) {\n      this.setLabelWidth(labelWidth);\n    }\n    this.setLabelAlignment(labelAlignment || this.labelAlignment);\n    this.refreshLabel();\n  }\n  refreshLabel() {\n    const {\n      label,\n      eLabel\n    } = this;\n    _clearElement(eLabel);\n    if (typeof label === \"string\") {\n      eLabel.innerText = label + this.labelSeparator;\n    } else if (label) {\n      eLabel.appendChild(label);\n    }\n    if (label === \"\") {\n      _setDisplayed(eLabel, false);\n      _setAriaRole(eLabel, \"presentation\");\n    } else {\n      _setDisplayed(eLabel, true);\n      _setAriaRole(eLabel, null);\n    }\n  }\n  setLabelSeparator(labelSeparator) {\n    if (this.labelSeparator === labelSeparator) {\n      return this;\n    }\n    this.labelSeparator = labelSeparator;\n    if (this.label != null) {\n      this.refreshLabel();\n    }\n    return this;\n  }\n  getLabelId() {\n    const eLabel = this.eLabel;\n    eLabel.id = eLabel.id || `ag-${this.getCompId()}-label`;\n    return eLabel.id;\n  }\n  getLabel() {\n    return this.label;\n  }\n  setLabel(label) {\n    if (this.label === label) {\n      return this;\n    }\n    this.label = label;\n    this.refreshLabel();\n    return this;\n  }\n  setLabelAlignment(alignment) {\n    const eGui = this.getGui();\n    const eGuiClassList = eGui.classList;\n    eGuiClassList.toggle(\"ag-label-align-left\", alignment === \"left\");\n    eGuiClassList.toggle(\"ag-label-align-right\", alignment === \"right\");\n    eGuiClassList.toggle(\"ag-label-align-top\", alignment === \"top\");\n    return this;\n  }\n  setLabelEllipsis(hasEllipsis) {\n    this.eLabel.classList.toggle(\"ag-label-ellipsis\", hasEllipsis);\n    return this;\n  }\n  setLabelWidth(width) {\n    if (this.label == null) {\n      return this;\n    }\n    _setElementWidth(this.eLabel, width);\n    return this;\n  }\n  setDisabled(disabled) {\n    disabled = !!disabled;\n    const element = this.getGui();\n    _setDisabled(element, disabled);\n    element.classList.toggle(\"ag-disabled\", disabled);\n    this.disabled = disabled;\n    return this;\n  }\n  isDisabled() {\n    return !!this.disabled;\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agAbstractField.ts\nvar AgAbstractField = class extends AgAbstractLabel {\n  constructor(config, template, components, className) {\n    super(config, template, components);\n    this.className = className;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const {\n      width,\n      value,\n      onValueChange\n    } = this.config;\n    if (width != null) {\n      this.setWidth(width);\n    }\n    if (value != null) {\n      this.setValue(value);\n    }\n    if (onValueChange != null) {\n      this.onValueChange(onValueChange);\n    }\n    if (this.className) {\n      this.addCss(this.className);\n    }\n    this.refreshAriaLabelledBy();\n  }\n  setLabel(label) {\n    super.setLabel(label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  refreshAriaLabelledBy() {\n    const ariaEl = this.getAriaElement();\n    const labelId = this.getLabelId();\n    const label = this.getLabel();\n    if (label == null || label == \"\" || _getAriaLabel(ariaEl) !== null) {\n      _setAriaLabelledBy(ariaEl, \"\");\n    } else {\n      _setAriaLabelledBy(ariaEl, labelId ?? \"\");\n    }\n  }\n  setAriaLabel(label) {\n    _setAriaLabel(this.getAriaElement(), label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  onValueChange(callbackFn) {\n    this.addManagedListeners(this, {\n      fieldValueChanged: () => callbackFn(this.getValue())\n    });\n    return this;\n  }\n  getWidth() {\n    return this.getGui().clientWidth;\n  }\n  setWidth(width) {\n    _setFixedWidth(this.getGui(), width);\n    return this;\n  }\n  getPreviousValue() {\n    return this.previousValue;\n  }\n  getValue() {\n    return this.value;\n  }\n  setValue(value, silent) {\n    if (this.value === value) {\n      return this;\n    }\n    this.previousValue = this.value;\n    this.value = value;\n    if (!silent) {\n      this.dispatchLocalEvent({\n        type: \"fieldValueChanged\"\n      });\n    }\n    return this;\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agAbstractInputField.ts\nfunction buildTemplate(displayFieldTag) {\n  return {\n    tag: \"div\",\n    role: \"presentation\",\n    children: [{\n      tag: \"div\",\n      ref: \"eLabel\",\n      cls: \"ag-input-field-label\"\n    }, {\n      tag: \"div\",\n      ref: \"eWrapper\",\n      cls: \"ag-wrapper ag-input-wrapper\",\n      role: \"presentation\",\n      children: [{\n        tag: displayFieldTag,\n        ref: \"eInput\",\n        cls: \"ag-input-field-input\"\n      }]\n    }]\n  };\n}\nvar AgAbstractInputField = class extends AgAbstractField {\n  constructor(config, className, inputType = \"text\", displayFieldTag = \"input\") {\n    super(config, config?.template ?? buildTemplate(displayFieldTag), [], className);\n    this.inputType = inputType;\n    this.displayFieldTag = displayFieldTag;\n    this.eLabel = RefPlaceholder;\n    this.eWrapper = RefPlaceholder;\n    this.eInput = RefPlaceholder;\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.setInputType(this.inputType);\n    const {\n      eLabel,\n      eWrapper,\n      eInput,\n      className\n    } = this;\n    eLabel.classList.add(`${className}-label`);\n    eWrapper.classList.add(`${className}-input-wrapper`);\n    eInput.classList.add(`${className}-input`);\n    this.addCss(\"ag-input-field\");\n    eInput.id = eInput.id || `ag-${this.getCompId()}-input`;\n    const {\n      inputName,\n      inputWidth\n    } = this.config;\n    if (inputName != null) {\n      this.setInputName(inputName);\n    }\n    if (inputWidth != null) {\n      this.setInputWidth(inputWidth);\n    }\n    this.addInputListeners();\n    this.activateTabIndex([eInput]);\n  }\n  addInputListeners() {\n    this.addManagedElementListeners(this.eInput, {\n      input: e => this.setValue(e.target.value)\n    });\n  }\n  setInputType(inputType) {\n    if (this.displayFieldTag === \"input\") {\n      this.inputType = inputType;\n      _addOrRemoveAttribute(this.eInput, \"type\", inputType);\n    }\n  }\n  getInputElement() {\n    return this.eInput;\n  }\n  setInputWidth(width) {\n    _setElementWidth(this.eWrapper, width);\n    return this;\n  }\n  setInputName(name) {\n    this.getInputElement().setAttribute(\"name\", name);\n    return this;\n  }\n  getFocusableElement() {\n    return this.eInput;\n  }\n  setMaxLength(length) {\n    const eInput = this.eInput;\n    eInput.maxLength = length;\n    return this;\n  }\n  setInputPlaceholder(placeholder) {\n    _addOrRemoveAttribute(this.eInput, \"placeholder\", placeholder);\n    return this;\n  }\n  setInputAriaLabel(label) {\n    _setAriaLabel(this.eInput, label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  setDisabled(disabled) {\n    _setDisabled(this.eInput, disabled);\n    return super.setDisabled(disabled);\n  }\n  setAutoComplete(value) {\n    if (value === true) {\n      _addOrRemoveAttribute(this.eInput, \"autocomplete\", null);\n    } else {\n      const autoCompleteValue = typeof value === \"string\" ? value : \"off\";\n      _addOrRemoveAttribute(this.eInput, \"autocomplete\", autoCompleteValue);\n    }\n    return this;\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agCheckbox.ts\nvar AgCheckbox = class extends AgAbstractInputField {\n  constructor(config, className = \"ag-checkbox\", inputType = \"checkbox\") {\n    super(config, className, inputType);\n    this.labelAlignment = \"right\";\n    this.selected = false;\n    this.readOnly = false;\n    this.passive = false;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const {\n      readOnly,\n      passive\n    } = this.config;\n    if (typeof readOnly === \"boolean\") this.setReadOnly(readOnly);\n    if (typeof passive === \"boolean\") this.setPassive(passive);\n  }\n  addInputListeners() {\n    this.addManagedElementListeners(this.eInput, {\n      click: this.onCheckboxClick.bind(this)\n    });\n    this.addManagedElementListeners(this.eLabel, {\n      click: this.toggle.bind(this)\n    });\n  }\n  getNextValue() {\n    return this.selected === void 0 ? true : !this.selected;\n  }\n  setPassive(passive) {\n    this.passive = passive;\n  }\n  isReadOnly() {\n    return this.readOnly;\n  }\n  setReadOnly(readOnly) {\n    this.eWrapper.classList.toggle(\"ag-disabled\", readOnly);\n    this.eInput.disabled = readOnly;\n    this.readOnly = readOnly;\n  }\n  setDisabled(disabled) {\n    this.eWrapper.classList.toggle(\"ag-disabled\", disabled);\n    return super.setDisabled(disabled);\n  }\n  toggle() {\n    if (this.eInput.disabled) {\n      return;\n    }\n    const previousValue = this.isSelected();\n    const nextValue = this.getNextValue();\n    if (this.passive) {\n      this.dispatchChange(nextValue, previousValue);\n    } else {\n      this.setValue(nextValue);\n    }\n  }\n  getValue() {\n    return this.isSelected();\n  }\n  setValue(value, silent) {\n    this.refreshSelectedClass(value);\n    this.setSelected(value, silent);\n    return this;\n  }\n  setName(name) {\n    const input = this.getInputElement();\n    input.name = name;\n    return this;\n  }\n  isSelected() {\n    return this.selected;\n  }\n  setSelected(selected, silent) {\n    if (this.isSelected() === selected) {\n      return;\n    }\n    this.previousValue = this.isSelected();\n    selected = this.selected = typeof selected === \"boolean\" ? selected : void 0;\n    const eInput = this.eInput;\n    eInput.checked = selected;\n    eInput.indeterminate = selected === void 0;\n    if (!silent) {\n      this.dispatchChange(this.selected, this.previousValue);\n    }\n  }\n  dispatchChange(selected, previousValue, event) {\n    this.dispatchLocalEvent({\n      type: \"fieldValueChanged\",\n      selected,\n      previousValue,\n      event\n    });\n    const input = this.getInputElement();\n    this.eventSvc.dispatchEvent({\n      type: \"checkboxChanged\",\n      id: input.id,\n      name: input.name,\n      selected,\n      previousValue\n    });\n  }\n  onCheckboxClick(e) {\n    if (this.passive || this.eInput.disabled) {\n      return;\n    }\n    const previousValue = this.isSelected();\n    const selected = this.selected = e.target.checked;\n    this.refreshSelectedClass(selected);\n    this.dispatchChange(selected, previousValue, e);\n  }\n  refreshSelectedClass(value) {\n    const classList = this.eWrapper.classList;\n    classList.toggle(\"ag-checked\", value === true);\n    classList.toggle(\"ag-indeterminate\", value == null);\n  }\n};\nvar AgCheckboxSelector = {\n  selector: \"AG-CHECKBOX\",\n  component: AgCheckbox\n};\n\n// packages/ag-grid-community/src/rendering/cellRenderers/checkboxCellRenderer.css-GENERATED.ts\nvar checkboxCellRendererCSS = /*css*/\n`.ag-checkbox-cell{height:100%}`;\n\n// packages/ag-grid-community/src/rendering/cellRenderers/checkboxCellRenderer.ts\nvar CheckboxCellRendererElement = {\n  tag: \"div\",\n  cls: \"ag-cell-wrapper ag-checkbox-cell\",\n  role: \"presentation\",\n  children: [{\n    tag: \"ag-checkbox\",\n    ref: \"eCheckbox\",\n    role: \"presentation\"\n  }]\n};\nvar CheckboxCellRenderer = class extends Component {\n  constructor() {\n    super(CheckboxCellRendererElement, [AgCheckboxSelector]);\n    this.eCheckbox = RefPlaceholder;\n    this.registerCSS(checkboxCellRendererCSS);\n  }\n  init(params) {\n    this.refresh(params);\n    const {\n      eCheckbox,\n      beans\n    } = this;\n    const inputEl = eCheckbox.getInputElement();\n    inputEl.setAttribute(\"tabindex\", \"-1\");\n    _setAriaLive(inputEl, \"polite\");\n    this.addManagedListeners(inputEl, {\n      click: event => {\n        _stopPropagationForAgGrid(event);\n        if (eCheckbox.isDisabled()) {\n          return;\n        }\n        const isSelected = eCheckbox.getValue();\n        this.onCheckboxChanged(isSelected);\n      },\n      dblclick: event => {\n        _stopPropagationForAgGrid(event);\n      }\n    });\n    this.addManagedElementListeners(params.eGridCell, {\n      keydown: event => {\n        if (event.key === KeyCode.SPACE && !eCheckbox.isDisabled()) {\n          if (params.eGridCell === _getActiveDomElement(beans)) {\n            eCheckbox.toggle();\n          }\n          const isSelected = eCheckbox.getValue();\n          this.onCheckboxChanged(isSelected);\n          event.preventDefault();\n        }\n      }\n    });\n  }\n  refresh(params) {\n    this.params = params;\n    this.updateCheckbox(params);\n    return true;\n  }\n  updateCheckbox(params) {\n    let isSelected;\n    let displayed = true;\n    const {\n      value,\n      column,\n      node\n    } = params;\n    if (node.group && column) {\n      if (typeof value === \"boolean\") {\n        isSelected = value;\n      } else {\n        const colId = column.getColId();\n        if (colId.startsWith(GROUP_AUTO_COLUMN_ID)) {\n          isSelected = value == null || value === \"\" ? void 0 : value === \"true\";\n        } else if (node.aggData && node.aggData[colId] !== void 0) {\n          isSelected = value ?? void 0;\n        } else {\n          displayed = false;\n        }\n      }\n    } else {\n      isSelected = value ?? void 0;\n    }\n    const {\n      eCheckbox\n    } = this;\n    if (!displayed) {\n      eCheckbox.setDisplayed(false);\n      return;\n    }\n    eCheckbox.setValue(isSelected);\n    const disabled = params.disabled ?? !column?.isCellEditable(node);\n    eCheckbox.setDisabled(disabled);\n    const translate = this.getLocaleTextFunc();\n    const stateName = _getAriaCheckboxStateName(translate, isSelected);\n    const ariaLabel = disabled ? stateName : `${translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\")} (${stateName})`;\n    eCheckbox.setInputAriaLabel(ariaLabel);\n  }\n  onCheckboxChanged(isSelected) {\n    const {\n      params\n    } = this;\n    const {\n      column,\n      node,\n      value\n    } = params;\n    this.beans?.editSvc?.setEditingCells([{\n      column,\n      colId: column.getColId(),\n      rowIndex: node.rowIndex,\n      rowPinned: node.rowPinned,\n      state: \"changed\",\n      oldValue: value,\n      newValue: value\n    }], {\n      update: true\n    });\n    const valueChanged = node.setDataValue(column, isSelected, \"renderer\");\n    this.beans.editSvc?.stopEditing({\n      rowNode: node,\n      column\n    }, {\n      source: this.beans.editSvc?.isBatchEditing() ? \"ui\" : \"api\"\n    });\n    if (!valueChanged) {\n      this.updateCheckbox(params);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/pinnedRowModel/manualPinnedRowUtils.ts\nvar PinnedRows = class {\n  constructor(beans, floating) {\n    this.beans = beans;\n    this.floating = floating;\n    /** Canonical set of pinned nodes */\n    this.all = /* @__PURE__ */new Set();\n    /**\n     * Set of nodes that should currently be visible given the context of the grid.\n     * This is currently used for hiding leaf nodes in pivot mode and filtered nodes.\n     */\n    this.visible = /* @__PURE__ */new Set();\n    /** Ordering of nodes in the pinned area */\n    this.order = [];\n    /** IDs of nodes that need to be pinned once they are available from the row model (SSRM) */\n    this.queued = /* @__PURE__ */new Set();\n  }\n  size() {\n    return this.visible.size;\n  }\n  add(node) {\n    const {\n      all,\n      visible,\n      order\n    } = this;\n    if (all.has(node)) return;\n    all.add(node);\n    visible.add(node);\n    order.push(node);\n    this.sort();\n  }\n  delete(item) {\n    this.all.delete(item);\n    this.visible.delete(item);\n    this.queued.delete(item.id);\n    _removeFromArray(this.order, item);\n  }\n  has(item) {\n    return this.visible.has(item);\n  }\n  forEach(fn) {\n    this.order.forEach(fn);\n  }\n  getByIndex(i) {\n    return this.order[i];\n  }\n  getById(id) {\n    for (const node of this.visible) {\n      if (node.id == id) return node;\n    }\n  }\n  clear() {\n    const {\n      all,\n      visible,\n      order,\n      queued\n    } = this;\n    all.clear();\n    queued.clear();\n    visible.clear();\n    order.length = 0;\n  }\n  sort() {\n    const {\n      sortSvc,\n      rowNodeSorter,\n      gos\n    } = this.beans;\n    const sortOptions = sortSvc?.getSortOptions() ?? [];\n    const grandTotalNode = _removeGrandTotalRow(this.order);\n    this.order.sort((a, b) => (a.pinnedSibling?.rowIndex ?? 0) - (b.pinnedSibling?.rowIndex ?? 0));\n    this.order = rowNodeSorter?.doFullSort(this.order, sortOptions) ?? this.order;\n    if (!grandTotalNode) return;\n    const grandTotalRow = _getGrandTotalRow(gos);\n    if (grandTotalRow === \"bottom\" || grandTotalRow === \"pinnedBottom\") {\n      this.order.push(grandTotalNode);\n    } else {\n      this.order.unshift(grandTotalNode);\n    }\n  }\n  hide(shouldHide) {\n    const {\n      all,\n      visible\n    } = this;\n    all.forEach(node => shouldHide(node) ? visible.delete(node) : visible.add(node));\n    this.order = Array.from(visible);\n    this.sort();\n  }\n  queue(id) {\n    this.queued.add(id);\n  }\n  unqueue(id) {\n    this.queued.delete(id);\n  }\n  forEachQueued(fn) {\n    this.queued.forEach(fn);\n  }\n};\nfunction _isDisplayedAfterFilterCSRM(node) {\n  if (node.level === -1) return true;\n  const parent = node.parent;\n  if (parent?.childrenAfterSort?.some(child => child == node)) {\n    return _isDisplayedAfterFilterCSRM(parent);\n  }\n  return false;\n}\nfunction _shouldHidePinnedRows(beans, node) {\n  const {\n    gos,\n    rowModel,\n    filterManager\n  } = beans;\n  if (_isServerSideRowModel(gos, rowModel)) {\n    return !rowModel.getRowNode(node.id);\n  }\n  if (filterManager?.isAnyFilterPresent()) {\n    return !_isDisplayedAfterFilterCSRM(node);\n  }\n  if (gos.get(\"pivotMode\")) {\n    return !node.group;\n  }\n  return false;\n}\nfunction _isNodeGrandTotal(node) {\n  return !!node.footer && node.level === -1;\n}\nfunction _isPinnedNodeGrandTotal(node) {\n  return !!node.pinnedSibling && _isNodeGrandTotal(node.pinnedSibling);\n}\nfunction _removeGrandTotalRow(order) {\n  const index = order.findIndex(_isPinnedNodeGrandTotal);\n  if (index > -1) {\n    return order.splice(index, 1)?.[0];\n  }\n}\n\n// packages/ag-grid-community/src/pinnedRowModel/manualPinnedRowModel.ts\nvar ManualPinnedRowModel = class extends BeanStub {\n  postConstruct() {\n    const {\n      gos,\n      beans\n    } = this;\n    this.top = new PinnedRows(beans, \"top\");\n    this.bottom = new PinnedRows(beans, \"bottom\");\n    const shouldHide = node => _shouldHidePinnedRows(beans, node.pinnedSibling);\n    const runIsRowPinned = () => {\n      const isRowPinned = gos.get(\"isRowPinned\");\n      if (isRowPinned && gos.get(\"enableRowPinning\")) {\n        beans.rowModel.forEachNode(node => this.pinRow(node, isRowPinned(node)), true);\n      }\n      this.refreshRowPositions();\n      this.dispatchRowPinnedEvents();\n    };\n    this.addManagedEventListeners({\n      gridStylesChanged: this.onGridStylesChanges.bind(this),\n      modelUpdated: ({\n        keepRenderedRows\n      }) => {\n        this.tryToEmptyQueues();\n        this.pinGrandTotalRow();\n        this.forContainers(container => container.hide(shouldHide));\n        this.refreshRowPositions();\n        if (!keepRenderedRows) {\n          this.dispatchRowPinnedEvents();\n        }\n      },\n      columnRowGroupChanged: () => {\n        this.forContainers(removeGroupRows);\n        this.refreshRowPositions();\n      },\n      rowNodeDataChanged: ({\n        node\n      }) => {\n        const isRowPinnable = gos.get(\"isRowPinnable\");\n        const pinnable = isRowPinnable?.(node) ?? true;\n        if (!pinnable) {\n          this.pinRow(node, null);\n        }\n      },\n      firstDataRendered: runIsRowPinned\n    });\n    this.addManagedPropertyListener(\"pivotMode\", () => {\n      this.forContainers(container => container.hide(shouldHide));\n      this.dispatchRowPinnedEvents();\n    });\n    this.addManagedPropertyListener(\"grandTotalRow\", ({\n      currentValue\n    }) => {\n      this._grandTotalPinned = currentValue === \"pinnedBottom\" ? \"bottom\" : currentValue === \"pinnedTop\" ? \"top\" : null;\n    });\n    this.addManagedPropertyListener(\"isRowPinned\", runIsRowPinned);\n  }\n  destroy() {\n    this.reset(false);\n    super.destroy();\n  }\n  reset(dispatch = true) {\n    this.forContainers(container => {\n      const nodesToUnpin = [];\n      container.forEach(n => nodesToUnpin.push(n));\n      nodesToUnpin.forEach(n => this.pinRow(n, null));\n      container.clear();\n    });\n    if (dispatch) {\n      this.dispatchRowPinnedEvents();\n    }\n  }\n  pinRow(rowNode, float, column) {\n    if (rowNode.footer && rowNode.level > -1) return;\n    if (rowNode.footer && rowNode.level === -1) {\n      this._grandTotalPinned = float;\n      refreshCSRM(this.beans);\n      return;\n    }\n    const currentFloat = rowNode.rowPinned ?? rowNode.pinnedSibling?.rowPinned;\n    const switching = currentFloat != null && float != null && float != currentFloat;\n    if (switching) {\n      const pinned = rowNode.rowPinned ? rowNode : rowNode.pinnedSibling;\n      const source = rowNode.rowPinned ? rowNode.pinnedSibling : rowNode;\n      this.pinRow(pinned, null, column);\n      this.pinRow(source, float, column);\n      return;\n    }\n    const spannedRows = column && getSpannedRows(this.beans, rowNode, column);\n    if (spannedRows) {\n      spannedRows.forEach(node => this.pinRow(node, float));\n      return;\n    }\n    if (float == null) {\n      const node = rowNode.rowPinned ? rowNode : rowNode.pinnedSibling;\n      const found = this.findPinnedRowNode(node);\n      if (!found) return;\n      found.delete(node);\n      const source = node.pinnedSibling;\n      _destroyRowNodeSibling(node);\n      this.refreshRowPositions(float);\n      this.dispatchRowPinnedEvents(source);\n    } else {\n      const sibling = _createPinnedSibling(this.beans, rowNode, float);\n      const container = this.getContainer(float);\n      container.add(sibling);\n      if (_shouldHidePinnedRows(this.beans, rowNode)) {\n        container.hide(node => _shouldHidePinnedRows(this.beans, node.pinnedSibling));\n      }\n      this.refreshRowPositions(float);\n      this.dispatchRowPinnedEvents(rowNode);\n    }\n  }\n  isManual() {\n    return true;\n  }\n  isEmpty(floating) {\n    return this.getContainer(floating).size() === 0;\n  }\n  isRowsToRender(floating) {\n    return !this.isEmpty(floating);\n  }\n  ensureRowHeightsValid() {\n    let anyChange = false;\n    let rowTop = 0;\n    const updateRowHeight = rowNode => {\n      if (rowNode.rowHeightEstimated) {\n        const rowHeight = _getRowHeightForNode(this.beans, rowNode);\n        rowNode.setRowTop(rowTop);\n        rowNode.setRowHeight(rowHeight.height);\n        rowTop += rowHeight.height;\n        anyChange = true;\n      }\n    };\n    this.bottom.forEach(updateRowHeight);\n    rowTop = 0;\n    this.top.forEach(updateRowHeight);\n    this.eventSvc.dispatchEvent({\n      type: \"pinnedHeightChanged\"\n    });\n    return anyChange;\n  }\n  getPinnedTopTotalHeight() {\n    return getTotalHeight(this.top);\n  }\n  getPinnedBottomTotalHeight() {\n    return getTotalHeight(this.bottom);\n  }\n  getPinnedTopRowCount() {\n    return this.top.size();\n  }\n  getPinnedBottomRowCount() {\n    return this.bottom.size();\n  }\n  getPinnedTopRow(index) {\n    return this.top.getByIndex(index);\n  }\n  getPinnedBottomRow(index) {\n    return this.bottom.getByIndex(index);\n  }\n  getPinnedRowById(id, floating) {\n    return this.getContainer(floating).getById(id);\n  }\n  forEachPinnedRow(floating, callback) {\n    this.getContainer(floating).forEach(callback);\n  }\n  getPinnedState() {\n    const buildState = floating => {\n      const list = [];\n      this.forEachPinnedRow(floating, node => list.push(node.pinnedSibling.id));\n      return list;\n    };\n    return {\n      top: buildState(\"top\"),\n      bottom: buildState(\"bottom\")\n    };\n  }\n  setPinnedState(state) {\n    this.forContainers((pinned, floating) => {\n      for (const id of state[floating]) {\n        const node = this.beans.rowModel.getRowNode(id);\n        if (node) {\n          this.pinRow(node, floating);\n        } else {\n          pinned.queue(id);\n        }\n      }\n    });\n  }\n  getGrandTotalPinned() {\n    return this._grandTotalPinned;\n  }\n  setGrandTotalPinned(value) {\n    this._grandTotalPinned = value;\n  }\n  tryToEmptyQueues() {\n    this.forContainers((pinned, container) => {\n      const nodesToPin = /* @__PURE__ */new Set();\n      pinned.forEachQueued(id => {\n        const node = this.beans.rowModel.getRowNode(id);\n        if (node) {\n          nodesToPin.add(node);\n        }\n      });\n      for (const node of nodesToPin) {\n        pinned.unqueue(node.id);\n        this.pinRow(node, container);\n      }\n    });\n  }\n  pinGrandTotalRow() {\n    const {\n      gos,\n      beans,\n      _grandTotalPinned: float\n    } = this;\n    const rowModel = beans.rowModel;\n    if (!_isClientSideRowModel(gos, rowModel)) return;\n    const sibling = rowModel.rootNode?.sibling;\n    if (!sibling) return;\n    const pinnedSibling = sibling.pinnedSibling;\n    const container = pinnedSibling && this.findPinnedRowNode(pinnedSibling);\n    if (!float) {\n      if (!container) return;\n      container.delete(pinnedSibling);\n      _destroyRowNodeSibling(pinnedSibling);\n    } else {\n      if (container && container.floating !== float) {\n        container.delete(pinnedSibling);\n        _destroyRowNodeSibling(pinnedSibling);\n      }\n      if (!container || container.floating !== float) {\n        const newPinnedSibling = _createPinnedSibling(beans, sibling, float);\n        this.getContainer(float).add(newPinnedSibling);\n      }\n    }\n  }\n  onGridStylesChanges(e) {\n    if (e.rowHeightChanged) {\n      this.forContainers(container => container.forEach(rowNode => rowNode.setRowHeight(rowNode.rowHeight, true)));\n    }\n  }\n  getContainer(floating) {\n    return floating === \"top\" ? this.top : this.bottom;\n  }\n  findPinnedRowNode(node) {\n    if (this.top.has(node)) return this.top;\n    if (this.bottom.has(node)) return this.bottom;\n  }\n  refreshRowPositions(floating) {\n    const refreshAll = pinned => refreshRowPositions(this.beans, pinned);\n    return floating == null ? this.forContainers(refreshAll) : refreshAll(this.getContainer(floating));\n  }\n  forContainers(fn) {\n    fn(this.top, \"top\");\n    fn(this.bottom, \"bottom\");\n  }\n  dispatchRowPinnedEvents(node) {\n    this.eventSvc.dispatchEvent({\n      type: \"pinnedRowsChanged\"\n    });\n    node?.dispatchRowEvent(\"rowPinned\");\n  }\n};\nfunction refreshRowPositions(beans, container) {\n  let rowTop = 0;\n  container.forEach((node, index) => {\n    node.setRowTop(rowTop);\n    if (node.rowHeightEstimated || node.rowHeight == null) {\n      node.setRowHeight(_getRowHeightForNode(beans, node).height);\n    }\n    node.setRowIndex(index);\n    rowTop += node.rowHeight;\n  });\n}\nfunction _createPinnedSibling(beans, rowNode, floating) {\n  if (rowNode.pinnedSibling) {\n    return rowNode.pinnedSibling;\n  }\n  const sibling = _createRowNodeSibling(rowNode, beans);\n  sibling.setRowTop(null);\n  sibling.setRowIndex(null);\n  sibling.rowPinned = floating;\n  const prefix = floating === \"top\" ? ROW_ID_PREFIX_TOP_PINNED : ROW_ID_PREFIX_BOTTOM_PINNED;\n  sibling.id = `${prefix}${floating}-${rowNode.id}`;\n  sibling.pinnedSibling = rowNode;\n  rowNode.pinnedSibling = sibling;\n  return sibling;\n}\nfunction _destroyRowNodeSibling(rowNode) {\n  if (!rowNode.pinnedSibling) {\n    return;\n  }\n  rowNode.rowPinned = null;\n  rowNode.setRowTop(null);\n  rowNode.setRowIndex(null);\n  const mainNode = rowNode.pinnedSibling;\n  rowNode.pinnedSibling = void 0;\n  if (mainNode) {\n    mainNode.pinnedSibling = void 0;\n    mainNode.rowPinned = null;\n  }\n}\nfunction removeGroupRows(set) {\n  const rowsToRemove = /* @__PURE__ */new Set();\n  set.forEach(node => {\n    if (node.group) {\n      rowsToRemove.add(node);\n    }\n  });\n  rowsToRemove.forEach(node => set.delete(node));\n}\nfunction getSpannedRows(beans, rowNode, column) {\n  const {\n    rowSpanSvc\n  } = beans;\n  const isCellSpanning = (column && rowSpanSvc?.isCellSpanning(column, rowNode)) ?? false;\n  if (column && isCellSpanning) {\n    return rowSpanSvc?.getCellSpan(column, rowNode)?.spannedNodes;\n  }\n}\nfunction getTotalHeight(container) {\n  const size = container.size();\n  if (size === 0) return 0;\n  const node = container.getByIndex(size - 1);\n  if (node === void 0) return 0;\n  return node.rowTop + node.rowHeight;\n}\nfunction refreshCSRM({\n  gos,\n  rowModel\n}) {\n  if (_isClientSideRowModel(gos, rowModel)) {\n    rowModel.refreshModel({\n      step: \"map\"\n    });\n  }\n}\n\n// packages/ag-grid-community/src/pinnedRowModel/staticPinnedRowModel.ts\nvar StaticPinnedRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.nextId = 0;\n    this.pinnedTopRows = {\n      cache: {},\n      order: []\n    };\n    this.pinnedBottomRows = {\n      cache: {},\n      order: []\n    };\n  }\n  postConstruct() {\n    const gos = this.gos;\n    this.setPinnedRowData(gos.get(\"pinnedTopRowData\"), \"top\");\n    this.setPinnedRowData(gos.get(\"pinnedBottomRowData\"), \"bottom\");\n    this.addManagedPropertyListener(\"pinnedTopRowData\", e => this.setPinnedRowData(e.currentValue, \"top\"));\n    this.addManagedPropertyListener(\"pinnedBottomRowData\", e => this.setPinnedRowData(e.currentValue, \"bottom\"));\n    this.addManagedEventListeners({\n      gridStylesChanged: this.onGridStylesChanges.bind(this)\n    });\n  }\n  reset() {}\n  isEmpty(floating) {\n    return this.getCache(floating).order.length === 0;\n  }\n  isRowsToRender(floating) {\n    return !this.isEmpty(floating);\n  }\n  isManual() {\n    return false;\n  }\n  pinRow(_node, _container) {}\n  onGridStylesChanges(e) {\n    if (e.rowHeightChanged) {\n      const estimateRowHeight = rowNode => {\n        rowNode.setRowHeight(rowNode.rowHeight, true);\n      };\n      forEach(this.pinnedBottomRows, estimateRowHeight);\n      forEach(this.pinnedTopRows, estimateRowHeight);\n    }\n  }\n  ensureRowHeightsValid() {\n    let anyChange = false;\n    let rowTop = 0;\n    const updateRowHeight = rowNode => {\n      if (rowNode.rowHeightEstimated) {\n        const rowHeight = _getRowHeightForNode(this.beans, rowNode);\n        rowNode.setRowTop(rowTop);\n        rowNode.setRowHeight(rowHeight.height);\n        rowTop += rowHeight.height;\n        anyChange = true;\n      }\n    };\n    forEach(this.pinnedBottomRows, updateRowHeight);\n    rowTop = 0;\n    forEach(this.pinnedTopRows, updateRowHeight);\n    this.eventSvc.dispatchEvent({\n      type: \"pinnedHeightChanged\"\n    });\n    return anyChange;\n  }\n  setPinnedRowData(rowData, floating) {\n    this.updateNodesFromRowData(rowData, floating);\n    this.eventSvc.dispatchEvent({\n      type: \"pinnedRowDataChanged\"\n    });\n  }\n  /**\n   * Updates existing RowNode instances and creates new ones if necessary\n   *\n   * Setting data as `undefined` will clear row nodes\n   */\n  updateNodesFromRowData(allData, floating) {\n    const nodes = this.getCache(floating);\n    if (allData === void 0) {\n      nodes.order.length = 0;\n      nodes.cache = {};\n      return;\n    }\n    const getRowId = _getRowIdCallback(this.gos);\n    const idPrefix = floating === \"top\" ? ROW_ID_PREFIX_TOP_PINNED : ROW_ID_PREFIX_BOTTOM_PINNED;\n    const nodesToRemove = new Set(nodes.order);\n    const newOrder = [];\n    const dataIds = /* @__PURE__ */new Set();\n    let nextRowTop = 0;\n    let i = -1;\n    for (const data of allData) {\n      const id = getRowId?.({\n        data,\n        level: 0,\n        rowPinned: floating\n      }) ?? idPrefix + this.nextId++;\n      if (dataIds.has(id)) {\n        _warn(96, {\n          id,\n          data\n        });\n        continue;\n      }\n      i++;\n      dataIds.add(id);\n      newOrder.push(id);\n      const existingNode = getById(nodes, id);\n      if (existingNode !== void 0) {\n        if (existingNode.data !== data) {\n          existingNode.updateData(data);\n        }\n        nextRowTop += this.setRowTopAndRowIndex(existingNode, nextRowTop, i);\n        nodesToRemove.delete(id);\n      } else {\n        const rowNode = new RowNode(this.beans);\n        rowNode.id = id;\n        rowNode.data = data;\n        rowNode.rowPinned = floating;\n        nextRowTop += this.setRowTopAndRowIndex(rowNode, nextRowTop, i);\n        nodes.cache[id] = rowNode;\n        nodes.order.push(id);\n      }\n    }\n    nodesToRemove.forEach(id => {\n      getById(nodes, id)?.clearRowTopAndRowIndex();\n      delete nodes.cache[id];\n    });\n    nodes.order = newOrder;\n  }\n  setRowTopAndRowIndex(rowNode, rowTop, rowIndex) {\n    rowNode.setRowTop(rowTop);\n    rowNode.setRowHeight(_getRowHeightForNode(this.beans, rowNode).height);\n    rowNode.setRowIndex(rowIndex);\n    return rowNode.rowHeight;\n  }\n  getPinnedTopTotalHeight() {\n    return getTotalHeight2(this.pinnedTopRows);\n  }\n  getPinnedBottomTotalHeight() {\n    return getTotalHeight2(this.pinnedBottomRows);\n  }\n  getPinnedTopRowCount() {\n    return getSize(this.pinnedTopRows);\n  }\n  getPinnedBottomRowCount() {\n    return getSize(this.pinnedBottomRows);\n  }\n  getPinnedTopRow(index) {\n    return getByIndex(this.pinnedTopRows, index);\n  }\n  getPinnedBottomRow(index) {\n    return getByIndex(this.pinnedBottomRows, index);\n  }\n  getPinnedRowById(id, floating) {\n    return getById(this.getCache(floating), id);\n  }\n  forEachPinnedRow(floating, callback) {\n    return forEach(this.getCache(floating), callback);\n  }\n  getCache(floating) {\n    return floating === \"top\" ? this.pinnedTopRows : this.pinnedBottomRows;\n  }\n  getPinnedState() {\n    return {\n      top: [],\n      bottom: []\n    };\n  }\n  setPinnedState() {}\n  getGrandTotalPinned() {\n    return;\n  }\n  setGrandTotalPinned() {}\n};\nfunction getTotalHeight2(rowNodes) {\n  const size = getSize(rowNodes);\n  if (size === 0) {\n    return 0;\n  }\n  const node = getByIndex(rowNodes, size - 1);\n  if (node === void 0) {\n    return 0;\n  }\n  return node.rowTop + node.rowHeight;\n}\nfunction getById(cache, id) {\n  return cache.cache[id];\n}\nfunction getByIndex(cache, i) {\n  return getById(cache, cache.order[i]);\n}\nfunction forEach(cache, callback) {\n  cache.order.forEach((id, index) => {\n    const node = getById(cache, id);\n    node && callback(node, index);\n  });\n}\nfunction getSize(cache) {\n  return cache.order.length;\n}\n\n// packages/ag-grid-community/src/pinnedRowModel/pinnedRowModel.ts\nvar PinnedRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pinnedRowModel\";\n  }\n  postConstruct() {\n    const {\n      gos\n    } = this;\n    const initialiseRowModel = () => {\n      const enableRowPinning = gos.get(\"enableRowPinning\");\n      const grandTotalRow = _getGrandTotalRow(gos);\n      const isGrandTotalRowPinned = grandTotalRow === \"pinnedBottom\" || grandTotalRow === \"pinnedTop\";\n      const useManualPinnedRowModel = !!enableRowPinning || isGrandTotalRowPinned;\n      const shouldDestroy = useManualPinnedRowModel ? this.inner instanceof StaticPinnedRowModel : this.inner instanceof ManualPinnedRowModel;\n      if (this.inner && shouldDestroy) {\n        this.destroyBean(this.inner);\n      }\n      if (shouldDestroy || !this.inner) {\n        this.inner = this.createManagedBean(useManualPinnedRowModel ? new ManualPinnedRowModel() : new StaticPinnedRowModel());\n      }\n    };\n    this.addManagedPropertyListeners([\"enableRowPinning\", \"grandTotalRow\"], initialiseRowModel);\n    initialiseRowModel();\n  }\n  reset() {\n    return this.inner.reset();\n  }\n  isEmpty(container) {\n    return this.inner.isEmpty(container);\n  }\n  isManual() {\n    return this.inner.isManual();\n  }\n  isRowsToRender(container) {\n    return this.inner.isRowsToRender(container);\n  }\n  pinRow(node, container, column) {\n    return this.inner.pinRow(node, container, column);\n  }\n  ensureRowHeightsValid() {\n    return this.inner.ensureRowHeightsValid();\n  }\n  getPinnedRowById(id, container) {\n    return this.inner.getPinnedRowById(id, container);\n  }\n  getPinnedTopTotalHeight() {\n    return this.inner.getPinnedTopTotalHeight();\n  }\n  getPinnedBottomTotalHeight() {\n    return this.inner.getPinnedBottomTotalHeight();\n  }\n  getPinnedTopRowCount() {\n    return this.inner.getPinnedTopRowCount();\n  }\n  getPinnedBottomRowCount() {\n    return this.inner.getPinnedBottomRowCount();\n  }\n  getPinnedTopRow(index) {\n    return this.inner.getPinnedTopRow(index);\n  }\n  getPinnedBottomRow(index) {\n    return this.inner.getPinnedBottomRow(index);\n  }\n  forEachPinnedRow(container, callback) {\n    return this.inner.forEachPinnedRow(container, callback);\n  }\n  getPinnedState() {\n    return this.inner.getPinnedState();\n  }\n  setPinnedState(state) {\n    return this.inner.setPinnedState(state);\n  }\n  setGrandTotalPinned(value) {\n    return this.inner.setGrandTotalPinned(value);\n  }\n  getGrandTotalPinned() {\n    return this.inner.getGrandTotalPinned();\n  }\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/abstractClientSideNodeManager.ts\nvar ROOT_NODE_ID = \"ROOT_NODE_ID\";\nvar AbstractClientSideNodeManager = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.nextId = 0;\n    this.allNodesMap = {};\n    this.rootNode = null;\n  }\n  getRowNode(id) {\n    return this.allNodesMap[id];\n  }\n  extractRowData() {\n    return this.rootNode?.allLeafChildren?.map(node => node.data);\n  }\n  activate(rootNode) {\n    this.rootNode = rootNode;\n    rootNode.group = true;\n    rootNode.level = -1;\n    rootNode.id = ROOT_NODE_ID;\n    rootNode.allLeafChildren = [];\n    rootNode.childrenAfterGroup = [];\n    rootNode.childrenAfterSort = [];\n    rootNode.childrenAfterAggFilter = [];\n    rootNode.childrenAfterFilter = [];\n    this.updateRootSiblingArrays(rootNode);\n  }\n  deactivate() {\n    if (this.rootNode) {\n      this.allNodesMap = {};\n      this.rootNode = null;\n    }\n  }\n  destroy() {\n    super.destroy();\n    this.allNodesMap = {};\n    this.rootNode = null;\n  }\n  setNewRowData(rowData) {\n    const rootNode = this.rootNode;\n    if (!rootNode) {\n      return;\n    }\n    this.dispatchRowDataUpdateStartedEvent(rowData);\n    rootNode.childrenAfterFilter = null;\n    rootNode.childrenAfterGroup = null;\n    rootNode.childrenAfterAggFilter = null;\n    rootNode.childrenAfterSort = null;\n    rootNode.childrenMapped = null;\n    rootNode.updateHasChildren();\n    this.allNodesMap = {};\n    this.nextId = 0;\n    this.loadNewRowData(rowData);\n    this.updateRootSiblingArrays(rootNode);\n  }\n  updateRootSiblingArrays(rootNode) {\n    const sibling = rootNode.sibling;\n    if (sibling) {\n      sibling.childrenAfterFilter = rootNode.childrenAfterFilter;\n      sibling.childrenAfterGroup = rootNode.childrenAfterGroup;\n      sibling.childrenAfterAggFilter = rootNode.childrenAfterAggFilter;\n      sibling.childrenAfterSort = rootNode.childrenAfterSort;\n      sibling.childrenMapped = rootNode.childrenMapped;\n      sibling.allLeafChildren = rootNode.allLeafChildren;\n    }\n  }\n  loadNewRowData(rowData) {\n    this.rootNode.allLeafChildren = rowData?.map((dataItem, index) => this.createRowNode(dataItem, index)) ?? [];\n  }\n  setImmutableRowData(params, rowData) {\n    const getRowIdFunc = _getRowIdCallback(this.gos);\n    const reorder = !this.gos.get(\"suppressMaintainUnsortedOrder\");\n    const changedRowNodes = params.changedRowNodes;\n    const processedNodes = /* @__PURE__ */new Set();\n    const rootNode = this.rootNode;\n    const oldAllLeafChildren = rootNode.allLeafChildren;\n    const oldAllLeafChildrenLen = oldAllLeafChildren.length;\n    let nodesAdded = false;\n    let nodesRemoved = false;\n    let nodesUpdated = false;\n    let orderChanged = false;\n    for (let i = 0, prevSourceRowIndex = -1, len = rowData.length; i < len; i++) {\n      const data = rowData[i];\n      let node = this.getRowNode(getRowIdFunc({\n        data,\n        level: 0\n      }));\n      if (!node) {\n        nodesAdded = true;\n        node = this.createRowNode(data, -1);\n        changedRowNodes.add(node);\n      } else {\n        if (reorder) {\n          const sourceRowIndex = node.sourceRowIndex;\n          orderChanged || (orderChanged = sourceRowIndex <= prevSourceRowIndex ||\n          // A node was moved up, so order changed\n          nodesAdded);\n          prevSourceRowIndex = sourceRowIndex;\n        }\n        if (node.data !== data) {\n          nodesUpdated = true;\n          node.updateData(data);\n          changedRowNodes.update(node);\n        }\n      }\n      processedNodes.add(node);\n    }\n    const nodesToUnselect = [];\n    for (let i = 0; i < oldAllLeafChildrenLen; i++) {\n      const node = oldAllLeafChildren[i];\n      if (!processedNodes.has(node)) {\n        nodesRemoved = true;\n        if (node.isSelected()) {\n          nodesToUnselect.push(node);\n        }\n        if (node.pinnedSibling) {\n          this.beans.pinnedRowModel?.pinRow(node.pinnedSibling, null);\n        }\n        this.rowNodeDeleted(node);\n        changedRowNodes.remove(node);\n      }\n    }\n    if (nodesAdded || nodesRemoved || orderChanged) {\n      const newAllLeafChildren = new Array(processedNodes.size);\n      let writeIdx = 0;\n      if (!reorder) {\n        for (let i = 0; i < oldAllLeafChildrenLen; ++i) {\n          const node = oldAllLeafChildren[i];\n          if (processedNodes.delete(node)) {\n            node.sourceRowIndex = writeIdx;\n            newAllLeafChildren[writeIdx++] = node;\n          }\n        }\n      }\n      for (const node of processedNodes) {\n        node.sourceRowIndex = writeIdx;\n        newAllLeafChildren[writeIdx++] = node;\n      }\n      rootNode.allLeafChildren = newAllLeafChildren;\n      const sibling = rootNode.sibling;\n      if (sibling) {\n        sibling.allLeafChildren = newAllLeafChildren;\n      }\n      params.rowNodesOrderChanged || (params.rowNodesOrderChanged = orderChanged);\n    }\n    if (nodesAdded || nodesRemoved || orderChanged || nodesUpdated) {\n      this.deselectNodes(nodesToUnselect);\n      params.rowDataUpdated = true;\n    }\n  }\n  /** Called when a node needs to be deleted */\n  rowNodeDeleted(node) {\n    node.clearRowTopAndRowIndex();\n    const id = node.id;\n    const allNodesMap = this.allNodesMap;\n    if (allNodesMap[id] === node) {\n      delete allNodesMap[id];\n    }\n  }\n  updateRowData(rowDataTran, changedRowNodes) {\n    this.dispatchRowDataUpdateStartedEvent(rowDataTran.add);\n    const updateRowDataResult = {\n      changedRowNodes,\n      rowNodeTransaction: {\n        remove: [],\n        update: [],\n        add: []\n      },\n      rowsInserted: false\n    };\n    const nodesToUnselect = [];\n    const getRowIdFunc = _getRowIdCallback(this.gos);\n    this.executeRemove(getRowIdFunc, rowDataTran, updateRowDataResult, nodesToUnselect);\n    this.executeUpdate(getRowIdFunc, rowDataTran, updateRowDataResult, nodesToUnselect);\n    this.executeAdd(rowDataTran, updateRowDataResult);\n    this.deselectNodes(nodesToUnselect);\n    return updateRowDataResult;\n  }\n  executeAdd(rowDataTran, result) {\n    const add = rowDataTran.add;\n    if (!add?.length) {\n      return;\n    }\n    let allLeafChildren = this.rootNode.allLeafChildren;\n    let addIndex = allLeafChildren.length;\n    if (typeof rowDataTran.addIndex === \"number\") {\n      addIndex = this.sanitizeAddIndex(rowDataTran.addIndex);\n      if (addIndex > 0) {\n        const getDataPath = this.gos.get(\"treeData\") && this.gos.get(\"getDataPath\");\n        if (getDataPath) {\n          for (let i = 0; i < allLeafChildren.length; i++) {\n            const node = allLeafChildren[i];\n            if (node?.rowIndex == addIndex - 1) {\n              addIndex = i + 1;\n              break;\n            }\n          }\n        }\n      }\n    }\n    const addLength = add.length;\n    const changedRowNodes = result.changedRowNodes;\n    const newNodes = new Array(addLength);\n    for (let i = 0; i < addLength; i++) {\n      const newNode = this.createRowNode(add[i], addIndex + i);\n      changedRowNodes.add(newNode);\n      newNodes[i] = newNode;\n    }\n    const rootNode = this.rootNode;\n    if (addIndex < allLeafChildren.length) {\n      const nodesBeforeIndex = allLeafChildren.slice(0, addIndex);\n      const nodesAfterIndex = allLeafChildren.slice(addIndex, allLeafChildren.length);\n      const nodesAfterIndexFirstIndex = nodesBeforeIndex.length + newNodes.length;\n      for (let index = 0, length = nodesAfterIndex.length; index < length; ++index) {\n        nodesAfterIndex[index].sourceRowIndex = nodesAfterIndexFirstIndex + index;\n      }\n      allLeafChildren = [...nodesBeforeIndex, ...newNodes, ...nodesAfterIndex];\n      result.rowsInserted = true;\n    } else {\n      allLeafChildren = allLeafChildren.concat(newNodes);\n    }\n    rootNode.allLeafChildren = allLeafChildren;\n    const sibling = rootNode.sibling;\n    if (sibling) {\n      sibling.allLeafChildren = allLeafChildren;\n    }\n    result.rowNodeTransaction.add = newNodes;\n  }\n  executeRemove(getRowIdFunc, rowDataTran, {\n    changedRowNodes,\n    rowNodeTransaction\n  }, nodesToUnselect) {\n    const {\n      remove\n    } = rowDataTran;\n    if (!remove?.length) {\n      return;\n    }\n    const rowIdsRemoved = {};\n    remove.forEach(item => {\n      const rowNode = this.lookupRowNode(getRowIdFunc, item);\n      if (!rowNode) {\n        return;\n      }\n      if (rowNode.isSelected()) {\n        nodesToUnselect.push(rowNode);\n      }\n      if (rowNode.pinnedSibling) {\n        this.beans.pinnedRowModel?.pinRow(rowNode.pinnedSibling, null);\n      }\n      rowNode.clearRowTopAndRowIndex();\n      rowIdsRemoved[rowNode.id] = true;\n      delete this.allNodesMap[rowNode.id];\n      rowNodeTransaction.remove.push(rowNode);\n      changedRowNodes.remove(rowNode);\n    });\n    const rootNode = this.rootNode;\n    rootNode.allLeafChildren = rootNode.allLeafChildren?.filter(rowNode => !rowIdsRemoved[rowNode.id]) ?? null;\n    rootNode.allLeafChildren?.forEach((node, idx) => {\n      node.sourceRowIndex = idx;\n    });\n    const sibling = rootNode.sibling;\n    if (sibling) {\n      sibling.allLeafChildren = rootNode.allLeafChildren;\n    }\n  }\n  executeUpdate(getRowIdFunc, rowDataTran, {\n    changedRowNodes,\n    rowNodeTransaction\n  }, nodesToUnselect) {\n    const {\n      update\n    } = rowDataTran;\n    if (!update?.length) {\n      return;\n    }\n    update.forEach(item => {\n      const rowNode = this.lookupRowNode(getRowIdFunc, item);\n      if (!rowNode) {\n        return;\n      }\n      rowNode.updateData(item);\n      if (!rowNode.selectable && rowNode.isSelected()) {\n        nodesToUnselect.push(rowNode);\n      }\n      rowNodeTransaction.update.push(rowNode);\n      changedRowNodes.update(rowNode);\n    });\n  }\n  dispatchRowDataUpdateStartedEvent(rowData) {\n    this.eventSvc.dispatchEvent({\n      type: \"rowDataUpdateStarted\",\n      firstRowData: rowData?.length ? rowData[0] : null\n    });\n  }\n  deselectNodes(nodesToUnselect) {\n    const source = \"rowDataChanged\";\n    const selectionSvc = this.beans.selectionSvc;\n    const selectionChanged = nodesToUnselect.length > 0;\n    if (selectionChanged) {\n      selectionSvc?.setNodesSelected({\n        newValue: false,\n        nodes: nodesToUnselect,\n        suppressFinishActions: true,\n        source\n      });\n    }\n    selectionSvc?.updateGroupsFromChildrenSelections?.(source);\n    if (selectionChanged) {\n      this.eventSvc.dispatchEvent({\n        type: \"selectionChanged\",\n        source,\n        selectedNodes: selectionSvc?.getSelectedNodes() ?? null,\n        serverSideState: null\n      });\n    }\n  }\n  sanitizeAddIndex(addIndex) {\n    const allChildrenCount = this.rootNode.allLeafChildren?.length ?? 0;\n    if (addIndex < 0 || addIndex >= allChildrenCount || Number.isNaN(addIndex)) {\n      return allChildrenCount;\n    }\n    return Math.ceil(addIndex);\n  }\n  createRowNode(data, sourceRowIndex) {\n    const node = new RowNode(this.beans);\n    node.parent = this.rootNode;\n    node.level = 0;\n    node.group = false;\n    node.expanded = false;\n    node.sourceRowIndex = sourceRowIndex;\n    node.setDataAndId(data, String(this.nextId));\n    if (this.allNodesMap[node.id]) {\n      _warn(2, {\n        nodeId: node.id\n      });\n    }\n    this.allNodesMap[node.id] = node;\n    this.nextId++;\n    return node;\n  }\n  lookupRowNode(getRowIdFunc, data) {\n    let rowNode;\n    if (getRowIdFunc) {\n      const id = getRowIdFunc({\n        data,\n        level: 0\n      });\n      rowNode = this.allNodesMap[id];\n      if (!rowNode) {\n        _error(4, {\n          id\n        });\n        return null;\n      }\n    } else {\n      rowNode = this.rootNode?.allLeafChildren?.find(node => node.data === data);\n      if (!rowNode) {\n        _error(5, {\n          data\n        });\n        return null;\n      }\n    }\n    return rowNode || null;\n  }\n};\n\n// packages/ag-grid-community/src/interfaces/serverSideTransaction.ts\nvar ServerSideTransactionResultStatus = /* @__PURE__ */(ServerSideTransactionResultStatus2 => {\n  ServerSideTransactionResultStatus2[\"Applied\"] = \"Applied\";\n  ServerSideTransactionResultStatus2[\"StoreNotFound\"] = \"StoreNotFound\";\n  ServerSideTransactionResultStatus2[\"StoreLoading\"] = \"StoreLoading\";\n  ServerSideTransactionResultStatus2[\"StoreWaitingToLoad\"] = \"StoreWaitingToLoad\";\n  ServerSideTransactionResultStatus2[\"StoreLoadingFailed\"] = \"StoreLoadingFailed\";\n  ServerSideTransactionResultStatus2[\"StoreWrongType\"] = \"StoreWrongType\";\n  ServerSideTransactionResultStatus2[\"Cancelled\"] = \"Cancelled\";\n  ServerSideTransactionResultStatus2[\"StoreNotStarted\"] = \"StoreNotStarted\";\n  return ServerSideTransactionResultStatus2;\n})(ServerSideTransactionResultStatus || {});\n\n// packages/ag-grid-community/src/selection/checkboxSelectionComponent.ts\nvar CheckboxSelectionComponentElement = {\n  tag: \"div\",\n  cls: \"ag-selection-checkbox\",\n  role: \"presentation\",\n  children: [{\n    tag: \"ag-checkbox\",\n    ref: \"eCheckbox\",\n    role: \"presentation\"\n  }]\n};\nvar CheckboxSelectionComponent = class extends Component {\n  constructor() {\n    super(CheckboxSelectionComponentElement, [AgCheckboxSelector]);\n    this.eCheckbox = RefPlaceholder;\n  }\n  postConstruct() {\n    this.eCheckbox.setPassive(true);\n  }\n  onDataChanged() {\n    this.onSelectionChanged();\n  }\n  onSelectableChanged() {\n    this.showOrHideSelect();\n  }\n  onSelectionChanged() {\n    const translate = this.getLocaleTextFunc();\n    const {\n      rowNode,\n      eCheckbox\n    } = this;\n    const state = rowNode.isSelected();\n    const stateName = _getAriaCheckboxStateName(translate, state);\n    const [ariaKey, ariaLabel] = rowNode.selectable ? [\"ariaRowToggleSelection\", \"Press Space to toggle row selection\"] : [\"ariaRowSelectionDisabled\", \"Row Selection is disabled for this row\"];\n    const translatedLabel = translate(ariaKey, ariaLabel);\n    eCheckbox.setValue(state, true);\n    eCheckbox.setInputAriaLabel(`${translatedLabel} (${stateName})`);\n  }\n  init(params) {\n    this.rowNode = params.rowNode;\n    this.column = params.column;\n    this.overrides = params.overrides;\n    this.onSelectionChanged();\n    this.addManagedListeners(this.eCheckbox.getInputElement(), {\n      // we don't want double click on this icon to open a group\n      dblclick: _stopPropagationForAgGrid,\n      click: event => {\n        _stopPropagationForAgGrid(event);\n        this.beans.selectionSvc?.handleSelectionEvent(event, this.rowNode, \"checkboxSelected\");\n      }\n    });\n    this.addManagedListeners(this.rowNode, {\n      rowSelected: this.onSelectionChanged.bind(this),\n      dataChanged: this.onDataChanged.bind(this),\n      selectableChanged: this.onSelectableChanged.bind(this)\n    });\n    this.addManagedPropertyListener(\"rowSelection\", ({\n      currentValue,\n      previousValue\n    }) => {\n      const curr = typeof currentValue === \"object\" ? _getHideDisabledCheckboxes(currentValue) : void 0;\n      const prev = typeof previousValue === \"object\" ? _getHideDisabledCheckboxes(previousValue) : void 0;\n      if (curr !== prev) {\n        this.onSelectableChanged();\n      }\n    });\n    const isRowSelectableFunc = _getIsRowSelectable(this.gos);\n    const checkboxVisibleIsDynamic = isRowSelectableFunc || typeof this.getIsVisible() === \"function\";\n    if (checkboxVisibleIsDynamic) {\n      const showOrHideSelectListener = this.showOrHideSelect.bind(this);\n      this.addManagedEventListeners({\n        displayedColumnsChanged: showOrHideSelectListener\n      });\n      this.addManagedListeners(this.rowNode, {\n        dataChanged: showOrHideSelectListener,\n        cellChanged: showOrHideSelectListener\n      });\n      this.showOrHideSelect();\n    }\n    this.eCheckbox.getInputElement().setAttribute(\"tabindex\", \"-1\");\n  }\n  showOrHideSelect() {\n    const {\n      column,\n      rowNode,\n      overrides,\n      gos\n    } = this;\n    const selectable = rowNode.selectable;\n    const isVisible = this.getIsVisible();\n    let checkboxes = void 0;\n    if (typeof isVisible === \"function\") {\n      const extraParams = overrides?.callbackParams;\n      if (!column) {\n        checkboxes = isVisible({\n          ...extraParams,\n          node: rowNode,\n          data: rowNode.data\n        });\n      } else {\n        const params = column.createColumnFunctionCallbackParams(rowNode);\n        checkboxes = isVisible({\n          ...extraParams,\n          ...params\n        });\n      }\n    } else {\n      checkboxes = isVisible ?? false;\n    }\n    const disabled = selectable && !checkboxes || !selectable && checkboxes;\n    const visible = selectable || checkboxes;\n    const so = gos.get(\"rowSelection\");\n    const showDisabledCheckboxes = so && typeof so !== \"string\" ? !_getHideDisabledCheckboxes(so) : !!column?.getColDef().showDisabledCheckboxes;\n    this.setVisible(visible && (disabled ? showDisabledCheckboxes : true));\n    this.setDisplayed(visible && (disabled ? showDisabledCheckboxes : true));\n    if (visible) {\n      this.eCheckbox.setDisabled(disabled);\n    }\n    if (overrides?.removeHidden) {\n      this.setDisplayed(visible);\n      return;\n    }\n  }\n  getIsVisible() {\n    const overrides = this.overrides;\n    if (overrides) {\n      return overrides.isVisible;\n    }\n    const so = this.gos.get(\"rowSelection\");\n    if (so && typeof so !== \"string\") {\n      return _getCheckboxes(so);\n    }\n    return this.column?.getColDef()?.checkboxSelection;\n  }\n};\n\n// packages/ag-grid-community/src/selection/rowRangeSelectionContext.ts\nvar RowRangeSelectionContext = class {\n  constructor(rowModel, pinnedRowModel) {\n    this.rowModel = rowModel;\n    this.pinnedRowModel = pinnedRowModel;\n    /** Whether the user is currently selecting all nodes either via the header checkbox or API */\n    this.selectAll = false;\n    this.rootId = null;\n    /**\n     * Note that the \"end\" `RowNode` may come before or after the \"root\" `RowNode` in the\n     * actual grid.\n     */\n    this.endId = null;\n    this.cachedRange = [];\n  }\n  reset() {\n    this.rootId = null;\n    this.endId = null;\n    this.cachedRange.length = 0;\n  }\n  setRoot(node) {\n    this.rootId = node.id;\n    this.endId = null;\n    this.cachedRange.length = 0;\n  }\n  setEndRange(end) {\n    this.endId = end.id;\n    this.cachedRange.length = 0;\n  }\n  getRange() {\n    if (this.cachedRange.length === 0) {\n      const root = this.getRoot();\n      const end = this.getEnd();\n      if (root == null || end == null) {\n        return this.cachedRange;\n      }\n      this.cachedRange = this.getNodesInRange(root, end) ?? [];\n    }\n    return this.cachedRange;\n  }\n  isInRange(node) {\n    if (this.rootId === null) {\n      return false;\n    }\n    return this.getRange().some(nodeInRange => nodeInRange.id === node.id);\n  }\n  getRoot(fallback) {\n    if (this.rootId) {\n      return this.getRowNode(this.rootId);\n    }\n    if (fallback) {\n      this.setRoot(fallback);\n      return fallback;\n    }\n  }\n  getEnd() {\n    if (this.endId) {\n      return this.getRowNode(this.endId);\n    }\n  }\n  getRowNode(id) {\n    let node;\n    const {\n      rowModel,\n      pinnedRowModel\n    } = this;\n    node ?? (node = rowModel.getRowNode(id));\n    if (pinnedRowModel?.isManual()) {\n      node ?? (node = pinnedRowModel.getPinnedRowById(id, \"top\"));\n      node ?? (node = pinnedRowModel.getPinnedRowById(id, \"bottom\"));\n    }\n    return node;\n  }\n  /**\n   * Truncates the range to the given node (assumed to be within the current range).\n   * Returns nodes that remain in the current range and those that should be removed\n   *\n   * @param node - Node at which to truncate the range\n   * @returns Object of nodes to either keep or discard (i.e. deselect) from the range\n   */\n  truncate(node) {\n    const range = this.getRange();\n    if (range.length === 0) {\n      return {\n        keep: [],\n        discard: []\n      };\n    }\n    const discardAfter = range[0].id === this.rootId;\n    const idx = range.findIndex(rowNode => rowNode.id === node.id);\n    if (idx > -1) {\n      const above = range.slice(0, idx);\n      const below = range.slice(idx + 1);\n      this.setEndRange(node);\n      return discardAfter ? {\n        keep: above,\n        discard: below\n      } : {\n        keep: below,\n        discard: above\n      };\n    } else {\n      return {\n        keep: range,\n        discard: []\n      };\n    }\n  }\n  /**\n   * Extends the range to the given node. Returns nodes that remain in the current range\n   * and those that should be removed.\n   *\n   * @param node - Node marking the new end of the range\n   * @returns Object of nodes to either keep or discard (i.e. deselect) from the range\n   */\n  extend(node, groupSelectsChildren = false) {\n    const root = this.getRoot();\n    if (root == null) {\n      const keep = this.getRange().slice();\n      if (groupSelectsChildren) {\n        node.depthFirstSearch(node2 => !node2.group && keep.push(node2));\n      }\n      keep.push(node);\n      this.setRoot(node);\n      return {\n        keep,\n        discard: []\n      };\n    }\n    const newRange = this.getNodesInRange(root, node);\n    if (!newRange) {\n      this.setRoot(node);\n      return {\n        keep: [node],\n        discard: []\n      };\n    }\n    if (newRange.find(newRangeNode => newRangeNode.id === this.endId)) {\n      this.setEndRange(node);\n      return {\n        keep: this.getRange(),\n        discard: []\n      };\n    } else {\n      const discard = this.getRange().slice();\n      this.setEndRange(node);\n      return {\n        keep: this.getRange(),\n        discard\n      };\n    }\n  }\n  getNodesInRange(start, end) {\n    const {\n      pinnedRowModel,\n      rowModel\n    } = this;\n    if (!pinnedRowModel?.isManual()) {\n      return rowModel.getNodesInRangeForSelection(start, end);\n    }\n    if (start.rowPinned === \"top\" && !end.rowPinned) {\n      const pinnedRange = _getNodesInRangeForSelection(pinnedRowModel, \"top\", start, void 0);\n      return pinnedRange.concat(rowModel.getNodesInRangeForSelection(rowModel.getRow(0), end) ?? []);\n    }\n    if (start.rowPinned === \"bottom\" && !end.rowPinned) {\n      const pinnedRange = _getNodesInRangeForSelection(pinnedRowModel, \"bottom\", void 0, start);\n      const count = rowModel.getRowCount();\n      const lastMain = rowModel.getRow(count - 1);\n      return (rowModel.getNodesInRangeForSelection(end, lastMain) ?? []).concat(pinnedRange);\n    }\n    if (!start.rowPinned && !end.rowPinned) {\n      return rowModel.getNodesInRangeForSelection(start, end);\n    }\n    if (start.rowPinned === \"top\" && end.rowPinned === \"top\") {\n      return _getNodesInRangeForSelection(pinnedRowModel, \"top\", start, end);\n    }\n    if (start.rowPinned === \"bottom\" && end.rowPinned === \"top\") {\n      const top = _getNodesInRangeForSelection(pinnedRowModel, \"top\", end, void 0);\n      const bottom = _getNodesInRangeForSelection(pinnedRowModel, \"bottom\", void 0, start);\n      const first = rowModel.getRow(0);\n      const last = rowModel.getRow(rowModel.getRowCount() - 1);\n      return top.concat(rowModel.getNodesInRangeForSelection(first, last) ?? []).concat(bottom);\n    }\n    if (!start.rowPinned && end.rowPinned === \"top\") {\n      const pinned = _getNodesInRangeForSelection(pinnedRowModel, \"top\", end, void 0);\n      return pinned.concat(rowModel.getNodesInRangeForSelection(rowModel.getRow(0), start) ?? []);\n    }\n    if (start.rowPinned === \"top\" && end.rowPinned === \"bottom\") {\n      const top = _getNodesInRangeForSelection(pinnedRowModel, \"top\", start, void 0);\n      const bottom = _getNodesInRangeForSelection(pinnedRowModel, \"bottom\", void 0, end);\n      const first = rowModel.getRow(0);\n      const last = rowModel.getRow(rowModel.getRowCount() - 1);\n      return top.concat(rowModel.getNodesInRangeForSelection(first, last) ?? []).concat(bottom);\n    }\n    if (start.rowPinned === \"bottom\" && end.rowPinned === \"bottom\") {\n      return _getNodesInRangeForSelection(pinnedRowModel, \"bottom\", start, end);\n    }\n    if (!start.rowPinned && end.rowPinned === \"bottom\") {\n      const pinned = _getNodesInRangeForSelection(pinnedRowModel, \"bottom\", void 0, end);\n      const last = rowModel.getRow(rowModel.getRowCount());\n      return (rowModel.getNodesInRangeForSelection(start, last) ?? []).concat(pinned);\n    }\n    return null;\n  }\n};\n\n// packages/ag-grid-community/src/selection/selectAllFeature.ts\nvar SelectAllFeature = class extends BeanStub {\n  constructor(column) {\n    super();\n    this.column = column;\n    this.cbSelectAllVisible = false;\n    this.processingEventFromCheckbox = false;\n  }\n  onSpaceKeyDown(e) {\n    const checkbox = this.cbSelectAll;\n    if (checkbox.isDisplayed() && !checkbox.getGui().contains(_getActiveDomElement(this.beans))) {\n      e.preventDefault();\n      checkbox.setValue(!checkbox.getValue());\n    }\n  }\n  getCheckboxGui() {\n    return this.cbSelectAll.getGui();\n  }\n  setComp(ctrl) {\n    this.headerCellCtrl = ctrl;\n    const cbSelectAll = this.createManagedBean(new AgCheckbox());\n    this.cbSelectAll = cbSelectAll;\n    cbSelectAll.addCss(\"ag-header-select-all\");\n    _setAriaRole(cbSelectAll.getGui(), \"presentation\");\n    this.showOrHideSelectAll();\n    const updateStateOfCheckbox = this.updateStateOfCheckbox.bind(this);\n    this.addManagedEventListeners({\n      newColumnsLoaded: () => this.showOrHideSelectAll(),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      selectionChanged: updateStateOfCheckbox,\n      paginationChanged: updateStateOfCheckbox,\n      modelUpdated: updateStateOfCheckbox\n    });\n    this.addManagedPropertyListener(\"rowSelection\", ({\n      currentValue,\n      previousValue\n    }) => {\n      const getSelectAll = rowSelection => typeof rowSelection === \"string\" || !rowSelection || rowSelection.mode === \"singleRow\" ? void 0 : rowSelection.selectAll;\n      if (getSelectAll(currentValue) !== getSelectAll(previousValue)) {\n        this.showOrHideSelectAll();\n      }\n      this.updateStateOfCheckbox();\n    });\n    this.addManagedListeners(cbSelectAll, {\n      fieldValueChanged: this.onCbSelectAll.bind(this)\n    });\n    cbSelectAll.getInputElement().setAttribute(\"tabindex\", \"-1\");\n    this.refreshSelectAllLabel();\n  }\n  onDisplayedColumnsChanged(e) {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.showOrHideSelectAll(e.source === \"uiColumnMoved\");\n  }\n  showOrHideSelectAll(fromColumnMoved = false) {\n    const cbSelectAllVisible = this.isCheckboxSelection();\n    this.cbSelectAllVisible = cbSelectAllVisible;\n    this.cbSelectAll.setDisplayed(cbSelectAllVisible);\n    if (cbSelectAllVisible) {\n      this.checkRightRowModelType(\"selectAllCheckbox\");\n      this.checkSelectionType(\"selectAllCheckbox\");\n      this.updateStateOfCheckbox();\n    }\n    this.refreshSelectAllLabel(fromColumnMoved);\n  }\n  updateStateOfCheckbox() {\n    if (!this.cbSelectAllVisible || this.processingEventFromCheckbox) {\n      return;\n    }\n    this.processingEventFromCheckbox = true;\n    const selectAllMode = this.getSelectAllMode();\n    const selectionSvc = this.beans.selectionSvc;\n    const cbSelectAll = this.cbSelectAll;\n    const allSelected = selectionSvc.getSelectAllState(selectAllMode);\n    cbSelectAll.setValue(allSelected);\n    const hasNodesToSelect = selectionSvc.hasNodesToSelect(selectAllMode);\n    cbSelectAll.setDisabled(!hasNodesToSelect);\n    this.refreshSelectAllLabel();\n    this.processingEventFromCheckbox = false;\n  }\n  refreshSelectAllLabel(fromColumnMoved = false) {\n    const translate = this.getLocaleTextFunc();\n    const {\n      headerCellCtrl,\n      cbSelectAll,\n      cbSelectAllVisible\n    } = this;\n    const checked = cbSelectAll.getValue();\n    const ariaStatus = _getAriaCheckboxStateName(translate, checked);\n    const ariaLabel = translate(\"ariaRowSelectAll\", \"Press Space to toggle all rows selection\");\n    headerCellCtrl.setAriaDescriptionProperty(\"selectAll\", cbSelectAllVisible ? `${ariaLabel} (${ariaStatus})` : null);\n    cbSelectAll.setInputAriaLabel(translate(\"ariaHeaderSelection\", \"Column with Header Selection\"));\n    if (!fromColumnMoved) {\n      headerCellCtrl.announceAriaDescription();\n    }\n  }\n  checkSelectionType(feature) {\n    const isMultiSelect = _isMultiRowSelection(this.gos);\n    if (!isMultiSelect) {\n      _warn(128, {\n        feature\n      });\n      return false;\n    }\n    return true;\n  }\n  checkRightRowModelType(feature) {\n    const {\n      gos,\n      rowModel\n    } = this.beans;\n    const rowModelMatches = _isClientSideRowModel(gos) || _isServerSideRowModel(gos);\n    if (!rowModelMatches) {\n      _warn(129, {\n        feature,\n        rowModel: rowModel.getType()\n      });\n      return false;\n    }\n    return true;\n  }\n  onCbSelectAll() {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    const value = this.cbSelectAll.getValue();\n    const selectAll2 = this.getSelectAllMode();\n    let source = \"uiSelectAll\";\n    if (selectAll2 === \"currentPage\") {\n      source = \"uiSelectAllCurrentPage\";\n    } else if (selectAll2 === \"filtered\") {\n      source = \"uiSelectAllFiltered\";\n    }\n    const params = {\n      source,\n      selectAll: selectAll2\n    };\n    const selectionSvc = this.beans.selectionSvc;\n    if (value) {\n      selectionSvc.selectAllRowNodes(params);\n    } else {\n      selectionSvc.deselectAllRowNodes(params);\n    }\n  }\n  /**\n   * Checkbox is enabled when either the `headerCheckbox` option is enabled in the new selection API\n   * or `headerCheckboxSelection` is enabled in the legacy API.\n   */\n  isCheckboxSelection() {\n    const {\n      column,\n      gos,\n      beans\n    } = this;\n    const rowSelection = gos.get(\"rowSelection\");\n    const newHeaderCheckbox = typeof rowSelection === \"object\";\n    const featureName = newHeaderCheckbox ? \"headerCheckbox\" : \"headerCheckboxSelection\";\n    return isCheckboxSelection(beans, column) && this.checkRightRowModelType(featureName) && this.checkSelectionType(featureName);\n  }\n  getSelectAllMode() {\n    const selectAll2 = _getSelectAll(this.gos, false);\n    if (selectAll2) {\n      return selectAll2;\n    }\n    const {\n      headerCheckboxSelectionCurrentPageOnly,\n      headerCheckboxSelectionFilteredOnly\n    } = this.column.getColDef();\n    if (headerCheckboxSelectionCurrentPageOnly) {\n      return \"currentPage\";\n    }\n    if (headerCheckboxSelectionFilteredOnly) {\n      return \"filtered\";\n    }\n    return \"all\";\n  }\n  destroy() {\n    super.destroy();\n    this.cbSelectAll = void 0;\n    this.headerCellCtrl = void 0;\n  }\n};\nfunction isCheckboxSelection({\n  gos,\n  selectionColSvc\n}, column) {\n  const rowSelection = gos.get(\"rowSelection\");\n  const colDef = column.getColDef();\n  const {\n    headerCheckboxSelection\n  } = colDef;\n  let result = false;\n  const newHeaderCheckbox = typeof rowSelection === \"object\";\n  if (newHeaderCheckbox) {\n    const isSelectionCol = isColumnSelectionCol(column);\n    const isAutoCol = isColumnGroupAutoCol(column);\n    const location = _getCheckboxLocation(rowSelection);\n    if (location === \"autoGroupColumn\" && isAutoCol || isSelectionCol && selectionColSvc?.isSelectionColumnEnabled()) {\n      result = _getHeaderCheckbox(rowSelection);\n    }\n  } else {\n    if (typeof headerCheckboxSelection === \"function\") {\n      result = headerCheckboxSelection(_addGridCommonParams(gos, {\n        column,\n        colDef\n      }));\n    } else {\n      result = !!headerCheckboxSelection;\n    }\n  }\n  return result;\n}\n\n// packages/ag-grid-community/src/selection/baseSelectionService.ts\nvar BaseSelectionService = class extends BeanStub {\n  postConstruct() {\n    const {\n      gos,\n      beans\n    } = this;\n    this.selectionCtx = new RowRangeSelectionContext(beans.rowModel, beans.pinnedRowModel);\n    this.addManagedPropertyListeners([\"isRowSelectable\", \"rowSelection\"], () => {\n      const callback = _getIsRowSelectable(gos);\n      if (callback !== this.isRowSelectable) {\n        this.isRowSelectable = callback;\n        this.updateSelectable();\n      }\n    });\n    this.isRowSelectable = _getIsRowSelectable(gos);\n    this.addManagedEventListeners({\n      cellValueChanged: e => this.updateRowSelectable(e.node),\n      rowNodeDataChanged: e => this.updateRowSelectable(e.node)\n    });\n  }\n  destroy() {\n    super.destroy();\n    this.selectionCtx.reset();\n  }\n  createCheckboxSelectionComponent() {\n    return new CheckboxSelectionComponent();\n  }\n  createSelectAllFeature(column) {\n    if (isCheckboxSelection(this.beans, column)) {\n      return new SelectAllFeature(column);\n    }\n  }\n  isMultiSelect() {\n    return _isMultiRowSelection(this.gos);\n  }\n  onRowCtrlSelected(rowCtrl, hasFocusFunc, gui) {\n    const selected = !!rowCtrl.rowNode.isSelected();\n    rowCtrl.forEachGui(gui, gui2 => {\n      gui2.rowComp.toggleCss(\"ag-row-selected\", selected);\n      const element = gui2.element;\n      _setAriaSelected(element, selected);\n      const hasFocus = element.contains(_getActiveDomElement(this.beans));\n      if (hasFocus) {\n        hasFocusFunc(gui2);\n      }\n    });\n  }\n  announceAriaRowSelection(rowNode) {\n    if (this.isRowSelectionBlocked(rowNode)) {\n      return;\n    }\n    const selected = rowNode.isSelected();\n    if (!rowNode.selectable) {\n      return;\n    }\n    const translate = this.getLocaleTextFunc();\n    const label = translate(selected ? \"ariaRowDeselect\" : \"ariaRowSelect\", `Press SPACE to ${selected ? \"deselect\" : \"select\"} this row`);\n    this.beans.ariaAnnounce?.announceValue(label, \"rowSelection\");\n  }\n  isRowSelectionBlocked(rowNode) {\n    return !rowNode.selectable || rowNode.rowPinned && !_isManualPinnedRow(rowNode) || !_isRowSelection(this.gos);\n  }\n  updateRowSelectable(rowNode, suppressSelectionUpdate) {\n    const selectable = rowNode.rowPinned && rowNode.pinnedSibling ?\n    // If row node is pinned sibling, copy selectable status over from sibling row node\n    rowNode.pinnedSibling.selectable :\n    // otherwise calculate selectable state directly\n    this.isRowSelectable?.(rowNode) ?? true;\n    this.setRowSelectable(rowNode, selectable, suppressSelectionUpdate);\n    return selectable;\n  }\n  setRowSelectable(rowNode, newVal, suppressSelectionUpdate) {\n    if (rowNode.selectable !== newVal) {\n      rowNode.selectable = newVal;\n      rowNode.dispatchRowEvent(\"selectableChanged\");\n      if (suppressSelectionUpdate) {\n        return;\n      }\n      const isGroupSelectsChildren = _getGroupSelectsDescendants(this.gos);\n      if (isGroupSelectsChildren) {\n        const selected = this.calculateSelectedFromChildren(rowNode);\n        this.setNodesSelected({\n          nodes: [rowNode],\n          newValue: selected ?? false,\n          source: \"selectableChanged\"\n        });\n        return;\n      }\n      if (rowNode.isSelected() && !rowNode.selectable) {\n        this.setNodesSelected({\n          nodes: [rowNode],\n          newValue: false,\n          source: \"selectableChanged\"\n        });\n      }\n    }\n  }\n  calculateSelectedFromChildren(rowNode) {\n    let atLeastOneSelected = false;\n    let atLeastOneDeSelected = false;\n    if (!rowNode.childrenAfterGroup?.length) {\n      return rowNode.selectable ? rowNode.__selected : null;\n    }\n    for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n      const child = rowNode.childrenAfterGroup[i];\n      let childState = child.isSelected();\n      if (!child.selectable) {\n        const selectable = this.calculateSelectedFromChildren(child);\n        if (selectable === null) {\n          continue;\n        }\n        childState = selectable;\n      }\n      switch (childState) {\n        case true:\n          atLeastOneSelected = true;\n          break;\n        case false:\n          atLeastOneDeSelected = true;\n          break;\n        default:\n          return void 0;\n      }\n    }\n    if (atLeastOneSelected && atLeastOneDeSelected) {\n      return void 0;\n    }\n    if (atLeastOneSelected) {\n      return true;\n    }\n    if (atLeastOneDeSelected) {\n      return false;\n    }\n    if (!rowNode.selectable) {\n      return null;\n    }\n    return rowNode.__selected;\n  }\n  selectRowNode(rowNode, newValue, e, source = \"api\") {\n    const selectionNotAllowed = !rowNode.selectable && newValue;\n    const selectionNotChanged = rowNode.__selected === newValue;\n    if (selectionNotAllowed || selectionNotChanged) {\n      return false;\n    }\n    rowNode.__selected = newValue;\n    rowNode.dispatchRowEvent(\"rowSelected\");\n    const sibling = rowNode.sibling;\n    if (sibling && sibling.footer && sibling.__localEventService) {\n      sibling.dispatchRowEvent(\"rowSelected\");\n    }\n    const pinnedSibling = rowNode.pinnedSibling;\n    if (pinnedSibling && pinnedSibling.rowPinned && pinnedSibling.__localEventService) {\n      pinnedSibling.dispatchRowEvent(\"rowSelected\");\n    }\n    this.eventSvc.dispatchEvent({\n      ..._createGlobalRowEvent(rowNode, this.gos, \"rowSelected\"),\n      event: e || null,\n      source\n    });\n    return true;\n  }\n  isCellCheckboxSelection(column, rowNode) {\n    const so = this.gos.get(\"rowSelection\");\n    if (so && typeof so !== \"string\") {\n      const checkbox = isColumnSelectionCol(column) && _getCheckboxes(so);\n      return column.isColumnFunc(rowNode, checkbox);\n    } else {\n      return column.isColumnFunc(rowNode, column.colDef.checkboxSelection);\n    }\n  }\n  inferNodeSelections(node, shiftKey, metaKey, source) {\n    const {\n      gos,\n      selectionCtx\n    } = this;\n    const currentSelection = node.isSelected();\n    const groupSelectsDescendants = _getGroupSelectsDescendants(gos);\n    const enableClickSelection = _getEnableSelection(gos);\n    const enableDeselection = _getEnableDeselection(gos);\n    const isMultiSelect = this.isMultiSelect();\n    const isRowClicked = source === \"rowClicked\";\n    if (isRowClicked && !(enableClickSelection || enableDeselection)) return null;\n    if (shiftKey && metaKey && isMultiSelect) {\n      const root = selectionCtx.getRoot();\n      if (!root) {\n        return null;\n      } else if (!root.isSelected()) {\n        const partition = selectionCtx.extend(node, groupSelectsDescendants);\n        return {\n          select: [],\n          deselect: partition.keep,\n          reset: false\n        };\n      } else {\n        const partition = selectionCtx.isInRange(node) ? selectionCtx.truncate(node) : selectionCtx.extend(node, groupSelectsDescendants);\n        return {\n          deselect: partition.discard,\n          select: partition.keep,\n          reset: false\n        };\n      }\n    } else if (shiftKey && isMultiSelect) {\n      const fallback = selectionCtx.selectAll ? this.beans.rowModel.getRow(0) : void 0;\n      const root = selectionCtx.getRoot(fallback);\n      const partition = selectionCtx.isInRange(node) ? selectionCtx.truncate(node) : selectionCtx.extend(node, groupSelectsDescendants);\n      return {\n        select: partition.keep,\n        deselect: partition.discard,\n        reset: selectionCtx.selectAll || !!(root && !root.isSelected())\n      };\n    } else if (metaKey) {\n      if (isRowClicked) {\n        const newValue = !currentSelection;\n        const selectingWhenDisabled = newValue && !enableClickSelection;\n        const deselectingWhenDisabled = !newValue && !enableDeselection;\n        if (selectingWhenDisabled || deselectingWhenDisabled) return null;\n        selectionCtx.setRoot(node);\n        return {\n          node,\n          newValue,\n          clearSelection: false\n        };\n      }\n      selectionCtx.setRoot(node);\n      return {\n        node,\n        newValue: !currentSelection,\n        clearSelection: !isMultiSelect\n      };\n    } else {\n      selectionCtx.setRoot(node);\n      const enableSelectionWithoutKeys = _getEnableSelectionWithoutKeys(gos);\n      const groupSelectsFiltered = _getGroupSelection(gos) === \"filteredDescendants\";\n      const shouldClear = isRowClicked && (!enableSelectionWithoutKeys || !enableClickSelection);\n      if (groupSelectsFiltered && currentSelection === void 0 && _isClientSideRowModel(gos)) {\n        return {\n          node,\n          newValue: false,\n          clearSelection: !isMultiSelect || shouldClear\n        };\n      }\n      if (isRowClicked) {\n        const newValue = currentSelection ? !enableSelectionWithoutKeys : enableClickSelection;\n        const selectingWhenDisabled = newValue && !enableClickSelection;\n        const deselectingWhenDisabled = !newValue && !enableDeselection;\n        const wouldStateBeUnchanged = newValue === currentSelection && !shouldClear;\n        if (wouldStateBeUnchanged || selectingWhenDisabled || deselectingWhenDisabled) return null;\n        return {\n          node,\n          newValue,\n          clearSelection: !isMultiSelect || shouldClear,\n          keepDescendants: node.group && groupSelectsDescendants\n        };\n      }\n      return {\n        node,\n        newValue: !currentSelection,\n        clearSelection: !isMultiSelect || shouldClear\n      };\n    }\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agRadioButton.ts\nvar AgRadioButton = class extends AgCheckbox {\n  constructor(config) {\n    super(config, \"ag-radio-button\", \"radio\");\n  }\n  isSelected() {\n    return this.eInput.checked;\n  }\n  toggle() {\n    if (this.eInput.disabled) {\n      return;\n    }\n    if (!this.isSelected()) {\n      this.setValue(true);\n    }\n  }\n  addInputListeners() {\n    super.addInputListeners();\n    this.addManagedEventListeners({\n      checkboxChanged: this.onChange.bind(this)\n    });\n  }\n  /**\n   * This ensures that if another radio button in the same named group is selected, we deselect this radio button.\n   * By default the browser does this for you, but we are managing classes ourselves in order to ensure input\n   * elements are styled correctly in IE11, and the DOM 'changed' event is only fired when a button is selected,\n   * not deselected, so we need to use our own event.\n   */\n  onChange(event) {\n    const eInput = this.eInput;\n    if (event.selected && event.name && eInput.name && eInput.name === event.name && event.id && eInput.id !== event.id) {\n      this.setValue(false, true);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agToggleButton.css-GENERATED.ts\nvar agToggleButtonCSS = /*css*/\n`.ag-toggle-button{flex:none;min-width:unset;width:unset}.ag-toggle-button-input-wrapper{background-color:var(--ag-toggle-button-off-background-color);border-radius:calc(var(--ag-toggle-button-height)*.5);flex:none;height:var(--ag-toggle-button-height);max-width:var(--ag-toggle-button-width);min-width:var(--ag-toggle-button-width);position:relative;transition:background-color .1s;:where(.ag-toggle-button-input){-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;display:block;height:var(--ag-toggle-button-height);margin:0;max-width:var(--ag-toggle-button-width);min-width:var(--ag-toggle-button-width);opacity:0}&:before{background-color:var(--ag-toggle-button-switch-background-color);border-radius:100%;content:\"\";display:block;height:calc(var(--ag-toggle-button-height) - var(--ag-toggle-button-switch-inset)*2);left:var(--ag-toggle-button-switch-inset);pointer-events:none;position:absolute;top:var(--ag-toggle-button-switch-inset);transition:left .1s;width:calc(var(--ag-toggle-button-height) - var(--ag-toggle-button-switch-inset)*2)}&.ag-checked{background-color:var(--ag-toggle-button-on-background-color);&:before{left:calc(100% - var(--ag-toggle-button-height) + var(--ag-toggle-button-switch-inset))}}&:focus-within{box-shadow:var(--ag-focus-shadow)}&.ag-disabled{opacity:.5}}`;\n\n// packages/ag-grid-community/src/widgets/agToggleButton.ts\nvar AgToggleButton = class extends AgCheckbox {\n  constructor(config) {\n    super(config, \"ag-toggle-button\");\n    this.registerCSS(agToggleButtonCSS);\n  }\n  setValue(value, silent) {\n    super.setValue(value, silent);\n    this.toggleCss(\"ag-selected\", this.getValue());\n    return this;\n  }\n};\nvar AgToggleButtonSelector = {\n  selector: \"AG-TOGGLE-BUTTON\",\n  component: AgToggleButton\n};\n\n// packages/ag-grid-community/src/widgets/agInputTextField.ts\nvar AgInputTextField = class extends AgAbstractInputField {\n  constructor(config, className = \"ag-text-field\", inputType = \"text\") {\n    super(config, className, inputType);\n  }\n  postConstruct() {\n    super.postConstruct();\n    if (this.config.allowedCharPattern) {\n      this.preventDisallowedCharacters();\n    }\n  }\n  setValue(value, silent) {\n    const eInput = this.eInput;\n    if (eInput.value !== value) {\n      eInput.value = _exists(value) ? value : \"\";\n    }\n    return super.setValue(value, silent);\n  }\n  /** Used to set an initial value into the input without necessarily setting `this.value` or triggering events (e.g. to set an invalid value) */\n  setStartValue(value) {\n    this.setValue(value, true);\n  }\n  preventDisallowedCharacters() {\n    const pattern = new RegExp(`[${this.config.allowedCharPattern}]`);\n    const preventCharacters = event => {\n      if (!_isEventFromPrintableCharacter(event)) {\n        return;\n      }\n      if (event.key && !pattern.test(event.key)) {\n        event.preventDefault();\n      }\n    };\n    this.addManagedListeners(this.eInput, {\n      keydown: preventCharacters,\n      paste: e => {\n        const text = e.clipboardData?.getData(\"text\");\n        if (text && text.split(\"\").some(c => !pattern.test(c))) {\n          e.preventDefault();\n        }\n      }\n    });\n  }\n};\nvar AgInputTextFieldSelector = {\n  selector: \"AG-INPUT-TEXT-FIELD\",\n  component: AgInputTextField\n};\n\n// packages/ag-grid-community/src/widgets/agInputTextArea.ts\nvar AgInputTextArea = class extends AgAbstractInputField {\n  constructor(config) {\n    super(config, \"ag-text-area\", null, \"textarea\");\n  }\n  setValue(value, silent) {\n    const ret = super.setValue(value, silent);\n    this.eInput.value = value;\n    return ret;\n  }\n  setCols(cols) {\n    this.eInput.cols = cols;\n    return this;\n  }\n  setRows(rows) {\n    this.eInput.rows = rows;\n    return this;\n  }\n};\nvar AgInputTextAreaSelector = {\n  selector: \"AG-INPUT-TEXT-AREA\",\n  component: AgInputTextArea\n};\n\n// packages/ag-grid-community/src/widgets/agInputNumberField.ts\nvar AgInputNumberField = class extends AgInputTextField {\n  constructor(config) {\n    super(config, \"ag-number-field\", \"number\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    const eInput = this.eInput;\n    this.addManagedListeners(eInput, {\n      blur: () => {\n        const floatedValue = parseFloat(eInput.value);\n        const value = isNaN(floatedValue) ? \"\" : this.normalizeValue(floatedValue.toString());\n        if (this.value !== value) {\n          this.setValue(value);\n        }\n      },\n      wheel: this.onWheel.bind(this)\n    });\n    eInput.step = \"any\";\n    const {\n      precision,\n      min,\n      max,\n      step\n    } = this.config;\n    if (typeof precision === \"number\") this.setPrecision(precision);\n    if (typeof min === \"number\") this.setMin(min);\n    if (typeof max === \"number\") this.setMax(max);\n    if (typeof step === \"number\") this.setStep(step);\n  }\n  onWheel(e) {\n    if (_getActiveDomElement(this.beans) === this.eInput) {\n      e.preventDefault();\n    }\n  }\n  normalizeValue(value) {\n    if (value === \"\") {\n      return \"\";\n    }\n    if (this.precision != null) {\n      value = this.adjustPrecision(value);\n    }\n    return value;\n  }\n  adjustPrecision(value, isScientificNotation) {\n    const precision = this.precision;\n    if (precision == null) {\n      return value;\n    }\n    if (isScientificNotation) {\n      const floatString = parseFloat(value).toFixed(precision);\n      return parseFloat(floatString).toString();\n    }\n    const parts = String(value).split(\".\");\n    if (parts.length > 1) {\n      if (parts[1].length <= precision) {\n        return value;\n      } else if (precision > 0) {\n        return `${parts[0]}.${parts[1].slice(0, precision)}`;\n      }\n    }\n    return parts[0];\n  }\n  setMin(min) {\n    if (this.min === min) {\n      return this;\n    }\n    this.min = min;\n    _addOrRemoveAttribute(this.eInput, \"min\", min);\n    return this;\n  }\n  setMax(max) {\n    if (this.max === max) {\n      return this;\n    }\n    this.max = max;\n    _addOrRemoveAttribute(this.eInput, \"max\", max);\n    return this;\n  }\n  setPrecision(precision) {\n    this.precision = precision;\n    return this;\n  }\n  setStep(step) {\n    if (this.step === step) {\n      return this;\n    }\n    this.step = step;\n    _addOrRemoveAttribute(this.eInput, \"step\", step);\n    return this;\n  }\n  setValue(value, silent) {\n    return this.setValueOrInputValue(v => super.setValue(v, silent), () => this, value);\n  }\n  setStartValue(value) {\n    return this.setValueOrInputValue(v => super.setValue(v, true), v => {\n      this.eInput.value = v;\n    }, value);\n  }\n  setValueOrInputValue(setValueFunc, setInputValueOnlyFunc, value) {\n    if (_exists(value)) {\n      let setInputValueOnly = this.isScientificNotation(value);\n      if (setInputValueOnly && this.eInput.validity.valid) {\n        return setValueFunc(value);\n      }\n      if (!setInputValueOnly) {\n        value = this.adjustPrecision(value);\n        const normalizedValue = this.normalizeValue(value);\n        setInputValueOnly = value != normalizedValue;\n      }\n      if (setInputValueOnly) {\n        return setInputValueOnlyFunc(value);\n      }\n    }\n    return setValueFunc(value);\n  }\n  getValue() {\n    const eInput = this.eInput;\n    if (!eInput.validity.valid) {\n      return void 0;\n    }\n    const inputValue = eInput.value;\n    if (this.isScientificNotation(inputValue)) {\n      return this.adjustPrecision(inputValue, true);\n    }\n    return super.getValue();\n  }\n  isScientificNotation(value) {\n    return typeof value === \"string\" && value.includes(\"e\");\n  }\n};\nvar AgInputNumberFieldSelector = {\n  selector: \"AG-INPUT-NUMBER-FIELD\",\n  component: AgInputNumberField\n};\n\n// packages/ag-grid-community/src/widgets/agInputDateField.ts\nvar AgInputDateField = class extends AgInputTextField {\n  constructor(config) {\n    super(config, \"ag-date-field\", \"date\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    const usingSafari = _isBrowserSafari();\n    this.addManagedListeners(this.eInput, {\n      wheel: this.onWheel.bind(this),\n      mousedown: () => {\n        if (this.isDisabled() || usingSafari) {\n          return;\n        }\n        this.eInput.focus();\n      }\n    });\n    this.eInput.step = \"any\";\n  }\n  onWheel(e) {\n    if (_getActiveDomElement(this.beans) === this.eInput) {\n      e.preventDefault();\n    }\n  }\n  setMin(minDate) {\n    const min = minDate instanceof Date ? _serialiseDate(minDate ?? null, !!this.includeTime) ?? void 0 : minDate;\n    if (this.min === min) {\n      return this;\n    }\n    this.min = min;\n    _addOrRemoveAttribute(this.eInput, \"min\", min);\n    return this;\n  }\n  setMax(maxDate) {\n    const max = maxDate instanceof Date ? _serialiseDate(maxDate ?? null, !!this.includeTime) ?? void 0 : maxDate;\n    if (this.max === max) {\n      return this;\n    }\n    this.max = max;\n    _addOrRemoveAttribute(this.eInput, \"max\", max);\n    return this;\n  }\n  setStep(step) {\n    if (this.step === step) {\n      return this;\n    }\n    this.step = step;\n    _addOrRemoveAttribute(this.eInput, \"step\", step);\n    return this;\n  }\n  setIncludeTime(includeTime) {\n    if (this.includeTime === includeTime) {\n      return this;\n    }\n    this.includeTime = includeTime;\n    super.setInputType(includeTime ? \"datetime-local\" : \"date\");\n    if (includeTime) this.setStep(1);\n    return this;\n  }\n  getDate() {\n    if (!this.eInput.validity.valid) {\n      return void 0;\n    }\n    return _parseDateTimeFromString(this.getValue()) ?? void 0;\n  }\n  setDate(date, silent) {\n    this.setValue(_serialiseDate(date ?? null, this.includeTime), silent);\n  }\n};\nvar AgInputDateFieldSelector = {\n  selector: \"AG-INPUT-DATE-FIELD\",\n  component: AgInputDateField\n};\n\n// packages/ag-grid-community/src/widgets/agList.ts\nvar AgList = class extends Component {\n  constructor(cssIdentifier = \"default\", unFocusable = false) {\n    super({\n      tag: \"div\",\n      cls: `ag-list ag-${cssIdentifier}-list`\n    });\n    this.cssIdentifier = cssIdentifier;\n    this.unFocusable = unFocusable;\n    this.activeClass = \"ag-active-item\";\n    this.options = [];\n    this.itemEls = [];\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    this.addManagedElementListeners(eGui, {\n      mouseleave: () => this.clearHighlighted()\n    });\n    if (this.unFocusable) {\n      return;\n    }\n    this.addManagedElementListeners(eGui, {\n      keydown: this.handleKeyDown.bind(this)\n    });\n  }\n  handleKeyDown(e) {\n    const key = e.key;\n    switch (key) {\n      case KeyCode.ENTER:\n        if (!this.highlightedEl) {\n          this.setValue(this.getValue());\n        } else {\n          const pos = this.itemEls.indexOf(this.highlightedEl);\n          this.setValueByIndex(pos);\n        }\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n        e.preventDefault();\n        this.navigate(key);\n        break;\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        e.preventDefault();\n        this.navigateToPage(key);\n        break;\n    }\n  }\n  navigate(key) {\n    const isDown = key === KeyCode.DOWN;\n    let itemToHighlight;\n    const {\n      itemEls,\n      highlightedEl\n    } = this;\n    if (!highlightedEl) {\n      itemToHighlight = itemEls[isDown ? 0 : itemEls.length - 1];\n    } else {\n      const currentIdx = itemEls.indexOf(highlightedEl);\n      let nextPos = currentIdx + (isDown ? 1 : -1);\n      nextPos = Math.min(Math.max(nextPos, 0), itemEls.length - 1);\n      itemToHighlight = itemEls[nextPos];\n    }\n    this.highlightItem(itemToHighlight);\n  }\n  navigateToPage(key) {\n    const {\n      itemEls,\n      highlightedEl\n    } = this;\n    if (!highlightedEl || itemEls.length === 0) {\n      return;\n    }\n    const currentIdx = itemEls.indexOf(highlightedEl);\n    const rowCount = this.options.length - 1;\n    const itemHeight = itemEls[0].clientHeight;\n    const pageSize = Math.floor(this.getGui().clientHeight / itemHeight);\n    let newIndex = -1;\n    if (key === KeyCode.PAGE_HOME) {\n      newIndex = 0;\n    } else if (key === KeyCode.PAGE_END) {\n      newIndex = rowCount;\n    } else if (key === KeyCode.PAGE_DOWN) {\n      newIndex = Math.min(currentIdx + pageSize, rowCount);\n    } else if (key === KeyCode.PAGE_UP) {\n      newIndex = Math.max(currentIdx - pageSize, 0);\n    }\n    if (newIndex === -1) {\n      return;\n    }\n    this.highlightItem(itemEls[newIndex]);\n  }\n  addOptions(listOptions) {\n    listOptions.forEach(listOption => this.addOption(listOption));\n    return this;\n  }\n  addOption(listOption) {\n    const {\n      value,\n      text\n    } = listOption;\n    const valueToRender = text ?? value;\n    this.options.push({\n      value,\n      text: valueToRender\n    });\n    this.renderOption(value, valueToRender);\n    this.updateIndices();\n    return this;\n  }\n  clearOptions() {\n    this.options = [];\n    this.reset(true);\n    this.itemEls.forEach(itemEl => {\n      _removeFromParent(itemEl);\n    });\n    this.itemEls = [];\n    this.refreshAriaRole();\n  }\n  refreshAriaRole() {\n    const eGui = this.getGui();\n    _setAriaRole(eGui, this.options.length === 0 ? \"presentation\" : \"listbox\");\n  }\n  updateIndices() {\n    const options = this.getGui().querySelectorAll(\".ag-list-item\");\n    this.refreshAriaRole();\n    options.forEach((option, idx) => {\n      _setAriaPosInSet(option, idx + 1);\n      _setAriaSetSize(option, options.length);\n    });\n  }\n  renderOption(value, text) {\n    const itemEl = _createElement({\n      tag: \"div\",\n      cls: `ag-list-item ag-${this.cssIdentifier}-list-item`,\n      attrs: {\n        role: \"option\"\n      }\n    });\n    const span = _createElement({\n      tag: \"span\",\n      children: text\n    });\n    itemEl.appendChild(span);\n    if (!this.unFocusable) {\n      itemEl.tabIndex = -1;\n    }\n    this.itemEls.push(itemEl);\n    this.addManagedListeners(itemEl, {\n      mouseover: () => this.highlightItem(itemEl),\n      mousedown: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setValue(value);\n      }\n    });\n    this.createOptionalManagedBean(this.beans.registry.createDynamicBean(\"tooltipFeature\", false, {\n      getTooltipValue: () => text,\n      getGui: () => itemEl,\n      getLocation: () => \"UNKNOWN\",\n      // only show tooltips for items where the text cannot be fully displayed\n      shouldDisplayTooltip: () => span.scrollWidth > span.clientWidth\n    }));\n    this.getGui().appendChild(itemEl);\n  }\n  setValue(value, silent) {\n    if (this.value === value) {\n      this.fireItemSelected();\n      return this;\n    }\n    if (value == null) {\n      this.reset(silent);\n      return this;\n    }\n    const idx = this.options.findIndex(option => option.value === value);\n    if (idx !== -1) {\n      const option = this.options[idx];\n      this.value = option.value;\n      this.displayValue = option.text;\n      this.highlightItem(this.itemEls[idx]);\n      if (!silent) {\n        this.fireChangeEvent();\n      }\n    }\n    return this;\n  }\n  setValueByIndex(idx) {\n    return this.setValue(this.options[idx].value);\n  }\n  getValue() {\n    return this.value;\n  }\n  getDisplayValue() {\n    return this.displayValue;\n  }\n  refreshHighlighted() {\n    this.clearHighlighted();\n    const idx = this.options.findIndex(option => option.value === this.value);\n    if (idx !== -1) {\n      this.highlightItem(this.itemEls[idx]);\n    }\n  }\n  reset(silent) {\n    this.value = null;\n    this.displayValue = null;\n    this.clearHighlighted();\n    if (!silent) {\n      this.fireChangeEvent();\n    }\n  }\n  highlightItem(el) {\n    if (!_isVisible(el)) {\n      return;\n    }\n    this.clearHighlighted();\n    this.highlightedEl = el;\n    el.classList.add(this.activeClass);\n    _setAriaSelected(el, true);\n    const eGui = this.getGui();\n    const {\n      scrollTop,\n      clientHeight\n    } = eGui;\n    const {\n      offsetTop,\n      offsetHeight\n    } = el;\n    if (offsetTop + offsetHeight > scrollTop + clientHeight || offsetTop < scrollTop) {\n      el.scrollIntoView({\n        block: \"nearest\"\n      });\n    }\n    if (!this.unFocusable) {\n      el.focus();\n    }\n  }\n  clearHighlighted() {\n    const highlightedEl = this.highlightedEl;\n    if (!highlightedEl || !_isVisible(highlightedEl)) {\n      return;\n    }\n    highlightedEl.classList.remove(this.activeClass);\n    _setAriaSelected(highlightedEl, false);\n    this.highlightedEl = null;\n  }\n  fireChangeEvent() {\n    this.dispatchLocalEvent({\n      type: \"fieldValueChanged\"\n    });\n    this.fireItemSelected();\n  }\n  fireItemSelected() {\n    this.dispatchLocalEvent({\n      type: \"selectedItem\"\n    });\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agPickerField.css-GENERATED.ts\nvar agPickerFieldCSS = /*css*/\n`.ag-picker-field-display{flex:1 1 auto}.ag-picker-field{align-items:center;display:flex}.ag-picker-field-icon{border:0;cursor:pointer;display:flex;margin:0;padding:0}.ag-picker-field-wrapper{background-color:var(--ag-picker-button-background-color);border:var(--ag-picker-button-border);border-radius:5px;min-height:max(var(--ag-list-item-height),calc(var(--ag-spacing)*4));overflow:hidden;&:where(.ag-picker-has-focus),&:where(:focus-within){background-color:var(--ag-picker-button-focus-background-color);border:var(--ag-picker-button-focus-border);box-shadow:var(--ag-focus-shadow);&:where(.invalid){box-shadow:var(--ag-focus-error-shadow)}}&:where(.invalid){background-color:var(--ag-input-invalid-background-color);border:var(--ag-input-invalid-border);color:var(--ag-input-invalid-text-color)}&:disabled{opacity:.5}}`;\n\n// packages/ag-grid-community/src/widgets/agPickerField.ts\nvar AgPickerFieldElement = {\n  tag: \"div\",\n  cls: \"ag-picker-field\",\n  role: \"presentation\",\n  children: [{\n    tag: \"div\",\n    ref: \"eLabel\"\n  }, {\n    tag: \"div\",\n    ref: \"eWrapper\",\n    cls: \"ag-wrapper ag-picker-field-wrapper ag-picker-collapsed\",\n    children: [{\n      tag: \"div\",\n      ref: \"eDisplayField\",\n      cls: \"ag-picker-field-display\"\n    }, {\n      tag: \"div\",\n      ref: \"eIcon\",\n      cls: \"ag-picker-field-icon\",\n      attrs: {\n        \"aria-hidden\": \"true\"\n      }\n    }]\n  }]\n};\nvar AgPickerField = class extends AgAbstractField {\n  constructor(config) {\n    super(config, config?.template || AgPickerFieldElement, config?.agComponents || [], config?.className);\n    this.isPickerDisplayed = false;\n    this.skipClick = false;\n    this.pickerGap = 4;\n    this.hideCurrentPicker = null;\n    this.eLabel = RefPlaceholder;\n    this.eWrapper = RefPlaceholder;\n    this.eDisplayField = RefPlaceholder;\n    this.eIcon = RefPlaceholder;\n    this.registerCSS(agPickerFieldCSS);\n    this.ariaRole = config?.ariaRole;\n    this.onPickerFocusIn = this.onPickerFocusIn.bind(this);\n    this.onPickerFocusOut = this.onPickerFocusOut.bind(this);\n    if (!config) {\n      return;\n    }\n    const {\n      pickerGap,\n      maxPickerHeight,\n      variableWidth,\n      minPickerWidth,\n      maxPickerWidth\n    } = config;\n    if (pickerGap != null) {\n      this.pickerGap = pickerGap;\n    }\n    this.variableWidth = !!variableWidth;\n    if (maxPickerHeight != null) {\n      this.setPickerMaxHeight(maxPickerHeight);\n    }\n    if (minPickerWidth != null) {\n      this.setPickerMinWidth(minPickerWidth);\n    }\n    if (maxPickerWidth != null) {\n      this.setPickerMaxWidth(maxPickerWidth);\n    }\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.setupAria();\n    const displayId = `ag-${this.getCompId()}-display`;\n    this.eDisplayField.setAttribute(\"id\", displayId);\n    const ariaEl = this.getAriaElement();\n    this.addManagedElementListeners(ariaEl, {\n      keydown: this.onKeyDown.bind(this)\n    });\n    this.addManagedElementListeners(this.eLabel, {\n      mousedown: this.onLabelOrWrapperMouseDown.bind(this)\n    });\n    this.addManagedElementListeners(this.eWrapper, {\n      mousedown: this.onLabelOrWrapperMouseDown.bind(this)\n    });\n    const {\n      pickerIcon,\n      inputWidth\n    } = this.config;\n    if (pickerIcon) {\n      const icon = _createIconNoSpan(pickerIcon, this.beans);\n      if (icon) {\n        this.eIcon.appendChild(icon);\n      }\n    }\n    if (inputWidth != null) {\n      this.setInputWidth(inputWidth);\n    }\n  }\n  setupAria() {\n    const ariaEl = this.getAriaElement();\n    ariaEl.setAttribute(\"tabindex\", this.gos.get(\"tabIndex\").toString());\n    _setAriaExpanded(ariaEl, false);\n    if (this.ariaRole) {\n      _setAriaRole(ariaEl, this.ariaRole);\n    }\n  }\n  onLabelOrWrapperMouseDown(e) {\n    if (e) {\n      const focusableEl = this.getFocusableElement();\n      if (focusableEl !== this.eWrapper && e?.target === focusableEl) {\n        return;\n      }\n      e.preventDefault();\n      this.getFocusableElement().focus();\n    }\n    if (this.skipClick) {\n      this.skipClick = false;\n      return;\n    }\n    if (this.isDisabled()) {\n      return;\n    }\n    if (this.isPickerDisplayed) {\n      this.hidePicker();\n    } else {\n      this.showPicker();\n    }\n  }\n  onKeyDown(e) {\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n      case KeyCode.ENTER:\n      case KeyCode.SPACE:\n        e.preventDefault();\n        this.onLabelOrWrapperMouseDown();\n        break;\n      case KeyCode.ESCAPE:\n        if (this.isPickerDisplayed) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (this.hideCurrentPicker) {\n            this.hideCurrentPicker();\n          }\n        }\n        break;\n    }\n  }\n  showPicker() {\n    this.isPickerDisplayed = true;\n    if (!this.pickerComponent) {\n      this.pickerComponent = this.createPickerComponent();\n    }\n    const pickerGui = this.pickerComponent.getGui();\n    pickerGui.addEventListener(\"focusin\", this.onPickerFocusIn);\n    pickerGui.addEventListener(\"focusout\", this.onPickerFocusOut);\n    this.hideCurrentPicker = this.renderAndPositionPicker();\n    this.toggleExpandedStyles(true);\n  }\n  renderAndPositionPicker() {\n    const ePicker = this.pickerComponent.getGui();\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\n      [this.destroyMouseWheelFunc] = this.addManagedEventListeners({\n        bodyScroll: () => {\n          this.hidePicker();\n        }\n      });\n    }\n    const translate = this.getLocaleTextFunc();\n    const {\n      config: {\n        pickerAriaLabelKey,\n        pickerAriaLabelValue,\n        modalPicker = true\n      },\n      maxPickerHeight,\n      minPickerWidth,\n      maxPickerWidth,\n      variableWidth,\n      beans,\n      eWrapper\n    } = this;\n    const popupParams = {\n      modal: modalPicker,\n      eChild: ePicker,\n      closeOnEsc: true,\n      closedCallback: () => {\n        const shouldRestoreFocus = _isNothingFocused(beans);\n        this.beforeHidePicker();\n        if (shouldRestoreFocus && this.isAlive()) {\n          this.getFocusableElement().focus();\n        }\n      },\n      ariaLabel: translate(pickerAriaLabelKey, pickerAriaLabelValue),\n      anchorToElement: eWrapper\n    };\n    ePicker.style.position = \"absolute\";\n    const popupSvc = beans.popupSvc;\n    const addPopupRes = popupSvc.addPopup(popupParams);\n    if (variableWidth) {\n      if (minPickerWidth) {\n        ePicker.style.minWidth = minPickerWidth;\n      }\n      ePicker.style.width = _formatSize(_getAbsoluteWidth(eWrapper));\n      if (maxPickerWidth) {\n        ePicker.style.maxWidth = maxPickerWidth;\n      }\n    } else {\n      _setElementWidth(ePicker, maxPickerWidth ?? _getAbsoluteWidth(eWrapper));\n    }\n    const maxHeight = maxPickerHeight ?? `${_getInnerHeight(popupSvc.getPopupParent())}px`;\n    ePicker.style.setProperty(\"max-height\", maxHeight);\n    this.alignPickerToComponent();\n    return addPopupRes.hideFunc;\n  }\n  alignPickerToComponent() {\n    if (!this.pickerComponent) {\n      return;\n    }\n    const {\n      pickerGap,\n      config: {\n        pickerType\n      },\n      beans: {\n        popupSvc,\n        gos\n      },\n      eWrapper,\n      pickerComponent\n    } = this;\n    const alignSide = gos.get(\"enableRtl\") ? \"right\" : \"left\";\n    popupSvc.positionPopupByComponent({\n      type: pickerType,\n      eventSource: eWrapper,\n      ePopup: pickerComponent.getGui(),\n      position: \"under\",\n      alignSide,\n      keepWithinBounds: true,\n      nudgeY: pickerGap\n    });\n  }\n  beforeHidePicker() {\n    if (this.destroyMouseWheelFunc) {\n      this.destroyMouseWheelFunc();\n      this.destroyMouseWheelFunc = void 0;\n    }\n    this.toggleExpandedStyles(false);\n    const pickerGui = this.pickerComponent.getGui();\n    pickerGui.removeEventListener(\"focusin\", this.onPickerFocusIn);\n    pickerGui.removeEventListener(\"focusout\", this.onPickerFocusOut);\n    this.isPickerDisplayed = false;\n    this.pickerComponent = void 0;\n    this.hideCurrentPicker = null;\n  }\n  toggleExpandedStyles(expanded) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const ariaEl = this.getAriaElement();\n    _setAriaExpanded(ariaEl, expanded);\n    const classList = this.eWrapper.classList;\n    classList.toggle(\"ag-picker-expanded\", expanded);\n    classList.toggle(\"ag-picker-collapsed\", !expanded);\n  }\n  onPickerFocusIn() {\n    this.togglePickerHasFocus(true);\n  }\n  onPickerFocusOut(e) {\n    if (!this.pickerComponent?.getGui().contains(e.relatedTarget)) {\n      this.togglePickerHasFocus(false);\n    }\n  }\n  togglePickerHasFocus(focused) {\n    if (!this.pickerComponent) {\n      return;\n    }\n    this.eWrapper.classList.toggle(\"ag-picker-has-focus\", focused);\n  }\n  hidePicker() {\n    if (this.hideCurrentPicker) {\n      this.hideCurrentPicker();\n      this.dispatchLocalEvent({\n        type: \"pickerHidden\"\n      });\n    }\n  }\n  setInputWidth(width) {\n    _setElementWidth(this.eWrapper, width);\n    return this;\n  }\n  getFocusableElement() {\n    return this.eWrapper;\n  }\n  setPickerGap(gap) {\n    this.pickerGap = gap;\n    return this;\n  }\n  setPickerMinWidth(width) {\n    if (typeof width === \"number\") {\n      width = `${width}px`;\n    }\n    this.minPickerWidth = width == null ? void 0 : width;\n    return this;\n  }\n  setPickerMaxWidth(width) {\n    if (typeof width === \"number\") {\n      width = `${width}px`;\n    }\n    this.maxPickerWidth = width == null ? void 0 : width;\n    return this;\n  }\n  setPickerMaxHeight(height) {\n    if (typeof height === \"number\") {\n      height = `${height}px`;\n    }\n    this.maxPickerHeight = height == null ? void 0 : height;\n    return this;\n  }\n  destroy() {\n    this.hidePicker();\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agSelect.css-GENERATED.ts\nvar agSelectCSS = /*css*/\n`.ag-select{align-items:center;display:flex;&.ag-disabled{opacity:.5}}:where(.ag-select){.ag-picker-field-wrapper{cursor:default}&.ag-disabled .ag-picker-field-wrapper:focus{box-shadow:none}&:not(.ag-cell-editor,.ag-label-align-top){min-height:var(--ag-list-item-height)}.ag-picker-field-display{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ag-picker-field-icon{align-items:center;display:flex}}:where(.ag-ltr) :where(.ag-select){.ag-picker-field-wrapper{padding-left:calc(var(--ag-cell-horizontal-padding)/2);padding-right:var(--ag-spacing)}}:where(.ag-rtl) :where(.ag-select){.ag-picker-field-wrapper{padding-left:var(--ag-spacing);padding-right:calc(var(--ag-cell-horizontal-padding)/2)}}`;\n\n// packages/ag-grid-community/src/widgets/agSelect.ts\nvar AgSelect = class extends AgPickerField {\n  constructor(config) {\n    super({\n      pickerAriaLabelKey: \"ariaLabelSelectField\",\n      pickerAriaLabelValue: \"Select Field\",\n      pickerType: \"ag-list\",\n      className: \"ag-select\",\n      pickerIcon: \"selectOpen\",\n      ariaRole: \"combobox\",\n      ...config\n    });\n    this.registerCSS(agSelectCSS);\n  }\n  postConstruct() {\n    this.tooltipFeature = this.createOptionalManagedBean(this.beans.registry.createDynamicBean(\"tooltipFeature\", false, {\n      shouldDisplayTooltip: _isElementOverflowingCallback(() => this.eDisplayField),\n      getGui: () => this.getGui()\n    }));\n    super.postConstruct();\n    this.createListComponent();\n    this.eWrapper.tabIndex = this.gos.get(\"tabIndex\");\n    const {\n      options,\n      value,\n      placeholder\n    } = this.config;\n    if (options != null) {\n      this.addOptions(options);\n    }\n    if (value != null) {\n      this.setValue(value, true);\n    }\n    if (placeholder && value == null) {\n      this.eDisplayField.textContent = placeholder;\n    }\n    this.addManagedElementListeners(this.eWrapper, {\n      focusout: this.onWrapperFocusOut.bind(this)\n    });\n  }\n  onWrapperFocusOut(e) {\n    if (!this.eWrapper.contains(e.relatedTarget)) {\n      this.hidePicker();\n    }\n  }\n  createListComponent() {\n    const listComponent = this.createBean(new AgList(\"select\", true));\n    this.listComponent = listComponent;\n    listComponent.setParentComponent(this);\n    const eListAriaEl = listComponent.getAriaElement();\n    const listId = `ag-select-list-${listComponent.getCompId()}`;\n    eListAriaEl.setAttribute(\"id\", listId);\n    _setAriaControlsAndLabel(this.getAriaElement(), eListAriaEl);\n    listComponent.addManagedElementListeners(listComponent.getGui(), {\n      mousedown: e => {\n        e?.preventDefault();\n      }\n    });\n    listComponent.addManagedListeners(listComponent, {\n      selectedItem: () => {\n        this.hidePicker();\n        this.dispatchLocalEvent({\n          type: \"selectedItem\"\n        });\n      },\n      fieldValueChanged: () => {\n        if (!this.listComponent) {\n          return;\n        }\n        this.setValue(this.listComponent.getValue(), false, true);\n        this.hidePicker();\n      }\n    });\n  }\n  createPickerComponent() {\n    return this.listComponent;\n  }\n  onKeyDown(e) {\n    const {\n      key\n    } = e;\n    if (key === KeyCode.TAB) {\n      this.hidePicker();\n    }\n    switch (key) {\n      case KeyCode.ENTER:\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        e.preventDefault();\n        if (this.isPickerDisplayed) {\n          this.listComponent?.handleKeyDown(e);\n        } else {\n          super.onKeyDown(e);\n        }\n        break;\n      case KeyCode.ESCAPE:\n        super.onKeyDown(e);\n        break;\n      case KeyCode.SPACE:\n        if (this.isPickerDisplayed) {\n          e.preventDefault();\n        } else {\n          super.onKeyDown(e);\n        }\n        break;\n    }\n  }\n  showPicker() {\n    const listComponent = this.listComponent;\n    if (!listComponent) {\n      return;\n    }\n    super.showPicker();\n    listComponent.refreshHighlighted();\n  }\n  addOptions(options) {\n    options.forEach(option => this.addOption(option));\n    return this;\n  }\n  addOption(option) {\n    this.listComponent.addOption(option);\n    return this;\n  }\n  clearOptions() {\n    this.listComponent?.clearOptions();\n    this.setValue(void 0, true);\n    return this;\n  }\n  setValue(value, silent, fromPicker) {\n    const {\n      listComponent,\n      config: {\n        placeholder\n      },\n      eDisplayField,\n      tooltipFeature\n    } = this;\n    if (this.value === value || !listComponent) {\n      return this;\n    }\n    if (!fromPicker) {\n      listComponent.setValue(value, true);\n    }\n    const newValue = listComponent.getValue();\n    if (newValue === this.getValue()) {\n      return this;\n    }\n    let displayValue = listComponent.getDisplayValue();\n    if (displayValue == null && placeholder) {\n      displayValue = placeholder;\n    }\n    eDisplayField.textContent = displayValue;\n    tooltipFeature?.setTooltipAndRefresh(displayValue ?? null);\n    return super.setValue(value, silent);\n  }\n  destroy() {\n    this.listComponent = this.destroyBean(this.listComponent);\n    super.destroy();\n  }\n};\nvar AgSelectSelector = {\n  selector: \"AG-SELECT\",\n  component: AgSelect\n};\n\n// packages/ag-grid-community/src/widgets/tabGuardCtrl.ts\nvar TabGuardClassNames = {\n  TAB_GUARD: \"ag-tab-guard\",\n  TAB_GUARD_TOP: \"ag-tab-guard-top\",\n  TAB_GUARD_BOTTOM: \"ag-tab-guard-bottom\"\n};\nvar TabGuardCtrl = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.skipTabGuardFocus = false;\n    this.forcingFocusOut = false;\n    // Used when `isFocusableContainer` enabled\n    this.allowFocus = false;\n    const {\n      comp,\n      eTopGuard,\n      eBottomGuard,\n      focusTrapActive,\n      forceFocusOutWhenTabGuardsAreEmpty,\n      isFocusableContainer,\n      focusInnerElement,\n      onFocusIn,\n      onFocusOut,\n      shouldStopEventPropagation,\n      onTabKeyDown,\n      handleKeyDown,\n      isEmpty,\n      eFocusableElement\n    } = params;\n    this.comp = comp;\n    this.eTopGuard = eTopGuard;\n    this.eBottomGuard = eBottomGuard;\n    this.providedFocusInnerElement = focusInnerElement;\n    this.eFocusableElement = eFocusableElement;\n    this.focusTrapActive = !!focusTrapActive;\n    this.forceFocusOutWhenTabGuardsAreEmpty = !!forceFocusOutWhenTabGuardsAreEmpty;\n    this.isFocusableContainer = !!isFocusableContainer;\n    this.providedFocusIn = onFocusIn;\n    this.providedFocusOut = onFocusOut;\n    this.providedShouldStopEventPropagation = shouldStopEventPropagation;\n    this.providedOnTabKeyDown = onTabKeyDown;\n    this.providedHandleKeyDown = handleKeyDown;\n    this.providedIsEmpty = isEmpty;\n  }\n  postConstruct() {\n    this.createManagedBean(new ManagedFocusFeature(this.eFocusableElement, {\n      shouldStopEventPropagation: () => this.shouldStopEventPropagation(),\n      onTabKeyDown: e => this.onTabKeyDown(e),\n      handleKeyDown: e => this.handleKeyDown(e),\n      onFocusIn: e => this.onFocusIn(e),\n      onFocusOut: e => this.onFocusOut(e)\n    }));\n    this.activateTabGuards();\n    [this.eTopGuard, this.eBottomGuard].forEach(guard => this.addManagedElementListeners(guard, {\n      focus: this.onFocus.bind(this)\n    }));\n  }\n  handleKeyDown(e) {\n    if (this.providedHandleKeyDown) {\n      this.providedHandleKeyDown(e);\n    }\n  }\n  tabGuardsAreActive() {\n    return !!this.eTopGuard && this.eTopGuard.hasAttribute(\"tabIndex\");\n  }\n  shouldStopEventPropagation() {\n    if (this.providedShouldStopEventPropagation) {\n      return this.providedShouldStopEventPropagation();\n    }\n    return false;\n  }\n  activateTabGuards() {\n    if (this.forcingFocusOut) {\n      return;\n    }\n    const tabIndex = this.gos.get(\"tabIndex\");\n    this.comp.setTabIndex(tabIndex.toString());\n  }\n  deactivateTabGuards() {\n    this.comp.setTabIndex();\n  }\n  onFocus(e) {\n    if (this.isFocusableContainer && !this.eFocusableElement.contains(e.relatedTarget)) {\n      if (!this.allowFocus) {\n        this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\n        return;\n      }\n    }\n    if (this.skipTabGuardFocus) {\n      this.skipTabGuardFocus = false;\n      return;\n    }\n    if (this.forceFocusOutWhenTabGuardsAreEmpty) {\n      const isEmpty = this.providedIsEmpty ? this.providedIsEmpty() : _findFocusableElements(this.eFocusableElement, \".ag-tab-guard\").length === 0;\n      if (isEmpty) {\n        this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\n        return;\n      }\n    }\n    if (this.isFocusableContainer && this.eFocusableElement.contains(e.relatedTarget)) {\n      return;\n    }\n    const fromBottom = e.target === this.eBottomGuard;\n    const hasFocusedInnerElement = this.providedFocusInnerElement ? this.providedFocusInnerElement(fromBottom) : this.focusInnerElement(fromBottom);\n    if (!hasFocusedInnerElement && this.forceFocusOutWhenTabGuardsAreEmpty) {\n      this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\n    }\n  }\n  findNextElementOutsideAndFocus(up) {\n    const eDocument = _getDocument(this.beans);\n    const focusableEls = _findFocusableElements(eDocument.body, null, true);\n    const index = focusableEls.indexOf(up ? this.eTopGuard : this.eBottomGuard);\n    if (index === -1) {\n      return;\n    }\n    let start;\n    let end;\n    if (up) {\n      start = 0;\n      end = index;\n    } else {\n      start = index + 1;\n      end = focusableEls.length;\n    }\n    const focusableRange = focusableEls.slice(start, end);\n    const targetTabIndex = this.gos.get(\"tabIndex\");\n    focusableRange.sort((a, b) => {\n      const indexA = parseInt(a.getAttribute(\"tabindex\") || \"0\");\n      const indexB = parseInt(b.getAttribute(\"tabindex\") || \"0\");\n      if (indexB === targetTabIndex) {\n        return 1;\n      }\n      if (indexA === targetTabIndex) {\n        return -1;\n      }\n      if (indexA === 0) {\n        return 1;\n      }\n      if (indexB === 0) {\n        return -1;\n      }\n      return indexA - indexB;\n    });\n    focusableRange[up ? focusableRange.length - 1 : 0]?.focus();\n  }\n  onFocusIn(e) {\n    if (this.focusTrapActive || this.forcingFocusOut) {\n      return;\n    }\n    if (this.providedFocusIn) {\n      this.providedFocusIn(e);\n    }\n    if (!this.isFocusableContainer) {\n      this.deactivateTabGuards();\n    }\n  }\n  onFocusOut(e) {\n    if (this.focusTrapActive) {\n      return;\n    }\n    if (this.providedFocusOut) {\n      this.providedFocusOut(e);\n    }\n    if (!this.eFocusableElement.contains(e.relatedTarget)) {\n      this.activateTabGuards();\n    }\n  }\n  onTabKeyDown(e) {\n    if (this.providedOnTabKeyDown) {\n      this.providedOnTabKeyDown(e);\n      return;\n    }\n    if (this.focusTrapActive) {\n      return;\n    }\n    if (e.defaultPrevented) {\n      return;\n    }\n    const tabGuardsAreActive = this.tabGuardsAreActive();\n    if (tabGuardsAreActive) {\n      this.deactivateTabGuards();\n    }\n    const nextRoot = this.getNextFocusableElement(e.shiftKey);\n    if (tabGuardsAreActive) {\n      setTimeout(() => this.activateTabGuards(), 0);\n    }\n    if (!nextRoot) {\n      return;\n    }\n    nextRoot.focus();\n    e.preventDefault();\n  }\n  focusInnerElement(fromBottom = false) {\n    const focusable = _findFocusableElements(this.eFocusableElement);\n    if (this.tabGuardsAreActive()) {\n      focusable.splice(0, 1);\n      focusable.splice(focusable.length - 1, 1);\n    }\n    if (!focusable.length) {\n      return false;\n    }\n    focusable[fromBottom ? focusable.length - 1 : 0].focus({\n      preventScroll: true\n    });\n    return true;\n  }\n  getNextFocusableElement(backwards) {\n    return _findNextFocusableElement(this.beans, this.eFocusableElement, false, backwards);\n  }\n  forceFocusOutOfContainer(up = false) {\n    if (this.forcingFocusOut) {\n      return;\n    }\n    const tabGuardToFocus = up ? this.eTopGuard : this.eBottomGuard;\n    this.activateTabGuards();\n    this.skipTabGuardFocus = true;\n    this.forcingFocusOut = true;\n    tabGuardToFocus.focus();\n    window.setTimeout(() => {\n      this.forcingFocusOut = false;\n      this.activateTabGuards();\n    });\n  }\n  isTabGuard(element, bottom) {\n    return element === this.eTopGuard && !bottom || element === this.eBottomGuard && (bottom ?? true);\n  }\n  setAllowFocus(allowFocus) {\n    this.allowFocus = allowFocus;\n  }\n};\n\n// packages/ag-grid-community/src/widgets/tabGuardFeature.ts\nvar TabGuardFeature = class extends BeanStub {\n  constructor(comp) {\n    super();\n    this.comp = comp;\n  }\n  initialiseTabGuard(params) {\n    this.eTopGuard = this.createTabGuard(\"top\");\n    this.eBottomGuard = this.createTabGuard(\"bottom\");\n    this.eFocusableElement = this.comp.getFocusableElement();\n    const {\n      eTopGuard,\n      eBottomGuard,\n      eFocusableElement\n    } = this;\n    const tabGuards = [eTopGuard, eBottomGuard];\n    const compProxy = {\n      setTabIndex: tabIndex => {\n        tabGuards.forEach(tabGuard => tabIndex != null ? tabGuard.setAttribute(\"tabindex\", tabIndex) : tabGuard.removeAttribute(\"tabindex\"));\n      }\n    };\n    this.addTabGuards(eTopGuard, eBottomGuard);\n    const {\n      focusTrapActive = false,\n      onFocusIn,\n      onFocusOut,\n      focusInnerElement,\n      handleKeyDown,\n      onTabKeyDown,\n      shouldStopEventPropagation,\n      isEmpty,\n      forceFocusOutWhenTabGuardsAreEmpty,\n      isFocusableContainer\n    } = params;\n    this.tabGuardCtrl = this.createManagedBean(new TabGuardCtrl({\n      comp: compProxy,\n      focusTrapActive,\n      eTopGuard,\n      eBottomGuard,\n      eFocusableElement,\n      onFocusIn,\n      onFocusOut,\n      focusInnerElement,\n      handleKeyDown,\n      onTabKeyDown,\n      shouldStopEventPropagation,\n      isEmpty,\n      forceFocusOutWhenTabGuardsAreEmpty,\n      isFocusableContainer\n    }));\n  }\n  getTabGuardCtrl() {\n    return this.tabGuardCtrl;\n  }\n  createTabGuard(side) {\n    const tabGuard = _getDocument(this.beans).createElement(\"div\");\n    const cls = side === \"top\" ? TabGuardClassNames.TAB_GUARD_TOP : TabGuardClassNames.TAB_GUARD_BOTTOM;\n    tabGuard.classList.add(TabGuardClassNames.TAB_GUARD, cls);\n    _setAriaRole(tabGuard, \"presentation\");\n    return tabGuard;\n  }\n  addTabGuards(topTabGuard, bottomTabGuard) {\n    const eFocusableElement = this.eFocusableElement;\n    eFocusableElement.insertAdjacentElement(\"afterbegin\", topTabGuard);\n    eFocusableElement.insertAdjacentElement(\"beforeend\", bottomTabGuard);\n  }\n  removeAllChildrenExceptTabGuards() {\n    const tabGuards = [this.eTopGuard, this.eBottomGuard];\n    _clearElement(this.comp.getFocusableElement());\n    this.addTabGuards(...tabGuards);\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.tabGuardCtrl.forceFocusOutOfContainer(up);\n  }\n  appendChild(appendChild, newChild, container) {\n    if (!_isNodeOrElement(newChild)) {\n      newChild = newChild.getGui();\n    }\n    const {\n      eBottomGuard: bottomTabGuard\n    } = this;\n    if (bottomTabGuard) {\n      bottomTabGuard.insertAdjacentElement(\"beforebegin\", newChild);\n    } else {\n      appendChild(newChild, container);\n    }\n  }\n  destroy() {\n    const {\n      eTopGuard,\n      eBottomGuard\n    } = this;\n    _removeFromParent(eTopGuard);\n    _removeFromParent(eBottomGuard);\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/widgets/tabGuardComp.ts\nvar TabGuardComp = class extends Component {\n  initialiseTabGuard(params) {\n    this.tabGuardFeature = this.createManagedBean(new TabGuardFeature(this));\n    this.tabGuardFeature.initialiseTabGuard(params);\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.tabGuardFeature.forceFocusOutOfContainer(up);\n  }\n  appendChild(newChild, container) {\n    this.tabGuardFeature.appendChild(super.appendChild.bind(this), newChild, container);\n  }\n};\n\n// packages/ag-grid-community/src/widgets/touchListener.ts\nvar TouchListener = class {\n  constructor(eElement, preventMouseClick = false) {\n    this.DOUBLE_TAP_MILLIS = 500;\n    this.destroyFuncs = [];\n    this.touching = false;\n    this.localEventService = new LocalEventService();\n    this.preventMouseClick = preventMouseClick;\n    const startListener = this.onTouchStart.bind(this);\n    const moveListener = this.onTouchMove.bind(this);\n    const endListener = this.onTouchEnd.bind(this);\n    eElement.addEventListener(\"touchstart\", startListener, {\n      passive: true\n    });\n    eElement.addEventListener(\"touchmove\", moveListener, {\n      passive: true\n    });\n    eElement.addEventListener(\"touchend\", endListener, {\n      passive: false\n    });\n    this.destroyFuncs.push(() => {\n      eElement.removeEventListener(\"touchstart\", startListener, {\n        passive: true\n      });\n      eElement.removeEventListener(\"touchmove\", moveListener, {\n        passive: true\n      });\n      eElement.removeEventListener(\"touchend\", endListener, {\n        passive: false\n      });\n    });\n  }\n  getActiveTouch(touchList) {\n    for (let i = 0; i < touchList.length; i++) {\n      const matches = touchList[i].identifier === this.touchStart.identifier;\n      if (matches) {\n        return touchList[i];\n      }\n    }\n    return null;\n  }\n  addEventListener(eventType, listener) {\n    this.localEventService.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    this.localEventService.removeEventListener(eventType, listener);\n  }\n  onTouchStart(touchEvent) {\n    if (this.touching) {\n      return;\n    }\n    this.touchStart = touchEvent.touches[0];\n    this.touching = true;\n    this.moved = false;\n    const touchStartCopy = this.touchStart;\n    window.setTimeout(() => {\n      const touchesMatch = this.touchStart === touchStartCopy;\n      if (this.touching && touchesMatch && !this.moved) {\n        this.moved = true;\n        const event = {\n          type: \"longTap\",\n          touchStart: this.touchStart,\n          touchEvent\n        };\n        this.localEventService.dispatchEvent(event);\n      }\n    }, 500);\n  }\n  onTouchMove(touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n    const touch = this.getActiveTouch(touchEvent.touches);\n    if (!touch) {\n      return;\n    }\n    const eventIsFarAway = !_areEventsNear(touch, this.touchStart, 4);\n    if (eventIsFarAway) {\n      this.moved = true;\n    }\n  }\n  onTouchEnd(touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n    if (!this.moved) {\n      const event = {\n        type: \"tap\",\n        touchStart: this.touchStart\n      };\n      this.localEventService.dispatchEvent(event);\n      this.checkForDoubleTap();\n    }\n    if (this.preventMouseClick && touchEvent.cancelable) {\n      touchEvent.preventDefault();\n    }\n    this.touching = false;\n  }\n  checkForDoubleTap() {\n    const now = Date.now();\n    if (this.lastTapTime && this.lastTapTime > 0) {\n      const interval = now - this.lastTapTime;\n      if (interval > this.DOUBLE_TAP_MILLIS) {\n        const event = {\n          type: \"doubleTap\",\n          touchStart: this.touchStart\n        };\n        this.localEventService.dispatchEvent(event);\n        this.lastTapTime = null;\n      } else {\n        this.lastTapTime = now;\n      }\n    } else {\n      this.lastTapTime = now;\n    }\n  }\n  destroy() {\n    this.destroyFuncs.forEach(func => func());\n  }\n};\n\n// packages/ag-grid-community/src/interfaces/IRangeService.ts\nvar CellRangeType = /* @__PURE__ */(CellRangeType2 => {\n  CellRangeType2[CellRangeType2[\"VALUE\"] = 0] = \"VALUE\";\n  CellRangeType2[CellRangeType2[\"DIMENSION\"] = 1] = \"DIMENSION\";\n  return CellRangeType2;\n})(CellRangeType || {});\n\n// packages/ag-grid-community/src/autoScrollService.ts\nvar AutoScrollService = class {\n  constructor(params) {\n    this.tickingInterval = null;\n    this.onScrollCallback = null;\n    this.scrollContainer = params.scrollContainer;\n    this.scrollHorizontally = params.scrollAxis.indexOf(\"x\") !== -1;\n    this.scrollVertically = params.scrollAxis.indexOf(\"y\") !== -1;\n    this.scrollByTick = params.scrollByTick != null ? params.scrollByTick : 20;\n    if (params.onScrollCallback) {\n      this.onScrollCallback = params.onScrollCallback;\n    }\n    if (this.scrollVertically) {\n      this.getVerticalPosition = params.getVerticalPosition;\n      this.setVerticalPosition = params.setVerticalPosition;\n    }\n    if (this.scrollHorizontally) {\n      this.getHorizontalPosition = params.getHorizontalPosition;\n      this.setHorizontalPosition = params.setHorizontalPosition;\n    }\n    this.shouldSkipVerticalScroll = params.shouldSkipVerticalScroll || (() => false);\n    this.shouldSkipHorizontalScroll = params.shouldSkipHorizontalScroll || (() => false);\n  }\n  check(mouseEvent, forceSkipVerticalScroll = false) {\n    const skipVerticalScroll = forceSkipVerticalScroll || this.shouldSkipVerticalScroll();\n    if (skipVerticalScroll && this.shouldSkipHorizontalScroll()) {\n      return;\n    }\n    const rect = this.scrollContainer.getBoundingClientRect();\n    const scrollTick = this.scrollByTick;\n    this.tickLeft = mouseEvent.clientX < rect.left + scrollTick;\n    this.tickRight = mouseEvent.clientX > rect.right - scrollTick;\n    this.tickUp = mouseEvent.clientY < rect.top + scrollTick && !skipVerticalScroll;\n    this.tickDown = mouseEvent.clientY > rect.bottom - scrollTick && !skipVerticalScroll;\n    if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\n      this.ensureTickingStarted();\n    } else {\n      this.ensureCleared();\n    }\n  }\n  ensureTickingStarted() {\n    if (this.tickingInterval === null) {\n      this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\n      this.tickCount = 0;\n    }\n  }\n  doTick() {\n    this.tickCount++;\n    const tickAmount = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40;\n    if (this.scrollVertically) {\n      const vScrollPosition = this.getVerticalPosition();\n      if (this.tickUp) {\n        this.setVerticalPosition(vScrollPosition - tickAmount);\n      }\n      if (this.tickDown) {\n        this.setVerticalPosition(vScrollPosition + tickAmount);\n      }\n    }\n    if (this.scrollHorizontally) {\n      const hScrollPosition = this.getHorizontalPosition();\n      if (this.tickLeft) {\n        this.setHorizontalPosition(hScrollPosition - tickAmount);\n      }\n      if (this.tickRight) {\n        this.setHorizontalPosition(hScrollPosition + tickAmount);\n      }\n    }\n    if (this.onScrollCallback) {\n      this.onScrollCallback();\n    }\n  }\n  ensureCleared() {\n    if (this.tickingInterval) {\n      window.clearInterval(this.tickingInterval);\n      this.tickingInterval = null;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/vanillaFrameworkOverrides.ts\nvar VanillaFrameworkOverrides = class {\n  constructor(frameworkName = \"javascript\") {\n    this.frameworkName = frameworkName;\n    this.renderingEngine = \"vanilla\";\n    this.batchFrameworkComps = false;\n    this.wrapIncoming = callback => callback();\n    this.wrapOutgoing = callback => callback();\n    this.baseDocLink = `${BASE_URL}/${this.frameworkName}-data-grid`;\n    setValidationDocLink(this.baseDocLink);\n  }\n  setInterval(action, timeout) {\n    return new AgPromise(resolve => {\n      resolve(window.setInterval(action, timeout));\n    });\n  }\n  // for Vanilla JS, we just add the event to the element\n  addEventListener(element, type, listener, options) {\n    let eventListenerOptions = {};\n    if (typeof options === \"object\") {\n      eventListenerOptions = options;\n    } else if (typeof options === \"boolean\") {\n      eventListenerOptions = {\n        capture: options\n      };\n    }\n    if (eventListenerOptions.passive == null) {\n      const passive = getPassiveStateForEvent(type);\n      if (passive != null) {\n        eventListenerOptions.passive = passive;\n      }\n    }\n    element.addEventListener(type, listener, eventListenerOptions);\n  }\n  frameworkComponent(_) {\n    return null;\n  }\n  isFrameworkComponent(_) {\n    return false;\n  }\n  getDocLink(path) {\n    return `${this.baseDocLink}${path ? `/${path}` : \"\"}`;\n  }\n};\n\n// packages/ag-grid-community/src/api/apiUtils.ts\nfunction createGridApi(context) {\n  return {\n    beanName: \"gridApi\",\n    bean: context.getBean(\"apiFunctionSvc\").api\n  };\n}\n\n// packages/ag-grid-community/src/context/gridBeanComparator.ts\nvar orderedCoreBeans = [\n// Validate license first\n\"licenseManager\",\n// core beans only\n\"environment\", \"eventSvc\", \"gos\", \"paginationAutoPageSizeSvc\", \"apiFunctionSvc\", \"gridApi\", \"registry\", \"agCompUtils\", \"userCompFactory\", \"rowContainerHeight\", \"horizontalResizeSvc\", \"localeSvc\", \"pinnedRowModel\", \"dragSvc\", \"colGroupSvc\", \"visibleCols\", \"popupSvc\", \"selectionSvc\", \"colFilter\", \"quickFilter\", \"filterManager\", \"colModel\", \"headerNavigation\", \"pageBounds\", \"pagination\", \"pageBoundsListener\", \"rowSpanSvc\", \"stickyRowSvc\", \"rowRenderer\", \"expressionSvc\", \"alignedGridsSvc\", \"navigation\", \"valueCache\", \"valueSvc\", \"autoWidthCalc\", \"filterMenuFactory\", \"dragAndDrop\", \"focusSvc\", \"cellNavigation\", \"cellStyles\", \"scrollVisibleSvc\", \"sortSvc\", \"colHover\", \"colAnimation\", \"autoColSvc\", \"selectionColSvc\", \"changeDetectionSvc\", \"animationFrameSvc\", \"undoRedo\", \"colDefFactory\", \"rowStyleSvc\", \"rowNodeBlockLoader\", \"rowNodeSorter\", \"ctrlsSvc\", \"pinnedCols\", \"dataTypeSvc\", \"syncSvc\", \"overlays\", \"stateSvc\", \"expansionSvc\", \"apiEventSvc\", \"ariaAnnounce\", \"menuSvc\", \"colMoves\", \"colAutosize\", \"colFlex\", \"colResize\", \"pivotColsSvc\", \"valueColsSvc\", \"rowGroupColsSvc\", \"funcColsSvc\", \"colNames\", \"colViewport\", \"pivotResultCols\", \"showRowGroupCols\", \"validation\"\n// Have validations run last\n];\nvar beanNamePosition = Object.fromEntries(orderedCoreBeans.map((beanName, index) => [beanName, index]));\nfunction gridBeanInitComparator(bean1, bean2) {\n  const index1 = (bean1.beanName ? beanNamePosition[bean1.beanName] : void 0) ?? Number.MAX_SAFE_INTEGER;\n  const index2 = (bean2.beanName ? beanNamePosition[bean2.beanName] : void 0) ?? Number.MAX_SAFE_INTEGER;\n  return index1 - index2;\n}\nfunction gridBeanDestroyComparator(bean1, bean2) {\n  if (bean1?.beanName === \"gridDestroySvc\") {\n    return -1;\n  }\n  if (bean2?.beanName === \"gridDestroySvc\") {\n    return 1;\n  }\n  return 0;\n}\n\n// packages/ag-grid-community/src/headerRendering/rowContainer/headerRowContainerComp.ts\nvar PinnedLeftElement = {\n  tag: \"div\",\n  cls: \"ag-pinned-left-header\",\n  role: \"rowgroup\"\n};\nvar PinnedRightElement = {\n  tag: \"div\",\n  cls: \"ag-pinned-right-header\",\n  role: \"rowgroup\"\n};\nvar CenterElement = {\n  tag: \"div\",\n  cls: \"ag-header-viewport\",\n  role: \"presentation\",\n  attrs: {\n    tabindex: \"-1\"\n  },\n  children: [{\n    tag: \"div\",\n    ref: \"eCenterContainer\",\n    cls: \"ag-header-container\",\n    role: \"rowgroup\"\n  }]\n};\nvar HeaderRowContainerComp = class extends Component {\n  constructor(pinned) {\n    super();\n    this.eCenterContainer = RefPlaceholder;\n    this.headerRowComps = {};\n    this.rowCompsList = [];\n    this.pinned = pinned;\n  }\n  postConstruct() {\n    this.selectAndSetTemplate();\n    const compProxy = {\n      setDisplayed: displayed => this.setDisplayed(displayed),\n      setCtrls: ctrls => this.setCtrls(ctrls),\n      // only gets called for center section\n      setCenterWidth: width => this.eCenterContainer.style.width = width,\n      setViewportScrollLeft: left => this.getGui().scrollLeft = left,\n      // only gets called for pinned sections\n      setPinnedContainerWidth: width => {\n        const eGui = this.getGui();\n        eGui.style.width = width;\n        eGui.style.maxWidth = width;\n        eGui.style.minWidth = width;\n      }\n    };\n    const ctrl = this.createManagedBean(new HeaderRowContainerCtrl(this.pinned));\n    ctrl.setComp(compProxy, this.getGui());\n  }\n  selectAndSetTemplate() {\n    const pinnedLeft = this.pinned == \"left\";\n    const pinnedRight = this.pinned == \"right\";\n    const template = pinnedLeft ? PinnedLeftElement : pinnedRight ? PinnedRightElement : CenterElement;\n    this.setTemplate(template);\n    this.eRowContainer = this.eCenterContainer !== RefPlaceholder ? this.eCenterContainer : this.getGui();\n  }\n  destroy() {\n    this.setCtrls([]);\n    super.destroy();\n  }\n  destroyRowComp(rowComp) {\n    this.destroyBean(rowComp);\n    this.eRowContainer.removeChild(rowComp.getGui());\n  }\n  setCtrls(ctrls) {\n    const oldRowComps = this.headerRowComps;\n    this.headerRowComps = {};\n    this.rowCompsList = [];\n    let prevGui;\n    const appendEnsuringDomOrder = rowComp => {\n      const eGui = rowComp.getGui();\n      const notAlreadyIn = eGui.parentElement != this.eRowContainer;\n      if (notAlreadyIn) {\n        this.eRowContainer.appendChild(eGui);\n      }\n      if (prevGui) {\n        _ensureDomOrder(this.eRowContainer, eGui, prevGui);\n      }\n      prevGui = eGui;\n    };\n    ctrls.forEach(ctrl => {\n      const ctrlId = ctrl.instanceId;\n      const existingComp = oldRowComps[ctrlId];\n      delete oldRowComps[ctrlId];\n      const rowComp = existingComp ? existingComp : this.createBean(new HeaderRowComp(ctrl));\n      this.headerRowComps[ctrlId] = rowComp;\n      this.rowCompsList.push(rowComp);\n      appendEnsuringDomOrder(rowComp);\n    });\n    Object.values(oldRowComps).forEach(c => this.destroyRowComp(c));\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/gridHeaderComp.ts\nvar GridHeaderElement = {\n  tag: \"div\",\n  cls: \"ag-header\",\n  role: \"presentation\"\n};\nvar GridHeaderComp = class extends Component {\n  constructor() {\n    super(GridHeaderElement);\n  }\n  postConstruct() {\n    const compProxy = {\n      toggleCss: (cssClassName, on) => this.toggleCss(cssClassName, on),\n      setHeightAndMinHeight: height => {\n        this.getGui().style.height = height;\n        this.getGui().style.minHeight = height;\n      }\n    };\n    const ctrl = this.createManagedBean(new GridHeaderCtrl());\n    ctrl.setComp(compProxy, this.getGui(), this.getFocusableElement());\n    const addContainer = container => {\n      this.createManagedBean(container);\n      this.appendChild(container);\n    };\n    addContainer(new HeaderRowContainerComp(\"left\"));\n    addContainer(new HeaderRowContainerComp(null));\n    addContainer(new HeaderRowContainerComp(\"right\"));\n  }\n};\nvar GridHeaderSelector = {\n  selector: \"AG-HEADER-ROOT\",\n  component: GridHeaderComp\n};\n\n// packages/ag-grid-community/src/rendering/cell/cellComp.ts\nvar CellComp = class extends Component {\n  constructor(beans, cellCtrl, printLayout, eRow, editingCell) {\n    super();\n    this.cellCtrl = cellCtrl;\n    // every time we go into edit mode, or back again, this gets incremented.\n    // it's the components way of dealing with the async nature of framework components,\n    // so if a framework component takes a while to be created, we know if the object\n    // is still relevant when creating is finished. eg we could click edit / un-edit 20\n    // times before the first React edit component comes back - we should discard\n    // the first 19.\n    this.rendererVersion = 0;\n    this.editorVersion = 0;\n    this.beans = beans;\n    this.gos = beans.gos;\n    this.column = cellCtrl.column;\n    this.rowNode = cellCtrl.rowNode;\n    this.eRow = eRow;\n    const cellDiv = _createElement({\n      tag: \"div\",\n      role: cellCtrl.getCellAriaRole(),\n      attrs: {\n        \"comp-id\": `${this.getCompId()}`,\n        \"col-id\": cellCtrl.column.colIdSanitised\n      }\n    });\n    this.eCell = cellDiv;\n    let wrapperDiv;\n    if (cellCtrl.isCellSpanning()) {\n      wrapperDiv = _createElement({\n        tag: \"div\",\n        cls: \"ag-spanned-cell-wrapper\",\n        role: \"presentation\"\n      });\n      wrapperDiv.appendChild(cellDiv);\n      this.setTemplateFromElement(wrapperDiv);\n    } else {\n      this.setTemplateFromElement(cellDiv);\n    }\n    this.cellCssManager = new CssClassManager(() => cellDiv);\n    this.forceWrapper = cellCtrl.isForceWrapper();\n    this.refreshWrapper(false);\n    const compProxy = {\n      toggleCss: (cssClassName, on) => this.cellCssManager.toggleCss(cssClassName, on),\n      setUserStyles: styles => _addStylesToElement(cellDiv, styles),\n      getFocusableElement: () => cellDiv,\n      setIncludeSelection: include => this.includeSelection = include,\n      setIncludeRowDrag: include => this.includeRowDrag = include,\n      setIncludeDndSource: include => this.includeDndSource = include,\n      setRenderDetails: (compDetails, valueToDisplay, force) => this.setRenderDetails(compDetails, valueToDisplay, force),\n      setEditDetails: (compDetails, popup, position) => this.setEditDetails(compDetails, popup, position),\n      getCellEditor: () => this.cellEditor || null,\n      getCellRenderer: () => this.cellRenderer || null,\n      getParentOfValue: () => this.getParentOfValue(),\n      refreshEditStyles: (editing, isPopup) => this.refreshEditStyles(editing, isPopup)\n    };\n    cellCtrl.setComp(compProxy, cellDiv, wrapperDiv, this.eCellWrapper, printLayout, editingCell, void 0);\n  }\n  getParentOfValue() {\n    return this.eCellValue ?? this.eCellWrapper ?? this.eCell;\n  }\n  setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance) {\n    const isInlineEditing = this.cellEditor && !this.cellEditorPopupWrapper;\n    if (isInlineEditing) {\n      return;\n    }\n    this.firstRender = this.firstRender == null;\n    const controlWrapperChanged = this.refreshWrapper(false);\n    this.refreshEditStyles(false);\n    if (compDetails) {\n      const neverRefresh = forceNewCellRendererInstance || controlWrapperChanged;\n      const cellRendererRefreshSuccessful = neverRefresh ? false : this.refreshCellRenderer(compDetails);\n      if (!cellRendererRefreshSuccessful) {\n        this.destroyRenderer();\n        this.createCellRendererInstance(compDetails);\n      }\n    } else {\n      this.destroyRenderer();\n      this.insertValueWithoutCellRenderer(valueToDisplay);\n    }\n  }\n  setEditDetails(compDetails, popup, position) {\n    if (compDetails) {\n      this.createCellEditorInstance(compDetails, popup, position);\n    } else {\n      this.destroyEditor();\n    }\n  }\n  removeControls() {\n    const context = this.beans.context;\n    this.checkboxSelectionComp = context.destroyBean(this.checkboxSelectionComp);\n    this.dndSourceComp = context.destroyBean(this.dndSourceComp);\n    this.rowDraggingComp = context.destroyBean(this.rowDraggingComp);\n  }\n  // returns true if wrapper was changed\n  refreshWrapper(editing) {\n    const providingControls = this.includeRowDrag || this.includeDndSource || this.includeSelection;\n    const usingWrapper = providingControls || this.forceWrapper;\n    const putWrapperIn = usingWrapper && this.eCellWrapper == null;\n    if (putWrapperIn) {\n      this.eCellWrapper = _createElement({\n        tag: \"div\",\n        cls: \"ag-cell-wrapper\",\n        role: \"presentation\"\n      });\n      this.eCell.appendChild(this.eCellWrapper);\n    }\n    const takeWrapperOut = !usingWrapper && this.eCellWrapper != null;\n    if (takeWrapperOut) {\n      _removeFromParent(this.eCellWrapper);\n      this.eCellWrapper = void 0;\n    }\n    this.cellCssManager.toggleCss(\"ag-cell-value\", !usingWrapper);\n    const usingCellValue = !editing && usingWrapper;\n    const putCellValueIn = usingCellValue && this.eCellValue == null;\n    if (putCellValueIn) {\n      this.eCellValue = _createElement({\n        tag: \"span\",\n        cls: \"ag-cell-value\",\n        role: \"presentation\"\n      });\n      this.eCellWrapper.appendChild(this.eCellValue);\n    }\n    const takeCellValueOut = !usingCellValue && this.eCellValue != null;\n    if (takeCellValueOut) {\n      _removeFromParent(this.eCellValue);\n      this.eCellValue = void 0;\n    }\n    const templateChanged = putWrapperIn || takeWrapperOut || putCellValueIn || takeCellValueOut;\n    if (templateChanged) {\n      this.removeControls();\n    }\n    if (!editing && providingControls) {\n      this.addControls();\n    }\n    return templateChanged;\n  }\n  addControls() {\n    const {\n      cellCtrl,\n      eCellWrapper,\n      eCellValue,\n      includeRowDrag,\n      includeDndSource,\n      includeSelection\n    } = this;\n    const insertBefore = comp => {\n      if (comp) {\n        eCellWrapper.insertBefore(comp.getGui(), eCellValue);\n      }\n    };\n    if (includeRowDrag && this.rowDraggingComp == null) {\n      this.rowDraggingComp = cellCtrl.createRowDragComp();\n      insertBefore(this.rowDraggingComp);\n    }\n    if (includeDndSource && this.dndSourceComp == null) {\n      this.dndSourceComp = cellCtrl.createDndSource();\n      insertBefore(this.dndSourceComp);\n    }\n    if (includeSelection && this.checkboxSelectionComp == null) {\n      this.checkboxSelectionComp = cellCtrl.createSelectionCheckbox();\n      insertBefore(this.checkboxSelectionComp);\n    }\n  }\n  createCellEditorInstance(compDetails, popup, position) {\n    const versionCopy = this.editorVersion;\n    const cellEditorPromise = compDetails.newAgStackInstance();\n    const {\n      params\n    } = compDetails;\n    cellEditorPromise.then(c => this.afterCellEditorCreated(versionCopy, c, params, popup, position));\n    const cellEditorAsync = _missing(this.cellEditor);\n    if (cellEditorAsync && params.cellStartedEdit) {\n      this.cellCtrl.focusCell(true);\n    }\n  }\n  insertValueWithoutCellRenderer(valueToDisplay) {\n    const eParent = this.getParentOfValue();\n    _clearElement(eParent);\n    const escapedValue = _toString(valueToDisplay);\n    if (escapedValue != null) {\n      eParent.textContent = escapedValue;\n    }\n  }\n  destroyRenderer() {\n    const {\n      context\n    } = this.beans;\n    this.cellRenderer = context.destroyBean(this.cellRenderer);\n    _removeFromParent(this.cellRendererGui);\n    this.cellRendererGui = null;\n    this.rendererVersion++;\n  }\n  destroyEditor() {\n    const {\n      context\n    } = this.beans;\n    const recoverFocus = this.cellEditorPopupWrapper?.getGui().contains(_getActiveDomElement(this.beans)) || this.cellCtrl.hasBrowserFocus();\n    if (recoverFocus) {\n      this.eCell.focus({\n        preventScroll: true\n      });\n    }\n    this.hideEditorPopup?.();\n    this.hideEditorPopup = void 0;\n    this.cellEditor = context.destroyBean(this.cellEditor);\n    this.cellEditorPopupWrapper = context.destroyBean(this.cellEditorPopupWrapper);\n    _removeFromParent(this.cellEditorGui);\n    this.cellCtrl.disableEditorTooltipFeature();\n    this.cellEditorGui = null;\n    this.editorVersion++;\n  }\n  refreshCellRenderer(compClassAndParams) {\n    if (this.cellRenderer?.refresh == null) {\n      return false;\n    }\n    if (this.cellRendererClass !== compClassAndParams.componentClass) {\n      return false;\n    }\n    const result = this.cellRenderer.refresh(compClassAndParams.params);\n    return result === true || result === void 0;\n  }\n  createCellRendererInstance(compDetails) {\n    const displayComponentVersionCopy = this.rendererVersion;\n    const createCellRendererFunc = details => _ => {\n      const staleTask = this.rendererVersion !== displayComponentVersionCopy || !this.isAlive();\n      if (staleTask) {\n        return;\n      }\n      const componentPromise = details.newAgStackInstance();\n      const callback = this.afterCellRendererCreated.bind(this, displayComponentVersionCopy, details.componentClass);\n      componentPromise?.then(callback);\n    };\n    const {\n      animationFrameSvc\n    } = this.beans;\n    let createTask;\n    if (animationFrameSvc?.active && this.firstRender) {\n      createTask = (details, isDeferred = false) => {\n        animationFrameSvc.createTask(createCellRendererFunc(details), this.rowNode.rowIndex, \"p2\", details.componentFromFramework, isDeferred);\n      };\n    } else {\n      createTask = details => createCellRendererFunc(details)();\n    }\n    if (compDetails.params?.deferRender && !this.cellCtrl.rowNode.group) {\n      const {\n        loadingComp,\n        onReady\n      } = this.cellCtrl.getDeferLoadingCellRenderer();\n      if (loadingComp) {\n        createTask(loadingComp);\n        onReady.then(() => createTask(compDetails, true));\n      }\n    } else {\n      createTask(compDetails);\n    }\n  }\n  afterCellRendererCreated(cellRendererVersion, cellRendererClass, cellRenderer) {\n    const staleTask = !this.isAlive() || cellRendererVersion !== this.rendererVersion;\n    if (staleTask) {\n      this.beans.context.destroyBean(cellRenderer);\n      return;\n    }\n    this.cellRenderer = cellRenderer;\n    this.cellRendererClass = cellRendererClass;\n    const cellGui = cellRenderer.getGui();\n    this.cellRendererGui = cellGui;\n    if (cellGui != null) {\n      const eParent = this.getParentOfValue();\n      _clearElement(eParent);\n      eParent.appendChild(cellGui);\n    }\n  }\n  afterCellEditorCreated(requestVersion, cellEditor, params, popup, position) {\n    const staleComp = requestVersion !== this.editorVersion;\n    const {\n      context\n    } = this.beans;\n    if (staleComp) {\n      context.destroyBean(cellEditor);\n      return;\n    }\n    const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n    if (editingCancelledByUserComp) {\n      context.destroyBean(cellEditor);\n      this.cellCtrl.stopEditing(true);\n      return;\n    }\n    if (!cellEditor.getGui) {\n      _warn(97, {\n        colId: this.column.getId()\n      });\n      context.destroyBean(cellEditor);\n      return;\n    }\n    this.cellEditor = cellEditor;\n    this.cellEditorGui = cellEditor.getGui();\n    const cellEditorInPopup = popup || cellEditor.isPopup !== void 0 && cellEditor.isPopup();\n    if (cellEditorInPopup) {\n      this.addPopupCellEditor(params, position);\n    } else {\n      this.addInCellEditor();\n    }\n    this.refreshEditStyles(true, cellEditorInPopup);\n    cellEditor.afterGuiAttached?.();\n    this.cellCtrl.enableEditorTooltipFeature(cellEditor);\n    this.cellCtrl.cellEditorAttached();\n  }\n  refreshEditStyles(editing, isPopup) {\n    const {\n      cellCssManager\n    } = this;\n    cellCssManager.toggleCss(\"ag-cell-inline-editing\", editing && !isPopup);\n    cellCssManager.toggleCss(\"ag-cell-popup-editing\", editing && !!isPopup);\n    cellCssManager.toggleCss(\"ag-cell-not-inline-editing\", !editing || !!isPopup);\n  }\n  addInCellEditor() {\n    const {\n      eCell\n    } = this;\n    if (eCell.contains(_getActiveDomElement(this.beans))) {\n      eCell.focus();\n    }\n    this.destroyRenderer();\n    this.refreshWrapper(true);\n    _clearElement(this.getParentOfValue());\n    if (this.cellEditorGui) {\n      const eParent = this.getParentOfValue();\n      eParent.appendChild(this.cellEditorGui);\n    }\n  }\n  addPopupCellEditor(params, position) {\n    const {\n      gos,\n      context,\n      popupSvc,\n      editSvc\n    } = this.beans;\n    if (gos.get(\"editType\") === \"fullRow\") {\n      _warn(98);\n    }\n    const cellEditorPopupWrapper = this.cellEditorPopupWrapper = context.createBean(editSvc.createPopupEditorWrapper(params));\n    const {\n      cellEditor,\n      cellEditorGui,\n      eCell,\n      rowNode,\n      column,\n      cellCtrl\n    } = this;\n    const ePopupGui = cellEditorPopupWrapper.getGui();\n    if (cellEditorGui) {\n      ePopupGui.appendChild(cellEditorGui);\n    }\n    const useModelPopup = gos.get(\"stopEditingWhenCellsLoseFocus\");\n    const positionToUse = position != null ? position : cellEditor.getPopupPosition?.() ?? \"over\";\n    const isRtl = gos.get(\"enableRtl\");\n    const positionParams = {\n      ePopup: ePopupGui,\n      column,\n      rowNode,\n      type: \"popupCellEditor\",\n      eventSource: eCell,\n      position: positionToUse,\n      alignSide: isRtl ? \"right\" : \"left\",\n      keepWithinBounds: true\n    };\n    const positionCallback = popupSvc.positionPopupByComponent.bind(popupSvc, positionParams);\n    const addPopupRes = popupSvc.addPopup({\n      modal: useModelPopup,\n      eChild: ePopupGui,\n      closeOnEsc: true,\n      closedCallback: () => {\n        cellCtrl.onPopupEditorClosed();\n      },\n      anchorToElement: eCell,\n      positionCallback,\n      ariaOwns: eCell\n    });\n    if (addPopupRes) {\n      this.hideEditorPopup = addPopupRes.hideFunc;\n    }\n  }\n  detach() {\n    this.eRow.removeChild(this.getGui());\n  }\n  // if the row is also getting destroyed, then we don't need to remove from dom,\n  // as the row will also get removed, so no need to take out the cells from the row\n  // if the row is going (removing is an expensive operation, so only need to remove\n  // the top part)\n  //\n  // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n  destroy() {\n    this.destroyRenderer();\n    this.destroyEditor();\n    this.removeControls();\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/row/rowComp.ts\nvar RowComp = class extends Component {\n  constructor(ctrl, beans, containerType) {\n    super();\n    this.cellComps = /* @__PURE__ */new Map();\n    this.beans = beans;\n    this.rowCtrl = ctrl;\n    const rowDiv = _createElement({\n      tag: \"div\",\n      role: \"row\",\n      attrs: {\n        \"comp-id\": `${this.getCompId()}`\n      }\n    });\n    this.setInitialStyle(rowDiv, containerType);\n    this.setTemplateFromElement(rowDiv);\n    const style = rowDiv.style;\n    this.domOrder = this.rowCtrl.getDomOrder();\n    const compProxy = {\n      setDomOrder: domOrder => this.domOrder = domOrder,\n      setCellCtrls: cellCtrls => this.setCellCtrls(cellCtrls),\n      showFullWidth: compDetails => this.showFullWidth(compDetails),\n      getFullWidthCellRenderer: () => this.fullWidthCellRenderer,\n      toggleCss: (name, on) => this.toggleCss(name, on),\n      setUserStyles: styles => _addStylesToElement(rowDiv, styles),\n      setTop: top => style.top = top,\n      setTransform: transform => style.transform = transform,\n      setRowIndex: rowIndex => rowDiv.setAttribute(\"row-index\", rowIndex),\n      setRowId: rowId => rowDiv.setAttribute(\"row-id\", rowId),\n      setRowBusinessKey: businessKey => rowDiv.setAttribute(\"row-business-key\", businessKey),\n      refreshFullWidth: getUpdatedParams => this.fullWidthCellRenderer?.refresh?.(getUpdatedParams()) ?? false\n    };\n    ctrl.setComp(compProxy, this.getGui(), containerType, void 0);\n    this.addDestroyFunc(() => {\n      ctrl.unsetComp(containerType);\n    });\n  }\n  setInitialStyle(container, containerType) {\n    const transform = this.rowCtrl.getInitialTransform(containerType);\n    if (transform) {\n      container.style.setProperty(\"transform\", transform);\n    } else {\n      const top = this.rowCtrl.getInitialRowTop(containerType);\n      if (top) {\n        container.style.setProperty(\"top\", top);\n      }\n    }\n  }\n  showFullWidth(compDetails) {\n    const callback = cellRenderer => {\n      if (this.isAlive()) {\n        const eGui = cellRenderer.getGui();\n        this.getGui().appendChild(eGui);\n        this.rowCtrl.setupDetailRowAutoHeight(eGui);\n        this.setFullWidthRowComp(cellRenderer);\n      } else {\n        this.beans.context.destroyBean(cellRenderer);\n      }\n    };\n    const res = compDetails.newAgStackInstance();\n    res.then(callback);\n  }\n  setCellCtrls(cellCtrls) {\n    const cellsToRemove = new Map(this.cellComps);\n    for (const cellCtrl of cellCtrls) {\n      const key = cellCtrl.instanceId;\n      if (!this.cellComps.has(key)) {\n        this.newCellComp(cellCtrl);\n      } else {\n        cellsToRemove.delete(key);\n      }\n    }\n    this.destroyCells(cellsToRemove);\n    this.ensureDomOrder(cellCtrls);\n  }\n  ensureDomOrder(cellCtrls) {\n    if (!this.domOrder) {\n      return;\n    }\n    const elementsInOrder = [];\n    for (const cellCtrl of cellCtrls) {\n      const cellComp = this.cellComps.get(cellCtrl.instanceId);\n      if (cellComp) {\n        elementsInOrder.push(cellComp.getGui());\n      }\n    }\n    _setDomChildOrder(this.getGui(), elementsInOrder);\n  }\n  newCellComp(cellCtrl) {\n    const editing = this.beans.editSvc?.isEditing(cellCtrl, {\n      withOpenEditor: true\n    }) ?? false;\n    const cellComp = new CellComp(this.beans, cellCtrl, this.rowCtrl.printLayout, this.getGui(), editing);\n    this.cellComps.set(cellCtrl.instanceId, cellComp);\n    this.getGui().appendChild(cellComp.getGui());\n  }\n  destroy() {\n    super.destroy();\n    this.destroyCells(this.cellComps);\n  }\n  setFullWidthRowComp(fullWidthRowComponent) {\n    this.fullWidthCellRenderer = fullWidthRowComponent;\n    this.addDestroyFunc(() => {\n      this.fullWidthCellRenderer = this.beans.context.destroyBean(this.fullWidthCellRenderer);\n    });\n  }\n  destroyCells(cellComps) {\n    for (const cellComp of cellComps.values()) {\n      if (!cellComp) {\n        return;\n      }\n      const instanceId = cellComp.cellCtrl.instanceId;\n      if (this.cellComps.get(instanceId) !== cellComp) {\n        return;\n      }\n      cellComp.detach();\n      cellComp.destroy();\n      this.cellComps.delete(instanceId);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/rowContainerComp.ts\nfunction getElementParams(name, options, beans) {\n  const isCellSpanning = !!beans.gos.get(\"enableCellSpan\") && !!options.getSpannedRowCtrls;\n  const eContainerElement = {\n    tag: \"div\",\n    ref: \"eContainer\",\n    cls: _getRowContainerClass(name),\n    role: \"rowgroup\"\n  };\n  if (options.type === \"center\" || isCellSpanning) {\n    const eSpannedContainerElement = {\n      tag: \"div\",\n      ref: \"eSpannedContainer\",\n      cls: `ag-spanning-container ${_getRowSpanContainerClass(name)}`,\n      role: \"rowgroup\"\n    };\n    return {\n      tag: \"div\",\n      ref: \"eViewport\",\n      cls: `ag-viewport ${_getRowViewportClass(name)}`,\n      role: \"presentation\",\n      children: [eContainerElement, isCellSpanning ? eSpannedContainerElement : null]\n    };\n  }\n  return eContainerElement;\n}\nvar RowContainerComp = class extends Component {\n  constructor(params) {\n    super();\n    this.eViewport = RefPlaceholder;\n    this.eContainer = RefPlaceholder;\n    this.eSpannedContainer = RefPlaceholder;\n    this.rowCompsNoSpan = {};\n    this.rowCompsWithSpan = {};\n    this.name = params?.name;\n    this.options = _getRowContainerOptions(this.name);\n  }\n  postConstruct() {\n    this.setTemplate(getElementParams(this.name, this.options, this.beans));\n    const compProxy = {\n      setHorizontalScroll: offset => this.eViewport.scrollLeft = offset,\n      setViewportHeight: height => this.eViewport.style.height = height,\n      setRowCtrls: ({\n        rowCtrls\n      }) => this.setRowCtrls(rowCtrls),\n      setSpannedRowCtrls: rowCtrls => this.setRowCtrls(rowCtrls, true),\n      setDomOrder: domOrder => {\n        this.domOrder = domOrder;\n      },\n      setContainerWidth: width => {\n        this.eContainer.style.width = width;\n        if (this.eSpannedContainer) {\n          this.eSpannedContainer.style.width = width;\n        }\n      },\n      setOffsetTop: offset => {\n        const top = `translateY(${offset})`;\n        this.eContainer.style.transform = top;\n        if (this.eSpannedContainer) {\n          this.eSpannedContainer.style.transform = top;\n        }\n      }\n    };\n    const ctrl = this.createManagedBean(new RowContainerCtrl(this.name));\n    ctrl.setComp(compProxy, this.eContainer, this.eSpannedContainer, this.eViewport);\n  }\n  destroy() {\n    this.setRowCtrls([]);\n    this.setRowCtrls([], true);\n    super.destroy();\n    this.lastPlacedElement = null;\n  }\n  setRowCtrls(rowCtrls, spanContainer) {\n    const {\n      beans,\n      options\n    } = this;\n    const container = spanContainer ? this.eSpannedContainer : this.eContainer;\n    const oldRows = spanContainer ? {\n      ...this.rowCompsWithSpan\n    } : {\n      ...this.rowCompsNoSpan\n    };\n    const newComps = {};\n    if (spanContainer) {\n      this.rowCompsWithSpan = newComps;\n    } else {\n      this.rowCompsNoSpan = newComps;\n    }\n    this.lastPlacedElement = null;\n    const orderedRows = [];\n    for (const rowCtrl of rowCtrls) {\n      const instanceId = rowCtrl.instanceId;\n      const existingRowComp = oldRows[instanceId];\n      let rowComp;\n      if (existingRowComp) {\n        rowComp = existingRowComp;\n        delete oldRows[instanceId];\n      } else {\n        if (!rowCtrl.rowNode.displayed) {\n          continue;\n        }\n        rowComp = new RowComp(rowCtrl, beans, options.type);\n      }\n      newComps[instanceId] = rowComp;\n      orderedRows.push([rowComp, !existingRowComp]);\n    }\n    this.removeOldRows(Object.values(oldRows), container);\n    this.addRowNodes(orderedRows, container);\n  }\n  addRowNodes(rows, container) {\n    const {\n      domOrder\n    } = this;\n    for (const [rowComp, isNew] of rows) {\n      const eGui = rowComp.getGui();\n      if (!domOrder) {\n        if (isNew) {\n          container.appendChild(eGui);\n        }\n      } else {\n        this.ensureDomOrder(eGui, container);\n      }\n    }\n  }\n  removeOldRows(rowComps, container) {\n    for (const oldRowComp of rowComps) {\n      container.removeChild(oldRowComp.getGui());\n      oldRowComp.destroy();\n    }\n  }\n  ensureDomOrder(eRow, container) {\n    _ensureDomOrder(container, eRow, this.lastPlacedElement);\n    this.lastPlacedElement = eRow;\n  }\n};\nvar RowContainerSelector = {\n  selector: \"AG-ROW-CONTAINER\",\n  component: RowContainerComp\n};\n\n// packages/ag-grid-community/src/gridBodyComp/gridBodyComp.ts\nfunction makeRowContainers(paramsMap, names) {\n  return names.map(name => {\n    const refName = `e${name[0].toUpperCase() + name.substring(1)}RowContainer`;\n    paramsMap[refName] = {\n      name\n    };\n    return {\n      tag: \"ag-row-container\",\n      ref: refName,\n      attrs: {\n        name\n      }\n    };\n  });\n}\nfunction getGridBodyTemplate(includeOverlay) {\n  const paramsMap = {};\n  const elementParams = {\n    tag: \"div\",\n    ref: \"eGridRoot\",\n    cls: \"ag-root ag-unselectable\",\n    children: [{\n      tag: \"ag-header-root\"\n    }, {\n      tag: \"div\",\n      ref: \"eTop\",\n      cls: \"ag-floating-top\",\n      role: \"presentation\",\n      children: makeRowContainers(paramsMap, [\"topLeft\", \"topCenter\", \"topRight\", \"topFullWidth\"])\n    }, {\n      tag: \"div\",\n      ref: \"eBody\",\n      cls: \"ag-body\",\n      role: \"presentation\",\n      children: [{\n        tag: \"div\",\n        ref: \"eBodyViewport\",\n        cls: \"ag-body-viewport\",\n        role: \"presentation\",\n        children: makeRowContainers(paramsMap, [\"left\", \"center\", \"right\", \"fullWidth\"])\n      }, {\n        tag: \"ag-fake-vertical-scroll\"\n      }]\n    }, {\n      tag: \"div\",\n      ref: \"eStickyTop\",\n      cls: \"ag-sticky-top\",\n      role: \"presentation\",\n      children: makeRowContainers(paramsMap, [\"stickyTopLeft\", \"stickyTopCenter\", \"stickyTopRight\", \"stickyTopFullWidth\"])\n    }, {\n      tag: \"div\",\n      ref: \"eStickyBottom\",\n      cls: \"ag-sticky-bottom\",\n      role: \"presentation\",\n      children: makeRowContainers(paramsMap, [\"stickyBottomLeft\", \"stickyBottomCenter\", \"stickyBottomRight\", \"stickyBottomFullWidth\"])\n    }, {\n      tag: \"div\",\n      ref: \"eBottom\",\n      cls: \"ag-floating-bottom\",\n      role: \"presentation\",\n      children: makeRowContainers(paramsMap, [\"bottomLeft\", \"bottomCenter\", \"bottomRight\", \"bottomFullWidth\"])\n    }, {\n      tag: \"ag-fake-horizontal-scroll\"\n    }, includeOverlay ? {\n      tag: \"ag-overlay-wrapper\"\n    } : null]\n  };\n  return {\n    paramsMap,\n    elementParams\n  };\n}\nvar GridBodyComp = class extends Component {\n  constructor() {\n    super(...arguments);\n    this.eGridRoot = RefPlaceholder;\n    this.eBodyViewport = RefPlaceholder;\n    this.eStickyTop = RefPlaceholder;\n    this.eStickyBottom = RefPlaceholder;\n    this.eTop = RefPlaceholder;\n    this.eBottom = RefPlaceholder;\n    this.eBody = RefPlaceholder;\n  }\n  postConstruct() {\n    const {\n      overlays,\n      rangeSvc\n    } = this.beans;\n    const overlaySelector = overlays?.getOverlayWrapperSelector();\n    const {\n      paramsMap,\n      elementParams\n    } = getGridBodyTemplate(!!overlaySelector);\n    this.setTemplate(elementParams, [...(overlaySelector ? [overlaySelector] : []), FakeHScrollSelector, FakeVScrollSelector, GridHeaderSelector, RowContainerSelector], paramsMap);\n    const setHeight = (height, element) => {\n      const heightString = `${height}px`;\n      element.style.minHeight = heightString;\n      element.style.height = heightString;\n    };\n    const compProxy = {\n      setRowAnimationCssOnBodyViewport: (cssClass, animate) => this.setRowAnimationCssOnBodyViewport(cssClass, animate),\n      setColumnCount: count => _setAriaColCount(this.getGui(), count),\n      setRowCount: count => _setAriaRowCount(this.getGui(), count),\n      setTopHeight: height => setHeight(height, this.eTop),\n      setBottomHeight: height => setHeight(height, this.eBottom),\n      setTopInvisible: invisible => this.eTop.classList.toggle(\"ag-invisible\", invisible),\n      setBottomInvisible: invisible => this.eBottom.classList.toggle(\"ag-invisible\", invisible),\n      setStickyTopHeight: height => this.eStickyTop.style.height = height,\n      setStickyTopTop: top => this.eStickyTop.style.top = top,\n      setStickyTopWidth: width => this.eStickyTop.style.width = width,\n      setStickyBottomHeight: height => {\n        this.eStickyBottom.style.height = height;\n        this.eStickyBottom.classList.toggle(\"ag-invisible\", height === \"0px\");\n      },\n      setStickyBottomBottom: bottom => this.eStickyBottom.style.bottom = bottom,\n      setStickyBottomWidth: width => this.eStickyBottom.style.width = width,\n      setColumnMovingCss: (cssClass, flag) => this.toggleCss(cssClass, flag),\n      updateLayoutClasses: (cssClass, params) => {\n        const classLists = [this.eBodyViewport.classList, this.eBody.classList];\n        for (const classList of classLists) {\n          classList.toggle(LayoutCssClasses.AUTO_HEIGHT, params.autoHeight);\n          classList.toggle(LayoutCssClasses.NORMAL, params.normal);\n          classList.toggle(LayoutCssClasses.PRINT, params.print);\n        }\n        this.toggleCss(LayoutCssClasses.AUTO_HEIGHT, params.autoHeight);\n        this.toggleCss(LayoutCssClasses.NORMAL, params.normal);\n        this.toggleCss(LayoutCssClasses.PRINT, params.print);\n      },\n      setAlwaysVerticalScrollClass: (cssClass, on) => this.eBodyViewport.classList.toggle(CSS_CLASS_FORCE_VERTICAL_SCROLL, on),\n      registerBodyViewportResizeListener: listener => {\n        const unsubscribeFromResize = _observeResize(this.beans, this.eBodyViewport, listener);\n        this.addDestroyFunc(() => unsubscribeFromResize());\n      },\n      setPinnedTopBottomOverflowY: overflow => this.eTop.style.overflowY = this.eBottom.style.overflowY = overflow,\n      setCellSelectableCss: (cssClass, selectable) => {\n        [this.eTop, this.eBodyViewport, this.eBottom].forEach(ct => ct.classList.toggle(cssClass, selectable));\n      },\n      setBodyViewportWidth: width => this.eBodyViewport.style.width = width,\n      setGridRootRole: role => _setAriaRole(this.eGridRoot, role)\n    };\n    this.ctrl = this.createManagedBean(new GridBodyCtrl());\n    this.ctrl.setComp(compProxy, this.getGui(), this.eBodyViewport, this.eTop, this.eBottom, this.eStickyTop, this.eStickyBottom);\n    if (rangeSvc && _isCellSelectionEnabled(this.gos) || _isMultiRowSelection(this.gos)) {\n      _setAriaMultiSelectable(this.getGui(), true);\n    }\n  }\n  setRowAnimationCssOnBodyViewport(cssClass, animateRows) {\n    const bodyViewportClassList = this.eBodyViewport.classList;\n    bodyViewportClassList.toggle(\"ag-row-animation\", animateRows);\n    bodyViewportClassList.toggle(\"ag-row-no-animation\", !animateRows);\n  }\n};\nvar GridBodySelector = {\n  selector: \"AG-GRID-BODY\",\n  component: GridBodyComp\n};\n\n// packages/ag-grid-community/src/gridComp/gridCtrl.ts\nvar GridCtrl = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.additionalFocusableContainers = /* @__PURE__ */new Set();\n  }\n  setComp(view, eGridDiv, eGui) {\n    this.view = view;\n    this.eGridHostDiv = eGridDiv;\n    this.eGui = eGui;\n    this.eGui.setAttribute(\"grid-id\", this.beans.context.getGridId());\n    const {\n      dragAndDrop,\n      ctrlsSvc\n    } = this.beans;\n    dragAndDrop?.registerGridDropTarget(() => this.eGui, this);\n    _stampTopLevelGridCompWithGridInstance(this.gos, eGridDiv);\n    this.createManagedBean(new LayoutFeature(this.view));\n    this.view.setRtlClass(this.gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\");\n    const unsubscribeFromResize = _observeResize(this.beans, this.eGridHostDiv, this.onGridSizeChanged.bind(this));\n    this.addDestroyFunc(() => unsubscribeFromResize());\n    ctrlsSvc.register(\"gridCtrl\", this);\n  }\n  isDetailGrid() {\n    const el = _findTabbableParent(this.getGui());\n    return el?.getAttribute(\"row-id\")?.startsWith(\"detail\") || false;\n  }\n  getOptionalSelectors() {\n    const beans = this.beans;\n    return {\n      paginationSelector: beans.pagination?.getPaginationSelector(),\n      gridHeaderDropZonesSelector: beans.registry?.getSelector(\"AG-GRID-HEADER-DROP-ZONES\"),\n      sideBarSelector: beans.sideBar?.getSelector(),\n      statusBarSelector: beans.registry?.getSelector(\"AG-STATUS-BAR\"),\n      watermarkSelector: beans.licenseManager?.getWatermarkSelector()\n    };\n  }\n  onGridSizeChanged() {\n    this.eventSvc.dispatchEvent({\n      type: \"gridSizeChanged\",\n      clientWidth: this.eGridHostDiv.clientWidth,\n      clientHeight: this.eGridHostDiv.clientHeight\n    });\n  }\n  destroyGridUi() {\n    this.view.destroyGridUi();\n  }\n  getGui() {\n    return this.eGui;\n  }\n  setResizeCursor(direction) {\n    const {\n      view\n    } = this;\n    if (direction === false) {\n      view.setCursor(null);\n    } else {\n      const cursor = direction === 1 /* Horizontal */ ? \"ew-resize\" : \"ns-resize\";\n      view.setCursor(cursor);\n    }\n  }\n  disableUserSelect(on) {\n    this.view.setUserSelect(on ? \"none\" : null);\n  }\n  focusNextInnerContainer(backwards) {\n    const focusableContainers = this.getFocusableContainers();\n    const {\n      indexWithFocus,\n      nextIndex\n    } = this.getNextFocusableIndex(focusableContainers, backwards);\n    if (nextIndex < 0 || nextIndex >= focusableContainers.length) {\n      return false;\n    }\n    if (nextIndex === 0) {\n      if (indexWithFocus > 0) {\n        const {\n          visibleCols,\n          focusSvc\n        } = this.beans;\n        const allColumns = visibleCols.allCols;\n        const lastColumn = _last(allColumns);\n        if (focusSvc.focusGridView({\n          column: lastColumn,\n          backwards: true\n        })) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return this.focusContainer(focusableContainers[nextIndex], backwards);\n  }\n  focusInnerElement(fromBottom) {\n    const userCallbackFunction = this.gos.getCallback(\"focusGridInnerElement\");\n    if (userCallbackFunction && userCallbackFunction({\n      fromBottom: !!fromBottom\n    })) {\n      return true;\n    }\n    const focusableContainers = this.getFocusableContainers();\n    const {\n      focusSvc,\n      visibleCols\n    } = this.beans;\n    const allColumns = visibleCols.allCols;\n    if (fromBottom) {\n      if (focusableContainers.length > 1) {\n        return this.focusContainer(_last(focusableContainers), fromBottom);\n      }\n      const lastColumn = _last(allColumns);\n      if (focusSvc.focusGridView({\n        column: lastColumn,\n        backwards: fromBottom\n      })) {\n        return true;\n      }\n    }\n    if (this.gos.get(\"headerHeight\") === 0 || _isHeaderFocusSuppressed(this.beans)) {\n      if (focusSvc.focusGridView({\n        column: allColumns[0],\n        backwards: fromBottom\n      })) {\n        return true;\n      }\n      for (let i = 1; i < focusableContainers.length; i++) {\n        if (_focusInto(focusableContainers[i].getGui(), fromBottom)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return focusSvc.focusFirstHeader();\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.view.forceFocusOutOfContainer(up);\n  }\n  addFocusableContainer(container) {\n    this.additionalFocusableContainers.add(container);\n  }\n  removeFocusableContainer(container) {\n    this.additionalFocusableContainers.delete(container);\n  }\n  allowFocusForNextCoreContainer(up) {\n    const coreContainers = this.view.getFocusableContainers();\n    const {\n      nextIndex,\n      indexWithFocus\n    } = this.getNextFocusableIndex(coreContainers, up);\n    if (indexWithFocus === -1 || nextIndex < 0 || nextIndex >= coreContainers.length) {\n      return;\n    }\n    const comp = coreContainers[nextIndex];\n    comp.setAllowFocus?.(true);\n    setTimeout(() => {\n      comp.setAllowFocus?.(false);\n    });\n  }\n  isFocusable() {\n    const beans = this.beans;\n    return !_isCellFocusSuppressed(beans) || !_isHeaderFocusSuppressed(beans) || !!beans.sideBar?.comp?.isDisplayed();\n  }\n  getNextFocusableIndex(focusableContainers, backwards) {\n    const activeEl = _getActiveDomElement(this.beans);\n    const indexWithFocus = focusableContainers.findIndex(container => container.getGui().contains(activeEl));\n    const nextIndex = indexWithFocus + (backwards ? -1 : 1);\n    return {\n      indexWithFocus,\n      nextIndex\n    };\n  }\n  focusContainer(comp, up) {\n    comp.setAllowFocus?.(true);\n    const result = _focusInto(comp.getGui(), up, false, true);\n    comp.setAllowFocus?.(false);\n    return result;\n  }\n  getFocusableContainers() {\n    return [...this.view.getFocusableContainers(), ...this.additionalFocusableContainers];\n  }\n  destroy() {\n    this.additionalFocusableContainers.clear();\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/gridComp/gridComp.ts\nvar GridComp = class extends TabGuardComp {\n  constructor(eGridDiv) {\n    super();\n    this.gridBody = RefPlaceholder;\n    this.sideBar = RefPlaceholder;\n    this.pagination = RefPlaceholder;\n    this.rootWrapperBody = RefPlaceholder;\n    this.eGridDiv = eGridDiv;\n  }\n  postConstruct() {\n    const compProxy = {\n      destroyGridUi: () => this.destroyBean(this),\n      setRtlClass: cssClass => this.addCss(cssClass),\n      forceFocusOutOfContainer: this.forceFocusOutOfContainer.bind(this),\n      updateLayoutClasses: this.updateLayoutClasses.bind(this),\n      getFocusableContainers: this.getFocusableContainers.bind(this),\n      setUserSelect: value => {\n        this.getGui().style.userSelect = value != null ? value : \"\";\n        this.getGui().style.webkitUserSelect = value != null ? value : \"\";\n      },\n      setCursor: value => {\n        this.getGui().style.cursor = value != null ? value : \"\";\n      }\n    };\n    const ctrl = this.createManagedBean(new GridCtrl());\n    const comps = ctrl.getOptionalSelectors();\n    const template = this.createTemplate(comps);\n    const requiredComps = [GridBodySelector, ...Object.values(comps).filter(c => !!c)];\n    this.setTemplate(template, requiredComps);\n    ctrl.setComp(compProxy, this.eGridDiv, this.getGui());\n    this.insertGridIntoDom();\n    this.initialiseTabGuard({\n      // we want to override the default behaviour to do nothing for onTabKeyDown\n      onTabKeyDown: () => void 0,\n      focusInnerElement: fromBottom => ctrl.focusInnerElement(fromBottom),\n      forceFocusOutWhenTabGuardsAreEmpty: true,\n      isEmpty: () => !ctrl.isFocusable()\n    });\n  }\n  insertGridIntoDom() {\n    const eGui = this.getGui();\n    this.eGridDiv.appendChild(eGui);\n    this.addDestroyFunc(() => {\n      this.eGridDiv.removeChild(eGui);\n      _logIfDebug(this.gos, \"Grid removed from DOM\");\n    });\n  }\n  updateLayoutClasses(cssClass, params) {\n    const eRootWrapperBodyClassList = this.rootWrapperBody.classList;\n    const {\n      AUTO_HEIGHT,\n      NORMAL,\n      PRINT\n    } = LayoutCssClasses;\n    const {\n      autoHeight,\n      normal,\n      print\n    } = params;\n    eRootWrapperBodyClassList.toggle(AUTO_HEIGHT, autoHeight);\n    eRootWrapperBodyClassList.toggle(NORMAL, normal);\n    eRootWrapperBodyClassList.toggle(PRINT, print);\n    this.toggleCss(AUTO_HEIGHT, autoHeight);\n    this.toggleCss(NORMAL, normal);\n    this.toggleCss(PRINT, print);\n  }\n  createTemplate(params) {\n    const dropZones = params.gridHeaderDropZonesSelector ? {\n      tag: \"ag-grid-header-drop-zones\"\n    } : null;\n    const sideBar = params.sideBarSelector ? {\n      tag: \"ag-side-bar\",\n      ref: \"sideBar\"\n    } : null;\n    const statusBar = params.statusBarSelector ? {\n      tag: \"ag-status-bar\"\n    } : null;\n    const watermark = params.watermarkSelector ? {\n      tag: \"ag-watermark\"\n    } : null;\n    const pagination = params.paginationSelector ? {\n      tag: \"ag-pagination\",\n      ref: \"pagination\"\n    } : null;\n    return {\n      tag: \"div\",\n      cls: \"ag-root-wrapper\",\n      role: \"presentation\",\n      children: [dropZones, {\n        tag: \"div\",\n        ref: \"rootWrapperBody\",\n        cls: \"ag-root-wrapper-body\",\n        role: \"presentation\",\n        children: [{\n          tag: \"ag-grid-body\",\n          ref: \"gridBody\"\n        }, sideBar]\n      }, statusBar, pagination, watermark]\n    };\n  }\n  getFocusableElement() {\n    return this.rootWrapperBody;\n  }\n  forceFocusOutOfContainer(up = false) {\n    if (!up && this.pagination?.isDisplayed()) {\n      this.pagination.forceFocusOutOfContainer(up);\n      return;\n    }\n    super.forceFocusOutOfContainer(up);\n  }\n  getFocusableContainers() {\n    const focusableContainers = [this.gridBody];\n    [this.sideBar, this.pagination].forEach(comp => {\n      if (comp) {\n        focusableContainers.push(comp);\n      }\n    });\n    return focusableContainers.filter(el => _isVisible(el.getGui()));\n  }\n};\n\n// packages/ag-grid-community/src/api/gridApiFunctions.ts\nvar mod = (moduleName, input) => {\n  for (const key of Object.keys(input)) {\n    input[key] = moduleName;\n  }\n  return input;\n};\nvar gridApiFunctionsMap = {\n  dispatchEvent: \"CommunityCore\",\n  // this is always registered\n  ...mod(\"CommunityCore\", {\n    destroy: 0,\n    getGridId: 0,\n    getGridOption: 0,\n    isDestroyed: 0,\n    setGridOption: 0,\n    updateGridOptions: 0,\n    isModuleRegistered: 0\n  }),\n  ...mod(\"GridState\", {\n    getState: 0,\n    setState: 0\n  }),\n  ...mod(\"SharedRowSelection\", {\n    setNodesSelected: 0,\n    selectAll: 0,\n    deselectAll: 0,\n    selectAllFiltered: 0,\n    deselectAllFiltered: 0,\n    selectAllOnCurrentPage: 0,\n    deselectAllOnCurrentPage: 0,\n    getSelectedNodes: 0,\n    getSelectedRows: 0\n  }),\n  ...mod(\"RowApi\", {\n    redrawRows: 0,\n    setRowNodeExpanded: 0,\n    getRowNode: 0,\n    addRenderedRowListener: 0,\n    getRenderedNodes: 0,\n    forEachNode: 0,\n    getFirstDisplayedRowIndex: 0,\n    getLastDisplayedRowIndex: 0,\n    getDisplayedRowAtIndex: 0,\n    getDisplayedRowCount: 0\n  }),\n  ...mod(\"ScrollApi\", {\n    getVerticalPixelRange: 0,\n    getHorizontalPixelRange: 0,\n    ensureColumnVisible: 0,\n    ensureIndexVisible: 0,\n    ensureNodeVisible: 0\n  }),\n  ...mod(\"KeyboardNavigation\", {\n    getFocusedCell: 0,\n    clearFocusedCell: 0,\n    setFocusedCell: 0,\n    tabToNextCell: 0,\n    tabToPreviousCell: 0,\n    setFocusedHeader: 0\n  }),\n  ...mod(\"EventApi\", {\n    addEventListener: 0,\n    addGlobalListener: 0,\n    removeEventListener: 0,\n    removeGlobalListener: 0\n  }),\n  ...mod(\"ValueCache\", {\n    expireValueCache: 0\n  }),\n  ...mod(\"CellApi\", {\n    getCellValue: 0\n  }),\n  ...mod(\"SharedMenu\", {\n    showColumnMenu: 0,\n    hidePopupMenu: 0\n  }),\n  ...mod(\"Sort\", {\n    onSortChanged: 0\n  }),\n  ...mod(\"PinnedRow\", {\n    getPinnedTopRowCount: 0,\n    getPinnedBottomRowCount: 0,\n    getPinnedTopRow: 0,\n    getPinnedBottomRow: 0,\n    forEachPinnedRow: 0\n  }),\n  ...mod(\"Overlay\", {\n    showLoadingOverlay: 0,\n    showNoRowsOverlay: 0,\n    hideOverlay: 0\n  }),\n  ...mod(\"RenderApi\", {\n    setGridAriaProperty: 0,\n    refreshCells: 0,\n    refreshHeader: 0,\n    isAnimationFrameQueueEmpty: 0,\n    flushAllAnimationFrames: 0,\n    getSizesForCurrentTheme: 0,\n    getCellRendererInstances: 0\n  }),\n  ...mod(\"HighlightChanges\", {\n    flashCells: 0\n  }),\n  ...mod(\"RowDrag\", {\n    addRowDropZone: 0,\n    removeRowDropZone: 0,\n    getRowDropZoneParams: 0,\n    getRowDropPositionIndicator: 0,\n    setRowDropPositionIndicator: 0\n  }),\n  ...mod(\"ColumnApi\", {\n    getColumnDefs: 0,\n    getColumnDef: 0,\n    getDisplayNameForColumn: 0,\n    getColumn: 0,\n    getColumns: 0,\n    applyColumnState: 0,\n    getColumnState: 0,\n    resetColumnState: 0,\n    isPinning: 0,\n    isPinningLeft: 0,\n    isPinningRight: 0,\n    getDisplayedColAfter: 0,\n    getDisplayedColBefore: 0,\n    setColumnsVisible: 0,\n    setColumnsPinned: 0,\n    getAllGridColumns: 0,\n    getDisplayedLeftColumns: 0,\n    getDisplayedCenterColumns: 0,\n    getDisplayedRightColumns: 0,\n    getAllDisplayedColumns: 0,\n    getAllDisplayedVirtualColumns: 0\n  }),\n  ...mod(\"ColumnAutoSize\", {\n    sizeColumnsToFit: 0,\n    autoSizeColumns: 0,\n    autoSizeAllColumns: 0\n  }),\n  ...mod(\"ColumnGroup\", {\n    setColumnGroupOpened: 0,\n    getColumnGroup: 0,\n    getProvidedColumnGroup: 0,\n    getDisplayNameForColumnGroup: 0,\n    getColumnGroupState: 0,\n    setColumnGroupState: 0,\n    resetColumnGroupState: 0,\n    getLeftDisplayedColumnGroups: 0,\n    getCenterDisplayedColumnGroups: 0,\n    getRightDisplayedColumnGroups: 0,\n    getAllDisplayedColumnGroups: 0\n  }),\n  ...mod(\"ColumnMove\", {\n    moveColumnByIndex: 0,\n    moveColumns: 0\n  }),\n  ...mod(\"ColumnResize\", {\n    setColumnWidths: 0\n  }),\n  ...mod(\"ColumnHover\", {\n    isColumnHovered: 0\n  }),\n  ...mod(\"EditCore\", {\n    getCellEditorInstances: 0,\n    getEditingCells: 0,\n    stopEditing: 0,\n    startEditingCell: 0,\n    isEditing: 0,\n    validateEdit: 0\n  }),\n  ...mod(\"BatchEdit\", {\n    startBatchEdit: 0,\n    cancelBatchEdit: 0,\n    commitBatchEdit: 0,\n    isBatchEditing: 0\n  }),\n  ...mod(\"UndoRedoEdit\", {\n    undoCellEditing: 0,\n    redoCellEditing: 0,\n    getCurrentUndoSize: 0,\n    getCurrentRedoSize: 0\n  }),\n  ...mod(\"FilterCore\", {\n    isAnyFilterPresent: 0,\n    onFilterChanged: 0\n  }),\n  ...mod(\"ColumnFilter\", {\n    isColumnFilterPresent: 0,\n    getColumnFilterInstance: 0,\n    destroyFilter: 0,\n    setFilterModel: 0,\n    getFilterModel: 0,\n    getColumnFilterModel: 0,\n    setColumnFilterModel: 0,\n    showColumnFilter: 0,\n    hideColumnFilter: 0,\n    getColumnFilterHandler: 0,\n    doFilterAction: 0\n  }),\n  ...mod(\"QuickFilter\", {\n    isQuickFilterPresent: 0,\n    getQuickFilter: 0,\n    resetQuickFilter: 0\n  }),\n  ...mod(\"Find\", {\n    findGetActiveMatch: 0,\n    findGetTotalMatches: 0,\n    findGoTo: 0,\n    findNext: 0,\n    findPrevious: 0,\n    findGetNumMatches: 0,\n    findGetParts: 0,\n    findClearActive: 0,\n    findRefresh: 0\n  }),\n  ...mod(\"Pagination\", {\n    paginationIsLastPageFound: 0,\n    paginationGetPageSize: 0,\n    paginationGetCurrentPage: 0,\n    paginationGetTotalPages: 0,\n    paginationGetRowCount: 0,\n    paginationGoToNextPage: 0,\n    paginationGoToPreviousPage: 0,\n    paginationGoToFirstPage: 0,\n    paginationGoToLastPage: 0,\n    paginationGoToPage: 0\n  }),\n  ...mod(\"CsrmSsrmSharedApi\", {\n    expandAll: 0,\n    collapseAll: 0,\n    onRowHeightChanged: 0\n  }),\n  ...mod(\"SsrmInfiniteSharedApi\", {\n    setRowCount: 0,\n    getCacheBlockState: 0,\n    isLastRowIndexKnown: 0\n  }),\n  ...mod(\"ClientSideRowModelApi\", {\n    onGroupExpandedOrCollapsed: 0,\n    refreshClientSideRowModel: 0,\n    isRowDataEmpty: 0,\n    forEachLeafNode: 0,\n    forEachNodeAfterFilter: 0,\n    forEachNodeAfterFilterAndSort: 0,\n    resetRowHeights: 0,\n    applyTransaction: 0,\n    applyTransactionAsync: 0,\n    flushAsyncTransactions: 0,\n    getBestCostNodeSelection: 0\n  }),\n  ...mod(\"CsvExport\", {\n    getDataAsCsv: 0,\n    exportDataAsCsv: 0\n  }),\n  ...mod(\"InfiniteRowModel\", {\n    refreshInfiniteCache: 0,\n    purgeInfiniteCache: 0,\n    getInfiniteRowCount: 0\n  }),\n  ...mod(\"AdvancedFilter\", {\n    getAdvancedFilterModel: 0,\n    setAdvancedFilterModel: 0,\n    showAdvancedFilterBuilder: 0,\n    hideAdvancedFilterBuilder: 0\n  }),\n  ...mod(\"IntegratedCharts\", {\n    getChartModels: 0,\n    getChartRef: 0,\n    getChartImageDataURL: 0,\n    downloadChart: 0,\n    openChartToolPanel: 0,\n    closeChartToolPanel: 0,\n    createRangeChart: 0,\n    createPivotChart: 0,\n    createCrossFilterChart: 0,\n    updateChart: 0,\n    restoreChart: 0\n  }),\n  ...mod(\"Clipboard\", {\n    copyToClipboard: 0,\n    cutToClipboard: 0,\n    copySelectedRowsToClipboard: 0,\n    copySelectedRangeToClipboard: 0,\n    copySelectedRangeDown: 0,\n    pasteFromClipboard: 0\n  }),\n  ...mod(\"ExcelExport\", {\n    getDataAsExcel: 0,\n    exportDataAsExcel: 0,\n    getSheetDataForExcel: 0,\n    getMultipleSheetsAsExcel: 0,\n    exportMultipleSheetsAsExcel: 0\n  }),\n  ...mod(\"SharedMasterDetail\", {\n    addDetailGridInfo: 0,\n    removeDetailGridInfo: 0,\n    getDetailGridInfo: 0,\n    forEachDetailGridInfo: 0\n  }),\n  ...mod(\"ContextMenu\", {\n    showContextMenu: 0\n  }),\n  ...mod(\"ColumnMenu\", {\n    showColumnChooser: 0,\n    hideColumnChooser: 0\n  }),\n  ...mod(\"CellSelection\", {\n    getCellRanges: 0,\n    addCellRange: 0,\n    clearRangeSelection: 0,\n    clearCellSelection: 0\n  }),\n  ...mod(\"SharedRowGrouping\", {\n    setRowGroupColumns: 0,\n    removeRowGroupColumns: 0,\n    addRowGroupColumns: 0,\n    getRowGroupColumns: 0,\n    moveRowGroupColumn: 0\n  }),\n  ...mod(\"SharedAggregation\", {\n    addAggFuncs: 0,\n    clearAggFuncs: 0,\n    setColumnAggFunc: 0\n  }),\n  ...mod(\"SharedPivot\", {\n    isPivotMode: 0,\n    getPivotResultColumn: 0,\n    setValueColumns: 0,\n    getValueColumns: 0,\n    removeValueColumns: 0,\n    addValueColumns: 0,\n    setPivotColumns: 0,\n    removePivotColumns: 0,\n    addPivotColumns: 0,\n    getPivotColumns: 0,\n    setPivotResultColumns: 0,\n    getPivotResultColumns: 0\n  }),\n  ...mod(\"ServerSideRowModelApi\", {\n    getServerSideSelectionState: 0,\n    setServerSideSelectionState: 0,\n    applyServerSideTransaction: 0,\n    applyServerSideTransactionAsync: 0,\n    applyServerSideRowData: 0,\n    retryServerSideLoads: 0,\n    flushServerSideAsyncTransactions: 0,\n    refreshServerSide: 0,\n    getServerSideGroupLevelState: 0\n  }),\n  ...mod(\"SideBar\", {\n    isSideBarVisible: 0,\n    setSideBarVisible: 0,\n    setSideBarPosition: 0,\n    openToolPanel: 0,\n    closeToolPanel: 0,\n    getOpenedToolPanel: 0,\n    refreshToolPanel: 0,\n    isToolPanelShowing: 0,\n    getToolPanelInstance: 0,\n    getSideBar: 0\n  }),\n  ...mod(\"StatusBar\", {\n    getStatusPanel: 0\n  })\n};\n\n// packages/ag-grid-community/src/api/apiFunctionService.ts\nvar defaultFns = {\n  isDestroyed: () => true,\n  destroy() {},\n  preConstruct() {},\n  postConstruct() {},\n  preWireBeans() {},\n  wireBeans() {}\n};\nvar dispatchEvent = (beans, event) => beans.eventSvc.dispatchEvent(event);\nvar GridApiClass = class {};\nReflect.defineProperty(GridApiClass, \"name\", {\n  value: \"GridApi\"\n});\nvar ApiFunctionService = class extends BeanStub {\n  constructor() {\n    super();\n    this.beanName = \"apiFunctionSvc\";\n    this.api = new GridApiClass();\n    this.fns = {\n      ...defaultFns,\n      // dispatchEvent is used by frameworks, also used by aligned grids to identify a grid api instance\n      dispatchEvent\n    };\n    this.preDestroyLink = \"\";\n    const {\n      api\n    } = this;\n    for (const key of Object.keys(gridApiFunctionsMap)) {\n      api[key] = this.makeApi(key)[key];\n    }\n  }\n  postConstruct() {\n    this.preDestroyLink = this.beans.frameworkOverrides.getDocLink(\"grid-lifecycle/#grid-pre-destroyed\");\n  }\n  addFunction(functionName, func) {\n    const {\n      fns,\n      beans\n    } = this;\n    if (fns !== defaultFns) {\n      fns[functionName] = beans?.validation?.validateApiFunction(functionName, func) ?? func;\n    }\n  }\n  makeApi(apiName) {\n    return {\n      [apiName]: (...args) => {\n        const {\n          beans,\n          fns: {\n            [apiName]: fn\n          }\n        } = this;\n        return fn ? fn(beans, ...args) : this.apiNotFound(apiName);\n      }\n    };\n  }\n  apiNotFound(fnName) {\n    const {\n      beans,\n      gos,\n      preDestroyLink\n    } = this;\n    if (!beans) {\n      _warn(26, {\n        fnName,\n        preDestroyLink\n      });\n    } else {\n      const module = gridApiFunctionsMap[fnName];\n      if (gos.assertModuleRegistered(module, `api.${fnName}`)) {\n        _warn(27, {\n          fnName,\n          module\n        });\n      }\n    }\n  }\n  destroy() {\n    super.destroy();\n    this.fns = defaultFns;\n    this.beans = null;\n  }\n};\n\n// packages/ag-grid-community/src/api/coreApi.ts\nfunction getGridId(beans) {\n  return beans.context.getGridId();\n}\nfunction destroy(beans) {\n  beans.gridDestroySvc.destroy();\n}\nfunction isDestroyed(beans) {\n  return beans.gridDestroySvc.destroyCalled;\n}\nfunction getGridOption(beans, key) {\n  return beans.gos.get(key);\n}\nfunction setGridOption(beans, key, value) {\n  updateGridOptions(beans, {\n    [key]: value\n  });\n}\nfunction updateGridOptions(beans, options) {\n  beans.gos.updateGridOptions({\n    options\n  });\n}\nfunction isModuleRegistered(beans, moduleName) {\n  const withoutSuffix = moduleName.replace(/Module$/, \"\");\n  return beans.gos.isModuleRegistered(withoutSuffix);\n}\n\n// packages/ag-grid-community/src/rendering/dndSourceComp.ts\nvar DndSourceElement = {\n  tag: \"div\",\n  cls: \"ag-drag-handle ag-row-drag\",\n  attrs: {\n    draggable: \"true\"\n  }\n};\nvar DndSourceComp = class extends Component {\n  constructor(rowNode, column, eCell) {\n    super(DndSourceElement);\n    this.rowNode = rowNode;\n    this.column = column;\n    this.eCell = eCell;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    eGui.appendChild(_createIconNoSpan(\"rowDrag\", this.beans, null));\n    this.addGuiEventListener(\"mousedown\", e => {\n      e.stopPropagation();\n    });\n    this.addDragSource();\n    this.checkVisibility();\n  }\n  addDragSource() {\n    this.addGuiEventListener(\"dragstart\", this.onDragStart.bind(this));\n  }\n  onDragStart(dragEvent) {\n    const {\n      rowNode,\n      column,\n      eCell,\n      gos\n    } = this;\n    const providedOnRowDrag = column.getColDef().dndSourceOnRowDrag;\n    const dataTransfer = dragEvent.dataTransfer;\n    dataTransfer.setDragImage(eCell, 0, 0);\n    if (providedOnRowDrag) {\n      const params = _addGridCommonParams(gos, {\n        rowNode,\n        dragEvent\n      });\n      providedOnRowDrag(params);\n    } else {\n      try {\n        const jsonData = JSON.stringify(rowNode.data);\n        dataTransfer.setData(\"application/json\", jsonData);\n        dataTransfer.setData(\"text/plain\", jsonData);\n      } catch (e) {}\n    }\n  }\n  checkVisibility() {\n    const visible = this.column.isDndSource(this.rowNode);\n    this.setDisplayed(visible);\n  }\n};\n\n// packages/ag-grid-community/src/dragAndDrop/dragApi.ts\nfunction addRowDropZone(beans, params) {\n  beans.rowDragSvc?.rowDragFeature?.addRowDropZone(params);\n}\nfunction removeRowDropZone(beans, params) {\n  const activeDropTarget = beans.dragAndDrop?.findExternalZone(params);\n  if (activeDropTarget) {\n    beans.dragAndDrop?.removeDropTarget(activeDropTarget);\n  }\n}\nfunction getRowDropZoneParams(beans, events) {\n  return beans.rowDragSvc?.rowDragFeature?.getRowDropZone(events);\n}\nfunction getRowDropPositionIndicator(beans) {\n  const rowDropHighlightSvc = beans.rowDropHighlightSvc;\n  return rowDropHighlightSvc ? {\n    row: rowDropHighlightSvc.row,\n    dropIndicatorPosition: rowDropHighlightSvc.position\n  } : {\n    row: null,\n    dropIndicatorPosition: \"none\"\n  };\n}\nfunction setRowDropPositionIndicator(beans, params) {\n  const rowDropHighlightSvc = beans.rowDropHighlightSvc;\n  if (!rowDropHighlightSvc) {\n    return;\n  }\n  const rowNode = params?.row;\n  let position = params?.dropIndicatorPosition;\n  if (position !== \"above\" && position !== \"below\" && position !== \"inside\") {\n    position = \"none\";\n  }\n  const rowIndex = rowNode?.rowIndex;\n  if (rowIndex === null || rowIndex === void 0 || position === \"none\") {\n    rowDropHighlightSvc.clear();\n  } else {\n    rowDropHighlightSvc.set(rowNode, position);\n  }\n}\n\n// packages/ag-grid-community/src/dragAndDrop/horizontalResizeService.ts\nvar HorizontalResizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"horizontalResizeSvc\";\n  }\n  addResizeBar(params) {\n    const dragSource = {\n      dragStartPixels: params.dragStartPixels || 0,\n      eElement: params.eResizeBar,\n      onDragStart: this.onDragStart.bind(this, params),\n      onDragStop: this.onDragStop.bind(this, params),\n      onDragging: this.onDragging.bind(this, params),\n      onDragCancel: this.onDragStop.bind(this, params),\n      includeTouch: true,\n      stopPropagationForTouch: true\n    };\n    const {\n      dragSvc\n    } = this.beans;\n    dragSvc.addDragSource(dragSource);\n    const finishedWithResizeFunc = () => dragSvc.removeDragSource(dragSource);\n    return finishedWithResizeFunc;\n  }\n  onDragStart(params, mouseEvent) {\n    this.dragStartX = mouseEvent.clientX;\n    this.setResizeIcons();\n    const shiftKey = mouseEvent instanceof MouseEvent && mouseEvent.shiftKey === true;\n    params.onResizeStart(shiftKey);\n  }\n  setResizeIcons() {\n    const ctrl = this.beans.ctrlsSvc.get(\"gridCtrl\");\n    ctrl.setResizeCursor(1 /* Horizontal */);\n    ctrl.disableUserSelect(true);\n  }\n  onDragStop(params) {\n    params.onResizeEnd(this.resizeAmount);\n    this.resetIcons();\n  }\n  resetIcons() {\n    const ctrl = this.beans.ctrlsSvc.get(\"gridCtrl\");\n    ctrl.setResizeCursor(false);\n    ctrl.disableUserSelect(false);\n  }\n  onDragging(params, mouseEvent) {\n    this.resizeAmount = mouseEvent.clientX - this.dragStartX;\n    params.onResizing(this.resizeAmount);\n  }\n};\n\n// packages/ag-grid-community/src/dragAndDrop/rowDragComp.ts\nvar RowDragElement = {\n  tag: \"div\",\n  cls: \"ag-drag-handle ag-row-drag\",\n  attrs: {\n    \"aria-hidden\": \"true\"\n  }\n};\nvar RowDragComp = class extends Component {\n  constructor(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange) {\n    super();\n    this.cellValueFn = cellValueFn;\n    this.rowNode = rowNode;\n    this.column = column;\n    this.customGui = customGui;\n    this.dragStartPixels = dragStartPixels;\n    this.suppressVisibilityChange = suppressVisibilityChange;\n    this.dragSource = null;\n  }\n  isCustomGui() {\n    return this.customGui != null;\n  }\n  postConstruct() {\n    const {\n      beans,\n      rowNode,\n      column,\n      gos\n    } = this;\n    if (!this.customGui) {\n      this.setTemplate(RowDragElement);\n      this.getGui().appendChild(_createIconNoSpan(\"rowDrag\", beans, null));\n      this.addDragSource();\n    } else {\n      this.setDragElement(this.customGui, this.dragStartPixels);\n    }\n    if (!this.suppressVisibilityChange) {\n      const strategy = gos.get(\"rowDragManaged\") ? new ManagedVisibilityStrategy(this, rowNode, column) : new NonManagedVisibilityStrategy(this, rowNode, column);\n      this.createManagedBean(strategy, this.beans.context);\n    }\n  }\n  setDragElement(dragElement, dragStartPixels) {\n    this.setTemplateFromElement(dragElement, void 0, void 0, true);\n    this.addDragSource(dragStartPixels);\n  }\n  getSelectedNodes() {\n    const rowNode = this.rowNode;\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\n    if (!isRowDragMultiRow) {\n      return [rowNode];\n    }\n    const selection = this.beans.selectionSvc?.getSelectedNodes() ?? [];\n    return selection.indexOf(rowNode) !== -1 ? selection : [rowNode];\n  }\n  getDragItem() {\n    const {\n      column,\n      rowNode\n    } = this;\n    return {\n      rowNode,\n      rowNodes: this.getSelectedNodes(),\n      columns: column ? [column] : void 0,\n      defaultTextValue: this.cellValueFn()\n    };\n  }\n  getRowDragText(column) {\n    if (column) {\n      const colDef = column.getColDef();\n      if (colDef.rowDragText) {\n        return colDef.rowDragText;\n      }\n    }\n    return this.gos.get(\"rowDragText\");\n  }\n  addDragSource(dragStartPixels = 4) {\n    if (this.dragSource) {\n      this.removeDragSource();\n    }\n    if (this.gos.get(\"rowDragManaged\") && this.rowNode.footer) {\n      return;\n    }\n    const eGui = this.getGui();\n    if (this.gos.get(\"enableCellTextSelection\")) {\n      this.removeMouseDownListener();\n      this.mouseDownListener = this.addManagedElementListeners(eGui, {\n        mousedown: e => {\n          e?.preventDefault();\n        }\n      })[0];\n    }\n    const translate = this.getLocaleTextFunc();\n    this.dragSource = {\n      type: 2 /* RowDrag */,\n      eElement: eGui,\n      dragItemName: () => {\n        const dragItem = this.getDragItem();\n        const dragItemCount = dragItem.rowNodes?.length || 1;\n        const rowDragText = this.getRowDragText(this.column);\n        if (rowDragText) {\n          return rowDragText(dragItem, dragItemCount);\n        }\n        return dragItemCount === 1 ? this.cellValueFn() : `${dragItemCount} ${translate(\"rowDragRows\", \"rows\")}`;\n      },\n      getDragItem: () => this.getDragItem(),\n      dragStartPixels,\n      dragSourceDomDataKey: this.gos.getDomDataKey()\n    };\n    this.beans.dragAndDrop.addDragSource(this.dragSource, true);\n  }\n  destroy() {\n    this.removeDragSource();\n    this.removeMouseDownListener();\n    super.destroy();\n  }\n  removeDragSource() {\n    if (!this.dragSource) {\n      return;\n    }\n    this.beans.dragAndDrop.removeDragSource(this.dragSource);\n    this.dragSource = null;\n  }\n  removeMouseDownListener() {\n    if (!this.mouseDownListener) {\n      return;\n    }\n    this.mouseDownListener();\n    this.mouseDownListener = void 0;\n  }\n};\nvar VisibilityStrategy = class extends BeanStub {\n  constructor(parent, rowNode, column) {\n    super();\n    this.parent = parent;\n    this.rowNode = rowNode;\n    this.column = column;\n  }\n  setDisplayedOrVisible(neverDisplayed, alwaysHidden = false) {\n    const displayedOptions = {\n      skipAriaHidden: true\n    };\n    if (neverDisplayed) {\n      this.parent.setDisplayed(false, displayedOptions);\n    } else {\n      let shown = !alwaysHidden;\n      let isShownSometimes = false;\n      const {\n        column,\n        rowNode,\n        parent\n      } = this;\n      if (column) {\n        const rowDrag = column.getColDef().rowDrag;\n        isShownSometimes = typeof rowDrag === \"function\";\n        shown = (alwaysHidden ? !!rowDrag : column.isRowDrag(rowNode)) || parent.isCustomGui();\n      }\n      if (isShownSometimes) {\n        parent.setDisplayed(true, displayedOptions);\n        parent.setVisible(shown && !alwaysHidden, displayedOptions);\n      } else {\n        parent.setDisplayed(shown, displayedOptions);\n        parent.setVisible(!alwaysHidden, displayedOptions);\n      }\n    }\n  }\n};\nvar NonManagedVisibilityStrategy = class extends VisibilityStrategy {\n  postConstruct() {\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\n    const listener = this.workOutVisibility.bind(this);\n    this.addManagedListeners(this.rowNode, {\n      dataChanged: listener,\n      cellChanged: listener\n    });\n    this.addManagedListeners(this.beans.eventSvc, {\n      newColumnsLoaded: listener\n    });\n    this.workOutVisibility();\n  }\n  onSuppressRowDrag() {\n    this.workOutVisibility();\n  }\n  workOutVisibility() {\n    const neverDisplayed = this.gos.get(\"suppressRowDrag\");\n    this.setDisplayedOrVisible(neverDisplayed);\n  }\n};\nvar ManagedVisibilityStrategy = class extends VisibilityStrategy {\n  postConstruct() {\n    const listener = this.workOutVisibility.bind(this);\n    this.addManagedListeners(this.beans.eventSvc, {\n      sortChanged: listener,\n      filterChanged: listener,\n      columnRowGroupChanged: listener,\n      newColumnsLoaded: listener\n    });\n    this.addManagedListeners(this.rowNode, {\n      dataChanged: listener,\n      cellChanged: listener\n    });\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\n    this.workOutVisibility();\n  }\n  onSuppressRowDrag() {\n    this.workOutVisibility();\n  }\n  workOutVisibility() {\n    const {\n      rowDragSvc,\n      dragAndDrop,\n      gos\n    } = this.beans;\n    const rowDragFeature = rowDragSvc.rowDragFeature;\n    const shouldPreventRowMove = rowDragFeature && rowDragFeature.shouldPreventRowMove();\n    const suppressRowDrag = gos.get(\"suppressRowDrag\");\n    const hasExternalDropZones = dragAndDrop.hasExternalDropZones();\n    const neverDisplayed = shouldPreventRowMove && !hasExternalDropZones || suppressRowDrag;\n    this.setDisplayedOrVisible(neverDisplayed, this.rowNode.footer);\n  }\n};\n\n// packages/ag-grid-community/src/utils/changedPath.ts\nvar ChangedPath = class {\n  constructor(keepingColumns, rootNode) {\n    // whether changed path is active of not. it is active when a) doing\n    // a transaction update or b) doing change detection. if we are doing\n    // a CSRM refresh for other reasons (after sort or filter, or user calling\n    // setRowData() without delta mode) then we are not active. we are also\n    // marked as not active if secondary columns change in pivot (as this impacts\n    // aggregations).\n    // can be set inactive by:\n    // a) ClientSideRowModel, if no transactions or\n    // b) PivotService, if secondary columns changed\n    this.active = true;\n    // for each node in the change path, we also store which columns need\n    // to be re-aggregated.\n    this.nodeIdsToColumns = {};\n    // for quick lookup, all items in the change path are mapped by nodeId\n    this.mapToItems = {};\n    this.keepingColumns = keepingColumns;\n    this.pathRoot = {\n      rowNode: rootNode,\n      children: null\n    };\n    this.mapToItems[rootNode.id] = this.pathRoot;\n  }\n  depthFirstSearchChangedPath(pathItem, callback) {\n    const {\n      rowNode,\n      children\n    } = pathItem;\n    if (children) {\n      for (let i = 0; i < children.length; ++i) {\n        this.depthFirstSearchChangedPath(children[i], callback);\n      }\n    }\n    callback(rowNode);\n  }\n  depthFirstSearchEverything(rowNode, callback, traverseEverything) {\n    const childrenAfterGroup = rowNode.childrenAfterGroup;\n    if (childrenAfterGroup) {\n      for (let i = 0, len = childrenAfterGroup.length; i < len; ++i) {\n        const childNode = childrenAfterGroup[i];\n        if (childNode.childrenAfterGroup) {\n          this.depthFirstSearchEverything(childNode, callback, traverseEverything);\n        } else if (traverseEverything) {\n          callback(childNode);\n        }\n      }\n    }\n    callback(rowNode);\n  }\n  // traverseLeafNodes -> used when NOT doing changed path, ie traversing everything. the callback\n  // will be called for child nodes in addition to parent nodes.\n  forEachChangedNodeDepthFirst(callback, traverseLeafNodes = false, includeUnchangedNodes = false) {\n    if (this.active && !includeUnchangedNodes) {\n      this.depthFirstSearchChangedPath(this.pathRoot, callback);\n    } else {\n      this.depthFirstSearchEverything(this.pathRoot.rowNode, callback, traverseLeafNodes);\n    }\n  }\n  executeFromRootNode(callback) {\n    callback(this.pathRoot.rowNode);\n  }\n  createPathItems(rowNode) {\n    let pointer = rowNode;\n    let newEntryCount = 0;\n    while (!this.mapToItems[pointer.id]) {\n      const newEntry = {\n        rowNode: pointer,\n        children: null\n      };\n      this.mapToItems[pointer.id] = newEntry;\n      newEntryCount++;\n      pointer = pointer.parent;\n    }\n    return newEntryCount;\n  }\n  populateColumnsMap(rowNode, columns) {\n    if (!this.keepingColumns || !columns) {\n      return;\n    }\n    let pointer = rowNode;\n    while (pointer) {\n      if (!this.nodeIdsToColumns[pointer.id]) {\n        this.nodeIdsToColumns[pointer.id] = {};\n      }\n      columns.forEach(col => this.nodeIdsToColumns[pointer.id][col.getId()] = true);\n      pointer = pointer.parent;\n    }\n  }\n  linkPathItems(rowNode, newEntryCount) {\n    let pointer = rowNode;\n    for (let i = 0; i < newEntryCount; i++) {\n      const thisItem = this.mapToItems[pointer.id];\n      const parentItem = this.mapToItems[pointer.parent.id];\n      if (!parentItem.children) {\n        parentItem.children = [];\n      }\n      parentItem.children.push(thisItem);\n      pointer = pointer.parent;\n    }\n  }\n  // called by\n  // 1) change detection (provides cols) and\n  // 2) groupStage if doing transaction update (doesn't provide cols)\n  addParentNode(rowNode, columns) {\n    if (!rowNode || rowNode.isRowPinned()) {\n      return;\n    }\n    const newEntryCount = this.createPathItems(rowNode);\n    this.linkPathItems(rowNode, newEntryCount);\n    this.populateColumnsMap(rowNode, columns);\n  }\n  canSkip(rowNode) {\n    return this.active && !this.mapToItems[rowNode.id];\n  }\n  getValueColumnsForNode(rowNode, valueColumns) {\n    if (!this.keepingColumns) {\n      return valueColumns;\n    }\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    const result = valueColumns.filter(col => colsForThisNode[col.getId()]);\n    return result;\n  }\n  getNotValueColumnsForNode(rowNode, valueColumns) {\n    if (!this.keepingColumns) {\n      return null;\n    }\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    const result = valueColumns.filter(col => !colsForThisNode[col.getId()]);\n    return result;\n  }\n};\n\n// packages/ag-grid-community/src/dragAndDrop/rowDragFeature.ts\nvar RowDragFeature = class extends BeanStub {\n  constructor(eContainer) {\n    super();\n    this.eContainer = null;\n    this.lastDraggingEvent = null;\n    this.autoScrollService = null;\n    this.makeGroupThrottleTimer = null;\n    this.makeGroupThrottleTarget = null;\n    this.makeGroupThrottled = false;\n    this.makeGroupThrottleCallback = () => {\n      this.makeGroupThrottleTimer = null;\n      const event = this.lastDraggingEvent;\n      if (event) {\n        this.makeGroupThrottled = true;\n        this.doManagedDrag(event, false);\n        this.makeGroupExpanded(this.makeGroupThrottleTarget);\n      }\n    };\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    const {\n      rowModel,\n      gos,\n      ctrlsSvc\n    } = this.beans;\n    if (_isClientSideRowModel(gos, rowModel)) {\n      this.clientSideRowModel = rowModel;\n    }\n    ctrlsSvc.whenReady(this, p => {\n      const gridBodyCon = p.gridBodyCtrl;\n      let oldVScroll = 0;\n      const getVScroll2 = () => gridBodyCon.scrollFeature.getVScrollPosition().top;\n      this.autoScrollService = new AutoScrollService({\n        scrollContainer: gridBodyCon.eBodyViewport,\n        scrollAxis: \"y\",\n        getVerticalPosition: getVScroll2,\n        setVerticalPosition: position => gridBodyCon.scrollFeature.setVerticalScrollPosition(position),\n        onScrollCallback: () => {\n          const newVScroll = getVScroll2();\n          if (oldVScroll !== newVScroll) {\n            oldVScroll = newVScroll;\n            const lastDraggingEvent = this.lastDraggingEvent;\n            if (lastDraggingEvent) {\n              this.onDragging(lastDraggingEvent);\n            }\n          }\n        }\n      });\n    });\n  }\n  destroy() {\n    super.destroy();\n    this.eContainer = null;\n    this.lastDraggingEvent = null;\n    this.makeGroupThrottleClear();\n    const autoScrollService = this.autoScrollService;\n    if (autoScrollService) {\n      this.autoScrollService = null;\n      autoScrollService?.ensureCleared();\n    }\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  isInterestedIn(type) {\n    return type === 2 /* RowDrag */;\n  }\n  getIconName() {\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    if (managedDrag && this.shouldPreventRowMove()) {\n      return \"notAllowed\";\n    }\n    return \"move\";\n  }\n  shouldPreventRowMove() {\n    const {\n      rowGroupColsSvc,\n      filterManager,\n      sortSvc\n    } = this.beans;\n    const rowGroupCols = rowGroupColsSvc?.columns ?? [];\n    if (rowGroupCols.length) {\n      return true;\n    }\n    const isFilterPresent = filterManager?.isAnyFilterPresent();\n    if (isFilterPresent) {\n      return true;\n    }\n    const isSortActive = sortSvc?.isSortActive();\n    if (isSortActive) {\n      return true;\n    }\n    return false;\n  }\n  getRowNodes(draggingEvent) {\n    if (!this.isFromThisGrid(draggingEvent)) {\n      return draggingEvent.dragItem.rowNodes || [];\n    }\n    const currentNode = draggingEvent.dragItem.rowNode;\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\n    if (isRowDragMultiRow) {\n      const selectedNodes = [...(this.beans.selectionSvc?.getSelectedNodes() ?? [])].sort((a, b) => {\n        if (a.rowIndex == null || b.rowIndex == null) {\n          return 0;\n        }\n        return this.getRowIndexNumber(a) - this.getRowIndexNumber(b);\n      });\n      if (selectedNodes.indexOf(currentNode) !== -1) {\n        return selectedNodes;\n      }\n    }\n    return [currentNode];\n  }\n  onDragEnter(draggingEvent) {\n    draggingEvent.dragItem.rowNodes = this.getRowNodes(draggingEvent);\n    this.dispatchGridEvent(\"rowDragEnter\", draggingEvent);\n    this.getRowNodes(draggingEvent).forEach(rowNode => {\n      this.setRowNodeDragging(rowNode, true);\n    });\n    this.onEnterOrDragging(draggingEvent);\n  }\n  onDragging(draggingEvent) {\n    this.onEnterOrDragging(draggingEvent);\n  }\n  isFromThisGrid(draggingEvent) {\n    const {\n      dragSourceDomDataKey\n    } = draggingEvent.dragSource;\n    return dragSourceDomDataKey === this.gos.getDomDataKey();\n  }\n  onEnterOrDragging(draggingEvent) {\n    if (!this.autoScrollService) {\n      return;\n    }\n    this.dispatchGridEvent(\"rowDragMove\", draggingEvent);\n    this.lastDraggingEvent = draggingEvent;\n    if (this.gos.get(\"rowDragManaged\")) {\n      this.doManagedDrag(draggingEvent, true);\n    }\n    this.autoScrollService.check(draggingEvent.event);\n  }\n  doManagedDrag(draggingEvent, throttleMakeGroup) {\n    const {\n      dragAndDrop,\n      gos\n    } = this.beans;\n    const isFromThisGrid = this.isFromThisGrid(draggingEvent);\n    const managedDrag = gos.get(\"rowDragManaged\");\n    if (managedDrag && this.shouldPreventRowMove()) {\n      return;\n    }\n    if (gos.get(\"suppressMoveWhenRowDragging\") || !isFromThisGrid) {\n      if (dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\n        const rowsDrop = this.managedRowsDrop(draggingEvent, throttleMakeGroup);\n        const target = rowsDrop?.target;\n        const rowDropHighlightSvc = this.beans.rowDropHighlightSvc;\n        if (target && rowsDrop.rows.length) {\n          rowDropHighlightSvc.set(target, rowsDrop.position);\n        } else {\n          rowDropHighlightSvc.clear();\n        }\n      }\n    } else {\n      const rowsDrop = this.managedRowsDrop(draggingEvent, throttleMakeGroup);\n      if (rowsDrop) {\n        this.dropRows(rowsDrop);\n      }\n    }\n  }\n  getRowIndexNumber(rowNode) {\n    const rowIndexStr = rowNode.getRowIndexString();\n    return parseInt(_last(rowIndexStr.split(\"-\")), 10);\n  }\n  managedRowsDrop(draggingEvent, throttleMakeGroup) {\n    const {\n      rowNode,\n      rowNodes: rows\n    } = draggingEvent.dragItem;\n    const rowsLen = rows?.length;\n    const source = rowsLen && (rowNode ?? rows[0]);\n    if (!source) {\n      this.makeGroupThrottleClear();\n      return null;\n    }\n    const {\n      beans,\n      gos,\n      clientSideRowModel\n    } = this;\n    const rootNode = clientSideRowModel.rootNode;\n    const y = _getNormalisedMousePosition(beans, draggingEvent).y;\n    let targetRowIndex = clientSideRowModel.getRowIndexAtPixel(y);\n    let target = clientSideRowModel.getRow(targetRowIndex) ?? null;\n    const moved = source !== target;\n    let yDelta = target ? (y - target.rowTop - target.rowHeight / 2) / target.rowHeight || 0 : 1;\n    const sameGrid = this.isFromThisGrid(draggingEvent);\n    const groupingApproach = _getGroupingApproach(gos);\n    const canSetParent =\n    // We don't yet support drag and drop with grouping\n    groupingApproach !== \"group\" &&\n    // We don't yet support moving tree rows from a different grid in a structured way\n    sameGrid;\n    let newParent = null;\n    if (canSetParent && target?.footer) {\n      newParent = target.sibling ?? rootNode;\n      const found = getPrevOrNext(clientSideRowModel, -1, target) ?? getPrevOrNext(clientSideRowModel, 1, target);\n      yDelta = found && found.rowIndex > target.rowIndex ? -0.5 : 0.5;\n      target = found ?? null;\n    }\n    let above = yDelta < 0;\n    let targetInRows = false;\n    if (sameGrid && target) {\n      if (!moved) {\n        if (Math.abs(yDelta) <= 0.5) {\n          this.makeGroupThrottleClear();\n          return null;\n        }\n        targetInRows = true;\n      } else {\n        targetInRows = rows.indexOf(target) >= 0;\n        if (targetInRows) {\n          const newTarget = getRowsPrevOrNext(clientSideRowModel, targetRowIndex < source.rowIndex, rows);\n          if (newTarget?.parent === target.parent) {\n            target = newTarget;\n            targetRowIndex = target.rowIndex;\n          }\n        }\n      }\n      if (targetInRows || !canSetParent && Math.abs(targetRowIndex - source.rowIndex) === 1) {\n        above = targetRowIndex < source.rowIndex;\n      }\n    }\n    const makeGroupThrottleTarget = this.makeGroupThrottleTarget;\n    if (makeGroupThrottleTarget !== null && makeGroupThrottleTarget !== target) {\n      this.makeGroupThrottleClear();\n    }\n    if (target?.expanded && target.childrenAfterSort?.length) {\n      this.makeGroupThrottled = true;\n      this.makeGroupThrottleTarget = target;\n    }\n    if (newParent === null && canSetParent) {\n      if (!target || yDelta >= 0.5 && target.rowIndex === beans.pageBounds.getLastRow()) {\n        newParent = rootNode;\n      } else if (this.targetShouldBeParent(target, yDelta, targetInRows, rows)) {\n        if (this.makeGroupThrottled) {\n          newParent = target;\n        }\n        if (throttleMakeGroup && (newParent === null || !target.expanded)) {\n          this.makeGroupThrottleTarget = target;\n          this.makeGroupThrottleStart();\n        }\n      }\n      newParent ?? (newParent = target?.parent ?? rootNode);\n    }\n    let inside = false;\n    if (newParent !== null) {\n      if (newParent === target && newParent !== rootNode) {\n        inside = true;\n        const firstRow = newParent.expanded ? getPrevOrNext(clientSideRowModel, 1, target) : null;\n        if (firstRow?.parent === newParent) {\n          target = firstRow;\n          inside = false;\n          above = true;\n        }\n      }\n      if (target && !inside) {\n        let current = target;\n        while (current && current !== rootNode && current !== newParent) {\n          target = current;\n          current = current.parent;\n        }\n      }\n      if (rowsHaveSameParent(rows, newParent)) {\n        newParent = null;\n      }\n    }\n    if (!newParent && targetInRows && (canSetParent || source === target)) {\n      return null;\n    }\n    const position = inside ? \"inside\" : above ? \"above\" : \"below\";\n    const result = {\n      api: this.beans.gridApi,\n      context: this.beans.gridOptions.context,\n      draggingEvent,\n      sameGrid,\n      position,\n      source,\n      target,\n      newParent,\n      rows\n    };\n    let customPosition = false;\n    const isRowValidDropPosition = gos.get(\"isRowValidDropPosition\");\n    if (isRowValidDropPosition) {\n      const canDropResult = isRowValidDropPosition(result);\n      if (!canDropResult) {\n        result.rows = _EmptyArray;\n      } else if (typeof canDropResult === \"object\") {\n        if (canDropResult.rows !== void 0) {\n          result.rows = canDropResult.rows ?? _EmptyArray;\n        }\n        if (canDropResult.newParent !== void 0) {\n          result.newParent = canDropResult.newParent;\n        }\n        if (canDropResult.target !== void 0) {\n          result.target = canDropResult.target;\n        }\n        if (canDropResult.position) {\n          customPosition = true;\n          result.position = canDropResult.position;\n        }\n      }\n    }\n    if ((!result.newParent || !result.rows.length) && !customPosition) {\n      result.position = above ? \"above\" : \"below\";\n    }\n    return result;\n  }\n  makeGroupThrottleStart() {\n    if (this.makeGroupThrottleTimer === null) {\n      this.makeGroupThrottleTimer = window.setTimeout(this.makeGroupThrottleCallback, this.gos.get(\"rowDragInsertDelay\"));\n    }\n  }\n  makeGroupExpanded(target) {\n    if (target && !target.expanded && target.childrenAfterSort?.length && target.isExpandable()) {\n      target.setExpanded(true, this.lastDraggingEvent?.event, true);\n    }\n  }\n  makeGroupThrottleClear() {\n    this.makeGroupThrottled = false;\n    this.makeGroupThrottleTarget = null;\n    const timer = this.makeGroupThrottleTimer;\n    if (timer !== null) {\n      this.makeGroupThrottleTimer = null;\n      clearTimeout(timer);\n    }\n  }\n  targetShouldBeParent(target, yDelta, targetInRows, rows) {\n    const targetRowIndex = target?.rowIndex;\n    if (targetInRows || targetRowIndex === null) {\n      return false;\n    }\n    const INSIDE_THRESHOLD = 0.25;\n    if (yDelta < -0.5 + INSIDE_THRESHOLD) {\n      return false;\n    }\n    if (yDelta < 0.5 - INSIDE_THRESHOLD) {\n      return true;\n    }\n    let nextRow;\n    let nextRowIndex = targetRowIndex + 1;\n    const clientSideRowModel = this.clientSideRowModel;\n    do {\n      nextRow = clientSideRowModel.getRow(nextRowIndex++);\n    } while (nextRow && nextRow.footer);\n    const childrenAfterGroup = target.childrenAfterGroup;\n    if (nextRow && nextRow.parent === target && childrenAfterGroup?.length) {\n      const rowsSet = new Set(rows);\n      for (const child of childrenAfterGroup) {\n        if (child.rowIndex !== null && !rowsSet.has(child)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  addRowDropZone(params) {\n    if (!params.getContainer()) {\n      _warn(55);\n      return;\n    }\n    const dragAndDrop = this.beans.dragAndDrop;\n    if (dragAndDrop.findExternalZone(params)) {\n      _warn(56);\n      return;\n    }\n    let processedParams = {\n      getContainer: params.getContainer\n    };\n    if (params.fromGrid) {\n      processedParams = params;\n    } else {\n      if (params.onDragEnter) {\n        processedParams.onDragEnter = e => {\n          params.onDragEnter(this.draggingToRowDragEvent(\"rowDragEnter\", e));\n        };\n      }\n      if (params.onDragLeave) {\n        processedParams.onDragLeave = e => {\n          params.onDragLeave(this.draggingToRowDragEvent(\"rowDragLeave\", e));\n        };\n      }\n      if (params.onDragging) {\n        processedParams.onDragging = e => {\n          params.onDragging(this.draggingToRowDragEvent(\"rowDragMove\", e));\n        };\n      }\n      if (params.onDragStop) {\n        processedParams.onDragStop = e => {\n          params.onDragStop(this.draggingToRowDragEvent(\"rowDragEnd\", e));\n        };\n      }\n      if (params.onDragCancel) {\n        processedParams.onDragCancel = e => {\n          params.onDragCancel(this.draggingToRowDragEvent(\"rowDragCancel\", e));\n        };\n      }\n    }\n    const dropTarget = {\n      isInterestedIn: type => type === 2 /* RowDrag */,\n      getIconName: () => \"move\",\n      external: true,\n      ...processedParams\n    };\n    dragAndDrop.addDropTarget(dropTarget);\n    this.addDestroyFunc(() => dragAndDrop.removeDropTarget(dropTarget));\n  }\n  getRowDropZone(events) {\n    const getContainer = this.getContainer.bind(this);\n    const onDragEnter = this.onDragEnter.bind(this);\n    const onDragLeave = this.onDragLeave.bind(this);\n    const onDragging = this.onDragging.bind(this);\n    const onDragStop = this.onDragStop.bind(this);\n    const onDragCancel = this.onDragCancel.bind(this);\n    let params;\n    if (!events) {\n      params = {\n        getContainer,\n        onDragEnter,\n        onDragLeave,\n        onDragging,\n        onDragStop,\n        onDragCancel,\n        /* @private */\n        fromGrid: true\n      };\n    } else {\n      params = {\n        getContainer,\n        onDragEnter: events.onDragEnter ? e => {\n          onDragEnter(e);\n          events.onDragEnter(this.draggingToRowDragEvent(\"rowDragEnter\", e));\n        } : onDragEnter,\n        onDragLeave: events.onDragLeave ? e => {\n          onDragLeave(e);\n          events.onDragLeave(this.draggingToRowDragEvent(\"rowDragLeave\", e));\n        } : onDragLeave,\n        onDragging: events.onDragging ? e => {\n          onDragging(e);\n          events.onDragging(this.draggingToRowDragEvent(\"rowDragMove\", e));\n        } : onDragging,\n        onDragStop: events.onDragStop ? e => {\n          onDragStop(e);\n          events.onDragStop(this.draggingToRowDragEvent(\"rowDragEnd\", e));\n        } : onDragStop,\n        onDragCancel: events.onDragCancel ? e => {\n          onDragCancel(e);\n          events.onDragCancel(this.draggingToRowDragEvent(\"rowDragCancel\", e));\n        } : onDragCancel,\n        fromGrid: true\n      };\n    }\n    return params;\n  }\n  draggingToRowDragEvent(type, draggingEvent) {\n    const beans = this.beans;\n    const {\n      pageBounds,\n      rowModel,\n      gos\n    } = beans;\n    const y = _getNormalisedMousePosition(this.beans, draggingEvent).y;\n    const mouseIsPastLastRow = y > pageBounds.getCurrentPagePixelRange().pageLastPixel;\n    let overIndex = -1;\n    let overNode;\n    if (!mouseIsPastLastRow) {\n      overIndex = rowModel.getRowIndexAtPixel(y);\n      overNode = rowModel.getRow(overIndex);\n    }\n    const event = _addGridCommonParams(gos, {\n      type,\n      event: draggingEvent.event,\n      node: draggingEvent.dragItem.rowNode,\n      nodes: draggingEvent.dragItem.rowNodes,\n      overIndex,\n      overNode,\n      y,\n      vDirection: draggingEvent.vDirection\n    });\n    return event;\n  }\n  dispatchGridEvent(type, draggingEvent) {\n    const event = this.draggingToRowDragEvent(type, draggingEvent);\n    this.eventSvc.dispatchEvent(event);\n  }\n  onDragLeave(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragLeave\", draggingEvent);\n    this.stopDragging(draggingEvent);\n    if (this.gos.get(\"rowDragManaged\")) {\n      this.beans.rowDropHighlightSvc.clear();\n    }\n    this.makeGroupThrottleClear();\n  }\n  onDragStop(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragEnd\", draggingEvent);\n    this.stopDragging(draggingEvent);\n    const {\n      dragAndDrop,\n      gos\n    } = this.beans;\n    if (gos.get(\"rowDragManaged\") && (gos.get(\"suppressMoveWhenRowDragging\") || !this.isFromThisGrid(draggingEvent)) && dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\n      const rowsDrop = this.managedRowsDrop(draggingEvent, false);\n      if (rowsDrop) {\n        this.dropRows(rowsDrop);\n      }\n      this.beans.rowDropHighlightSvc.clear();\n    }\n    this.makeGroupThrottleClear();\n  }\n  onDragCancel(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragCancel\", draggingEvent);\n    this.stopDragging(draggingEvent);\n    const {\n      dragAndDrop,\n      gos\n    } = this.beans;\n    if (gos.get(\"rowDragManaged\") && (gos.get(\"suppressMoveWhenRowDragging\") || !this.isFromThisGrid(draggingEvent)) && dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\n      this.beans.rowDropHighlightSvc.clear();\n    }\n    this.makeGroupThrottleClear();\n  }\n  stopDragging(draggingEvent) {\n    this.autoScrollService?.ensureCleared();\n    this.getRowNodes(draggingEvent).forEach(rowNode => {\n      this.setRowNodeDragging(rowNode, false);\n    });\n  }\n  setRowNodeDragging(rowNode, dragging) {\n    if (rowNode.dragging !== dragging) {\n      rowNode.dragging = dragging;\n      rowNode.dispatchRowEvent(\"draggingChanged\");\n    }\n  }\n  /** Drag and drop. Returns false if at least a row was moved, otherwise true */\n  dropRows(rowsDrop) {\n    return rowsDrop.sameGrid ? this.moveRows(rowsDrop) : this.addRows(rowsDrop);\n  }\n  addRows({\n    position,\n    target,\n    rows\n  }) {\n    const getRowIdFunc = _getRowIdCallback(this.gos);\n    const clientSideRowModel = this.clientSideRowModel;\n    const add = rows.filter(({\n      data,\n      rowPinned\n    }) => !clientSideRowModel.getRowNode(getRowIdFunc?.({\n      data,\n      level: 0,\n      rowPinned\n    }) ?? data.id)).map(({\n      data\n    }) => data);\n    if (add.length === 0) {\n      return false;\n    }\n    const addIndex = target ? getLeafSourceRowIndex(target) + (position === \"above\" ? 0 : 1) : void 0;\n    clientSideRowModel.updateRowData({\n      add,\n      addIndex\n    });\n    return true;\n  }\n  refreshModelAfterDrop() {\n    this.clientSideRowModel.refreshModel({\n      step: \"group\",\n      keepRenderedRows: true,\n      animate: !this.gos.get(\"suppressAnimationFrame\"),\n      changedPath: new ChangedPath(false, this.clientSideRowModel.rootNode),\n      rowNodesOrderChanged: true\n    });\n  }\n  moveRows({\n    position,\n    target,\n    rows,\n    newParent\n  }) {\n    let changed = false;\n    const clientSideRowModel = this.clientSideRowModel;\n    const leafs = /* @__PURE__ */new Set();\n    for (const row of rows) {\n      if (row.footer || row.rowTop === null && row !== clientSideRowModel.getRowNode(row.id)) {\n        continue;\n      }\n      if (newParent && row.parent !== newParent) {\n        if (wouldFormCycle(row, newParent)) {\n          continue;\n        }\n        row.treeParent = newParent;\n        changed = true;\n      }\n      const leafRow = getLeafRow(row);\n      if (leafRow) {\n        leafs.add(leafRow);\n      }\n    }\n    if (!changed && leafs.size === 0) {\n      return false;\n    }\n    const focusSvc = this.beans.focusSvc;\n    const cellPosition = focusSvc.getFocusedCell();\n    const cellCtrl = cellPosition && _getCellByPosition(this.beans, cellPosition);\n    if (leafs.size && this.reorderLeafChildren(leafs, ...this.getMoveRowsBounds(leafs, target, position === \"above\"))) {\n      changed = true;\n    }\n    if (!changed) {\n      return false;\n    }\n    this.refreshModelAfterDrop();\n    if (cellCtrl) {\n      cellCtrl.focusCell();\n    } else {\n      focusSvc.clearFocusedCell();\n    }\n    return true;\n  }\n  /** For reorderLeafChildren, returns min index of the rows to move, the target index and the max index of the rows to move. */\n  getMoveRowsBounds(leafs, target, above) {\n    const totalRows = this.clientSideRowModel.rootNode?.allLeafChildren.length ?? 0;\n    let targetPositionIdx = getLeafSourceRowIndex(target);\n    if (targetPositionIdx < 0 || targetPositionIdx >= totalRows) {\n      targetPositionIdx = totalRows;\n    } else if (!above) {\n      ++targetPositionIdx;\n    }\n    let firstAffectedLeafIdx = targetPositionIdx;\n    let lastAffectedLeafIndex = Math.min(targetPositionIdx, totalRows - 1);\n    for (const row of leafs) {\n      const sourceRowIndex = row.sourceRowIndex;\n      if (sourceRowIndex < firstAffectedLeafIdx) firstAffectedLeafIdx = sourceRowIndex;\n      if (sourceRowIndex > lastAffectedLeafIndex) lastAffectedLeafIndex = sourceRowIndex;\n    }\n    return [firstAffectedLeafIdx, targetPositionIdx, lastAffectedLeafIndex];\n  }\n  /** Reorders the children of the root node, so that the rows to move are in the correct order.\n   * @param leafs The valid set of rows to move, as returned by getValidRowsToMove\n   * @param firstAffectedLeafIdx The first index of the rows to move\n   * @param targetPositionIdx The target index, where the rows will be moved\n   * @param lastAffectedLeafIndex The last index of the rows to move\n   * @returns True if the order of the rows changed, false otherwise\n   */\n  reorderLeafChildren(leafs, firstAffectedLeafIdx, targetPositionIdx, lastAffectedLeafIndex) {\n    let orderChanged = false;\n    const allLeafChildren = this.clientSideRowModel.rootNode?.allLeafChildren;\n    if (!leafs.size || !allLeafChildren) {\n      return false;\n    }\n    let writeIdxLeft = firstAffectedLeafIdx;\n    for (let readIdx = firstAffectedLeafIdx; readIdx < targetPositionIdx; ++readIdx) {\n      const row = allLeafChildren[readIdx];\n      if (!leafs.has(row)) {\n        if (row.sourceRowIndex !== writeIdxLeft) {\n          row.sourceRowIndex = writeIdxLeft;\n          allLeafChildren[writeIdxLeft] = row;\n          orderChanged = true;\n        }\n        ++writeIdxLeft;\n      }\n    }\n    let writeIdxRight = lastAffectedLeafIndex;\n    for (let readIdx = lastAffectedLeafIndex; readIdx >= targetPositionIdx; --readIdx) {\n      const row = allLeafChildren[readIdx];\n      if (!leafs.has(row)) {\n        if (row.sourceRowIndex !== writeIdxRight) {\n          row.sourceRowIndex = writeIdxRight;\n          allLeafChildren[writeIdxRight] = row;\n          orderChanged = true;\n        }\n        --writeIdxRight;\n      }\n    }\n    for (const row of leafs) {\n      if (row.sourceRowIndex !== writeIdxLeft) {\n        row.sourceRowIndex = writeIdxLeft;\n        allLeafChildren[writeIdxLeft] = row;\n        orderChanged = true;\n      }\n      ++writeIdxLeft;\n    }\n    return orderChanged;\n  }\n};\nvar getRowsPrevOrNext = (clientSideRowModel, above, rows) => {\n  return above ? getPrevOrNext(clientSideRowModel, -1, rows[0]) : getPrevOrNext(clientSideRowModel, 1, _last(rows));\n};\nvar getPrevOrNext = (clientSideRowModel, increment, initialRow) => {\n  if (initialRow) {\n    const rowCount = clientSideRowModel.getRowCount();\n    let rowIndex = initialRow.rowIndex + increment;\n    while (rowIndex >= 0 && rowIndex < rowCount) {\n      const row = clientSideRowModel.getRow(rowIndex);\n      if (!row || !row.footer) {\n        return row;\n      }\n      rowIndex += increment;\n    }\n  }\n  return void 0;\n};\nvar wouldFormCycle = (row, newParent) => {\n  let parent = newParent;\n  while (parent) {\n    if (parent === row) {\n      return true;\n    }\n    parent = parent.parent;\n  }\n  return false;\n};\nvar rowsHaveSameParent = (rows, newParent) => {\n  for (let i = 0, len = rows.length; i < len; ++i) {\n    if (rows[i].parent !== newParent) {\n      return false;\n    }\n  }\n  return true;\n};\nvar getLeafSourceRowIndex = row => {\n  const leaf = getLeafRow(row);\n  return leaf !== void 0 ? leaf.sourceRowIndex : -1;\n};\nvar getLeafRow = row => {\n  while (row) {\n    if (row.sourceRowIndex >= 0) {\n      return row;\n    }\n    const childrenAfterGroup = row.childrenAfterGroup;\n    if (!childrenAfterGroup?.length) {\n      return void 0;\n    }\n    row = childrenAfterGroup[0];\n  }\n};\n\n// packages/ag-grid-community/src/dragAndDrop/rowDragService.ts\nvar RowDragService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowDragSvc\";\n  }\n  setupRowDrag(element, ctrl) {\n    const rowDragFeature = ctrl.createManagedBean(new RowDragFeature(element));\n    const dragAndDrop = this.beans.dragAndDrop;\n    dragAndDrop.addDropTarget(rowDragFeature);\n    ctrl.addDestroyFunc(() => dragAndDrop.removeDropTarget(rowDragFeature));\n    this.rowDragFeature = rowDragFeature;\n  }\n  createRowDragComp(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange) {\n    return new RowDragComp(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange);\n  }\n  createRowDragCompForRow(rowNode, element) {\n    if (_isCellSelectionEnabled(this.gos)) {\n      return void 0;\n    }\n    const translate = this.getLocaleTextFunc();\n    return this.createRowDragComp(() => `1 ${translate(\"rowDragRow\", \"row\")}`, rowNode, void 0, element, void 0, true);\n  }\n  createRowDragCompForCell(rowNode, column, cellValueFn, element, dragStartPixels, suppressVisibilityChange) {\n    const gos = this.gos;\n    if (gos.get(\"rowDragManaged\")) {\n      if (!_isClientSideRowModel(gos) || gos.get(\"pagination\")) {\n        return void 0;\n      }\n    }\n    const rowDragComp = this.createRowDragComp(cellValueFn, rowNode, column, element, dragStartPixels, suppressVisibilityChange);\n    return rowDragComp;\n  }\n};\n\n// packages/ag-grid-community/src/dragAndDrop/rowDropHighlightService.ts\nvar RowDropHighlightService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowDropHighlightSvc\";\n    this.uiLevel = 0;\n    this.row = null;\n    this.position = \"none\";\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      modelUpdated: this.onModelUpdated.bind(this)\n    });\n  }\n  onModelUpdated() {\n    const row = this.row;\n    if (!row || row.rowIndex === null || this.position === \"none\") {\n      this.clear();\n    } else {\n      this.set(row, this.position);\n    }\n  }\n  destroy() {\n    this.clear();\n    super.destroy();\n  }\n  clear() {\n    const last = this.row;\n    if (last) {\n      this.uiLevel = 0;\n      this.position = \"none\";\n      this.row = null;\n      last.dispatchRowEvent(\"rowHighlightChanged\");\n    }\n  }\n  set(row, dropIndicatorPosition) {\n    const nodeChanged = row !== this.row;\n    const uiLevel = row.uiLevel;\n    const highlightChanged = dropIndicatorPosition !== this.position;\n    const uiLevelChanged = uiLevel !== this.uiLevel;\n    if (nodeChanged || highlightChanged || uiLevelChanged) {\n      if (nodeChanged) {\n        this.clear();\n      }\n      this.uiLevel = uiLevel;\n      this.position = dropIndicatorPosition;\n      this.row = row;\n      row.dispatchRowEvent(\"rowHighlightChanged\");\n    }\n  }\n};\n\n// packages/ag-grid-community/src/dragAndDrop/dragModule.ts\nvar DragModule = {\n  moduleName: \"Drag\",\n  version: VERSION,\n  beans: [DragService]\n};\nvar DragAndDropModule = {\n  moduleName: \"DragAndDrop\",\n  version: VERSION,\n  dynamicBeans: {\n    dndSourceComp: DndSourceComp\n  },\n  icons: {\n    // drag handle used to pick up draggable rows\n    rowDrag: \"grip\"\n  }\n};\nvar SharedDragAndDropModule = {\n  moduleName: \"SharedDragAndDrop\",\n  version: VERSION,\n  beans: [DragAndDropService],\n  dependsOn: [DragModule],\n  userComponents: {\n    agDragAndDropImage: DragAndDropImageComponent2\n  },\n  icons: {\n    // shown on drag and drop image component icon while dragging column to the side of the grid to pin\n    columnMovePin: \"pin\",\n    // shown on drag and drop image component icon while dragging over part of the page that is not a drop zone\n    columnMoveHide: \"eye-slash\",\n    // shown on drag and drop image component icon while dragging columns to reorder\n    columnMoveMove: \"arrows\",\n    // animating icon shown when dragging a column to the right of the grid causes horizontal scrolling\n    columnMoveLeft: \"left\",\n    // animating icon shown when dragging a column to the left of the grid causes horizontal scrolling\n    columnMoveRight: \"right\",\n    // shown on drag and drop image component icon while dragging over Row Groups drop zone\n    columnMoveGroup: \"group\",\n    // shown on drag and drop image component icon while dragging over Values drop zone\n    columnMoveValue: \"aggregation\",\n    // shown on drag and drop image component icon while dragging over pivot drop zone\n    columnMovePivot: \"pivot\",\n    // shown on drag and drop image component icon while dragging over drop zone that doesn't support it, e.g.\n    // string column over aggregation drop zone\n    dropNotAllowed: \"not-allowed\",\n    // drag handle used to pick up draggable rows\n    rowDrag: \"grip\"\n  }\n};\nvar RowDragModule = {\n  moduleName: \"RowDrag\",\n  version: VERSION,\n  beans: [RowDropHighlightService, RowDragService],\n  apiFunctions: {\n    addRowDropZone,\n    removeRowDropZone,\n    getRowDropZoneParams,\n    getRowDropPositionIndicator,\n    setRowDropPositionIndicator\n  },\n  dependsOn: [SharedDragAndDropModule]\n};\nvar HorizontalResizeModule = {\n  moduleName: \"HorizontalResize\",\n  version: VERSION,\n  beans: [HorizontalResizeService],\n  dependsOn: [DragModule]\n};\n\n// packages/ag-grid-community/src/columnMove/column-moving.css-GENERATED.ts\nvar columnMovingCSS = /*css*/\n`:where(.ag-ltr) :where(.ag-column-moving){.ag-cell,.ag-header-cell,.ag-spanned-cell-wrapper{transition:left .2s}.ag-header-group-cell{transition:left .2s,width .2s}}:where(.ag-rtl) :where(.ag-column-moving){.ag-cell,.ag-header-cell,.ag-spanned-cell-wrapper{transition:right .2s}.ag-header-group-cell{transition:right .2s,width .2s}}`;\n\n// packages/ag-grid-community/src/columnMove/columnAnimationService.ts\nvar ColumnAnimationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colAnimation\";\n    this.executeNextFuncs = [];\n    this.executeLaterFuncs = [];\n    this.active = false;\n    // activeNext starts with active but it is reset earlier after the nextFuncs are cleared\n    // to prevent calls made to executeNextVMTurn from queuing functions after executeNextFuncs has already been flushed,\n    this.activeNext = false;\n    this.suppressAnimation = false;\n    this.animationThreadCount = 0;\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, p => this.gridBodyCtrl = p.gridBodyCtrl);\n  }\n  isActive() {\n    return this.active && !this.suppressAnimation;\n  }\n  setSuppressAnimation(suppress) {\n    this.suppressAnimation = suppress;\n  }\n  start() {\n    if (this.active) {\n      return;\n    }\n    const {\n      gos\n    } = this;\n    if (gos.get(\"suppressColumnMoveAnimation\")) {\n      return;\n    }\n    if (gos.get(\"enableRtl\")) {\n      return;\n    }\n    this.ensureAnimationCssClassPresent();\n    this.active = true;\n    this.activeNext = true;\n  }\n  finish() {\n    if (!this.active) {\n      return;\n    }\n    this.flush(() => this.activeNext = false, () => this.active = false);\n  }\n  executeNextVMTurn(func) {\n    if (this.activeNext) {\n      this.executeNextFuncs.push(func);\n    } else {\n      func();\n    }\n  }\n  executeLaterVMTurn(func) {\n    if (this.active) {\n      this.executeLaterFuncs.push(func);\n    } else {\n      func();\n    }\n  }\n  ensureAnimationCssClassPresent() {\n    this.animationThreadCount++;\n    const animationThreadCountCopy = this.animationThreadCount;\n    const {\n      gridBodyCtrl\n    } = this;\n    gridBodyCtrl.setColumnMovingCss(true);\n    this.executeLaterFuncs.push(() => {\n      if (this.animationThreadCount === animationThreadCountCopy) {\n        gridBodyCtrl.setColumnMovingCss(false);\n      }\n    });\n  }\n  flush(callbackNext, callbackLater) {\n    const {\n      executeNextFuncs,\n      executeLaterFuncs\n    } = this;\n    if (executeNextFuncs.length === 0 && executeLaterFuncs.length === 0) {\n      callbackNext();\n      callbackLater();\n      return;\n    }\n    const runFuncs = queue => {\n      while (queue.length) {\n        const func = queue.pop();\n        if (func) {\n          func();\n        }\n      }\n    };\n    this.beans.frameworkOverrides.wrapIncoming(() => {\n      window.setTimeout(() => {\n        callbackNext();\n        runFuncs(executeNextFuncs);\n      }, 0);\n      window.setTimeout(() => {\n        callbackLater();\n        runFuncs(executeLaterFuncs);\n      }, 200);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/columnMove/columnMoveApi.ts\nfunction moveColumnByIndex(beans, fromIndex, toIndex) {\n  beans.colMoves?.moveColumnByIndex(fromIndex, toIndex, \"api\");\n}\nfunction moveColumns(beans, columnsToMoveKeys, toIndex) {\n  beans.colMoves?.moveColumns(columnsToMoveKeys, toIndex, \"api\");\n}\n\n// packages/ag-grid-community/src/columnMove/columnDrag/bodyDropPivotTarget.ts\nvar BodyDropPivotTarget = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.pinned = pinned;\n    this.columnsToAggregate = [];\n    this.columnsToGroup = [];\n    this.columnsToPivot = [];\n  }\n  /** Callback for when drag enters */\n  onDragEnter(draggingEvent) {\n    this.clearColumnsList();\n    if (this.gos.get(\"functionsReadOnly\")) {\n      return;\n    }\n    const dragColumns = draggingEvent.dragItem.columns;\n    if (!dragColumns) {\n      return;\n    }\n    dragColumns.forEach(column => {\n      if (!column.isPrimary()) {\n        return;\n      }\n      if (column.isAnyFunctionActive()) {\n        return;\n      }\n      if (column.isAllowValue()) {\n        this.columnsToAggregate.push(column);\n      } else if (column.isAllowRowGroup()) {\n        this.columnsToGroup.push(column);\n      } else if (column.isAllowPivot()) {\n        this.columnsToPivot.push(column);\n      }\n    });\n  }\n  getIconName() {\n    const totalColumns = this.columnsToAggregate.length + this.columnsToGroup.length + this.columnsToPivot.length;\n    if (totalColumns > 0) {\n      return this.pinned ? \"pinned\" : \"move\";\n    }\n    return null;\n  }\n  /** Callback for when drag leaves */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragLeave(draggingEvent) {\n    this.clearColumnsList();\n  }\n  clearColumnsList() {\n    this.columnsToAggregate.length = 0;\n    this.columnsToGroup.length = 0;\n    this.columnsToPivot.length = 0;\n  }\n  /** Callback for when dragging */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragging(draggingEvent) {}\n  /** Callback for when drag stops */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragStop(draggingEvent) {\n    const {\n      valueColsSvc,\n      rowGroupColsSvc,\n      pivotColsSvc\n    } = this.beans;\n    if (this.columnsToAggregate.length > 0) {\n      valueColsSvc?.addColumns(this.columnsToAggregate, \"toolPanelDragAndDrop\");\n    }\n    if (this.columnsToGroup.length > 0) {\n      rowGroupColsSvc?.addColumns(this.columnsToGroup, \"toolPanelDragAndDrop\");\n    }\n    if (this.columnsToPivot.length > 0) {\n      pivotColsSvc?.addColumns(this.columnsToPivot, \"toolPanelDragAndDrop\");\n    }\n  }\n  onDragCancel() {\n    this.clearColumnsList();\n  }\n};\n\n// packages/ag-grid-community/src/columnMove/internalColumnMoveUtils.ts\nfunction sortColsLikeCols(colsList, cols) {\n  if (!cols || cols.length <= 1) {\n    return;\n  }\n  const notAllColsPresent = cols.filter(c => colsList.indexOf(c) < 0).length > 0;\n  if (notAllColsPresent) {\n    return;\n  }\n  cols.sort((a, b) => {\n    const indexA = colsList.indexOf(a);\n    const indexB = colsList.indexOf(b);\n    return indexA - indexB;\n  });\n}\nfunction getColsToMove(allMovingColumns) {\n  const newCols = [...allMovingColumns];\n  allMovingColumns.forEach(col => {\n    let movingGroup = null;\n    let parent = col.getParent();\n    while (parent != null && parent.getDisplayedLeafColumns().length === 1) {\n      movingGroup = parent;\n      parent = parent.getParent();\n    }\n    if (movingGroup != null) {\n      const isMarryChildren = !!movingGroup.getColGroupDef()?.marryChildren;\n      const columnsToMove = isMarryChildren ?\n      // when marry children is true, we also have to move hidden\n      // columns within the group, so grab them from the `providedColumnGroup`\n      movingGroup.getProvidedColumnGroup().getLeafColumns() : movingGroup.getLeafColumns();\n      columnsToMove.forEach(newCol => {\n        if (!newCols.includes(newCol)) {\n          newCols.push(newCol);\n        }\n      });\n    }\n  });\n  return newCols;\n}\nfunction getLowestFragMove(validMoves, allMovingColumnsOrdered, colMoves, visibleCols) {\n  const displayedCols = visibleCols.allCols;\n  let lowestFragMove = null;\n  let targetOrder = null;\n  for (let i = 0; i < validMoves.length; i++) {\n    const move = validMoves[i];\n    const order = colMoves.getProposedColumnOrder(allMovingColumnsOrdered, move);\n    if (!colMoves.doesOrderPassRules(order)) {\n      continue;\n    }\n    const displayedOrder = order.filter(col => displayedCols.includes(col));\n    if (targetOrder === null) {\n      targetOrder = displayedOrder;\n    } else if (!_areEqual(displayedOrder, targetOrder)) {\n      break;\n    }\n    const fragCount = groupFragCount(order);\n    if (lowestFragMove === null || fragCount < lowestFragMove.fragCount) {\n      lowestFragMove = {\n        move,\n        fragCount\n      };\n    }\n  }\n  return lowestFragMove;\n}\nfunction getBestColumnMoveIndexFromXPosition(params) {\n  const {\n    isFromHeader,\n    fromLeft,\n    xPosition,\n    fromEnter,\n    fakeEvent,\n    pinned,\n    gos,\n    colModel,\n    colMoves,\n    visibleCols\n  } = params;\n  let {\n    allMovingColumns\n  } = params;\n  if (isFromHeader) {\n    allMovingColumns = getColsToMove(allMovingColumns);\n  }\n  const allMovingColumnsOrdered = allMovingColumns.slice();\n  sortColsLikeCols(colModel.getCols(), allMovingColumnsOrdered);\n  const validMoves = calculateValidMoves({\n    movingCols: allMovingColumnsOrdered,\n    draggingRight: fromLeft,\n    xPosition,\n    pinned,\n    gos,\n    colModel,\n    visibleCols\n  });\n  const oldIndex = calculateOldIndex(allMovingColumnsOrdered, colModel);\n  if (validMoves.length === 0) {\n    return;\n  }\n  const firstValidMove = validMoves[0];\n  const constrainDirection = oldIndex !== null && (isFromHeader || !fromEnter);\n  if (constrainDirection && !fakeEvent) {\n    if (!fromLeft && firstValidMove >= oldIndex) {\n      return;\n    }\n    if (fromLeft && firstValidMove <= oldIndex) {\n      return;\n    }\n  }\n  const lowestFragMove = getLowestFragMove(validMoves, allMovingColumnsOrdered, colMoves, visibleCols);\n  if (!lowestFragMove) {\n    return;\n  }\n  const toIndex = lowestFragMove.move;\n  if (toIndex > colModel.getCols().length - allMovingColumnsOrdered.length) {\n    return;\n  }\n  return {\n    columns: allMovingColumnsOrdered,\n    toIndex\n  };\n}\nfunction attemptMoveColumns(params) {\n  const {\n    columns,\n    toIndex\n  } = getBestColumnMoveIndexFromXPosition(params) || {};\n  const {\n    finished,\n    colMoves\n  } = params;\n  if (!columns || toIndex == null) {\n    return null;\n  }\n  colMoves.moveColumns(columns, toIndex, \"uiColumnMoved\", finished);\n  return finished ? null : {\n    columns,\n    toIndex\n  };\n}\nfunction calculateOldIndex(movingCols, colModel) {\n  const gridCols = colModel.getCols();\n  const indexes = movingCols.map(col => gridCols.indexOf(col)).sort((a, b) => a - b);\n  const firstIndex = indexes[0];\n  const lastIndex = _last(indexes);\n  const spread = lastIndex - firstIndex;\n  const gapsExist = spread !== indexes.length - 1;\n  return gapsExist ? null : firstIndex;\n}\nfunction groupFragCount(columns) {\n  function parents(col) {\n    const result = [];\n    let parent = col.getOriginalParent();\n    while (parent != null) {\n      result.push(parent);\n      parent = parent.getOriginalParent();\n    }\n    return result;\n  }\n  let count = 0;\n  for (let i = 0; i < columns.length - 1; i++) {\n    let a = parents(columns[i]);\n    let b = parents(columns[i + 1]);\n    [a, b] = a.length > b.length ? [a, b] : [b, a];\n    a.forEach(parent => {\n      if (b.indexOf(parent) === -1) {\n        count++;\n      }\n    });\n  }\n  return count;\n}\nfunction getDisplayedColumns(visibleCols, type) {\n  switch (type) {\n    case \"left\":\n      return visibleCols.leftCols;\n    case \"right\":\n      return visibleCols.rightCols;\n    default:\n      return visibleCols.centerCols;\n  }\n}\nfunction calculateValidMoves(params) {\n  const {\n    movingCols,\n    draggingRight,\n    xPosition,\n    pinned,\n    gos,\n    colModel,\n    visibleCols\n  } = params;\n  const isMoveBlocked = gos.get(\"suppressMovableColumns\") || movingCols.some(col => col.getColDef().suppressMovable);\n  if (isMoveBlocked) {\n    return [];\n  }\n  const allDisplayedCols = getDisplayedColumns(visibleCols, pinned);\n  const allGridCols = colModel.getCols();\n  const movingDisplayedCols = allDisplayedCols.filter(col => movingCols.includes(col));\n  const otherDisplayedCols = allDisplayedCols.filter(col => !movingCols.includes(col));\n  const otherGridCols = allGridCols.filter(col => !movingCols.includes(col));\n  let displayIndex = 0;\n  let availableWidth = xPosition;\n  if (draggingRight) {\n    let widthOfMovingDisplayedCols = 0;\n    movingDisplayedCols.forEach(col => widthOfMovingDisplayedCols += col.getActualWidth());\n    availableWidth -= widthOfMovingDisplayedCols;\n  }\n  if (availableWidth > 0) {\n    for (let i = 0; i < otherDisplayedCols.length; i++) {\n      const col = otherDisplayedCols[i];\n      availableWidth -= col.getActualWidth();\n      if (availableWidth < 0) {\n        break;\n      }\n      displayIndex++;\n    }\n    if (draggingRight) {\n      displayIndex++;\n    }\n  }\n  let firstValidMove;\n  if (displayIndex > 0) {\n    const leftColumn = otherDisplayedCols[displayIndex - 1];\n    firstValidMove = otherGridCols.indexOf(leftColumn) + 1;\n  } else {\n    firstValidMove = otherGridCols.indexOf(otherDisplayedCols[0]);\n    if (firstValidMove === -1) {\n      firstValidMove = 0;\n    }\n  }\n  const validMoves = [firstValidMove];\n  const numberComparator = (a, b) => a - b;\n  if (draggingRight) {\n    let pointer = firstValidMove + 1;\n    const lastIndex = allGridCols.length - 1;\n    while (pointer <= lastIndex) {\n      validMoves.push(pointer);\n      pointer++;\n    }\n    validMoves.sort(numberComparator);\n  } else {\n    let pointer = firstValidMove;\n    const lastIndex = allGridCols.length - 1;\n    let displacedCol = allGridCols[pointer];\n    while (pointer <= lastIndex && allDisplayedCols.indexOf(displacedCol) < 0) {\n      pointer++;\n      validMoves.push(pointer);\n      displacedCol = allGridCols[pointer];\n    }\n    pointer = firstValidMove - 1;\n    const firstDisplayIndex = 0;\n    while (pointer >= firstDisplayIndex) {\n      validMoves.push(pointer);\n      pointer--;\n    }\n    validMoves.sort(numberComparator).reverse();\n  }\n  return validMoves;\n}\nfunction normaliseX(params) {\n  const {\n    pinned,\n    fromKeyboard,\n    gos,\n    ctrlsSvc,\n    useHeaderRow,\n    skipScrollPadding\n  } = params;\n  let eViewport = ctrlsSvc.getHeaderRowContainerCtrl(pinned)?.eViewport;\n  let {\n    x\n  } = params;\n  if (!eViewport) {\n    return 0;\n  }\n  if (fromKeyboard) {\n    x -= eViewport.getBoundingClientRect().left;\n  }\n  if (gos.get(\"enableRtl\")) {\n    if (useHeaderRow) {\n      eViewport = eViewport.querySelector(\".ag-header-row\");\n    }\n    x = eViewport.clientWidth - x;\n  }\n  if (pinned == null && !skipScrollPadding) {\n    x += ctrlsSvc.get(\"center\").getCenterViewportScrollLeft();\n  }\n  return x;\n}\nfunction setColumnsMoving(columns, isMoving) {\n  for (const column of columns) {\n    column.moving = isMoving;\n    column.dispatchColEvent(\"movingChanged\", \"uiColumnMoved\");\n  }\n}\n\n// packages/ag-grid-community/src/columnMove/columnDrag/moveColumnFeature.ts\nvar MOVE_FAIL_THRESHOLD = 7;\nvar SCROLL_MOVE_WIDTH = 100;\nvar SCROLL_GAP_NEEDED_BEFORE_MOVE = SCROLL_MOVE_WIDTH / 2;\nvar SCROLL_ACCELERATION_RATE = 5;\nvar SCROLL_TIME_INTERVAL = 100;\nvar MoveColumnFeature = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.pinned = pinned;\n    this.needToMoveLeft = false;\n    this.needToMoveRight = false;\n    this.lastMovedInfo = null;\n    this.isCenterContainer = !_exists(pinned);\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, p => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n  }\n  getIconName() {\n    const {\n      pinned,\n      lastDraggingEvent\n    } = this;\n    const {\n      dragItem\n    } = lastDraggingEvent || {};\n    const columns = dragItem?.columns ?? [];\n    for (const col of columns) {\n      const colPinned = col.getPinned();\n      if (col.getColDef().lockPinned) {\n        if (colPinned == pinned) {\n          return \"move\";\n        }\n        continue;\n      }\n      const initialPinnedState = dragItem?.containerType;\n      if (initialPinnedState === pinned || !pinned) {\n        return \"move\";\n      }\n      if (pinned && (!colPinned || initialPinnedState !== pinned)) {\n        return \"pinned\";\n      }\n    }\n    return \"notAllowed\";\n  }\n  onDragEnter(draggingEvent) {\n    const dragItem = draggingEvent.dragItem;\n    const columns = dragItem.columns;\n    const dragCameFromToolPanel = draggingEvent.dragSource.type === 0 /* ToolPanel */;\n    if (dragCameFromToolPanel) {\n      this.setColumnsVisible(columns, true, \"uiColumnDragged\");\n    } else {\n      const visibleState = dragItem.visibleState;\n      const visibleColumns = (columns || []).filter(column => visibleState[column.getId()] && !column.isVisible());\n      this.setColumnsVisible(visibleColumns, true, \"uiColumnDragged\");\n    }\n    if (!this.gos.get(\"suppressMoveWhenColumnDragging\")) {\n      this.attemptToPinColumns(columns, this.pinned);\n    }\n    this.onDragging(draggingEvent, true, true);\n  }\n  onDragging(draggingEvent = this.lastDraggingEvent, fromEnter = false, fakeEvent = false, finished = false) {\n    const {\n      gos,\n      ctrlsSvc\n    } = this.beans;\n    const isSuppressMoveWhenDragging = gos.get(\"suppressMoveWhenColumnDragging\");\n    if (finished && !isSuppressMoveWhenDragging) {\n      this.finishColumnMoving();\n      return;\n    }\n    this.lastDraggingEvent = draggingEvent;\n    if (!draggingEvent || !finished && _missing(draggingEvent.hDirection)) {\n      return;\n    }\n    const mouseX = normaliseX({\n      x: draggingEvent.x,\n      pinned: this.pinned,\n      gos,\n      ctrlsSvc\n    });\n    if (!fromEnter) {\n      this.checkCenterForScrolling(mouseX);\n    }\n    if (isSuppressMoveWhenDragging) {\n      this.handleColumnDragWhileSuppressingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished);\n    } else {\n      this.handleColumnDragWhileAllowingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished);\n    }\n  }\n  onDragLeave() {\n    this.ensureIntervalCleared();\n    this.clearHighlighted();\n    this.updateDragItemContainerType();\n    this.lastMovedInfo = null;\n  }\n  onDragStop() {\n    this.onDragging(this.lastDraggingEvent, false, true, true);\n    this.ensureIntervalCleared();\n    this.lastMovedInfo = null;\n  }\n  onDragCancel() {\n    this.clearHighlighted();\n    this.ensureIntervalCleared();\n    this.lastMovedInfo = null;\n  }\n  setColumnsVisible(columns, visible, source) {\n    if (!columns?.length) {\n      return;\n    }\n    const allowedCols = columns.filter(c => !c.getColDef().lockVisible);\n    if (!allowedCols.length) {\n      return;\n    }\n    this.beans.colModel.setColsVisible(allowedCols, visible, source);\n  }\n  finishColumnMoving() {\n    this.clearHighlighted();\n    const lastMovedInfo = this.lastMovedInfo;\n    if (!lastMovedInfo) {\n      return;\n    }\n    const {\n      columns,\n      toIndex\n    } = lastMovedInfo;\n    this.beans.colMoves.moveColumns(columns, toIndex, \"uiColumnMoved\", true);\n  }\n  updateDragItemContainerType() {\n    const {\n      lastDraggingEvent\n    } = this;\n    if (this.gos.get(\"suppressMoveWhenColumnDragging\") || !lastDraggingEvent) {\n      return;\n    }\n    const dragItem = lastDraggingEvent.dragItem;\n    if (!dragItem) {\n      return;\n    }\n    dragItem.containerType = this.pinned;\n  }\n  handleColumnDragWhileSuppressingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished) {\n    const allMovingColumns = this.getAllMovingColumns(draggingEvent, true);\n    if (finished) {\n      const isAttemptingToPin = this.isAttemptingToPin(allMovingColumns);\n      if (isAttemptingToPin) {\n        this.attemptToPinColumns(allMovingColumns, void 0, true);\n      }\n      const {\n        fromLeft,\n        xPosition\n      } = this.getNormalisedXPositionInfo(allMovingColumns, isAttemptingToPin) || {};\n      if (fromLeft == null || xPosition == null) {\n        this.finishColumnMoving();\n        return;\n      }\n      this.moveColumnsAfterHighlight({\n        allMovingColumns,\n        xPosition,\n        fromEnter,\n        fakeEvent,\n        fromLeft\n      });\n    } else {\n      if (!this.beans.dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\n        return;\n      }\n      this.highlightHoveredColumn(allMovingColumns, mouseX);\n    }\n  }\n  handleColumnDragWhileAllowingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished) {\n    const allMovingColumns = this.getAllMovingColumns(draggingEvent);\n    const fromLeft = this.normaliseDirection(draggingEvent.hDirection) === \"right\";\n    const isFromHeader = draggingEvent.dragSource.type === 1 /* HeaderCell */;\n    const params = this.getMoveColumnParams({\n      allMovingColumns,\n      isFromHeader,\n      xPosition: mouseX,\n      fromLeft,\n      fromEnter,\n      fakeEvent\n    });\n    const lastMovedInfo = attemptMoveColumns({\n      ...params,\n      finished\n    });\n    if (lastMovedInfo) {\n      this.lastMovedInfo = lastMovedInfo;\n    }\n  }\n  getAllMovingColumns(draggingEvent, useSplit = false) {\n    const dragItem = draggingEvent.dragSource.getDragItem();\n    let columns = null;\n    if (useSplit) {\n      columns = dragItem.columnsInSplit;\n      if (!columns) {\n        columns = dragItem.columns;\n      }\n    } else {\n      columns = dragItem.columns;\n    }\n    const conditionCallback = col => col.getColDef().lockPinned ? col.getPinned() == this.pinned : true;\n    if (!columns) {\n      return [];\n    }\n    return columns.filter(conditionCallback);\n  }\n  getMoveColumnParams(params) {\n    const {\n      allMovingColumns,\n      isFromHeader,\n      xPosition,\n      fromLeft,\n      fromEnter,\n      fakeEvent\n    } = params;\n    const {\n      gos,\n      colModel,\n      colMoves,\n      visibleCols\n    } = this.beans;\n    return {\n      allMovingColumns,\n      isFromHeader,\n      fromLeft,\n      xPosition,\n      pinned: this.pinned,\n      fromEnter,\n      fakeEvent,\n      gos,\n      colModel,\n      colMoves,\n      visibleCols\n    };\n  }\n  highlightHoveredColumn(movingColumns, mouseX) {\n    const {\n      gos,\n      colModel\n    } = this.beans;\n    const isRtl = gos.get(\"enableRtl\");\n    const consideredColumns = colModel.getCols().filter(col => col.isVisible() && col.getPinned() === this.pinned);\n    let start = null;\n    let width = null;\n    let targetColumn = null;\n    for (const col of consideredColumns) {\n      width = col.getActualWidth();\n      start = this.getNormalisedColumnLeft(col, 0, isRtl);\n      if (start != null) {\n        const end = start + width;\n        if (start <= mouseX && end >= mouseX) {\n          targetColumn = col;\n          break;\n        }\n      }\n      start = null;\n      width = null;\n    }\n    if (!targetColumn) {\n      for (let i = consideredColumns.length - 1; i >= 0; i--) {\n        const currentColumn = consideredColumns[i];\n        const parent = consideredColumns[i].getParent();\n        if (!parent) {\n          targetColumn = currentColumn;\n          break;\n        }\n        const leafDisplayedCols = parent?.getDisplayedLeafColumns();\n        if (leafDisplayedCols.length) {\n          targetColumn = _last(leafDisplayedCols);\n          break;\n        }\n      }\n      if (!targetColumn) {\n        return;\n      }\n      start = this.getNormalisedColumnLeft(targetColumn, 0, isRtl);\n      width = targetColumn.getActualWidth();\n    } else if (movingColumns.indexOf(targetColumn) !== -1) {\n      targetColumn = null;\n    }\n    if (this.lastHighlightedColumn?.column !== targetColumn) {\n      this.clearHighlighted();\n    }\n    if (targetColumn == null || start == null || width == null) {\n      return;\n    }\n    let position;\n    if (mouseX - start < width / 2 !== isRtl) {\n      position = 0 /* Before */;\n    } else {\n      position = 1 /* After */;\n    }\n    setColumnHighlighted(targetColumn, position);\n    this.lastHighlightedColumn = {\n      column: targetColumn,\n      position\n    };\n  }\n  getNormalisedXPositionInfo(allMovingColumns, isAttemptingToPin) {\n    const {\n      gos,\n      visibleCols\n    } = this.beans;\n    const isRtl = gos.get(\"enableRtl\");\n    const {\n      firstMovingCol,\n      column,\n      position\n    } = this.getColumnMoveAndTargetInfo(allMovingColumns, isAttemptingToPin, isRtl);\n    if (!firstMovingCol || !column || position == null) {\n      return;\n    }\n    const visibleColumns = visibleCols.allCols;\n    const movingColIndex = visibleColumns.indexOf(firstMovingCol);\n    const targetIndex = visibleColumns.indexOf(column);\n    const isBefore = position === 0 /* Before */ !== isRtl;\n    const fromLeft = movingColIndex < targetIndex || movingColIndex === targetIndex && !isBefore;\n    let diff = 0;\n    if (isBefore) {\n      if (fromLeft) {\n        diff -= 1;\n      }\n    } else {\n      if (!fromLeft) {\n        diff += 1;\n      }\n    }\n    if (targetIndex + diff === movingColIndex) {\n      return;\n    }\n    const targetColumn = visibleColumns[targetIndex + diff];\n    if (!targetColumn) {\n      return;\n    }\n    const xPosition = this.getNormalisedColumnLeft(targetColumn, 20, isRtl);\n    return {\n      fromLeft,\n      xPosition\n    };\n  }\n  getColumnMoveAndTargetInfo(allMovingColumns, isAttemptingToPin, isRtl) {\n    const lastHighlightedColumn = this.lastHighlightedColumn || {};\n    const {\n      firstMovingCol,\n      lastMovingCol\n    } = findFirstAndLastMovingColumns(allMovingColumns);\n    if (!firstMovingCol || !lastMovingCol || lastHighlightedColumn.column || !isAttemptingToPin) {\n      return {\n        firstMovingCol,\n        ...lastHighlightedColumn\n      };\n    }\n    const pinned = this.getPinDirection();\n    const isLeft = pinned === \"left\";\n    return {\n      firstMovingCol,\n      position: isLeft ? 1 /* After */ : 0 /* Before */,\n      column: isLeft !== isRtl ? firstMovingCol : lastMovingCol\n    };\n  }\n  normaliseDirection(hDirection) {\n    if (this.gos.get(\"enableRtl\")) {\n      switch (hDirection) {\n        case \"left\":\n          return \"right\";\n        case \"right\":\n          return \"left\";\n      }\n    }\n    return hDirection;\n  }\n  getNormalisedColumnLeft(col, padding, isRtl) {\n    const {\n      gos,\n      ctrlsSvc\n    } = this.beans;\n    const left = col.getLeft();\n    if (left == null) {\n      return null;\n    }\n    const width = col.getActualWidth();\n    return normaliseX({\n      x: isRtl ? left + width - padding : left + padding,\n      pinned: col.getPinned(),\n      useHeaderRow: isRtl,\n      skipScrollPadding: true,\n      gos,\n      ctrlsSvc\n    });\n  }\n  isAttemptingToPin(columns) {\n    const isMovingHorizontally = this.needToMoveLeft || this.needToMoveRight;\n    const isFailedMoreThanThreshold = this.failedMoveAttempts > MOVE_FAIL_THRESHOLD;\n    return isMovingHorizontally && isFailedMoreThanThreshold || columns.some(col => col.getPinned() !== this.pinned);\n  }\n  moveColumnsAfterHighlight(params) {\n    const {\n      allMovingColumns,\n      xPosition,\n      fromEnter,\n      fakeEvent,\n      fromLeft\n    } = params;\n    const columnMoveParams = this.getMoveColumnParams({\n      allMovingColumns,\n      isFromHeader: true,\n      xPosition,\n      fromLeft,\n      fromEnter,\n      fakeEvent\n    });\n    const {\n      columns,\n      toIndex\n    } = getBestColumnMoveIndexFromXPosition(columnMoveParams) || {};\n    if (columns && toIndex != null) {\n      this.lastMovedInfo = {\n        columns,\n        toIndex\n      };\n    }\n    this.finishColumnMoving();\n  }\n  clearHighlighted() {\n    const {\n      lastHighlightedColumn\n    } = this;\n    if (!lastHighlightedColumn) {\n      return;\n    }\n    setColumnHighlighted(lastHighlightedColumn.column, null);\n    this.lastHighlightedColumn = null;\n  }\n  checkCenterForScrolling(xAdjustedForScroll) {\n    if (!this.isCenterContainer) {\n      return;\n    }\n    const centerCtrl = this.beans.ctrlsSvc.get(\"center\");\n    const firstVisiblePixel = centerCtrl.getCenterViewportScrollLeft();\n    const lastVisiblePixel = firstVisiblePixel + centerCtrl.getCenterWidth();\n    let needToMoveRight;\n    let needToMoveLeft;\n    if (this.gos.get(\"enableRtl\")) {\n      needToMoveRight = xAdjustedForScroll < firstVisiblePixel + SCROLL_GAP_NEEDED_BEFORE_MOVE;\n      needToMoveLeft = xAdjustedForScroll > lastVisiblePixel - SCROLL_GAP_NEEDED_BEFORE_MOVE;\n    } else {\n      needToMoveLeft = xAdjustedForScroll < firstVisiblePixel + SCROLL_GAP_NEEDED_BEFORE_MOVE;\n      needToMoveRight = xAdjustedForScroll > lastVisiblePixel - SCROLL_GAP_NEEDED_BEFORE_MOVE;\n    }\n    this.needToMoveRight = needToMoveRight;\n    this.needToMoveLeft = needToMoveLeft;\n    if (needToMoveLeft || needToMoveRight) {\n      this.ensureIntervalStarted();\n    } else {\n      this.ensureIntervalCleared();\n    }\n  }\n  ensureIntervalStarted() {\n    if (this.movingIntervalId) {\n      return;\n    }\n    this.intervalCount = 0;\n    this.failedMoveAttempts = 0;\n    this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), SCROLL_TIME_INTERVAL);\n    this.beans.dragAndDrop.getDragAndDropImageComponent()?.setIcon(this.needToMoveLeft ? \"left\" : \"right\", true);\n  }\n  ensureIntervalCleared() {\n    if (!this.movingIntervalId) {\n      return;\n    }\n    window.clearInterval(this.movingIntervalId);\n    this.movingIntervalId = null;\n    this.failedMoveAttempts = 0;\n    this.beans.dragAndDrop.getDragAndDropImageComponent()?.setIcon(this.getIconName(), false);\n  }\n  moveInterval() {\n    let pixelsToMove;\n    this.intervalCount++;\n    pixelsToMove = 10 + this.intervalCount * SCROLL_ACCELERATION_RATE;\n    if (pixelsToMove > SCROLL_MOVE_WIDTH) {\n      pixelsToMove = SCROLL_MOVE_WIDTH;\n    }\n    let pixelsMoved = null;\n    const scrollFeature = this.gridBodyCon.scrollFeature;\n    if (this.needToMoveLeft) {\n      pixelsMoved = scrollFeature.scrollHorizontally(-pixelsToMove);\n    } else if (this.needToMoveRight) {\n      pixelsMoved = scrollFeature.scrollHorizontally(pixelsToMove);\n    }\n    if (pixelsMoved !== 0) {\n      this.onDragging(this.lastDraggingEvent);\n      this.failedMoveAttempts = 0;\n    } else {\n      this.failedMoveAttempts++;\n      const {\n        pinnedCols,\n        dragAndDrop,\n        gos\n      } = this.beans;\n      if (this.failedMoveAttempts <= MOVE_FAIL_THRESHOLD + 1 || !pinnedCols) {\n        return;\n      }\n      dragAndDrop.getDragAndDropImageComponent()?.setIcon(\"pinned\", false);\n      if (!gos.get(\"suppressMoveWhenColumnDragging\")) {\n        const columns = this.lastDraggingEvent?.dragItem.columns;\n        this.attemptToPinColumns(columns, void 0, true);\n      }\n    }\n  }\n  getPinDirection() {\n    if (this.needToMoveLeft || this.pinned === \"left\") {\n      return \"left\";\n    }\n    if (this.needToMoveRight || this.pinned === \"right\") {\n      return \"right\";\n    }\n  }\n  attemptToPinColumns(columns, pinned, fromMoving = false) {\n    const allowedCols = (columns || []).filter(c => !c.getColDef().lockPinned);\n    if (!allowedCols.length) {\n      return 0;\n    }\n    if (fromMoving) {\n      pinned = this.getPinDirection();\n    }\n    const {\n      pinnedCols,\n      dragAndDrop\n    } = this.beans;\n    pinnedCols?.setColsPinned(allowedCols, pinned, \"uiColumnDragged\");\n    if (fromMoving) {\n      dragAndDrop.nudge();\n    }\n    return allowedCols.length;\n  }\n  destroy() {\n    super.destroy();\n    this.lastDraggingEvent = null;\n    this.clearHighlighted();\n    this.lastMovedInfo = null;\n  }\n};\nfunction setColumnHighlighted(column, highlighted) {\n  if (column.highlighted === highlighted) {\n    return;\n  }\n  column.highlighted = highlighted;\n  column.dispatchColEvent(\"headerHighlightChanged\", \"uiColumnMoved\");\n}\nfunction findFirstAndLastMovingColumns(allMovingColumns) {\n  const moveLen = allMovingColumns.length;\n  let firstMovingCol;\n  let lastMovingCol;\n  for (let i = 0; i < moveLen; i++) {\n    if (!firstMovingCol) {\n      const leftCol = allMovingColumns[i];\n      if (leftCol.getLeft() != null) {\n        firstMovingCol = leftCol;\n      }\n    }\n    if (!lastMovingCol) {\n      const rightCol = allMovingColumns[moveLen - 1 - i];\n      if (rightCol.getLeft() != null) {\n        lastMovingCol = rightCol;\n      }\n    }\n    if (firstMovingCol && lastMovingCol) {\n      break;\n    }\n  }\n  return {\n    firstMovingCol,\n    lastMovingCol\n  };\n}\n\n// packages/ag-grid-community/src/columnMove/columnDrag/bodyDropTarget.ts\nvar BodyDropTarget = class extends BeanStub {\n  constructor(pinned, eContainer) {\n    super();\n    this.pinned = pinned;\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    const {\n      ctrlsSvc,\n      dragAndDrop\n    } = this.beans;\n    const pinned = this.pinned;\n    ctrlsSvc.whenReady(this, p => {\n      let eSecondaryContainers;\n      const eBodyViewport = p.gridBodyCtrl.eBodyViewport;\n      switch (pinned) {\n        case \"left\":\n          eSecondaryContainers = [[eBodyViewport, p.left.eContainer], [p.bottomLeft.eContainer], [p.topLeft.eContainer]];\n          break;\n        case \"right\":\n          eSecondaryContainers = [[eBodyViewport, p.right.eContainer], [p.bottomRight.eContainer], [p.topRight.eContainer]];\n          break;\n        default:\n          eSecondaryContainers = [[eBodyViewport, p.center.eViewport], [p.bottomCenter.eViewport], [p.topCenter.eViewport]];\n          break;\n      }\n      this.eSecondaryContainers = eSecondaryContainers;\n    });\n    this.moveColumnFeature = this.createManagedBean(new MoveColumnFeature(pinned));\n    this.bodyDropPivotTarget = this.createManagedBean(new BodyDropPivotTarget(pinned));\n    dragAndDrop.addDropTarget(this);\n    this.addDestroyFunc(() => dragAndDrop.removeDropTarget(this));\n  }\n  isInterestedIn(type) {\n    return type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */ && this.gos.get(\"allowDragFromColumnsToolPanel\");\n  }\n  getSecondaryContainers() {\n    return this.eSecondaryContainers;\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  getIconName() {\n    return this.currentDropListener.getIconName();\n  }\n  // we want to use the bodyPivotTarget if the user is dragging columns in from the toolPanel\n  // and we are in pivot mode, as it has to logic to set pivot/value/group on the columns when\n  // dropped into the grid's body.\n  isDropColumnInPivotMode(draggingEvent) {\n    return this.beans.colModel.isPivotMode() && draggingEvent.dragSource.type === 0 /* ToolPanel */;\n  }\n  onDragEnter(draggingEvent) {\n    this.currentDropListener = this.isDropColumnInPivotMode(draggingEvent) ? this.bodyDropPivotTarget : this.moveColumnFeature;\n    this.currentDropListener.onDragEnter(draggingEvent);\n  }\n  onDragLeave(params) {\n    this.currentDropListener.onDragLeave(params);\n  }\n  onDragging(params) {\n    this.currentDropListener.onDragging(params);\n  }\n  onDragStop(params) {\n    this.currentDropListener.onDragStop(params);\n  }\n  onDragCancel() {\n    this.currentDropListener.onDragCancel();\n  }\n};\n\n// packages/ag-grid-community/src/columnMove/columnMoveService.ts\nvar ColumnMoveService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colMoves\";\n  }\n  moveColumnByIndex(fromIndex, toIndex, source) {\n    const gridColumns = this.beans.colModel.getCols();\n    if (!gridColumns) {\n      return;\n    }\n    const column = gridColumns[fromIndex];\n    this.moveColumns([column], toIndex, source);\n  }\n  moveColumns(columnsToMoveKeys, toIndex, source, finished = true) {\n    const {\n      colModel,\n      colAnimation,\n      visibleCols,\n      eventSvc\n    } = this.beans;\n    const gridColumns = colModel.getCols();\n    if (!gridColumns) {\n      return;\n    }\n    if (toIndex > gridColumns.length - columnsToMoveKeys.length) {\n      _warn(30, {\n        toIndex\n      });\n      return;\n    }\n    colAnimation?.start();\n    const movedColumns = colModel.getColsForKeys(columnsToMoveKeys);\n    if (this.doesMovePassRules(movedColumns, toIndex)) {\n      _moveInArray(colModel.getCols(), movedColumns, toIndex);\n      visibleCols.refresh(source);\n      eventSvc.dispatchEvent({\n        type: \"columnMoved\",\n        columns: movedColumns,\n        column: movedColumns.length === 1 ? movedColumns[0] : null,\n        toIndex,\n        finished,\n        source\n      });\n    }\n    colAnimation?.finish();\n  }\n  doesMovePassRules(columnsToMove, toIndex) {\n    const proposedColumnOrder = this.getProposedColumnOrder(columnsToMove, toIndex);\n    return this.doesOrderPassRules(proposedColumnOrder);\n  }\n  doesOrderPassRules(gridOrder) {\n    const {\n      colModel,\n      gos\n    } = this.beans;\n    if (!doesMovePassMarryChildren(gridOrder, colModel.getColTree())) {\n      return false;\n    }\n    const doesMovePassLockedPositions = proposedColumnOrder => {\n      const lockPositionToPlacement = position => {\n        if (!position) {\n          return 0 /* NONE */;\n        }\n        return position === \"left\" || position === true ? -1 /* LEFT */ : 1 /* RIGHT */;\n      };\n      const isRtl = gos.get(\"enableRtl\");\n      let lastPlacement = isRtl ? 1 /* RIGHT */ : -1 /* LEFT */;\n      let rulePassed = true;\n      proposedColumnOrder.forEach(col => {\n        const placement = lockPositionToPlacement(col.getColDef().lockPosition);\n        if (isRtl) {\n          if (placement > lastPlacement) {\n            rulePassed = false;\n          }\n        } else {\n          if (placement < lastPlacement) {\n            rulePassed = false;\n          }\n        }\n        lastPlacement = placement;\n      });\n      return rulePassed;\n    };\n    if (!doesMovePassLockedPositions(gridOrder)) {\n      return false;\n    }\n    return true;\n  }\n  getProposedColumnOrder(columnsToMove, toIndex) {\n    const gridColumns = this.beans.colModel.getCols();\n    const proposedColumnOrder = gridColumns.slice();\n    _moveInArray(proposedColumnOrder, columnsToMove, toIndex);\n    return proposedColumnOrder;\n  }\n  createBodyDropTarget(pinned, dropContainer) {\n    return new BodyDropTarget(pinned, dropContainer);\n  }\n  moveHeader(hDirection, eGui, column, pinned, bean) {\n    const {\n      ctrlsSvc,\n      gos,\n      colModel,\n      visibleCols,\n      focusSvc\n    } = this.beans;\n    const rect = eGui.getBoundingClientRect();\n    const left = rect.left;\n    const isGroup = isColumnGroup(column);\n    const width = isGroup ? rect.width : column.getActualWidth();\n    const isLeft = hDirection === \"left\" !== gos.get(\"enableRtl\");\n    const xPosition = normaliseX({\n      x: isLeft ? left - 20 : left + width + 20,\n      pinned,\n      fromKeyboard: true,\n      gos,\n      ctrlsSvc\n    });\n    const headerPosition = focusSvc.focusedHeader;\n    attemptMoveColumns({\n      allMovingColumns: isGroup ? column.getLeafColumns() : [column],\n      isFromHeader: true,\n      fromLeft: hDirection === \"right\",\n      xPosition,\n      pinned,\n      fromEnter: false,\n      fakeEvent: false,\n      gos,\n      colModel,\n      colMoves: this,\n      visibleCols,\n      finished: true\n    });\n    let targetColumn;\n    if (isGroup) {\n      const displayedLeafColumns = column.getDisplayedLeafColumns();\n      targetColumn = isLeft ? displayedLeafColumns[0] : _last(displayedLeafColumns);\n    } else {\n      targetColumn = column;\n    }\n    ctrlsSvc.getScrollFeature().ensureColumnVisible(targetColumn, \"auto\");\n    if ((!bean.isAlive() || gos.get(\"ensureDomOrder\")) && headerPosition) {\n      let restoreFocusColumn;\n      if (isGroup) {\n        const groupId = column.getGroupId();\n        const leafCols = column.getLeafColumns();\n        if (!leafCols.length) {\n          return;\n        }\n        const parent = leafCols[0].getParent();\n        if (!parent) {\n          return;\n        }\n        restoreFocusColumn = findGroupWidthId(parent, groupId);\n      } else {\n        restoreFocusColumn = column;\n      }\n      if (restoreFocusColumn) {\n        focusSvc.focusHeaderPosition({\n          headerPosition: {\n            ...headerPosition,\n            column: restoreFocusColumn\n          }\n        });\n      }\n    }\n  }\n  setDragSourceForHeader(eSource, column, displayName) {\n    const {\n      gos,\n      colModel,\n      dragAndDrop,\n      visibleCols\n    } = this.beans;\n    let hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n    const isGroup = isColumnGroup(column);\n    const columns = isGroup ? column.getProvidedColumnGroup().getLeafColumns() : [column];\n    const getDragItem = isGroup ? () => createDragItemForGroup(column, visibleCols.allCols) : () => createDragItem(column);\n    const dragSource = {\n      type: 1 /* HeaderCell */,\n      eElement: eSource,\n      getDefaultIconName: () => hideColumnOnExit ? \"hide\" : \"notAllowed\",\n      getDragItem,\n      dragItemName: displayName,\n      onDragStarted: () => {\n        hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n        setColumnsMoving(columns, true);\n      },\n      onDragStopped: () => setColumnsMoving(columns, false),\n      onDragCancelled: () => setColumnsMoving(columns, false),\n      onGridEnter: dragItem => {\n        if (hideColumnOnExit) {\n          const {\n            columns: columns2 = [],\n            visibleState\n          } = dragItem ?? {};\n          const hasVisibleState = isGroup ? col => !visibleState || visibleState[col.getColId()] : () => true;\n          const unlockedColumns = columns2.filter(col => !col.getColDef().lockVisible && hasVisibleState(col));\n          colModel.setColsVisible(unlockedColumns, true, \"uiColumnMoved\");\n        }\n      },\n      onGridExit: dragItem => {\n        if (hideColumnOnExit) {\n          const unlockedColumns = dragItem?.columns?.filter(col => !col.getColDef().lockVisible) || [];\n          colModel.setColsVisible(unlockedColumns, false, \"uiColumnMoved\");\n        }\n      }\n    };\n    dragAndDrop.addDragSource(dragSource, true);\n    return dragSource;\n  }\n};\nfunction findGroupWidthId(columnGroup, id) {\n  while (columnGroup) {\n    if (columnGroup.getGroupId() === id) {\n      return columnGroup;\n    }\n    columnGroup = columnGroup.getParent();\n  }\n  return void 0;\n}\nfunction createDragItem(column) {\n  const visibleState = {};\n  visibleState[column.getId()] = column.isVisible();\n  return {\n    columns: [column],\n    visibleState,\n    containerType: column.pinned\n  };\n}\nfunction createDragItemForGroup(columnGroup, allCols) {\n  const allColumnsOriginalOrder = columnGroup.getProvidedColumnGroup().getLeafColumns();\n  const visibleState = {};\n  allColumnsOriginalOrder.forEach(column => visibleState[column.getId()] = column.isVisible());\n  const allColumnsCurrentOrder = [];\n  allCols.forEach(column => {\n    if (allColumnsOriginalOrder.indexOf(column) >= 0) {\n      allColumnsCurrentOrder.push(column);\n      _removeFromArray(allColumnsOriginalOrder, column);\n    }\n  });\n  allColumnsOriginalOrder.forEach(column => allColumnsCurrentOrder.push(column));\n  const columnsInSplit = [];\n  const columnGroupColumns = columnGroup.getLeafColumns();\n  for (const col of allColumnsCurrentOrder) {\n    if (columnGroupColumns.indexOf(col) !== -1) {\n      columnsInSplit.push(col);\n    }\n  }\n  return {\n    columns: allColumnsCurrentOrder,\n    columnsInSplit,\n    visibleState,\n    containerType: columnsInSplit[0]?.pinned\n  };\n}\n\n// packages/ag-grid-community/src/columnMove/columnMoveModule.ts\nvar ColumnMoveModule = {\n  moduleName: \"ColumnMove\",\n  version: VERSION,\n  beans: [ColumnMoveService, ColumnAnimationService],\n  apiFunctions: {\n    moveColumnByIndex,\n    moveColumns\n  },\n  dependsOn: [SharedDragAndDropModule],\n  css: [columnMovingCSS]\n};\n\n// packages/ag-grid-community/src/rendering/autoWidthCalculator.ts\nvar AutoWidthCalculator = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"autoWidthCalc\";\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, p => {\n      this.centerRowContainerCtrl = p.center;\n    });\n  }\n  // this is the trick: we create a dummy container and clone all the cells\n  // into the dummy, then check the dummy's width. then destroy the dummy\n  // as we don't need it any more.\n  // drawback: only the cells visible on the screen are considered\n  getPreferredWidthForColumn(column, skipHeader) {\n    const eHeaderCell = this.getHeaderCellForColumn(column);\n    if (!eHeaderCell) {\n      return -1;\n    }\n    const elements = this.beans.rowRenderer.getAllCellsNotSpanningForColumn(column);\n    if (!skipHeader) {\n      elements.push(eHeaderCell);\n    }\n    return this.getPreferredWidthForElements(elements);\n  }\n  getPreferredWidthForColumnGroup(columnGroup) {\n    const eHeaderCell = this.getHeaderCellForColumn(columnGroup);\n    if (!eHeaderCell) {\n      return -1;\n    }\n    return this.getPreferredWidthForElements([eHeaderCell]);\n  }\n  getPreferredWidthForElements(elements, extraPadding) {\n    const eDummyContainer = document.createElement(\"form\");\n    eDummyContainer.style.position = \"fixed\";\n    const eBodyContainer = this.centerRowContainerCtrl.eContainer;\n    elements.forEach(el => this.cloneItemIntoDummy(el, eDummyContainer));\n    eBodyContainer.appendChild(eDummyContainer);\n    const dummyContainerWidth = eDummyContainer.offsetWidth;\n    eBodyContainer.removeChild(eDummyContainer);\n    extraPadding = extraPadding ?? this.gos.get(\"autoSizePadding\");\n    return dummyContainerWidth + extraPadding;\n  }\n  getHeaderCellForColumn(column) {\n    let element = null;\n    this.beans.ctrlsSvc.getHeaderRowContainerCtrls().forEach(container => {\n      const res = container.getHtmlElementForColumnHeader(column);\n      if (res != null) {\n        element = res;\n      }\n    });\n    return element;\n  }\n  cloneItemIntoDummy(eCell, eDummyContainer) {\n    const eCellClone = eCell.cloneNode(true);\n    eCellClone.style.width = \"\";\n    eCellClone.style.position = \"static\";\n    eCellClone.style.left = \"\";\n    const eCloneParent = document.createElement(\"div\");\n    const eCloneParentClassList = eCloneParent.classList;\n    const isHeader = [\"ag-header-cell\", \"ag-header-group-cell\"].some(cls => eCellClone.classList.contains(cls));\n    if (isHeader) {\n      eCloneParentClassList.add(\"ag-header\", \"ag-header-row\");\n      eCloneParent.style.position = \"static\";\n    } else {\n      eCloneParentClassList.add(\"ag-row\");\n    }\n    let pointer = eCell.parentElement;\n    while (pointer) {\n      const isRow = [\"ag-header-row\", \"ag-row\"].some(cls => pointer.classList.contains(cls));\n      if (isRow) {\n        for (let i = 0; i < pointer.classList.length; i++) {\n          const item = pointer.classList[i];\n          if (item != \"ag-row-position-absolute\") {\n            eCloneParentClassList.add(item);\n          }\n        }\n        break;\n      }\n      pointer = pointer.parentElement;\n    }\n    eCloneParent.appendChild(eCellClone);\n    eDummyContainer.appendChild(eCloneParent);\n  }\n};\n\n// packages/ag-grid-community/src/rendering/autoWidthModule.ts\nvar AutoWidthModule = {\n  moduleName: \"AutoWidth\",\n  version: VERSION,\n  beans: [AutoWidthCalculator]\n};\n\n// packages/ag-grid-community/src/columnResize/columnResizeApi.ts\nfunction setColumnWidths(beans, columnWidths, finished = true, source = \"api\") {\n  beans.colResize?.setColumnWidths(columnWidths, false, finished, source);\n}\n\n// packages/ag-grid-community/src/columnResize/groupResizeFeature.ts\nvar GroupResizeFeature = class extends BeanStub {\n  constructor(comp, eResize, pinned, columnGroup) {\n    super();\n    this.comp = comp;\n    this.eResize = eResize;\n    this.pinned = pinned;\n    this.columnGroup = columnGroup;\n  }\n  postConstruct() {\n    if (!this.columnGroup.isResizable()) {\n      this.comp.setResizableDisplayed(false);\n      return;\n    }\n    const {\n      horizontalResizeSvc,\n      gos,\n      colAutosize\n    } = this.beans;\n    const finishedWithResizeFunc = horizontalResizeSvc.addResizeBar({\n      eResizeBar: this.eResize,\n      onResizeStart: this.onResizeStart.bind(this),\n      onResizing: this.onResizing.bind(this, false),\n      onResizeEnd: this.onResizing.bind(this, true)\n    });\n    this.addDestroyFunc(finishedWithResizeFunc);\n    if (!gos.get(\"suppressAutoSize\") && colAutosize) {\n      this.addDestroyFunc(colAutosize.addColumnGroupResize(this.eResize, this.columnGroup, () => this.resizeLeafColumnsToFit(\"uiColumnResized\")));\n    }\n  }\n  onResizeStart(shiftKey) {\n    const {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios,\n      groupAfterColumns,\n      groupAfterStartWidth,\n      groupAfterRatios\n    } = this.getInitialValues(shiftKey);\n    this.resizeCols = columnsToResize;\n    this.resizeStartWidth = resizeStartWidth;\n    this.resizeRatios = resizeRatios;\n    this.resizeTakeFromCols = groupAfterColumns;\n    this.resizeTakeFromStartWidth = groupAfterStartWidth;\n    this.resizeTakeFromRatios = groupAfterRatios;\n    this.toggleColumnResizing(true);\n  }\n  onResizing(finished, resizeAmount, source = \"uiColumnResized\") {\n    const resizeAmountNormalised = this.normaliseDragChange(resizeAmount);\n    const width = this.resizeStartWidth + resizeAmountNormalised;\n    this.resizeColumnsFromLocalValues(width, source, finished);\n  }\n  getInitialValues(shiftKey) {\n    const getInitialSizeOfColumns = columns => columns.reduce((totalWidth, column) => totalWidth + column.getActualWidth(), 0);\n    const getSizeRatiosOfColumns = (columns, initialSizeOfColumns) => columns.map(column => column.getActualWidth() / initialSizeOfColumns);\n    const columnsToResize = this.getColumnsToResize();\n    const resizeStartWidth = getInitialSizeOfColumns(columnsToResize);\n    const resizeRatios = getSizeRatiosOfColumns(columnsToResize, resizeStartWidth);\n    const columnSizeAndRatios = {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios\n    };\n    let groupAfter = null;\n    if (shiftKey) {\n      groupAfter = this.beans.colGroupSvc?.getGroupAtDirection(this.columnGroup, \"After\") ?? null;\n    }\n    if (groupAfter) {\n      const takeFromLeafCols = groupAfter.getDisplayedLeafColumns();\n      const groupAfterColumns = columnSizeAndRatios.groupAfterColumns = takeFromLeafCols.filter(col => col.isResizable());\n      const groupAfterStartWidth = columnSizeAndRatios.groupAfterStartWidth = getInitialSizeOfColumns(groupAfterColumns);\n      columnSizeAndRatios.groupAfterRatios = getSizeRatiosOfColumns(groupAfterColumns, groupAfterStartWidth);\n    } else {\n      columnSizeAndRatios.groupAfterColumns = void 0;\n      columnSizeAndRatios.groupAfterStartWidth = void 0;\n      columnSizeAndRatios.groupAfterRatios = void 0;\n    }\n    return columnSizeAndRatios;\n  }\n  resizeLeafColumnsToFit(source) {\n    const preferredSize = this.beans.autoWidthCalc.getPreferredWidthForColumnGroup(this.columnGroup);\n    const initialValues = this.getInitialValues();\n    if (preferredSize > initialValues.resizeStartWidth) {\n      this.resizeColumns(initialValues, preferredSize, source, true);\n    }\n  }\n  resizeColumnsFromLocalValues(totalWidth, source, finished = true) {\n    if (!this.resizeCols || !this.resizeRatios) {\n      return;\n    }\n    const initialValues = {\n      columnsToResize: this.resizeCols,\n      resizeStartWidth: this.resizeStartWidth,\n      resizeRatios: this.resizeRatios,\n      groupAfterColumns: this.resizeTakeFromCols,\n      groupAfterStartWidth: this.resizeTakeFromStartWidth,\n      groupAfterRatios: this.resizeTakeFromRatios\n    };\n    this.resizeColumns(initialValues, totalWidth, source, finished);\n  }\n  resizeColumns(initialValues, totalWidth, source, finished = true) {\n    const {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios,\n      groupAfterColumns,\n      groupAfterStartWidth,\n      groupAfterRatios\n    } = initialValues;\n    const resizeSets = [];\n    resizeSets.push({\n      columns: columnsToResize,\n      ratios: resizeRatios,\n      width: totalWidth\n    });\n    if (groupAfterColumns) {\n      const diff = totalWidth - resizeStartWidth;\n      resizeSets.push({\n        columns: groupAfterColumns,\n        ratios: groupAfterRatios,\n        width: groupAfterStartWidth - diff\n      });\n    }\n    this.beans.colResize?.resizeColumnSets({\n      resizeSets,\n      finished,\n      source\n    });\n    if (finished) {\n      this.toggleColumnResizing(false);\n    }\n  }\n  toggleColumnResizing(resizing) {\n    this.comp.toggleCss(\"ag-column-resizing\", resizing);\n  }\n  getColumnsToResize() {\n    const leafCols = this.columnGroup.getDisplayedLeafColumns();\n    return leafCols.filter(col => col.isResizable());\n  }\n  // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderCell - should refactor out?\n  normaliseDragChange(dragChange) {\n    let result = dragChange;\n    if (this.gos.get(\"enableRtl\")) {\n      if (this.pinned !== \"left\") {\n        result *= -1;\n      }\n    } else if (this.pinned === \"right\") {\n      result *= -1;\n    }\n    return result;\n  }\n  destroy() {\n    super.destroy();\n    this.resizeCols = void 0;\n    this.resizeRatios = void 0;\n    this.resizeTakeFromCols = void 0;\n    this.resizeTakeFromRatios = void 0;\n  }\n};\n\n// packages/ag-grid-community/src/columnResize/resizeFeature.ts\nvar ResizeFeature = class extends BeanStub {\n  constructor(pinned, column, eResize, comp, ctrl) {\n    super();\n    this.pinned = pinned;\n    this.column = column;\n    this.eResize = eResize;\n    this.comp = comp;\n    this.ctrl = ctrl;\n  }\n  postConstruct() {\n    const destroyResizeFuncs = [];\n    let canResize;\n    let canAutosize;\n    const addResize = () => {\n      _setDisplayed(this.eResize, canResize);\n      if (!canResize) {\n        return;\n      }\n      const {\n        horizontalResizeSvc,\n        colAutosize\n      } = this.beans;\n      const finishedWithResizeFunc = horizontalResizeSvc.addResizeBar({\n        eResizeBar: this.eResize,\n        onResizeStart: this.onResizeStart.bind(this),\n        onResizing: this.onResizing.bind(this, false),\n        onResizeEnd: this.onResizing.bind(this, true)\n      });\n      destroyResizeFuncs.push(finishedWithResizeFunc);\n      if (canAutosize && colAutosize) {\n        destroyResizeFuncs.push(colAutosize.addColumnAutosize(this.eResize, this.column));\n      }\n    };\n    const removeResize = () => {\n      destroyResizeFuncs.forEach(f => f());\n      destroyResizeFuncs.length = 0;\n    };\n    const refresh = () => {\n      const resize = this.column.isResizable();\n      const autoSize = !this.gos.get(\"suppressAutoSize\") && !this.column.getColDef().suppressAutoSize;\n      const propertyChange = resize !== canResize || autoSize !== canAutosize;\n      if (propertyChange) {\n        canResize = resize;\n        canAutosize = autoSize;\n        removeResize();\n        addResize();\n      }\n    };\n    refresh();\n    this.addDestroyFunc(removeResize);\n    this.ctrl.setRefreshFunction(\"resize\", refresh);\n  }\n  onResizing(finished, resizeAmount) {\n    const {\n      column: key,\n      lastResizeAmount,\n      resizeStartWidth,\n      beans\n    } = this;\n    const resizeAmountNormalised = this.normaliseResizeAmount(resizeAmount);\n    const newWidth = resizeStartWidth + resizeAmountNormalised;\n    const columnWidths = [{\n      key,\n      newWidth\n    }];\n    const {\n      pinnedCols,\n      ctrlsSvc,\n      colResize\n    } = beans;\n    if (this.column.getPinned()) {\n      const leftWidth = pinnedCols?.leftWidth ?? 0;\n      const rightWidth = pinnedCols?.rightWidth ?? 0;\n      const bodyWidth = _getInnerWidth(ctrlsSvc.getGridBodyCtrl().eBodyViewport) - 50;\n      if (leftWidth + rightWidth + (resizeAmountNormalised - lastResizeAmount) > bodyWidth) {\n        return;\n      }\n    }\n    this.lastResizeAmount = resizeAmountNormalised;\n    colResize?.setColumnWidths(columnWidths, this.resizeWithShiftKey, finished, \"uiColumnResized\");\n    if (finished) {\n      this.toggleColumnResizing(false);\n    }\n  }\n  onResizeStart(shiftKey) {\n    this.resizeStartWidth = this.column.getActualWidth();\n    this.lastResizeAmount = 0;\n    this.resizeWithShiftKey = shiftKey;\n    this.toggleColumnResizing(true);\n  }\n  toggleColumnResizing(resizing) {\n    this.column.resizing = resizing;\n    this.comp.toggleCss(\"ag-column-resizing\", resizing);\n  }\n  // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderGroupCell - should refactor out?\n  normaliseResizeAmount(dragChange) {\n    let result = dragChange;\n    const notPinningLeft = this.pinned !== \"left\";\n    const pinningRight = this.pinned === \"right\";\n    if (this.gos.get(\"enableRtl\")) {\n      if (notPinningLeft) {\n        result *= -1;\n      }\n    } else {\n      if (pinningRight) {\n        result *= -1;\n      }\n    }\n    return result;\n  }\n};\n\n// packages/ag-grid-community/src/columnResize/columnResizeService.ts\nvar ColumnResizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colResize\";\n  }\n  setColumnWidths(columnWidths, shiftKey, finished, source) {\n    const sets = [];\n    const {\n      colModel,\n      gos,\n      visibleCols\n    } = this.beans;\n    columnWidths.forEach(columnWidth => {\n      const col = colModel.getColDefCol(columnWidth.key) || colModel.getCol(columnWidth.key);\n      if (!col) {\n        return;\n      }\n      sets.push({\n        width: columnWidth.newWidth,\n        ratios: [1],\n        columns: [col]\n      });\n      const defaultIsShift = gos.get(\"colResizeDefault\") === \"shift\";\n      if (defaultIsShift) {\n        shiftKey = !shiftKey;\n      }\n      if (shiftKey) {\n        const otherCol = visibleCols.getColAfter(col);\n        if (!otherCol) {\n          return;\n        }\n        const widthDiff = col.getActualWidth() - columnWidth.newWidth;\n        const otherColWidth = otherCol.getActualWidth() + widthDiff;\n        sets.push({\n          width: otherColWidth,\n          ratios: [1],\n          columns: [otherCol]\n        });\n      }\n    });\n    if (sets.length === 0) {\n      return;\n    }\n    this.resizeColumnSets({\n      resizeSets: sets,\n      finished,\n      source\n    });\n  }\n  // method takes sets of columns and resizes them. either all sets will be resized, or nothing\n  // be resized. this is used for example when user tries to resize a group and holds shift key,\n  // then both the current group (grows), and the adjacent group (shrinks), will get resized,\n  // so that's two sets for this method.\n  resizeColumnSets(params) {\n    const {\n      resizeSets,\n      finished,\n      source\n    } = params;\n    const passMinMaxCheck = !resizeSets || resizeSets.every(columnResizeSet => checkMinAndMaxWidthsForSet(columnResizeSet));\n    if (!passMinMaxCheck) {\n      if (finished) {\n        const columns = resizeSets && resizeSets.length > 0 ? resizeSets[0].columns : null;\n        dispatchColumnResizedEvent(this.eventSvc, columns, finished, source);\n      }\n      return;\n    }\n    const changedCols = [];\n    const allResizedCols = [];\n    resizeSets.forEach(set => {\n      const {\n        width,\n        columns,\n        ratios\n      } = set;\n      const newWidths = {};\n      const finishedCols = {};\n      columns.forEach(col => allResizedCols.push(col));\n      let finishedColsGrew = true;\n      let loopCount = 0;\n      while (finishedColsGrew) {\n        loopCount++;\n        if (loopCount > 1e3) {\n          _error(31);\n          break;\n        }\n        finishedColsGrew = false;\n        const subsetCols = [];\n        let subsetRatioTotal = 0;\n        let pixelsToDistribute = width;\n        columns.forEach((col, index) => {\n          const thisColFinished = finishedCols[col.getId()];\n          if (thisColFinished) {\n            pixelsToDistribute -= newWidths[col.getId()];\n          } else {\n            subsetCols.push(col);\n            const ratioThisCol = ratios[index];\n            subsetRatioTotal += ratioThisCol;\n          }\n        });\n        const ratioScale = 1 / subsetRatioTotal;\n        subsetCols.forEach((col, index) => {\n          const lastCol = index === subsetCols.length - 1;\n          let colNewWidth;\n          if (lastCol) {\n            colNewWidth = pixelsToDistribute;\n          } else {\n            colNewWidth = Math.round(ratios[index] * width * ratioScale);\n            pixelsToDistribute -= colNewWidth;\n          }\n          const minWidth = col.getMinWidth();\n          const maxWidth = col.getMaxWidth();\n          if (colNewWidth < minWidth) {\n            colNewWidth = minWidth;\n            finishedCols[col.getId()] = true;\n            finishedColsGrew = true;\n          } else if (maxWidth > 0 && colNewWidth > maxWidth) {\n            colNewWidth = maxWidth;\n            finishedCols[col.getId()] = true;\n            finishedColsGrew = true;\n          }\n          newWidths[col.getId()] = colNewWidth;\n        });\n      }\n      columns.forEach(col => {\n        const newWidth = newWidths[col.getId()];\n        const actualWidth = col.getActualWidth();\n        if (actualWidth !== newWidth) {\n          col.setActualWidth(newWidth, source);\n          changedCols.push(col);\n        }\n      });\n    });\n    const atLeastOneColChanged = changedCols.length > 0;\n    let flexedCols = [];\n    if (atLeastOneColChanged) {\n      const {\n        colFlex,\n        visibleCols,\n        colViewport\n      } = this.beans;\n      flexedCols = colFlex?.refreshFlexedColumns({\n        resizingCols: allResizedCols,\n        skipSetLeft: true\n      }) ?? [];\n      visibleCols.setLeftValues(source);\n      visibleCols.updateBodyWidths();\n      colViewport.checkViewportColumns();\n    }\n    const colsForEvent = allResizedCols.concat(flexedCols);\n    if (atLeastOneColChanged || finished) {\n      dispatchColumnResizedEvent(this.eventSvc, colsForEvent, finished, source, flexedCols);\n    }\n  }\n  resizeHeader(column, delta, shiftKey) {\n    if (!column.isResizable()) {\n      return;\n    }\n    const actualWidth = column.getActualWidth();\n    const minWidth = column.getMinWidth();\n    const maxWidth = column.getMaxWidth();\n    const newWidth = Math.min(Math.max(actualWidth + delta, minWidth), maxWidth);\n    this.setColumnWidths([{\n      key: column,\n      newWidth\n    }], shiftKey, true, \"uiColumnResized\");\n  }\n  createResizeFeature(pinned, column, eResize, comp, ctrl) {\n    return new ResizeFeature(pinned, column, eResize, comp, ctrl);\n  }\n  createGroupResizeFeature(comp, eResize, pinned, columnGroup) {\n    return new GroupResizeFeature(comp, eResize, pinned, columnGroup);\n  }\n};\nfunction checkMinAndMaxWidthsForSet(columnResizeSet) {\n  const {\n    columns,\n    width\n  } = columnResizeSet;\n  let minWidthAccumulated = 0;\n  let maxWidthAccumulated = 0;\n  let maxWidthActive = true;\n  columns.forEach(col => {\n    const minWidth = col.getMinWidth();\n    minWidthAccumulated += minWidth || 0;\n    const maxWidth = col.getMaxWidth();\n    if (maxWidth > 0) {\n      maxWidthAccumulated += maxWidth;\n    } else {\n      maxWidthActive = false;\n    }\n  });\n  const minWidthPasses = width >= minWidthAccumulated;\n  const maxWidthPasses = !maxWidthActive || width <= maxWidthAccumulated;\n  return minWidthPasses && maxWidthPasses;\n}\n\n// packages/ag-grid-community/src/columnResize/columnResizeModule.ts\nvar ColumnResizeModule = {\n  moduleName: \"ColumnResize\",\n  version: VERSION,\n  beans: [ColumnResizeService],\n  apiFunctions: {\n    setColumnWidths\n  },\n  dependsOn: [HorizontalResizeModule, AutoWidthModule]\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/groupWidthFeature.ts\nvar GroupWidthFeature = class extends BeanStub {\n  constructor(comp, columnGroup) {\n    super();\n    // the children can change, we keep destroy functions related to listening to the children here\n    this.removeChildListenersFuncs = [];\n    this.columnGroup = columnGroup;\n    this.comp = comp;\n  }\n  postConstruct() {\n    this.addListenersToChildrenColumns();\n    this.addManagedListeners(this.columnGroup, {\n      displayedChildrenChanged: this.onDisplayedChildrenChanged.bind(this)\n    });\n    this.onWidthChanged();\n    this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));\n  }\n  addListenersToChildrenColumns() {\n    this.removeListenersOnChildrenColumns();\n    const widthChangedListener = this.onWidthChanged.bind(this);\n    this.columnGroup.getLeafColumns().forEach(column => {\n      column.__addEventListener(\"widthChanged\", widthChangedListener);\n      column.__addEventListener(\"visibleChanged\", widthChangedListener);\n      this.removeChildListenersFuncs.push(() => {\n        column.__removeEventListener(\"widthChanged\", widthChangedListener);\n        column.__removeEventListener(\"visibleChanged\", widthChangedListener);\n      });\n    });\n  }\n  removeListenersOnChildrenColumns() {\n    this.removeChildListenersFuncs.forEach(func => func());\n    this.removeChildListenersFuncs = [];\n  }\n  onDisplayedChildrenChanged() {\n    this.addListenersToChildrenColumns();\n    this.onWidthChanged();\n  }\n  onWidthChanged() {\n    const columnWidth = this.columnGroup.getActualWidth();\n    this.comp.setWidth(`${columnWidth}px`);\n    this.comp.toggleCss(\"ag-hidden\", columnWidth === 0);\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/headerGroupCellCtrl.ts\nvar HeaderGroupCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor() {\n    super(...arguments);\n    this.onSuppressColMoveChange = () => {\n      if (!this.isAlive() || this.isSuppressMoving()) {\n        this.removeDragSource();\n      } else {\n        if (!this.dragSource) {\n          this.setDragSource(this.eGui);\n        }\n      }\n    };\n  }\n  setComp(comp, eGui, eResize, eHeaderCompWrapper, compBean) {\n    const {\n      column,\n      beans\n    } = this;\n    const {\n      context,\n      colNames,\n      colHover,\n      rangeSvc,\n      colResize\n    } = beans;\n    this.comp = comp;\n    compBean = setupCompBean(this, context, compBean);\n    this.setGui(eGui, compBean);\n    this.displayName = colNames.getDisplayNameForColumnGroup(column, \"header\");\n    this.refreshHeaderStyles();\n    this.addClasses();\n    this.setupMovingCss(compBean);\n    this.setupExpandable(compBean);\n    this.setupTooltip();\n    this.setupAutoHeight({\n      wrapperElement: eHeaderCompWrapper,\n      compBean\n    });\n    this.setupUserComp();\n    this.addHeaderMouseListeners(compBean);\n    this.addManagedPropertyListener(\"groupHeaderHeight\", this.refreshMaxHeaderHeight.bind(this));\n    this.refreshMaxHeaderHeight();\n    const pinned = this.rowCtrl.pinned;\n    const leafCols = column.getProvidedColumnGroup().getLeafColumns();\n    colHover?.createHoverFeature(compBean, leafCols, eGui);\n    rangeSvc?.createRangeHighlightFeature(compBean, column, comp);\n    compBean.createManagedBean(new SetLeftFeature(column, eGui, beans));\n    compBean.createManagedBean(new GroupWidthFeature(comp, column));\n    if (colResize) {\n      this.resizeFeature = compBean.createManagedBean(colResize.createGroupResizeFeature(comp, eResize, pinned, column));\n    } else {\n      comp.setResizableDisplayed(false);\n    }\n    compBean.createManagedBean(new ManagedFocusFeature(eGui, {\n      shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n      onTabKeyDown: () => void 0,\n      handleKeyDown: this.handleKeyDown.bind(this),\n      onFocusIn: this.onFocusIn.bind(this)\n    }));\n    this.addHighlightListeners(compBean, leafCols);\n    compBean.addManagedPropertyListener(\"suppressMovableColumns\", this.onSuppressColMoveChange);\n    this.addResizeAndMoveKeyboardListeners(compBean);\n    compBean.addDestroyFunc(() => this.clearComponent());\n  }\n  getHeaderClassParams() {\n    const {\n      column,\n      beans\n    } = this;\n    const colDef = column.getDefinition();\n    return _addGridCommonParams(beans.gos, {\n      colDef,\n      columnGroup: column,\n      floatingFilter: false\n    });\n  }\n  refreshMaxHeaderHeight() {\n    const {\n      gos,\n      comp\n    } = this;\n    const groupHeaderHeight = gos.get(\"groupHeaderHeight\");\n    if (groupHeaderHeight != null) {\n      if (groupHeaderHeight === 0) {\n        comp.setHeaderWrapperHidden(true);\n      } else {\n        comp.setHeaderWrapperMaxHeight(groupHeaderHeight);\n      }\n    } else {\n      comp.setHeaderWrapperHidden(false);\n      comp.setHeaderWrapperMaxHeight(null);\n    }\n  }\n  addHighlightListeners(compBean, columns) {\n    if (!this.beans.gos.get(\"suppressMoveWhenColumnDragging\")) {\n      return;\n    }\n    for (const column of columns) {\n      compBean.addManagedListeners(column, {\n        headerHighlightChanged: this.onLeafColumnHighlightChanged.bind(this, column)\n      });\n    }\n  }\n  onLeafColumnHighlightChanged(column) {\n    const displayedColumns = this.column.getDisplayedLeafColumns();\n    const isFirst = displayedColumns[0] === column;\n    const isLast = _last(displayedColumns) === column;\n    if (!isFirst && !isLast) {\n      return;\n    }\n    const highlighted = column.getHighlighted();\n    const isColumnMoveAtThisLevel = !!this.rowCtrl.getHeaderCellCtrls().find(ctrl => {\n      return ctrl.column.isMoving();\n    });\n    let beforeOn = false;\n    let afterOn = false;\n    if (isColumnMoveAtThisLevel) {\n      const isRtl = this.beans.gos.get(\"enableRtl\");\n      const isHighlightAfter = highlighted === 1 /* After */;\n      const isHighlightBefore = highlighted === 0 /* Before */;\n      if (isFirst) {\n        if (isRtl) {\n          afterOn = isHighlightAfter;\n        } else {\n          beforeOn = isHighlightBefore;\n        }\n      }\n      if (isLast) {\n        if (isRtl) {\n          beforeOn = isHighlightBefore;\n        } else {\n          afterOn = isHighlightAfter;\n        }\n      }\n    }\n    this.comp.toggleCss(\"ag-header-highlight-before\", beforeOn);\n    this.comp.toggleCss(\"ag-header-highlight-after\", afterOn);\n  }\n  resizeHeader(delta, shiftKey) {\n    const {\n      resizeFeature\n    } = this;\n    if (!resizeFeature) {\n      return;\n    }\n    const initialValues = resizeFeature.getInitialValues(shiftKey);\n    resizeFeature.resizeColumns(initialValues, initialValues.resizeStartWidth + delta, \"uiColumnResized\", true);\n  }\n  resizeLeafColumnsToFit(source) {\n    this.resizeFeature?.resizeLeafColumnsToFit(source);\n  }\n  setupUserComp() {\n    const {\n      colGroupSvc,\n      userCompFactory,\n      gos,\n      enterpriseMenuFactory\n    } = this.beans;\n    const columnGroup = this.column;\n    const providedColumnGroup = columnGroup.getProvidedColumnGroup();\n    const params = _addGridCommonParams(gos, {\n      displayName: this.displayName,\n      columnGroup,\n      setExpanded: expanded => {\n        colGroupSvc.setColumnGroupOpened(providedColumnGroup, expanded, \"gridInitializing\");\n      },\n      setTooltip: (value, shouldDisplayTooltip) => {\n        gos.assertModuleRegistered(\"Tooltip\", 3);\n        this.setupTooltip(value, shouldDisplayTooltip);\n      },\n      showColumnMenu: (buttonElement, onClosedCallback) => enterpriseMenuFactory?.showMenuAfterButtonClick(providedColumnGroup, buttonElement, \"columnMenu\", onClosedCallback),\n      showColumnMenuAfterMouseClick: (mouseEvent, onClosedCallback) => enterpriseMenuFactory?.showMenuAfterMouseEvent(providedColumnGroup, mouseEvent, \"columnMenu\", onClosedCallback),\n      eGridHeader: this.eGui\n    });\n    const compDetails = _getHeaderGroupCompDetails(userCompFactory, params);\n    if (compDetails) {\n      this.comp.setUserCompDetails(compDetails);\n    }\n  }\n  addHeaderMouseListeners(compBean) {\n    const listener = e => this.handleMouseOverChange(e.type === \"mouseenter\");\n    const clickListener = () => this.dispatchColumnMouseEvent(\"columnHeaderClicked\", this.column.getProvidedColumnGroup());\n    const contextMenuListener = event => this.handleContextMenuMouseEvent(event, void 0, this.column.getProvidedColumnGroup());\n    compBean.addManagedListeners(this.eGui, {\n      mouseenter: listener,\n      mouseleave: listener,\n      click: clickListener,\n      contextmenu: contextMenuListener\n    });\n  }\n  handleMouseOverChange(isMouseOver) {\n    this.eventSvc.dispatchEvent({\n      type: isMouseOver ? \"columnHeaderMouseOver\" : \"columnHeaderMouseLeave\",\n      column: this.column.getProvidedColumnGroup()\n    });\n  }\n  setupTooltip(value, shouldDisplayTooltip) {\n    this.tooltipFeature = this.beans.tooltipSvc?.setupHeaderGroupTooltip(this.tooltipFeature, this, value, shouldDisplayTooltip);\n  }\n  setupExpandable(compBean) {\n    const providedColGroup = this.column.getProvidedColumnGroup();\n    this.refreshExpanded();\n    const listener = this.refreshExpanded.bind(this);\n    compBean.addManagedListeners(providedColGroup, {\n      expandedChanged: listener,\n      expandableChanged: listener\n    });\n  }\n  refreshExpanded() {\n    const {\n      column\n    } = this;\n    this.expandable = column.isExpandable();\n    const expanded = column.isExpanded();\n    if (this.expandable) {\n      this.comp.setAriaExpanded(expanded ? \"true\" : \"false\");\n    } else {\n      this.comp.setAriaExpanded(void 0);\n    }\n    this.refreshHeaderStyles();\n  }\n  addClasses() {\n    const {\n      column\n    } = this;\n    const colGroupDef = column.getColGroupDef();\n    const classes = _getHeaderClassesFromColDef(colGroupDef, this.gos, null, column);\n    if (column.isPadding()) {\n      classes.push(\"ag-header-group-cell-no-group\");\n      const leafCols = column.getLeafColumns();\n      if (leafCols.every(col => col.isSpanHeaderHeight())) {\n        classes.push(\"ag-header-span-height\");\n      }\n    } else {\n      classes.push(\"ag-header-group-cell-with-group\");\n      if (colGroupDef?.wrapHeaderText) {\n        classes.push(\"ag-header-cell-wrap-text\");\n      }\n    }\n    classes.forEach(c => this.comp.toggleCss(c, true));\n  }\n  setupMovingCss(compBean) {\n    const {\n      column\n    } = this;\n    const providedColumnGroup = column.getProvidedColumnGroup();\n    const leafColumns = providedColumnGroup.getLeafColumns();\n    const listener = () => this.comp.toggleCss(\"ag-header-cell-moving\", column.isMoving());\n    leafColumns.forEach(col => {\n      compBean.addManagedListeners(col, {\n        movingChanged: listener\n      });\n    });\n    listener();\n  }\n  onFocusIn(e) {\n    if (!this.eGui.contains(e.relatedTarget)) {\n      this.focusThis();\n    }\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    if (!this.expandable || !wrapperHasFocus) {\n      return;\n    }\n    if (e.key === KeyCode.ENTER) {\n      const column = this.column;\n      const newExpandedValue = !column.isExpanded();\n      this.beans.colGroupSvc.setColumnGroupOpened(column.getProvidedColumnGroup(), newExpandedValue, \"uiColumnExpanded\");\n    }\n  }\n  // unlike columns, this will only get called once, as we don't react on props on column groups\n  // (we will always destroy and recreate this comp if something changes)\n  setDragSource(eHeaderGroup) {\n    if (!this.isAlive() || this.isSuppressMoving()) {\n      return;\n    }\n    this.removeDragSource();\n    if (!eHeaderGroup) {\n      return;\n    }\n    this.dragSource = this.beans.colMoves?.setDragSourceForHeader(eHeaderGroup, this.column, this.displayName) ?? null;\n  }\n  isSuppressMoving() {\n    return this.gos.get(\"suppressMovableColumns\") || this.column.getLeafColumns().some(column => column.getColDef().suppressMovable || column.getColDef().lockPosition);\n  }\n  destroy() {\n    this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnGroups/columnGroupApi.ts\nfunction setColumnGroupOpened(beans, group, newValue) {\n  beans.colGroupSvc?.setColumnGroupOpened(group, newValue, \"api\");\n}\nfunction getColumnGroup(beans, name, instanceId) {\n  return beans.colGroupSvc?.getColumnGroup(name, instanceId) ?? null;\n}\nfunction getProvidedColumnGroup(beans, name) {\n  return beans.colGroupSvc?.getProvidedColGroup(name) ?? null;\n}\nfunction getDisplayNameForColumnGroup(beans, columnGroup, location) {\n  return beans.colNames.getDisplayNameForColumnGroup(columnGroup, location) || \"\";\n}\nfunction getColumnGroupState(beans) {\n  return beans.colGroupSvc?.getColumnGroupState() ?? [];\n}\nfunction setColumnGroupState(beans, stateItems) {\n  beans.colGroupSvc?.setColumnGroupState(stateItems, \"api\");\n}\nfunction resetColumnGroupState(beans) {\n  beans.colGroupSvc?.resetColumnGroupState(\"api\");\n}\nfunction getLeftDisplayedColumnGroups(beans) {\n  return beans.visibleCols.treeLeft;\n}\nfunction getCenterDisplayedColumnGroups(beans) {\n  return beans.visibleCols.treeCenter;\n}\nfunction getRightDisplayedColumnGroups(beans) {\n  return beans.visibleCols.treeRight;\n}\nfunction getAllDisplayedColumnGroups(beans) {\n  return beans.visibleCols.getAllTrees();\n}\n\n// packages/ag-grid-community/src/columns/visibleColsService.ts\nfunction _removeAllFromUnorderedArray(array, toRemove) {\n  for (let i = 0; i < toRemove.length; i++) {\n    const index = array.indexOf(toRemove[i]);\n    if (index >= 0) {\n      array[index] = array[array.length - 1];\n      array.pop();\n    }\n  }\n}\nvar VisibleColsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"visibleCols\";\n    // for fast lookup, to see if a column or group is still visible\n    this.colsAndGroupsMap = {};\n    // leave level columns of the displayed trees\n    this.leftCols = [];\n    this.rightCols = [];\n    this.centerCols = [];\n    // all three lists above combined\n    this.allCols = [];\n    this.headerGroupRowCount = 0;\n    // used by:\n    // + angularGrid -> for setting body width\n    // + rowController -> setting main row widths (when inserting and resizing)\n    // need to cache this\n    this.bodyWidth = 0;\n    this.leftWidth = 0;\n    this.rightWidth = 0;\n    this.isBodyWidthDirty = true;\n  }\n  refresh(source, skipTreeBuild = false) {\n    const {\n      colFlex,\n      colModel,\n      colGroupSvc,\n      colViewport,\n      selectionColSvc\n    } = this.beans;\n    if (!skipTreeBuild) {\n      this.buildTrees(colModel, colGroupSvc);\n    }\n    colGroupSvc?.updateOpenClosedVisibility();\n    this.leftCols = pickDisplayedCols(this.treeLeft);\n    this.centerCols = pickDisplayedCols(this.treeCenter);\n    this.rightCols = pickDisplayedCols(this.treeRight);\n    selectionColSvc?.refreshVisibility(this.leftCols, this.centerCols, this.rightCols);\n    this.joinColsAriaOrder(colModel);\n    this.joinCols();\n    this.headerGroupRowCount = this.getHeaderRowCount();\n    this.setLeftValues(source);\n    this.autoHeightCols = this.allCols.filter(col => col.isAutoHeight());\n    colFlex?.refreshFlexedColumns();\n    this.updateBodyWidths();\n    this.setFirstRightAndLastLeftPinned(colModel, this.leftCols, this.rightCols, source);\n    colViewport.checkViewportColumns(false);\n    this.eventSvc.dispatchEvent({\n      type: \"displayedColumnsChanged\",\n      source\n    });\n  }\n  getHeaderRowCount() {\n    if (!this.gos.get(\"hidePaddedHeaderRows\")) {\n      return this.beans.colModel.cols.treeDepth;\n    }\n    let headerGroupRowCount = 0;\n    for (const col of this.allCols) {\n      let parent = col.getParent();\n      while (parent) {\n        if (!parent.isPadding()) {\n          const level = parent.getProvidedColumnGroup().getLevel() + 1;\n          if (level > headerGroupRowCount) {\n            headerGroupRowCount = level;\n          }\n          break;\n        }\n        parent = parent.getParent();\n      }\n    }\n    return headerGroupRowCount;\n  }\n  // after setColumnWidth or updateGroupsAndPresentedCols\n  updateBodyWidths() {\n    const newBodyWidth = getWidthOfColsInList(this.centerCols);\n    const newLeftWidth = getWidthOfColsInList(this.leftCols);\n    const newRightWidth = getWidthOfColsInList(this.rightCols);\n    this.isBodyWidthDirty = this.bodyWidth !== newBodyWidth;\n    const atLeastOneChanged = this.bodyWidth !== newBodyWidth || this.leftWidth !== newLeftWidth || this.rightWidth !== newRightWidth;\n    if (atLeastOneChanged) {\n      this.bodyWidth = newBodyWidth;\n      this.leftWidth = newLeftWidth;\n      this.rightWidth = newRightWidth;\n      this.eventSvc.dispatchEvent({\n        type: \"columnContainerWidthChanged\"\n      });\n      this.eventSvc.dispatchEvent({\n        type: \"displayedColumnsWidthChanged\"\n      });\n    }\n  }\n  // sets the left pixel position of each column\n  setLeftValues(source) {\n    this.setLeftValuesOfCols(source);\n    this.setLeftValuesOfGroups();\n  }\n  setFirstRightAndLastLeftPinned(colModel, leftCols, rightCols, source) {\n    let lastLeft;\n    let firstRight;\n    if (this.gos.get(\"enableRtl\")) {\n      lastLeft = leftCols ? leftCols[0] : null;\n      firstRight = rightCols ? _last(rightCols) : null;\n    } else {\n      lastLeft = leftCols ? _last(leftCols) : null;\n      firstRight = rightCols ? rightCols[0] : null;\n    }\n    colModel.getCols().forEach(col => {\n      col.setLastLeftPinned(col === lastLeft, source);\n      col.setFirstRightPinned(col === firstRight, source);\n    });\n  }\n  buildTrees(colModel, columnGroupSvc) {\n    const cols = colModel.getColsToShow();\n    const leftCols = cols.filter(col => col.getPinned() == \"left\");\n    const rightCols = cols.filter(col => col.getPinned() == \"right\");\n    const centerCols = cols.filter(col => col.getPinned() != \"left\" && col.getPinned() != \"right\");\n    const idCreator = new GroupInstanceIdCreator();\n    const createGroups = params => {\n      return columnGroupSvc ? columnGroupSvc.createColumnGroups(params) : params.columns;\n    };\n    this.treeLeft = createGroups({\n      columns: leftCols,\n      idCreator,\n      pinned: \"left\",\n      oldDisplayedGroups: this.treeLeft\n    });\n    this.treeRight = createGroups({\n      columns: rightCols,\n      idCreator,\n      pinned: \"right\",\n      oldDisplayedGroups: this.treeRight\n    });\n    this.treeCenter = createGroups({\n      columns: centerCols,\n      idCreator,\n      pinned: null,\n      oldDisplayedGroups: this.treeCenter\n    });\n    this.updateColsAndGroupsMap();\n  }\n  clear() {\n    this.leftCols = [];\n    this.rightCols = [];\n    this.centerCols = [];\n    this.allCols = [];\n    this.ariaOrderColumns = [];\n  }\n  joinColsAriaOrder(colModel) {\n    const allColumns = colModel.getCols();\n    const pinnedLeft = [];\n    const center = [];\n    const pinnedRight = [];\n    for (const col of allColumns) {\n      const pinned = col.getPinned();\n      if (!pinned) {\n        center.push(col);\n      } else if (pinned === true || pinned === \"left\") {\n        pinnedLeft.push(col);\n      } else {\n        pinnedRight.push(col);\n      }\n    }\n    this.ariaOrderColumns = pinnedLeft.concat(center).concat(pinnedRight);\n  }\n  getAriaColIndex(colOrGroup) {\n    let col;\n    if (isColumnGroup(colOrGroup)) {\n      col = colOrGroup.getLeafColumns()[0];\n    } else {\n      col = colOrGroup;\n    }\n    return this.ariaOrderColumns.indexOf(col) + 1;\n  }\n  setLeftValuesOfGroups() {\n    [this.treeLeft, this.treeRight, this.treeCenter].forEach(columns => {\n      columns.forEach(column => {\n        if (isColumnGroup(column)) {\n          const columnGroup = column;\n          columnGroup.checkLeft();\n        }\n      });\n    });\n  }\n  setLeftValuesOfCols(source) {\n    const {\n      colModel\n    } = this.beans;\n    const primaryCols = colModel.getColDefCols();\n    if (!primaryCols) {\n      return;\n    }\n    const allColumns = colModel.getCols().slice(0);\n    const doingRtl = this.gos.get(\"enableRtl\");\n    [this.leftCols, this.rightCols, this.centerCols].forEach(columns => {\n      if (doingRtl) {\n        let left = getWidthOfColsInList(columns);\n        columns.forEach(column => {\n          left -= column.getActualWidth();\n          column.setLeft(left, source);\n        });\n      } else {\n        let left = 0;\n        columns.forEach(column => {\n          column.setLeft(left, source);\n          left += column.getActualWidth();\n        });\n      }\n      _removeAllFromUnorderedArray(allColumns, columns);\n    });\n    allColumns.forEach(column => {\n      column.setLeft(null, source);\n    });\n  }\n  joinCols() {\n    if (this.gos.get(\"enableRtl\")) {\n      this.allCols = this.rightCols.concat(this.centerCols).concat(this.leftCols);\n    } else {\n      this.allCols = this.leftCols.concat(this.centerCols).concat(this.rightCols);\n    }\n  }\n  getAllTrees() {\n    if (this.treeLeft && this.treeRight && this.treeCenter) {\n      return this.treeLeft.concat(this.treeCenter).concat(this.treeRight);\n    }\n    return null;\n  }\n  // gridPanel -> ensureColumnVisible\n  isColDisplayed(column) {\n    return this.allCols.indexOf(column) >= 0;\n  }\n  getLeftColsForRow(rowNode) {\n    const {\n      leftCols,\n      beans: {\n        colModel\n      }\n    } = this;\n    const colSpanActive = colModel.colSpanActive;\n    if (!colSpanActive) {\n      return leftCols;\n    }\n    return this.getColsForRow(rowNode, leftCols);\n  }\n  getRightColsForRow(rowNode) {\n    const {\n      rightCols,\n      beans: {\n        colModel\n      }\n    } = this;\n    const colSpanActive = colModel.colSpanActive;\n    if (!colSpanActive) {\n      return rightCols;\n    }\n    return this.getColsForRow(rowNode, rightCols);\n  }\n  getColsForRow(rowNode, displayedColumns, filterCallback, emptySpaceBeforeColumn) {\n    const result = [];\n    let lastConsideredCol = null;\n    for (let i = 0; i < displayedColumns.length; i++) {\n      const col = displayedColumns[i];\n      const maxAllowedColSpan = displayedColumns.length - i;\n      const colSpan = Math.min(col.getColSpan(rowNode), maxAllowedColSpan);\n      const columnsToCheckFilter = [col];\n      if (colSpan > 1) {\n        const colsToRemove = colSpan - 1;\n        for (let j = 1; j <= colsToRemove; j++) {\n          columnsToCheckFilter.push(displayedColumns[i + j]);\n        }\n        i += colsToRemove;\n      }\n      let filterPasses;\n      if (filterCallback) {\n        filterPasses = false;\n        columnsToCheckFilter.forEach(colForFilter => {\n          if (filterCallback(colForFilter)) {\n            filterPasses = true;\n          }\n        });\n      } else {\n        filterPasses = true;\n      }\n      if (filterPasses) {\n        if (result.length === 0 && lastConsideredCol) {\n          const gapBeforeColumn = emptySpaceBeforeColumn ? emptySpaceBeforeColumn(col) : false;\n          if (gapBeforeColumn) {\n            result.push(lastConsideredCol);\n          }\n        }\n        result.push(col);\n      }\n      lastConsideredCol = col;\n    }\n    return result;\n  }\n  getContainerWidth(pinned) {\n    switch (pinned) {\n      case \"left\":\n        return this.leftWidth;\n      case \"right\":\n        return this.rightWidth;\n      default:\n        return this.bodyWidth;\n    }\n  }\n  getColBefore(col) {\n    const allDisplayedColumns = this.allCols;\n    const oldIndex = allDisplayedColumns.indexOf(col);\n    if (oldIndex > 0) {\n      return allDisplayedColumns[oldIndex - 1];\n    }\n    return null;\n  }\n  isPinningLeft() {\n    return this.leftCols.length > 0;\n  }\n  isPinningRight() {\n    return this.rightCols.length > 0;\n  }\n  updateColsAndGroupsMap() {\n    this.colsAndGroupsMap = {};\n    const func = child => {\n      this.colsAndGroupsMap[child.getUniqueId()] = child;\n    };\n    depthFirstAllColumnTreeSearch(this.treeCenter, false, func);\n    depthFirstAllColumnTreeSearch(this.treeLeft, false, func);\n    depthFirstAllColumnTreeSearch(this.treeRight, false, func);\n  }\n  isVisible(item) {\n    const fromMap = this.colsAndGroupsMap[item.getUniqueId()];\n    return fromMap === item;\n  }\n  getFirstColumn() {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const queryOrder = [\"leftCols\", \"centerCols\", \"rightCols\"];\n    if (isRtl) {\n      queryOrder.reverse();\n    }\n    for (let i = 0; i < queryOrder.length; i++) {\n      const container = this[queryOrder[i]];\n      if (container.length) {\n        return isRtl ? _last(container) : container[0];\n      }\n    }\n    return null;\n  }\n  // used by:\n  // + rowRenderer -> for navigation\n  getColAfter(col) {\n    const allDisplayedColumns = this.allCols;\n    const oldIndex = allDisplayedColumns.indexOf(col);\n    if (oldIndex < allDisplayedColumns.length - 1) {\n      return allDisplayedColumns[oldIndex + 1];\n    }\n    return null;\n  }\n  // used by:\n  // + angularGrid -> setting pinned body width\n  // note: this should be cached\n  getColsLeftWidth() {\n    return getWidthOfColsInList(this.leftCols);\n  }\n  // note: this should be cached\n  getDisplayedColumnsRightWidth() {\n    return getWidthOfColsInList(this.rightCols);\n  }\n  isColAtEdge(col, edge) {\n    const allColumns = this.allCols;\n    if (!allColumns.length) {\n      return false;\n    }\n    const isFirst = edge === \"first\";\n    let columnToCompare;\n    if (isColumnGroup(col)) {\n      const leafColumns = col.getDisplayedLeafColumns();\n      if (!leafColumns.length) {\n        return false;\n      }\n      columnToCompare = isFirst ? leafColumns[0] : _last(leafColumns);\n    } else {\n      columnToCompare = col;\n    }\n    return (isFirst ? allColumns[0] : _last(allColumns)) === columnToCompare;\n  }\n};\nfunction depthFirstAllColumnTreeSearch(tree, useDisplayedChildren, callback) {\n  if (!tree) {\n    return;\n  }\n  for (let i = 0; i < tree.length; i++) {\n    const child = tree[i];\n    if (isColumnGroup(child)) {\n      const childTree = useDisplayedChildren ? child.getDisplayedChildren() : child.getChildren();\n      depthFirstAllColumnTreeSearch(childTree, useDisplayedChildren, callback);\n    }\n    callback(child);\n  }\n}\nfunction pickDisplayedCols(tree) {\n  const res = [];\n  depthFirstAllColumnTreeSearch(tree, true, child => {\n    if (isColumn(child)) {\n      res.push(child);\n    }\n  });\n  return res;\n}\n\n// packages/ag-grid-community/src/columns/columnGroups/columnGroupService.ts\nvar ColumnGroupService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colGroupSvc\";\n  }\n  getColumnGroupState() {\n    const columnGroupState = [];\n    const gridBalancedTree = this.beans.colModel.getColTree();\n    depthFirstOriginalTreeSearch(null, gridBalancedTree, node => {\n      if (isProvidedColumnGroup(node)) {\n        columnGroupState.push({\n          groupId: node.getGroupId(),\n          open: node.isExpanded()\n        });\n      }\n    });\n    return columnGroupState;\n  }\n  resetColumnGroupState(source) {\n    const primaryColumnTree = this.beans.colModel.getColDefColTree();\n    if (!primaryColumnTree) {\n      return;\n    }\n    const stateItems = [];\n    depthFirstOriginalTreeSearch(null, primaryColumnTree, child => {\n      if (isProvidedColumnGroup(child)) {\n        const colGroupDef = child.getColGroupDef();\n        const groupState = {\n          groupId: child.getGroupId(),\n          open: !colGroupDef ? void 0 : colGroupDef.openByDefault\n        };\n        stateItems.push(groupState);\n      }\n    });\n    this.setColumnGroupState(stateItems, source);\n  }\n  setColumnGroupState(stateItems, source) {\n    const {\n      colModel,\n      colAnimation,\n      visibleCols,\n      eventSvc\n    } = this.beans;\n    const gridBalancedTree = colModel.getColTree();\n    if (!gridBalancedTree.length) {\n      return;\n    }\n    colAnimation?.start();\n    const impactedGroups = [];\n    stateItems.forEach(stateItem => {\n      const groupKey = stateItem.groupId;\n      const newValue = stateItem.open;\n      const providedColumnGroup = this.getProvidedColGroup(groupKey);\n      if (!providedColumnGroup) {\n        return;\n      }\n      if (providedColumnGroup.isExpanded() === newValue) {\n        return;\n      }\n      providedColumnGroup.setExpanded(newValue);\n      impactedGroups.push(providedColumnGroup);\n    });\n    visibleCols.refresh(source, true);\n    if (impactedGroups.length) {\n      eventSvc.dispatchEvent({\n        type: \"columnGroupOpened\",\n        columnGroup: impactedGroups.length === 1 ? impactedGroups[0] : void 0,\n        columnGroups: impactedGroups\n      });\n    }\n    colAnimation?.finish();\n  }\n  // called by headerRenderer - when a header is opened or closed\n  setColumnGroupOpened(key, newValue, source) {\n    let keyAsString;\n    if (isProvidedColumnGroup(key)) {\n      keyAsString = key.getId();\n    } else {\n      keyAsString = key || \"\";\n    }\n    this.setColumnGroupState([{\n      groupId: keyAsString,\n      open: newValue\n    }], source);\n  }\n  getProvidedColGroup(key) {\n    let res = null;\n    depthFirstOriginalTreeSearch(null, this.beans.colModel.getColTree(), node => {\n      if (isProvidedColumnGroup(node)) {\n        if (node.getId() === key) {\n          res = node;\n        }\n      }\n    });\n    return res;\n  }\n  getGroupAtDirection(columnGroup, direction) {\n    const requiredLevel = columnGroup.getProvidedColumnGroup().getLevel() + columnGroup.getPaddingLevel();\n    const colGroupLeafColumns = columnGroup.getDisplayedLeafColumns();\n    const col = direction === \"After\" ? _last(colGroupLeafColumns) : colGroupLeafColumns[0];\n    const getDisplayColMethod = `getCol${direction}`;\n    while (true) {\n      const column = this.beans.visibleCols[getDisplayColMethod](col);\n      if (!column) {\n        return null;\n      }\n      const groupPointer = this.getColGroupAtLevel(column, requiredLevel);\n      if (groupPointer !== columnGroup) {\n        return groupPointer;\n      }\n    }\n  }\n  getColGroupAtLevel(column, level) {\n    let groupPointer = column.getParent();\n    let originalGroupLevel;\n    let groupPointerLevel;\n    while (true) {\n      const groupPointerProvidedColumnGroup = groupPointer.getProvidedColumnGroup();\n      originalGroupLevel = groupPointerProvidedColumnGroup.getLevel();\n      groupPointerLevel = groupPointer.getPaddingLevel();\n      if (originalGroupLevel + groupPointerLevel <= level) {\n        break;\n      }\n      groupPointer = groupPointer.getParent();\n    }\n    return groupPointer;\n  }\n  updateOpenClosedVisibility() {\n    const allColumnGroups = this.beans.visibleCols.getAllTrees();\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, child => {\n      if (isColumnGroup(child)) {\n        child.calculateDisplayedColumns();\n      }\n    });\n  }\n  // returns the group with matching colId and instanceId. If instanceId is missing,\n  // matches only on the colId.\n  getColumnGroup(colId, partId) {\n    if (!colId) {\n      return null;\n    }\n    if (isColumnGroup(colId)) {\n      return colId;\n    }\n    const allColumnGroups = this.beans.visibleCols.getAllTrees();\n    const checkPartId = typeof partId === \"number\";\n    let result = null;\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, child => {\n      if (isColumnGroup(child)) {\n        const columnGroup = child;\n        let matched;\n        if (checkPartId) {\n          matched = colId === columnGroup.getGroupId() && partId === columnGroup.getPartId();\n        } else {\n          matched = colId === columnGroup.getGroupId();\n        }\n        if (matched) {\n          result = columnGroup;\n        }\n      }\n    });\n    return result;\n  }\n  createColumnGroups(params) {\n    const {\n      columns,\n      idCreator,\n      pinned,\n      oldDisplayedGroups,\n      isStandaloneStructure\n    } = params;\n    const oldColumnsMapped = this.mapOldGroupsById(oldDisplayedGroups);\n    const topLevelResultCols = [];\n    let groupsOrColsAtCurrentLevel = columns;\n    while (groupsOrColsAtCurrentLevel.length) {\n      const currentlyIterating = groupsOrColsAtCurrentLevel;\n      groupsOrColsAtCurrentLevel = [];\n      let lastGroupedColIdx = 0;\n      const createGroupToIndex = to => {\n        const from = lastGroupedColIdx;\n        lastGroupedColIdx = to;\n        const previousNode = currentlyIterating[from];\n        const previousNodeProvided = isColumnGroup(previousNode) ? previousNode.getProvidedColumnGroup() : previousNode;\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\n        if (previousNodeParent == null) {\n          for (let i = from; i < to; i++) {\n            topLevelResultCols.push(currentlyIterating[i]);\n          }\n          return;\n        }\n        const newGroup = this.createColumnGroup(previousNodeParent, idCreator, oldColumnsMapped, pinned, isStandaloneStructure);\n        for (let i = from; i < to; i++) {\n          newGroup.addChild(currentlyIterating[i]);\n        }\n        groupsOrColsAtCurrentLevel.push(newGroup);\n      };\n      for (let i = 1; i < currentlyIterating.length; i++) {\n        const thisNode = currentlyIterating[i];\n        const thisNodeProvided = isColumnGroup(thisNode) ? thisNode.getProvidedColumnGroup() : thisNode;\n        const thisNodeParent = thisNodeProvided.getOriginalParent();\n        const previousNode = currentlyIterating[lastGroupedColIdx];\n        const previousNodeProvided = isColumnGroup(previousNode) ? previousNode.getProvidedColumnGroup() : previousNode;\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\n        if (thisNodeParent !== previousNodeParent) {\n          createGroupToIndex(i);\n        }\n      }\n      if (lastGroupedColIdx < currentlyIterating.length) {\n        createGroupToIndex(currentlyIterating.length);\n      }\n    }\n    if (!isStandaloneStructure) {\n      this.setupParentsIntoCols(topLevelResultCols, null);\n    }\n    return topLevelResultCols;\n  }\n  createProvidedColumnGroup(primaryColumns, colGroupDef, level, existingColumns, columnKeyCreator, existingGroups, source) {\n    const groupId = columnKeyCreator.getUniqueKey(colGroupDef.groupId || null, null);\n    const colGroupDefMerged = createMergedColGroupDef(this.beans, colGroupDef, groupId);\n    const providedGroup = new AgProvidedColumnGroup(colGroupDefMerged, groupId, false, level);\n    this.createBean(providedGroup);\n    const existingGroupAndIndex = this.findExistingGroup(colGroupDef, existingGroups);\n    if (existingGroupAndIndex) {\n      existingGroups.splice(existingGroupAndIndex.idx, 1);\n    }\n    const existingGroup = existingGroupAndIndex?.group;\n    if (existingGroup) {\n      providedGroup.setExpanded(existingGroup.isExpanded());\n    }\n    const children = _recursivelyCreateColumns(this.beans, colGroupDefMerged.children, level + 1, primaryColumns, existingColumns, columnKeyCreator, existingGroups, source);\n    providedGroup.setChildren(children);\n    return providedGroup;\n  }\n  balanceColumnTree(unbalancedTree, currentDepth, columnDepth, columnKeyCreator) {\n    const result = [];\n    for (let i = 0; i < unbalancedTree.length; i++) {\n      const child = unbalancedTree[i];\n      if (isProvidedColumnGroup(child)) {\n        const originalGroup = child;\n        const newChildren = this.balanceColumnTree(originalGroup.getChildren(), currentDepth + 1, columnDepth, columnKeyCreator);\n        originalGroup.setChildren(newChildren);\n        result.push(originalGroup);\n      } else {\n        let firstPaddedGroup;\n        let currentPaddedGroup;\n        for (let j = currentDepth; j < columnDepth; j++) {\n          const newColId = columnKeyCreator.getUniqueKey(null, null);\n          const colGroupDefMerged = createMergedColGroupDef(this.beans, null, newColId);\n          const paddedGroup = new AgProvidedColumnGroup(colGroupDefMerged, newColId, true, j);\n          this.createBean(paddedGroup);\n          if (currentPaddedGroup) {\n            currentPaddedGroup.setChildren([paddedGroup]);\n          }\n          currentPaddedGroup = paddedGroup;\n          if (!firstPaddedGroup) {\n            firstPaddedGroup = currentPaddedGroup;\n          }\n        }\n        if (firstPaddedGroup && currentPaddedGroup) {\n          result.push(firstPaddedGroup);\n          const hasGroups = unbalancedTree.some(leaf => isProvidedColumnGroup(leaf));\n          if (hasGroups) {\n            currentPaddedGroup.setChildren([child]);\n            continue;\n          } else {\n            currentPaddedGroup.setChildren(unbalancedTree);\n            break;\n          }\n        }\n        result.push(child);\n      }\n    }\n    return result;\n  }\n  findDepth(balancedColumnTree) {\n    let depth = 0;\n    let pointer = balancedColumnTree;\n    while (pointer && pointer[0] && isProvidedColumnGroup(pointer[0])) {\n      depth++;\n      pointer = pointer[0].getChildren();\n    }\n    return depth;\n  }\n  findMaxDepth(treeChildren, depth) {\n    let maxDepthThisLevel = depth;\n    for (let i = 0; i < treeChildren.length; i++) {\n      const abstractColumn = treeChildren[i];\n      if (isProvidedColumnGroup(abstractColumn)) {\n        const originalGroup = abstractColumn;\n        const newDepth = this.findMaxDepth(originalGroup.getChildren(), depth + 1);\n        if (maxDepthThisLevel < newDepth) {\n          maxDepthThisLevel = newDepth;\n        }\n      }\n    }\n    return maxDepthThisLevel;\n  }\n  /**\n   * Inserts dummy group columns in the hierarchy above auto-generated columns\n   * in order to ensure auto-generated columns are leaf nodes (and therefore are\n   * displayed correctly)\n   */\n  balanceTreeForAutoCols(autoCols, depth) {\n    const tree = [];\n    autoCols.forEach(col => {\n      let nextChild = col;\n      for (let i = depth - 1; i >= 0; i--) {\n        const autoGroup = new AgProvidedColumnGroup(null, `FAKE_PATH_${col.getId()}}_${i}`, true, i);\n        this.createBean(autoGroup);\n        autoGroup.setChildren([nextChild]);\n        nextChild.originalParent = autoGroup;\n        nextChild = autoGroup;\n      }\n      if (depth === 0) {\n        col.originalParent = null;\n      }\n      tree.push(nextChild);\n    });\n    return tree;\n  }\n  findExistingGroup(newGroupDef, existingGroups) {\n    const newHasId = newGroupDef.groupId != null;\n    if (!newHasId) {\n      return void 0;\n    }\n    for (let i = 0; i < existingGroups.length; i++) {\n      const existingGroup = existingGroups[i];\n      const existingDef = existingGroup.getColGroupDef();\n      if (!existingDef) {\n        continue;\n      }\n      if (existingGroup.getId() === newGroupDef.groupId) {\n        return {\n          idx: i,\n          group: existingGroup\n        };\n      }\n    }\n    return void 0;\n  }\n  createColumnGroup(providedGroup, groupInstanceIdCreator, oldColumnsMapped, pinned, isStandaloneStructure) {\n    const groupId = providedGroup.getGroupId();\n    const instanceId = groupInstanceIdCreator.getInstanceIdForKey(groupId);\n    const uniqueId = createUniqueColumnGroupId(groupId, instanceId);\n    let columnGroup = oldColumnsMapped[uniqueId];\n    if (columnGroup && columnGroup.getProvidedColumnGroup() !== providedGroup) {\n      columnGroup = null;\n    }\n    if (_exists(columnGroup)) {\n      columnGroup.reset();\n    } else {\n      columnGroup = new AgColumnGroup(providedGroup, groupId, instanceId, pinned);\n      if (!isStandaloneStructure) {\n        this.createBean(columnGroup);\n      }\n    }\n    return columnGroup;\n  }\n  // returns back a 2d map of ColumnGroup as follows: groupId -> instanceId -> ColumnGroup\n  mapOldGroupsById(displayedGroups) {\n    const result = {};\n    const recursive = columnsOrGroups => {\n      columnsOrGroups.forEach(columnOrGroup => {\n        if (isColumnGroup(columnOrGroup)) {\n          const columnGroup = columnOrGroup;\n          result[columnOrGroup.getUniqueId()] = columnGroup;\n          recursive(columnGroup.getChildren());\n        }\n      });\n    };\n    if (displayedGroups) {\n      recursive(displayedGroups);\n    }\n    return result;\n  }\n  setupParentsIntoCols(columnsOrGroups, parent) {\n    columnsOrGroups.forEach(columnsOrGroup => {\n      if (columnsOrGroup.parent !== parent) {\n        this.beans.colViewport.colsWithinViewportHash = \"\";\n      }\n      columnsOrGroup.parent = parent;\n      if (isColumnGroup(columnsOrGroup)) {\n        const columnGroup = columnsOrGroup;\n        this.setupParentsIntoCols(columnGroup.getChildren(), columnGroup);\n      }\n    });\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnGroups/columnGroupModule.ts\nvar ColumnGroupModule = {\n  moduleName: \"ColumnGroup\",\n  version: VERSION,\n  dynamicBeans: {\n    headerGroupCellCtrl: HeaderGroupCellCtrl\n  },\n  beans: [ColumnGroupService],\n  apiFunctions: {\n    getAllDisplayedColumnGroups,\n    getCenterDisplayedColumnGroups,\n    getColumnGroup,\n    getColumnGroupState,\n    getDisplayNameForColumnGroup,\n    getLeftDisplayedColumnGroups,\n    getProvidedColumnGroup,\n    getRightDisplayedColumnGroups,\n    resetColumnGroupState,\n    setColumnGroupOpened,\n    setColumnGroupState\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cellRenderers/skeletonCellRenderer.ts\nvar SkeletonCellRendererElement = {\n  tag: \"div\",\n  cls: \"ag-skeleton-container\"\n};\nvar SkeletonCellRenderer = class extends Component {\n  constructor() {\n    super(SkeletonCellRendererElement);\n  }\n  init(params) {\n    const id = `ag-cell-skeleton-renderer-${this.getCompId()}`;\n    this.getGui().setAttribute(\"id\", id);\n    this.addDestroyFunc(() => _setAriaLabelledBy(params.eParentOfValue));\n    _setAriaLabelledBy(params.eParentOfValue, id);\n    if (params.deferRender) {\n      this.setupLoading(params);\n    } else {\n      params.node.failedLoad ? this.setupFailed() : this.setupLoading(params);\n    }\n  }\n  setupFailed() {\n    const localeTextFunc = this.getLocaleTextFunc();\n    this.getGui().textContent = localeTextFunc(\"loadingError\", \"ERR\");\n    const ariaFailed = localeTextFunc(\"ariaSkeletonCellLoadingFailed\", \"Row failed to load\");\n    _setAriaLabel(this.getGui(), ariaFailed);\n  }\n  setupLoading(params) {\n    const skeletonEffect = _createElement({\n      tag: \"div\",\n      cls: \"ag-skeleton-effect\"\n    });\n    const rowIndex = params.node.rowIndex;\n    if (rowIndex != null) {\n      const width = 75 + 25 * (rowIndex % 2 === 0 ? Math.sin(rowIndex) : Math.cos(rowIndex));\n      skeletonEffect.style.width = `${width}%`;\n    }\n    this.getGui().appendChild(skeletonEffect);\n    const localeTextFunc = this.getLocaleTextFunc();\n    const ariaLoading = params.deferRender ? localeTextFunc(\"ariaDeferSkeletonCellLoading\", \"Cell is loading\") : localeTextFunc(\"ariaSkeletonCellLoading\", \"Row data is loading\");\n    _setAriaLabel(this.getGui(), ariaLoading);\n  }\n  refresh(_params) {\n    return false;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cellRenderers/cellRendererModule.ts\nvar CheckboxCellRendererModule = {\n  moduleName: \"CheckboxCellRenderer\",\n  version: VERSION,\n  userComponents: {\n    agCheckboxCellRenderer: CheckboxCellRenderer\n  }\n};\nvar SkeletonCellRendererModule = {\n  moduleName: \"SkeletonCellRenderer\",\n  version: VERSION,\n  userComponents: {\n    agSkeletonCellRenderer: SkeletonCellRenderer\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnApi.ts\nfunction getColumnDef(beans, key) {\n  const column = beans.colModel.getColDefCol(key);\n  if (column) {\n    return column.getColDef();\n  }\n  return null;\n}\nfunction getColumnDefs(beans) {\n  return beans.colModel.getColumnDefs();\n}\nfunction getDisplayNameForColumn(beans, column, location) {\n  return beans.colNames.getDisplayNameForColumn(column, location) || \"\";\n}\nfunction getColumn(beans, key) {\n  return beans.colModel.getColDefCol(key);\n}\nfunction getColumns(beans) {\n  return beans.colModel.getColDefCols();\n}\nfunction applyColumnState(beans, params) {\n  return _applyColumnState(beans, params, \"api\");\n}\nfunction getColumnState(beans) {\n  return _getColumnState(beans);\n}\nfunction resetColumnState(beans) {\n  _resetColumnState(beans, \"api\");\n}\nfunction isPinning(beans) {\n  return beans.visibleCols.isPinningLeft() || beans.visibleCols.isPinningRight();\n}\nfunction isPinningLeft(beans) {\n  return beans.visibleCols.isPinningLeft();\n}\nfunction isPinningRight(beans) {\n  return beans.visibleCols.isPinningRight();\n}\nfunction getDisplayedColAfter(beans, col) {\n  return beans.visibleCols.getColAfter(col);\n}\nfunction getDisplayedColBefore(beans, col) {\n  return beans.visibleCols.getColBefore(col);\n}\nfunction setColumnsVisible(beans, keys, visible) {\n  beans.colModel.setColsVisible(keys, visible, \"api\");\n}\nfunction setColumnsPinned(beans, keys, pinned) {\n  beans.pinnedCols?.setColsPinned(keys, pinned, \"api\");\n}\nfunction getAllGridColumns(beans) {\n  return beans.colModel.getCols();\n}\nfunction getDisplayedLeftColumns(beans) {\n  return beans.visibleCols.leftCols;\n}\nfunction getDisplayedCenterColumns(beans) {\n  return beans.visibleCols.centerCols;\n}\nfunction getDisplayedRightColumns(beans) {\n  return beans.visibleCols.rightCols;\n}\nfunction getAllDisplayedColumns(beans) {\n  return beans.visibleCols.allCols;\n}\nfunction getAllDisplayedVirtualColumns(beans) {\n  return beans.colViewport.getViewportColumns();\n}\n\n// packages/ag-grid-community/src/columns/columnDefFactory.ts\nfunction _deepCloneDefinition(object, keysToSkip) {\n  if (!object) {\n    return;\n  }\n  const obj = object;\n  const res = {};\n  Object.keys(obj).forEach(key => {\n    if (keysToSkip && keysToSkip.indexOf(key) >= 0 || SKIP_JS_BUILTINS.has(key)) {\n      return;\n    }\n    const value = obj[key];\n    const sourceIsSimpleObject = typeof value === \"object\" && value !== null && value.constructor === Object;\n    if (sourceIsSimpleObject) {\n      res[key] = _deepCloneDefinition(value);\n    } else {\n      res[key] = value;\n    }\n  });\n  return res;\n}\nvar ColumnDefFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colDefFactory\";\n  }\n  wireBeans(beans) {\n    this.rowGroupColsSvc = beans.rowGroupColsSvc;\n    this.pivotColsSvc = beans.pivotColsSvc;\n  }\n  getColumnDefs(colDefColsList, showingPivotResult, lastOrder, colsList) {\n    const cols = colDefColsList.slice();\n    if (showingPivotResult) {\n      cols.sort((a, b) => lastOrder.indexOf(a) - lastOrder.indexOf(b));\n    } else if (lastOrder) {\n      cols.sort((a, b) => colsList.indexOf(a) - colsList.indexOf(b));\n    }\n    const rowGroupColumns = this.rowGroupColsSvc?.columns;\n    const pivotColumns = this.pivotColsSvc?.columns;\n    return this.buildColumnDefs(cols, rowGroupColumns, pivotColumns);\n  }\n  buildColumnDefs(cols, rowGroupColumns = [], pivotColumns = []) {\n    const res = [];\n    const colGroupDefs = {};\n    cols.forEach(col => {\n      const colDef = this.createDefFromColumn(col, rowGroupColumns, pivotColumns);\n      let addToResult = true;\n      let childDef = colDef;\n      let pointer = col.getOriginalParent();\n      let lastPointer = null;\n      while (pointer) {\n        let parentDef = null;\n        if (pointer.isPadding()) {\n          pointer = pointer.getOriginalParent();\n          continue;\n        }\n        const existingParentDef = colGroupDefs[pointer.getGroupId()];\n        if (existingParentDef) {\n          existingParentDef.children.push(childDef);\n          addToResult = false;\n          break;\n        }\n        parentDef = this.createDefFromGroup(pointer);\n        if (parentDef) {\n          parentDef.children = [childDef];\n          colGroupDefs[parentDef.groupId] = parentDef;\n          childDef = parentDef;\n          pointer = pointer.getOriginalParent();\n        }\n        if (pointer != null && lastPointer === pointer) {\n          addToResult = false;\n          break;\n        }\n        lastPointer = pointer;\n      }\n      if (addToResult) {\n        res.push(childDef);\n      }\n    });\n    return res;\n  }\n  createDefFromGroup(group) {\n    const defCloned = _deepCloneDefinition(group.getColGroupDef(), [\"children\"]);\n    if (defCloned) {\n      defCloned.groupId = group.getGroupId();\n    }\n    return defCloned;\n  }\n  createDefFromColumn(col, rowGroupColumns, pivotColumns) {\n    const colDefCloned = _deepCloneDefinition(col.getColDef());\n    colDefCloned.colId = col.getColId();\n    colDefCloned.width = col.getActualWidth();\n    colDefCloned.rowGroup = col.isRowGroupActive();\n    colDefCloned.rowGroupIndex = col.isRowGroupActive() ? rowGroupColumns.indexOf(col) : null;\n    colDefCloned.pivot = col.isPivotActive();\n    colDefCloned.pivotIndex = col.isPivotActive() ? pivotColumns.indexOf(col) : null;\n    colDefCloned.aggFunc = col.isValueActive() ? col.getAggFunc() : null;\n    colDefCloned.hide = col.isVisible() ? void 0 : true;\n    colDefCloned.pinned = col.isPinned() ? col.getPinned() : null;\n    colDefCloned.sort = col.getSort() ? col.getSort() : null;\n    colDefCloned.sortIndex = col.getSortIndex() != null ? col.getSortIndex() : null;\n    return colDefCloned;\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnFlexService.ts\nvar ColumnFlexService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colFlex\";\n  }\n  refreshFlexedColumns(params = {}) {\n    const source = params.source ?? \"flex\";\n    if (params.viewportWidth != null) {\n      this.flexViewportWidth = params.viewportWidth;\n    }\n    const totalSpace = this.flexViewportWidth;\n    if (!totalSpace) {\n      return [];\n    }\n    const {\n      visibleCols\n    } = this.beans;\n    const visibleCenterCols = visibleCols.centerCols;\n    let flexAfterDisplayIndex = -1;\n    if (params.resizingCols) {\n      const allResizingCols = new Set(params.resizingCols);\n      for (let i = visibleCenterCols.length - 1; i >= 0; i--) {\n        if (allResizingCols.has(visibleCenterCols[i])) {\n          flexAfterDisplayIndex = i;\n          break;\n        }\n      }\n    }\n    let hasFlexItems = false;\n    const items = visibleCenterCols.map((col, i) => {\n      const flex = col.getFlex();\n      const isFlex = flex != null && flex > 0 && i > flexAfterDisplayIndex;\n      hasFlexItems || (hasFlexItems = isFlex);\n      return {\n        col,\n        isFlex,\n        flex: Math.max(0, flex ?? 0),\n        initialSize: col.getActualWidth(),\n        min: col.getMinWidth(),\n        max: col.getMaxWidth(),\n        targetSize: 0\n      };\n    });\n    if (!hasFlexItems) {\n      return [];\n    }\n    let unfrozenItemCount = items.length;\n    let unfrozenFlex = items.reduce((acc, item) => acc + item.flex, 0);\n    let unfrozenSpace = totalSpace;\n    const freeze = (item, width) => {\n      item.frozenSize = width;\n      item.col.setActualWidth(width, source);\n      unfrozenSpace -= width;\n      unfrozenFlex -= item.flex;\n      unfrozenItemCount -= 1;\n    };\n    const isFrozen = item => item.frozenSize != null;\n    for (const item of items) {\n      if (!item.isFlex) {\n        freeze(item, item.initialSize);\n      }\n    }\n    while (unfrozenItemCount > 0) {\n      const spaceToFill = Math.round(unfrozenFlex < 1 ? unfrozenSpace * unfrozenFlex : unfrozenSpace);\n      let lastUnfrozenItem;\n      let actualLeft = 0;\n      let idealRight = 0;\n      for (const item of items) {\n        if (isFrozen(item)) {\n          continue;\n        }\n        lastUnfrozenItem = item;\n        idealRight += spaceToFill * (item.flex / unfrozenFlex);\n        const idealSize = idealRight - actualLeft;\n        const roundedSize = Math.round(idealSize);\n        item.targetSize = roundedSize;\n        actualLeft += roundedSize;\n      }\n      if (lastUnfrozenItem) {\n        lastUnfrozenItem.targetSize += spaceToFill - actualLeft;\n      }\n      let totalViolation = 0;\n      for (const item of items) {\n        if (isFrozen(item)) {\n          continue;\n        }\n        const unclampedSize = item.targetSize;\n        const clampedSize = Math.min(Math.max(unclampedSize, item.min), item.max);\n        totalViolation += clampedSize - unclampedSize;\n        item.violationType = clampedSize === unclampedSize ? void 0 : clampedSize < unclampedSize ? \"max\" : \"min\";\n        item.targetSize = clampedSize;\n      }\n      const freezeType = totalViolation === 0 ? \"all\" : totalViolation > 0 ? \"min\" : \"max\";\n      for (const item of items) {\n        if (isFrozen(item)) {\n          continue;\n        }\n        if (freezeType === \"all\" || item.violationType === freezeType) {\n          freeze(item, item.targetSize);\n        }\n      }\n    }\n    if (!params.skipSetLeft) {\n      visibleCols.setLeftValues(source);\n    }\n    if (params.updateBodyWidths) {\n      visibleCols.updateBodyWidths();\n    }\n    const unconstrainedFlexColumns = items.filter(item => item.isFlex && !item.violationType).map(item => item.col);\n    if (params.fireResizedEvent) {\n      const changedColumns = items.filter(item => item.initialSize !== item.frozenSize).map(item => item.col);\n      const flexingColumns = items.filter(item => item.flex).map(item => item.col);\n      dispatchColumnResizedEvent(this.eventSvc, changedColumns, true, source, flexingColumns);\n    }\n    return unconstrainedFlexColumns;\n  }\n  initCol(column) {\n    const {\n      flex,\n      initialFlex\n    } = column.colDef;\n    if (flex !== void 0) {\n      column.flex = flex;\n    } else if (initialFlex !== void 0) {\n      column.flex = initialFlex;\n    }\n  }\n  // this method should only be used by the colModel to\n  // change flex when required by the applyColumnState method.\n  setColFlex(column, flex) {\n    column.flex = flex ?? null;\n    column.dispatchStateUpdatedEvent(\"flex\");\n  }\n};\n\n// packages/ag-grid-community/src/columns/dataTypeService.ts\nvar SORTED_CELL_DATA_TYPES_FOR_MATCHING = [\"dateTimeString\", \"dateString\", \"text\", \"number\", \"boolean\", \"date\"];\nvar DataTypeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dataTypeSvc\";\n    this.dataTypeDefinitions = {};\n    this.isPendingInference = false;\n    this.isColumnTypeOverrideInDataTypeDefinitions = false;\n    // keep track of any column state updates whilst waiting for data types to be inferred\n    this.columnStateUpdatesPendingInference = {};\n    this.columnStateUpdateListenerDestroyFuncs = [];\n    // using an object here to enforce dev to not forget to implement new types as they are added\n    this.columnDefinitionPropsPerDataType = {\n      number() {\n        return {\n          cellEditor: \"agNumberCellEditor\"\n        };\n      },\n      boolean() {\n        return {\n          cellEditor: \"agCheckboxCellEditor\",\n          cellRenderer: \"agCheckboxCellRenderer\",\n          getFindText: () => null,\n          suppressKeyboardEvent: params => !!params.colDef.editable && params.event.key === KeyCode.SPACE\n        };\n      },\n      date({\n        formatValue\n      }) {\n        return {\n          cellEditor: \"agDateCellEditor\",\n          keyCreator: formatValue\n        };\n      },\n      dateString({\n        formatValue\n      }) {\n        return {\n          cellEditor: \"agDateStringCellEditor\",\n          keyCreator: formatValue\n        };\n      },\n      dateTime(args) {\n        return this.date(args);\n      },\n      dateTimeString(args) {\n        return this.dateString(args);\n      },\n      object({\n        formatValue,\n        colModel,\n        colId\n      }) {\n        return {\n          cellEditorParams: {\n            useFormatter: true\n          },\n          comparator: (a, b) => {\n            const column = colModel.getColDefCol(colId);\n            const colDef = column?.getColDef();\n            if (!column || !colDef) {\n              return 0;\n            }\n            const valA = a == null ? \"\" : formatValue({\n              column,\n              node: null,\n              value: a\n            });\n            const valB = b == null ? \"\" : formatValue({\n              column,\n              node: null,\n              value: b\n            });\n            if (valA === valB) return 0;\n            return valA > valB ? 1 : -1;\n          },\n          keyCreator: formatValue\n        };\n      },\n      text() {\n        return {};\n      }\n    };\n  }\n  wireBeans(beans) {\n    this.colModel = beans.colModel;\n  }\n  postConstruct() {\n    this.processDataTypeDefinitions();\n    this.addManagedPropertyListener(\"dataTypeDefinitions\", event => {\n      this.processDataTypeDefinitions();\n      this.colModel.recreateColumnDefs(event);\n    });\n  }\n  processDataTypeDefinitions() {\n    const defaultDataTypes = this.getDefaultDataTypes();\n    const newDataTypeDefinitions = {};\n    const newFormatValueFuncs = {};\n    const generateFormatValueFunc = dataTypeDefinition => {\n      return params => {\n        const {\n          column,\n          node,\n          value\n        } = params;\n        let valueFormatter = column.getColDef().valueFormatter;\n        if (valueFormatter === dataTypeDefinition.groupSafeValueFormatter) {\n          valueFormatter = dataTypeDefinition.valueFormatter;\n        }\n        return this.beans.valueSvc.formatValue(column, node, value, valueFormatter);\n      };\n    };\n    for (const cellDataType of Object.keys(defaultDataTypes)) {\n      const defaultDataTypeDef = defaultDataTypes[cellDataType];\n      const mergedDataTypeDefinition = {\n        ...defaultDataTypeDef,\n        groupSafeValueFormatter: createGroupSafeValueFormatter(defaultDataTypeDef, this.gos)\n      };\n      newDataTypeDefinitions[cellDataType] = mergedDataTypeDefinition;\n      newFormatValueFuncs[cellDataType] = generateFormatValueFunc(mergedDataTypeDefinition);\n    }\n    const userDataTypeDefs = this.gos.get(\"dataTypeDefinitions\") ?? {};\n    const newDataTypeMatchers = {};\n    for (const cellDataType of Object.keys(userDataTypeDefs)) {\n      const userDataTypeDef = userDataTypeDefs[cellDataType];\n      const mergedDataTypeDefinition = this.processDataTypeDefinition(userDataTypeDef, userDataTypeDefs, [cellDataType], defaultDataTypes);\n      if (mergedDataTypeDefinition) {\n        newDataTypeDefinitions[cellDataType] = mergedDataTypeDefinition;\n        if (userDataTypeDef.dataTypeMatcher) {\n          newDataTypeMatchers[cellDataType] = userDataTypeDef.dataTypeMatcher;\n        }\n        newFormatValueFuncs[cellDataType] = generateFormatValueFunc(mergedDataTypeDefinition);\n      }\n    }\n    const {\n      valueParser: defaultValueParser,\n      valueFormatter: defaultValueFormatter\n    } = defaultDataTypes.object;\n    const {\n      valueParser: userValueParser,\n      valueFormatter: userValueFormatter\n    } = newDataTypeDefinitions.object;\n    this.hasObjectValueParser = userValueParser !== defaultValueParser;\n    this.hasObjectValueFormatter = userValueFormatter !== defaultValueFormatter;\n    this.formatValueFuncs = newFormatValueFuncs;\n    this.dataTypeDefinitions = newDataTypeDefinitions;\n    this.dataTypeMatchers = this.sortKeysInMatchers(newDataTypeMatchers, defaultDataTypes);\n  }\n  /**\n   * Sorts the keys in the matchers object.\n   * Does not mutate the original object, creates a copy of it with sorted keys instead.\n   */\n  sortKeysInMatchers(matchers, dataTypes) {\n    const sortedMatchers = {\n      ...matchers\n    };\n    for (const cellDataType of SORTED_CELL_DATA_TYPES_FOR_MATCHING) {\n      delete sortedMatchers[cellDataType];\n      sortedMatchers[cellDataType] = matchers[cellDataType] ?? dataTypes[cellDataType].dataTypeMatcher;\n    }\n    return sortedMatchers;\n  }\n  processDataTypeDefinition(userDataTypeDef, userDataTypeDefs, alreadyProcessedDataTypes, defaultDataTypes) {\n    let mergedDataTypeDefinition;\n    const extendsCellDataType = userDataTypeDef.extendsDataType;\n    if (userDataTypeDef.columnTypes) {\n      this.isColumnTypeOverrideInDataTypeDefinitions = true;\n    }\n    if (userDataTypeDef.extendsDataType === userDataTypeDef.baseDataType) {\n      let baseDataTypeDefinition = defaultDataTypes[extendsCellDataType];\n      const overriddenBaseDataTypeDefinition = userDataTypeDefs[extendsCellDataType];\n      if (baseDataTypeDefinition && overriddenBaseDataTypeDefinition) {\n        baseDataTypeDefinition = overriddenBaseDataTypeDefinition;\n      }\n      if (!validateDataTypeDefinition(userDataTypeDef, baseDataTypeDefinition, extendsCellDataType)) {\n        return void 0;\n      }\n      mergedDataTypeDefinition = mergeDataTypeDefinitions(baseDataTypeDefinition, userDataTypeDef);\n    } else {\n      if (alreadyProcessedDataTypes.includes(extendsCellDataType)) {\n        _warn(44);\n        return void 0;\n      }\n      const extendedDataTypeDefinition = userDataTypeDefs[extendsCellDataType];\n      if (!validateDataTypeDefinition(userDataTypeDef, extendedDataTypeDefinition, extendsCellDataType)) {\n        return void 0;\n      }\n      const mergedExtendedDataTypeDefinition = this.processDataTypeDefinition(extendedDataTypeDefinition, userDataTypeDefs, [...alreadyProcessedDataTypes, extendsCellDataType], defaultDataTypes);\n      if (!mergedExtendedDataTypeDefinition) {\n        return void 0;\n      }\n      mergedDataTypeDefinition = mergeDataTypeDefinitions(mergedExtendedDataTypeDefinition, userDataTypeDef);\n    }\n    return {\n      ...mergedDataTypeDefinition,\n      groupSafeValueFormatter: createGroupSafeValueFormatter(mergedDataTypeDefinition, this.gos)\n    };\n  }\n  updateColDefAndGetColumnType(colDef, userColDef, colId) {\n    let {\n      cellDataType\n    } = userColDef;\n    const {\n      field\n    } = userColDef;\n    if (cellDataType === void 0) {\n      cellDataType = colDef.cellDataType;\n    }\n    if (cellDataType == null || cellDataType === true) {\n      cellDataType = this.canInferCellDataType(colDef, userColDef) ? this.inferCellDataType(field, colId) : false;\n    }\n    if (!cellDataType) {\n      colDef.cellDataType = false;\n      return void 0;\n    }\n    const dataTypeDefinition = this.dataTypeDefinitions[cellDataType];\n    if (!dataTypeDefinition) {\n      _warn(47, {\n        cellDataType\n      });\n      return void 0;\n    }\n    colDef.cellDataType = cellDataType;\n    if (dataTypeDefinition.groupSafeValueFormatter) {\n      colDef.valueFormatter = dataTypeDefinition.groupSafeValueFormatter;\n    }\n    if (dataTypeDefinition.valueParser) {\n      colDef.valueParser = dataTypeDefinition.valueParser;\n    }\n    if (!dataTypeDefinition.suppressDefaultProperties) {\n      this.setColDefPropertiesForBaseDataType(colDef, cellDataType, dataTypeDefinition, colId);\n    }\n    return dataTypeDefinition.columnTypes;\n  }\n  addColumnListeners(column) {\n    if (!this.isPendingInference) {\n      return;\n    }\n    const columnStateUpdates = this.columnStateUpdatesPendingInference[column.getColId()];\n    if (!columnStateUpdates) {\n      return;\n    }\n    const columnListener = event => {\n      columnStateUpdates.add(event.key);\n    };\n    column.__addEventListener(\"columnStateUpdated\", columnListener);\n    this.columnStateUpdateListenerDestroyFuncs.push(() => column.__removeEventListener(\"columnStateUpdated\", columnListener));\n  }\n  canInferCellDataType(colDef, userColDef) {\n    const {\n      gos\n    } = this;\n    if (!_isClientSideRowModel(gos)) {\n      return false;\n    }\n    const propsToCheckForInference = {\n      cellRenderer: true,\n      valueGetter: true,\n      valueParser: true,\n      refData: true\n    };\n    if (doColDefPropsPreventInference(userColDef, propsToCheckForInference)) {\n      return false;\n    }\n    const columnTypes = userColDef.type === null ? colDef.type : userColDef.type;\n    if (columnTypes) {\n      const columnTypeDefs = gos.get(\"columnTypes\") ?? {};\n      const hasPropsPreventingInference = convertColumnTypes(columnTypes).some(columnType => {\n        const columnTypeDef = columnTypeDefs[columnType.trim()];\n        return columnTypeDef && doColDefPropsPreventInference(columnTypeDef, propsToCheckForInference);\n      });\n      if (hasPropsPreventingInference) {\n        return false;\n      }\n    }\n    return !doColDefPropsPreventInference(colDef, propsToCheckForInference);\n  }\n  inferCellDataType(field, colId) {\n    if (!field) {\n      return void 0;\n    }\n    let value;\n    const initialData = this.getInitialData();\n    if (initialData) {\n      const fieldContainsDots = field.indexOf(\".\") >= 0 && !this.gos.get(\"suppressFieldDotNotation\");\n      value = _getValueUsingField(initialData, field, fieldContainsDots);\n    } else {\n      this.initWaitForRowData(colId);\n    }\n    if (value == null) {\n      return void 0;\n    }\n    const matchedType = Object.keys(this.dataTypeMatchers).find(_cellDataType => this.dataTypeMatchers[_cellDataType](value));\n    return matchedType ?? \"object\";\n  }\n  getInitialData() {\n    const rowData = this.gos.get(\"rowData\");\n    if (rowData?.length) {\n      return rowData[0];\n    } else if (this.initialData) {\n      return this.initialData;\n    } else {\n      const rowNodes = this.beans.rowModel.rootNode?.allLeafChildren;\n      if (rowNodes?.length) {\n        return rowNodes[0].data;\n      }\n    }\n    return null;\n  }\n  initWaitForRowData(colId) {\n    this.columnStateUpdatesPendingInference[colId] = /* @__PURE__ */new Set();\n    if (this.isPendingInference) {\n      return;\n    }\n    this.isPendingInference = true;\n    const columnTypeOverridesExist = this.isColumnTypeOverrideInDataTypeDefinitions;\n    const {\n      colAutosize,\n      eventSvc\n    } = this.beans;\n    if (columnTypeOverridesExist && colAutosize) {\n      colAutosize.shouldQueueResizeOperations = true;\n    }\n    const [destroyFunc] = this.addManagedEventListeners({\n      rowDataUpdateStarted: event => {\n        const {\n          firstRowData\n        } = event;\n        if (!firstRowData) {\n          return;\n        }\n        destroyFunc?.();\n        this.isPendingInference = false;\n        this.processColumnsPendingInference(firstRowData, columnTypeOverridesExist);\n        this.columnStateUpdatesPendingInference = {};\n        if (columnTypeOverridesExist) {\n          colAutosize?.processResizeOperations();\n        }\n        eventSvc.dispatchEvent({\n          type: \"dataTypesInferred\"\n        });\n      }\n    });\n  }\n  processColumnsPendingInference(firstRowData, columnTypeOverridesExist) {\n    this.initialData = firstRowData;\n    const state = [];\n    this.destroyColumnStateUpdateListeners();\n    const newRowGroupColumnStateWithoutIndex = {};\n    const newPivotColumnStateWithoutIndex = {};\n    for (const colId of Object.keys(this.columnStateUpdatesPendingInference)) {\n      const columnStateUpdates = this.columnStateUpdatesPendingInference[colId];\n      const column = this.colModel.getCol(colId);\n      if (!column) {\n        return;\n      }\n      const oldColDef = column.getColDef();\n      if (!this.resetColDefIntoCol(column, \"cellDataTypeInferred\")) {\n        return;\n      }\n      const newColDef = column.getColDef();\n      if (columnTypeOverridesExist && newColDef.type && newColDef.type !== oldColDef.type) {\n        const updatedColumnState = getUpdatedColumnState(column, columnStateUpdates);\n        if (updatedColumnState.rowGroup && updatedColumnState.rowGroupIndex == null) {\n          newRowGroupColumnStateWithoutIndex[colId] = updatedColumnState;\n        }\n        if (updatedColumnState.pivot && updatedColumnState.pivotIndex == null) {\n          newPivotColumnStateWithoutIndex[colId] = updatedColumnState;\n        }\n        state.push(updatedColumnState);\n      }\n    }\n    if (columnTypeOverridesExist) {\n      state.push(...this.generateColumnStateForRowGroupAndPivotIndexes(newRowGroupColumnStateWithoutIndex, newPivotColumnStateWithoutIndex));\n    }\n    if (state.length) {\n      _applyColumnState(this.beans, {\n        state\n      }, \"cellDataTypeInferred\");\n    }\n    this.initialData = null;\n  }\n  generateColumnStateForRowGroupAndPivotIndexes(updatedRowGroupColumnState, updatedPivotColumnState) {\n    const existingColumnStateUpdates = {};\n    const {\n      rowGroupColsSvc,\n      pivotColsSvc\n    } = this.beans;\n    rowGroupColsSvc?.restoreColumnOrder(existingColumnStateUpdates, updatedRowGroupColumnState);\n    pivotColsSvc?.restoreColumnOrder(existingColumnStateUpdates, updatedPivotColumnState);\n    return Object.values(existingColumnStateUpdates);\n  }\n  resetColDefIntoCol(column, source) {\n    const userColDef = column.getUserProvidedColDef();\n    if (!userColDef) {\n      return false;\n    }\n    const newColDef = _addColumnDefaultAndTypes(this.beans, userColDef, column.getColId());\n    column.setColDef(newColDef, userColDef, source);\n    return true;\n  }\n  getDateStringTypeDefinition(column) {\n    const {\n      dateString\n    } = this.dataTypeDefinitions;\n    if (!column) {\n      return dateString;\n    }\n    return this.getDataTypeDefinition(column) ?? dateString;\n  }\n  getDateParserFunction(column) {\n    return this.getDateStringTypeDefinition(column).dateParser;\n  }\n  getDateFormatterFunction(column) {\n    return this.getDateStringTypeDefinition(column).dateFormatter;\n  }\n  getDateIncludesTimeFlag(cellDataType) {\n    return cellDataType === \"dateTime\" || cellDataType === \"dateTimeString\";\n  }\n  getDataTypeDefinition(column) {\n    const colDef = column.getColDef();\n    if (!colDef.cellDataType) {\n      return void 0;\n    }\n    return this.dataTypeDefinitions[colDef.cellDataType];\n  }\n  getBaseDataType(column) {\n    return this.getDataTypeDefinition(column)?.baseDataType;\n  }\n  checkType(column, value) {\n    if (value == null) {\n      return true;\n    }\n    const dataTypeMatcher = this.getDataTypeDefinition(column)?.dataTypeMatcher;\n    if (!dataTypeMatcher) {\n      return true;\n    }\n    return dataTypeMatcher(value);\n  }\n  validateColDef(colDef) {\n    const warning = property => _warn(48, {\n      property\n    });\n    if (colDef.cellDataType === \"object\") {\n      const {\n        object\n      } = this.dataTypeDefinitions;\n      if (colDef.valueFormatter === object.groupSafeValueFormatter && !this.hasObjectValueFormatter) {\n        warning(\"Formatter\");\n      }\n      if (colDef.editable && colDef.valueParser === object.valueParser && !this.hasObjectValueParser) {\n        warning(\"Parser\");\n      }\n    }\n  }\n  postProcess(colDef) {\n    const cellDataType = colDef.cellDataType;\n    if (!cellDataType || typeof cellDataType !== \"string\") {\n      return;\n    }\n    const {\n      dataTypeDefinitions,\n      beans,\n      formatValueFuncs\n    } = this;\n    const dataTypeDefinition = dataTypeDefinitions[cellDataType];\n    beans.colFilter?.setColDefPropsForDataType(colDef, dataTypeDefinition, formatValueFuncs[cellDataType]);\n  }\n  // noinspection JSUnusedGlobalSymbols\n  getFormatValue(cellDataType) {\n    return this.formatValueFuncs[cellDataType];\n  }\n  isColPendingInference(colId) {\n    return this.isPendingInference && !!this.columnStateUpdatesPendingInference[colId];\n  }\n  setColDefPropertiesForBaseDataType(colDef, cellDataType, dataTypeDefinition, colId) {\n    const formatValue = this.formatValueFuncs[cellDataType];\n    const partialColDef = this.columnDefinitionPropsPerDataType[dataTypeDefinition.baseDataType]({\n      colDef,\n      cellDataType,\n      colModel: this.colModel,\n      dataTypeDefinition,\n      colId,\n      formatValue\n    });\n    Object.assign(colDef, partialColDef);\n  }\n  getDateObjectTypeDef(baseDataType) {\n    const translate = this.getLocaleTextFunc();\n    const includeTime = this.getDateIncludesTimeFlag(baseDataType);\n    return {\n      baseDataType,\n      valueParser: params => _parseDateTimeFromString(params.newValue && String(params.newValue)),\n      valueFormatter: params => {\n        if (params.value == null) {\n          return \"\";\n        }\n        if (!(params.value instanceof Date) || isNaN(params.value.getTime())) {\n          return translate(\"invalidDate\", \"Invalid Date\");\n        }\n        return _serialiseDate(params.value, includeTime) ?? \"\";\n      },\n      dataTypeMatcher: value => value instanceof Date\n    };\n  }\n  getDateStringTypeDef(baseDataType) {\n    const includeTime = this.getDateIncludesTimeFlag(baseDataType);\n    return {\n      baseDataType,\n      dateParser: value => _parseDateTimeFromString(value) ?? void 0,\n      dateFormatter: value => _serialiseDate(value ?? null, includeTime) ?? void 0,\n      valueParser: params => _isValidDate(String(params.newValue)) ? params.newValue : null,\n      valueFormatter: params => _isValidDate(String(params.value)) ? String(params.value) : \"\",\n      dataTypeMatcher: value => typeof value === \"string\" && _isValidDate(value)\n    };\n  }\n  getDefaultDataTypes() {\n    const translate = this.getLocaleTextFunc();\n    return {\n      number: {\n        baseDataType: \"number\",\n        // can be empty space with legacy copy\n        valueParser: params => params.newValue?.trim?.() === \"\" ? null : Number(params.newValue),\n        valueFormatter: params => {\n          if (params.value == null) {\n            return \"\";\n          }\n          if (typeof params.value !== \"number\" || isNaN(params.value)) {\n            return translate(\"invalidNumber\", \"Invalid Number\");\n          }\n          return String(params.value);\n        },\n        dataTypeMatcher: value => typeof value === \"number\"\n      },\n      text: {\n        baseDataType: \"text\",\n        valueParser: params => params.newValue === \"\" ? null : _toStringOrNull(params.newValue),\n        dataTypeMatcher: value => typeof value === \"string\"\n      },\n      boolean: {\n        baseDataType: \"boolean\",\n        valueParser: params => {\n          if (params.newValue == null) {\n            return params.newValue;\n          }\n          return params.newValue?.trim?.() === \"\" ? null : String(params.newValue).toLowerCase() === \"true\";\n        },\n        valueFormatter: params => params.value == null ? \"\" : String(params.value),\n        dataTypeMatcher: value => typeof value === \"boolean\"\n      },\n      date: this.getDateObjectTypeDef(\"date\"),\n      dateString: this.getDateStringTypeDef(\"dateString\"),\n      dateTime: this.getDateObjectTypeDef(\"dateTime\"),\n      dateTimeString: {\n        ...this.getDateStringTypeDef(\"dateTimeString\"),\n        dataTypeMatcher: value => typeof value === \"string\" && _isValidDateTime(value)\n      },\n      object: {\n        baseDataType: \"object\",\n        valueParser: () => null,\n        valueFormatter: params => _toStringOrNull(params.value) ?? \"\"\n      }\n    };\n  }\n  destroyColumnStateUpdateListeners() {\n    this.columnStateUpdateListenerDestroyFuncs.forEach(destroyFunc => destroyFunc());\n    this.columnStateUpdateListenerDestroyFuncs = [];\n  }\n  destroy() {\n    this.dataTypeDefinitions = {};\n    this.dataTypeMatchers = {};\n    this.formatValueFuncs = {};\n    this.columnStateUpdatesPendingInference = {};\n    this.destroyColumnStateUpdateListeners();\n    super.destroy();\n  }\n};\nfunction mergeDataTypeDefinitions(parentDataTypeDefinition, childDataTypeDefinition) {\n  const mergedDataTypeDefinition = {\n    ...parentDataTypeDefinition,\n    ...childDataTypeDefinition\n  };\n  if (parentDataTypeDefinition.columnTypes && childDataTypeDefinition.columnTypes && childDataTypeDefinition.appendColumnTypes) {\n    mergedDataTypeDefinition.columnTypes = [...convertColumnTypes(parentDataTypeDefinition.columnTypes), ...convertColumnTypes(childDataTypeDefinition.columnTypes)];\n  }\n  return mergedDataTypeDefinition;\n}\nfunction validateDataTypeDefinition(dataTypeDefinition, parentDataTypeDefinition, parentCellDataType) {\n  if (!parentDataTypeDefinition) {\n    _warn(45, {\n      parentCellDataType\n    });\n    return false;\n  }\n  if (parentDataTypeDefinition.baseDataType !== dataTypeDefinition.baseDataType) {\n    _warn(46);\n    return false;\n  }\n  return true;\n}\nfunction createGroupSafeValueFormatter(dataTypeDefinition, gos) {\n  if (!dataTypeDefinition.valueFormatter) {\n    return void 0;\n  }\n  return params => {\n    if (params.node?.group) {\n      const aggFunc = (params.colDef.pivotValueColumn ?? params.column).getAggFunc();\n      if (aggFunc) {\n        if (aggFunc === \"first\" || aggFunc === \"last\") {\n          return dataTypeDefinition.valueFormatter(params);\n        }\n        if (dataTypeDefinition.baseDataType === \"number\" && aggFunc !== \"count\") {\n          if (typeof params.value === \"number\") {\n            return dataTypeDefinition.valueFormatter(params);\n          }\n          if (typeof params.value === \"object\") {\n            if (!params.value) {\n              return void 0;\n            }\n            if (\"toNumber\" in params.value) {\n              return dataTypeDefinition.valueFormatter({\n                ...params,\n                value: params.value.toNumber()\n              });\n            }\n            if (\"value\" in params.value) {\n              return dataTypeDefinition.valueFormatter({\n                ...params,\n                value: params.value.value\n              });\n            }\n          }\n        }\n        return void 0;\n      }\n    } else if (gos.get(\"groupHideOpenParents\") && params.column.isRowGroupActive()) {\n      if (typeof params.value === \"string\" && !dataTypeDefinition.dataTypeMatcher?.(params.value)) {\n        return void 0;\n      }\n    }\n    return dataTypeDefinition.valueFormatter(params);\n  };\n}\nfunction doesColDefPropPreventInference(colDef, checkProps, prop, comparisonValue) {\n  if (!checkProps[prop]) {\n    return false;\n  }\n  const value = colDef[prop];\n  if (value === null) {\n    checkProps[prop] = false;\n    return false;\n  } else {\n    return comparisonValue === void 0 ? !!value : value === comparisonValue;\n  }\n}\nfunction doColDefPropsPreventInference(colDef, propsToCheckForInference) {\n  return [[\"cellRenderer\", \"agSparklineCellRenderer\"], [\"valueGetter\", void 0], [\"valueParser\", void 0], [\"refData\", void 0]].some(([prop, comparisonValue]) => doesColDefPropPreventInference(colDef, propsToCheckForInference, prop, comparisonValue));\n}\nfunction getUpdatedColumnState(column, columnStateUpdates) {\n  const columnState = getColumnStateFromColDef(column);\n  columnStateUpdates.forEach(key => {\n    delete columnState[key];\n    if (key === \"rowGroup\") {\n      delete columnState.rowGroupIndex;\n    } else if (key === \"pivot\") {\n      delete columnState.pivotIndex;\n    }\n  });\n  return columnState;\n}\n\n// packages/ag-grid-community/src/columns/columnModule.ts\nvar DataTypeModule = {\n  moduleName: \"DataType\",\n  version: VERSION,\n  beans: [DataTypeService],\n  dependsOn: [CheckboxCellRendererModule]\n};\nvar ColumnFlexModule = {\n  moduleName: \"ColumnFlex\",\n  version: VERSION,\n  beans: [ColumnFlexService]\n};\nvar ColumnApiModule = {\n  moduleName: \"ColumnApi\",\n  version: VERSION,\n  beans: [ColumnDefFactory],\n  apiFunctions: {\n    getColumnDef,\n    getDisplayNameForColumn,\n    getColumn,\n    getColumns,\n    applyColumnState,\n    getColumnState,\n    resetColumnState,\n    isPinning,\n    isPinningLeft,\n    isPinningRight,\n    getDisplayedColAfter,\n    getDisplayedColBefore,\n    setColumnsVisible,\n    setColumnsPinned,\n    getAllGridColumns,\n    getDisplayedLeftColumns,\n    getDisplayedCenterColumns,\n    getDisplayedRightColumns,\n    getAllDisplayedColumns,\n    getAllDisplayedVirtualColumns,\n    getColumnDefs\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnNameService.ts\nfunction _camelCaseToHumanText(camelCase) {\n  if (!camelCase || camelCase == null) {\n    return null;\n  }\n  const rex = /([a-z])([A-Z])/g;\n  const rexCaps = /([A-Z]+)([A-Z])([a-z])/g;\n  const words = camelCase.replace(rex, \"$1 $2\").replace(rexCaps, \"$1 $2$3\").replace(/\\./g, \" \").split(\" \");\n  return words.map(word => word.substring(0, 1).toUpperCase() + (word.length > 1 ? word.substring(1, word.length) : \"\")).join(\" \");\n}\nvar ColumnNameService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colNames\";\n  }\n  getDisplayNameForColumn(column, location, includeAggFunc = false) {\n    if (!column) {\n      return null;\n    }\n    const headerName = this.getHeaderName(column.getColDef(), column, null, null, location);\n    const {\n      aggColNameSvc\n    } = this.beans;\n    if (includeAggFunc && aggColNameSvc) {\n      return aggColNameSvc.getHeaderName(column, headerName);\n    }\n    return headerName;\n  }\n  getDisplayNameForProvidedColumnGroup(columnGroup, providedColumnGroup, location) {\n    const colGroupDef = providedColumnGroup?.getColGroupDef();\n    if (colGroupDef) {\n      return this.getHeaderName(colGroupDef, null, columnGroup, providedColumnGroup, location);\n    }\n    return null;\n  }\n  getDisplayNameForColumnGroup(columnGroup, location) {\n    return this.getDisplayNameForProvidedColumnGroup(columnGroup, columnGroup.getProvidedColumnGroup(), location);\n  }\n  // location is where the column is going to appear, ie who is calling us\n  getHeaderName(colDef, column, columnGroup, providedColumnGroup, location) {\n    const headerValueGetter = colDef.headerValueGetter;\n    if (headerValueGetter) {\n      const params = _addGridCommonParams(this.gos, {\n        colDef,\n        column,\n        columnGroup,\n        providedColumnGroup,\n        location\n      });\n      if (typeof headerValueGetter === \"function\") {\n        return headerValueGetter(params);\n      } else if (typeof headerValueGetter === \"string\") {\n        return this.beans.expressionSvc?.evaluate(headerValueGetter, params) ?? null;\n      }\n      return \"\";\n    } else if (colDef.headerName != null) {\n      return colDef.headerName;\n    } else if (colDef.field) {\n      return _camelCaseToHumanText(colDef.field);\n    }\n    return \"\";\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnViewportService.ts\nvar ColumnViewportService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colViewport\";\n    // cols in center that are in the viewport\n    this.colsWithinViewport = [];\n    // same as colsWithinViewport, except we always include columns with headerAutoHeight\n    this.headerColsWithinViewport = [];\n    // A hash key to keep track of changes in viewport columns\n    this.colsWithinViewportHash = \"\";\n    // all columns & groups to be rendered, index by row.\n    // used by header rows to get all items to render for that row.\n    this.rowsOfHeadersToRenderLeft = {};\n    this.rowsOfHeadersToRenderRight = {};\n    this.rowsOfHeadersToRenderCenter = {};\n    this.columnsToRenderLeft = [];\n    this.columnsToRenderRight = [];\n    this.columnsToRenderCenter = [];\n  }\n  wireBeans(beans) {\n    this.visibleCols = beans.visibleCols;\n    this.colModel = beans.colModel;\n  }\n  postConstruct() {\n    this.suppressColumnVirtualisation = this.gos.get(\"suppressColumnVirtualisation\");\n  }\n  setScrollPosition(scrollWidth, scrollPosition, afterScroll = false) {\n    const {\n      visibleCols\n    } = this;\n    const bodyWidthDirty = visibleCols.isBodyWidthDirty;\n    const noChange = scrollWidth === this.scrollWidth && scrollPosition === this.scrollPosition && !bodyWidthDirty;\n    if (noChange) {\n      return;\n    }\n    this.scrollWidth = scrollWidth;\n    this.scrollPosition = scrollPosition;\n    visibleCols.isBodyWidthDirty = true;\n    if (this.gos.get(\"enableRtl\")) {\n      const bodyWidth = visibleCols.bodyWidth;\n      this.viewportLeft = bodyWidth - scrollPosition - scrollWidth;\n      this.viewportRight = bodyWidth - scrollPosition;\n    } else {\n      this.viewportLeft = scrollPosition;\n      this.viewportRight = scrollWidth + scrollPosition;\n    }\n    if (this.colModel.ready) {\n      this.checkViewportColumns(afterScroll);\n    }\n  }\n  /**\n   * Returns the columns that are currently rendered in the viewport.\n   */\n  getColumnHeadersToRender(type) {\n    switch (type) {\n      case \"left\":\n        return this.columnsToRenderLeft;\n      case \"right\":\n        return this.columnsToRenderRight;\n      default:\n        return this.columnsToRenderCenter;\n    }\n  }\n  /**\n   * Returns the column groups that are currently rendered in the viewport at a specific header row index.\n   */\n  getHeadersToRender(type, depth) {\n    let result;\n    switch (type) {\n      case \"left\":\n        result = this.rowsOfHeadersToRenderLeft[depth];\n        break;\n      case \"right\":\n        result = this.rowsOfHeadersToRenderRight[depth];\n        break;\n      default:\n        result = this.rowsOfHeadersToRenderCenter[depth];\n        break;\n    }\n    return result ?? [];\n  }\n  extractViewportColumns() {\n    const displayedColumnsCenter = this.visibleCols.centerCols;\n    if (this.isColumnVirtualisationSuppressed()) {\n      this.colsWithinViewport = displayedColumnsCenter;\n      this.headerColsWithinViewport = displayedColumnsCenter;\n    } else {\n      this.colsWithinViewport = displayedColumnsCenter.filter(this.isColumnInRowViewport.bind(this));\n      this.headerColsWithinViewport = displayedColumnsCenter.filter(this.isColumnInHeaderViewport.bind(this));\n    }\n  }\n  isColumnVirtualisationSuppressed() {\n    return this.suppressColumnVirtualisation || this.viewportRight === 0;\n  }\n  clear() {\n    this.rowsOfHeadersToRenderLeft = {};\n    this.rowsOfHeadersToRenderRight = {};\n    this.rowsOfHeadersToRenderCenter = {};\n    this.colsWithinViewportHash = \"\";\n  }\n  isColumnInHeaderViewport(col) {\n    if (col.isAutoHeaderHeight() || isAnyParentAutoHeaderHeight(col)) {\n      return true;\n    }\n    return this.isColumnInRowViewport(col);\n  }\n  isColumnInRowViewport(col) {\n    if (col.isAutoHeight()) {\n      return true;\n    }\n    const columnLeft = col.getLeft() || 0;\n    const columnRight = columnLeft + col.getActualWidth();\n    const leftBounds = this.viewportLeft - 200;\n    const rightBounds = this.viewportRight + 200;\n    const columnToMuchLeft = columnLeft < leftBounds && columnRight < leftBounds;\n    const columnToMuchRight = columnLeft > rightBounds && columnRight > rightBounds;\n    return !columnToMuchLeft && !columnToMuchRight;\n  }\n  // used by Grid API only\n  getViewportColumns() {\n    const {\n      leftCols,\n      rightCols\n    } = this.visibleCols;\n    const res = this.colsWithinViewport.concat(leftCols).concat(rightCols);\n    return res;\n  }\n  // + rowRenderer\n  // if we are not column spanning, this just returns back the virtual centre columns,\n  // however if we are column spanning, then different rows can have different virtual\n  // columns, so we have to work out the list for each individual row.\n  getColsWithinViewport(rowNode) {\n    if (!this.colModel.colSpanActive) {\n      return this.colsWithinViewport;\n    }\n    const emptySpaceBeforeColumn = col => {\n      const left = col.getLeft();\n      return _exists(left) && left > this.viewportLeft;\n    };\n    const inViewportCallback = this.isColumnVirtualisationSuppressed() ? void 0 : this.isColumnInRowViewport.bind(this);\n    const {\n      visibleCols\n    } = this;\n    const displayedColumnsCenter = visibleCols.centerCols;\n    return visibleCols.getColsForRow(rowNode, displayedColumnsCenter, inViewportCallback, emptySpaceBeforeColumn);\n  }\n  // checks what columns are currently displayed due to column virtualisation. dispatches an event\n  // if the list of columns has changed.\n  // + setColumnWidth(), setViewportPosition(), setColumnDefs(), sizeColumnsToFit()\n  checkViewportColumns(afterScroll = false) {\n    const viewportColumnsChanged = this.extractViewport();\n    if (viewportColumnsChanged) {\n      this.eventSvc.dispatchEvent({\n        type: \"virtualColumnsChanged\",\n        afterScroll\n      });\n    }\n  }\n  calculateHeaderRows() {\n    const {\n      leftCols,\n      rightCols\n    } = this.visibleCols;\n    this.columnsToRenderLeft = leftCols;\n    this.columnsToRenderRight = rightCols;\n    this.columnsToRenderCenter = this.colsWithinViewport;\n    const workOutGroupsToRender = cols => {\n      const groupsToRenderSet = /* @__PURE__ */new Set();\n      const groupsToRender = {};\n      for (const col of cols) {\n        let group = col.getParent();\n        const skipFillers = col.isSpanHeaderHeight();\n        while (group) {\n          if (groupsToRenderSet.has(group)) {\n            break;\n          }\n          const skipFillerGroup = skipFillers && group.isPadding();\n          if (skipFillerGroup) {\n            group = group.getParent();\n            continue;\n          }\n          const level = group.getProvidedColumnGroup().getLevel();\n          groupsToRender[level] ?? (groupsToRender[level] = []);\n          groupsToRender[level].push(group);\n          groupsToRenderSet.add(group);\n          group = group.getParent();\n        }\n      }\n      return groupsToRender;\n    };\n    this.rowsOfHeadersToRenderLeft = workOutGroupsToRender(leftCols);\n    this.rowsOfHeadersToRenderRight = workOutGroupsToRender(rightCols);\n    this.rowsOfHeadersToRenderCenter = workOutGroupsToRender(this.headerColsWithinViewport);\n  }\n  extractViewport() {\n    const hashColumn = c => `${c.getId()}-${c.getPinned() || \"normal\"}`;\n    this.extractViewportColumns();\n    const newHash = this.getViewportColumns().map(hashColumn).join(\"#\");\n    const changed = this.colsWithinViewportHash !== newHash;\n    if (changed) {\n      this.colsWithinViewportHash = newHash;\n      this.calculateHeaderRows();\n    }\n    return changed;\n  }\n};\nfunction isAnyParentAutoHeaderHeight(col) {\n  while (col) {\n    if (col.isAutoHeaderHeight()) {\n      return true;\n    }\n    col = col.getParent();\n  }\n  return false;\n}\n\n// packages/ag-grid-community/src/components/framework/agComponentUtils.ts\nvar AgComponentUtils = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"agCompUtils\";\n  }\n  adaptFunction(type, jsCompFunc) {\n    if (!type.cellRenderer) {\n      return null;\n    }\n    class Adapter {\n      refresh() {\n        return false;\n      }\n      getGui() {\n        return this.eGui;\n      }\n      init(params) {\n        const callbackResult = jsCompFunc(params);\n        const type2 = typeof callbackResult;\n        if (type2 === \"string\" || type2 === \"number\" || type2 === \"boolean\") {\n          this.eGui = _loadTemplate(\"<span>\" + callbackResult + \"</span>\");\n          return;\n        }\n        if (callbackResult == null) {\n          this.eGui = _createElement({\n            tag: \"span\"\n          });\n          return;\n        }\n        this.eGui = callbackResult;\n      }\n    }\n    return Adapter;\n  }\n};\n\n// packages/ag-grid-community/src/components/framework/cellRendererFunctionModule.ts\nvar CellRendererFunctionModule = {\n  moduleName: \"CellRendererFunction\",\n  version: VERSION,\n  beans: [AgComponentUtils]\n};\n\n// packages/ag-grid-community/src/components/framework/registry.ts\nvar Registry = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"registry\";\n    this.agGridDefaults = {};\n    this.agGridDefaultOverrides = {};\n    this.jsComps = {};\n    this.selectors = {};\n    this.icons = {};\n  }\n  postConstruct() {\n    const comps = this.gos.get(\"components\");\n    if (comps != null) {\n      for (const key of Object.keys(comps)) {\n        this.jsComps[key] = comps[key];\n      }\n    }\n  }\n  registerModule(module) {\n    const {\n      icons,\n      userComponents,\n      dynamicBeans,\n      selectors\n    } = module;\n    if (userComponents) {\n      const registerUserComponent = (name, component, params, processParams) => {\n        this.agGridDefaults[name] = component;\n        if (params || processParams) {\n          this.agGridDefaultOverrides[name] = {\n            params,\n            processParams\n          };\n        }\n      };\n      for (const name of Object.keys(userComponents)) {\n        let comp = userComponents[name];\n        if (isComponentMetaFunc(comp)) {\n          comp = comp.getComp(this.beans);\n        }\n        if (typeof comp === \"object\") {\n          const {\n            classImp,\n            params,\n            processParams\n          } = comp;\n          registerUserComponent(name, classImp, params, processParams);\n        } else {\n          registerUserComponent(name, comp);\n        }\n      }\n    }\n    if (dynamicBeans) {\n      this.dynamicBeans ?? (this.dynamicBeans = {});\n      for (const name of Object.keys(dynamicBeans)) {\n        this.dynamicBeans[name] = dynamicBeans[name];\n      }\n    }\n    selectors?.forEach(selector => {\n      this.selectors[selector.selector] = selector;\n    });\n    if (icons) {\n      for (const name of Object.keys(icons)) {\n        this.icons[name] = icons[name];\n      }\n    }\n  }\n  getUserComponent(propertyName, name) {\n    const createResult = (component, componentFromFramework, params, processParams) => ({\n      componentFromFramework,\n      component,\n      params,\n      processParams\n    });\n    const {\n      frameworkOverrides\n    } = this.beans;\n    const registeredViaFrameworkComp = frameworkOverrides.frameworkComponent(name, this.gos.get(\"components\"));\n    if (registeredViaFrameworkComp != null) {\n      return createResult(registeredViaFrameworkComp, true);\n    }\n    const jsComponent = this.jsComps[name];\n    if (jsComponent) {\n      const isFwkComp = frameworkOverrides.isFrameworkComponent(jsComponent);\n      return createResult(jsComponent, isFwkComp);\n    }\n    const defaultComponent = this.agGridDefaults[name];\n    if (defaultComponent) {\n      const overrides = this.agGridDefaultOverrides[name];\n      return createResult(defaultComponent, false, overrides?.params, overrides?.processParams);\n    }\n    this.beans.validation?.missingUserComponent(propertyName, name, this.agGridDefaults, this.jsComps);\n    return null;\n  }\n  createDynamicBean(name, mandatory, ...args) {\n    if (!this.dynamicBeans) {\n      throw new Error(_errMsg(279, {\n        name\n      }));\n    }\n    const BeanClass = this.dynamicBeans[name];\n    if (BeanClass == null) {\n      if (mandatory) {\n        throw new Error(this.beans.validation?.missingDynamicBean(name) ?? _errMsg(256));\n      }\n      return void 0;\n    }\n    return new BeanClass(...args);\n  }\n  getSelector(name) {\n    return this.selectors[name];\n  }\n  getIcon(name) {\n    return this.icons[name];\n  }\n};\n\n// packages/ag-grid-community/src/ctrlsService.ts\nvar NUM_CTRLS = 23;\nvar CtrlsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"ctrlsSvc\";\n    this.params = {};\n    this.ready = false;\n    this.readyCallbacks = [];\n  }\n  postConstruct() {\n    this.addEventListener(\"ready\", () => {\n      this.updateReady();\n      if (this.ready) {\n        this.readyCallbacks.forEach(c => c(this.params));\n        this.readyCallbacks.length = 0;\n      }\n    }, this.beans.frameworkOverrides.runWhenReadyAsync?.() ?? false);\n  }\n  updateReady() {\n    const values = Object.values(this.params);\n    this.ready = values.length === NUM_CTRLS && values.every(ctrl => {\n      return ctrl?.isAlive() ?? false;\n    });\n  }\n  whenReady(caller, callback) {\n    if (this.ready) {\n      callback(this.params);\n    } else {\n      this.readyCallbacks.push(callback);\n    }\n    caller.addDestroyFunc(() => {\n      const index = this.readyCallbacks.indexOf(callback);\n      if (index >= 0) {\n        this.readyCallbacks.splice(index, 1);\n      }\n    });\n  }\n  register(ctrlType, ctrl) {\n    this.params[ctrlType] = ctrl;\n    this.updateReady();\n    if (this.ready) {\n      this.dispatchLocalEvent({\n        type: \"ready\"\n      });\n    }\n    ctrl.addDestroyFunc(() => {\n      this.updateReady();\n    });\n  }\n  get(ctrlType) {\n    return this.params[ctrlType];\n  }\n  getGridBodyCtrl() {\n    return this.params.gridBodyCtrl;\n  }\n  getHeaderRowContainerCtrls() {\n    const {\n      leftHeader,\n      centerHeader,\n      rightHeader\n    } = this.params;\n    return [leftHeader, rightHeader, centerHeader];\n  }\n  getHeaderRowContainerCtrl(pinned) {\n    const params = this.params;\n    switch (pinned) {\n      case \"left\":\n        return params.leftHeader;\n      case \"right\":\n        return params.rightHeader;\n      default:\n        return params.centerHeader;\n    }\n  }\n  getScrollFeature() {\n    return this.getGridBodyCtrl().scrollFeature;\n  }\n};\n\n// packages/ag-grid-community/src/theming/core/core.css-GENERATED.ts\nvar coreCSS = /*css*/\n`:where(.ag-root-wrapper,.ag-popup,.ag-dnd-ghost,.ag-chart),:where(.ag-root-wrapper,.ag-popup,.ag-dnd-ghost,.ag-chart) :where([class^=ag-]){box-sizing:border-box;&:after,&:before{box-sizing:border-box}&:where(div,span,label):focus-visible{box-shadow:inset var(--ag-focus-shadow);outline:none;&:where(.invalid){box-shadow:inset var(--ag-focus-error-shadow)}}&:where(button){color:inherit}}:where(.ag-root-wrapper,.ag-popup,.ag-dnd-ghost,.ag-chart) :where([class^=ag-]) ::-ms-clear{display:none}.ag-aria-description-container{border:0;z-index:9999;clip:rect(1px,1px,1px,1px);height:1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:1px}.ag-hidden{display:none!important}.ag-invisible{visibility:hidden!important}.ag-unselectable{-webkit-user-select:none;-moz-user-select:none;user-select:none}.ag-selectable{-webkit-user-select:text;-moz-user-select:text;user-select:text}.ag-tab-guard{display:block;height:0;position:absolute;width:0}:where(.ag-virtual-list-viewport) .ag-tab-guard{position:sticky}.ag-tab-guard-top{top:1px}.ag-tab-guard-bottom{bottom:1px}.ag-shake-left-to-right{animation-direction:alternate;animation-duration:.2s;animation-iteration-count:infinite;animation-name:ag-shake-left-to-right}@keyframes ag-shake-left-to-right{0%{padding-left:6px;padding-right:2px}to{padding-left:2px;padding-right:6px}}.ag-body-horizontal-scroll-viewport,.ag-body-vertical-scroll-viewport,.ag-body-viewport,.ag-center-cols-viewport,.ag-floating-bottom-viewport,.ag-floating-top-viewport,.ag-header-viewport,.ag-sticky-bottom-viewport,.ag-sticky-top-viewport,.ag-virtual-list-viewport{flex:1 1 auto;height:100%;min-width:0;overflow:hidden;position:relative}.ag-viewport{position:relative}.ag-spanning-container{position:absolute;top:0;z-index:1}.ag-body-viewport,.ag-center-cols-viewport,.ag-floating-bottom-viewport,.ag-floating-top-viewport,.ag-header-viewport,.ag-sticky-bottom-viewport,.ag-sticky-top-viewport{overflow-x:auto;-ms-overflow-style:none!important;scrollbar-width:none!important;&::-webkit-scrollbar{display:none!important}}.ag-body-viewport{display:flex;overflow-x:hidden;&:where(.ag-layout-normal){overflow-y:auto;-webkit-overflow-scrolling:touch}}.ag-floating-bottom-container,.ag-floating-top-container,.ag-sticky-bottom-container,.ag-sticky-top-container{min-height:1px}.ag-center-cols-viewport{min-height:100%;width:100%}.ag-body-horizontal-scroll-viewport{overflow-x:scroll}.ag-body-vertical-scroll-viewport{overflow-y:scroll}.ag-virtual-list-viewport{overflow:auto;width:100%}.ag-body-container,.ag-body-horizontal-scroll-container,.ag-body-vertical-scroll-container,.ag-center-cols-container,.ag-floating-bottom-container,.ag-floating-bottom-full-width-container,.ag-floating-top-container,.ag-full-width-container,.ag-header-container,.ag-pinned-left-cols-container,.ag-pinned-right-cols-container,.ag-sticky-bottom-container,.ag-sticky-top-container,.ag-virtual-list-container{position:relative}.ag-floating-bottom-container,.ag-floating-top-container,.ag-header-container,.ag-pinned-left-floating-bottom,.ag-pinned-left-floating-top,.ag-pinned-right-floating-bottom,.ag-pinned-right-floating-top,.ag-sticky-bottom-container,.ag-sticky-top-container{height:100%;white-space:nowrap}.ag-center-cols-container,.ag-pinned-right-cols-container{display:block}.ag-body-horizontal-scroll-container{height:100%}.ag-body-vertical-scroll-container{width:100%}.ag-floating-bottom-full-width-container,.ag-floating-top-full-width-container,.ag-full-width-container,.ag-sticky-bottom-full-width-container,.ag-sticky-top-full-width-container{pointer-events:none;position:absolute;top:0}:where(.ag-ltr) .ag-floating-bottom-full-width-container,:where(.ag-ltr) .ag-floating-top-full-width-container,:where(.ag-ltr) .ag-full-width-container,:where(.ag-ltr) .ag-sticky-bottom-full-width-container,:where(.ag-ltr) .ag-sticky-top-full-width-container{left:0}:where(.ag-rtl) .ag-floating-bottom-full-width-container,:where(.ag-rtl) .ag-floating-top-full-width-container,:where(.ag-rtl) .ag-full-width-container,:where(.ag-rtl) .ag-sticky-bottom-full-width-container,:where(.ag-rtl) .ag-sticky-top-full-width-container{right:0}.ag-full-width-container{width:100%}.ag-floating-bottom-full-width-container,.ag-floating-top-full-width-container{display:inline-block;height:100%;overflow:hidden;width:100%}.ag-virtual-list-container{overflow:hidden}.ag-body{display:flex;flex:1 1 auto;flex-direction:row!important;min-height:0;position:relative}.ag-body-horizontal-scroll,.ag-body-vertical-scroll{display:flex;min-height:0;min-width:0;position:relative;&:where(.ag-scrollbar-invisible){bottom:0;position:absolute;&:where(.ag-apple-scrollbar){opacity:0;transition:opacity .4s;visibility:hidden;&:where(.ag-scrollbar-scrolling,.ag-scrollbar-active){opacity:1;visibility:visible}}}}.ag-body-horizontal-scroll{width:100%;&:where(.ag-scrollbar-invisible){left:0;right:0}}.ag-body-vertical-scroll{height:100%;&:where(.ag-scrollbar-invisible){top:0;z-index:10}}:where(.ag-ltr) .ag-body-vertical-scroll{&:where(.ag-scrollbar-invisible){right:0}}:where(.ag-rtl) .ag-body-vertical-scroll{&:where(.ag-scrollbar-invisible){left:0}}.ag-force-vertical-scroll{overflow-y:scroll!important}.ag-horizontal-left-spacer,.ag-horizontal-right-spacer{height:100%;min-width:0;overflow-x:scroll;&:where(.ag-scroller-corner){overflow-x:hidden}}:where(.ag-row-animation) .ag-row{transition:transform .4s,top .4s,opacity .2s;&:where(.ag-after-created){transition:transform .4s,top .4s,height .4s,opacity .2s}}:where(.ag-row-animation.ag-prevent-animation) .ag-row{transition:none!important;&:where(.ag-row.ag-after-created){transition:none!important}}:where(.ag-row-no-animation) .ag-row{transition:none}.ag-row-loading{align-items:center;display:flex}.ag-row-position-absolute{position:absolute}.ag-row-position-relative{position:relative}.ag-full-width-row{overflow:hidden;pointer-events:all}.ag-row-inline-editing{z-index:1}.ag-row-dragging{z-index:2}.ag-stub-cell{align-items:center;display:flex}.ag-cell{display:inline-block;height:100%;position:absolute;white-space:nowrap;&:focus-visible{box-shadow:none}}.ag-cell-value{flex:1 1 auto}.ag-cell-value,.ag-group-value{overflow:hidden;text-overflow:ellipsis}.ag-cell-wrap-text{white-space:normal;word-break:break-word}:where(.ag-cell) .ag-icon{display:inline-block;vertical-align:middle}.ag-floating-top{display:flex;overflow:hidden;position:relative;white-space:nowrap;width:100%}:where(.ag-floating-top:not(.ag-invisible)){border-bottom:var(--ag-pinned-row-border)}.ag-floating-bottom{display:flex;overflow:hidden;position:relative;white-space:nowrap;width:100%}:where(.ag-floating-bottom:not(.ag-invisible)){border-top:var(--ag-pinned-row-border)}.ag-sticky-bottom,.ag-sticky-top{background-color:var(--ag-background-color);display:flex;height:0;overflow:hidden;position:absolute;width:100%;z-index:1}.ag-opacity-zero{opacity:0!important}.ag-cell-label-container{align-items:center;display:flex;flex-direction:row-reverse;height:100%;justify-content:space-between;width:100%}:where(.ag-right-aligned-header){.ag-cell-label-container{flex-direction:row}.ag-header-cell-text{text-align:end}}.ag-column-group-icons{display:block;>*{cursor:pointer}}:where(.ag-ltr){direction:ltr;.ag-body,.ag-body-horizontal-scroll,.ag-body-viewport,.ag-floating-bottom,.ag-floating-top,.ag-header,.ag-sticky-bottom,.ag-sticky-top{flex-direction:row}}:where(.ag-rtl){direction:rtl;text-align:right;.ag-body,.ag-body-horizontal-scroll,.ag-body-viewport,.ag-floating-bottom,.ag-floating-top,.ag-header,.ag-sticky-bottom,.ag-sticky-top{flex-direction:row-reverse}.ag-icon-contracted,.ag-icon-expanded,.ag-icon-tree-closed{display:block}}:where(.ag-rtl){.ag-icon-contracted,.ag-icon-expanded,.ag-icon-tree-closed{transform:rotate(180deg)}}:where(.ag-rtl){.ag-icon-contracted,.ag-icon-expanded,.ag-icon-tree-closed{transform:rotate(-180deg)}}.ag-measurement-container{height:0;overflow:hidden;visibility:hidden;width:0}.ag-measurement-element-border{display:inline-block;&:before{border-left:var(--ag-internal-measurement-border);content:\"\";display:block}}.ag-group{position:relative;width:100%}.ag-group-title-bar{align-items:center;display:flex;padding:var(--ag-spacing)}.ag-group-title{display:inline;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:where(.ag-group-title-bar) .ag-group-title{cursor:default}.ag-group-toolbar{align-items:center;display:flex;padding:var(--ag-spacing)}.ag-group-container{display:flex}.ag-disabled .ag-group-container{pointer-events:none}.ag-disabled-group-container,.ag-disabled-group-title-bar{opacity:.5}.ag-group-container-horizontal{flex-flow:row wrap}.ag-group-container-vertical{flex-direction:column}.ag-group-title-bar-icon{cursor:pointer;flex:none}:where(.ag-ltr) .ag-group-title-bar-icon{margin-right:var(--ag-spacing)}:where(.ag-rtl) .ag-group-title-bar-icon{margin-left:var(--ag-spacing)}:where(.ag-group-item-alignment-stretch) .ag-group-item{align-items:stretch}:where(.ag-group-item-alignment-start) .ag-group-item{align-items:flex-start}:where(.ag-group-item-alignment-end) .ag-group-item{align-items:flex-end}.ag-popup-child{top:0;z-index:5;&:where(:not(.ag-tooltip-custom)){box-shadow:var(--ag-popup-shadow)}}.ag-popup-editor{position:absolute;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ag-large-text-input{display:block}:where(.ag-ltr) .ag-row:not(.ag-row-level-0) .ag-pivot-leaf-group{margin-left:var(--ag-row-group-indent-size)}:where(.ag-rtl) .ag-row:not(.ag-row-level-0) .ag-pivot-leaf-group{margin-right:var(--ag-row-group-indent-size)}:where(.ag-ltr) .ag-row-group-leaf-indent{margin-left:calc(var(--ag-cell-widget-spacing) + var(--ag-icon-size))}:where(.ag-rtl) .ag-row-group-leaf-indent{margin-right:calc(var(--ag-cell-widget-spacing) + var(--ag-icon-size))}.ag-value-change-delta{padding:0 2px}.ag-value-change-delta-up{color:var(--ag-value-change-delta-up-color)}.ag-value-change-delta-down{color:var(--ag-value-change-delta-down-color)}.ag-value-change-value{background-color:transparent;border-radius:1px;padding-left:1px;padding-right:1px;transition:background-color 1s}.ag-value-change-value-highlight{background-color:var(--ag-value-change-value-highlight-background-color);transition:background-color .1s}.ag-cell-data-changed{background-color:var(--ag-value-change-value-highlight-background-color)!important}.ag-cell-data-changed-animation{background-color:transparent}.ag-cell-highlight{background-color:var(--ag-range-selection-highlight-color)!important}.ag-row,.ag-spanned-row{color:var(--ag-cell-text-color);font-family:var(--ag-cell-font-family);font-size:var(--ag-data-font-size);white-space:nowrap;--ag-internal-content-line-height:calc(min(var(--ag-row-height), var(--ag-line-height, 1000px)) - var(--ag-internal-row-border-width, 1px) - 2px)}.ag-row{background-color:var(--ag-background-color);border-bottom:var(--ag-row-border);height:var(--ag-row-height);width:100%;&.ag-row-editing-invalid{background-color:var(--ag-full-row-edit-invalid-background-color)}}:where(.ag-body-vertical-content-no-gap>div>div>div,.ag-body-vertical-content-no-gap>div>div>div>div)>.ag-row-last{border-bottom-color:transparent}.ag-sticky-bottom{border-top:var(--ag-row-border);box-sizing:content-box!important}.ag-group-contracted,.ag-group-expanded{cursor:pointer}.ag-cell,.ag-full-width-row .ag-cell-wrapper.ag-row-group{border:1px solid transparent;line-height:var(--ag-internal-content-line-height);-webkit-font-smoothing:subpixel-antialiased}:where(.ag-ltr) .ag-cell{border-right:var(--ag-column-border)}:where(.ag-rtl) .ag-cell{border-left:var(--ag-column-border)}.ag-spanned-cell-wrapper{background-color:var(--ag-background-color);position:absolute}.ag-spanned-cell-wrapper>.ag-spanned-cell{display:block;position:relative}:where(.ag-ltr) :where(.ag-body-horizontal-content-no-gap) .ag-column-last{border-right-color:transparent}:where(.ag-rtl) :where(.ag-body-horizontal-content-no-gap) .ag-column-last{border-left-color:transparent}.ag-cell-wrapper{align-items:center;display:flex;>:where(:not(.ag-cell-value,.ag-group-value)){align-items:center;display:flex;height:var(--ag-internal-content-line-height)}&:where(.ag-row-group){align-items:flex-start}:where(.ag-full-width-row) &:where(.ag-row-group){align-items:center;height:100%}}:where(.ag-ltr) .ag-cell-wrapper{padding-left:calc(var(--ag-indentation-level)*var(--ag-row-group-indent-size))}:where(.ag-rtl) .ag-cell-wrapper{padding-right:calc(var(--ag-indentation-level)*var(--ag-row-group-indent-size))}:where(.ag-cell-wrap-text:not(.ag-cell-auto-height)) .ag-cell-wrapper{align-items:normal;height:100%;:where(.ag-cell-value){height:100%}}:where(.ag-ltr) .ag-row>.ag-cell-wrapper.ag-row-group{padding-left:calc(var(--ag-cell-horizontal-padding) + var(--ag-row-group-indent-size)*var(--ag-indentation-level))}:where(.ag-rtl) .ag-row>.ag-cell-wrapper.ag-row-group{padding-right:calc(var(--ag-cell-horizontal-padding) + var(--ag-row-group-indent-size)*var(--ag-indentation-level))}.ag-cell-focus:not(.ag-cell-range-selected):focus-within,.ag-cell-range-single-cell,.ag-cell-range-single-cell.ag-cell-range-handle,.ag-context-menu-open .ag-cell-focus:not(.ag-cell-range-selected),.ag-context-menu-open .ag-full-width-row.ag-row-focus .ag-cell-wrapper.ag-row-group,.ag-full-width-row.ag-row-focus:focus .ag-cell-wrapper.ag-row-group{border:1px solid;border-color:var(--ag-range-selection-border-color);border-style:var(--ag-range-selection-border-style);outline:initial}.ag-full-width-row.ag-row-focus:focus{box-shadow:none}:where(.ag-ltr) .ag-group-contracted,:where(.ag-ltr) .ag-group-expanded,:where(.ag-ltr) .ag-row-drag,:where(.ag-ltr) .ag-selection-checkbox{margin-right:var(--ag-cell-widget-spacing)}:where(.ag-rtl) .ag-group-contracted,:where(.ag-rtl) .ag-group-expanded,:where(.ag-rtl) .ag-row-drag,:where(.ag-rtl) .ag-selection-checkbox{margin-left:var(--ag-cell-widget-spacing)}:where(.ag-ltr) .ag-group-child-count{margin-left:3px}:where(.ag-rtl) .ag-group-child-count{margin-right:3px}.ag-row-highlight-above:after,.ag-row-highlight-below:after,.ag-row-highlight-inside:after{background-color:var(--ag-range-selection-border-color);content:\"\";height:1px;pointer-events:none;position:absolute;width:calc(100% - 1px)}:where(.ag-ltr) .ag-row-highlight-above:after,:where(.ag-ltr) .ag-row-highlight-below:after,:where(.ag-ltr) .ag-row-highlight-inside:after{left:1px}:where(.ag-rtl) .ag-row-highlight-above:after,:where(.ag-rtl) .ag-row-highlight-below:after,:where(.ag-rtl) .ag-row-highlight-inside:after{right:1px}.ag-row-highlight-above:after{top:0}.ag-row-highlight-below:after{bottom:0}.ag-row-highlight-indent:after{display:block;width:auto}:where(.ag-ltr) .ag-row-highlight-indent:after{left:calc((var(--ag-cell-widget-spacing) + var(--ag-icon-size))*2 + var(--ag-cell-horizontal-padding) + var(--ag-row-highlight-level)*var(--ag-row-group-indent-size));right:1px}:where(.ag-rtl) .ag-row-highlight-indent:after{left:1px;right:calc((var(--ag-cell-widget-spacing) + var(--ag-icon-size))*2 + var(--ag-cell-horizontal-padding) + var(--ag-row-highlight-level)*var(--ag-row-group-indent-size))}.ag-row-highlight-inside:after{background-color:var(--ag-selected-row-background-color);border:1px solid var(--ag-range-selection-border-color);display:block;height:auto;inset:0;width:auto}.ag-row-odd{background-color:var(--ag-odd-row-background-color)}.ag-row-selected:before{background-color:var(--ag-selected-row-background-color);content:\"\";display:block;inset:0;pointer-events:none;position:absolute}.ag-row-hover.ag-full-width-row.ag-row-group:before,.ag-row-hover:not(.ag-full-width-row):before{background-color:var(--ag-row-hover-color);content:\"\";display:block;inset:0;pointer-events:none;position:absolute}.ag-row-hover.ag-row-selected:before{background-color:var(--ag-row-hover-color);background-image:linear-gradient(var(--ag-selected-row-background-color),var(--ag-selected-row-background-color))}.ag-row.ag-full-width-row.ag-row-group>*{position:relative}.ag-column-hover{background-color:var(--ag-column-hover-color)}.ag-header-range-highlight{background-color:var(--ag-range-header-highlight-color)}.ag-right-aligned-cell{font-variant-numeric:tabular-nums}:where(.ag-ltr) .ag-right-aligned-cell{text-align:right}:where(.ag-rtl) .ag-right-aligned-cell{text-align:left}.ag-right-aligned-cell .ag-cell-value,.ag-right-aligned-cell .ag-group-value{margin-left:auto}:where(.ag-ltr) .ag-cell:not(.ag-cell-inline-editing),:where(.ag-ltr) .ag-full-width-row .ag-cell-wrapper.ag-row-group{padding-left:calc(var(--ag-cell-horizontal-padding) - 1px + var(--ag-row-group-indent-size)*var(--ag-indentation-level));padding-right:calc(var(--ag-cell-horizontal-padding) - 1px)}:where(.ag-rtl) .ag-cell:not(.ag-cell-inline-editing),:where(.ag-rtl) .ag-full-width-row .ag-cell-wrapper.ag-row-group{padding-left:calc(var(--ag-cell-horizontal-padding) - 1px);padding-right:calc(var(--ag-cell-horizontal-padding) - 1px + var(--ag-row-group-indent-size)*var(--ag-indentation-level))}.ag-row>.ag-cell-wrapper{padding-left:calc(var(--ag-cell-horizontal-padding) - 1px);padding-right:calc(var(--ag-cell-horizontal-padding) - 1px)}.ag-row-dragging{cursor:move;opacity:.5}.ag-details-row{background-color:var(--ag-background-color);padding:calc(var(--ag-spacing)*3.75)}.ag-layout-auto-height,.ag-layout-print{.ag-center-cols-container,.ag-center-cols-viewport{min-height:150px}}.ag-overlay-loading-wrapper{background-color:var(--ag-modal-overlay-background-color)}.ag-skeleton-container{align-content:center;height:100%;width:100%}.ag-skeleton-effect{animation:ag-skeleton-loading 1.5s ease-in-out .5s infinite;background-color:var(--ag-row-loading-skeleton-effect-color);border-radius:.25rem;height:1em;width:100%}:where(.ag-ltr) .ag-right-aligned-cell .ag-skeleton-effect{margin-left:auto}:where(.ag-rtl) .ag-right-aligned-cell .ag-skeleton-effect{margin-right:auto}@keyframes ag-skeleton-loading{0%{background-color:var(--ag-row-loading-skeleton-effect-color)}50%{background-color:color-mix(in srgb,transparent,var(--ag-row-loading-skeleton-effect-color) 40%)}to{background-color:var(--ag-row-loading-skeleton-effect-color)}}.ag-loading{align-items:center;display:flex;height:100%}:where(.ag-ltr) .ag-loading{padding-left:var(--ag-cell-horizontal-padding)}:where(.ag-rtl) .ag-loading{padding-right:var(--ag-cell-horizontal-padding)}:where(.ag-ltr) .ag-loading-icon{padding-right:var(--ag-cell-widget-spacing)}:where(.ag-rtl) .ag-loading-icon{padding-left:var(--ag-cell-widget-spacing)}.ag-icon-loading{animation-duration:1s;animation-iteration-count:infinite;animation-name:spin;animation-timing-function:linear}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.ag-input-wrapper,.ag-picker-field-wrapper{align-items:center;display:flex;flex:1 1 auto;line-height:normal;position:relative}.ag-input-field{align-items:center;display:flex;flex-direction:row}.ag-input-field-input:where(:not([type=checkbox],[type=radio])){flex:1 1 auto;min-width:0;width:100%}.ag-header{background-color:var(--ag-header-background-color);border-bottom:var(--ag-header-row-border);color:var(--ag-header-text-color);display:flex;font-family:var(--ag-header-font-family);font-size:var(--ag-header-font-size);font-weight:var(--ag-header-font-weight);overflow:hidden;white-space:nowrap;width:100%}.ag-header-row{height:var(--ag-header-height);position:absolute}.ag-floating-filter-button-button,.ag-header-cell-filter-button,.ag-header-cell-menu-button,.ag-header-expand-icon,.ag-panel-title-bar-button,:where(.ag-header-cell-sortable) .ag-header-cell-label{cursor:pointer}:where(.ag-ltr) .ag-header-expand-icon{margin-left:4px}:where(.ag-rtl) .ag-header-expand-icon{margin-right:4px}.ag-header-row:where(:not(:first-child)){:where(.ag-header-cell:not(.ag-header-span-height.ag-header-span-total,.ag-header-parent-hidden),.ag-header-group-cell.ag-header-group-cell-with-group){border-top:var(--ag-header-row-border)}}.ag-header-row:where(:not(.ag-header-row-column-group)){overflow:hidden}:where(.ag-header.ag-header-allow-overflow) .ag-header-row{overflow:visible}.ag-header-cell{display:inline-flex;overflow:hidden}.ag-header-group-cell{contain:paint;display:flex}.ag-header-cell,.ag-header-group-cell{align-items:center;gap:var(--ag-cell-widget-spacing);height:100%;padding:0 var(--ag-cell-horizontal-padding);position:absolute}@property --ag-internal-moving-color{syntax:\"<color>\";inherits:false;initial-value:transparent}@property --ag-internal-hover-color{syntax:\"<color>\";inherits:false;initial-value:transparent}.ag-header-cell:where(:not(.ag-floating-filter)),.ag-header-group-cell{&:before{background-image:linear-gradient(var(--ag-internal-hover-color),var(--ag-internal-hover-color)),linear-gradient(var(--ag-internal-moving-color),var(--ag-internal-moving-color));content:\"\";inset:0;position:absolute;--ag-internal-moving-color:transparent;--ag-internal-hover-color:transparent;transition:--ag-internal-moving-color var(--ag-header-cell-background-transition-duration),--ag-internal-hover-color var(--ag-header-cell-background-transition-duration)}&:where(:hover):before{--ag-internal-hover-color:var(--ag-header-cell-hover-background-color)}&:where(.ag-header-cell-moving):before{--ag-internal-moving-color:var(--ag-header-cell-moving-background-color);--ag-internal-hover-color:var(--ag-header-cell-hover-background-color)}}:where(.ag-header-cell:not(.ag-floating-filter) *,.ag-header-group-cell *){position:relative;z-index:1}.ag-header-cell-menu-button:where(:not(.ag-header-menu-always-show)){opacity:0;transition:opacity .2s}.ag-header-cell-filter-button,:where(.ag-header-cell.ag-header-active) .ag-header-cell-menu-button{opacity:1}.ag-header-cell-label,.ag-header-group-cell-label{align-items:center;align-self:stretch;display:flex;flex:1 1 auto;overflow:hidden;padding:5px 0}:where(.ag-ltr) .ag-sort-indicator-icon{padding-left:var(--ag-spacing)}:where(.ag-rtl) .ag-sort-indicator-icon{padding-right:var(--ag-spacing)}.ag-header-cell-label{text-overflow:ellipsis}.ag-header-group-cell-label.ag-sticky-label{flex:none;max-width:100%;overflow:visible;position:sticky}:where(.ag-ltr) .ag-header-group-cell-label.ag-sticky-label{left:var(--ag-cell-horizontal-padding)}:where(.ag-rtl) .ag-header-group-cell-label.ag-sticky-label{right:var(--ag-cell-horizontal-padding)}.ag-header-cell-text,.ag-header-group-text{overflow:hidden;text-overflow:ellipsis}.ag-header-cell-text{word-break:break-word}.ag-header-cell-comp-wrapper{width:100%}:where(.ag-header-group-cell) .ag-header-cell-comp-wrapper{display:flex}:where(.ag-header-cell:not(.ag-header-cell-auto-height)) .ag-header-cell-comp-wrapper{align-items:center;display:flex;height:100%}.ag-header-cell-wrap-text .ag-header-cell-comp-wrapper{white-space:normal}.ag-header-cell-comp-wrapper-limited-height>*{overflow:hidden}:where(.ag-right-aligned-header) .ag-header-cell-label{flex-direction:row-reverse}:where(.ag-ltr) :where(.ag-header-cell:not(.ag-right-aligned-header)){.ag-header-label-icon,.ag-header-menu-icon{margin-left:var(--ag-spacing)}}:where(.ag-rtl) :where(.ag-header-cell:not(.ag-right-aligned-header)){.ag-header-label-icon,.ag-header-menu-icon{margin-right:var(--ag-spacing)}}:where(.ag-ltr) :where(.ag-header-cell.ag-right-aligned-header){.ag-header-label-icon,.ag-header-menu-icon{margin-right:var(--ag-spacing)}}:where(.ag-rtl) :where(.ag-header-cell.ag-right-aligned-header){.ag-header-label-icon,.ag-header-menu-icon{margin-left:var(--ag-spacing)}}.ag-header-cell:after,.ag-header-group-cell:where(:not(.ag-header-span-height.ag-header-group-cell-no-group)):after{content:\"\";height:var(--ag-header-column-border-height);position:absolute;top:calc(50% - var(--ag-header-column-border-height)*.5);z-index:1}:where(.ag-ltr) .ag-header-cell:after,:where(.ag-ltr) .ag-header-group-cell:where(:not(.ag-header-span-height.ag-header-group-cell-no-group)):after{border-right:var(--ag-header-column-border);right:0}:where(.ag-rtl) .ag-header-cell:after,:where(.ag-rtl) .ag-header-group-cell:where(:not(.ag-header-span-height.ag-header-group-cell-no-group)):after{border-left:var(--ag-header-column-border);left:0}.ag-header-highlight-after:after,.ag-header-highlight-before:after{background-color:var(--ag-accent-color);content:\"\";height:100%;position:absolute;width:1px}:where(.ag-ltr) .ag-header-highlight-before:after{left:0}:where(.ag-rtl) .ag-header-highlight-before:after{right:0}:where(.ag-ltr) .ag-header-highlight-after:after{right:0;:where(.ag-pinned-left-header) &{right:1px}}:where(.ag-rtl) .ag-header-highlight-after:after{left:0;:where(.ag-pinned-left-header) &{left:1px}}.ag-header-cell-resize{align-items:center;cursor:ew-resize;display:flex;height:100%;position:absolute;top:0;width:8px;z-index:2;&:after{background-color:var(--ag-header-column-resize-handle-color);content:\"\";height:var(--ag-header-column-resize-handle-height);position:absolute;top:calc(50% - var(--ag-header-column-resize-handle-height)*.5);width:var(--ag-header-column-resize-handle-width);z-index:1}}:where(.ag-ltr) .ag-header-cell-resize{right:-3px;&:after{left:calc(50% - var(--ag-header-column-resize-handle-width))}}:where(.ag-rtl) .ag-header-cell-resize{left:-3px;&:after{right:calc(50% - var(--ag-header-column-resize-handle-width))}}:where(.ag-header-cell.ag-header-span-height) .ag-header-cell-resize:after{height:calc(100% - var(--ag-spacing)*4);top:calc(var(--ag-spacing)*2)}.ag-header-group-cell-no-group:where(.ag-header-span-height){display:none}.ag-sort-indicator-container{display:flex;gap:var(--ag-spacing)}.ag-layout-print{&.ag-body{display:block;height:unset}&.ag-root-wrapper{display:inline-block}.ag-body-horizontal-scroll,.ag-body-vertical-scroll{display:none}&.ag-force-vertical-scroll{overflow-y:visible!important}}@media print{.ag-root-wrapper.ag-layout-print{display:table;.ag-body-horizontal-scroll-viewport,.ag-body-viewport,.ag-center-cols-container,.ag-center-cols-viewport,.ag-root,.ag-root-wrapper-body,.ag-virtual-list-viewport{display:block!important;height:auto!important;overflow:hidden!important}.ag-cell,.ag-row{-moz-column-break-inside:avoid;break-inside:avoid}}}ag-grid,ag-grid-angular{display:block}.ag-chart,.ag-dnd-ghost,.ag-popup,.ag-root-wrapper{cursor:default;line-height:normal;white-space:normal;-webkit-font-smoothing:antialiased;background-color:var(--ag-background-color);color:var(--ag-text-color);color-scheme:var(--ag-browser-color-scheme);font-family:var(--ag-font-family);font-size:var(--ag-font-size);--ag-indentation-level:0}.ag-root-wrapper{border:var(--ag-wrapper-border);border-radius:var(--ag-wrapper-border-radius);display:flex;flex-direction:column;overflow:hidden;position:relative;&.ag-layout-normal{height:100%}}.ag-root-wrapper-body{display:flex;flex-direction:row;&.ag-layout-normal{flex:1 1 auto;height:0;min-height:0}}.ag-root{display:flex;flex-direction:column;position:relative;&.ag-layout-auto-height,&.ag-layout-normal{flex:1 1 auto;overflow:hidden;width:0}&.ag-layout-normal{height:100%}}.ag-list-item,.ag-virtual-list-item{height:var(--ag-list-item-height)}.ag-virtual-list-item{position:absolute;width:100%}.ag-select-list{background-color:var(--ag-picker-list-background-color);border:var(--ag-picker-list-border);border-radius:var(--ag-border-radius);box-shadow:var(--ag-dropdown-shadow);overflow:hidden auto}.ag-list-item{align-items:center;display:flex;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;&.ag-active-item{background-color:var(--ag-row-hover-color)}}.ag-select-list-item{cursor:default;-webkit-user-select:none;-moz-user-select:none;user-select:none;:where(span){overflow:hidden;text-overflow:ellipsis;white-space:nowrap}}:where(.ag-ltr) .ag-select-list-item{padding-left:calc(var(--ag-cell-horizontal-padding)/2)}:where(.ag-rtl) .ag-select-list-item{padding-right:calc(var(--ag-cell-horizontal-padding)/2)}.ag-list-item-hovered:after{background-color:var(--ag-accent-color);content:\"\";height:1px;left:0;position:absolute;right:0}.ag-item-highlight-top:after{top:0}.ag-item-highlight-bottom:after{bottom:0}:where(.ag-icon):before{align-items:center;background-color:currentcolor;color:inherit;content:\"\";display:flex;font-family:inherit;font-size:var(--ag-icon-size);font-style:normal;font-variant:normal;height:var(--ag-icon-size);justify-content:center;line-height:var(--ag-icon-size);-webkit-mask-size:contain;mask-size:contain;text-transform:none;width:var(--ag-icon-size)}.ag-icon{background-position:50%;background-repeat:no-repeat;background-size:contain;color:var(--ag-icon-color);display:block;height:var(--ag-icon-size);position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:var(--ag-icon-size)}.ag-column-select-column-group-readonly,.ag-column-select-column-readonly,.ag-disabled,[disabled]{.ag-icon{opacity:.5}&.ag-icon-grip{opacity:.35}}.ag-column-select-column-readonly{&.ag-icon-grip,.ag-icon-grip{opacity:.35}}.ag-drag-handle{color:var(--ag-drag-handle-color);cursor:grab;:where(.ag-icon){color:var(--ag-drag-handle-color)}}.ag-chart-menu-icon,.ag-chart-settings-next,.ag-chart-settings-prev,.ag-column-group-icons,.ag-column-select-header-icon,.ag-filter-toolpanel-expand,.ag-floating-filter-button-button,.ag-group-title-bar-icon,.ag-header-cell-filter-button,.ag-header-cell-menu-button,.ag-header-expand-icon,.ag-panel-title-bar-button,.ag-panel-title-bar-button-icon,.ag-set-filter-group-icons,:where(.ag-group-contracted) .ag-icon,:where(.ag-group-expanded) .ag-icon{background-color:var(--ag-icon-button-background-color);border-radius:var(--ag-icon-button-border-radius);box-shadow:0 0 0 var(--ag-icon-button-background-spread) var(--ag-icon-button-background-color);color:var(--ag-icon-button-color);&:hover{background-color:var(--ag-icon-button-hover-background-color);box-shadow:0 0 0 var(--ag-icon-button-background-spread) var(--ag-icon-button-hover-background-color);color:var(--ag-icon-button-hover-color)}}.ag-filter-active{background-image:linear-gradient(var(--ag-icon-button-active-background-color),var(--ag-icon-button-active-background-color));border-radius:1px;outline:solid var(--ag-icon-button-background-spread) var(--ag-icon-button-active-background-color);position:relative;&:after{background-color:var(--ag-icon-button-active-indicator-color);border-radius:50%;content:\"\";height:6px;position:absolute;top:-1px;width:6px}:where(.ag-icon-filter){clip-path:path(\"M8,0C8,4.415 11.585,8 16,8L16,16L0,16L0,0L8,0Z\");color:var(--ag-icon-button-active-color)}}:where(.ag-ltr) .ag-filter-active{&:after{right:-1px}}:where(.ag-rtl) .ag-filter-active{&:after{left:-1px}}.ag-menu{background-color:var(--ag-menu-background-color);border:var(--ag-menu-border);border-radius:var(--ag-border-radius);box-shadow:var(--ag-menu-shadow);color:var(--ag-menu-text-color);max-height:100%;overflow-y:auto}.ag-menu,.ag-resizer{position:absolute;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ag-resizer{pointer-events:none;z-index:1}:where(.ag-resizer){&.ag-resizer-topLeft{cursor:nwse-resize;height:5px;left:0;top:0;width:5px}&.ag-resizer-top{cursor:ns-resize;height:5px;left:5px;right:5px;top:0}&.ag-resizer-topRight{cursor:nesw-resize;height:5px;right:0;top:0;width:5px}&.ag-resizer-right{bottom:5px;cursor:ew-resize;right:0;top:5px;width:5px}&.ag-resizer-bottomRight{bottom:0;cursor:nwse-resize;height:5px;right:0;width:5px}&.ag-resizer-bottom{bottom:0;cursor:ns-resize;height:5px;left:5px;right:5px}&.ag-resizer-bottomLeft{bottom:0;cursor:nesw-resize;height:5px;left:0;width:5px}&.ag-resizer-left{bottom:5px;cursor:ew-resize;left:0;top:5px;width:5px}}`;\n\n// packages/ag-grid-community/src/theming/inject.ts\nvar IS_SSR = typeof window !== \"object\" || !window?.document?.fonts?.forEach;\nvar _injectGlobalCSS = (css, styleContainer, debugId, layer, priority, nonce) => {\n  if (IS_SSR) return;\n  if (FORCE_LEGACY_THEMES) return;\n  if (layer) {\n    css = `@layer ${CSS.escape(layer)} { ${css} }`;\n  }\n  let injections = injectionState.map.get(styleContainer);\n  if (!injections) {\n    injections = [];\n    injectionState.map.set(styleContainer, injections);\n  }\n  if (injections.find(i => i.css === css)) return;\n  const el = document.createElement(\"style\");\n  if (nonce) {\n    el.setAttribute(\"nonce\", nonce);\n  }\n  el.dataset.agGlobalCss = debugId;\n  el.textContent = css;\n  const newInjection = {\n    css,\n    el,\n    priority\n  };\n  let insertAfter;\n  for (const injection of injections) {\n    if (injection.priority > priority) break;\n    insertAfter = injection;\n  }\n  if (insertAfter) {\n    insertAfter.el.insertAdjacentElement(\"afterend\", el);\n    const index = injections.indexOf(insertAfter);\n    injections.splice(index + 1, 0, newInjection);\n  } else {\n    styleContainer.insertBefore(el, styleContainer.querySelector(\":not(title, meta)\"));\n    injections.push(newInjection);\n  }\n};\nvar _injectCoreAndModuleCSS = (styleContainer, layer, nonce) => {\n  _injectGlobalCSS(coreCSS, styleContainer, \"core\", layer, 0, nonce);\n  Array.from(_getAllRegisteredModules()).sort((a, b) => a.moduleName.localeCompare(b.moduleName)).forEach(module => module.css?.forEach(css => _injectGlobalCSS(css, styleContainer, `module-${module.moduleName}`, layer, 0, nonce)));\n};\nvar _registerGridUsingThemingAPI = environment => {\n  injectionState.grids.add(environment);\n};\nvar _unregisterGridUsingThemingAPI = environment => {\n  injectionState.grids.delete(environment);\n  if (injectionState.grids.size === 0) {\n    injectionState.map = /* @__PURE__ */new WeakMap();\n    for (const style of document.head.querySelectorAll(\"style[data-ag-global-css]\")) {\n      style.remove();\n    }\n  }\n};\nvar _a;\nvar injectionState = (_a = typeof window === \"object\" ? window : {}).agStyleInjectionState ?? (_a.agStyleInjectionState = {\n  map: /* @__PURE__ */new WeakMap(),\n  grids: /* @__PURE__ */new Set()\n});\n\n// packages/ag-grid-community/src/theming/Part.ts\nvar createPart = args => {\n  return new PartImpl(args);\n};\nvar defaultModeName = \"$default\";\nvar partCounter = 0;\nvar PartImpl = class {\n  constructor({\n    feature,\n    params,\n    modeParams = {},\n    css,\n    cssImports\n  }) {\n    this.feature = feature;\n    this.css = css;\n    this.cssImports = cssImports;\n    this.modeParams = {\n      // NOTE: it's important that default is defined first, putting it\n      // first in iteration order, because when merging params the default\n      // params override any prior modal params, so modal params in this\n      // part need to come after default params to prevent them from being\n      // immediately overridden.\n      [defaultModeName]: {\n        ...(modeParams[defaultModeName] ?? {}),\n        ...(params ?? {})\n      },\n      ...modeParams\n    };\n  }\n  use(styleContainer, layer, nonce) {\n    let inject = this._inject;\n    if (inject == null) {\n      let {\n        css\n      } = this;\n      if (css) {\n        const className = `ag-theme-${this.feature ?? \"part\"}-${++partCounter}`;\n        if (typeof css === \"function\") css = css();\n        css = `:where(.${className}) {\n${css}\n}\n`;\n        for (const cssImport of this.cssImports ?? []) {\n          css = `@import url(${JSON.stringify(cssImport)});\n${css}`;\n        }\n        inject = {\n          css,\n          class: className\n        };\n      } else {\n        inject = false;\n      }\n      this._inject = inject;\n    }\n    if (inject && styleContainer) {\n      _injectGlobalCSS(inject.css, styleContainer, inject.class, layer, 1, nonce);\n    }\n    return inject ? inject.class : false;\n  }\n};\n\n// packages/ag-grid-community/src/theming/theme-utils.ts\nvar kebabCase = str => str.replace(/[A-Z]/g, m => `-${m}`).toLowerCase();\nvar paramToVariableName = paramName => `--ag-${kebabCase(paramName)}`;\nvar paramToVariableExpression = paramName => `var(${paramToVariableName(paramName)})`;\nvar clamp = (value, min, max) => Math.max(min, Math.min(max, value));\nvar memoize = fn => {\n  const values = /* @__PURE__ */new Map();\n  return a => {\n    const key = a;\n    if (!values.has(key)) {\n      values.set(key, fn(a));\n    }\n    return values.get(key);\n  };\n};\nvar accentMix = mix => ({\n  ref: \"accentColor\",\n  mix\n});\nvar foregroundMix = mix => ({\n  ref: \"foregroundColor\",\n  mix\n});\nvar foregroundBackgroundMix = mix => ({\n  ref: \"foregroundColor\",\n  mix,\n  onto: \"backgroundColor\"\n});\nvar foregroundHeaderBackgroundMix = mix => ({\n  ref: \"foregroundColor\",\n  mix,\n  onto: \"headerBackgroundColor\"\n});\nvar backgroundColor = {\n  ref: \"backgroundColor\"\n};\nvar foregroundColor = {\n  ref: \"foregroundColor\"\n};\nvar accentColor = {\n  ref: \"accentColor\"\n};\n\n// packages/ag-grid-community/src/theming/core/core-css.ts\nvar defaultLightColorSchemeParams = {\n  backgroundColor: \"#fff\",\n  foregroundColor: \"#181d1f\",\n  borderColor: foregroundMix(0.15),\n  chromeBackgroundColor: foregroundBackgroundMix(0.02),\n  browserColorScheme: \"light\"\n};\nvar coreDefaults = {\n  ...defaultLightColorSchemeParams,\n  textColor: foregroundColor,\n  accentColor: \"#2196f3\",\n  invalidColor: \"#e02525\",\n  wrapperBorder: true,\n  rowBorder: true,\n  headerRowBorder: true,\n  footerRowBorder: {\n    ref: \"rowBorder\"\n  },\n  columnBorder: {\n    style: \"solid\",\n    width: 1,\n    color: \"transparent\"\n  },\n  headerColumnBorder: false,\n  headerColumnBorderHeight: \"100%\",\n  pinnedColumnBorder: true,\n  pinnedRowBorder: true,\n  sidePanelBorder: true,\n  sideBarPanelWidth: 250,\n  sideBarBackgroundColor: {\n    ref: \"chromeBackgroundColor\"\n  },\n  sideButtonBarBackgroundColor: {\n    ref: \"sideBarBackgroundColor\"\n  },\n  sideButtonBarTopPadding: 0,\n  sideButtonSelectedUnderlineWidth: 2,\n  sideButtonSelectedUnderlineColor: \"transparent\",\n  sideButtonSelectedUnderlineTransitionDuration: 0,\n  sideButtonBackgroundColor: \"transparent\",\n  sideButtonTextColor: {\n    ref: \"textColor\"\n  },\n  sideButtonHoverBackgroundColor: {\n    ref: \"sideButtonBackgroundColor\"\n  },\n  sideButtonHoverTextColor: {\n    ref: \"sideButtonTextColor\"\n  },\n  sideButtonSelectedBackgroundColor: backgroundColor,\n  sideButtonSelectedTextColor: {\n    ref: \"sideButtonTextColor\"\n  },\n  sideButtonBorder: \"solid 1px transparent\",\n  sideButtonSelectedBorder: true,\n  sideButtonLeftPadding: {\n    ref: \"spacing\"\n  },\n  sideButtonRightPadding: {\n    ref: \"spacing\"\n  },\n  sideButtonVerticalPadding: {\n    calc: \"spacing * 3\"\n  },\n  fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen-Sans\", \"Ubuntu\", \"Cantarell\", \"Helvetica Neue\", \"sans-serif\"],\n  headerBackgroundColor: {\n    ref: \"chromeBackgroundColor\"\n  },\n  headerFontFamily: {\n    ref: \"fontFamily\"\n  },\n  cellFontFamily: {\n    ref: \"fontFamily\"\n  },\n  headerFontWeight: 500,\n  headerFontSize: {\n    ref: \"fontSize\"\n  },\n  dataFontSize: {\n    ref: \"fontSize\"\n  },\n  headerTextColor: {\n    ref: \"textColor\"\n  },\n  headerCellHoverBackgroundColor: \"transparent\",\n  headerCellMovingBackgroundColor: {\n    ref: \"headerCellHoverBackgroundColor\"\n  },\n  headerCellBackgroundTransitionDuration: \"0.2s\",\n  cellTextColor: {\n    ref: \"textColor\"\n  },\n  subtleTextColor: {\n    ref: \"textColor\",\n    mix: 0.5\n  },\n  rangeSelectionBorderStyle: \"solid\",\n  rangeSelectionBorderColor: accentColor,\n  rangeSelectionBackgroundColor: accentMix(0.2),\n  rangeSelectionChartBackgroundColor: \"#0058FF1A\",\n  rangeSelectionChartCategoryBackgroundColor: \"#00FF841A\",\n  rangeSelectionHighlightColor: accentMix(0.5),\n  rangeHeaderHighlightColor: foregroundHeaderBackgroundMix(0.08),\n  rowNumbersSelectedColor: accentMix(0.5),\n  rowHoverColor: accentMix(0.08),\n  columnHoverColor: accentMix(0.05),\n  selectedRowBackgroundColor: accentMix(0.12),\n  modalOverlayBackgroundColor: {\n    ref: \"backgroundColor\",\n    mix: 0.66\n  },\n  oddRowBackgroundColor: backgroundColor,\n  borderWidth: 1,\n  borderRadius: 4,\n  wrapperBorderRadius: 8,\n  cellHorizontalPadding: {\n    calc: \"spacing * 2 * cellHorizontalPaddingScale\"\n  },\n  cellWidgetSpacing: {\n    calc: \"spacing * 1.5\"\n  },\n  cellHorizontalPaddingScale: 1,\n  rowGroupIndentSize: {\n    calc: \"cellWidgetSpacing + iconSize\"\n  },\n  valueChangeDeltaUpColor: \"#43a047\",\n  valueChangeDeltaDownColor: \"#e53935\",\n  valueChangeValueHighlightBackgroundColor: \"#16a08580\",\n  spacing: 8,\n  fontSize: 14,\n  rowHeight: {\n    calc: \"max(iconSize, dataFontSize) + spacing * 3.25 * rowVerticalPaddingScale\"\n  },\n  rowVerticalPaddingScale: 1,\n  headerHeight: {\n    calc: \"max(iconSize, dataFontSize) + spacing * 4 * headerVerticalPaddingScale\"\n  },\n  headerVerticalPaddingScale: 1,\n  paginationPanelHeight: {\n    ref: \"rowHeight\",\n    calc: \"max(rowHeight, 22px)\"\n  },\n  popupShadow: \"0 0 16px #00000026\",\n  cardShadow: \"0 1px 4px 1px #00000018\",\n  dropdownShadow: {\n    ref: \"cardShadow\"\n  },\n  dragAndDropImageBackgroundColor: backgroundColor,\n  dragAndDropImageBorder: true,\n  dragAndDropImageShadow: {\n    ref: \"popupShadow\"\n  },\n  dragHandleColor: foregroundMix(0.7),\n  focusShadow: {\n    spread: 3,\n    color: accentMix(0.5)\n  },\n  focusErrorShadow: {\n    spread: 3,\n    color: {\n      ref: \"invalidColor\",\n      onto: \"backgroundColor\",\n      mix: 0.5\n    }\n  },\n  headerColumnResizeHandleHeight: \"30%\",\n  headerColumnResizeHandleWidth: 2,\n  headerColumnResizeHandleColor: {\n    ref: \"borderColor\"\n  },\n  widgetContainerHorizontalPadding: {\n    calc: \"spacing * 1.5\"\n  },\n  widgetContainerVerticalPadding: {\n    calc: \"spacing * 1.5\"\n  },\n  widgetHorizontalSpacing: {\n    calc: \"spacing * 1.5\"\n  },\n  widgetVerticalSpacing: {\n    ref: \"spacing\"\n  },\n  listItemHeight: {\n    calc: \"max(iconSize, dataFontSize) + widgetVerticalSpacing\"\n  },\n  iconSize: 16,\n  iconColor: \"inherit\",\n  iconButtonColor: {\n    ref: \"iconColor\"\n  },\n  iconButtonBackgroundColor: \"transparent\",\n  iconButtonBackgroundSpread: 4,\n  iconButtonBorderRadius: 1,\n  iconButtonHoverColor: {\n    ref: \"iconButtonColor\"\n  },\n  iconButtonHoverBackgroundColor: foregroundMix(0.1),\n  iconButtonActiveColor: accentColor,\n  iconButtonActiveBackgroundColor: accentMix(0.28),\n  iconButtonActiveIndicatorColor: accentColor,\n  toggleButtonWidth: 28,\n  toggleButtonHeight: 18,\n  toggleButtonOnBackgroundColor: accentColor,\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.3),\n  toggleButtonSwitchBackgroundColor: backgroundColor,\n  toggleButtonSwitchInset: 2,\n  menuBorder: {\n    color: foregroundMix(0.2)\n  },\n  menuBackgroundColor: foregroundBackgroundMix(0.03),\n  menuTextColor: foregroundBackgroundMix(0.95),\n  menuShadow: {\n    ref: \"popupShadow\"\n  },\n  menuSeparatorColor: {\n    ref: \"borderColor\"\n  },\n  setFilterIndentSize: {\n    ref: \"iconSize\"\n  },\n  chartMenuPanelWidth: 260,\n  chartMenuLabelColor: foregroundMix(0.8),\n  dialogShadow: {\n    ref: \"popupShadow\"\n  },\n  cellEditingBorder: {\n    color: accentColor\n  },\n  cellEditingShadow: {\n    ref: \"cardShadow\"\n  },\n  fullRowEditInvalidBackgroundColor: {\n    ref: \"invalidColor\",\n    onto: \"backgroundColor\",\n    mix: 0.25\n  },\n  dialogBorder: {\n    color: foregroundMix(0.2)\n  },\n  panelBackgroundColor: backgroundColor,\n  panelTitleBarBackgroundColor: {\n    ref: \"headerBackgroundColor\"\n  },\n  panelTitleBarIconColor: {\n    ref: \"headerTextColor\"\n  },\n  panelTitleBarTextColor: {\n    ref: \"headerTextColor\"\n  },\n  panelTitleBarFontWeight: {\n    ref: \"headerFontWeight\"\n  },\n  panelTitleBarBorder: true,\n  columnSelectIndentSize: {\n    ref: \"iconSize\"\n  },\n  toolPanelSeparatorBorder: true,\n  tooltipBackgroundColor: {\n    ref: \"chromeBackgroundColor\"\n  },\n  tooltipErrorBackgroundColor: {\n    ref: \"invalidColor\",\n    onto: \"backgroundColor\",\n    mix: 0.1\n  },\n  tooltipTextColor: {\n    ref: \"textColor\"\n  },\n  tooltipErrorTextColor: {\n    ref: \"invalidColor\"\n  },\n  tooltipBorder: true,\n  tooltipErrorBorder: {\n    color: {\n      ref: \"invalidColor\",\n      onto: \"backgroundColor\",\n      mix: 0.25\n    }\n  },\n  columnDropCellBackgroundColor: foregroundMix(0.07),\n  columnDropCellTextColor: {\n    ref: \"textColor\"\n  },\n  columnDropCellDragHandleColor: {\n    ref: \"textColor\"\n  },\n  columnDropCellBorder: {\n    color: foregroundMix(0.13)\n  },\n  selectCellBackgroundColor: foregroundMix(0.07),\n  selectCellBorder: {\n    color: foregroundMix(0.13)\n  },\n  advancedFilterBuilderButtonBarBorder: true,\n  advancedFilterBuilderIndentSize: {\n    calc: \"spacing * 2 + iconSize\"\n  },\n  advancedFilterBuilderJoinPillColor: \"#f08e8d\",\n  advancedFilterBuilderColumnPillColor: \"#a6e194\",\n  advancedFilterBuilderOptionPillColor: \"#f3c08b\",\n  advancedFilterBuilderValuePillColor: \"#85c0e4\",\n  filterPanelApplyButtonColor: backgroundColor,\n  filterPanelApplyButtonBackgroundColor: accentColor,\n  filterPanelCardSubtleColor: {\n    ref: \"textColor\",\n    mix: 0.7\n  },\n  filterPanelCardSubtleHoverColor: {\n    ref: \"textColor\"\n  },\n  findMatchColor: foregroundColor,\n  findMatchBackgroundColor: \"#ffff00\",\n  findActiveMatchColor: foregroundColor,\n  findActiveMatchBackgroundColor: \"#ffa500\",\n  filterToolPanelGroupIndent: {\n    ref: \"spacing\"\n  },\n  rowLoadingSkeletonEffectColor: foregroundMix(0.15),\n  statusBarLabelColor: foregroundColor,\n  statusBarLabelFontWeight: 500,\n  statusBarValueColor: foregroundColor,\n  statusBarValueFontWeight: 500,\n  pinnedSourceRowTextColor: {\n    ref: \"textColor\"\n  },\n  pinnedSourceRowBackgroundColor: {\n    ref: \"backgroundColor\"\n  },\n  pinnedSourceRowFontWeight: 600,\n  pinnedRowFontWeight: 600,\n  pinnedRowBackgroundColor: {\n    ref: \"backgroundColor\"\n  },\n  pinnedRowTextColor: {\n    ref: \"textColor\"\n  }\n};\n\n// packages/ag-grid-community/src/theming/parts/batch-edit/batch-edit-style-default.css-GENERATED.ts\nvar batchEditStyleDefaultCSS = /*css*/\n`.ag-cell-batch-edit{background-color:var(--ag-cell-batch-edit-background-color);color:var(--ag-cell-batch-edit-text-color);display:inherit}.ag-row-batch-edit{background-color:var(--ag-row-batch-edit-background-color);color:var(--ag-row-batch-edit-text-color)}`;\n\n// packages/ag-grid-community/src/theming/parts/batch-edit/batch-edit-styles.ts\nvar baseParams = {\n  cellBatchEditBackgroundColor: \"rgba(220 181 139 / 16%)\",\n  cellBatchEditTextColor: \"#422f00\",\n  rowBatchEditBackgroundColor: {\n    ref: \"cellBatchEditBackgroundColor\"\n  },\n  rowBatchEditTextColor: {\n    ref: \"cellBatchEditTextColor\"\n  }\n};\nvar baseDarkBatchEditParams = {\n  ...baseParams,\n  cellBatchEditTextColor: \"#f3d0b3\"\n};\nvar makeBatchEditStyleBaseTreeShakeable = () => createPart({\n  feature: \"batchEditStyle\",\n  params: baseParams,\n  css: batchEditStyleDefaultCSS\n});\nvar batchEditStyleBase = /* @__PURE__ */makeBatchEditStyleBaseTreeShakeable();\n\n// packages/ag-grid-community/src/theming/parts/button-style/button-style-base.css-GENERATED.ts\nvar buttonStyleBaseCSS = /*css*/\n`:where(.ag-button){background:none;border:none;color:inherit;cursor:pointer;font-family:inherit;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;margin:0;padding:0;text-indent:inherit;text-shadow:inherit;text-transform:inherit;word-spacing:inherit;&:disabled{cursor:default}&:focus-visible{box-shadow:var(--ag-focus-shadow);outline:none}}.ag-standard-button{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:var(--ag-button-background-color);border:var(--ag-button-border);border-radius:var(--ag-button-border-radius);color:var(--ag-button-text-color);cursor:pointer;font-weight:var(--ag-button-font-weight);padding:var(--ag-button-vertical-padding) var(--ag-button-horizontal-padding);&:hover{background-color:var(--ag-button-hover-background-color);border:var(--ag-button-hover-border);color:var(--ag-button-hover-text-color)}&:active{background-color:var(--ag-button-active-background-color);border:var(--ag-button-active-border);color:var(--ag-button-active-text-color)}&:disabled{background-color:var(--ag-button-disabled-background-color);border:var(--ag-button-disabled-border);color:var(--ag-button-disabled-text-color)}}`;\n\n// packages/ag-grid-community/src/theming/parts/button-style/button-styles.ts\nvar baseParams2 = {\n  buttonTextColor: \"inherit\",\n  buttonFontWeight: \"normal\",\n  buttonBackgroundColor: \"transparent\",\n  buttonBorder: false,\n  buttonBorderRadius: {\n    ref: \"borderRadius\"\n  },\n  buttonHorizontalPadding: {\n    calc: \"spacing * 2\"\n  },\n  buttonVerticalPadding: {\n    ref: \"spacing\"\n  },\n  buttonHoverTextColor: {\n    ref: \"buttonTextColor\"\n  },\n  buttonHoverBackgroundColor: {\n    ref: \"buttonBackgroundColor\"\n  },\n  buttonHoverBorder: {\n    ref: \"buttonBorder\"\n  },\n  buttonActiveTextColor: {\n    ref: \"buttonHoverTextColor\"\n  },\n  buttonActiveBackgroundColor: {\n    ref: \"buttonHoverBackgroundColor\"\n  },\n  buttonActiveBorder: {\n    ref: \"buttonHoverBorder\"\n  },\n  buttonDisabledTextColor: {\n    ref: \"inputDisabledTextColor\"\n  },\n  buttonDisabledBackgroundColor: {\n    ref: \"inputDisabledBackgroundColor\"\n  },\n  buttonDisabledBorder: {\n    ref: \"inputDisabledBorder\"\n  }\n};\nvar makeButtonStyleBaseTreeShakeable = () => createPart({\n  feature: \"buttonStyle\",\n  params: baseParams2,\n  css: buttonStyleBaseCSS\n});\nvar buttonStyleBase = /* @__PURE__ */makeButtonStyleBaseTreeShakeable();\nvar makeButtonStyleQuartzTreeShakeable = () => createPart({\n  feature: \"buttonStyle\",\n  params: {\n    ...baseParams2,\n    buttonBackgroundColor: backgroundColor,\n    buttonBorder: true,\n    buttonHoverBackgroundColor: {\n      ref: \"rowHoverColor\"\n    },\n    buttonActiveBorder: {\n      color: accentColor\n    }\n  },\n  css: buttonStyleBaseCSS\n});\nvar buttonStyleQuartz = /* @__PURE__ */makeButtonStyleQuartzTreeShakeable();\nvar makeButtonStyleAlpineTreeShakeable = () => createPart({\n  feature: \"buttonStyle\",\n  params: {\n    ...baseParams2,\n    buttonBackgroundColor: backgroundColor,\n    buttonBorder: {\n      color: accentColor\n    },\n    buttonFontWeight: 600,\n    buttonTextColor: accentColor,\n    buttonHoverBackgroundColor: {\n      ref: \"rowHoverColor\"\n    },\n    buttonActiveBackgroundColor: accentColor,\n    buttonActiveTextColor: backgroundColor\n  },\n  css: buttonStyleBaseCSS\n});\nvar buttonStyleAlpine = /* @__PURE__ */makeButtonStyleAlpineTreeShakeable();\nvar makeButtonStyleBalhamTreeShakeable = () => createPart({\n  feature: \"buttonStyle\",\n  params: {\n    ...baseParams2,\n    buttonBorder: {\n      color: foregroundColor,\n      width: 2,\n      style: \"outset\"\n    },\n    buttonActiveBorder: {\n      color: foregroundColor,\n      width: 2,\n      style: \"inset\"\n    },\n    buttonBackgroundColor: foregroundBackgroundMix(0.07),\n    buttonHoverBackgroundColor: backgroundColor,\n    buttonVerticalPadding: {\n      calc: \"spacing * 0.5\"\n    }\n  },\n  css: buttonStyleBaseCSS\n});\nvar buttonStyleBalham = /* @__PURE__ */makeButtonStyleBalhamTreeShakeable();\n\n// packages/ag-grid-community/src/theming/parts/column-drop-style/column-drop-style-bordered.css-GENERATED.ts\nvar columnDropStyleBorderedCSS = /*css*/\n`.ag-column-drop-vertical-empty-message{align-items:center;border:dashed var(--ag-border-width);border-color:var(--ag-border-color);display:flex;inset:0;justify-content:center;margin:calc(var(--ag-spacing)*1.5) calc(var(--ag-spacing)*2);overflow:hidden;padding:calc(var(--ag-spacing)*2);position:absolute}`;\n\n// packages/ag-grid-community/src/theming/parts/column-drop-style/column-drop-style-plain.css-GENERATED.ts\nvar columnDropStylePlainCSS = /*css*/\n`.ag-column-drop-vertical-empty-message{color:var(--ag-subtle-text-color);font-size:calc(var(--ag-font-size) - 1px);font-weight:600;padding-top:var(--ag-spacing)}:where(.ag-ltr) .ag-column-drop-vertical-empty-message{padding-left:calc(var(--ag-icon-size) + var(--ag-spacing) + var(--ag-widget-horizontal-spacing));padding-right:var(--ag-spacing)}:where(.ag-rtl) .ag-column-drop-vertical-empty-message{padding-left:var(--ag-spacing);padding-right:calc(var(--ag-icon-size) + var(--ag-spacing) + var(--ag-widget-horizontal-spacing))}`;\n\n// packages/ag-grid-community/src/theming/parts/column-drop-style/column-drop-styles.ts\nvar makeColumnDropStyleBorderedTreeShakeable = () => {\n  return createPart({\n    feature: \"columnDropStyle\",\n    css: columnDropStyleBorderedCSS\n  });\n};\nvar columnDropStyleBordered = /* @__PURE__ */makeColumnDropStyleBorderedTreeShakeable();\nvar makeColumnDropStylePlainTreeShakeable = () => {\n  return createPart({\n    feature: \"columnDropStyle\",\n    css: columnDropStylePlainCSS\n  });\n};\nvar columnDropStylePlain = /* @__PURE__ */makeColumnDropStylePlainTreeShakeable();\n\n// packages/ag-grid-community/src/theming/theme-types.ts\nvar paramTypes = [\"colorScheme\", \"color\", \"length\", \"scale\", \"borderStyle\", \"border\", \"shadow\", \"image\", \"fontFamily\", \"fontWeight\", \"duration\"];\nvar getParamType = memoize(param => {\n  param = param.toLowerCase();\n  return paramTypes.find(type => param.endsWith(type.toLowerCase())) ?? \"length\";\n});\nvar literalToCSS = value => {\n  if (typeof value === \"object\" && value?.ref) return paramToVariableExpression(value.ref);\n  if (typeof value === \"string\") return value;\n  if (typeof value === \"number\") return String(value);\n  return false;\n};\nvar colorValueToCss = value => {\n  if (typeof value === \"string\") return value;\n  if (value && \"ref\" in value) {\n    const colorExpr = paramToVariableExpression(value.ref);\n    if (value.mix == null) {\n      return colorExpr;\n    }\n    const backgroundExpr = value.onto ? paramToVariableExpression(value.onto) : \"transparent\";\n    return `color-mix(in srgb, ${backgroundExpr}, ${colorExpr} ${clamp(value.mix * 100, 0, 100)}%)`;\n  }\n  return false;\n};\nvar colorSchemeValueToCss = literalToCSS;\nvar lengthValueToCss = value => {\n  if (typeof value === \"string\") return value;\n  if (typeof value === \"number\") return `${value}px`;\n  if (value && \"calc\" in value) {\n    const valueWithSpaces = value.calc.replace(/ ?[*/+] ?/g, \" $& \");\n    return `calc(${valueWithSpaces.replace(/-?\\b[a-z][a-z0-9]*\\b(?![-(])/gi, p => p[0] === \"-\" ? p : ` ${paramToVariableExpression(p)} `)})`;\n  }\n  if (value && \"ref\" in value) return paramToVariableExpression(value.ref);\n  return false;\n};\nvar scaleValueToCss = literalToCSS;\nvar borderValueToCss = (value, param) => {\n  if (typeof value === \"string\") return value;\n  if (value === true) return borderValueToCss({}, param);\n  if (value === false) return param === \"columnBorder\" ? borderValueToCss({\n    color: \"transparent\"\n  }, param) : \"none\";\n  if (value && \"ref\" in value) return paramToVariableExpression(value.ref);\n  return borderStyleValueToCss(value.style ?? \"solid\") + \" \" + lengthValueToCss(value.width ?? {\n    ref: \"borderWidth\"\n  }) + \" \" + colorValueToCss(value.color ?? {\n    ref: \"borderColor\"\n  });\n};\nvar shadowValueToCss = value => {\n  if (typeof value === \"string\") return value;\n  if (value === false) return \"none\";\n  if (value && \"ref\" in value) return paramToVariableExpression(value.ref);\n  return [lengthValueToCss(value.offsetX ?? 0), lengthValueToCss(value.offsetY ?? 0), lengthValueToCss(value.radius ?? 0), lengthValueToCss(value.spread ?? 0), colorValueToCss(value.color ?? {\n    ref: \"foregroundColor\"\n  })].join(\" \");\n};\nvar borderStyleValueToCss = literalToCSS;\nvar fontFamilyValueToCss = value => {\n  if (typeof value === \"string\") return value.includes(\",\") ? value : quoteUnsafeChars(value);\n  if (value && \"googleFont\" in value) return fontFamilyValueToCss(value.googleFont);\n  if (value && \"ref\" in value) return paramToVariableExpression(value.ref);\n  if (Array.isArray(value)) {\n    return value.map(font => {\n      if (typeof font === \"object\" && \"googleFont\" in font) {\n        font = font.googleFont;\n      }\n      return quoteUnsafeChars(font);\n    }).join(\", \");\n  }\n  return false;\n};\nvar quoteUnsafeChars = font =>\n// don't quote var() expressions or quote safe identifier names, so that\n// people can specify fonts like sans-serif which are keywords not strings,\n// or var(--my-var)\n/^[\\w-]+$|\\w\\(/.test(font) ? font : JSON.stringify(font);\nvar fontWeightValueToCss = literalToCSS;\nvar imageValueToCss = value => {\n  if (typeof value === \"string\") return value;\n  if (value && \"url\" in value) return `url(${JSON.stringify(value.url)})`;\n  if (value && \"svg\" in value) return imageValueToCss({\n    url: `data:image/svg+xml,${encodeURIComponent(value.svg)}`\n  });\n  if (value && \"ref\" in value) return paramToVariableExpression(value.ref);\n  return false;\n};\nvar durationValueToCss = (value, param) => {\n  if (typeof value === \"string\") return value;\n  if (typeof value === \"number\") {\n    if (value >= 10) {\n      _error(104, {\n        value,\n        param\n      });\n    }\n    return `${value}s`;\n  }\n  if (value && \"ref\" in value) return paramToVariableExpression(value.ref);\n  return false;\n};\nvar paramValidators = {\n  color: colorValueToCss,\n  colorScheme: colorSchemeValueToCss,\n  length: lengthValueToCss,\n  scale: scaleValueToCss,\n  border: borderValueToCss,\n  borderStyle: borderStyleValueToCss,\n  shadow: shadowValueToCss,\n  image: imageValueToCss,\n  fontFamily: fontFamilyValueToCss,\n  fontWeight: fontWeightValueToCss,\n  duration: durationValueToCss\n};\nvar paramValueToCss = (param, value) => {\n  const type = getParamType(param);\n  return paramValidators[type](value, param);\n};\n\n// packages/ag-grid-community/src/theming/Theme.ts\nvar FORCE_LEGACY_THEMES = false;\nvar _asThemeImpl = theme => {\n  if (!(theme instanceof ThemeImpl)) {\n    throw new Error(\"theme is not an object created by createTheme\");\n  }\n  return theme;\n};\nvar createTheme = () => new ThemeImpl().withPart(buttonStyleQuartz).withPart(columnDropStyleBordered).withPart(batchEditStyleBase);\nvar ThemeImpl = class _ThemeImpl {\n  constructor(parts = []) {\n    this.parts = parts;\n  }\n  withPart(part) {\n    if (typeof part === \"function\") part = part();\n    if (!(part instanceof PartImpl)) {\n      _logPreInitErr(259, {\n        part\n      }, \"Invalid part\");\n      return this;\n    }\n    return new _ThemeImpl([...this.parts, part]);\n  }\n  withoutPart(feature) {\n    return this.withPart(createPart({\n      feature\n    }));\n  }\n  withParams(params, mode = defaultModeName) {\n    return this.withPart(createPart({\n      modeParams: {\n        [mode]: params\n      }\n    }));\n  }\n  /**\n   * Called by a grid instance when it starts using the theme. This installs\n   * the theme's parts into document head, or the shadow DOM if the provided\n   * container is within a shadow root.\n   */\n  _startUse({\n    styleContainer,\n    cssLayer,\n    nonce,\n    loadThemeGoogleFonts\n  }) {\n    if (IS_SSR) return;\n    if (FORCE_LEGACY_THEMES) return;\n    uninstallLegacyCSS();\n    _injectCoreAndModuleCSS(styleContainer, cssLayer, nonce);\n    const googleFontsUsed = getGoogleFontsUsed(this);\n    if (googleFontsUsed.length > 0) {\n      for (const googleFont of googleFontsUsed) {\n        if (loadThemeGoogleFonts) {\n          loadGoogleFont(googleFont, nonce);\n        }\n      }\n    }\n    for (const part of this.parts) {\n      part.use(styleContainer, cssLayer, nonce);\n    }\n  }\n  /**\n   * Return CSS that that applies the params of this theme to elements with\n   * the provided class name\n   */\n  _getCssClass() {\n    if (FORCE_LEGACY_THEMES) return \"ag-theme-quartz\";\n    return this._cssClassCache ?? (this._cssClassCache = deduplicatePartsByFeature(this.parts).map(part => part.use(void 0, void 0, void 0)).filter(Boolean).join(\" \"));\n  }\n  _getModeParams() {\n    let paramsCache = this._paramsCache;\n    if (!paramsCache) {\n      const mergedModeParams = {\n        // NOTE: defining the default mode here is important, it ensures\n        // that the default mode is first in iteration order, which puts\n        // it first in outputted CSS, allowing other modes to override it\n        [defaultModeName]: {\n          ...coreDefaults\n        }\n      };\n      for (const part of deduplicatePartsByFeature(this.parts)) {\n        for (const partMode of Object.keys(part.modeParams)) {\n          const partParams = part.modeParams[partMode];\n          if (partParams) {\n            const mergedParams = mergedModeParams[partMode] ?? (mergedModeParams[partMode] = {});\n            const partParamNames = /* @__PURE__ */new Set();\n            for (const partParamName of Object.keys(partParams)) {\n              const partParamValue = partParams[partParamName];\n              if (partParamValue !== void 0) {\n                mergedParams[partParamName] = partParamValue;\n                partParamNames.add(partParamName);\n              }\n            }\n            if (partMode === defaultModeName) {\n              for (const mergedMode of Object.keys(mergedModeParams)) {\n                const mergedParams2 = mergedModeParams[mergedMode];\n                if (mergedMode !== defaultModeName) {\n                  for (const partParamName of partParamNames) {\n                    delete mergedParams2[partParamName];\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      this._paramsCache = paramsCache = mergedModeParams;\n    }\n    return paramsCache;\n  }\n  /**\n   * Return the CSS chunk that is inserted into the grid DOM, and will\n   * therefore be removed automatically when the grid is destroyed or it\n   * starts to use a new theme.\n   *\n   * @param className a unique class name on the grid wrapper used to scope the returned CSS to the grid instance\n   */\n  _getPerGridCss(className) {\n    const selectorPlaceholder = \"##SELECTOR##\";\n    let innerParamsCss = this._paramsCssCache;\n    if (!innerParamsCss) {\n      let variablesCss = \"\";\n      let inheritanceCss = \"\";\n      const modeParams = this._getModeParams();\n      for (const mode of Object.keys(modeParams)) {\n        const params = modeParams[mode];\n        if (mode !== defaultModeName) {\n          const escapedMode = typeof CSS === \"object\" ? CSS.escape(mode) : mode;\n          const wrapPrefix = `:where([data-ag-theme-mode=\"${escapedMode}\"]) & {\n`;\n          variablesCss += wrapPrefix;\n          inheritanceCss += wrapPrefix;\n        }\n        for (const key of Object.keys(params).sort()) {\n          const value = params[key];\n          const cssValue = paramValueToCss(key, value);\n          if (cssValue === false) {\n            _error(107, {\n              key,\n              value\n            });\n          } else {\n            const cssName = paramToVariableName(key);\n            const inheritedName = cssName.replace(\"--ag-\", \"--ag-inherited-\");\n            variablesCss += `\t${cssName}: var(${inheritedName}, ${cssValue});\n`;\n            inheritanceCss += `\t${inheritedName}: var(${cssName});\n`;\n          }\n        }\n        if (mode !== defaultModeName) {\n          variablesCss += \"}\\n\";\n          inheritanceCss += \"}\\n\";\n        }\n      }\n      let css = `${selectorPlaceholder} {\n${variablesCss}}\n`;\n      css += `:has(> ${selectorPlaceholder}):not(${selectorPlaceholder}) {\n${inheritanceCss}}\n`;\n      this._paramsCssCache = innerParamsCss = css;\n    }\n    return innerParamsCss.replaceAll(selectorPlaceholder, `:where(.${className})`);\n  }\n};\nvar deduplicatePartsByFeature = parts => {\n  const lastPartByFeature = /* @__PURE__ */new Map();\n  for (const part of parts) {\n    lastPartByFeature.set(part.feature, part);\n  }\n  const result = [];\n  for (const part of parts) {\n    if (!part.feature || lastPartByFeature.get(part.feature) === part) {\n      result.push(part);\n    }\n  }\n  return result;\n};\nvar getGoogleFontsUsed = theme => {\n  const googleFontsUsed = /* @__PURE__ */new Set();\n  const visitParamValue = paramValue => {\n    if (Array.isArray(paramValue)) {\n      paramValue.forEach(visitParamValue);\n    } else {\n      const googleFont = paramValue?.googleFont;\n      if (typeof googleFont === \"string\") {\n        googleFontsUsed.add(googleFont);\n      }\n    }\n  };\n  const allModeValues = Object.values(theme._getModeParams());\n  const allValues = allModeValues.flatMap(mv => Object.values(mv));\n  allValues.forEach(visitParamValue);\n  return Array.from(googleFontsUsed).sort();\n};\nvar uninstalledLegacyCSS = false;\nvar uninstallLegacyCSS = () => {\n  if (uninstalledLegacyCSS) return;\n  uninstalledLegacyCSS = true;\n  for (const style of Array.from(document.head.querySelectorAll('style[data-ag-scope=\"legacy\"]'))) {\n    style.remove();\n  }\n};\nvar googleFontsLoaded = /* @__PURE__ */new Set();\nvar loadGoogleFont = async (font, nonce) => {\n  googleFontsLoaded.add(font);\n  const css = `@import url('https://${googleFontsDomain}/css2?family=${encodeURIComponent(font)}:wght@100;200;300;400;500;600;700;800;900&display=swap');\n`;\n  _injectGlobalCSS(css, document.head, `googleFont:${font}`, void 0, 0, nonce);\n};\nvar googleFontsDomain = \"fonts.googleapis.com\";\n\n// packages/ag-grid-community/src/theming/parts/checkbox-style/checkbox-style-default.css-GENERATED.ts\nvar checkboxStyleDefaultCSS = /*css*/\n`.ag-checkbox-input-wrapper,.ag-radio-button-input-wrapper{background-color:var(--ag-checkbox-unchecked-background-color);border:solid var(--ag-checkbox-border-width) var(--ag-checkbox-unchecked-border-color);flex:none;height:var(--ag-icon-size);position:relative;width:var(--ag-icon-size);:where(input){-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;display:block;height:var(--ag-icon-size);margin:0;opacity:0;width:var(--ag-icon-size)}&:after{content:\"\";display:block;inset:0;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;pointer-events:none;position:absolute}&:where(.ag-checked){background-color:var(--ag-checkbox-checked-background-color);border-color:var(--ag-checkbox-checked-border-color);&:after{background-color:var(--ag-checkbox-checked-shape-color)}}&:where(:focus-within,:active){box-shadow:var(--ag-focus-shadow)}&:where(.ag-disabled){filter:grayscale();opacity:.5}}.ag-checkbox-input-wrapper{border-radius:var(--ag-checkbox-border-radius);&:where(.ag-checked):after{-webkit-mask-image:var(--ag-checkbox-checked-shape-image);mask-image:var(--ag-checkbox-checked-shape-image)}&:where(.ag-indeterminate){background-color:var(--ag-checkbox-indeterminate-background-color);border-color:var(--ag-checkbox-indeterminate-border-color);&:after{background-color:var(--ag-checkbox-indeterminate-shape-color);-webkit-mask-image:var(--ag-checkbox-indeterminate-shape-image);mask-image:var(--ag-checkbox-indeterminate-shape-image)}}}.ag-cell-editing-error .ag-checkbox-input-wrapper:focus-within{box-shadow:var(--ag-focus-error-shadow)}.ag-radio-button-input-wrapper{border-radius:100%;&:where(.ag-checked):after{-webkit-mask-image:var(--ag-radio-checked-shape-image);mask-image:var(--ag-radio-checked-shape-image)}}`;\n\n// packages/ag-grid-community/src/theming/parts/checkbox-style/checkbox-styles.ts\nvar makeCheckboxStyleDefaultTreeShakeable = () => createPart({\n  feature: \"checkboxStyle\",\n  params: {\n    checkboxBorderWidth: 1,\n    checkboxBorderRadius: {\n      ref: \"borderRadius\"\n    },\n    checkboxUncheckedBackgroundColor: backgroundColor,\n    checkboxUncheckedBorderColor: foregroundBackgroundMix(0.3),\n    checkboxCheckedBackgroundColor: accentColor,\n    checkboxCheckedBorderColor: {\n      ref: \"checkboxCheckedBackgroundColor\"\n    },\n    checkboxCheckedShapeImage: {\n      svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"7\" fill=\"none\"><path stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.75\" d=\"M1 3.5 3.5 6l5-5\"/></svg>'\n    },\n    checkboxCheckedShapeColor: backgroundColor,\n    checkboxIndeterminateBackgroundColor: foregroundBackgroundMix(0.3),\n    checkboxIndeterminateBorderColor: {\n      ref: \"checkboxIndeterminateBackgroundColor\"\n    },\n    checkboxIndeterminateShapeImage: {\n      svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"2\" fill=\"none\"><rect width=\"10\" height=\"2\" fill=\"#000\" rx=\"1\"/></svg>'\n    },\n    checkboxIndeterminateShapeColor: backgroundColor,\n    radioCheckedShapeImage: {\n      svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"6\" fill=\"none\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#000\"/></svg>'\n    }\n  },\n  css: checkboxStyleDefaultCSS\n});\nvar checkboxStyleDefault = /* @__PURE__ */makeCheckboxStyleDefaultTreeShakeable();\n\n// packages/ag-grid-community/src/theming/parts/color-scheme/color-schemes.ts\nvar makeColorSchemeLightTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: defaultLightColorSchemeParams\n});\nvar colorSchemeLight = /* @__PURE__ */makeColorSchemeLightTreeShakeable();\nvar makeColorSchemeLightWarmTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: {\n    ...defaultLightColorSchemeParams,\n    foregroundColor: \"#000000de\",\n    borderColor: \"#60300026\",\n    chromeBackgroundColor: \"#60300005\"\n  }\n});\nvar colorSchemeLightWarm = /* @__PURE__ */makeColorSchemeLightWarmTreeShakeable();\nvar makeColorSchemeLightColdTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: {\n    ...defaultLightColorSchemeParams,\n    foregroundColor: \"#000\",\n    chromeBackgroundColor: \"#f3f8f8\"\n  }\n});\nvar colorSchemeLightCold = /* @__PURE__ */makeColorSchemeLightColdTreeShakeable();\nvar darkParams = () => ({\n  ...defaultLightColorSchemeParams,\n  ...baseDarkBatchEditParams,\n  backgroundColor: \"hsl(217, 0%, 17%)\",\n  foregroundColor: \"#FFF\",\n  chromeBackgroundColor: foregroundBackgroundMix(0.05),\n  rowHoverColor: accentMix(0.15),\n  selectedRowBackgroundColor: accentMix(0.2),\n  menuBackgroundColor: foregroundBackgroundMix(0.1),\n  browserColorScheme: \"dark\",\n  popupShadow: \"0 0px 20px #000A\",\n  cardShadow: \"0 1px 4px 1px #000A\",\n  advancedFilterBuilderJoinPillColor: \"#7a3a37\",\n  advancedFilterBuilderColumnPillColor: \"#355f2d\",\n  advancedFilterBuilderOptionPillColor: \"#5a3168\",\n  advancedFilterBuilderValuePillColor: \"#374c86\",\n  filterPanelApplyButtonColor: foregroundColor,\n  findMatchColor: backgroundColor,\n  findActiveMatchColor: backgroundColor,\n  checkboxUncheckedBorderColor: foregroundBackgroundMix(0.4),\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.4),\n  rowBatchEditBackgroundColor: foregroundBackgroundMix(0.1)\n});\nvar makeColorSchemeDarkTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: darkParams()\n});\nvar colorSchemeDark = /* @__PURE__ */makeColorSchemeDarkTreeShakeable();\nvar makeColorSchemeDarkWarmTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: {\n    backgroundColor: \"hsl(29, 10%, 17%)\",\n    foregroundColor: \"#FFF\",\n    browserColorScheme: \"dark\"\n  }\n});\nvar darkBlueParams = () => ({\n  ...darkParams(),\n  backgroundColor: \"#1f2836\"\n});\nvar colorSchemeDarkWarm = /* @__PURE__ */makeColorSchemeDarkWarmTreeShakeable();\nvar makeColorSchemeDarkBlueTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: darkBlueParams()\n});\nvar colorSchemeDarkBlue = /* @__PURE__ */makeColorSchemeDarkBlueTreeShakeable();\nvar makeColorSchemeVariableTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: defaultLightColorSchemeParams,\n  modeParams: {\n    light: defaultLightColorSchemeParams,\n    dark: darkParams(),\n    \"dark-blue\": darkBlueParams()\n  }\n});\nvar colorSchemeVariable = /* @__PURE__ */makeColorSchemeVariableTreeShakeable();\n\n// packages/ag-grid-community/src/theming/parts/icon-set/balham/icon-set-balham.css-GENERATED.ts\nvar iconSetBalhamCSS = /*css*/\n`.ag-icon-aggregation:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eaggregation%3C/title%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0M7.006 4c-1.57.02-2.946 1.348-3.004 2.922-.078 6.078-.23 12.16.002 18.234.094 1.484 1.354 2.746 2.84 2.84 6.1.232 12.212.232 18.312 0 1.48-.094 2.746-1.35 2.84-2.84.232-6.1.232-12.212 0-18.312-.094-1.48-1.35-2.746-2.84-2.84C19.11 3.774 13.056 4 7.006 4M22 12h-2v-2h-8v.092c.056 1.352 3.426 2.598 4.472 4.404.682 1.174.438 2.754-.572 3.72C14.29 19.618 12 20.924 12 22h8v-2h2v4H10c0-1.586-.098-3.304 1.016-4.314 1.904-1.632 4.89-3.108 3.54-4.42-1.918-1.68-4.464-2.936-4.554-5.12L10 8h12z'/%3E%3C/svg%3E\")}.ag-icon-arrows:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Earrows%3C/title%3E%3Cpath d='m6.414 17 2.294 2.292-1.416 1.416L2.586 16l4.706-4.708 1.416 1.416L6.414 15H15V6.414l-2.292 2.294-1.416-1.416L16 2.586l4.708 4.706-1.416 1.416L17 6.414V15h8.586l-2.294-2.292 1.416-1.416L29.414 16l-4.706 4.708-1.416-1.416L25.586 17H17v8.586l2.292-2.294 1.416 1.416L16 29.414l-4.708-4.706 1.416-1.416L15 25.586V17z'/%3E%3C/svg%3E\")}.ag-icon-asc:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m15 10.621-4.292 4.294-1.416-1.416L16 6.793l6.708 6.706-1.416 1.416L17 10.621v14.586h-2z'/%3E%3C/svg%3E\")}.ag-icon-cancel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecancel%3C/title%3E%3Cpath d='M16 4C9.378 4 4 9.378 4 16s5.378 12 12 12 12-5.378 12-12S22.622 4 16 4m0 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S6 21.52 6 16 10.48 6 16 6m0 8.586 5.292-5.294 1.416 1.416L17.414 16l5.294 5.292-1.416 1.416L16 17.414l-5.292 5.294-1.416-1.416L14.586 16l-5.294-5.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-chart:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Echart%3C/title%3E%3Cpath d='M6.667 12.267h4v13.067h-4zm7.466-5.6h3.733v18.667h-3.733zM21.6 17.333h3.733v8H21.6z'/%3E%3C/svg%3E\")}.ag-icon-color-picker:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolor-picker%3C/title%3E%3Cpath d='M23.907 17.587 10.574 4.254l-1.88 1.88 3.173 3.173-8.28 8.28 10.16 10.16zm-16.547 0 6.387-6.387 6.387 6.387H7.361zm18.387 2s-2.667 2.893-2.667 4.667c0 1.467 1.2 2.667 2.667 2.667s2.667-1.2 2.667-2.667c0-1.773-2.667-4.667-2.667-4.667'/%3E%3C/svg%3E\")}.ag-icon-columns:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolumns%3C/title%3E%3Cpath d='M14 25h-2V7h2zm6 0h-2V7h2zm6 0h-2V7h2zM8 25H6V7h2z'/%3E%3C/svg%3E\")}.ag-icon-contracted:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Econtracted%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-copy:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecopy%3C/title%3E%3Cpath d='M21.929 27.999h-7.828a5.09 5.09 0 0 1-5.086-5.086v-9.812a5.087 5.087 0 0 1 5.086-5.086h7.828a5.09 5.09 0 0 1 5.086 5.086v9.812a5.087 5.087 0 0 1-5.086 5.086m.16-17.984h-8.088a2.94 2.94 0 0 0-2.938 2.938v10.132a2.94 2.94 0 0 0 2.938 2.938h8.088a2.94 2.94 0 0 0 2.936-2.938V12.953a2.94 2.94 0 0 0-2.936-2.938M7.041 26.013h-2.05a4 4 0 0 1-.006-.228V9.065a5.07 5.07 0 0 1 5.064-5.064h12.812q.069 0 .134.002v2.012H9.915a2.876 2.876 0 0 0-2.874 2.874z'/%3E%3C/svg%3E\")}.ag-icon-cross:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='4 4 24 24'%3E%3Ctitle%3Ecross%3C/title%3E%3Cpath d='m16 14.586 5.292-5.294 1.416 1.416L17.414 16l5.294 5.292-1.416 1.416L16 17.414l-5.292 5.294-1.416-1.416L14.586 16l-5.294-5.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-csv:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='M.688-.226a.2.2 0 0 1-.017.074.28.28 0 0 1-.145.14.412.412 0 0 1-.234.013.28.28 0 0 1-.202-.168.468.468 0 0 1-.04-.19q0-.086.025-.155a.319.319 0 0 1 .182-.191.4.4 0 0 1 .134-.025q.087 0 .155.035a.3.3 0 0 1 .104.085.17.17 0 0 1 .036.097.06.06 0 0 1-.018.044.06.06 0 0 1-.042.019.06.06 0 0 1-.042-.013.2.2 0 0 1-.031-.046.2.2 0 0 0-.066-.079.16.16 0 0 0-.095-.027.17.17 0 0 0-.142.068.3.3 0 0 0-.053.193.4.4 0 0 0 .023.139.2.2 0 0 0 .067.083.2.2 0 0 0 .1.027q.063 0 .106-.031a.2.2 0 0 0 .065-.091.2.2 0 0 1 .023-.046q.014-.018.044-.018a.06.06 0 0 1 .044.018.06.06 0 0 1 .019.045' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 7.122 25.977)'/%3E%3Cpath d='M.622-.215a.2.2 0 0 1-.033.117.23.23 0 0 1-.098.081.4.4 0 0 1-.153.029.34.34 0 0 1-.175-.04.23.23 0 0 1-.079-.077.17.17 0 0 1-.031-.093q0-.027.019-.045a.06.06 0 0 1 .046-.019.06.06 0 0 1 .039.014.1.1 0 0 1 .027.044.3.3 0 0 0 .03.057q.015.023.044.038.03.015.076.015.065 0 .105-.03a.09.09 0 0 0 .04-.075.08.08 0 0 0-.022-.058.14.14 0 0 0-.056-.034 1 1 0 0 0-.092-.025.7.7 0 0 1-.129-.042.2.2 0 0 1-.083-.066.17.17 0 0 1-.03-.104q0-.058.032-.105a.2.2 0 0 1 .093-.07.4.4 0 0 1 .144-.025q.066 0 .114.016a.3.3 0 0 1 .08.044.2.2 0 0 1 .046.057q.015.03.015.058a.07.07 0 0 1-.018.046.06.06 0 0 1-.046.021q-.025 0-.038-.012a.2.2 0 0 1-.028-.041.2.2 0 0 0-.047-.063Q.387-.625.326-.625a.15.15 0 0 0-.09.025q-.035.024-.035.059 0 .021.012.037a.1.1 0 0 0 .032.027.4.4 0 0 0 .111.036q.06.015.11.031.048.018.083.042a.2.2 0 0 1 .054.062.2.2 0 0 1 .019.091' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 13.339 25.977)'/%3E%3Cpath d='m.184-.633.162.48.163-.483q.013-.038.019-.053a.062.062 0 0 1 .061-.039q.018 0 .034.009a.1.1 0 0 1 .025.025q.009.015.009.031L.654-.64l-.007.025-.009.024-.173.468-.019.051a.2.2 0 0 1-.021.042.1.1 0 0 1-.033.03.1.1 0 0 1-.049.012.1.1 0 0 1-.05-.011A.1.1 0 0 1 .26-.03a.2.2 0 0 1-.021-.042L.22-.123.05-.587.041-.612.033-.638.03-.662q0-.025.02-.046a.07.07 0 0 1 .05-.02q.037 0 .053.023.015.023.031.072' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 18.94 25.977)'/%3E%3C/svg%3E\")}.ag-icon-cut:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M14.703 15.096 6.215 4.719a1 1 0 1 1 1.548-1.267l13.058 15.965A5.001 5.001 0 0 1 28 23.916a5 5 0 0 1-4.999 4.999 5 5 0 0 1-4.999-4.999 4.98 4.98 0 0 1 1.23-3.283l-3.238-3.958-3.272 4.001a4.98 4.98 0 0 1 1.265 3.323 5 5 0 0 1-4.999 4.999 5 5 0 0 1-4.999-4.999 5 5 0 0 1 7.13-4.522zM8.991 20.8a3.1 3.1 0 0 0-3.1 3.1c0 1.711 1.389 3.1 3.1 3.1s3.1-1.389 3.1-3.1-1.389-3.1-3.1-3.1M23 20.8a3.1 3.1 0 0 0-3.1 3.1c0 1.711 1.389 3.1 3.1 3.1s3.1-1.389 3.1-3.1-1.389-3.1-3.1-3.1m-5.723-8.852 1.292 1.579 7.205-8.808a1 1 0 0 0-1.548-1.267z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-desc:before,.ag-icon-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Edesc%3C/title%3E%3Cpath d='m17 21.379 4.292-4.294 1.416 1.416L16 25.207l-6.708-6.706 1.416-1.416L15 21.379V6.793h2z'/%3E%3C/svg%3E\")}.ag-icon-excel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='m.052-.139.16-.234-.135-.208a.4.4 0 0 1-.028-.052.1.1 0 0 1-.01-.042.05.05 0 0 1 .018-.037.07.07 0 0 1 .045-.016q.03 0 .047.018a1 1 0 0 1 .047.066l.107.174.115-.174.024-.038.019-.026.021-.015a.1.1 0 0 1 .027-.005.06.06 0 0 1 .044.016.05.05 0 0 1 .018.039q0 .033-.038.089l-.141.211.152.234a.3.3 0 0 1 .03.051.1.1 0 0 1 .009.038.1.1 0 0 1-.008.031.1.1 0 0 1-.024.023.1.1 0 0 1-.034.008.1.1 0 0 1-.035-.008.1.1 0 0 1-.023-.022L.427-.067.301-.265l-.134.204-.022.034-.016.019a.1.1 0 0 1-.022.015.1.1 0 0 1-.03.005.06.06 0 0 1-.044-.016.06.06 0 0 1-.017-.047q0-.036.036-.088' style='fill-rule:nonzero' transform='matrix(17.82892 0 0 16.50777 10.371 25.928)'/%3E%3C/svg%3E\")}.ag-icon-expanded:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eexpanded%3C/title%3E%3Cpath d='M21.061 8.708 13.767 16l7.294 7.292-1.416 1.416L10.939 16l8.706-8.708z'/%3E%3C/svg%3E\")}.ag-icon-eye-slash:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye-slash%3C/title%3E%3Cpath d='M9.304 7.89a15.2 15.2 0 0 1 6.404-1.638c.294-.002.292-.002.584 0 5.956.174 11.328 4.088 13.62 9.748 0 0-1.318 3.178-3.224 5.174a13.6 13.6 0 0 1-2.226 1.874L26.414 25 25 26.414l-2.336-2.336C17.866 26.396 11.776 26.15 7.36 22.96a14.9 14.9 0 0 1-4.168-4.612c-.41-.71-.694-1.336-1.104-2.348 0 0 .898-2.218 2.002-3.718a14.6 14.6 0 0 1 3.442-3.334L5.586 7 7 5.586zm-.3 2.528c-2.038 1.344-3.708 3.246-4.724 5.508L4.248 16c2.46 5.762 9.622 9.064 15.63 7.15q.688-.219 1.342-.516l-.912-.912a6.96 6.96 0 0 1-4.19 1.394c-3.862 0-7-3.136-7-7 0-1.57.52-3.022 1.394-4.19zm14.032 11.204a13.25 13.25 0 0 0 4.684-5.548l.032-.074c-1.984-4.646-6.834-7.798-12.006-7.748-1.712.05-3.386.458-4.922 1.158l1.102 1.102a6.97 6.97 0 0 1 4.192-1.396 7.003 7.003 0 0 1 5.606 11.192zm-11.09-8.262a5.003 5.003 0 0 0 6.928 6.928zm8.342 5.514a5.002 5.002 0 0 0-6.928-6.928z'/%3E%3C/svg%3E\")}.ag-icon-eye:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye%3C/title%3E%3Cpath d='M16.292 6.32c5.956.174 11.328 4.086 13.62 9.746 0 0-1.318 3.18-3.224 5.176-4.862 5.088-13.534 5.97-19.328 1.784a14.9 14.9 0 0 1-4.168-4.612c-.41-.71-.694-1.336-1.104-2.348 0 0 .898-2.216 2.002-3.716 2.678-3.64 7.03-5.896 11.618-6.03.294-.004.292-.004.584 0m-.546 2c-4.896.142-9.458 3.202-11.466 7.672l-.032.074c2.46 5.762 9.622 9.066 15.63 7.152 3.458-1.102 6.342-3.738 7.842-7.076l.032-.076C25.768 11.42 20.918 8.27 15.746 8.32m.254.946c3.754 0 6.8 3.048 6.8 6.8 0 3.754-3.046 6.8-6.8 6.8s-6.8-3.046-6.8-6.8c0-3.752 3.046-6.8 6.8-6.8m5 6.768V16c0-2.76-2.24-5-5-5s-5 2.24-5 5v.066c0 2.76 2.24 5 5 5s5-2.24 5-5z'/%3E%3C/svg%3E\")}.ag-icon-filter:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efilter%3C/title%3E%3Cpath d='M26 8.184c-.066 2.658-4.058 5.154-6.742 7.974a1.05 1.05 0 0 0-.258.682v3.66L13 25c0-2.74.066-5.482-.002-8.222a1.05 1.05 0 0 0-.256-.62C10.026 13.304 6.06 10.61 6 8.184V6h20zM8 8c0 .304.06.612.258.842 2.716 2.854 6.682 5.548 6.742 7.974V21l2-1.5v-2.684c.066-2.658 4.058-5.154 6.742-7.974.198-.23.258-.538.258-.842z'/%3E%3C/svg%3E\")}.ag-icon-first:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efirst%3C/title%3E%3Cpath d='M24.354 8.708 17.06 16l7.294 7.292-1.416 1.416L14.232 16l8.706-8.708zM9.646 8v16h-2V8z'/%3E%3C/svg%3E\")}.ag-icon-group:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egroup%3C/title%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0M7.006 4c-1.57.02-2.946 1.348-3.004 2.922-.078 6.078-.23 12.16.002 18.234.094 1.484 1.354 2.746 2.84 2.84 6.1.232 12.212.232 18.312 0 1.48-.094 2.746-1.35 2.84-2.84.232-6.1.232-12.212 0-18.312-.094-1.48-1.35-2.746-2.84-2.84C19.11 3.774 13.056 4 7.006 4M14 21h-4v-2h4zm12 0H16v-2h10zm-12-4h-4v-2h4zm12 0H16v-2h10zm-16-4H6v-2h4zm16 0H12v-2h14z'/%3E%3C/svg%3E\")}.ag-icon-last:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elast%3C/title%3E%3Cpath d='m17.768 16-8.706 8.708-1.416-1.416L14.94 16 7.646 8.708l1.416-1.416zm6.586 8h-2V8h2z'/%3E%3C/svg%3E\")}.ag-icon-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eleft%3C/title%3E%3Cpath d='m17.621 11-2 2h12.586v6H15.621l2 2-4.414 4.414L3.793 16l9.414-9.414zm-11 5 6.586 6.586L14.793 21l-4-4h15.414v-2H10.793l4-4-1.586-1.586z'/%3E%3C/svg%3E\")}.ag-icon-linked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elinked%3C/title%3E%3Cpath d='M17.138 13.418a1.03 1.03 0 0 0-.298.658s.125.096.226.178c1.372 1.114 2.033 3.039 1.582 4.796a4.7 4.7 0 0 1-1.205 2.123c-1.145 1.151-2.296 2.294-3.445 3.441-1.241 1.232-3.185 1.691-4.864 1.105-1.546-.54-2.756-1.938-3.048-3.572-.267-1.496.246-3.108 1.319-4.186l.578-.578-.03-.092a10.5 10.5 0 0 1-.452-2.3v-.005c-.776.775-1.621 1.489-2.275 2.396-1.817 2.522-1.643 6.323.706 8.669 1.813 1.811 4.708 2.462 7.171 1.517a6.75 6.75 0 0 0 2.336-1.518l3.427-3.424c1.939-1.954 2.533-5.126 1.294-7.674a6.8 6.8 0 0 0-2.071-2.481l-.003-.002zM21.265 4a6.8 6.8 0 0 0-4.734 1.964l-3.427 3.424c-1.961 1.977-2.52 5.092-1.32 7.619a6.8 6.8 0 0 0 2.098 2.537l.003.002c.32-.32.643-.637.96-.96.167-.172.27-.401.286-.64l-.204-.167c-1.603-1.287-2.215-3.68-1.316-5.616a4.7 4.7 0 0 1 .918-1.32c1.145-1.151 2.296-2.294 3.445-3.441 1.239-1.23 3.178-1.694 4.864-1.105 1.83.639 3.16 2.498 3.12 4.493a4.8 4.8 0 0 1-1.391 3.265l-.578.578.03.092c.235.743.387 1.519.452 2.3v.005c.732-.731 1.521-1.406 2.162-2.244 1.192-1.559 1.643-3.651 1.204-5.575a6.8 6.8 0 0 0-3.98-4.703 6.8 6.8 0 0 0-2.529-.506h-.061z'/%3E%3C/svg%3E\")}.ag-icon-loading:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eloading%3C/title%3E%3Cpath d='M17 29h-2v-8h2zm-3.586-9L7 26.414 5.586 25 12 18.586zm13 5L25 26.414 18.586 20 20 18.586zM29 17h-8v-2h8zm-18 0H3v-2h8zm2.414-5L12 13.414 5.586 7 7 5.586zm13-5L20 13.414 18.586 12 25 5.586zM17 11h-2V3h2z'/%3E%3C/svg%3E\")}.ag-icon-maximize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='3 3 26 26'%3E%3Ctitle%3Emaximize%3C/title%3E%3Cpath d='m7.54 17.4.1 6.98 6.96.1-2.24-2.24L16 18.6 13.4 16l-3.64 3.64zm16.92-2.8-.1-6.98-6.96-.1 2.24 2.24L16 13.4l2.6 2.6 3.64-3.64z'/%3E%3C/svg%3E\")}.ag-icon-menu:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Emenu%3C/title%3E%3Cpath d='M26 23H6v-2h20zm0-6H6v-2h20zm0-6H6V9h20z'/%3E%3C/svg%3E\")}.ag-icon-menu-alt:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none'%3E%3Cpath fill='%23000' d='M16 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4m0-7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m0 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4'/%3E%3C/svg%3E\")}.ag-icon-minimize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='3 3 26 26'%3E%3Ctitle%3Eminimize%3C/title%3E%3Cpath d='m14.8 24.26-.1-6.96-6.96-.1 2.24 2.24-3.64 3.64 2.6 2.6 3.64-3.64zm2.4-16.52.1 6.96 6.96.1-2.24-2.24 3.64-3.64-2.6-2.6-3.64 3.64z'/%3E%3C/svg%3E\")}.ag-icon-minus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.515 7.515c-4.683 4.682-4.683 12.288 0 16.97 4.682 4.683 12.288 4.683 16.97 0 4.683-4.682 4.683-12.288 0-16.97-4.682-4.683-12.288-4.683-16.97 0m1.414 1.414c3.903-3.903 10.239-3.903 14.142 0s3.903 10.239 0 14.142-10.239 3.903-14.142 0-3.903-10.239 0-14.142m-1.414 6.07h16.97v2.002H7.515z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-next:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enext%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-none:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enone%3C/title%3E%3Cpath d='m10.044 21.258 4.478-4.198L16 18.444 9 25l-7-6.556 1.478-1.384 4.478 4.198V7h2.088zm14 3.742h-2.088V10.742l-4.478 4.198L16 13.556 23 7q3.5 3.28 7 6.556l-1.478 1.384-4.478-4.198z'/%3E%3C/svg%3E\")}.ag-icon-not-allowed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enot-allowed%3C/title%3E%3Cpath d='M16.186 3.646c8.188.154 14.898 9.796 11.17 17.78-3.298 7.066-13.932 9.374-19.848 3.87-3.9-3.632-5.076-9.896-2.684-14.708 2.082-4.19 6.588-6.974 11.362-6.942m-.298 1.998c-6.922.132-12.578 8.308-9.33 15.052 3.342 6.934 15.246 7.646 18.932 0 3.076-6.386-1.988-15.1-9.602-15.052m7.596 6.422c2.864 5.33-1.744 13.186-8.306 12.536a8.6 8.6 0 0 1-3.232-.998l-1.266-.706L22.778 10.8q.351.633.706 1.266m-9.422 10.276c3.296 1.028 7.246-1.006 8.216-4.418a6.6 6.6 0 0 0-.056-3.742zm2.104-14.696a8.8 8.8 0 0 1 3.936 1.038l1.266.706L9.27 21.488c-3.018-5.41-.99-13.37 6.318-13.834q.289-.01.578-.008m-.31 2c-4.06.154-7.23 4.614-6.03 8.46l8.16-8.16a6.8 6.8 0 0 0-2.13-.3'/%3E%3C/svg%3E\")}.ag-icon-paste:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epaste%3C/title%3E%3Cpath d='M20 6.5c0-1-1-3-4-3s-4 2-4 3H8c-2.21 0-4 1.79-4 4v14c0 2.21 1.79 4 4 4h16c2.21 0 4-1.79 4-4v-14c0-2.21-1.79-4-4-4zm-4 .546c.734 0 1.334.572 1.334 1.272S16.734 9.59 16 9.59s-1.334-.572-1.334-1.272.6-1.272 1.334-1.272M24 26.5H8a2 2 0 0 1-2-2v-14a2 2 0 0 1 2-2h2v4h12v-4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2'/%3E%3C/svg%3E\")}.ag-icon-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epin%3C/title%3E%3Cpath d='m10.78 19.777-4.668-4.666s.032-1 .67-1.87c1.366-1.86 4.052-1.96 6.056-1.572l3.158-3.108c-.7-2.342 3.352-5.046 3.352-5.046l9.166 9.168q-.334.447-.67.894c-1.074 1.426-2.538 2.63-4.272 2.338l-3.32 3.218c.046.344.042.03.118 1.152.144 2.13-.64 4.324-2.632 5.34l-.746.364-4.798-4.798-7.292 7.294-1.416-1.416zm8.24-13.672c-.688.568-1.416 1.45-1.024 2.072l.49.722-4.986 4.988c-1.988-.506-4.346-.636-5.156.614l9.02 9.032q.14-.099.272-.21c1.226-1.08.764-3.04.498-4.9l4.79-4.79s1.47.938 2.936-.776l-6.79-6.79q-.026.019-.05.038'/%3E%3C/svg%3E\")}.ag-icon-pivot:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epivot%3C/title%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0m2.966 7.954H9.892v18.136c5.086.13 10.18.098 15.264-.096 1.48-.094 2.746-1.35 2.84-2.84.192-5.064.226-10.134.098-15.2M3.968 24.1q.015.528.036 1.056c.094 1.484 1.354 2.746 2.84 2.84l1.012.036V24.1zM22 15.414l-.292.294-1.416-1.416L23 11.586l2.708 2.706-1.416 1.416-.292-.294v3.592c-.032 2.604-2.246 4.892-4.872 4.992L15.414 24l.294.292-1.416 1.416L11.586 23l2.706-2.708 1.416 1.416-.322.32c3.372.03 6.578-.164 6.614-3.034zM3.88 18.038c.002 1.346.012 2.694.038 4.04h3.938v-4.04zm.05-6.062a681 681 0 0 0-.044 4.042h3.97v-4.042zm5.962-7.99Q8.449 3.999 7.006 4c-1.57.02-2.946 1.348-3.004 2.922q-.02 1.517-.042 3.034h3.896v-2.02h2.036zm14.244-.016v3.966h3.898q-.017-.546-.038-1.092c-.094-1.48-1.35-2.746-2.84-2.84q-.51-.019-1.02-.034m-8.14-.054q-2.035.022-4.07.048v3.972h4.07zm6.106.008c-1.358-.022-2.714-.026-4.07-.022v4.034h4.07z'/%3E%3C/svg%3E\")}.ag-icon-plus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.515 7.515c-4.683 4.682-4.683 12.288 0 16.97 4.682 4.683 12.288 4.683 16.97 0 4.683-4.682 4.683-12.288 0-16.97-4.682-4.683-12.288-4.683-16.97 0m1.414 1.414c3.903-3.903 10.239-3.903 14.142 0s3.903 10.239 0 14.142-10.239 3.903-14.142 0-3.903-10.239 0-14.142M15 15l-.001-7.485h2.002L17 15l7.485-.001v2.002L17 17l.001 7.485h-2.002L15 17l-7.485.001v-2.002z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-previous:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eprevious%3C/title%3E%3Cpath d='M21.061 8.708 13.767 16l7.294 7.292-1.416 1.416L10.939 16l8.706-8.708z'/%3E%3C/svg%3E\")}.ag-icon-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eright%3C/title%3E%3Cpath d='m28.207 16-9.414 9.414L14.379 21l2-2H3.793v-6h12.586l-2-2 4.414-4.414zm-11-5 4 4H5.793v2h15.414l-4 4 1.586 1.586L25.379 16l-6.586-6.586z'/%3E%3C/svg%3E\")}.ag-icon-save:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esave%3C/title%3E%3Cpath d='M25.333 16v9.333H6.666V16H3.999v9.333C3.999 26.8 5.199 28 6.666 28h18.667C26.8 28 28 26.8 28 25.333V16zm-8 .893 3.453-3.44 1.88 1.88L15.999 22l-6.667-6.667 1.88-1.88 3.453 3.44V4h2.667v12.893z'/%3E%3C/svg%3E\")}.ag-icon-small-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-down%3C/title%3E%3Cpath d='M24.708 12.355 16 21.061l-8.708-8.706 1.416-1.416L16 18.233l7.292-7.294z'/%3E%3C/svg%3E\")}.ag-icon-small-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-left%3C/title%3E%3Cpath d='M21.061 8.708 13.767 16l7.294 7.292-1.416 1.416L10.939 16l8.706-8.708z'/%3E%3C/svg%3E\")}.ag-icon-small-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-right%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-small-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-up%3C/title%3E%3Cpath d='m24.708 19.645-1.416 1.416L16 13.767l-7.292 7.294-1.416-1.416L16 10.939z'/%3E%3C/svg%3E\")}.ag-icon-tick:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etick%3C/title%3E%3Cpath d='M24.708 10.855 13 22.561l-5.708-5.706 1.416-1.416L13 19.733 23.292 9.439z'/%3E%3C/svg%3E\")}.ag-icon-tree-closed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-closed%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-tree-indeterminate:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-indeterminate%3C/title%3E%3Cpath d='M6 15h20v2H6z'/%3E%3C/svg%3E\")}.ag-icon-tree-open:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-open%3C/title%3E%3Cpath d='M24.708 12.355 16 21.061l-8.708-8.706 1.416-1.416L16 18.233l7.292-7.294z'/%3E%3C/svg%3E\")}.ag-icon-unlinked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eunlinked%3C/title%3E%3Cpath d='M5.35 3.999a.2.2 0 0 0-.14.058c-.388.38-.768.768-1.152 1.152a.21.21 0 0 0-.002.288c7.459 7.506 14.965 14.965 22.447 22.447a.21.21 0 0 0 .288.002q.576-.574 1.151-1.151a.21.21 0 0 0 .002-.288C20.484 19.002 12.979 11.542 5.497 4.06a.2.2 0 0 0-.146-.061zm.611 12.548c-1.933 1.939-2.538 5.119-1.289 7.688a6.79 6.79 0 0 0 4.891 3.672 6.82 6.82 0 0 0 5.893-1.866l1.984-1.984-1.438-1.438-1.986 1.986c-1.486 1.476-3.993 1.81-5.834.629a4.73 4.73 0 0 1-2.024-2.853 4.76 4.76 0 0 1 1.241-4.393l1.986-1.986-1.438-1.438-1.984 1.984zM21.273 3.999a6.78 6.78 0 0 0-4.727 1.963l-1.984 1.984L16 9.384l1.985-1.985a4.74 4.74 0 0 1 2.776-1.338c1.974-.224 4.045.926 4.845 2.834.712 1.699.329 3.778-1.004 5.12L22.616 16l1.439 1.438q1-1 2-2c2.012-2.031 2.557-5.368 1.112-7.982-1.144-2.07-3.432-3.441-5.834-3.459h-.061z'/%3E%3C/svg%3E\")}.ag-icon-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m15 10.621-4.292 4.294-1.416-1.416L16 6.793l6.708 6.706-1.416 1.416L17 10.621v14.586h-2z'/%3E%3C/svg%3E\")}.ag-icon-grip:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egrip%3C/title%3E%3Cpath d='M8 24H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 18H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 12H6V8h2zm6 0h-2V8h2zm6 0h-2V8h2zm6 0h-2V8h2z'/%3E%3C/svg%3E\")}.ag-icon-settings:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M30 8h-4.1c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2h14.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30zm-9 4c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3M2 24h4.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30v-2H15.9c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2zm9-4c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3 1.3-3 3-3'/%3E%3C/svg%3E\")}.ag-icon-column-arrow:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M11 4a1 1 0 0 1 1 1v22a1 1 0 1 1-2 0V5a1 1 0 0 1 1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 13a1 1 0 0 1 1-1h23.5a1 1 0 1 1 0 2H3a1 1 0 0 1-1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 4h18v24H2zm2 2v20h14V6zM26.793 13 23 9.207l1.414-1.414L29.621 13l-5.207 5.207L23 16.793z' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-un-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='m6.112 15.111 3.272 3.271 1.436-1.402-2.476-2.479c.81-1.25 3.168-1.12 5.156-.614l4.986-4.988-.49-.722c-.392-.622.336-1.504 1.024-2.072l.008-.007.01-.006.032-.025 1.447 1.447 1.432-1.397-2.601-2.602s-4.052 2.704-3.352 5.046l-3.158 3.108c-2.004-.388-4.69-.288-6.056 1.572-.638.87-.67 1.87-.67 1.87m.581 11.582.014.014 5.502-5.501 4.783 4.783.746-.364c1.992-1.016 2.776-3.21 2.632-5.34-.055-.805-.068-.87-.088-.97-.008-.04-.017-.085-.03-.182l3.32-3.218c1.734.292 3.198-.912 4.272-2.338q.337-.447.67-.894l-.001-.001-.007-.007-.007-.007-.007-.007-3.87-3.87 1.585-1.584-1.414-1.414-14.381 14.38-1.237 1.209-5.69 5.687 1.417 1.416zM23.21 10.206l2.65 2.651c-1.465 1.714-2.935.776-2.935.776l-4.79 4.79q.041.291.087.583c.257 1.676.513 3.35-.585 4.317a4 4 0 0 1-.272.21l-3.739-3.744z' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-pinned-top:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='m16.708 10.878 8.708 8.706L24 21l-6.292-6.294V27h-2V14.706L9.416 21 8 19.584q4.348-4.344 8.691-8.69zM25 6H8v2h17z'/%3E%3C/svg%3E\")}.ag-icon-pinned-bottom:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M16.708 22.122 8 13.416 9.416 12l6.292 6.294V6h2v12.294L24 12l1.416 1.416-8.691 8.69zM7.416 28h17v-2h-17z'/%3E%3C/svg%3E\")}.ag-icon-chevron-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M3.479 10.521a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1-1.06 1.06l-3.47-3.47-3.47 3.47a.75.75 0 0 1-1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M12.521 5.461a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 1.06-1.06l3.47 3.47 3.47-3.47a.75.75 0 0 1 1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M10.53 12.512a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 1.06l-3.47 3.47 3.47 3.47a.75.75 0 0 1 0 1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M5.47 3.47a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06-1.06L8.94 8 5.47 4.53a.75.75 0 0 1 0-1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-filter-add:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M19.834 8H8c0 .304.06.612.258.842 2.716 2.854 6.682 5.548 6.742 7.974V21l2-1.5v-2.684c.056-2.267 2.968-4.417 5.49-6.75v3.087c-1.081.974-2.245 1.968-3.232 3.005a1.05 1.05 0 0 0-.258.682v3.66L13 25c0-2.74.066-5.482-.002-8.222a1.05 1.05 0 0 0-.256-.62C10.026 13.304 6.06 10.61 6 8.184V6h13.834z'/%3E%3Cpath fill='currentColor' d='M26 6h2.946v2.002H26v3.313h-2.002V8.002h-2.946V6h2.946V3.04H26z'/%3E%3C/svg%3E\")}.ag-icon-edit:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M23.182 5a3.82 3.82 0 0 1 2.83 6.383l-.131.137-2.09 2.088a1 1 0 0 1-.084.099 1 1 0 0 1-.098.084L12.533 24.869a3 3 0 0 1-1.245.746l-4.353 1.32-.003.002a1.5 1.5 0 0 1-1.87-1.867l.003-.004 1.32-4.352v-.003l.06-.174c.13-.344.321-.661.565-.936l.126-.135L18.209 8.39a1 1 0 0 1 .18-.181l2.092-2.09.137-.132A3.82 3.82 0 0 1 23.182 5M8.548 20.883a1 1 0 0 0-.25.415l-1.049 3.451 3.457-1.048.114-.042q.17-.076.301-.206l10.458-10.46-2.572-2.572zM23.182 7c-.482 0-.946.19-1.287.531v.001l-1.474 1.475 2.572 2.572 1.474-1.474.121-.133A1.82 1.82 0 0 0 23.182 7'/%3E%3C/svg%3E\")}`;\n\n// packages/ag-grid-community/src/theming/parts/icon-set/balham/icon-set-balham.ts\nvar iconSetBalham = /* @__PURE__ */createPart({\n  feature: \"iconSet\",\n  css: iconSetBalhamCSS\n});\n\n// packages/ag-grid-community/src/theming/parts/icon-set/alpine/icon-set-alpine.css-GENERATED.ts\nvar iconSetAlpineCSS = /*css*/\n`.ag-icon-aggregation:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M24 6H8v2l8 8-8 8v2h16v-2H11l8-8-8-8h13z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-arrows:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.515 11.171 2.687 16l4.828 4.829-1.414 1.414L-.142 16l6.243-6.243zm16.97 0 1.414-1.414L32.142 16l-6.243 6.243-1.414-1.414L29.313 16zM16.028 13.2l2.829 2.828-2.829 2.829-2.828-2.829zm-4.857 11.285L16 29.313l4.829-4.828 1.414 1.414L16 32.142l-6.243-6.243zm0-16.97L9.757 6.101 16-.142l6.243 6.243-1.414 1.414L16 2.687z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-asc:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333 5.332 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-cancel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M16 2.667A13.32 13.32 0 0 0 2.667 16c0 7.373 5.96 13.333 13.333 13.333S29.333 23.373 29.333 16 23.373 2.667 16 2.667m6.667 18.12-1.88 1.88L16 17.88l-4.787 4.787-1.88-1.88L14.12 16l-4.787-4.787 1.88-1.88L16 14.12l4.787-4.787 1.88 1.88L17.88 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-chart:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Echart%3C/title%3E%3Cg fill='%23000' fill-rule='nonzero'%3E%3Cpath d='M14 7h4v18h-4zM8 17h4v8H8zM20 13h4v12h-4z'/%3E%3C/g%3E%3C/svg%3E\")}.ag-icon-color-picker:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M23.907 17.587 10.574 4.254l-1.88 1.88 3.173 3.173-8.28 8.28 10.16 10.16zm-16.547 0 6.387-6.387 6.387 6.387zm18.387 2s-2.667 2.893-2.667 4.667c0 1.467 1.2 2.667 2.667 2.667s2.667-1.2 2.667-2.667c0-1.773-2.667-4.667-2.667-4.667' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-columns:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M26 25H6V7h20zM12 11H8v12h4zm6 0h-4v12h4zm6 12V11h-4v12z' style='fill-rule:nonzero' transform='translate(0 -1)'/%3E%3C/svg%3E\")}.ag-icon-contracted:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m12 6 10 10-10 10-2-2 8-8-8-8z'/%3E%3C/svg%3E\")}.ag-icon-copy:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M22 1.333H6A2.675 2.675 0 0 0 3.333 4v18.667H6V4h16zm4 5.334H11.333a2.675 2.675 0 0 0-2.667 2.667v18.667c0 1.467 1.2 2.667 2.667 2.667H26c1.467 0 2.667-1.2 2.667-2.667V9.334c0-1.467-1.2-2.667-2.667-2.667M26 28H11.333V9.333H26z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-cross:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M15.984 13.894 27.05 2.828l2.122 2.122-11.066 11.066 11.066 11.066-2.122 2.12-11.066-11.066L4.918 29.202l-2.12-2.12 11.066-11.066L2.798 4.95l2.12-2.122z'/%3E%3C/svg%3E\")}.ag-icon-csv:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='M.688-.226a.2.2 0 0 1-.017.074.28.28 0 0 1-.145.14.412.412 0 0 1-.234.013.28.28 0 0 1-.202-.168.468.468 0 0 1-.04-.19q0-.086.025-.155a.319.319 0 0 1 .182-.191.4.4 0 0 1 .134-.025q.087 0 .155.035a.3.3 0 0 1 .104.085.17.17 0 0 1 .036.097.06.06 0 0 1-.018.044.06.06 0 0 1-.042.019.06.06 0 0 1-.042-.013.2.2 0 0 1-.031-.046.2.2 0 0 0-.066-.079.16.16 0 0 0-.095-.027.17.17 0 0 0-.142.068.3.3 0 0 0-.053.193.4.4 0 0 0 .023.139.2.2 0 0 0 .067.083.2.2 0 0 0 .1.027q.063 0 .106-.031a.2.2 0 0 0 .065-.091.2.2 0 0 1 .023-.046q.014-.018.044-.018a.06.06 0 0 1 .044.018.06.06 0 0 1 .019.045' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 7.122 25.977)'/%3E%3Cpath d='M.622-.215a.2.2 0 0 1-.033.117.23.23 0 0 1-.098.081.4.4 0 0 1-.153.029.34.34 0 0 1-.175-.04.23.23 0 0 1-.079-.077.17.17 0 0 1-.031-.093q0-.027.019-.045a.06.06 0 0 1 .046-.019.06.06 0 0 1 .039.014.1.1 0 0 1 .027.044.3.3 0 0 0 .03.057q.015.023.044.038.03.015.076.015.065 0 .105-.03a.09.09 0 0 0 .04-.075.08.08 0 0 0-.022-.058.14.14 0 0 0-.056-.034 1 1 0 0 0-.092-.025.7.7 0 0 1-.129-.042.2.2 0 0 1-.083-.066.17.17 0 0 1-.03-.104q0-.058.032-.105a.2.2 0 0 1 .093-.07.4.4 0 0 1 .144-.025q.066 0 .114.016a.3.3 0 0 1 .08.044.2.2 0 0 1 .046.057q.015.03.015.058a.07.07 0 0 1-.018.046.06.06 0 0 1-.046.021q-.025 0-.038-.012a.2.2 0 0 1-.028-.041.2.2 0 0 0-.047-.063Q.387-.625.326-.625a.15.15 0 0 0-.09.025q-.035.024-.035.059 0 .021.012.037a.1.1 0 0 0 .032.027.4.4 0 0 0 .111.036q.06.015.11.031.048.018.083.042a.2.2 0 0 1 .054.062.2.2 0 0 1 .019.091' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 13.339 25.977)'/%3E%3Cpath d='m.184-.633.162.48.163-.483q.013-.038.019-.053a.062.062 0 0 1 .061-.039q.018 0 .034.009a.1.1 0 0 1 .025.025q.009.015.009.031L.654-.64l-.007.025-.009.024-.173.468-.019.051a.2.2 0 0 1-.021.042.1.1 0 0 1-.033.03.1.1 0 0 1-.049.012.1.1 0 0 1-.05-.011A.1.1 0 0 1 .26-.03a.2.2 0 0 1-.021-.042L.22-.123.05-.587.041-.612.033-.638.03-.662q0-.025.02-.046a.07.07 0 0 1 .05-.02q.037 0 .053.023.015.023.031.072' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 18.94 25.977)'/%3E%3C/svg%3E\")}.ag-icon-cut:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M13.775 15.198 3.835 2.945a1.501 1.501 0 0 1 2.33-1.89l14.997 18.488A6.003 6.003 0 0 1 29.657 25c0 3.311-2.688 6-6 6s-6-2.689-6-6c0-1.335.437-2.569 1.176-3.566l-3.127-3.855-3.001 3.7A5.97 5.97 0 0 1 14 25c0 3.311-2.689 6-6 6s-6-2.689-6-6a6.003 6.003 0 0 1 8.315-5.536zm9.882 6.702a3.1 3.1 0 0 0-3.1 3.1c0 1.711 1.389 3.1 3.1 3.1s3.1-1.389 3.1-3.1-1.389-3.1-3.1-3.1M8 21.95a3.05 3.05 0 1 0 .001 6.101A3.05 3.05 0 0 0 8 21.95m9.63-11.505 1.932 2.381 8.015-9.881a1.5 1.5 0 0 0-2.329-1.89z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-desc:before,.ag-icon-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m26.667 16-1.88-1.88-7.453 7.44V5.333h-2.667V21.56l-7.44-7.453L5.334 16l10.667 10.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-excel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='m.052-.139.16-.234-.135-.208a.4.4 0 0 1-.028-.052.1.1 0 0 1-.01-.042.05.05 0 0 1 .018-.037.07.07 0 0 1 .045-.016q.03 0 .047.018a1 1 0 0 1 .047.066l.107.174.115-.174.024-.038.019-.026.021-.015a.1.1 0 0 1 .027-.005.06.06 0 0 1 .044.016.05.05 0 0 1 .018.039q0 .033-.038.089l-.141.211.152.234a.3.3 0 0 1 .03.051.1.1 0 0 1 .009.038.1.1 0 0 1-.008.031.1.1 0 0 1-.024.023.1.1 0 0 1-.034.008.1.1 0 0 1-.035-.008.1.1 0 0 1-.023-.022L.427-.067.301-.265l-.134.204-.022.034-.016.019a.1.1 0 0 1-.022.015.1.1 0 0 1-.03.005.06.06 0 0 1-.044-.016.06.06 0 0 1-.017-.047q0-.036.036-.088' style='fill-rule:nonzero' transform='matrix(17.82892 0 0 16.50777 10.371 25.928)'/%3E%3C/svg%3E\")}.ag-icon-expanded:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M20 26 10 16 20 6l2 2-8 8 8 8z'/%3E%3C/svg%3E\")}.ag-icon-eye-slash:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye-slash%3C/title%3E%3Cpath fill='%23000' fill-rule='nonzero' d='M8.95 10.364 7 8.414 8.414 7l2.32 2.32A13.2 13.2 0 0 1 16.5 8c5.608 0 10.542 3.515 12.381 8.667L29 17l-.119.333a13 13 0 0 1-4.255 5.879l1.466 1.466-1.414 1.414-1.754-1.753A13.2 13.2 0 0 1 16.5 26c-5.608 0-10.542-3.515-12.381-8.667L4 17l.119-.333a13 13 0 0 1 4.83-6.303m1.445 1.445A11.02 11.02 0 0 0 6.148 17c1.646 4.177 5.728 7 10.352 7 1.76 0 3.441-.409 4.94-1.146l-1.878-1.878A5.06 5.06 0 0 1 16.5 22c-2.789 0-5.05-2.239-5.05-5 0-1.158.398-2.223 1.065-3.07zm1.855-.974 1.794 1.795A5.07 5.07 0 0 1 16.5 12c2.789 0 5.05 2.239 5.05 5 0 .9-.24 1.745-.661 2.474l2.305 2.306A11 11 0 0 0 26.852 17c-1.646-4.177-5.728-7-10.352-7-1.495 0-2.933.295-4.25.835'/%3E%3C/svg%3E\")}.ag-icon-eye:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M16.5 23c4.624 0 8.706-2.823 10.352-7-1.646-4.177-5.728-7-10.352-7s-8.706 2.823-10.352 7c1.646 4.177 5.728 7 10.352 7M4.119 15.667C5.958 10.515 10.892 7 16.5 7s10.542 3.515 12.381 8.667L29 16l-.119.333C27.042 21.485 22.108 25 16.5 25S5.958 21.485 4.119 16.333L4 16zM16.5 21c2.789 0 5.049-2.239 5.049-5s-2.26-5-5.049-5-5.049 2.239-5.049 5 2.26 5 5.049 5' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-filter:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m28 8-8 8v5l-6 6V16L6 8V6h22zM9 8l7 7v7l2-2v-5l7-7z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-first:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M24.273 22.12 18.153 16l6.12-6.12L22.393 8l-8 8 8 8zM7.727 8h2.667v16H7.727z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-group:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M14 7v1H9V7zm0-3v1H5.001V4zm-7 7H5v-1h2zm0-3H5V7h2zM3 5H1V4h2zm11 5v1H9v-1zm-7 4H5v-1h2zm7-1v1H9v-1z' style='fill-rule:nonzero' transform='matrix(2 0 0 2 0 -2)'/%3E%3C/svg%3E\")}.ag-icon-last:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m7.727 9.88 6.12 6.12-6.12 6.12L9.607 24l8-8-8-8zM21.607 8h2.667v16h-2.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M26.667 14.667H10.44l7.453-7.453L16 5.334 5.333 16.001 16 26.668l1.88-1.88-7.44-7.453h16.227z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-linked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M5.2 16a4.136 4.136 0 0 1 4.133-4.133h5.333V9.334H9.333a6.67 6.67 0 0 0-6.667 6.667 6.67 6.67 0 0 0 6.667 6.667h5.333v-2.533H9.333A4.136 4.136 0 0 1 5.2 16.002zm5.467 1.333h10.667v-2.667H10.667zm12-8h-5.333v2.533h5.333a4.136 4.136 0 0 1 4.133 4.133 4.136 4.136 0 0 1-4.133 4.133h-5.333v2.533h5.333a6.67 6.67 0 0 0 6.667-6.667 6.67 6.67 0 0 0-6.667-6.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-loading:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M17 29h-2v-8h2zm-3.586-9L7 26.414 5.586 25 12 18.586zm13 5L25 26.414 18.586 20 20 18.586zM29 17h-8v-2h8zm-18 0H3v-2h8zm2.414-5L12 13.414 5.586 7 7 5.586zm13-5L20 13.414 18.586 12 25 5.586zM17 11h-2V3h2z' style='fill-rule:nonzero' transform='translate(-3.692 -3.692)scale(1.23077)'/%3E%3C/svg%3E\")}.ag-icon-maximize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M14 30H2V18h2.828v7.05l8.254-8.252 2.12 2.12-8.252 8.254H14zm4-28h12v12h-2.828V6.95l-8.254 8.252-2.12-2.12 8.252-8.254H18z'/%3E%3C/svg%3E\")}.ag-icon-menu:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M20 13H0v-2h20zm0-6H0V5h20zm0-6H0v-2h20z' style='fill-rule:nonzero' transform='translate(6 9)'/%3E%3C/svg%3E\")}.ag-icon-menu-alt:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M16 19a3 3 0 1 0 0-6 3 3 0 0 0 0 6M16 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6M16 27a3 3 0 1 0 0-6 3 3 0 0 0 0 6'/%3E%3C/svg%3E\")}.ag-icon-minimize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M2 18h12v12h-2.828v-7.05l-8.254 8.252-2.12-2.12 8.252-8.254H2zm28-4H18V2h2.828v7.05L29.082.798l2.12 2.12-8.252 8.254H30z'/%3E%3C/svg%3E\")}.ag-icon-minus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658H7.901v-2.658z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-next:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M10.94 6 9.06 7.88 17.167 16 9.06 24.12 10.94 26l10-10z' style='fill-rule:nonzero' transform='translate(1)'/%3E%3C/svg%3E\")}.ag-icon-none:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enone%3C/title%3E%3Cg fill='%23000' fill-rule='nonzero'%3E%3Cpath d='M23.708 14.645 16 6.939l-7.708 7.706 1.416 1.416L16 9.767l6.292 6.294zM23.708 20.355 16 28.061l-7.708-7.706 1.416-1.416L16 25.233l6.292-6.294z'/%3E%3C/g%3E%3C/svg%3E\")}.ag-icon-not-allowed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M16 2.667C8.64 2.667 2.667 8.64 2.667 16S8.64 29.333 16 29.333 29.333 23.36 29.333 16 23.36 2.667 16 2.667M5.333 16c0-5.893 4.773-10.667 10.667-10.667 2.467 0 4.733.84 6.533 2.253L7.586 22.533A10.54 10.54 0 0 1 5.333 16M16 26.667c-2.467 0-4.733-.84-6.533-2.253L24.414 9.467A10.54 10.54 0 0 1 26.667 16c0 5.893-4.773 10.667-10.667 10.667' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-paste:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M25.334 4H19.76C19.2 2.453 17.733 1.333 16 1.333S12.8 2.453 12.24 4H6.667A2.675 2.675 0 0 0 4 6.667V28c0 1.467 1.2 2.667 2.667 2.667h18.667c1.467 0 2.667-1.2 2.667-2.667V6.667C28.001 5.2 26.801 4 25.334 4M16 4c.733 0 1.333.6 1.333 1.333s-.6 1.333-1.333 1.333-1.333-.6-1.333-1.333S15.267 4 16 4m9.333 24H6.666V6.667h2.667v4h13.333v-4h2.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m10.78 19.777-4.668-4.666s.032-1 .67-1.87c1.366-1.86 4.052-1.96 6.056-1.572l3.158-3.108c-.7-2.342 3.352-5.046 3.352-5.046l9.166 9.168q-.334.447-.67.894c-1.074 1.426-2.538 2.63-4.272 2.338l-3.32 3.218c.046.344.042.03.118 1.152.144 2.13-.64 4.324-2.632 5.34l-.746.364-4.798-4.798-7.292 7.294-1.416-1.416zm8.24-13.672c-.688.568-1.416 1.45-1.024 2.072l.49.722-4.986 4.988c-1.988-.506-4.346-.636-5.156.614l9.02 9.032q.14-.099.272-.21c1.226-1.08.764-3.04.498-4.9l4.79-4.79s1.47.938 2.936-.776l-6.79-6.79q-.026.019-.05.038' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-pivot:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0m2.966 7.954H9.892v18.136c5.086.13 10.18.098 15.264-.096 1.48-.094 2.746-1.35 2.84-2.84.192-5.064.226-10.134.098-15.2M3.968 24.1q.015.528.036 1.056c.094 1.484 1.354 2.746 2.84 2.84l1.012.036V24.1zM22 15.414l-.292.294-1.416-1.416L23 11.586l2.708 2.706-1.416 1.416-.292-.294v3.592c-.032 2.604-2.246 4.892-4.872 4.992L15.414 24l.294.292-1.416 1.416L11.586 23l2.706-2.708 1.416 1.416-.322.32c3.372.03 6.578-.164 6.614-3.034zM3.88 18.038c.002 1.346.012 2.694.038 4.04h3.938v-4.04zm.05-6.062a681 681 0 0 0-.044 4.042h3.97v-4.042zm5.962-7.99Q8.449 3.999 7.006 4c-1.57.02-2.946 1.348-3.004 2.922q-.02 1.517-.042 3.034h3.896v-2.02h2.036zm14.244-.016v3.966h3.898q-.017-.546-.038-1.092c-.094-1.48-1.35-2.746-2.84-2.84q-.51-.019-1.02-.034m-8.14-.054q-2.035.022-4.07.048v3.972h4.07zm6.106.008a213 213 0 0 0-4.07-.022v4.034h4.07z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-plus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658h-6.77v6.77h-2.658v-6.77h-6.77v-2.658h6.77v-6.77h2.658v6.77z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-previous:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M21.94 7.88 20.06 6l-10 10 10 10 1.88-1.88L13.833 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m16 5.333-1.88 1.88 7.44 7.453H5.333v2.667H21.56l-7.44 7.453 1.88 1.88 10.667-10.667L16 5.332z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-save:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M15.708 2.355 8 10.061.292 2.355 1.708.939 8 7.233 14.292.939z' style='fill-rule:nonzero' transform='translate(8 14)'/%3E%3Cpath d='M5 26h22v2H5zM15 4h2v18h-2z'/%3E%3C/svg%3E\")}.ag-icon-small-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.334 10.667 16 21.334l8.667-10.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-small-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M21.333 7.334 10.666 16l10.667 8.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-small-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M10.667 24.666 21.334 16 10.667 7.333z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-small-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.334 21.333 16 10.666l8.667 10.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-tick:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M11.586 22.96 27.718 6.828 29.84 8.95 11.586 27.202 2.4 18.016l2.12-2.122z'/%3E%3C/svg%3E\")}.ag-icon-tree-closed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m11.94 6-1.88 1.88L18.167 16l-8.107 8.12L11.94 26l10-10z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-tree-indeterminate:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6 13.5h20v3H6z'/%3E%3C/svg%3E\")}.ag-icon-tree-open:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M24.12 9.06 16 17.167 7.88 9.06 6 10.94l10 10 10-10z' style='fill-rule:nonzero' transform='translate(0 1)'/%3E%3C/svg%3E\")}.ag-icon-unlinked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M22.667 9.333h-5.333v2.533h5.333a4.136 4.136 0 0 1 4.133 4.133c0 1.907-1.307 3.507-3.08 3.973l1.947 1.947c2.173-1.107 3.667-3.32 3.667-5.92a6.67 6.67 0 0 0-6.667-6.667zm-1.334 5.334h-2.92l2.667 2.667h.253zM2.667 5.693 6.814 9.84A6.65 6.65 0 0 0 2.667 16a6.67 6.67 0 0 0 6.667 6.667h5.333v-2.533H9.334a4.136 4.136 0 0 1-4.133-4.133c0-2.12 1.613-3.867 3.68-4.093l2.76 2.76h-.973v2.667h3.64l3.027 3.027v2.307h2.307l5.347 5.333 1.68-1.68L4.362 4.002 2.669 5.695z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333 5.332 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-grip:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M8 24H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 18H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 12H6V8h2zm6 0h-2V8h2zm6 0h-2V8h2zm6 0h-2V8h2z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-settings:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M30 8h-4.1c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2h14.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30zm-9 4c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3M2 24h4.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30v-2H15.9c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2zm9-4c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3 1.3-3 3-3'/%3E%3C/svg%3E\")}.ag-icon-column-arrow:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M11 4a1 1 0 0 1 1 1v22a1 1 0 1 1-2 0V5a1 1 0 0 1 1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 13a1 1 0 0 1 1-1h23.5a1 1 0 1 1 0 2H3a1 1 0 0 1-1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 4h18v24H2zm2 2v20h14V6zM26.793 13 23 9.207l1.414-1.414L29.621 13l-5.207 5.207L23 16.793z' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-un-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='m6.112 15.111 3.272 3.271 1.436-1.402-2.476-2.479c.81-1.25 3.168-1.12 5.156-.614l4.986-4.988-.49-.722c-.392-.622.336-1.504 1.024-2.072l.008-.007.01-.006.032-.025 1.447 1.447 1.432-1.397-2.601-2.602s-4.052 2.704-3.352 5.046l-3.158 3.108c-2.004-.388-4.69-.288-6.056 1.572-.638.87-.67 1.87-.67 1.87m.581 11.582.014.014 5.502-5.501 4.783 4.783.746-.364c1.992-1.016 2.776-3.21 2.632-5.34-.055-.805-.068-.87-.088-.97-.008-.04-.017-.085-.03-.182l3.32-3.218c1.734.292 3.198-.912 4.272-2.338q.337-.447.67-.894l-.001-.001-.007-.007-.007-.007-.007-.007-3.87-3.87 1.585-1.584-1.414-1.414-14.381 14.38-1.237 1.209-5.69 5.687 1.417 1.416zM23.21 10.206l2.65 2.651c-1.465 1.714-2.935.776-2.935.776l-4.79 4.79q.041.291.087.583c.257 1.676.513 3.35-.585 4.317a4 4 0 0 1-.272.21l-3.739-3.744z' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-pinned-top:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='m16.708 10.878 8.708 8.706L24 21l-6.292-6.294V27h-2V14.706L9.416 21 8 19.584q4.348-4.344 8.691-8.69zM25 6H8v2h17z'/%3E%3C/svg%3E\")}.ag-icon-pinned-bottom:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M16.708 22.122 8 13.416 9.416 12l6.292 6.294V6h2v12.294L24 12l1.416 1.416-8.691 8.69zM7.416 28h17v-2h-17z'/%3E%3C/svg%3E\")}.ag-icon-chevron-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M3.479 10.521a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1-1.06 1.06l-3.47-3.47-3.47 3.47a.75.75 0 0 1-1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M12.521 5.461a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 1.06-1.06l3.47 3.47 3.47-3.47a.75.75 0 0 1 1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M10.53 12.512a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 1.06l-3.47 3.47 3.47 3.47a.75.75 0 0 1 0 1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M5.47 3.47a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06-1.06L8.94 8 5.47 4.53a.75.75 0 0 1 0-1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-filter-add:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M19.834 8H8c0 .304.06.612.258.842 2.716 2.854 6.682 5.548 6.742 7.974V21l2-1.5v-2.684c.056-2.267 2.968-4.417 5.49-6.75v3.087c-1.081.974-2.245 1.968-3.232 3.005a1.05 1.05 0 0 0-.258.682v3.66L13 25c0-2.74.066-5.482-.002-8.222a1.05 1.05 0 0 0-.256-.62C10.026 13.304 6.06 10.61 6 8.184V6h13.834z'/%3E%3Cpath fill='currentColor' d='M26 6h2.946v2.002H26v3.313h-2.002V8.002h-2.946V6h2.946V3.04H26z'/%3E%3C/svg%3E\")}.ag-icon-edit:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M6.222 25.778h1.611l14.834-14.811-1.611-1.611-14.834 14.81zM4 28v-4.733L22.644 4.656a2.26 2.26 0 0 1 1.567-.634q.423 0 .833.167.412.166.734.478l1.589 1.6q.333.322.483.733t.15.822q0 .423-.161.839-.162.416-.472.728L8.733 28zm17.856-17.833-.8-.811 1.61 1.61z'/%3E%3C/svg%3E\")}`;\n\n// packages/ag-grid-community/src/theming/parts/icon-set/alpine/icon-set-alpine.ts\nvar iconSetAlpine = /* @__PURE__ */createPart({\n  feature: \"iconSet\",\n  css: iconSetAlpineCSS\n});\n\n// packages/ag-grid-community/src/theming/parts/icon-set/material/icon-set-material.css-GENERATED.ts\nvar iconSetMaterialCSS = /*css*/\n`.ag-icon-aggregation:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eaggregation%3C/title%3E%3Cpath d='M24 5.333H8V8l8.667 8L8 24v2.667h16v-4h-9.333L21.334 16l-6.667-6.667H24z'/%3E%3C/svg%3E\")}.ag-icon-arrows:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Earrows%3C/title%3E%3Cpath d='M13.333 11.556h5.333V8h3.556L16 1.778 9.778 8h3.556zm-1.777 1.777H8V9.777l-6.222 6.222L8 22.221v-3.556h3.556zM30.222 16 24 9.778v3.556h-3.556v5.333H24v3.556l6.222-6.222zm-11.555 4.444h-5.333V24H9.778L16 30.222 22.222 24h-3.556z'/%3E%3C/svg%3E\")}.ag-icon-asc:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333z'/%3E%3C/svg%3E\")}.ag-icon-cancel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecancel%3C/title%3E%3Cpath d='M16 2.667C8.627 2.667 2.667 8.627 2.667 16S8.627 29.333 16 29.333 29.333 23.373 29.333 16 23.373 2.667 16 2.667m6.667 18.12-1.88 1.88L16 17.88l-4.787 4.787-1.88-1.88L14.12 16l-4.787-4.787 1.88-1.88L16 14.12l4.787-4.787 1.88 1.88L17.88 16z'/%3E%3C/svg%3E\")}.ag-icon-chart:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Echart%3C/title%3E%3Cpath d='M6.667 12.267h4v13.067h-4zm7.466-5.6h3.733v18.667h-3.733zM21.6 17.333h3.733v8H21.6z'/%3E%3C/svg%3E\")}.ag-icon-color-picker:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolor-picker%3C/title%3E%3Cpath d='M23.907 17.587 10.574 4.254l-1.88 1.88 3.173 3.173-8.28 8.28 10.16 10.16zm-16.547 0 6.387-6.387 6.387 6.387H7.361zm18.387 2s-2.667 2.893-2.667 4.667c0 1.467 1.2 2.667 2.667 2.667s2.667-1.2 2.667-2.667c0-1.773-2.667-4.667-2.667-4.667'/%3E%3C/svg%3E\")}.ag-icon-columns:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolumns%3C/title%3E%3Cpath d='M5.333 10.667h5.333V5.334H5.333zm8 16h5.333v-5.333h-5.333zm-8 0h5.333v-5.333H5.333zm0-8h5.333v-5.333H5.333zm8 0h5.333v-5.333h-5.333zm8-13.334v5.333h5.333V5.333zm-8 5.334h5.333V5.334h-5.333zm8 8h5.333v-5.333h-5.333zm0 8h5.333v-5.333h-5.333z'/%3E%3C/svg%3E\")}.ag-icon-contracted:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Econtracted%3C/title%3E%3Cpath d='m12.94 8-1.88 1.88L17.167 16l-6.107 6.12L12.94 24l8-8z'/%3E%3C/svg%3E\")}.ag-icon-copy:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecopy%3C/title%3E%3Cpath d='M22 1.333H6A2.675 2.675 0 0 0 3.333 4v18.667H6V4h16zm4 5.334H11.333a2.675 2.675 0 0 0-2.667 2.667v18.667c0 1.467 1.2 2.667 2.667 2.667H26c1.467 0 2.667-1.2 2.667-2.667V9.334c0-1.467-1.2-2.667-2.667-2.667M26 28H11.333V9.333H26z'/%3E%3C/svg%3E\")}.ag-icon-cross:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecross%3C/title%3E%3Cpath d='m25.333 8.547-1.88-1.88L16 14.12 8.547 6.667l-1.88 1.88L14.12 16l-7.453 7.453 1.88 1.88L16 17.88l7.453 7.453 1.88-1.88L17.88 16z'/%3E%3C/svg%3E\")}.ag-icon-csv:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='M.688-.226a.2.2 0 0 1-.017.074.28.28 0 0 1-.145.14.412.412 0 0 1-.234.013.28.28 0 0 1-.202-.168.468.468 0 0 1-.04-.19q0-.086.025-.155a.319.319 0 0 1 .182-.191.4.4 0 0 1 .134-.025q.087 0 .155.035a.3.3 0 0 1 .104.085.17.17 0 0 1 .036.097.06.06 0 0 1-.018.044.06.06 0 0 1-.042.019.06.06 0 0 1-.042-.013.2.2 0 0 1-.031-.046.2.2 0 0 0-.066-.079.16.16 0 0 0-.095-.027.17.17 0 0 0-.142.068.3.3 0 0 0-.053.193.4.4 0 0 0 .023.139.2.2 0 0 0 .067.083.2.2 0 0 0 .1.027q.063 0 .106-.031a.2.2 0 0 0 .065-.091.2.2 0 0 1 .023-.046q.014-.018.044-.018a.06.06 0 0 1 .044.018.06.06 0 0 1 .019.045' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 7.122 25.977)'/%3E%3Cpath d='M.622-.215a.2.2 0 0 1-.033.117.23.23 0 0 1-.098.081.4.4 0 0 1-.153.029.34.34 0 0 1-.175-.04.23.23 0 0 1-.079-.077.17.17 0 0 1-.031-.093q0-.027.019-.045a.06.06 0 0 1 .046-.019.06.06 0 0 1 .039.014.1.1 0 0 1 .027.044.3.3 0 0 0 .03.057q.015.023.044.038.03.015.076.015.065 0 .105-.03a.09.09 0 0 0 .04-.075.08.08 0 0 0-.022-.058.14.14 0 0 0-.056-.034 1 1 0 0 0-.092-.025.7.7 0 0 1-.129-.042.2.2 0 0 1-.083-.066.17.17 0 0 1-.03-.104q0-.058.032-.105a.2.2 0 0 1 .093-.07.4.4 0 0 1 .144-.025q.066 0 .114.016a.3.3 0 0 1 .08.044.2.2 0 0 1 .046.057q.015.03.015.058a.07.07 0 0 1-.018.046.06.06 0 0 1-.046.021q-.025 0-.038-.012a.2.2 0 0 1-.028-.041.2.2 0 0 0-.047-.063Q.387-.625.326-.625a.15.15 0 0 0-.09.025q-.035.024-.035.059 0 .021.012.037a.1.1 0 0 0 .032.027.4.4 0 0 0 .111.036q.06.015.11.031.048.018.083.042a.2.2 0 0 1 .054.062.2.2 0 0 1 .019.091' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 13.339 25.977)'/%3E%3Cpath d='m.184-.633.162.48.163-.483q.013-.038.019-.053a.062.062 0 0 1 .061-.039q.018 0 .034.009a.1.1 0 0 1 .025.025q.009.015.009.031L.654-.64l-.007.025-.009.024-.173.468-.019.051a.2.2 0 0 1-.021.042.1.1 0 0 1-.033.03.1.1 0 0 1-.049.012.1.1 0 0 1-.05-.011A.1.1 0 0 1 .26-.03a.2.2 0 0 1-.021-.042L.22-.123.05-.587.041-.612.033-.638.03-.662q0-.025.02-.046a.07.07 0 0 1 .05-.02q.037 0 .053.023.015.023.031.072' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 18.94 25.977)'/%3E%3C/svg%3E\")}.ag-icon-cut:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m19 3-6 6 2 2 7-7V3m-10 9.5a.503.503 0 0 1-.5-.5c0-.274.226-.5.5-.5s.5.226.5.5-.226.5-.5.5M6 20c-1.097 0-2-.903-2-2a2 2 0 0 1 2-2c1.097 0 2 .903 2 2a2 2 0 0 1-2 2M6 8c-1.097 0-2-.903-2-2a2 2 0 0 1 2-2c1.097 0 2 .903 2 2a2 2 0 0 1-2 2m3.64-.36c.23-.5.36-1.05.36-1.64 0-2.194-1.806-4-4-4S2 3.806 2 6s1.806 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.194 0-4 1.806-4 4s1.806 4 4 4 4-1.806 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1z' style='fill-rule:nonzero' transform='translate(4 4)'/%3E%3C/svg%3E\")}.ag-icon-desc:before,.ag-icon-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Edesc%3C/title%3E%3Cpath d='m26.667 16-1.88-1.88-7.453 7.44V5.333h-2.667V21.56l-7.44-7.453L5.334 16l10.667 10.667L26.668 16z'/%3E%3C/svg%3E\")}.ag-icon-excel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='m.052-.139.16-.234-.135-.208a.4.4 0 0 1-.028-.052.1.1 0 0 1-.01-.042.05.05 0 0 1 .018-.037.07.07 0 0 1 .045-.016q.03 0 .047.018a1 1 0 0 1 .047.066l.107.174.115-.174.024-.038.019-.026.021-.015a.1.1 0 0 1 .027-.005.06.06 0 0 1 .044.016.05.05 0 0 1 .018.039q0 .033-.038.089l-.141.211.152.234a.3.3 0 0 1 .03.051.1.1 0 0 1 .009.038.1.1 0 0 1-.008.031.1.1 0 0 1-.024.023.1.1 0 0 1-.034.008.1.1 0 0 1-.035-.008.1.1 0 0 1-.023-.022L.427-.067.301-.265l-.134.204-.022.034-.016.019a.1.1 0 0 1-.022.015.1.1 0 0 1-.03.005.06.06 0 0 1-.044-.016.06.06 0 0 1-.017-.047q0-.036.036-.088' style='fill-rule:nonzero' transform='matrix(17.82892 0 0 16.50777 10.371 25.928)'/%3E%3C/svg%3E\")}.ag-icon-expanded:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eexpanded%3C/title%3E%3Cpath d='M20.94 9.88 19.06 8l-8 8 8 8 1.88-1.88L14.833 16z'/%3E%3C/svg%3E\")}.ag-icon-eye-slash:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye-slash%3C/title%3E%3Cpath d='M21.106 15.088A5.19 5.19 0 0 0 16 10.814a5.17 5.17 0 0 0-3.668 1.522L9.866 9.868a12.2 12.2 0 0 1 6.133-1.646c5.186 0 9.614 3.225 11.408 7.778a12.34 12.34 0 0 1-5.276 6.133l-2.468-2.466a5.17 5.17 0 0 0 1.449-2.802h-2.123c-.148.508-.42.964-.782 1.33l-1.33-1.33h-2.514l2.196 2.196q-.272.049-.56.05a3.11 3.11 0 0 1-2.99-2.245h-2.123a5.19 5.19 0 0 0 7.3 3.836l2.247 2.247a12.2 12.2 0 0 1-4.434.828c-5.186 0-9.614-3.225-11.408-7.778a12.3 12.3 0 0 1 3.781-5.111l2.924 2.924a5.1 5.1 0 0 0-.404 1.275h4.206l-1.296-1.296a3.1 3.1 0 0 1 2.196-.903c1.404 0 2.587.924 2.976 2.199h2.13z'/%3E%3C/svg%3E\")}.ag-icon-eye:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye%3C/title%3E%3Cpath d='M16 8.222c-5.186 0-9.614 3.225-11.408 7.778 1.794 4.553 6.222 7.778 11.408 7.778S25.614 20.553 27.408 16C25.614 11.447 21.186 8.222 16 8.222m0 12.964c-2.862 0-5.186-2.324-5.186-5.186s2.324-5.186 5.186-5.186 5.186 2.324 5.186 5.186-2.324 5.186-5.186 5.186m0-8.297c-1.721 0-3.111 1.39-3.111 3.111s1.39 3.111 3.111 3.111 3.111-1.39 3.111-3.111-1.39-3.111-3.111-3.111'/%3E%3C/svg%3E\")}.ag-icon-filter:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efilter%3C/title%3E%3Cpath d='M13.333 24h5.333v-2.667h-5.333zM4 8v2.667h24V8zm4 9.333h16v-2.667H8z'/%3E%3C/svg%3E\")}.ag-icon-first:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efirst%3C/title%3E%3Cpath d='M24.273 22.12 18.153 16l6.12-6.12L22.393 8l-8 8 8 8zM7.727 8h2.667v16H7.727z'/%3E%3C/svg%3E\")}.ag-icon-group:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egroup%3C/title%3E%3Cpath d='M18.667 21.333h8.889A3.555 3.555 0 0 1 24 24.889h-5.333zm8.888-7.111v3.556h-8.889v-3.556zM24 7.111a3.555 3.555 0 0 1 3.556 3.556h-16V7.111zm-8.889 17.778h-3.556v-3.556h3.556zm0-7.111h-3.556v-3.556h3.556zM8 10.667H4.444A3.555 3.555 0 0 1 8 7.111z'/%3E%3C/svg%3E\")}.ag-icon-last:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elast%3C/title%3E%3Cpath d='m7.727 9.88 6.12 6.12-6.12 6.12L9.607 24l8-8-8-8zM21.607 8h2.667v16h-2.667z'/%3E%3C/svg%3E\")}.ag-icon-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eleft%3C/title%3E%3Cpath d='M26.667 14.667H10.44l7.453-7.453L16 5.334 5.333 16.001 16 26.668l1.88-1.88-7.44-7.453h16.227v-2.667z'/%3E%3C/svg%3E\")}.ag-icon-linked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elinked%3C/title%3E%3Cpath d='M5.2 16a4.136 4.136 0 0 1 4.133-4.133h5.333V9.334H9.333c-3.68 0-6.667 2.987-6.667 6.667s2.987 6.667 6.667 6.667h5.333v-2.533H9.333A4.136 4.136 0 0 1 5.2 16.002zm5.467 1.333h10.667v-2.667H10.667zm12-8h-5.333v2.533h5.333c2.28 0 4.133 1.853 4.133 4.133s-1.853 4.133-4.133 4.133h-5.333v2.533h5.333c3.68 0 6.667-2.987 6.667-6.667s-2.987-6.667-6.667-6.667z'/%3E%3C/svg%3E\")}.ag-icon-loading:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eloading%3C/title%3E%3Cpath d='m17.778 11.708 3.25-3.251 2.516 2.516-3.251 3.25h4.597v3.556h-4.597l3.251 3.25-2.516 2.516-3.25-3.251v4.597h-3.556v-4.597l-3.25 3.251-2.516-2.516 3.251-3.25H7.11v-3.556h4.597l-3.251-3.25 2.516-2.516 3.25 3.251V7.111h3.556zm-3.251 7.847h2.944l2.084-2.084v-2.944l-2.084-2.084h-2.944l-2.084 2.084v2.944z'/%3E%3C/svg%3E\")}.ag-icon-maximize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Emaximize%3C/title%3E%3Cpath d='M4 4h24v2.667H4z'/%3E%3C/svg%3E\")}.ag-icon-menu:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Emenu%3C/title%3E%3Cpath d='M4 24h24v-2.667H4zm0-6.667h24v-2.667H4zM4 8v2.667h24V8z'/%3E%3C/svg%3E\")}.ag-icon-menu-alt:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M16 26.667a2.57 2.57 0 0 1-1.883-.784A2.57 2.57 0 0 1 13.333 24q0-1.1.784-1.883A2.57 2.57 0 0 1 16 21.333q1.1 0 1.883.784.784.783.784 1.883t-.784 1.883a2.57 2.57 0 0 1-1.883.784m0-8a2.57 2.57 0 0 1-1.883-.784A2.57 2.57 0 0 1 13.333 16q0-1.1.784-1.883A2.57 2.57 0 0 1 16 13.333q1.1 0 1.883.784.784.783.784 1.883t-.784 1.883a2.57 2.57 0 0 1-1.883.784m0-8a2.57 2.57 0 0 1-1.883-.784A2.57 2.57 0 0 1 13.333 8q0-1.1.784-1.883A2.57 2.57 0 0 1 16 5.333q1.1 0 1.883.784.784.783.784 1.883t-.784 1.883a2.57 2.57 0 0 1-1.883.784'/%3E%3C/svg%3E\")}.ag-icon-minimize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eminimize%3C/title%3E%3Cpath d='M8 25.333h16V28H8z'/%3E%3C/svg%3E\")}.ag-icon-minus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658H7.901v-2.658z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-next:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enext%3C/title%3E%3Cpath d='m12.94 8-1.88 1.88L17.167 16l-6.107 6.12L12.94 24l8-8z'/%3E%3C/svg%3E\")}.ag-icon-none:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enone%3C/title%3E%3Cpath d='M4 24h16v-2.667H4zM4 8v2.667h24V8zm0 9.333h24v-2.667H4z'/%3E%3C/svg%3E\")}.ag-icon-not-allowed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enot-allowed%3C/title%3E%3Cpath d='M16 2.667C8.64 2.667 2.667 8.64 2.667 16S8.64 29.333 16 29.333 29.333 23.36 29.333 16 23.36 2.667 16 2.667M5.333 16c0-5.893 4.773-10.667 10.667-10.667 2.467 0 4.733.84 6.533 2.253L7.586 22.533A10.54 10.54 0 0 1 5.333 16M16 26.667c-2.467 0-4.733-.84-6.533-2.253L24.414 9.467A10.54 10.54 0 0 1 26.667 16c0 5.893-4.773 10.667-10.667 10.667'/%3E%3C/svg%3E\")}.ag-icon-paste:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epaste%3C/title%3E%3Cpath d='M25.333 4H19.76C19.2 2.453 17.733 1.333 16 1.333S12.8 2.453 12.24 4H6.667A2.675 2.675 0 0 0 4 6.667V28c0 1.467 1.2 2.667 2.667 2.667h18.667c1.467 0 2.667-1.2 2.667-2.667V6.667C28.001 5.2 26.801 4 25.334 4zM16 4c.733 0 1.333.6 1.333 1.333s-.6 1.333-1.333 1.333-1.333-.6-1.333-1.333S15.267 4 16 4m9.333 24H6.666V6.667h2.667v4h13.333v-4h2.667z'/%3E%3C/svg%3E\")}.ag-icon-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epin%3C/title%3E%3Cpath d='m11.106 22.093-4.444 4.444-1.259-1.259 4.444-4.444zm5.872-16.63 9.618 9.62-.962.962-.962-.962-7.694 3.847 1.924 1.924-2.74 2.74-7.696-7.696 2.741-2.74 1.924 1.925 3.847-7.696-.962-.962z'/%3E%3C/svg%3E\")}.ag-icon-pivot:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epivot%3C/title%3E%3Cpath d='M26.667 30.223H5.334a3.556 3.556 0 0 1-3.556-3.556V5.334a3.556 3.556 0 0 1 3.556-3.556h21.333a3.556 3.556 0 0 1 3.556 3.556v21.333a3.556 3.556 0 0 1-3.556 3.556m-16-8.89H5.334v5.333h5.333zm16-7.11H12.444v12.444h14.223zm-9.15 6.85-2.039 2.037 2.039 2.039-1.257 1.257-3.295-3.296 3.295-3.295q.63.628 1.257 1.257zm-6.85-6.85H5.334v5.333h5.333zm15.74 3.816-1.257 1.256-2.039-2.037-2.037 2.037-1.257-1.256 3.295-3.296zM10.667 5.333H5.334v5.333h5.333zm8.889 0h-7.112v5.333h7.112zm7.111 0h-5.333v5.333h5.333z'/%3E%3C/svg%3E\")}.ag-icon-plus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658h-6.77v6.77h-2.658v-6.77h-6.77v-2.658h6.77v-6.77h2.658v6.77z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-previous:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eprevious%3C/title%3E%3Cpath d='M20.94 9.88 19.06 8l-8 8 8 8 1.88-1.88L14.833 16z'/%3E%3C/svg%3E\")}.ag-icon-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eright%3C/title%3E%3Cpath d='m16 5.333-1.88 1.88 7.44 7.453H5.333v2.667H21.56l-7.44 7.453 1.88 1.88 10.667-10.667L16 5.332z'/%3E%3C/svg%3E\")}.ag-icon-save:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esave%3C/title%3E%3Cpath d='M25.333 16v9.333H6.666V16H3.999v9.333C3.999 26.8 5.199 28 6.666 28h18.667C26.8 28 28 26.8 28 25.333V16zm-8 .893 3.453-3.44 1.88 1.88L15.999 22l-6.667-6.667 1.88-1.88 3.453 3.44V4h2.667v12.893z'/%3E%3C/svg%3E\")}.ag-icon-small-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-down%3C/title%3E%3Cpath d='M9.333 12.667 16 19.334l6.667-6.667H9.334z'/%3E%3C/svg%3E\")}.ag-icon-small-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-left%3C/title%3E%3Cpath d='M19.333 9.333 12.666 16l6.667 6.667V9.334z'/%3E%3C/svg%3E\")}.ag-icon-small-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-right%3C/title%3E%3Cpath d='M12.667 22.667 19.334 16l-6.667-6.667v13.333z'/%3E%3C/svg%3E\")}.ag-icon-small-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-up%3C/title%3E%3Cpath d='M9.333 19.333 16 12.666l6.667 6.667H9.334z'/%3E%3C/svg%3E\")}.ag-icon-tick:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etick%3C/title%3E%3Cpath d='m11.727 21.167-5.56-5.56-1.893 1.88 7.453 7.453 16-16-1.88-1.88z'/%3E%3C/svg%3E\")}.ag-icon-tree-closed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-closed%3C/title%3E%3Cpath d='m12.94 8-1.88 1.88L17.167 16l-6.107 6.12L12.94 24l8-8z'/%3E%3C/svg%3E\")}.ag-icon-tree-indeterminate:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-indeterminate%3C/title%3E%3Cpath d='M6.667 14.667h18.667v2.667H6.667z'/%3E%3C/svg%3E\")}.ag-icon-tree-open:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-open%3C/title%3E%3Cpath d='M22.12 11.06 16 17.167 9.88 11.06 8 12.94l8 8 8-8z'/%3E%3C/svg%3E\")}.ag-icon-unlinked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eunlinked%3C/title%3E%3Cpath d='M22.667 9.333h-5.333v2.533h5.333a4.136 4.136 0 0 1 4.133 4.133c0 1.907-1.307 3.507-3.08 3.973l1.947 1.947c2.173-1.107 3.667-3.32 3.667-5.92a6.67 6.67 0 0 0-6.667-6.667zm-1.334 5.334h-2.92l2.667 2.667h.253zM2.667 5.693 6.814 9.84A6.65 6.65 0 0 0 2.667 16a6.67 6.67 0 0 0 6.667 6.667h5.333v-2.533H9.334a4.136 4.136 0 0 1-4.133-4.133c0-2.12 1.613-3.867 3.68-4.093l2.76 2.76h-.973v2.667h3.64l3.027 3.027v2.307h2.307l5.347 5.333 1.68-1.68L4.362 4.002 2.669 5.695z'/%3E%3C/svg%3E\")}.ag-icon-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333z'/%3E%3C/svg%3E\")}.ag-icon-grip:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egrip%3C/title%3E%3Cpath d='M26.667 12H5.334v2.667h21.333zM5.333 20h21.333v-2.667H5.333z'/%3E%3C/svg%3E\")}.ag-icon-settings:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M30 8h-4.1c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2h14.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30zm-9 4c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3M2 24h4.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30v-2H15.9c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2zm9-4c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3 1.3-3 3-3'/%3E%3C/svg%3E\")}.ag-icon-column-arrow:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M11 4a1 1 0 0 1 1 1v22a1 1 0 1 1-2 0V5a1 1 0 0 1 1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 13a1 1 0 0 1 1-1h23.5a1 1 0 1 1 0 2H3a1 1 0 0 1-1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 4h18v24H2zm2 2v20h14V6zM26.793 13 23 9.207l1.414-1.414L29.621 13l-5.207 5.207L23 16.793z' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-un-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' d='M8 11a.75.75 0 0 0-.75.75v3.333a.75.75 0 1 0 1.5 0V11.75A.75.75 0 0 0 8 11'/%3E%3Cpath fill='currentColor' d='M13.11 1.436a.75.75 0 0 0-1.22-.872l-10 14a.75.75 0 1 0 1.22.872L5.207 12.5h7.376a.75.75 0 0 0 .75-.75v-1.174a2.08 2.08 0 0 0-1.153-1.863l-1.185-.599-.005-.002a.58.58 0 0 1-.323-.522V5.165a2.083 2.083 0 0 0 1.854-2.904zm-3.943 5.52v.634a2.08 2.08 0 0 0 1.153 1.863l1.185.6.005.002a.58.58 0 0 1 .323.522V11H6.28zM9.277 1H5.25a2.084 2.084 0 0 0-.083 4.165v1.676l1.5-2.132v-.292a.75.75 0 0 0-.75-.75H5.25a.584.584 0 0 1 0-1.167h2.972z'/%3E%3C/svg%3E\")}.ag-icon-pinned-top:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' d='M12.53 3.72A.75.75 0 0 1 12 5H4a.75.75 0 0 1 0-1.5h8a.75.75 0 0 1 .53.22M3.269 10.744a.75.75 0 0 1 .2-.524l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 1 1-1.06 1.06L8.75 8.56V14a.75.75 0 0 1-1.5 0V8.56l-2.72 2.72a.75.75 0 0 1-1.26-.536'/%3E%3C/svg%3E\")}.ag-icon-pinned-bottom:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' d='M3.47 12.28A.75.75 0 0 1 4 11h8a.75.75 0 0 1 0 1.5H4a.75.75 0 0 1-.53-.22M12.731 5.256a.75.75 0 0 1-.2.524l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 1 1 1.06-1.06l2.72 2.72V2a.75.75 0 0 1 1.5 0v5.44l2.72-2.72a.75.75 0 0 1 1.26.536'/%3E%3C/svg%3E\")}.ag-icon-chevron-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M3.479 10.521a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1-1.06 1.06l-3.47-3.47-3.47 3.47a.75.75 0 0 1-1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M12.521 5.461a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 1.06-1.06l3.47 3.47 3.47-3.47a.75.75 0 0 1 1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M10.53 12.512a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 1.06l-3.47 3.47 3.47 3.47a.75.75 0 0 1 0 1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M5.47 3.47a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06-1.06L8.94 8 5.47 4.53a.75.75 0 0 1 0-1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-filter-add:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M18.666 24h-5.333v-2.667h5.333zM24 17.333H8v-2.667h16zm3.59-9.344h3.221v2.657h-3.22v3.22h-2.656v-3.22h-3.221V7.989h3.22V4.77h2.657zm-8.582 2.678H4V8h15.008z'/%3E%3C/svg%3E\")}.ag-icon-edit:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M6.222 25.778h1.611l14.834-14.811-1.611-1.611-14.834 14.81zM4 28v-4.733L22.644 4.656a2.26 2.26 0 0 1 1.567-.634q.423 0 .833.167.412.166.734.478l1.589 1.6q.333.322.483.733t.15.822q0 .423-.161.839-.162.416-.472.728L8.733 28zm17.856-17.833-.8-.811 1.61 1.61z'/%3E%3C/svg%3E\")}`;\n\n// packages/ag-grid-community/src/theming/parts/icon-set/material/icon-set-material.ts\nvar iconSetMaterial = /* @__PURE__ */createPart({\n  feature: \"iconSet\",\n  css: iconSetMaterialCSS\n});\n\n// packages/ag-grid-community/src/theming/parts/icon-set/overrides/icon-overrides.ts\nvar iconOverrides = args => {\n  const cssParts = [];\n  if (args.type === \"image\") {\n    const {\n      icons,\n      mask\n    } = args;\n    for (const key of Object.keys(icons)) {\n      const imageCssValue = imageValueToCss(icons[key]);\n      if (mask) {\n        cssParts.push(`.ag-icon-${key}::before { mask-image: ${imageCssValue}; }`);\n      } else {\n        cssParts.push(`.ag-icon-${key}::before { background-image: ${imageCssValue}; ${unsetMaskIcon} }`);\n      }\n    }\n  }\n  if (args.type === \"font\") {\n    const {\n      family,\n      weight,\n      color,\n      icons\n    } = args;\n    let properties = unsetMaskIcon;\n    if (family) {\n      properties += ` font-family: ${fontFamilyValueToCss(family)};`;\n    }\n    if (weight) {\n      properties += ` font-weight: ${fontWeightValueToCss(weight)};`;\n    }\n    if (color) {\n      properties += ` color: ${colorValueToCss(color)};`;\n    }\n    for (const key of Object.keys(icons)) {\n      cssParts.push(`.ag-icon-${key}::before { content: ${JSON.stringify(icons[key])}; ${properties} }`);\n    }\n  }\n  return createPart({\n    css: cssParts.join(\";\\n\"),\n    cssImports: args.cssImports\n  });\n};\nvar unsetMaskIcon = `background-color: unset; mask-image: unset; -webkit-mask-image: unset;`;\n\n// packages/ag-grid-community/src/theming/parts/icon-set/quartz/quartz-icon-data.ts\nvar iconNameToSvgFragment = {\n  aggregation: '<path d=\"M18 7V4H6l6 8-6 8h12v-3\"/>',\n  arrows: '<polyline points=\"5 9 2 12 5 15\"/><polyline points=\"9 5 12 2 15 5\"/><polyline points=\"15 19 12 22 9 19\"/><polyline points=\"19 9 22 12 19 15\"/><line x1=\"2\" x2=\"22\" y1=\"12\" y2=\"12\"/><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"22\"/>',\n  asc: '<path d=\"m5 12 7-7 7 7\"/><path d=\"M12 19V5\"/>',\n  cancel: '<path d=\"m18 6-12 12\"/><path d=\"m6 6 12 12\"/>',\n  chart: '<line x1=\"18\" x2=\"18\" y1=\"20\" y2=\"10\"/><line x1=\"12\" x2=\"12\" y1=\"20\" y2=\"4\"/><line x1=\"6\" x2=\"6\" y1=\"20\" y2=\"14\"/>',\n  \"color-picker\": '<path d=\"m19 11-8-8-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0L19 11Z\"/><path d=\"m5 2 5 5\"/><path d=\"M2 13h15\"/><path d=\"M22 20a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4 .3 1.6 2 2.4 2 4Z\"/>',\n  columns: '<path d=\"M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18\"/>',\n  contracted: '<path d=\"m9 18 6-6-6-6\"/>',\n  copy: '<rect width=\"14\" height=\"14\" x=\"8\" y=\"8\" rx=\"2\" ry=\"2\"/><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"/>',\n  cross: '<path d=\"M18 6 6 18\"/><path d=\"m6 6 12 12\"/>',\n  csv: '<path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"/><polyline points=\"14 2 14 8 20 8\"/><path d=\"M8 13h2\"/><path d=\"M8 17h2\"/><path d=\"M14 13h2\"/><path d=\"M14 17h2\"/>',\n  cut: '<circle cx=\"6\" cy=\"6\" r=\"3\"/><path d=\"M8.12 8.12 12 12\"/><path d=\"M20 4 8.12 15.88\"/><circle cx=\"6\" cy=\"18\" r=\"3\"/><path d=\"M14.8 14.8 20 20\"/>',\n  desc: '<path d=\"M12 5v14\"/><path d=\"m19 12-7 7-7-7\"/>',\n  down: '<path d=\"M12 5v14\"/><path d=\"m19 12-7 7-7-7\"/>',\n  excel: '<path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"/><polyline points=\"14 2 14 8 20 8\"/><path d=\"M8 13h2\"/><path d=\"M8 17h2\"/><path d=\"M14 13h2\"/><path d=\"M14 17h2\"/>',\n  expanded: '<path d=\"m15 18-6-6 6-6\"/>',\n  \"eye-slash\": '<path d=\"M9.88 9.88a3 3 0 1 0 4.24 4.24\"/><path d=\"M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68\"/><path d=\"M6.61 6.61A13.526 13.526 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61\"/><line x1=\"2\" x2=\"22\" y1=\"2\" y2=\"22\"/>',\n  eye: '<path d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/>',\n  filter: '<path d=\"M3 6h18\"/><path d=\"M7 12h10\"/><path d=\"M10 18h4\"/>',\n  first: '<path d=\"m17 18-6-6 6-6\"/><path d=\"M7 6v12\"/>',\n  group: '<path d=\"M16 12H3\"/><path d=\"M16 18H3\"/><path d=\"M10 6H3\"/><path d=\"M21 18V8a2 2 0 0 0-2-2h-5\"/><path d=\"m16 8-2-2 2-2\"/>',\n  last: '<path d=\"m7 18 6-6-6-6\"/><path d=\"M17 6v12\"/>',\n  left: '<path d=\"m12 19-7-7 7-7\"/><path d=\"M19 12H5\"/>',\n  linked: '<path d=\"M9 17H7A5 5 0 0 1 7 7h2\"/><path d=\"M15 7h2a5 5 0 1 1 0 10h-2\"/><line x1=\"8\" x2=\"16\" y1=\"12\" y2=\"12\"/>',\n  loading: '<line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"6\"/><line x1=\"12\" x2=\"12\" y1=\"18\" y2=\"22\"/><line x1=\"4.93\" x2=\"7.76\" y1=\"4.93\" y2=\"7.76\"/><line x1=\"16.24\" x2=\"19.07\" y1=\"16.24\" y2=\"19.07\"/><line x1=\"2\" x2=\"6\" y1=\"12\" y2=\"12\"/><line x1=\"18\" x2=\"22\" y1=\"12\" y2=\"12\"/><line x1=\"4.93\" x2=\"7.76\" y1=\"19.07\" y2=\"16.24\"/><line x1=\"16.24\" x2=\"19.07\" y1=\"7.76\" y2=\"4.93\"/>',\n  maximize: '<polyline points=\"15 3 21 3 21 9\"/><polyline points=\"9 21 3 21 3 15\"/><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"/><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"/>',\n  menu: '<line x1=\"4\" x2=\"20\" y1=\"12\" y2=\"12\"/><line x1=\"4\" x2=\"20\" y1=\"6\" y2=\"6\"/><line x1=\"4\" x2=\"20\" y1=\"18\" y2=\"18\"/>',\n  \"menu-alt\": '<circle cx=\"12\" cy=\"5\" r=\"0.75\" fill=\"#D9D9D9\"/><circle cx=\"12\" cy=\"12\" r=\"0.75\" fill=\"#D9D9D9\"/><circle cx=\"12\" cy=\"19\" r=\"0.75\" fill=\"#D9D9D9\"/>',\n  minimize: '<polyline points=\"4 14 10 14 10 20\"/><polyline points=\"20 10 14 10 14 4\"/><line x1=\"14\" x2=\"21\" y1=\"10\" y2=\"3\"/><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"/>',\n  minus: '<circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M8 12h8\"/>',\n  next: '<path d=\"m9 18 6-6-6-6\"/>',\n  none: '<path d=\"m7 15 5 5 5-5\"/><path d=\"m7 9 5-5 5 5\"/>',\n  \"not-allowed\": '<circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"m4.9 4.9 14.2 14.2\"/>',\n  paste: '<path d=\"M15 2H9a1 1 0 0 0-1 1v2c0 .6.4 1 1 1h6c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1Z\"/><path d=\"M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2M16 4h2a2 2 0 0 1 2 2v2M11 14h10\"/><path d=\"m17 10 4 4-4 4\"/>',\n  pin: '<line x1=\"12\" x2=\"12\" y1=\"17\" y2=\"22\"/><path d=\"M5 17h14v-1.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V6h1a2 2 0 0 0 0-4H8a2 2 0 0 0 0 4h1v4.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24Z\"/>',\n  pivot: '<path d=\"M15 3v18\"/><rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\"/><path d=\"M21 9H3\"/><path d=\"M21 15H3\"/>',\n  plus: '<circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M8 12h8\"/><path d=\"M12 8v8\"/>',\n  previous: '<path d=\"m15 18-6-6 6-6\"/>',\n  right: '<path d=\"M5 12h14\"/><path d=\"m12 5 7 7-7 7\"/>',\n  save: '<path d=\"M12 17V3\"/><path d=\"m6 11 6 6 6-6\"/><path d=\"M19 21H5\"/>',\n  \"small-left\": '<path d=\"m15 18-6-6 6-6\"/>',\n  \"small-right\": '<path d=\"m9 18 6-6-6-6\"/>',\n  tick: '<path d=\"M20 6 9 17l-5-5\"/>',\n  \"tree-closed\": '<path d=\"m9 18 6-6-6-6\"/>',\n  \"tree-indeterminate\": '<path d=\"M5 12h14\"/>',\n  \"tree-open\": '<path d=\"m6 9 6 6 6-6\"/>',\n  unlinked: '<path d=\"M9 17H7A5 5 0 0 1 7 7\"/><path d=\"M15 7h2a5 5 0 0 1 4 8\"/><line x1=\"8\" x2=\"12\" y1=\"12\" y2=\"12\"/><line x1=\"2\" x2=\"22\" y1=\"2\" y2=\"22\"/>',\n  up: '<path d=\"m5 12 7-7 7 7\"/><path d=\"M12 19V5\"/>',\n  grip: '<circle cx=\"5\" cy=\"8\" r=\"0.5\"/><circle cx=\"12\" cy=\"8\" r=\"0.5\"/><circle cx=\"19\" cy=\"8\" r=\"0.5\"/><circle cx=\"5\" cy=\"16\" r=\"0.5\"/><circle cx=\"12\" cy=\"16\" r=\"0.5\"/><circle cx=\"19\" cy=\"16\" r=\"0.5\"/><g stroke=\"none\" fill=\"currentColor\"><circle cx=\"5\" cy=\"8\" r=\"1\"/><circle cx=\"12\" cy=\"8\" r=\"1\"/><circle cx=\"19\" cy=\"8\" r=\"1\"/><circle cx=\"5\" cy=\"16\" r=\"1\"/><circle cx=\"12\" cy=\"16\" r=\"1\"/><circle cx=\"19\" cy=\"16\" r=\"1\"/></g>',\n  settings: '<path d=\"M20 7h-9\"/><path d=\"M14 17H5\"/><circle cx=\"17\" cy=\"17\" r=\"3\"/><circle cx=\"7\" cy=\"7\" r=\"3\"/>'\n};\nvar iconNameToFullSvg = {\n  \"column-arrow\": '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"none\" viewBox=\"0 0 32 32\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 26C0 28.2092 1.79086 30 4 30H14C16.2091 30 18 28.2092 18 26V15H25.8786L24.4394 16.4393C23.8536 17.0251 23.8536 17.9749 24.4394 18.5607C25.0252 19.1464 25.9748 19.1464 26.5606 18.5607L30.5606 14.5607C31.1464 13.9749 31.1464 13.0251 30.5606 12.4393L26.5606 8.43934C25.9748 7.85356 25.0252 7.85356 24.4394 8.43934C23.8536 9.02512 23.8536 9.97488 24.4394 10.5607L25.8786 12H18V6C18 3.79086 16.2091 2 14 2H4C1.79086 2 0 3.79086 0 6V26ZM14 5H10.5V12H15V6C15 5.44772 14.5523 5 14 5ZM4 5H7.5V12H3V6C3 5.44772 3.44772 5 4 5ZM10.5 15H15V26C15 26.5522 14.5523 27 14 27H10.5V15ZM4 27H7.5V15H3V26C3 26.5522 3.44772 27 4 27Z\" fill=\"currentColor\"/></svg>',\n  \"small-down\": '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"black\" stroke=\"none\" viewBox=\"0 0 32 32\"><path d=\"M7.334 10.667 16 21.334l8.667-10.667H7.334Z\"/></svg>',\n  \"small-up\": '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"black\" stroke=\"none\" viewBox=\"0 0 32 32\"><path d=\"M7.334 21.333 16 10.666l8.667 10.667H7.334Z\"/></svg>',\n  \"pinned-top\": '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" d=\"M12.53 3.72A.75.75 0 0 1 12 5H4a.75.75 0 0 1 0-1.5h8a.75.75 0 0 1 .53.22ZM3.269 10.744a.75.75 0 0 1 .2-.524l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 1 1-1.06 1.06L8.75 8.56V14a.75.75 0 0 1-1.5 0V8.56l-2.72 2.72a.75.75 0 0 1-1.26-.536Z\"/></svg>',\n  \"pinned-bottom\": '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" class=\"ag-icon\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" d=\"M3.47 12.28A.75.75 0 0 1 4 11h8a.75.75 0 0 1 0 1.5H4a.75.75 0 0 1-.53-.22ZM12.731 5.256a.75.75 0 0 1-.2.524l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 1 1 1.06-1.06l2.72 2.72V2a.75.75 0 0 1 1.5 0v5.44l2.72-2.72a.75.75 0 0 1 1.26.536Z\"/></svg>',\n  \"un-pin\": '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" class=\"ag-icon\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" d=\"M8 11a.75.75 0 0 0-.75.75v3.333a.75.75 0 1 0 1.5 0V11.75A.75.75 0 0 0 8 11Z\"/><path fill=\"currentColor\" d=\"M13.11 1.436a.75.75 0 0 0-1.22-.872l-10 14a.75.75 0 1 0 1.22.872L5.207 12.5h7.376a.75.75 0 0 0 .75-.75v-1.174a2.08 2.08 0 0 0-1.153-1.863l-1.185-.599-.005-.002a.58.58 0 0 1-.323-.522V5.165a2.083 2.083 0 0 0 1.854-2.904l.589-.825Zm-3.943 5.52v.634a2.08 2.08 0 0 0 1.153 1.863l1.185.6.005.002a.58.58 0 0 1 .323.522V11H6.28l2.887-4.044ZM9.277 1H5.25a2.084 2.084 0 0 0-.083 4.165v1.676l1.5-2.132v-.292a.75.75 0 0 0-.75-.75H5.25a.584.584 0 0 1 0-1.167h2.972L9.277 1Z\"/></svg>',\n  \"chevron-down\": '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"ag-icon\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 6L8 10L4 6\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>',\n  \"chevron-up\": '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"ag-icon\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 10L8 6L12 10\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>',\n  \"chevron-left\": '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"ag-icon\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 12L6 8L10 4\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>',\n  \"chevron-right\": '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"ag-icon\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 12L10 8L6 4\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>',\n  \"filter-add\": '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"ag-icon\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.12126 7.75L10.8517 7.75\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/><path d=\"M6.65934 11.748L9.32778 11.748\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/><path d=\"M12.2943 1.04872V6.19184M14.9886 3.74341H9.68478\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/><path d=\"M8.25488 3C8.04799 3.18323 7.91706 3.45099 7.91699 3.74902C7.91713 4.04868 8.04988 4.31681 8.25879 4.5H2C1.58579 4.5 1.25 4.16421 1.25 3.75C1.25 3.33579 1.58579 3 2 3H8.25488Z\" fill=\"currentColor\"/></svg>',\n  edit: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3.5 10.6262V12.5012H5.375L10.905 6.97122L9.03 5.09622L3.5 10.6262ZM12.355 5.52122C12.4014 5.47497 12.4381 5.42002 12.4632 5.35953C12.4883 5.29905 12.5012 5.23421 12.5012 5.16872C12.5012 5.10324 12.4883 5.0384 12.4632 4.97791C12.4381 4.91742 12.4014 4.86248 12.355 4.81622L11.185 3.64622C11.1387 3.59987 11.0838 3.5631 11.0233 3.53801C10.9628 3.51291 10.898 3.5 10.8325 3.5C10.767 3.5 10.7022 3.51291 10.6417 3.53801C10.5812 3.5631 10.5263 3.59987 10.48 3.64622L9.565 4.56122L11.44 6.43622L12.355 5.52122Z\" fill=\"currentColor\"/></svg>'\n};\nvar getQuartzIconsCss = (args = {}) => {\n  let result = \"\";\n  for (const iconName of [...Object.keys(iconNameToSvgFragment), ...Object.keys(iconNameToFullSvg)]) {\n    const iconSvg = quartzIconSvg(iconName, args.strokeWidth);\n    result += `.ag-icon-${iconName}::before { mask-image: url('data:image/svg+xml,${encodeURIComponent(iconSvg)}'); }\n`;\n  }\n  return result;\n};\nvar quartzIconSvg = (name, strokeWidth = 1.5) => {\n  const fullSVG = iconNameToFullSvg[name];\n  if (fullSVG) return fullSVG;\n  const svgFragment = iconNameToSvgFragment[name];\n  if (!svgFragment) throw new Error(`Missing icon data for ${name}`);\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"black\" stroke-width=\"${strokeWidth}\" viewBox=\"0 0 24 24\"><style>* { vector-effect: non-scaling-stroke; }</style>` + svgFragment + \"</svg>\";\n};\n\n// packages/ag-grid-community/src/theming/parts/icon-set/quartz/icon-set-quartz.ts\nvar iconSetQuartz = (args = {}) => {\n  return createPart({\n    feature: \"iconSet\",\n    css: () => getQuartzIconsCss(args)\n  });\n};\nvar iconSetQuartzLight = /* @__PURE__ */iconSetQuartz({\n  strokeWidth: 1\n});\nvar iconSetQuartzRegular = /* @__PURE__ */iconSetQuartz();\nvar iconSetQuartzBold = /* @__PURE__ */iconSetQuartz({\n  strokeWidth: 2\n});\n\n// packages/ag-grid-community/src/theming/parts/input-style/input-style-base.css-GENERATED.ts\nvar inputStyleBaseCSS = /*css*/\n`:where(.ag-input-field-input[type=number]:not(.ag-number-field-input-stepper)){-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield;&::-webkit-inner-spin-button,&::-webkit-outer-spin-button{-webkit-appearance:none;appearance:none;margin:0}}.ag-input-field-input:where(input:not([type]),input[type=text],input[type=number],input[type=tel],input[type=date],input[type=datetime-local],textarea){background-color:var(--ag-input-background-color);border:var(--ag-input-border);border-radius:var(--ag-input-border-radius);color:var(--ag-input-text-color);font-family:inherit;font-size:inherit;line-height:inherit;margin:0;min-height:var(--ag-input-height);padding:0;&:where(:disabled){background-color:var(--ag-input-disabled-background-color);border:var(--ag-input-disabled-border);color:var(--ag-input-disabled-text-color)}&:where(:focus){background-color:var(--ag-input-focus-background-color);border:var(--ag-input-focus-border);box-shadow:var(--ag-input-focus-shadow);color:var(--ag-input-focus-text-color);outline:none}&:where(:invalid){background-color:var(--ag-input-invalid-background-color);border:var(--ag-input-invalid-border);color:var(--ag-input-invalid-text-color)}&:where(.invalid){background-color:var(--ag-input-invalid-background-color);border:var(--ag-input-invalid-border);color:var(--ag-input-invalid-text-color)}&::-moz-placeholder{color:var(--ag-input-placeholder-text-color)}&::placeholder{color:var(--ag-input-placeholder-text-color)}}:where(.ag-ltr) .ag-input-field-input:where(input:not([type]),input[type=text],input[type=number],input[type=tel],input[type=date],input[type=datetime-local],textarea){padding-left:var(--ag-input-padding-start)}:where(.ag-rtl) .ag-input-field-input:where(input:not([type]),input[type=text],input[type=number],input[type=tel],input[type=date],input[type=datetime-local],textarea){padding-right:var(--ag-input-padding-start)}:where(.ag-column-select-header-filter-wrapper,.ag-filter-toolpanel-search,.ag-mini-filter,.ag-filter-filter,.ag-filter-add-select){.ag-input-wrapper:before{background-color:currentcolor;color:var(--ag-input-icon-color);content:\"\";display:block;height:12px;-webkit-mask-image:url(\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMiIgZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41Ij48cGF0aCBkPSJNNS4zIDlhMy43IDMuNyAwIDEgMCAwLTcuNSAzLjcgMy43IDAgMCAwIDAgNy41Wk0xMC41IDEwLjUgOC4zIDguMiIvPjwvc3ZnPg==\");mask-image:url(\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMiIgZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41Ij48cGF0aCBkPSJNNS4zIDlhMy43IDMuNyAwIDEgMCAwLTcuNSAzLjcgMy43IDAgMCAwIDAgNy41Wk0xMC41IDEwLjUgOC4zIDguMiIvPjwvc3ZnPg==\");-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;opacity:.5;position:absolute;width:12px}}:where(.ag-ltr) :where(.ag-column-select-header-filter-wrapper,.ag-filter-toolpanel-search,.ag-mini-filter,.ag-filter-filter,.ag-filter-add-select){.ag-input-wrapper:before{margin-left:var(--ag-spacing)}.ag-number-field-input,.ag-text-field-input{padding-left:calc(var(--ag-spacing)*1.5 + 12px)}}:where(.ag-rtl) :where(.ag-column-select-header-filter-wrapper,.ag-filter-toolpanel-search,.ag-mini-filter,.ag-filter-filter,.ag-filter-add-select){.ag-input-wrapper:before{margin-right:var(--ag-spacing)}.ag-number-field-input,.ag-text-field-input{padding-right:calc(var(--ag-spacing)*1.5 + 12px)}}`;\n\n// packages/ag-grid-community/src/theming/parts/input-style/input-style-bordered.css-GENERATED.ts\nvar inputStyleBorderedCSS = /*css*/\n`.ag-input-field-input:where(input:not([type]),input[type=text],input[type=number],input[type=tel],input[type=date],input[type=datetime-local],textarea){&:focus{box-shadow:var(--ag-focus-shadow);&:where(.invalid),&:where(:invalid){box-shadow:var(--ag-focus-error-shadow)}}}`;\n\n// packages/ag-grid-community/src/theming/parts/input-style/input-style-underlined.css-GENERATED.ts\nvar inputStyleUnderlinedCSS = /*css*/\n`.ag-input-field-input:where(input:not([type]),input[type=text],input[type=number],input[type=tel],input[type=date],input[type=datetime-local],textarea){border-left:none;border-right:none;border-top:none}`;\n\n// packages/ag-grid-community/src/theming/parts/input-style/input-styles.ts\nvar baseParams3 = {\n  inputBackgroundColor: \"transparent\",\n  inputBorder: false,\n  inputBorderRadius: 0,\n  inputTextColor: {\n    ref: \"textColor\"\n  },\n  inputPlaceholderTextColor: {\n    ref: \"inputTextColor\",\n    mix: 0.5\n  },\n  inputPaddingStart: 0,\n  inputHeight: {\n    calc: \"max(iconSize, fontSize) + spacing * 2\"\n  },\n  inputFocusBackgroundColor: {\n    ref: \"inputBackgroundColor\"\n  },\n  inputFocusBorder: {\n    ref: \"inputBorder\"\n  },\n  inputFocusShadow: \"none\",\n  inputFocusTextColor: {\n    ref: \"inputTextColor\"\n  },\n  inputDisabledBackgroundColor: {\n    ref: \"inputBackgroundColor\"\n  },\n  inputDisabledBorder: {\n    ref: \"inputBorder\"\n  },\n  inputDisabledTextColor: {\n    ref: \"inputTextColor\"\n  },\n  inputInvalidBackgroundColor: {\n    ref: \"inputBackgroundColor\"\n  },\n  inputInvalidBorder: {\n    ref: \"inputBorder\"\n  },\n  inputInvalidTextColor: {\n    ref: \"inputTextColor\"\n  },\n  inputIconColor: {\n    ref: \"inputTextColor\"\n  },\n  pickerButtonBorder: false,\n  pickerButtonFocusBorder: {\n    ref: \"inputFocusBorder\"\n  },\n  pickerButtonBackgroundColor: {\n    ref: \"backgroundColor\"\n  },\n  pickerButtonFocusBackgroundColor: {\n    ref: \"backgroundColor\"\n  },\n  pickerListBorder: false,\n  pickerListBackgroundColor: {\n    ref: \"backgroundColor\"\n  },\n  colorPickerThumbSize: 18,\n  colorPickerTrackSize: 12,\n  colorPickerThumbBorderWidth: 3,\n  colorPickerTrackBorderRadius: 12,\n  colorPickerColorBorderRadius: 4\n};\nvar makeInputStyleBaseTreeShakeable = () => createPart({\n  feature: \"inputStyle\",\n  params: baseParams3,\n  css: inputStyleBaseCSS\n});\nvar inputStyleBase = /* @__PURE__ */makeInputStyleBaseTreeShakeable();\nvar makeInputStyleBorderedTreeShakeable = () => createPart({\n  feature: \"inputStyle\",\n  params: {\n    ...baseParams3,\n    inputBackgroundColor: backgroundColor,\n    inputBorder: true,\n    inputBorderRadius: {\n      ref: \"borderRadius\"\n    },\n    inputPaddingStart: {\n      ref: \"spacing\"\n    },\n    inputFocusBorder: {\n      color: accentColor\n    },\n    inputFocusShadow: {\n      ref: \"focusShadow\"\n    },\n    inputDisabledBackgroundColor: foregroundBackgroundMix(0.06),\n    inputDisabledTextColor: {\n      ref: \"textColor\",\n      mix: 0.5\n    },\n    inputInvalidBorder: {\n      color: {\n        ref: \"invalidColor\"\n      }\n    },\n    pickerButtonBorder: true,\n    pickerListBorder: true\n  },\n  css: () => inputStyleBaseCSS + inputStyleBorderedCSS\n});\nvar inputStyleBordered = /* @__PURE__ */makeInputStyleBorderedTreeShakeable();\nvar makeInputStyleUnderlinedTreeShakeable = () => createPart({\n  feature: \"inputStyle\",\n  params: {\n    ...baseParams3,\n    inputBackgroundColor: \"transparent\",\n    inputBorder: {\n      width: 2,\n      color: foregroundMix(0.3)\n    },\n    inputPaddingStart: {\n      ref: \"spacing\"\n    },\n    inputFocusBorder: \"solid 2px var(--ag-accent-color)\",\n    inputDisabledTextColor: {\n      ref: \"textColor\",\n      mix: 0.5\n    },\n    inputDisabledBorder: \"solid 1px var(--ag-border-color)\",\n    inputInvalidBorder: {\n      width: 2,\n      color: {\n        ref: \"invalidColor\",\n        mix: 0.3\n      }\n    }\n  },\n  css: () => inputStyleBaseCSS + inputStyleUnderlinedCSS\n});\nvar inputStyleUnderlined = /* @__PURE__ */makeInputStyleUnderlinedTreeShakeable();\n\n// packages/ag-grid-community/src/theming/parts/tab-style/tab-style-base.css-GENERATED.ts\nvar tabStyleBaseCSS = /*css*/\n`.ag-tabs-header{background-color:var(--ag-tab-bar-background-color);border-bottom:var(--ag-tab-bar-border);display:flex;flex:1;gap:var(--ag-tab-spacing);padding:var(--ag-tab-bar-top-padding) var(--ag-tab-bar-horizontal-padding) 0}.ag-tabs-header-wrapper{display:flex}.ag-tabs-close-button-wrapper{align-items:center;border:0;display:flex;padding:var(--ag-spacing)}:where(.ag-ltr) .ag-tabs-close-button-wrapper{border-right:solid var(--ag-border-width) var(--ag-border-color)}:where(.ag-rtl) .ag-tabs-close-button-wrapper{border-left:solid var(--ag-border-width) var(--ag-border-color)}.ag-tabs-close-button{background-color:unset;border:0;cursor:pointer;padding:0}.ag-tab{align-items:center;background-color:var(--ag-tab-background-color);border-left:var(--ag-tab-selected-border-width) solid transparent;border-right:var(--ag-tab-selected-border-width) solid transparent;color:var(--ag-tab-text-color);cursor:pointer;display:flex;flex:1;justify-content:center;padding:var(--ag-tab-top-padding) var(--ag-tab-horizontal-padding) var(--ag-tab-bottom-padding);position:relative;&:hover{background-color:var(--ag-tab-hover-background-color);color:var(--ag-tab-hover-text-color)}&.ag-tab-selected{background-color:var(--ag-tab-selected-background-color);color:var(--ag-tab-selected-text-color)}&:after{background-color:var(--ag-tab-selected-underline-color);bottom:0;content:\"\";display:block;height:var(--ag-tab-selected-underline-width);left:0;opacity:0;position:absolute;right:0;transition:opacity var(--ag-tab-selected-underline-transition-duration)}&.ag-tab-selected:after{opacity:1}}:where(.ag-ltr) .ag-tab{&.ag-tab-selected{&:where(:not(:first-of-type)){border-left-color:var(--ag-tab-selected-border-color)}&:where(:not(:last-of-type)){border-right-color:var(--ag-tab-selected-border-color)}}}:where(.ag-rtl) .ag-tab{&.ag-tab-selected{&:where(:not(:first-of-type)){border-right-color:var(--ag-tab-selected-border-color)}&:where(:not(:last-of-type)){border-left-color:var(--ag-tab-selected-border-color)}}}`;\n\n// packages/ag-grid-community/src/theming/parts/tab-style/tab-style-rolodex.css-GENERATED.ts\nvar tabStyleRolodexCSS = /*css*/\n`.ag-tab{border-left:var(--ag-tab-selected-border-width) solid transparent;border-right:var(--ag-tab-selected-border-width) solid transparent;border-top:var(--ag-tab-selected-border-width) solid transparent;flex:none;&.ag-tab-selected{border-left-color:var(--ag-tab-selected-border-color);border-right-color:var(--ag-tab-selected-border-color);border-top-color:var(--ag-tab-selected-border-color);margin-bottom:-1px;padding-bottom:calc(var(--ag-tab-bottom-padding) + 1px)}}`;\n\n// packages/ag-grid-community/src/theming/parts/tab-style/tab-styles.ts\nvar baseParams4 = {\n  tabBarBackgroundColor: \"transparent\",\n  tabBarHorizontalPadding: 0,\n  tabBarTopPadding: 0,\n  tabBackgroundColor: \"transparent\",\n  tabTextColor: {\n    ref: \"textColor\"\n  },\n  tabHorizontalPadding: {\n    ref: \"spacing\"\n  },\n  tabTopPadding: {\n    ref: \"spacing\"\n  },\n  tabBottomPadding: {\n    ref: \"spacing\"\n  },\n  tabSpacing: \"0\",\n  tabHoverBackgroundColor: {\n    ref: \"tabBackgroundColor\"\n  },\n  tabHoverTextColor: {\n    ref: \"tabTextColor\"\n  },\n  tabSelectedBackgroundColor: {\n    ref: \"tabBackgroundColor\"\n  },\n  tabSelectedTextColor: {\n    ref: \"tabTextColor\"\n  },\n  tabSelectedBorderWidth: {\n    ref: \"borderWidth\"\n  },\n  tabSelectedBorderColor: \"transparent\",\n  tabSelectedUnderlineColor: \"transparent\",\n  tabSelectedUnderlineWidth: 0,\n  tabSelectedUnderlineTransitionDuration: 0,\n  tabBarBorder: false\n};\nvar makeTabStyleBaseTreeShakeable = () => createPart({\n  feature: \"tabStyle\",\n  params: baseParams4,\n  css: tabStyleBaseCSS\n});\nvar tabStyleBase = /* @__PURE__ */makeTabStyleBaseTreeShakeable();\nvar makeTabStyleQuartzTreeShakeable = () => createPart({\n  feature: \"tabStyle\",\n  params: {\n    ...baseParams4,\n    tabBarBorder: true,\n    tabBarBackgroundColor: foregroundMix(0.05),\n    tabTextColor: {\n      ref: \"textColor\",\n      mix: 0.7\n    },\n    tabSelectedTextColor: {\n      ref: \"textColor\"\n    },\n    tabHoverTextColor: {\n      ref: \"textColor\"\n    },\n    tabSelectedBorderColor: {\n      ref: \"borderColor\"\n    },\n    tabSelectedBackgroundColor: backgroundColor\n  },\n  css: tabStyleBaseCSS\n});\nvar tabStyleQuartz = /* @__PURE__ */makeTabStyleQuartzTreeShakeable();\nvar makeTabStyleMaterialTreeShakeable = () => createPart({\n  feature: \"tabStyle\",\n  params: {\n    ...baseParams4,\n    tabBarBackgroundColor: {\n      ref: \"chromeBackgroundColor\"\n    },\n    tabSelectedUnderlineColor: {\n      ref: \"primaryColor\"\n    },\n    tabSelectedUnderlineWidth: 2,\n    tabSelectedUnderlineTransitionDuration: 0\n  },\n  css: tabStyleBaseCSS\n});\nvar tabStyleMaterial = /* @__PURE__ */makeTabStyleMaterialTreeShakeable();\nvar makeTabStyleAlpineTreeShakeable = () => createPart({\n  feature: \"tabStyle\",\n  params: {\n    ...baseParams4,\n    tabBarBorder: true,\n    tabBarBackgroundColor: {\n      ref: \"chromeBackgroundColor\"\n    },\n    tabHoverTextColor: accentColor,\n    tabSelectedTextColor: accentColor,\n    tabSelectedUnderlineColor: accentColor,\n    tabSelectedUnderlineWidth: 2,\n    tabSelectedUnderlineTransitionDuration: \"0.3s\"\n  },\n  css: tabStyleBaseCSS\n});\nvar tabStyleAlpine = /* @__PURE__ */makeTabStyleAlpineTreeShakeable();\nvar makeTabStyleRolodexTreeShakeable = () => createPart({\n  feature: \"tabStyle\",\n  params: {\n    ...baseParams4,\n    tabBarBackgroundColor: {\n      ref: \"chromeBackgroundColor\"\n    },\n    tabBarHorizontalPadding: {\n      ref: \"spacing\"\n    },\n    tabBarTopPadding: {\n      ref: \"spacing\"\n    },\n    tabBarBorder: true,\n    tabHorizontalPadding: {\n      calc: \"spacing * 2\"\n    },\n    tabTopPadding: {\n      ref: \"spacing\"\n    },\n    tabBottomPadding: {\n      ref: \"spacing\"\n    },\n    tabSpacing: {\n      ref: \"spacing\"\n    },\n    tabSelectedBorderColor: {\n      ref: \"borderColor\"\n    },\n    tabSelectedBackgroundColor: backgroundColor\n  },\n  css: () => tabStyleBaseCSS + tabStyleRolodexCSS\n});\nvar tabStyleRolodex = /* @__PURE__ */makeTabStyleRolodexTreeShakeable();\n\n// packages/ag-grid-community/src/theming/parts/theme/material-adjustments.css-GENERATED.ts\nvar materialAdjustmentsCSS = /*css*/\n`.ag-dnd-ghost,.ag-filter-toolpanel-header,.ag-filter-toolpanel-search,.ag-multi-filter-group-title-bar,.ag-panel-title-bar-title,.ag-status-bar{color:var(--ag-header-text-color);font-size:calc(var(--ag-font-size) - 1px);font-weight:600}.ag-column-drop-horizontal{background-color:color-mix(in srgb,var(--ag-background-color),var(--ag-foreground-color) 8%)}.ag-cell.ag-cell-inline-editing{background-color:var(--ag-background-color);background-image:linear-gradient(0deg,var(--ag-input-background-color),var(--ag-input-background-color));border:var(--ag-input-border)!important;border-width:1px!important;height:calc(var(--ag-row-height) + var(--ag-spacing)*3);padding:var(--ag-spacing);:where(.ag-row-last:not(.ag-row-first)) &{bottom:0}:where(.ag-has-focus) &{border:var(--ag-input-focus-border)!important;border-width:1px!important}}.ag-advanced-filter-builder-button,.ag-standard-button{text-transform:uppercase}.ag-status-bar{border:solid var(--ag-border-width) var(--ag-border-color)}.ag-list-item-hovered:after{background-color:var(--ag-primary-color)}.ag-pill-button:hover{color:var(--ag-primary-color)}.ag-header-highlight-after:after,.ag-header-highlight-before:after{background-color:var(--ag-primary-color)}.ag-filter-add-button,.ag-filter-add-button:hover{border-bottom:2px solid var(--ag-primary-color)}`;\n\n// packages/ag-grid-community/src/theming/parts/theme/themes.ts\nvar makeThemeQuartzTreeShakeable = () => createTheme().withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetQuartzRegular).withPart(tabStyleQuartz).withPart(inputStyleBordered).withPart(columnDropStyleBordered).withParams({\n  fontFamily: [{\n    googleFont: \"IBM Plex Sans\"\n  }, \"-apple-system\", \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen-Sans\", \"Ubuntu\"]\n});\nvar themeQuartz = /* @__PURE__ */makeThemeQuartzTreeShakeable();\nvar makeThemeAlpineTreeShakeable = () => createTheme().withPart(buttonStyleAlpine).withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetAlpine).withPart(tabStyleAlpine).withPart(inputStyleBordered).withPart(columnDropStyleBordered).withParams({\n  accentColor: \"#2196f3\",\n  selectedRowBackgroundColor: accentMix(0.3),\n  inputFocusBorder: {\n    color: accentMix(0.4)\n  },\n  focusShadow: {\n    radius: 2,\n    spread: 1.6,\n    color: accentMix(0.4)\n  },\n  iconButtonHoverBackgroundColor: \"transparent\",\n  iconButtonActiveBackgroundColor: \"transparent\",\n  checkboxUncheckedBorderColor: foregroundBackgroundMix(0.45),\n  checkboxIndeterminateBackgroundColor: foregroundBackgroundMix(0.45),\n  checkboxIndeterminateBorderColor: foregroundBackgroundMix(0.45),\n  checkboxBorderWidth: 2,\n  checkboxBorderRadius: 2,\n  fontSize: 13,\n  dataFontSize: 14,\n  headerFontWeight: 700,\n  borderRadius: 3,\n  wrapperBorderRadius: 3,\n  tabSelectedUnderlineColor: accentColor,\n  tabSelectedBorderWidth: 0,\n  tabSelectedUnderlineTransitionDuration: 0.3,\n  sideButtonSelectedUnderlineColor: accentColor,\n  sideButtonSelectedUnderlineWidth: 2,\n  sideButtonSelectedUnderlineTransitionDuration: 0.3,\n  sideButtonBorder: false,\n  sideButtonSelectedBorder: false,\n  sideButtonBarTopPadding: {\n    calc: \"spacing * 3\"\n  },\n  sideButtonSelectedBackgroundColor: \"transparent\",\n  sideButtonHoverTextColor: accentColor,\n  iconButtonHoverColor: accentColor,\n  toggleButtonWidth: 28,\n  toggleButtonHeight: 18,\n  toggleButtonSwitchInset: 1,\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.45),\n  colorPickerThumbSize: 13,\n  colorPickerTrackSize: 11,\n  colorPickerThumbBorderWidth: 2,\n  colorPickerTrackBorderRadius: 2,\n  colorPickerColorBorderRadius: 2\n});\nvar themeAlpine = /* @__PURE__ */makeThemeAlpineTreeShakeable();\nvar makeThemeBalhamTreeShakeable = () => createTheme().withPart(buttonStyleBalham).withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetBalham).withPart(tabStyleRolodex).withPart(inputStyleBordered).withPart(columnDropStylePlain).withParams({\n  accentColor: \"#0091ea\",\n  borderColor: foregroundMix(0.2),\n  spacing: 4,\n  widgetVerticalSpacing: {\n    calc: \"max(8px, spacing)\"\n  },\n  borderRadius: 2,\n  wrapperBorderRadius: 2,\n  headerColumnResizeHandleColor: \"transparent\",\n  headerColumnBorder: true,\n  headerColumnBorderHeight: \"50%\",\n  oddRowBackgroundColor: {\n    ref: \"chromeBackgroundColor\",\n    mix: 0.5\n  },\n  checkboxBorderRadius: 2,\n  checkboxBorderWidth: 1,\n  checkboxUncheckedBackgroundColor: backgroundColor,\n  checkboxUncheckedBorderColor: foregroundBackgroundMix(0.5),\n  checkboxCheckedBackgroundColor: backgroundColor,\n  checkboxCheckedBorderColor: accentColor,\n  checkboxCheckedShapeColor: accentColor,\n  checkboxIndeterminateBackgroundColor: backgroundColor,\n  checkboxIndeterminateBorderColor: foregroundBackgroundMix(0.5),\n  checkboxIndeterminateShapeColor: foregroundBackgroundMix(0.5),\n  focusShadow: {\n    radius: 2,\n    spread: 1,\n    color: accentColor\n  },\n  headerTextColor: foregroundMix(0.6),\n  iconButtonHoverBackgroundColor: \"transparent\",\n  iconButtonActiveBackgroundColor: \"transparent\",\n  fontSize: 12,\n  tabSelectedBackgroundColor: backgroundColor,\n  headerFontWeight: \"bold\",\n  toggleButtonWidth: 32,\n  toggleButtonHeight: 16,\n  toggleButtonSwitchInset: 1,\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.5),\n  sideButtonBorder: true,\n  sideButtonBarTopPadding: {\n    calc: \"spacing * 4\"\n  },\n  popupShadow: \"5px 5px 10px rgba(0, 0, 0, 0.3)\",\n  statusBarLabelColor: foregroundMix(0.54),\n  statusBarLabelFontWeight: 600,\n  statusBarValueFontWeight: 600,\n  panelTitleBarIconColor: foregroundColor,\n  colorPickerThumbSize: 13,\n  colorPickerTrackSize: 11,\n  colorPickerThumbBorderWidth: 2,\n  colorPickerTrackBorderRadius: 2,\n  colorPickerColorBorderRadius: 2\n});\nvar themeBalham = /* @__PURE__ */makeThemeBalhamTreeShakeable();\nvar makeStyleMaterialTreeShakeable = () => {\n  const sharedParams = {\n    tabSelectedUnderlineColor: {\n      ref: \"primaryColor\"\n    },\n    sideButtonSelectedUnderlineColor: {\n      ref: \"primaryColor\"\n    },\n    buttonTextColor: {\n      ref: \"primaryColor\"\n    },\n    rangeSelectionBackgroundColor: {\n      ref: \"primaryColor\",\n      mix: 0.2\n    },\n    rangeSelectionBorderColor: {\n      ref: \"primaryColor\"\n    },\n    rangeSelectionHighlightColor: {\n      ref: \"primaryColor\",\n      mix: 0.5\n    },\n    rangeHeaderHighlightColor: {\n      ref: \"foregroundColor\",\n      mix: 0.08\n    },\n    rowNumbersSelectedColor: {\n      ref: \"primaryColor\",\n      mix: 0.5\n    },\n    inputFocusBorder: {\n      width: 2,\n      color: {\n        ref: \"primaryColor\"\n      }\n    },\n    pickerButtonFocusBorder: {\n      width: 1,\n      color: {\n        ref: \"primaryColor\"\n      }\n    },\n    cellEditingBorder: {\n      color: {\n        ref: \"primaryColor\"\n      }\n    },\n    menuBackgroundColor: {\n      ref: \"backgroundColor\"\n    },\n    sideButtonBarBackgroundColor: backgroundColor,\n    sideButtonSelectedBackgroundColor: \"transparent\",\n    sideButtonBarTopPadding: {\n      calc: \"spacing * 4\"\n    },\n    headerColumnResizeHandleColor: \"none\",\n    headerBackgroundColor: {\n      ref: \"backgroundColor\"\n    },\n    rowHoverColor: foregroundMix(0.08),\n    columnHoverColor: foregroundMix(0.08),\n    headerCellHoverBackgroundColor: foregroundMix(0.05),\n    statusBarLabelColor: foregroundMix(0.63),\n    statusBarLabelFontWeight: 600,\n    statusBarValueFontWeight: 600,\n    valueChangeValueHighlightBackgroundColor: \"#00acc1\",\n    panelTitleBarIconColor: foregroundColor,\n    advancedFilterBuilderButtonBarBorder: false,\n    filterPanelApplyButtonColor: {\n      ref: \"buttonTextColor\"\n    },\n    filterPanelApplyButtonBackgroundColor: {\n      ref: \"buttonBackgroundColor\"\n    },\n    colorPickerThumbSize: 13,\n    colorPickerTrackSize: 11,\n    colorPickerThumbBorderWidth: 2,\n    colorPickerTrackBorderRadius: 2,\n    colorPickerColorBorderRadius: 2\n  };\n  const lightParams = {\n    ...sharedParams,\n    primaryColor: \"#3f51b5\",\n    foregroundColor: \"#000D\",\n    headerTextColor: \"#0008\",\n    accentColor: \"#ff4081\",\n    checkboxUncheckedBorderColor: foregroundColor,\n    checkboxIndeterminateBackgroundColor: foregroundColor,\n    toggleButtonOffBackgroundColor: foregroundColor,\n    selectedRowBackgroundColor: \"rgba(33, 150, 243, 0.3)\"\n  };\n  const darkParams2 = {\n    ...sharedParams,\n    primaryColor: \"#3f51b5\",\n    foregroundColor: \"#fffD\",\n    headerTextColor: \"#fff8\",\n    accentColor: \"#bb86fc\",\n    checkboxUncheckedBorderColor: foregroundBackgroundMix(0.5),\n    checkboxIndeterminateBackgroundColor: foregroundBackgroundMix(0.5),\n    toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.5),\n    selectedRowBackgroundColor: \"#bb86fc33\"\n  };\n  return createPart({\n    feature: \"styleMaterial\",\n    css: materialAdjustmentsCSS,\n    params: lightParams,\n    modeParams: {\n      light: lightParams,\n      dark: darkParams2,\n      \"dark-blue\": darkParams2\n    }\n  });\n};\nvar styleMaterial = /* @__PURE__ */makeStyleMaterialTreeShakeable();\nvar makeThemeMaterialTreeShakeable = () => /* @__PURE__ */createTheme().withPart(buttonStyleBase).withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetMaterial).withPart(tabStyleMaterial).withPart(inputStyleUnderlined).withPart(columnDropStylePlain).withPart(styleMaterial).withParams({\n  rowHeight: {\n    calc: \"max(iconSize, dataFontSize) + spacing * 3.75 * rowVerticalPaddingScale\"\n  },\n  headerHeight: {\n    calc: \"max(iconSize, dataFontSize) + spacing * 4.75 * headerVerticalPaddingScale\"\n  },\n  widgetVerticalSpacing: {\n    calc: \"spacing * 1.75\"\n  },\n  cellHorizontalPadding: {\n    calc: \"spacing * 3\"\n  },\n  buttonHorizontalPadding: {\n    ref: \"spacing\"\n  },\n  widgetContainerHorizontalPadding: {\n    calc: \"spacing * 1.5\"\n  },\n  widgetContainerVerticalPadding: {\n    calc: \"spacing * 2\"\n  },\n  fontSize: 13,\n  iconSize: 18,\n  borderRadius: 0,\n  wrapperBorderRadius: 0,\n  wrapperBorder: false,\n  menuBorder: false,\n  dialogBorder: false,\n  panelTitleBarBorder: false,\n  tabSelectedBorderWidth: 0,\n  tabSelectedUnderlineTransitionDuration: 0.3,\n  sidePanelBorder: false,\n  sideButtonSelectedBorder: false,\n  sideButtonSelectedUnderlineWidth: 2,\n  sideButtonSelectedUnderlineTransitionDuration: 0.3,\n  sideButtonBorder: false,\n  buttonBorder: false,\n  buttonDisabledBorder: false,\n  focusShadow: {\n    spread: 4,\n    color: foregroundMix(0.16)\n  },\n  fontFamily: [{\n    googleFont: \"Roboto\"\n  }, \"-apple-system\", \"BlinkMacSystemFont\", \"Segoe UI\", \"Oxygen-Sans\", \"Ubuntu\", \"Cantarell\", \"Helvetica Neue\", \"sans-serif\"],\n  inputHeight: {\n    calc: \"max(iconSize, fontSize) + spacing * 3\"\n  },\n  pickerButtonBorder: {\n    width: 1,\n    color: \"transparent\"\n  },\n  headerFontWeight: 600,\n  headerFontSize: {\n    calc: \"fontSize - 1px\"\n  },\n  checkboxBorderWidth: 2,\n  checkboxBorderRadius: 2,\n  toggleButtonWidth: 34,\n  toggleButtonSwitchInset: 1,\n  cardShadow: \"0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12)\",\n  popupShadow: \"5px 5px 10px rgba(0, 0, 0, 0.3)\"\n});\nvar themeMaterial = /* @__PURE__ */makeThemeMaterialTreeShakeable();\n\n// packages/ag-grid-community/src/environment.ts\nvar CELL_HORIZONTAL_PADDING = {\n  cssName: \"--ag-cell-horizontal-padding\",\n  changeKey: \"cellHorizontalPaddingChanged\",\n  defaultValue: 16\n};\nvar INDENTATION_LEVEL = {\n  cssName: \"--ag-indentation-level\",\n  changeKey: \"indentationLevelChanged\",\n  defaultValue: 0,\n  noWarn: true,\n  cacheDefault: true\n};\nvar ROW_GROUP_INDENT_SIZE = {\n  cssName: \"--ag-row-group-indent-size\",\n  changeKey: \"rowGroupIndentSizeChanged\",\n  defaultValue: 0\n};\nvar ROW_HEIGHT = {\n  cssName: \"--ag-row-height\",\n  changeKey: \"rowHeightChanged\",\n  defaultValue: 42\n};\nvar HEADER_HEIGHT = {\n  cssName: \"--ag-header-height\",\n  changeKey: \"headerHeightChanged\",\n  defaultValue: 48\n};\nvar LIST_ITEM_HEIGHT = {\n  cssName: \"--ag-list-item-height\",\n  changeKey: \"listItemHeightChanged\",\n  defaultValue: 24\n};\nvar ROW_BORDER_WIDTH = {\n  cssName: \"--ag-row-border\",\n  changeKey: \"rowBorderWidthChanged\",\n  defaultValue: 1,\n  border: true\n};\nvar PINNED_BORDER_WIDTH = {\n  cssName: \"--ag-pinned-row-border\",\n  changeKey: \"pinnedRowBorderWidthChanged\",\n  defaultValue: 1,\n  border: true\n};\nvar paramsId = 0;\nvar Environment = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"environment\";\n    this.sizeEls = /* @__PURE__ */new Map();\n    this.lastKnownValues = /* @__PURE__ */new Map();\n    this.sizesMeasured = false;\n    this.paramsClass = `ag-theme-params-${++paramsId}`;\n    this.globalCSS = [];\n  }\n  wireBeans(beans) {\n    const {\n      eGridDiv,\n      gridOptions\n    } = beans;\n    this.eGridDiv = eGridDiv;\n    this.eStyleContainer = gridOptions.themeStyleContainer ?? (eGridDiv.getRootNode() === document ? document.head : eGridDiv);\n    this.cssLayer = gridOptions.themeCssLayer;\n    this.styleNonce = gridOptions.styleNonce;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"theme\", () => this.handleThemeGridOptionChange());\n    this.handleThemeGridOptionChange();\n    this.addManagedPropertyListener(\"rowHeight\", () => this.refreshRowHeightVariable());\n    this.getSizeEl(ROW_HEIGHT);\n    this.getSizeEl(HEADER_HEIGHT);\n    this.getSizeEl(LIST_ITEM_HEIGHT);\n    this.getSizeEl(ROW_BORDER_WIDTH);\n    this.getSizeEl(PINNED_BORDER_WIDTH);\n    this.refreshRowBorderWidthVariable();\n    this.addDestroyFunc(() => _unregisterGridUsingThemingAPI(this));\n    this.mutationObserver = new MutationObserver(() => {\n      this.fireGridStylesChangedEvent(\"themeChanged\");\n    });\n    this.addDestroyFunc(() => this.mutationObserver.disconnect());\n  }\n  getPinnedRowBorderWidth() {\n    return this.getCSSVariablePixelValue(PINNED_BORDER_WIDTH);\n  }\n  getRowBorderWidth() {\n    return this.getCSSVariablePixelValue(ROW_BORDER_WIDTH);\n  }\n  getDefaultRowHeight() {\n    return this.getCSSVariablePixelValue(ROW_HEIGHT);\n  }\n  getDefaultHeaderHeight() {\n    return this.getCSSVariablePixelValue(HEADER_HEIGHT);\n  }\n  getDefaultCellHorizontalPadding() {\n    return this.getCSSVariablePixelValue(CELL_HORIZONTAL_PADDING);\n  }\n  getCellPaddingLeft() {\n    const cellHorizontalPadding = this.getDefaultCellHorizontalPadding();\n    const indentationLevel = this.getCSSVariablePixelValue(INDENTATION_LEVEL);\n    const rowGroupIndentSize = this.getCSSVariablePixelValue(ROW_GROUP_INDENT_SIZE);\n    return cellHorizontalPadding - 1 + rowGroupIndentSize * indentationLevel;\n  }\n  getCellPadding() {\n    const cellPaddingRight = this.getDefaultCellHorizontalPadding() - 1;\n    return this.getCellPaddingLeft() + cellPaddingRight;\n  }\n  getDefaultColumnMinWidth() {\n    return Math.min(36, this.getDefaultRowHeight());\n  }\n  getDefaultListItemHeight() {\n    return this.getCSSVariablePixelValue(LIST_ITEM_HEIGHT);\n  }\n  applyThemeClasses(el) {\n    const {\n      gridTheme\n    } = this;\n    let themeClass = \"\";\n    if (gridTheme) {\n      themeClass = `${this.paramsClass} ${gridTheme._getCssClass()}`;\n    } else {\n      this.mutationObserver.disconnect();\n      let node = this.eGridDiv;\n      while (node) {\n        let isThemeEl = false;\n        for (const className of Array.from(node.classList)) {\n          if (className.startsWith(\"ag-theme-\")) {\n            isThemeEl = true;\n            themeClass = themeClass ? `${themeClass} ${className}` : className;\n          }\n        }\n        if (isThemeEl) {\n          this.mutationObserver.observe(node, {\n            attributes: true,\n            attributeFilter: [\"class\"]\n          });\n        }\n        node = node.parentElement;\n      }\n    }\n    for (const className of Array.from(el.classList)) {\n      if (className.startsWith(\"ag-theme-\")) {\n        el.classList.remove(className);\n      }\n    }\n    if (themeClass) {\n      const oldClass = el.className;\n      el.className = oldClass + (oldClass ? \" \" : \"\") + themeClass;\n    }\n  }\n  refreshRowHeightVariable() {\n    const {\n      eGridDiv\n    } = this;\n    const oldRowHeight = eGridDiv.style.getPropertyValue(\"--ag-line-height\").trim();\n    const height = this.gos.get(\"rowHeight\");\n    if (height == null || isNaN(height) || !isFinite(height)) {\n      if (oldRowHeight !== null) {\n        eGridDiv.style.setProperty(\"--ag-line-height\", null);\n      }\n      return -1;\n    }\n    const newRowHeight = `${height}px`;\n    if (oldRowHeight != newRowHeight) {\n      eGridDiv.style.setProperty(\"--ag-line-height\", newRowHeight);\n      return height;\n    }\n    return oldRowHeight != \"\" ? parseFloat(oldRowHeight) : -1;\n  }\n  addGlobalCSS(css, debugId) {\n    if (this.gridTheme) {\n      _injectGlobalCSS(css, this.eStyleContainer, debugId, this.cssLayer, 0, this.styleNonce);\n    } else {\n      this.globalCSS.push([css, debugId]);\n    }\n  }\n  getCSSVariablePixelValue(variable) {\n    const cached = this.lastKnownValues.get(variable);\n    if (cached != null) {\n      return cached;\n    }\n    const measurement = this.measureSizeEl(variable);\n    if (measurement === \"detached\" || measurement === \"no-styles\") {\n      if (variable.cacheDefault) {\n        this.lastKnownValues.set(variable, variable.defaultValue);\n      }\n      return variable.defaultValue;\n    }\n    this.lastKnownValues.set(variable, measurement);\n    return measurement;\n  }\n  measureSizeEl(variable) {\n    const sizeEl = this.getSizeEl(variable);\n    if (sizeEl.offsetParent == null) {\n      return \"detached\";\n    }\n    const newSize = sizeEl.offsetWidth;\n    if (newSize === NO_VALUE_SENTINEL) return \"no-styles\";\n    this.sizesMeasured = true;\n    return newSize;\n  }\n  getMeasurementContainer() {\n    let container = this.eMeasurementContainer;\n    if (!container) {\n      container = this.eMeasurementContainer = _createElement({\n        tag: \"div\",\n        cls: \"ag-measurement-container\"\n      });\n      this.eGridDiv.appendChild(container);\n    }\n    return container;\n  }\n  getSizeEl(variable) {\n    let sizeEl = this.sizeEls.get(variable);\n    if (sizeEl) {\n      return sizeEl;\n    }\n    const container = this.getMeasurementContainer();\n    sizeEl = _createElement({\n      tag: \"div\"\n    });\n    const {\n      border,\n      noWarn\n    } = variable;\n    if (border) {\n      sizeEl.className = \"ag-measurement-element-border\";\n      sizeEl.style.setProperty(\"--ag-internal-measurement-border\", `var(${variable.cssName}, solid ${NO_VALUE_SENTINEL}px)`);\n    } else {\n      sizeEl.style.width = `var(${variable.cssName}, ${NO_VALUE_SENTINEL}px)`;\n    }\n    container.appendChild(sizeEl);\n    this.sizeEls.set(variable, sizeEl);\n    let lastMeasurement = this.measureSizeEl(variable);\n    if (lastMeasurement === \"no-styles\" && !noWarn) {\n      _warn(9, {\n        variable\n      });\n    }\n    const unsubscribe = _observeResize(this.beans, sizeEl, () => {\n      const newMeasurement = this.measureSizeEl(variable);\n      if (newMeasurement === \"detached\" || newMeasurement === \"no-styles\") {\n        return;\n      }\n      this.lastKnownValues.set(variable, newMeasurement);\n      if (newMeasurement !== lastMeasurement) {\n        lastMeasurement = newMeasurement;\n        this.fireGridStylesChangedEvent(variable.changeKey);\n      }\n    });\n    this.addDestroyFunc(() => unsubscribe());\n    return sizeEl;\n  }\n  fireGridStylesChangedEvent(change) {\n    if (change === \"rowBorderWidthChanged\") {\n      this.refreshRowBorderWidthVariable();\n    }\n    this.eventSvc.dispatchEvent({\n      type: \"gridStylesChanged\",\n      [change]: true\n    });\n  }\n  refreshRowBorderWidthVariable() {\n    const width = this.getCSSVariablePixelValue(ROW_BORDER_WIDTH);\n    this.eGridDiv.style.setProperty(\"--ag-internal-row-border-width\", `${width}px`);\n  }\n  handleThemeGridOptionChange() {\n    const {\n      gos,\n      eGridDiv,\n      globalCSS,\n      gridTheme: oldGridTheme\n    } = this;\n    const themeGridOption = gos.get(\"theme\");\n    let newGridTheme;\n    if (themeGridOption === \"legacy\") {\n      newGridTheme = void 0;\n    } else {\n      const themeOrDefault = themeGridOption ?? themeQuartz;\n      if (themeOrDefault instanceof ThemeImpl) {\n        newGridTheme = themeOrDefault;\n      } else {\n        _error(240, {\n          theme: themeOrDefault\n        });\n      }\n    }\n    if (newGridTheme !== oldGridTheme) {\n      if (newGridTheme) {\n        _registerGridUsingThemingAPI(this);\n        _injectCoreAndModuleCSS(this.eStyleContainer, this.cssLayer, this.styleNonce);\n        for (const [css, debugId] of globalCSS) {\n          _injectGlobalCSS(css, this.eStyleContainer, debugId, this.cssLayer, 0, this.styleNonce);\n        }\n        globalCSS.length = 0;\n      }\n      this.gridTheme = newGridTheme;\n      newGridTheme?._startUse({\n        loadThemeGoogleFonts: gos.get(\"loadThemeGoogleFonts\"),\n        styleContainer: this.eStyleContainer,\n        cssLayer: this.cssLayer,\n        nonce: this.styleNonce\n      });\n      let eParamsStyle = this.eParamsStyle;\n      if (!eParamsStyle) {\n        eParamsStyle = this.eParamsStyle = _createElement({\n          tag: \"style\"\n        });\n        const styleNonce = this.gos.get(\"styleNonce\");\n        if (styleNonce) {\n          eParamsStyle.setAttribute(\"nonce\", styleNonce);\n        }\n        eGridDiv.appendChild(eParamsStyle);\n      }\n      if (!IS_SSR) {\n        eParamsStyle.textContent = newGridTheme?._getPerGridCss(this.paramsClass) || \"\";\n      }\n      this.applyThemeClasses(eGridDiv);\n      this.fireGridStylesChangedEvent(\"themeChanged\");\n    }\n    if (newGridTheme && getComputedStyle(this.getMeasurementContainer()).getPropertyValue(\"--ag-legacy-styles-loaded\")) {\n      if (themeGridOption) {\n        _error(106);\n      } else {\n        _error(239);\n      }\n    }\n  }\n};\nvar NO_VALUE_SENTINEL = 15538;\n\n// packages/ag-grid-community/src/eventService.ts\nvar EventService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"eventSvc\";\n    this.globalSvc = new LocalEventService();\n  }\n  postConstruct() {\n    const {\n      globalListener,\n      globalSyncListener\n    } = this.beans;\n    if (globalListener) {\n      this.addGlobalListener(globalListener, true);\n    }\n    if (globalSyncListener) {\n      this.addGlobalListener(globalSyncListener, false);\n    }\n  }\n  addEventListener(eventType, listener, async) {\n    this.globalSvc.addEventListener(eventType, listener, async);\n  }\n  removeEventListener(eventType, listener, async) {\n    this.globalSvc.removeEventListener(eventType, listener, async);\n  }\n  addGlobalListener(listener, async = false) {\n    this.globalSvc.addGlobalListener(listener, async);\n  }\n  removeGlobalListener(listener, async = false) {\n    this.globalSvc.removeGlobalListener(listener, async);\n  }\n  /** @deprecated DO NOT FIRE LOCAL EVENTS OFF THE EVENT SERVICE */\n  dispatchLocalEvent() {}\n  dispatchEvent(event) {\n    this.globalSvc.dispatchEvent(_addGridCommonParams(this.gos, event));\n  }\n  dispatchEventOnce(event) {\n    this.globalSvc.dispatchEventOnce(_addGridCommonParams(this.gos, event));\n  }\n};\n\n// packages/ag-grid-community/src/navigation/headerNavigationService.ts\nfunction getHeaderIndexToFocus(beans, column, level) {\n  const columnRowIndex = beans.visibleCols.headerGroupRowCount;\n  if (level >= columnRowIndex) {\n    return {\n      column,\n      headerRowIndex: level\n    };\n  }\n  let parent = column.getParent();\n  while (parent && parent.getProvidedColumnGroup().getLevel() > level) {\n    parent = parent.getParent();\n  }\n  const isColSpanning = column.isSpanHeaderHeight();\n  if (!parent || isColSpanning && parent.isPadding()) {\n    return {\n      column,\n      headerRowIndex: columnRowIndex\n    };\n  }\n  return {\n    column: parent,\n    headerRowIndex: parent.getProvidedColumnGroup().getLevel()\n  };\n}\nvar HeaderNavigationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"headerNavigation\";\n    this.currentHeaderRowWithoutSpan = -1;\n  }\n  postConstruct() {\n    const beans = this.beans;\n    beans.ctrlsSvc.whenReady(this, p => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n    const eDocument = _getDocument(beans);\n    this.addManagedElementListeners(eDocument, {\n      mousedown: () => {\n        this.currentHeaderRowWithoutSpan = -1;\n      }\n    });\n  }\n  getHeaderPositionForColumn(colKey, floatingFilter) {\n    let column;\n    const {\n      colModel,\n      colGroupSvc,\n      ctrlsSvc\n    } = this.beans;\n    if (typeof colKey === \"string\") {\n      column = colModel.getCol(colKey);\n      if (!column) {\n        column = colGroupSvc?.getColumnGroup(colKey) ?? null;\n      }\n    } else {\n      column = colKey;\n    }\n    if (!column) {\n      return null;\n    }\n    const centerHeaderContainer = ctrlsSvc.getHeaderRowContainerCtrl();\n    const allCtrls = centerHeaderContainer?.getAllCtrls();\n    const isFloatingFilterVisible = _last(allCtrls || []).type === \"filter\";\n    const headerRowCount = getFocusHeaderRowCount(this.beans) - 1;\n    let row = -1;\n    let col = column;\n    while (col) {\n      row++;\n      col = col.getParent();\n    }\n    let headerRowIndex = row;\n    if (floatingFilter && isFloatingFilterVisible && headerRowIndex === headerRowCount - 1) {\n      headerRowIndex++;\n    }\n    return headerRowIndex === -1 ? null : {\n      headerRowIndex,\n      column\n    };\n  }\n  /*\n   * This method navigates grid header vertically\n   * @return {boolean} true to preventDefault on the event that caused this navigation.\n   */\n  navigateVertically(direction, event) {\n    const {\n      focusSvc,\n      visibleCols\n    } = this.beans;\n    const {\n      focusedHeader\n    } = focusSvc;\n    if (!focusedHeader) {\n      return false;\n    }\n    const {\n      headerRowIndex\n    } = focusedHeader;\n    const column = focusedHeader.column;\n    const rowLen = getFocusHeaderRowCount(this.beans);\n    const currentRowType = this.getHeaderRowType(headerRowIndex);\n    const columnHeaderRowIndex = visibleCols.headerGroupRowCount;\n    let {\n      headerRowIndex: nextRow,\n      column: nextFocusColumn,\n      headerRowIndexWithoutSpan\n    } = direction === \"UP\" ? getColumnVisibleParent(currentRowType, column, headerRowIndex) : getColumnVisibleChild(column, headerRowIndex, columnHeaderRowIndex);\n    let skipColumn = false;\n    if (nextRow < 0) {\n      nextRow = 0;\n      nextFocusColumn = column;\n      skipColumn = true;\n    }\n    if (nextRow >= rowLen) {\n      nextRow = -1;\n      this.currentHeaderRowWithoutSpan = -1;\n    } else if (headerRowIndexWithoutSpan !== void 0) {\n      this.currentHeaderRowWithoutSpan = headerRowIndexWithoutSpan;\n    }\n    if (!skipColumn && !nextFocusColumn) {\n      return false;\n    }\n    return focusSvc.focusHeaderPosition({\n      headerPosition: {\n        headerRowIndex: nextRow,\n        column: nextFocusColumn\n      },\n      allowUserOverride: true,\n      event\n    });\n  }\n  /*\n   * This method navigates grid header horizontally\n   * @returns {boolean} true to preventDefault on the event that caused this navigation.\n   */\n  navigateHorizontally(direction, fromTab = false, event) {\n    const {\n      focusSvc,\n      gos\n    } = this.beans;\n    const focusedHeader = {\n      ...focusSvc.focusedHeader\n    };\n    let nextHeader;\n    let normalisedDirection;\n    if (this.currentHeaderRowWithoutSpan !== -1) {\n      focusedHeader.headerRowIndex = this.currentHeaderRowWithoutSpan;\n    } else {\n      this.currentHeaderRowWithoutSpan = focusedHeader.headerRowIndex;\n    }\n    if (direction === \"LEFT\" !== gos.get(\"enableRtl\")) {\n      normalisedDirection = \"Before\";\n      nextHeader = this.findHeader(focusedHeader, normalisedDirection);\n    } else {\n      normalisedDirection = \"After\";\n      nextHeader = this.findHeader(focusedHeader, normalisedDirection);\n    }\n    const userFunc = gos.getCallback(\"tabToNextHeader\");\n    if (fromTab && userFunc) {\n      const wasFocusedFromUserFunc = focusSvc.focusHeaderPositionFromUserFunc({\n        userFunc,\n        headerPosition: nextHeader,\n        direction: normalisedDirection\n      });\n      if (wasFocusedFromUserFunc) {\n        const {\n          headerRowIndex\n        } = focusSvc.focusedHeader || {};\n        if (headerRowIndex != null && headerRowIndex != focusedHeader.headerRowIndex) {\n          this.currentHeaderRowWithoutSpan = headerRowIndex;\n        }\n      }\n      return wasFocusedFromUserFunc;\n    }\n    if (nextHeader || !fromTab) {\n      return focusSvc.focusHeaderPosition({\n        headerPosition: nextHeader,\n        direction: normalisedDirection,\n        fromTab,\n        allowUserOverride: true,\n        event\n      });\n    }\n    return this.focusNextHeaderRow(focusedHeader, normalisedDirection, event);\n  }\n  focusNextHeaderRow(focusedHeader, direction, event) {\n    const beans = this.beans;\n    const currentIndex = focusedHeader.headerRowIndex;\n    let nextFocusedCol = null;\n    let nextRowIndex;\n    const headerRowCount = getFocusHeaderRowCount(beans);\n    const allVisibleCols = this.beans.visibleCols.allCols;\n    if (direction === \"Before\") {\n      if (currentIndex <= 0) {\n        return false;\n      }\n      nextFocusedCol = _last(allVisibleCols);\n      nextRowIndex = currentIndex - 1;\n      this.currentHeaderRowWithoutSpan -= 1;\n    } else {\n      nextFocusedCol = allVisibleCols[0];\n      nextRowIndex = currentIndex + 1;\n      if (this.currentHeaderRowWithoutSpan < headerRowCount) {\n        this.currentHeaderRowWithoutSpan += 1;\n      } else {\n        this.currentHeaderRowWithoutSpan = -1;\n      }\n    }\n    let {\n      column,\n      headerRowIndex\n    } = getHeaderIndexToFocus(this.beans, nextFocusedCol, nextRowIndex);\n    if (headerRowIndex >= headerRowCount) {\n      headerRowIndex = -1;\n    }\n    return beans.focusSvc.focusHeaderPosition({\n      headerPosition: {\n        column,\n        headerRowIndex\n      },\n      direction,\n      fromTab: true,\n      allowUserOverride: true,\n      event\n    });\n  }\n  scrollToColumn(column, direction = \"After\") {\n    if (column.getPinned()) {\n      return;\n    }\n    let columnToScrollTo;\n    if (isColumnGroup(column)) {\n      const columns = column.getDisplayedLeafColumns();\n      columnToScrollTo = direction === \"Before\" ? _last(columns) : columns[0];\n    } else {\n      columnToScrollTo = column;\n    }\n    this.gridBodyCon.scrollFeature.ensureColumnVisible(columnToScrollTo);\n  }\n  findHeader(focusedHeader, direction) {\n    const {\n      colGroupSvc,\n      visibleCols\n    } = this.beans;\n    let currentFocusedColumn = focusedHeader.column;\n    if (currentFocusedColumn instanceof AgColumnGroup) {\n      const leafChildren = currentFocusedColumn.getDisplayedLeafColumns();\n      currentFocusedColumn = direction === \"Before\" ? leafChildren[0] : leafChildren[leafChildren.length - 1];\n    }\n    const nextFocusedCol = direction === \"Before\" ? visibleCols.getColBefore(currentFocusedColumn) : visibleCols.getColAfter(currentFocusedColumn);\n    if (!nextFocusedCol) {\n      return void 0;\n    }\n    const headerGroupRowIndex = visibleCols.headerGroupRowCount;\n    if (focusedHeader.headerRowIndex >= headerGroupRowIndex) {\n      return {\n        headerRowIndex: focusedHeader.headerRowIndex,\n        column: nextFocusedCol\n      };\n    }\n    const groupAtLevel = colGroupSvc?.getColGroupAtLevel(nextFocusedCol, focusedHeader.headerRowIndex);\n    if (!groupAtLevel) {\n      const isSpanningCol = nextFocusedCol instanceof AgColumn && nextFocusedCol.isSpanHeaderHeight();\n      return {\n        headerRowIndex: isSpanningCol ? visibleCols.headerGroupRowCount : focusedHeader.headerRowIndex,\n        column: nextFocusedCol\n      };\n    }\n    if (groupAtLevel.isPadding() && nextFocusedCol.isSpanHeaderHeight()) {\n      return {\n        headerRowIndex: visibleCols.headerGroupRowCount,\n        column: nextFocusedCol\n      };\n    }\n    return {\n      headerRowIndex: focusedHeader.headerRowIndex,\n      column: groupAtLevel ?? nextFocusedCol\n    };\n  }\n  getHeaderRowType(rowIndex) {\n    const centerHeaderContainer = this.beans.ctrlsSvc.getHeaderRowContainerCtrl();\n    if (centerHeaderContainer) {\n      return centerHeaderContainer.getRowType(rowIndex);\n    }\n  }\n};\nfunction getColumnVisibleParent(currentRowType, currentColumn, currentIndex) {\n  const optimisticNextIndex = currentIndex - 1;\n  if (currentRowType !== \"filter\") {\n    const isSpanningCol = currentColumn instanceof AgColumn && currentColumn.isSpanHeaderHeight();\n    let nextVisibleParent = currentColumn.getParent();\n    while (nextVisibleParent && (\n    // skip if row isn't visible or col is padding and spanned\n    nextVisibleParent.getProvidedColumnGroup().getLevel() > optimisticNextIndex || isSpanningCol && nextVisibleParent.isPadding())) {\n      nextVisibleParent = nextVisibleParent.getParent();\n    }\n    if (nextVisibleParent) {\n      if (isSpanningCol) {\n        return {\n          column: nextVisibleParent,\n          headerRowIndex: nextVisibleParent.getProvidedColumnGroup().getLevel(),\n          headerRowIndexWithoutSpan: optimisticNextIndex\n        };\n      } else {\n        return {\n          column: nextVisibleParent,\n          headerRowIndex: optimisticNextIndex,\n          headerRowIndexWithoutSpan: optimisticNextIndex\n        };\n      }\n    }\n  }\n  return {\n    column: currentColumn,\n    headerRowIndex: optimisticNextIndex,\n    headerRowIndexWithoutSpan: optimisticNextIndex\n  };\n}\nfunction getColumnVisibleChild(column, currentIndex, columnHeaderRowIndex) {\n  const optimisticNextIndex = currentIndex + 1;\n  const result = {\n    column,\n    headerRowIndex: optimisticNextIndex,\n    headerRowIndexWithoutSpan: optimisticNextIndex\n  };\n  if (column instanceof AgColumnGroup) {\n    if (optimisticNextIndex >= columnHeaderRowIndex) {\n      return {\n        column: column.getDisplayedLeafColumns()[0],\n        headerRowIndex: columnHeaderRowIndex,\n        headerRowIndexWithoutSpan: optimisticNextIndex\n      };\n    }\n    const children = column.getDisplayedChildren();\n    let firstChild = children[0];\n    if (firstChild instanceof AgColumnGroup && firstChild.isPadding()) {\n      const firstCol = firstChild.getDisplayedLeafColumns()[0];\n      if (firstCol.isSpanHeaderHeight()) {\n        firstChild = firstCol;\n      }\n    }\n    result.column = firstChild;\n    const isSpanningCol = firstChild instanceof AgColumn && firstChild.isSpanHeaderHeight();\n    if (isSpanningCol) {\n      result.headerRowIndex = columnHeaderRowIndex;\n      result.headerRowIndexWithoutSpan = optimisticNextIndex;\n    }\n  }\n  return result;\n}\n\n// packages/ag-grid-community/src/focusService.ts\nvar FocusService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"focusSvc\";\n    /** If a cell was destroyed that previously had focus, focus needs restored when the cell reappears */\n    this.focusFallbackTimeout = null;\n    this.needsFocusRestored = false;\n  }\n  wireBeans(beans) {\n    this.colModel = beans.colModel;\n    this.visibleCols = beans.visibleCols;\n    this.rowRenderer = beans.rowRenderer;\n    this.navigation = beans.navigation;\n    this.filterManager = beans.filterManager;\n    this.overlays = beans.overlays;\n  }\n  postConstruct() {\n    const clearFocusedCellListener = this.clearFocusedCell.bind(this);\n    this.addManagedEventListeners({\n      columnPivotModeChanged: clearFocusedCellListener,\n      newColumnsLoaded: this.onColumnEverythingChanged.bind(this),\n      columnGroupOpened: clearFocusedCellListener,\n      columnRowGroupChanged: clearFocusedCellListener\n    });\n    this.addDestroyFunc(_registerKeyboardFocusEvents(this.beans));\n  }\n  attemptToRecoverFocus() {\n    this.needsFocusRestored = true;\n    if (this.focusFallbackTimeout != null) {\n      clearTimeout(this.focusFallbackTimeout);\n    }\n    this.focusFallbackTimeout = window.setTimeout(this.setFocusRecovered.bind(this), 100);\n  }\n  setFocusRecovered() {\n    this.needsFocusRestored = false;\n    if (this.focusFallbackTimeout != null) {\n      clearTimeout(this.focusFallbackTimeout);\n      this.focusFallbackTimeout = null;\n    }\n  }\n  /**\n   * Specifies whether to take focus, as grid either already has focus, or lost it due\n   * to a destroyed cell\n   * @returns true if the grid should re-take focus, otherwise false\n   */\n  shouldTakeFocus() {\n    if (this.gos.get(\"suppressFocusAfterRefresh\")) {\n      this.setFocusRecovered();\n      return false;\n    }\n    if (this.needsFocusRestored) {\n      this.setFocusRecovered();\n      return true;\n    }\n    return this.doesRowOrCellHaveBrowserFocus();\n  }\n  onColumnEverythingChanged() {\n    if (!this.focusedCell) {\n      return;\n    }\n    const col = this.focusedCell.column;\n    const colFromColumnModel = this.colModel.getCol(col.getId());\n    if (col !== colFromColumnModel) {\n      this.clearFocusedCell();\n    }\n  }\n  // we check if the browser is focusing something, and if it is, and\n  // it's the cell we think is focused, then return the cell. so this\n  // methods returns the cell if a) we think it has focus and b) the\n  // browser thinks it has focus. this then returns nothing if we\n  // first focus a cell, then second click outside the grid, as then the\n  // grid cell will still be focused as far as the grid is concerned,\n  // however the browser focus will have moved somewhere else.\n  getFocusCellToUseAfterRefresh() {\n    const {\n      gos,\n      focusedCell\n    } = this;\n    if (gos.get(\"suppressFocusAfterRefresh\") || gos.get(\"suppressCellFocus\") || !focusedCell) {\n      return null;\n    }\n    if (!this.doesRowOrCellHaveBrowserFocus()) {\n      return null;\n    }\n    return focusedCell;\n  }\n  getFocusHeaderToUseAfterRefresh() {\n    if (this.gos.get(\"suppressFocusAfterRefresh\") || !this.focusedHeader) {\n      return null;\n    }\n    if (!this.isDomDataPresentInHierarchy(_getActiveDomElement(this.beans), DOM_DATA_KEY_HEADER_CTRL)) {\n      return null;\n    }\n    return this.focusedHeader;\n  }\n  /**\n   * Check for both cells and rows, as a row might be destroyed and the dom data removed before the cell if the\n   * row is animating out.\n   */\n  doesRowOrCellHaveBrowserFocus() {\n    const activeElement = _getActiveDomElement(this.beans);\n    if (this.isDomDataPresentInHierarchy(activeElement, DOM_DATA_KEY_CELL_CTRL)) {\n      return true;\n    }\n    return this.isDomDataPresentInHierarchy(activeElement, DOM_DATA_KEY_ROW_CTRL);\n  }\n  isDomDataPresentInHierarchy(eBrowserCell, key) {\n    let ePointer = eBrowserCell;\n    while (ePointer) {\n      const data = _getDomData(this.gos, ePointer, key);\n      if (data) {\n        return true;\n      }\n      ePointer = ePointer.parentNode;\n    }\n    return false;\n  }\n  getFocusedCell() {\n    return this.focusedCell;\n  }\n  getFocusEventParams(focusedCellPosition) {\n    const {\n      rowIndex,\n      rowPinned,\n      column\n    } = focusedCellPosition;\n    const params = {\n      rowIndex,\n      rowPinned,\n      column,\n      isFullWidthCell: false\n    };\n    const rowCtrl = this.rowRenderer.getRowByPosition({\n      rowIndex,\n      rowPinned\n    });\n    if (rowCtrl) {\n      params.isFullWidthCell = rowCtrl.isFullWidth();\n    }\n    return params;\n  }\n  clearFocusedCell() {\n    if (this.focusedCell == null) {\n      return;\n    }\n    const focusEventParams = this.getFocusEventParams(this.focusedCell);\n    this.focusedCell = null;\n    this.eventSvc.dispatchEvent({\n      type: \"cellFocusCleared\",\n      ...focusEventParams\n    });\n  }\n  setFocusedCell(params) {\n    this.setFocusRecovered();\n    const {\n      column,\n      rowIndex,\n      rowPinned,\n      forceBrowserFocus = false,\n      preventScrollOnBrowserFocus = false,\n      sourceEvent\n    } = params;\n    const gridColumn = this.colModel.getCol(column);\n    if (!gridColumn) {\n      this.focusedCell = null;\n      return;\n    }\n    this.focusedCell = {\n      rowIndex,\n      rowPinned: _makeNull(rowPinned),\n      column: gridColumn\n    };\n    const focusEventParams = this.getFocusEventParams(this.focusedCell);\n    this.eventSvc.dispatchEvent({\n      type: \"cellFocused\",\n      ...focusEventParams,\n      ...(this.previousCellFocusParams && {\n        previousParams: this.previousCellFocusParams\n      }),\n      forceBrowserFocus,\n      preventScrollOnBrowserFocus,\n      sourceEvent\n    });\n    this.previousCellFocusParams = focusEventParams;\n  }\n  isCellFocused(cellPosition) {\n    if (this.focusedCell == null) {\n      return false;\n    }\n    return _areCellsEqual(cellPosition, this.focusedCell);\n  }\n  isHeaderWrapperFocused(headerCtrl) {\n    if (this.focusedHeader == null) {\n      return false;\n    }\n    const {\n      column,\n      rowCtrl: {\n        rowIndex: headerRowIndex,\n        pinned\n      }\n    } = headerCtrl;\n    const {\n      column: focusedColumn,\n      headerRowIndex: focusedHeaderRowIndex\n    } = this.focusedHeader;\n    return column === focusedColumn && headerRowIndex === focusedHeaderRowIndex && pinned == focusedColumn.getPinned();\n  }\n  focusHeaderPosition(params) {\n    this.setFocusRecovered();\n    if (_isHeaderFocusSuppressed(this.beans)) {\n      return false;\n    }\n    const {\n      direction,\n      fromTab,\n      allowUserOverride,\n      event,\n      fromCell,\n      rowWithoutSpanValue\n    } = params;\n    let {\n      headerPosition\n    } = params;\n    if (fromCell && this.filterManager?.isAdvFilterHeaderActive()) {\n      return this.focusAdvancedFilter(headerPosition);\n    }\n    if (allowUserOverride) {\n      const currentPosition = this.focusedHeader;\n      const headerRowCount = getFocusHeaderRowCount(this.beans);\n      if (fromTab) {\n        const userFunc = this.gos.getCallback(\"tabToNextHeader\");\n        if (userFunc) {\n          headerPosition = this.getHeaderPositionFromUserFunc({\n            userFunc,\n            direction,\n            currentPosition,\n            headerPosition,\n            headerRowCount\n          });\n        }\n      } else {\n        const userFunc = this.gos.getCallback(\"navigateToNextHeader\");\n        if (userFunc && event) {\n          const params2 = {\n            key: event.key,\n            previousHeaderPosition: currentPosition,\n            nextHeaderPosition: headerPosition,\n            headerRowCount,\n            event\n          };\n          headerPosition = userFunc(params2);\n        }\n      }\n    }\n    if (!headerPosition) {\n      return false;\n    }\n    return this.focusProvidedHeaderPosition({\n      headerPosition,\n      direction,\n      event,\n      fromCell,\n      rowWithoutSpanValue\n    });\n  }\n  focusHeaderPositionFromUserFunc(params) {\n    if (_isHeaderFocusSuppressed(this.beans)) {\n      return false;\n    }\n    const {\n      userFunc,\n      headerPosition,\n      direction,\n      event\n    } = params;\n    const currentPosition = this.focusedHeader;\n    const headerRowCount = getFocusHeaderRowCount(this.beans);\n    const newHeaderPosition = this.getHeaderPositionFromUserFunc({\n      userFunc,\n      direction,\n      currentPosition,\n      headerPosition,\n      headerRowCount\n    });\n    return !!newHeaderPosition && this.focusProvidedHeaderPosition({\n      headerPosition: newHeaderPosition,\n      direction,\n      event\n    });\n  }\n  getHeaderPositionFromUserFunc(params) {\n    const {\n      userFunc,\n      direction,\n      currentPosition,\n      headerPosition,\n      headerRowCount\n    } = params;\n    const userFuncParams = {\n      backwards: direction === \"Before\",\n      previousHeaderPosition: currentPosition,\n      nextHeaderPosition: headerPosition,\n      headerRowCount\n    };\n    const userResult = userFunc(userFuncParams);\n    if (userResult === true) {\n      return currentPosition;\n    }\n    if (userResult === false) {\n      return null;\n    }\n    return userResult;\n  }\n  focusProvidedHeaderPosition(params) {\n    const {\n      headerPosition,\n      direction,\n      fromCell,\n      rowWithoutSpanValue,\n      event\n    } = params;\n    const {\n      column,\n      headerRowIndex\n    } = headerPosition;\n    const {\n      filterManager,\n      ctrlsSvc,\n      headerNavigation\n    } = this.beans;\n    if (headerRowIndex === -1) {\n      if (filterManager?.isAdvFilterHeaderActive()) {\n        return this.focusAdvancedFilter(headerPosition);\n      }\n      return this.focusGridView({\n        column,\n        event\n      });\n    }\n    headerNavigation?.scrollToColumn(column, direction);\n    const headerRowContainerCtrl = ctrlsSvc.getHeaderRowContainerCtrl(column.getPinned());\n    const focusSuccess = headerRowContainerCtrl?.focusHeader(headerPosition.headerRowIndex, column, event) || false;\n    if (headerNavigation && focusSuccess && (rowWithoutSpanValue != null || fromCell)) {\n      headerNavigation.currentHeaderRowWithoutSpan = rowWithoutSpanValue ?? -1;\n    }\n    return focusSuccess;\n  }\n  focusFirstHeader() {\n    if (this.overlays?.isExclusive() && this.focusOverlay()) {\n      return true;\n    }\n    const firstColumn = this.visibleCols.allCols[0];\n    if (!firstColumn) {\n      return false;\n    }\n    const headerPosition = getHeaderIndexToFocus(this.beans, firstColumn, 0);\n    return this.focusHeaderPosition({\n      headerPosition,\n      rowWithoutSpanValue: 0\n    });\n  }\n  focusLastHeader(event) {\n    if (this.overlays?.isExclusive() && this.focusOverlay(true)) {\n      return true;\n    }\n    const headerRowIndex = getFocusHeaderRowCount(this.beans) - 1;\n    const column = _last(this.visibleCols.allCols);\n    return this.focusHeaderPosition({\n      headerPosition: {\n        headerRowIndex,\n        column\n      },\n      rowWithoutSpanValue: -1,\n      event\n    });\n  }\n  focusPreviousFromFirstCell(event) {\n    if (this.filterManager?.isAdvFilterHeaderActive()) {\n      return this.focusAdvancedFilter(null);\n    }\n    return this.focusLastHeader(event);\n  }\n  isAnyCellFocused() {\n    return !!this.focusedCell;\n  }\n  isRowFocused(rowIndex, rowPinnedType) {\n    if (this.focusedCell == null) {\n      return false;\n    }\n    return this.focusedCell.rowIndex === rowIndex && this.focusedCell.rowPinned === _makeNull(rowPinnedType);\n  }\n  focusOverlay(backwards) {\n    const overlayGui = this.overlays?.isVisible() && this.overlays.eWrapper?.getGui();\n    return !!overlayGui && _focusInto(overlayGui, backwards);\n  }\n  focusGridView(params) {\n    const {\n      backwards = false,\n      canFocusOverlay = true,\n      event\n    } = params;\n    if (this.overlays?.isExclusive()) {\n      return canFocusOverlay && this.focusOverlay(backwards);\n    }\n    if (_isCellFocusSuppressed(this.beans)) {\n      if (backwards) {\n        if (!_isHeaderFocusSuppressed(this.beans)) {\n          return this.focusLastHeader();\n        }\n      }\n      if (canFocusOverlay && this.focusOverlay(backwards)) {\n        return true;\n      }\n      if (backwards) {\n        return false;\n      }\n      return _focusNextGridCoreContainer(this.beans, backwards);\n    }\n    const nextRow = backwards ? _getLastRow(this.beans) : _getFirstRow(this.beans);\n    if (nextRow) {\n      const column = params.column ?? this.focusedHeader?.column;\n      const {\n        rowIndex,\n        rowPinned\n      } = nextRow;\n      const rowNode = _getRowNode(this.beans, nextRow);\n      if (!column || !rowNode || rowIndex == null) {\n        return false;\n      }\n      if (column.isSuppressNavigable(rowNode)) {\n        const isRtl = this.gos.get(\"enableRtl\");\n        let key;\n        if (!event || event.key === KeyCode.TAB) {\n          key = isRtl ? KeyCode.LEFT : KeyCode.RIGHT;\n        } else {\n          key = event.key;\n        }\n        this.beans.navigation?.navigateToNextCell(null, key, {\n          rowIndex,\n          column,\n          rowPinned: rowPinned || null\n        }, true);\n        return true;\n      }\n      this.navigation?.ensureCellVisible({\n        rowIndex,\n        column,\n        rowPinned\n      });\n      if (backwards) {\n        const rowCtrl = this.rowRenderer.getRowByPosition(nextRow);\n        if (rowCtrl?.isFullWidth() && this.navigation?.tryToFocusFullWidthRow(nextRow, backwards)) {\n          return true;\n        }\n      }\n      this.setFocusedCell({\n        rowIndex,\n        column,\n        rowPinned: _makeNull(rowPinned),\n        forceBrowserFocus: true\n      });\n      this.beans.rangeSvc?.setRangeToCell({\n        rowIndex,\n        rowPinned,\n        column\n      });\n      return true;\n    }\n    if (canFocusOverlay && this.focusOverlay(backwards)) {\n      return true;\n    }\n    if (backwards && this.focusLastHeader()) {\n      return true;\n    }\n    return false;\n  }\n  focusAdvancedFilter(position) {\n    this.advFilterFocusColumn = position?.column;\n    return this.beans.advancedFilter?.getCtrl().focusHeaderComp() ?? false;\n  }\n  focusNextFromAdvancedFilter(backwards, forceFirstColumn) {\n    const column = (forceFirstColumn ? void 0 : this.advFilterFocusColumn) ?? this.visibleCols.allCols?.[0];\n    if (backwards) {\n      return this.focusHeaderPosition({\n        headerPosition: {\n          column,\n          headerRowIndex: getFocusHeaderRowCount(this.beans) - 1\n        }\n      });\n    } else {\n      return this.focusGridView({\n        column\n      });\n    }\n  }\n  clearAdvancedFilterColumn() {\n    this.advFilterFocusColumn = void 0;\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/scrollVisibleService.ts\nvar ScrollVisibleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"scrollVisibleSvc\";\n  }\n  wireBeans(beans) {\n    this.ctrlsSvc = beans.ctrlsSvc;\n    this.colAnimation = beans.colAnimation;\n  }\n  postConstruct() {\n    this.getScrollbarWidth();\n    this.addManagedEventListeners({\n      displayedColumnsChanged: this.updateScrollVisible.bind(this),\n      displayedColumnsWidthChanged: this.updateScrollVisible.bind(this)\n    });\n  }\n  updateScrollVisible() {\n    const {\n      colAnimation\n    } = this;\n    if (colAnimation?.isActive()) {\n      colAnimation.executeLaterVMTurn(() => {\n        colAnimation.executeLaterVMTurn(() => this.updateScrollVisibleImpl());\n      });\n    } else {\n      this.updateScrollVisibleImpl();\n    }\n  }\n  updateScrollVisibleImpl() {\n    const centerRowCtrl = this.ctrlsSvc.get(\"center\");\n    if (!centerRowCtrl || this.colAnimation?.isActive()) {\n      return;\n    }\n    const params = {\n      horizontalScrollShowing: centerRowCtrl.isHorizontalScrollShowing(),\n      verticalScrollShowing: this.verticalScrollShowing\n    };\n    this.setScrollsVisible(params);\n    this.updateScrollGap();\n  }\n  updateScrollGap() {\n    const centerRowCtrl = this.ctrlsSvc.get(\"center\");\n    const horizontalGap = centerRowCtrl.hasHorizontalScrollGap();\n    const verticalGap = centerRowCtrl.hasVerticalScrollGap();\n    const atLeastOneDifferent = this.horizontalScrollGap !== horizontalGap || this.verticalScrollGap !== verticalGap;\n    if (atLeastOneDifferent) {\n      this.horizontalScrollGap = horizontalGap;\n      this.verticalScrollGap = verticalGap;\n      this.eventSvc.dispatchEvent({\n        type: \"scrollGapChanged\"\n      });\n    }\n  }\n  setScrollsVisible(params) {\n    const atLeastOneDifferent = this.horizontalScrollShowing !== params.horizontalScrollShowing || this.verticalScrollShowing !== params.verticalScrollShowing;\n    if (atLeastOneDifferent) {\n      this.horizontalScrollShowing = params.horizontalScrollShowing;\n      this.verticalScrollShowing = params.verticalScrollShowing;\n      this.eventSvc.dispatchEvent({\n        type: \"scrollVisibilityChanged\"\n      });\n    }\n  }\n  // the user might be using some non-standard scrollbar, eg a scrollbar that has zero\n  // width and overlays (like the Safari scrollbar, but presented in Chrome). so we\n  // allow the user to provide the scroll width before we work it out.\n  getScrollbarWidth() {\n    if (this.scrollbarWidth == null) {\n      const gridOptionsScrollbarWidth = this.gos.get(\"scrollbarWidth\");\n      const useGridOptions = typeof gridOptionsScrollbarWidth === \"number\" && gridOptionsScrollbarWidth >= 0;\n      const scrollbarWidth = useGridOptions ? gridOptionsScrollbarWidth : _getScrollbarWidth();\n      if (scrollbarWidth != null) {\n        this.scrollbarWidth = scrollbarWidth;\n        this.eventSvc.dispatchEvent({\n          type: \"scrollbarWidthChanged\"\n        });\n      }\n    }\n    return this.scrollbarWidth;\n  }\n};\n\n// packages/ag-grid-community/src/gridDestroyService.ts\nvar GridDestroyService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"gridDestroySvc\";\n    this.destroyCalled = false;\n  }\n  destroy() {\n    if (this.destroyCalled) {\n      return;\n    }\n    const {\n      stateSvc,\n      ctrlsSvc,\n      context\n    } = this.beans;\n    this.eventSvc.dispatchEvent({\n      type: \"gridPreDestroyed\",\n      state: stateSvc?.getState() ?? {}\n    });\n    this.destroyCalled = true;\n    ctrlsSvc.get(\"gridCtrl\")?.destroyGridUi();\n    context.destroy();\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/events.ts\nvar ALWAYS_SYNC_GLOBAL_EVENTS = /* @__PURE__ */new Set([\"gridPreDestroyed\", \"fillStart\", \"pasteStart\"]);\n\n// packages/ag-grid-community/src/eventTypes.ts\nvar _PUBLIC_EVENTS = [\"columnEverythingChanged\", \"newColumnsLoaded\", \"columnPivotModeChanged\", \"pivotMaxColumnsExceeded\", \"columnRowGroupChanged\", \"expandOrCollapseAll\", \"columnPivotChanged\", \"gridColumnsChanged\", \"columnValueChanged\", \"columnMoved\", \"columnVisible\", \"columnPinned\", \"columnGroupOpened\", \"columnResized\", \"displayedColumnsChanged\", \"virtualColumnsChanged\", \"columnHeaderMouseOver\", \"columnHeaderMouseLeave\", \"columnHeaderClicked\", \"columnHeaderContextMenu\", \"asyncTransactionsFlushed\", \"rowGroupOpened\", \"rowDataUpdated\", \"pinnedRowDataChanged\", \"pinnedRowsChanged\", \"rangeSelectionChanged\", \"cellSelectionChanged\", \"chartCreated\", \"chartRangeSelectionChanged\", \"chartOptionsChanged\", \"chartDestroyed\", \"toolPanelVisibleChanged\", \"toolPanelSizeChanged\", \"modelUpdated\", \"cutStart\", \"cutEnd\", \"pasteStart\", \"pasteEnd\", \"fillStart\", \"fillEnd\", \"cellSelectionDeleteStart\", \"cellSelectionDeleteEnd\", \"rangeDeleteStart\", \"rangeDeleteEnd\", \"undoStarted\", \"undoEnded\", \"redoStarted\", \"redoEnded\", \"cellClicked\", \"cellDoubleClicked\", \"cellMouseDown\", \"cellContextMenu\", \"cellValueChanged\", \"cellEditRequest\", \"rowValueChanged\", \"headerFocused\", \"cellFocused\", \"rowSelected\", \"selectionChanged\", \"tooltipShow\", \"tooltipHide\", \"cellKeyDown\", \"cellMouseOver\", \"cellMouseOut\", \"filterChanged\", \"filterModified\", \"filterUiChanged\", \"filterOpened\", \"floatingFilterUiChanged\", \"advancedFilterBuilderVisibleChanged\", \"sortChanged\", \"virtualRowRemoved\", \"rowClicked\", \"rowDoubleClicked\", \"gridReady\", \"gridPreDestroyed\", \"gridSizeChanged\", \"viewportChanged\", \"firstDataRendered\", \"dragStarted\", \"dragStopped\", \"dragCancelled\", \"rowEditingStarted\", \"rowEditingStopped\", \"cellEditingStarted\", \"cellEditingStopped\", \"bodyScroll\", \"bodyScrollEnd\", \"paginationChanged\", \"componentStateChanged\", \"storeRefreshed\", \"stateUpdated\", \"columnMenuVisibleChanged\", \"contextMenuVisibleChanged\", \"rowDragEnter\", \"rowDragMove\", \"rowDragLeave\", \"rowDragEnd\", \"rowDragCancel\", \"findChanged\", \"rowResizeStarted\", \"rowResizeEnded\", \"columnsReset\", \"bulkEditingStarted\", \"bulkEditingStopped\", \"batchEditingStarted\", \"batchEditingStopped\"];\nvar _INTERNAL_EVENTS = [\"scrollbarWidthChanged\", \"keyShortcutChangedCellStart\", \"keyShortcutChangedCellEnd\", \"pinnedHeightChanged\", \"cellFocusCleared\", \"fullWidthRowFocused\", \"checkboxChanged\", \"heightScaleChanged\", \"suppressMovableColumns\", \"suppressMenuHide\", \"suppressFieldDotNotation\", \"columnPanelItemDragStart\", \"columnPanelItemDragEnd\", \"bodyHeightChanged\", \"columnContainerWidthChanged\", \"displayedColumnsWidthChanged\", \"scrollVisibilityChanged\", \"scrollGapChanged\", \"columnHoverChanged\", \"flashCells\", \"paginationPixelOffsetChanged\", \"displayedRowsChanged\", \"leftPinnedWidthChanged\", \"rightPinnedWidthChanged\", \"rowContainerHeightChanged\", \"headerHeightChanged\", \"columnGroupHeaderHeightChanged\", \"columnHeaderHeightChanged\", \"gridStylesChanged\", \"storeUpdated\", \"filterDestroyed\", \"rowDataUpdateStarted\", \"rowCountReady\", \"advancedFilterEnabledChanged\", \"dataTypesInferred\", \"fieldValueChanged\", \"fieldPickerValueSelected\", \"richSelectListRowSelected\", \"sideBarUpdated\", \"alignedGridScroll\", \"alignedGridColumn\", \"gridOptionsChanged\", \"chartTitleEdit\", \"recalculateRowBounds\", \"stickyTopOffsetChanged\", \"overlayExclusiveChanged\", \"rowNodeDataChanged\", \"cellEditValuesChanged\", \"filterSwitched\", \"filterClosed\", \"headerRowsChanged\"];\nvar _GET_ALL_EVENTS = () => [..._PUBLIC_EVENTS, ..._INTERNAL_EVENTS];\n\n// packages/ag-grid-community/src/publicEventHandlersMap.ts\nvar _PUBLIC_EVENT_HANDLERS_MAP = _PUBLIC_EVENTS.reduce((mem, ev) => {\n  mem[ev] = _getCallbackForEvent(ev);\n  return mem;\n}, {});\n\n// packages/ag-grid-community/src/sort/sortIndicatorComp.ts\nvar makeIconParams = (dataRefSuffix, classSuffix) => ({\n  tag: \"span\",\n  ref: `eSort${dataRefSuffix}`,\n  cls: `ag-sort-indicator-icon ag-sort-${classSuffix} ag-hidden`,\n  attrs: {\n    \"aria-hidden\": \"true\"\n  }\n});\nvar SortIndicatorElement = {\n  tag: \"span\",\n  cls: \"ag-sort-indicator-container\",\n  children: [makeIconParams(\"Order\", \"order\"), makeIconParams(\"Asc\", \"ascending-icon\"), makeIconParams(\"Desc\", \"descending-icon\"), makeIconParams(\"Mixed\", \"mixed-icon\"), makeIconParams(\"None\", \"none-icon\")]\n};\nvar SortIndicatorComp = class extends Component {\n  constructor(skipTemplate) {\n    super();\n    // Elements might by undefined when the user provides a custom template\n    this.eSortOrder = RefPlaceholder;\n    this.eSortAsc = RefPlaceholder;\n    this.eSortDesc = RefPlaceholder;\n    this.eSortMixed = RefPlaceholder;\n    this.eSortNone = RefPlaceholder;\n    if (!skipTemplate) {\n      this.setTemplate(SortIndicatorElement);\n    }\n  }\n  attachCustomElements(eSortOrder, eSortAsc, eSortDesc, eSortMixed, eSortNone) {\n    this.eSortOrder = eSortOrder;\n    this.eSortAsc = eSortAsc;\n    this.eSortDesc = eSortDesc;\n    this.eSortMixed = eSortMixed;\n    this.eSortNone = eSortNone;\n  }\n  setupSort(column, suppressOrder = false) {\n    this.column = column;\n    this.suppressOrder = suppressOrder;\n    this.setupMultiSortIndicator();\n    if (!column.isSortable() && !column.getColDef().showRowGroup) {\n      return;\n    }\n    this.addInIcon(\"sortAscending\", this.eSortAsc, column);\n    this.addInIcon(\"sortDescending\", this.eSortDesc, column);\n    this.addInIcon(\"sortUnSort\", this.eSortNone, column);\n    const updateIcons = this.updateIcons.bind(this);\n    const sortUpdated = this.onSortChanged.bind(this);\n    this.addManagedPropertyListener(\"unSortIcon\", updateIcons);\n    this.addManagedEventListeners({\n      newColumnsLoaded: updateIcons,\n      // Watch global events, as row group columns can effect their display column.\n      sortChanged: sortUpdated,\n      // when grouping changes so can sort indexes and icons\n      columnRowGroupChanged: sortUpdated\n    });\n    this.onSortChanged();\n  }\n  addInIcon(iconName, eParent, column) {\n    if (eParent == null) {\n      return;\n    }\n    const eIcon = _createIconNoSpan(iconName, this.beans, column);\n    if (eIcon) {\n      eParent.appendChild(eIcon);\n    }\n  }\n  onSortChanged() {\n    this.updateIcons();\n    if (!this.suppressOrder) {\n      this.updateSortOrder();\n    }\n  }\n  updateIcons() {\n    const {\n      eSortAsc,\n      eSortDesc,\n      eSortNone,\n      column,\n      gos,\n      beans\n    } = this;\n    const sortDirection = beans.sortSvc.getDisplaySortForColumn(column);\n    if (eSortAsc) {\n      const isAscending = sortDirection === \"asc\";\n      _setDisplayed(eSortAsc, isAscending, {\n        skipAriaHidden: true\n      });\n    }\n    if (eSortDesc) {\n      const isDescending = sortDirection === \"desc\";\n      _setDisplayed(eSortDesc, isDescending, {\n        skipAriaHidden: true\n      });\n    }\n    if (eSortNone) {\n      const alwaysHideNoSort = !column.getColDef().unSortIcon && !gos.get(\"unSortIcon\");\n      const isNone = sortDirection === null || sortDirection === void 0;\n      _setDisplayed(eSortNone, !alwaysHideNoSort && isNone, {\n        skipAriaHidden: true\n      });\n    }\n  }\n  setupMultiSortIndicator() {\n    const {\n      eSortMixed,\n      column,\n      gos\n    } = this;\n    this.addInIcon(\"sortUnSort\", eSortMixed, column);\n    const isColumnShowingRowGroup = column.getColDef().showRowGroup;\n    const areGroupsCoupled = _isColumnsSortingCoupledToGroup(gos);\n    if (areGroupsCoupled && isColumnShowingRowGroup) {\n      this.addManagedEventListeners({\n        // Watch global events, as row group columns can effect their display column.\n        sortChanged: this.updateMultiSortIndicator.bind(this),\n        // when grouping changes so can sort indexes and icons\n        columnRowGroupChanged: this.updateMultiSortIndicator.bind(this)\n      });\n      this.updateMultiSortIndicator();\n    }\n  }\n  updateMultiSortIndicator() {\n    const {\n      eSortMixed,\n      beans,\n      column\n    } = this;\n    if (eSortMixed) {\n      const isMixedSort = beans.sortSvc.getDisplaySortForColumn(column) === \"mixed\";\n      _setDisplayed(eSortMixed, isMixedSort, {\n        skipAriaHidden: true\n      });\n    }\n  }\n  // we listen here for global sort events, NOT column sort events, as we want to do this\n  // when sorting has been set on all column (if we listened just for our col (where we\n  // set the asc / desc icons) then it's possible other cols are yet to get their sorting state.\n  updateSortOrder() {\n    const {\n      eSortOrder,\n      column,\n      beans: {\n        sortSvc\n      }\n    } = this;\n    if (!eSortOrder) {\n      return;\n    }\n    const allColumnsWithSorting = sortSvc.getColumnsWithSortingOrdered();\n    const indexThisCol = sortSvc.getDisplaySortIndexForColumn(column) ?? -1;\n    const moreThanOneColSorting = allColumnsWithSorting.some(col => sortSvc.getDisplaySortIndexForColumn(col) ?? -1 >= 1);\n    const showIndex = indexThisCol >= 0 && moreThanOneColSorting;\n    _setDisplayed(eSortOrder, showIndex, {\n      skipAriaHidden: true\n    });\n    if (indexThisCol >= 0) {\n      eSortOrder.textContent = (indexThisCol + 1).toString();\n    } else {\n      _clearElement(eSortOrder);\n    }\n  }\n};\nvar SortIndicatorSelector = {\n  selector: \"AG-SORT-INDICATOR\",\n  component: SortIndicatorComp\n};\n\n// packages/ag-grid-community/src/sort/sortService.ts\nvar DEFAULT_SORTING_ORDER = [\"asc\", \"desc\", null];\nvar SortService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"sortSvc\";\n  }\n  progressSort(column, multiSort, source) {\n    const nextDirection = this.getNextSortDirection(column);\n    this.setSortForColumn(column, nextDirection, multiSort, source);\n  }\n  progressSortFromEvent(column, event) {\n    const sortUsingCtrl = this.gos.get(\"multiSortKey\") === \"ctrl\";\n    const multiSort = sortUsingCtrl ? event.ctrlKey || event.metaKey : event.shiftKey;\n    this.progressSort(column, multiSort, \"uiColumnSorted\");\n  }\n  setSortForColumn(column, sort, multiSort, source) {\n    if (sort !== \"asc\" && sort !== \"desc\") {\n      sort = null;\n    }\n    const {\n      gos,\n      showRowGroupCols\n    } = this.beans;\n    const isColumnsSortingCoupledToGroup = _isColumnsSortingCoupledToGroup(gos);\n    let columnsToUpdate = [column];\n    if (isColumnsSortingCoupledToGroup) {\n      if (column.getColDef().showRowGroup) {\n        const rowGroupColumns = showRowGroupCols?.getSourceColumnsForGroupColumn?.(column);\n        const sortableRowGroupColumns = rowGroupColumns?.filter(col => col.isSortable());\n        if (sortableRowGroupColumns) {\n          columnsToUpdate = [column, ...sortableRowGroupColumns];\n        }\n      }\n    }\n    columnsToUpdate.forEach(col => this.setColSort(col, sort, source));\n    const doingMultiSort = (multiSort || gos.get(\"alwaysMultiSort\")) && !gos.get(\"suppressMultiSort\");\n    const updatedColumns = [];\n    if (!doingMultiSort) {\n      const clearedColumns = this.clearSortBarTheseColumns(columnsToUpdate, source);\n      updatedColumns.push(...clearedColumns);\n    }\n    this.updateSortIndex(column);\n    updatedColumns.push(...columnsToUpdate);\n    this.dispatchSortChangedEvents(source, updatedColumns);\n  }\n  updateSortIndex(lastColToChange) {\n    const {\n      gos,\n      colModel,\n      showRowGroupCols\n    } = this.beans;\n    const isCoupled = _isColumnsSortingCoupledToGroup(gos);\n    const groupParent = showRowGroupCols?.getShowRowGroupCol(lastColToChange.getId());\n    const lastSortIndexCol = isCoupled ? groupParent || lastColToChange : lastColToChange;\n    const allSortedCols = this.getColumnsWithSortingOrdered();\n    colModel.forAllCols(col => this.setColSortIndex(col, null));\n    const allSortedColsWithoutChangesOrGroups = allSortedCols.filter(col => {\n      if (isCoupled && col.getColDef().showRowGroup) {\n        return false;\n      }\n      return col !== lastSortIndexCol;\n    });\n    const sortedColsWithIndices = lastSortIndexCol.getSort() ? [...allSortedColsWithoutChangesOrGroups, lastSortIndexCol] : allSortedColsWithoutChangesOrGroups;\n    sortedColsWithIndices.forEach((col, idx) => this.setColSortIndex(col, idx));\n  }\n  // gets called by API, so if data changes, use can call this, which will end up\n  // working out the sort order again of the rows.\n  onSortChanged(source, columns) {\n    this.dispatchSortChangedEvents(source, columns);\n  }\n  isSortActive() {\n    let isSorting = false;\n    this.beans.colModel.forAllCols(col => {\n      if (col.getSort()) {\n        isSorting = true;\n      }\n    });\n    return isSorting;\n  }\n  dispatchSortChangedEvents(source, columns) {\n    const event = {\n      type: \"sortChanged\",\n      source\n    };\n    if (columns) {\n      event.columns = columns;\n    }\n    this.eventSvc.dispatchEvent(event);\n  }\n  clearSortBarTheseColumns(columnsToSkip, source) {\n    const clearedColumns = [];\n    this.beans.colModel.forAllCols(columnToClear => {\n      if (!columnsToSkip.includes(columnToClear)) {\n        if (columnToClear.getSort()) {\n          clearedColumns.push(columnToClear);\n        }\n        this.setColSort(columnToClear, void 0, source);\n      }\n    });\n    return clearedColumns;\n  }\n  getNextSortDirection(column) {\n    const sortingOrder = column.getColDef().sortingOrder ?? this.gos.get(\"sortingOrder\") ?? DEFAULT_SORTING_ORDER;\n    const currentIndex = sortingOrder.indexOf(column.getSort());\n    const notInArray = currentIndex < 0;\n    const lastItemInArray = currentIndex == sortingOrder.length - 1;\n    return notInArray || lastItemInArray ? sortingOrder[0] : sortingOrder[currentIndex + 1];\n  }\n  /**\n   * @returns a map of sort indexes for every sorted column, if groups sort primaries then they will have equivalent indices\n   */\n  getIndexedSortMap() {\n    const {\n      gos,\n      colModel,\n      showRowGroupCols,\n      rowGroupColsSvc\n    } = this.beans;\n    let allSortedCols = [];\n    colModel.forAllCols(col => {\n      if (col.getSort()) {\n        allSortedCols.push(col);\n      }\n    });\n    if (colModel.isPivotMode()) {\n      const isSortingLinked = _isColumnsSortingCoupledToGroup(gos);\n      allSortedCols = allSortedCols.filter(col => {\n        const isAggregated = !!col.getAggFunc();\n        const isSecondary = !col.isPrimary();\n        const isGroup = isSortingLinked ? showRowGroupCols?.getShowRowGroupCol(col.getId()) : col.getColDef().showRowGroup;\n        return isAggregated || isSecondary || isGroup;\n      });\n    }\n    const sortedRowGroupCols = rowGroupColsSvc?.columns.filter(col => !!col.getSort()) ?? [];\n    const allColsIndexes = {};\n    allSortedCols.forEach((col, index) => allColsIndexes[col.getId()] = index);\n    allSortedCols.sort((a, b) => {\n      const iA = a.getSortIndex();\n      const iB = b.getSortIndex();\n      if (iA != null && iB != null) {\n        return iA - iB;\n      } else if (iA == null && iB == null) {\n        const posA = allColsIndexes[a.getId()];\n        const posB = allColsIndexes[b.getId()];\n        return posA > posB ? 1 : -1;\n      } else if (iB == null) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    const isSortLinked = _isColumnsSortingCoupledToGroup(gos) && !!sortedRowGroupCols.length;\n    if (isSortLinked) {\n      allSortedCols = [...new Set(\n      // if linked sorting, replace all columns with the display group column for index purposes, and ensure uniqueness\n      allSortedCols.map(col => showRowGroupCols?.getShowRowGroupCol(col.getId()) ?? col))];\n    }\n    const indexMap = /* @__PURE__ */new Map();\n    allSortedCols.forEach((col, idx) => indexMap.set(col, idx));\n    if (isSortLinked) {\n      sortedRowGroupCols.forEach(col => {\n        const groupDisplayCol = showRowGroupCols.getShowRowGroupCol(col.getId());\n        indexMap.set(col, indexMap.get(groupDisplayCol));\n      });\n    }\n    return indexMap;\n  }\n  getColumnsWithSortingOrdered() {\n    return [...this.getIndexedSortMap().entries()].sort(([, idx1], [, idx2]) => idx1 - idx2).map(([col]) => col);\n  }\n  // used by server side row models, to sent sort to server\n  getSortModel() {\n    return this.getColumnsWithSortingOrdered().filter(column => column.getSort()).map(column => ({\n      sort: column.getSort(),\n      colId: column.getId()\n    }));\n  }\n  getSortOptions() {\n    return this.getColumnsWithSortingOrdered().filter(column => column.getSort()).map(column => ({\n      sort: column.getSort(),\n      column\n    }));\n  }\n  canColumnDisplayMixedSort(column) {\n    const isColumnSortCouplingActive = _isColumnsSortingCoupledToGroup(this.gos);\n    const isGroupDisplayColumn = !!column.getColDef().showRowGroup;\n    return isColumnSortCouplingActive && isGroupDisplayColumn;\n  }\n  getDisplaySortForColumn(column) {\n    const linkedColumns = this.beans.showRowGroupCols?.getSourceColumnsForGroupColumn(column);\n    if (!this.canColumnDisplayMixedSort(column) || !linkedColumns?.length) {\n      return column.getSort();\n    }\n    const columnHasUniqueData = column.getColDef().field != null || !!column.getColDef().valueGetter;\n    const sortableColumns = columnHasUniqueData ? [column, ...linkedColumns] : linkedColumns;\n    const firstSort = sortableColumns[0].getSort();\n    const allMatch = sortableColumns.every(col => col.getSort() == firstSort);\n    if (!allMatch) {\n      return \"mixed\";\n    }\n    return firstSort;\n  }\n  getDisplaySortIndexForColumn(column) {\n    return this.getIndexedSortMap().get(column);\n  }\n  setupHeader(comp, column, clickElement) {\n    let lastMovingChanged = 0;\n    comp.addManagedListeners(column, {\n      movingChanged: () => {\n        lastMovingChanged = Date.now();\n      }\n    });\n    if (clickElement) {\n      comp.addManagedElementListeners(clickElement, {\n        click: event => {\n          const moving = column.isMoving();\n          const nowTime = Date.now();\n          const movedRecently = nowTime - lastMovingChanged < 50;\n          const columnMoving = moving || movedRecently;\n          if (!columnMoving) {\n            this.progressSortFromEvent(column, event);\n          }\n        }\n      });\n    }\n    const onSortingChanged = () => {\n      const sort = column.getSort();\n      comp.toggleCss(\"ag-header-cell-sorted-asc\", sort === \"asc\");\n      comp.toggleCss(\"ag-header-cell-sorted-desc\", sort === \"desc\");\n      comp.toggleCss(\"ag-header-cell-sorted-none\", !sort);\n      if (column.getColDef().showRowGroup) {\n        const sourceColumns = this.beans.showRowGroupCols?.getSourceColumnsForGroupColumn(column);\n        const sortDirectionsMatch = sourceColumns?.every(sourceCol => column.getSort() == sourceCol.getSort());\n        const isMultiSorting = !sortDirectionsMatch;\n        comp.toggleCss(\"ag-header-cell-sorted-mixed\", isMultiSorting);\n      }\n    };\n    comp.addManagedEventListeners({\n      sortChanged: onSortingChanged,\n      columnRowGroupChanged: onSortingChanged\n    });\n  }\n  initCol(column) {\n    const {\n      sort,\n      initialSort,\n      sortIndex,\n      initialSortIndex\n    } = column.colDef;\n    if (sort !== void 0) {\n      if (sort === \"asc\" || sort === \"desc\") {\n        column.sort = sort;\n      }\n    } else {\n      if (initialSort === \"asc\" || initialSort === \"desc\") {\n        column.sort = initialSort;\n      }\n    }\n    if (sortIndex !== void 0) {\n      if (sortIndex !== null) {\n        column.sortIndex = sortIndex;\n      }\n    } else {\n      if (initialSortIndex !== null) {\n        column.sortIndex = initialSortIndex;\n      }\n    }\n  }\n  updateColSort(column, sort, source) {\n    if (sort !== void 0) {\n      if (sort === \"desc\" || sort === \"asc\") {\n        this.setColSort(column, sort, source);\n      } else {\n        this.setColSort(column, void 0, source);\n      }\n    }\n  }\n  setColSort(column, sort, source) {\n    if (column.sort !== sort) {\n      column.sort = sort;\n      column.dispatchColEvent(\"sortChanged\", source);\n    }\n    column.dispatchStateUpdatedEvent(\"sort\");\n  }\n  setColSortIndex(column, sortOrder) {\n    column.sortIndex = sortOrder;\n    column.dispatchStateUpdatedEvent(\"sortIndex\");\n  }\n  createSortIndicator(skipTemplate) {\n    return new SortIndicatorComp(skipTemplate);\n  }\n  getSortIndicatorSelector() {\n    return SortIndicatorSelector;\n  }\n};\n\n// packages/ag-grid-community/src/validation/rules/userCompValidations.ts\nvar USER_COMP_MODULES = {\n  agSetColumnFilter: \"SetFilter\",\n  agSetColumnFloatingFilter: \"SetFilter\",\n  agMultiColumnFilter: \"MultiFilter\",\n  agMultiColumnFloatingFilter: \"MultiFilter\",\n  agGroupColumnFilter: \"GroupFilter\",\n  agGroupColumnFloatingFilter: \"GroupFilter\",\n  agGroupCellRenderer: \"GroupCellRenderer\",\n  agGroupRowRenderer: \"GroupCellRenderer\",\n  agRichSelect: \"RichSelect\",\n  agRichSelectCellEditor: \"RichSelect\",\n  agDetailCellRenderer: \"SharedMasterDetail\",\n  agSparklineCellRenderer: \"Sparklines\",\n  agDragAndDropImage: \"SharedDragAndDrop\",\n  agColumnHeader: \"ColumnHeaderComp\",\n  agColumnGroupHeader: \"ColumnGroupHeaderComp\",\n  agSortIndicator: \"Sort\",\n  agAnimateShowChangeCellRenderer: \"HighlightChanges\",\n  agAnimateSlideCellRenderer: \"HighlightChanges\",\n  agLoadingCellRenderer: \"LoadingCellRenderer\",\n  agSkeletonCellRenderer: \"SkeletonCellRenderer\",\n  agCheckboxCellRenderer: \"CheckboxCellRenderer\",\n  agLoadingOverlay: \"Overlay\",\n  agNoRowsOverlay: \"Overlay\",\n  agTooltipComponent: \"Tooltip\",\n  agReadOnlyFloatingFilter: \"CustomFilter\",\n  agTextColumnFilter: \"TextFilter\",\n  agNumberColumnFilter: \"NumberFilter\",\n  agDateColumnFilter: \"DateFilter\",\n  agDateInput: \"DateFilter\",\n  agTextColumnFloatingFilter: \"TextFilter\",\n  agNumberColumnFloatingFilter: \"NumberFilter\",\n  agDateColumnFloatingFilter: \"DateFilter\",\n  agCellEditor: \"TextEditor\",\n  agSelectCellEditor: \"SelectEditor\",\n  agTextCellEditor: \"TextEditor\",\n  agNumberCellEditor: \"NumberEditor\",\n  agDateCellEditor: \"DateEditor\",\n  agDateStringCellEditor: \"DateEditor\",\n  agCheckboxCellEditor: \"CheckboxEditor\",\n  agLargeTextCellEditor: \"LargeTextEditor\",\n  agMenuItem: \"MenuItem\",\n  agColumnsToolPanel: \"ColumnsToolPanel\",\n  agFiltersToolPanel: \"FiltersToolPanel\",\n  agNewFiltersToolPanel: \"NewFiltersToolPanel\",\n  agAggregationComponent: \"StatusBar\",\n  agSelectedRowCountComponent: \"StatusBar\",\n  agTotalRowCountComponent: \"StatusBar\",\n  agFilteredRowCountComponent: \"StatusBar\",\n  agTotalAndFilteredRowCountComponent: \"StatusBar\",\n  agFindCellRenderer: \"Find\"\n};\n\n// packages/ag-grid-community/src/validation/rules/colDefValidations.ts\nvar COLUMN_DEFINITION_DEPRECATIONS = () => ({\n  checkboxSelection: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.checkboxes` in `GridOptions` instead.\"\n  },\n  headerCheckboxSelection: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.headerCheckbox = true` in `GridOptions` instead.\"\n  },\n  headerCheckboxSelectionFilteredOnly: {\n    version: \"32.2\",\n    message: 'Use `rowSelection.selectAll = \"filtered\"` in `GridOptions` instead.'\n  },\n  headerCheckboxSelectionCurrentPageOnly: {\n    version: \"32.2\",\n    message: 'Use `rowSelection.selectAll = \"currentPage\"` in `GridOptions` instead.'\n  },\n  showDisabledCheckboxes: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.hideDisabledCheckboxes = true` in `GridOptions` instead.\"\n  }\n});\nvar COLUMN_DEFINITION_MOD_VALIDATIONS = {\n  aggFunc: \"SharedAggregation\",\n  autoHeight: \"RowAutoHeight\",\n  cellClass: \"CellStyle\",\n  cellClassRules: \"CellStyle\",\n  cellEditor: ({\n    cellEditor,\n    editable\n  }) => {\n    if (!editable) {\n      return null;\n    }\n    if (typeof cellEditor === \"string\") {\n      return USER_COMP_MODULES[cellEditor] ?? \"CustomEditor\";\n    }\n    return \"CustomEditor\";\n  },\n  cellRenderer: ({\n    cellRenderer\n  }) => {\n    if (typeof cellRenderer !== \"string\") {\n      return null;\n    }\n    return USER_COMP_MODULES[cellRenderer];\n  },\n  cellStyle: \"CellStyle\",\n  columnChooserParams: \"ColumnMenu\",\n  contextMenuItems: \"ContextMenu\",\n  dndSource: \"DragAndDrop\",\n  dndSourceOnRowDrag: \"DragAndDrop\",\n  editable: ({\n    editable,\n    cellEditor\n  }) => {\n    if (editable && !cellEditor) {\n      return \"TextEditor\";\n    }\n    return null;\n  },\n  enableCellChangeFlash: \"HighlightChanges\",\n  enablePivot: \"SharedPivot\",\n  enableRowGroup: \"SharedRowGrouping\",\n  enableValue: \"SharedAggregation\",\n  filter: ({\n    filter\n  }) => {\n    if (filter && typeof filter !== \"string\" && typeof filter !== \"boolean\") {\n      return \"CustomFilter\";\n    }\n    if (typeof filter === \"string\") {\n      return USER_COMP_MODULES[filter] ?? \"ColumnFilter\";\n    }\n    return \"ColumnFilter\";\n  },\n  floatingFilter: \"ColumnFilter\",\n  getQuickFilterText: \"QuickFilter\",\n  headerTooltip: \"Tooltip\",\n  mainMenuItems: \"ColumnMenu\",\n  menuTabs: options => {\n    const enterpriseMenuTabs = [\"columnsMenuTab\", \"generalMenuTab\"];\n    if (options.menuTabs?.some(tab => enterpriseMenuTabs.includes(tab))) {\n      return \"ColumnMenu\";\n    }\n    return null;\n  },\n  pivot: \"SharedPivot\",\n  pivotIndex: \"SharedPivot\",\n  rowDrag: \"RowDrag\",\n  rowGroup: \"SharedRowGrouping\",\n  rowGroupIndex: \"SharedRowGrouping\",\n  tooltipField: \"Tooltip\",\n  tooltipValueGetter: \"Tooltip\",\n  spanRows: \"CellSpan\"\n};\nvar COLUMN_DEFINITION_VALIDATIONS = () => {\n  const validations = {\n    autoHeight: {\n      supportedRowModels: [\"clientSide\", \"serverSide\"],\n      validate: (_colDef, {\n        paginationAutoPageSize\n      }) => {\n        if (paginationAutoPageSize) {\n          return \"colDef.autoHeight is not supported with paginationAutoPageSize.\";\n        }\n        return null;\n      }\n    },\n    cellRendererParams: {\n      validate: colDef => {\n        const groupColumn = colDef.rowGroup != null || colDef.rowGroupIndex != null || colDef.cellRenderer === \"agGroupCellRenderer\";\n        if (groupColumn && \"checkbox\" in colDef.cellRendererParams) {\n          return 'Since v33.0, `cellRendererParams.checkbox` has been deprecated. Use `rowSelection.checkboxLocation = \"autoGroupColumn\"` instead.';\n        }\n        return null;\n      }\n    },\n    flex: {\n      validate: (_options, gridOptions) => {\n        if (gridOptions.autoSizeStrategy) {\n          return \"colDef.flex is not supported with gridOptions.autoSizeStrategy\";\n        }\n        return null;\n      }\n    },\n    headerCheckboxSelection: {\n      supportedRowModels: [\"clientSide\", \"serverSide\"],\n      validate: (_options, {\n        rowSelection\n      }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelection is only supported with rowSelection=multiple\"\n    },\n    headerCheckboxSelectionCurrentPageOnly: {\n      supportedRowModels: [\"clientSide\"],\n      validate: (_options, {\n        rowSelection\n      }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionCurrentPageOnly is only supported with rowSelection=multiple\"\n    },\n    headerCheckboxSelectionFilteredOnly: {\n      supportedRowModels: [\"clientSide\"],\n      validate: (_options, {\n        rowSelection\n      }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionFilteredOnly is only supported with rowSelection=multiple\"\n    },\n    headerValueGetter: {\n      validate: _options => {\n        const headerValueGetter = _options.headerValueGetter;\n        if (typeof headerValueGetter === \"function\" || typeof headerValueGetter === \"string\") {\n          return null;\n        }\n        return \"headerValueGetter must be a function or a valid string expression\";\n      }\n    },\n    icons: {\n      validate: ({\n        icons\n      }) => {\n        if (icons) {\n          if (icons[\"smallDown\"]) {\n            return _errMsg(262);\n          }\n          if (icons[\"smallLeft\"]) {\n            return _errMsg(263);\n          }\n          if (icons[\"smallRight\"]) {\n            return _errMsg(264);\n          }\n        }\n        return null;\n      }\n    },\n    sortingOrder: {\n      validate: _options => {\n        const sortingOrder = _options.sortingOrder;\n        if (Array.isArray(sortingOrder) && sortingOrder.length > 0) {\n          const invalidItems = sortingOrder.filter(a => !DEFAULT_SORTING_ORDER.includes(a));\n          if (invalidItems.length > 0) {\n            return `sortingOrder must be an array with elements from [${DEFAULT_SORTING_ORDER.map(toStringWithNullUndefined).join()}], currently it includes [${invalidItems.map(toStringWithNullUndefined).join()}]`;\n          }\n        } else if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\n          return `sortingOrder must be an array with at least one element, currently it's ${sortingOrder}`;\n        }\n        return null;\n      }\n    },\n    type: {\n      validate: _options => {\n        const type = _options.type;\n        if (type instanceof Array) {\n          const invalidArray = type.some(a => typeof a !== \"string\");\n          if (invalidArray) {\n            return \"if colDef.type is supplied an array it should be of type 'string[]'\";\n          }\n          return null;\n        }\n        if (typeof type === \"string\") {\n          return null;\n        }\n        return \"colDef.type should be of type 'string' | 'string[]'\";\n      }\n    },\n    rowSpan: {\n      validate: (_options, {\n        suppressRowTransform\n      }) => {\n        if (!suppressRowTransform) {\n          return \"colDef.rowSpan requires suppressRowTransform to be enabled.\";\n        }\n        return null;\n      }\n    },\n    spanRows: {\n      dependencies: {\n        editable: {\n          required: [false, void 0]\n        },\n        rowDrag: {\n          required: [false, void 0]\n        },\n        colSpan: {\n          required: [void 0]\n        },\n        rowSpan: {\n          required: [void 0]\n        }\n      },\n      validate: (_options, {\n        rowSelection,\n        cellSelection,\n        suppressRowTransform,\n        enableCellSpan,\n        rowDragEntireRow,\n        enableCellTextSelection\n      }) => {\n        if (typeof rowSelection === \"object\") {\n          if (rowSelection?.mode === \"singleRow\" && rowSelection?.enableClickSelection) {\n            return \"colDef.spanRows is not supported with rowSelection.clickSelection\";\n          }\n        }\n        if (cellSelection) {\n          return \"colDef.spanRows is not supported with cellSelection.\";\n        }\n        if (suppressRowTransform) {\n          return \"colDef.spanRows is not supported with suppressRowTransform.\";\n        }\n        if (!enableCellSpan) {\n          return \"colDef.spanRows requires enableCellSpan to be enabled.\";\n        }\n        if (rowDragEntireRow) {\n          return \"colDef.spanRows is not supported with rowDragEntireRow.\";\n        }\n        if (enableCellTextSelection) {\n          return \"colDef.spanRows is not supported with enableCellTextSelection.\";\n        }\n        return null;\n      }\n    }\n  };\n  return validations;\n};\nvar colDefPropertyMap = {\n  headerName: void 0,\n  columnGroupShow: void 0,\n  headerStyle: void 0,\n  headerClass: void 0,\n  toolPanelClass: void 0,\n  headerValueGetter: void 0,\n  pivotKeys: void 0,\n  groupId: void 0,\n  colId: void 0,\n  sort: void 0,\n  initialSort: void 0,\n  field: void 0,\n  type: void 0,\n  cellDataType: void 0,\n  tooltipComponent: void 0,\n  tooltipField: void 0,\n  headerTooltip: void 0,\n  cellClass: void 0,\n  showRowGroup: void 0,\n  filter: void 0,\n  initialAggFunc: void 0,\n  defaultAggFunc: void 0,\n  aggFunc: void 0,\n  pinned: void 0,\n  initialPinned: void 0,\n  chartDataType: void 0,\n  cellAriaRole: void 0,\n  cellEditorPopupPosition: void 0,\n  headerGroupComponent: void 0,\n  headerGroupComponentParams: void 0,\n  cellStyle: void 0,\n  cellRenderer: void 0,\n  cellRendererParams: void 0,\n  cellEditor: void 0,\n  cellEditorParams: void 0,\n  filterParams: void 0,\n  pivotValueColumn: void 0,\n  headerComponent: void 0,\n  headerComponentParams: void 0,\n  floatingFilterComponent: void 0,\n  floatingFilterComponentParams: void 0,\n  tooltipComponentParams: void 0,\n  refData: void 0,\n  columnChooserParams: void 0,\n  children: void 0,\n  sortingOrder: void 0,\n  allowedAggFuncs: void 0,\n  menuTabs: void 0,\n  pivotTotalColumnIds: void 0,\n  cellClassRules: void 0,\n  icons: void 0,\n  sortIndex: void 0,\n  initialSortIndex: void 0,\n  flex: void 0,\n  initialFlex: void 0,\n  width: void 0,\n  initialWidth: void 0,\n  minWidth: void 0,\n  maxWidth: void 0,\n  rowGroupIndex: void 0,\n  initialRowGroupIndex: void 0,\n  pivotIndex: void 0,\n  initialPivotIndex: void 0,\n  suppressColumnsToolPanel: void 0,\n  suppressFiltersToolPanel: void 0,\n  openByDefault: void 0,\n  marryChildren: void 0,\n  suppressStickyLabel: void 0,\n  hide: void 0,\n  initialHide: void 0,\n  rowGroup: void 0,\n  initialRowGroup: void 0,\n  pivot: void 0,\n  initialPivot: void 0,\n  checkboxSelection: void 0,\n  showDisabledCheckboxes: void 0,\n  headerCheckboxSelection: void 0,\n  headerCheckboxSelectionFilteredOnly: void 0,\n  headerCheckboxSelectionCurrentPageOnly: void 0,\n  suppressHeaderMenuButton: void 0,\n  suppressMovable: void 0,\n  lockPosition: void 0,\n  lockVisible: void 0,\n  lockPinned: void 0,\n  unSortIcon: void 0,\n  suppressSizeToFit: void 0,\n  suppressAutoSize: void 0,\n  enableRowGroup: void 0,\n  enablePivot: void 0,\n  enableValue: void 0,\n  editable: void 0,\n  suppressPaste: void 0,\n  suppressNavigable: void 0,\n  enableCellChangeFlash: void 0,\n  rowDrag: void 0,\n  dndSource: void 0,\n  autoHeight: void 0,\n  wrapText: void 0,\n  sortable: void 0,\n  resizable: void 0,\n  singleClickEdit: void 0,\n  floatingFilter: void 0,\n  cellEditorPopup: void 0,\n  suppressFillHandle: void 0,\n  wrapHeaderText: void 0,\n  autoHeaderHeight: void 0,\n  dndSourceOnRowDrag: void 0,\n  valueGetter: void 0,\n  valueSetter: void 0,\n  filterValueGetter: void 0,\n  keyCreator: void 0,\n  valueFormatter: void 0,\n  valueParser: void 0,\n  comparator: void 0,\n  equals: void 0,\n  pivotComparator: void 0,\n  suppressKeyboardEvent: void 0,\n  suppressHeaderKeyboardEvent: void 0,\n  colSpan: void 0,\n  rowSpan: void 0,\n  spanRows: void 0,\n  getQuickFilterText: void 0,\n  onCellValueChanged: void 0,\n  onCellClicked: void 0,\n  onCellDoubleClicked: void 0,\n  onCellContextMenu: void 0,\n  rowDragText: void 0,\n  tooltipValueGetter: void 0,\n  cellRendererSelector: void 0,\n  cellEditorSelector: void 0,\n  suppressSpanHeaderHeight: void 0,\n  useValueFormatterForExport: void 0,\n  useValueParserForImport: void 0,\n  mainMenuItems: void 0,\n  contextMenuItems: void 0,\n  suppressFloatingFilterButton: void 0,\n  suppressHeaderFilterButton: void 0,\n  suppressHeaderContextMenu: void 0,\n  loadingCellRenderer: void 0,\n  loadingCellRendererParams: void 0,\n  loadingCellRendererSelector: void 0,\n  context: void 0,\n  dateComponent: void 0,\n  dateComponentParams: void 0,\n  getFindText: void 0\n};\nvar ALL_PROPERTIES = () => Object.keys(colDefPropertyMap);\nvar COL_DEF_VALIDATORS = () => ({\n  objectName: \"colDef\",\n  allProperties: ALL_PROPERTIES(),\n  docsUrl: \"column-properties/\",\n  deprecations: COLUMN_DEFINITION_DEPRECATIONS(),\n  validations: COLUMN_DEFINITION_VALIDATIONS()\n});\n\n// packages/ag-grid-community/src/propertyKeys.ts\nvar STRING_GRID_OPTIONS = [\"overlayLoadingTemplate\", \"overlayNoRowsTemplate\", \"gridId\", \"quickFilterText\", \"rowModelType\", \"editType\", \"domLayout\", \"clipboardDelimiter\", \"rowGroupPanelShow\", \"multiSortKey\", \"pivotColumnGroupTotals\", \"pivotRowTotals\", \"pivotPanelShow\", \"fillHandleDirection\", \"groupDisplayType\", \"treeDataDisplayType\", \"treeDataChildrenField\", \"treeDataParentIdField\", \"colResizeDefault\", \"tooltipTrigger\", \"serverSidePivotResultFieldSeparator\", \"columnMenu\", \"tooltipShowMode\", \"invalidEditValueMode\", \"grandTotalRow\", \"themeCssLayer\", \"findSearchValue\", \"styleNonce\", \"renderingMode\"];\nvar OBJECT_GRID_OPTIONS = [\"components\", \"rowStyle\", \"context\", \"autoGroupColumnDef\", \"localeText\", \"icons\", \"datasource\", \"dragAndDropImageComponentParams\", \"serverSideDatasource\", \"viewportDatasource\", \"groupRowRendererParams\", \"aggFuncs\", \"fullWidthCellRendererParams\", \"defaultColGroupDef\", \"defaultColDef\", \"defaultCsvExportParams\", \"defaultExcelExportParams\", \"columnTypes\", \"rowClassRules\", \"detailCellRendererParams\", \"loadingCellRendererParams\", \"loadingOverlayComponentParams\", \"noRowsOverlayComponentParams\", \"popupParent\", \"themeStyleContainer\", \"statusBar\", \"chartThemeOverrides\", \"customChartThemes\", \"chartToolPanelsDef\", \"dataTypeDefinitions\", \"advancedFilterParent\", \"advancedFilterBuilderParams\", \"advancedFilterParams\", \"initialState\", \"autoSizeStrategy\", \"selectionColumnDef\", \"findOptions\", \"filterHandlers\"];\nvar ARRAY_GRID_OPTIONS = [\"sortingOrder\", \"alignedGrids\", \"rowData\", \"columnDefs\", \"excelStyles\", \"pinnedTopRowData\", \"pinnedBottomRowData\", \"chartThemes\", \"rowClass\", \"paginationPageSizeSelector\"];\nvar _NUMBER_GRID_OPTIONS = [\"rowHeight\", \"detailRowHeight\", \"rowBuffer\", \"headerHeight\", \"groupHeaderHeight\", \"groupLockGroupColumns\", \"floatingFiltersHeight\", \"pivotHeaderHeight\", \"pivotGroupHeaderHeight\", \"groupDefaultExpanded\", \"pivotDefaultExpanded\", \"viewportRowModelPageSize\", \"viewportRowModelBufferSize\", \"autoSizePadding\", \"maxBlocksInCache\", \"maxConcurrentDatasourceRequests\", \"tooltipShowDelay\", \"tooltipHideDelay\", \"cacheOverflowSize\", \"paginationPageSize\", \"cacheBlockSize\", \"infiniteInitialRowCount\", \"serverSideInitialRowCount\", \"scrollbarWidth\", \"asyncTransactionWaitMillis\", \"blockLoadDebounceMillis\", \"keepDetailRowsCount\", \"undoRedoCellEditingLimit\", \"cellFlashDuration\", \"cellFadeDuration\", \"tabIndex\", \"pivotMaxGeneratedColumns\", \"rowDragInsertDelay\"];\nvar OTHER_GRID_OPTIONS = [\"theme\", \"rowSelection\"];\nvar _BOOLEAN_MIXED_GRID_OPTIONS = [\"cellSelection\", \"sideBar\", \"rowNumbers\", \"suppressGroupChangesColumnVisibility\", \"groupAggFiltering\", \"suppressStickyTotalRow\", \"groupHideParentOfSingleChild\", \"enableRowPinning\"];\nvar _BOOLEAN_GRID_OPTIONS = [\"loadThemeGoogleFonts\", \"suppressMakeColumnVisibleAfterUnGroup\", \"suppressRowClickSelection\", \"suppressCellFocus\", \"suppressHeaderFocus\", \"suppressHorizontalScroll\", \"groupSelectsChildren\", \"alwaysShowHorizontalScroll\", \"alwaysShowVerticalScroll\", \"debug\", \"enableBrowserTooltips\", \"enableCellExpressions\", \"groupSuppressBlankHeader\", \"suppressMenuHide\", \"suppressRowDeselection\", \"unSortIcon\", \"suppressMultiSort\", \"alwaysMultiSort\", \"singleClickEdit\", \"suppressLoadingOverlay\", \"suppressNoRowsOverlay\", \"suppressAutoSize\", \"skipHeaderOnAutoSize\", \"suppressColumnMoveAnimation\", \"suppressMoveWhenColumnDragging\", \"suppressMovableColumns\", \"suppressFieldDotNotation\", \"enableRangeSelection\", \"enableRangeHandle\", \"enableFillHandle\", \"suppressClearOnFillReduction\", \"deltaSort\", \"suppressTouch\", \"allowContextMenuWithControlKey\", \"suppressContextMenu\", \"suppressDragLeaveHidesColumns\", \"suppressRowGroupHidesColumns\", \"suppressMiddleClickScrolls\", \"suppressPreventDefaultOnMouseWheel\", \"suppressCopyRowsToClipboard\", \"copyHeadersToClipboard\", \"copyGroupHeadersToClipboard\", \"pivotMode\", \"suppressAggFuncInHeader\", \"suppressColumnVirtualisation\", \"alwaysAggregateAtRootLevel\", \"suppressFocusAfterRefresh\", \"functionsReadOnly\", \"animateRows\", \"groupSelectsFiltered\", \"groupRemoveSingleChildren\", \"groupRemoveLowestSingleChildren\", \"enableRtl\", \"enableCellSpan\", \"suppressClickEdit\", \"rowDragEntireRow\", \"rowDragManaged\", \"suppressRowDrag\", \"suppressMoveWhenRowDragging\", \"rowDragMultiRow\", \"enableGroupEdit\", \"embedFullWidthRows\", \"suppressPaginationPanel\", \"groupHideOpenParents\", \"groupAllowUnbalanced\", \"pagination\", \"paginationAutoPageSize\", \"suppressScrollOnNewData\", \"suppressScrollWhenPopupsAreOpen\", \"purgeClosedRowNodes\", \"cacheQuickFilter\", \"includeHiddenColumnsInQuickFilter\", \"ensureDomOrder\", \"accentedSort\", \"suppressChangeDetection\", \"valueCache\", \"valueCacheNeverExpires\", \"aggregateOnlyChangedColumns\", \"suppressAnimationFrame\", \"suppressExcelExport\", \"suppressCsvExport\", \"includeHiddenColumnsInAdvancedFilter\", \"suppressMultiRangeSelection\", \"enterNavigatesVerticallyAfterEdit\", \"enterNavigatesVertically\", \"suppressPropertyNamesCheck\", \"rowMultiSelectWithClick\", \"suppressRowHoverHighlight\", \"suppressRowTransform\", \"suppressClipboardPaste\", \"suppressLastEmptyLineOnPaste\", \"enableCharts\", \"suppressMaintainUnsortedOrder\", \"enableCellTextSelection\", \"suppressBrowserResizeObserver\", \"suppressMaxRenderedRowRestriction\", \"excludeChildrenWhenTreeDataFiltering\", \"tooltipMouseTrack\", \"tooltipInteraction\", \"keepDetailRows\", \"paginateChildRows\", \"preventDefaultOnContextMenu\", \"undoRedoCellEditing\", \"allowDragFromColumnsToolPanel\", \"pivotSuppressAutoColumn\", \"suppressExpandablePivotGroups\", \"debounceVerticalScrollbar\", \"detailRowAutoHeight\", \"serverSideSortAllLevels\", \"serverSideEnableClientSideSort\", \"serverSideOnlyRefreshFilteredGroups\", \"suppressAggFilteredOnly\", \"showOpenedGroup\", \"suppressClipboardApi\", \"suppressModelUpdateAfterUpdateTransaction\", \"stopEditingWhenCellsLoseFocus\", \"groupMaintainOrder\", \"columnHoverHighlight\", \"readOnlyEdit\", \"suppressRowVirtualisation\", \"enableCellEditingOnBackspace\", \"resetRowDataOnUpdate\", \"removePivotHeaderRowWhenSingleValueColumn\", \"suppressCopySingleCellRanges\", \"suppressGroupRowsSticky\", \"suppressCutToClipboard\", \"rowGroupPanelSuppressSort\", \"allowShowChangeAfterFilter\", \"enableAdvancedFilter\", \"masterDetail\", \"treeData\", \"reactiveCustomComponents\", \"applyQuickFilterBeforePivotOrAgg\", \"suppressServerSideFullWidthLoadingRow\", \"suppressAdvancedFilterEval\", \"loading\", \"maintainColumnOrder\", \"enableStrictPivotColumnOrder\", \"suppressSetFilterByDefault\", \"enableFilterHandlers\", \"suppressStartEditOnTab\", \"hidePaddedHeaderRows\"];\nvar _FUNCTION_GRID_OPTIONS = [\"doesExternalFilterPass\", \"processPivotResultColDef\", \"processPivotResultColGroupDef\", \"getBusinessKeyForNode\", \"isRowSelectable\", \"rowDragText\", \"groupRowRenderer\", \"dragAndDropImageComponent\", \"fullWidthCellRenderer\", \"loadingCellRenderer\", \"loadingOverlayComponent\", \"noRowsOverlayComponent\", \"detailCellRenderer\", \"quickFilterParser\", \"quickFilterMatcher\", \"getLocaleText\", \"isExternalFilterPresent\", \"getRowHeight\", \"getRowClass\", \"getRowStyle\", \"getFullRowEditValidationErrors\", \"getContextMenuItems\", \"getMainMenuItems\", \"processRowPostCreate\", \"processCellForClipboard\", \"getGroupRowAgg\", \"isFullWidthRow\", \"sendToClipboard\", \"focusGridInnerElement\", \"navigateToNextHeader\", \"tabToNextHeader\", \"navigateToNextCell\", \"tabToNextCell\", \"processCellFromClipboard\", \"getDocument\", \"postProcessPopup\", \"getChildCount\", \"getDataPath\", \"isRowMaster\", \"postSortRows\", \"processHeaderForClipboard\", \"processUnpinnedColumns\", \"processGroupHeaderForClipboard\", \"paginationNumberFormatter\", \"processDataFromClipboard\", \"getServerSideGroupKey\", \"isServerSideGroup\", \"createChartContainer\", \"getChartToolbarItems\", \"fillOperation\", \"isApplyServerSideTransaction\", \"getServerSideGroupLevelParams\", \"isServerSideGroupOpenByDefault\", \"isGroupOpenByDefault\", \"initialGroupOrderComparator\", \"loadingCellRendererSelector\", \"getRowId\", \"chartMenuItems\", \"groupTotalRow\", \"alwaysPassFilter\", \"isRowPinnable\", \"isRowPinned\", \"isRowValidDropPosition\"];\nvar _GET_ALL_GRID_OPTIONS = () => [...ARRAY_GRID_OPTIONS, ...OBJECT_GRID_OPTIONS, ...STRING_GRID_OPTIONS, ..._NUMBER_GRID_OPTIONS, ..._FUNCTION_GRID_OPTIONS, ..._BOOLEAN_GRID_OPTIONS, ..._BOOLEAN_MIXED_GRID_OPTIONS, ...OTHER_GRID_OPTIONS];\n\n// packages/ag-grid-community/src/validation/rules/gridOptionsValidations.ts\nvar GRID_OPTION_DEPRECATIONS = () => ({\n  suppressLoadingOverlay: {\n    version: \"32\",\n    message: \"Use `loading`=false instead.\"\n  },\n  enableFillHandle: {\n    version: \"32.2\",\n    message: \"Use `cellSelection.handle` instead.\"\n  },\n  enableRangeHandle: {\n    version: \"32.2\",\n    message: \"Use `cellSelection.handle` instead.\"\n  },\n  enableRangeSelection: {\n    version: \"32.2\",\n    message: \"Use `cellSelection = true` instead.\"\n  },\n  suppressMultiRangeSelection: {\n    version: \"32.2\",\n    message: \"Use `cellSelection.suppressMultiRanges` instead.\"\n  },\n  suppressClearOnFillReduction: {\n    version: \"32.2\",\n    message: \"Use `cellSelection.handle.suppressClearOnFillReduction` instead.\"\n  },\n  fillHandleDirection: {\n    version: \"32.2\",\n    message: \"Use `cellSelection.handle.direction` instead.\"\n  },\n  fillOperation: {\n    version: \"32.2\",\n    message: \"Use `cellSelection.handle.setFillValue` instead.\"\n  },\n  suppressRowClickSelection: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.enableClickSelection` instead.\"\n  },\n  suppressRowDeselection: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.enableClickSelection` instead.\"\n  },\n  rowMultiSelectWithClick: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.enableSelectionWithoutKeys` instead.\"\n  },\n  groupSelectsChildren: {\n    version: \"32.2\",\n    message: 'Use `rowSelection.groupSelects = \"descendants\"` instead.'\n  },\n  groupSelectsFiltered: {\n    version: \"32.2\",\n    message: 'Use `rowSelection.groupSelects = \"filteredDescendants\"` instead.'\n  },\n  isRowSelectable: {\n    version: \"32.2\",\n    message: \"Use `selectionOptions.isRowSelectable` instead.\"\n  },\n  suppressCopySingleCellRanges: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.copySelectedRows` instead.\"\n  },\n  suppressCopyRowsToClipboard: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.copySelectedRows` instead.\"\n  },\n  onRangeSelectionChanged: {\n    version: \"32.2\",\n    message: \"Use `onCellSelectionChanged` instead.\"\n  },\n  onRangeDeleteStart: {\n    version: \"32.2\",\n    message: \"Use `onCellSelectionDeleteStart` instead.\"\n  },\n  onRangeDeleteEnd: {\n    version: \"32.2\",\n    message: \"Use `onCellSelectionDeleteEnd` instead.\"\n  },\n  suppressBrowserResizeObserver: {\n    version: \"32.2\",\n    message: \"The grid always uses the browser's ResizeObserver, this grid option has no effect.\"\n  },\n  onColumnEverythingChanged: {\n    version: \"32.2\",\n    message: \"Either use `onDisplayedColumnsChanged` which is fired at the same time, or use one of the more specific column events.\"\n  },\n  groupRemoveSingleChildren: {\n    version: \"33\",\n    message: \"Use `groupHideParentOfSingleChild` instead.\"\n  },\n  groupRemoveLowestSingleChildren: {\n    version: \"33\",\n    message: 'Use `groupHideParentOfSingleChild: \"leafGroupsOnly\"` instead.'\n  },\n  suppressRowGroupHidesColumns: {\n    version: \"33\",\n    message: 'Use `suppressGroupChangesColumnVisibility: \"suppressHideOnGroup\"` instead.'\n  },\n  suppressMakeColumnVisibleAfterUnGroup: {\n    version: \"33\",\n    message: 'Use `suppressGroupChangesColumnVisibility: \"suppressShowOnUngroup\"` instead.'\n  },\n  unSortIcon: {\n    version: \"33\",\n    message: \"Use `defaultColDef.unSortIcon` instead.\"\n  },\n  sortingOrder: {\n    version: \"33\",\n    message: \"Use `defaultColDef.sortingOrder` instead.\"\n  },\n  suppressPropertyNamesCheck: {\n    version: \"33\",\n    message: \"`gridOptions` and `columnDefs` both have a `context` property that should be used for arbitrary user data. This means that column definitions and gridOptions should only contain valid properties making this property redundant.\"\n  },\n  suppressAdvancedFilterEval: {\n    version: \"34\",\n    message: \"Advanced filter no longer uses function evaluation, so this option has no effect.\"\n  }\n});\nfunction toConstrainedNum(key, value, min) {\n  if (typeof value === \"number\" || value == null) {\n    if (value == null) {\n      return null;\n    }\n    return value >= min ? null : `${key}: value should be greater than or equal to ${min}`;\n  }\n  return `${key}: value should be a number`;\n}\nvar GRID_OPTIONS_MODULES = {\n  alignedGrids: \"AlignedGrids\",\n  allowContextMenuWithControlKey: \"ContextMenu\",\n  autoSizeStrategy: \"ColumnAutoSize\",\n  cellSelection: \"CellSelection\",\n  columnHoverHighlight: \"ColumnHover\",\n  datasource: \"InfiniteRowModel\",\n  doesExternalFilterPass: \"ExternalFilter\",\n  editType: \"EditCore\",\n  invalidEditValueMode: \"EditCore\",\n  enableAdvancedFilter: \"AdvancedFilter\",\n  enableCellSpan: \"CellSpan\",\n  enableCharts: \"IntegratedCharts\",\n  enableRangeSelection: \"CellSelection\",\n  enableRowPinning: \"PinnedRow\",\n  findSearchValue: \"Find\",\n  getFullRowEditValidationErrors: \"EditCore\",\n  getContextMenuItems: \"ContextMenu\",\n  getLocaleText: \"Locale\",\n  getMainMenuItems: \"ColumnMenu\",\n  getRowClass: \"RowStyle\",\n  getRowStyle: \"RowStyle\",\n  groupTotalRow: \"SharedRowGrouping\",\n  grandTotalRow: \"SharedRowGrouping\",\n  initialState: \"GridState\",\n  isExternalFilterPresent: \"ExternalFilter\",\n  isRowPinnable: \"PinnedRow\",\n  isRowPinned: \"PinnedRow\",\n  localeText: \"Locale\",\n  masterDetail: \"SharedMasterDetail\",\n  pagination: \"Pagination\",\n  pinnedBottomRowData: \"PinnedRow\",\n  pinnedTopRowData: \"PinnedRow\",\n  pivotMode: \"SharedPivot\",\n  pivotPanelShow: \"RowGroupingPanel\",\n  quickFilterText: \"QuickFilter\",\n  rowClass: \"RowStyle\",\n  rowClassRules: \"RowStyle\",\n  rowData: \"ClientSideRowModel\",\n  rowDragManaged: \"RowDrag\",\n  rowGroupPanelShow: \"RowGroupingPanel\",\n  rowNumbers: \"RowNumbers\",\n  rowSelection: \"SharedRowSelection\",\n  rowStyle: \"RowStyle\",\n  serverSideDatasource: \"ServerSideRowModel\",\n  sideBar: \"SideBar\",\n  statusBar: \"StatusBar\",\n  treeData: \"SharedTreeData\",\n  undoRedoCellEditing: \"UndoRedoEdit\",\n  valueCache: \"ValueCache\",\n  viewportDatasource: \"ViewportRowModel\"\n};\nvar GRID_OPTION_VALIDATIONS = () => {\n  const definedValidations = {\n    autoSizePadding: {\n      validate({\n        autoSizePadding\n      }) {\n        return toConstrainedNum(\"autoSizePadding\", autoSizePadding, 0);\n      }\n    },\n    cacheBlockSize: {\n      supportedRowModels: [\"serverSide\", \"infinite\"],\n      validate({\n        cacheBlockSize\n      }) {\n        return toConstrainedNum(\"cacheBlockSize\", cacheBlockSize, 1);\n      }\n    },\n    cacheOverflowSize: {\n      validate({\n        cacheOverflowSize\n      }) {\n        return toConstrainedNum(\"cacheOverflowSize\", cacheOverflowSize, 1);\n      }\n    },\n    datasource: {\n      supportedRowModels: [\"infinite\"]\n    },\n    domLayout: {\n      validate: options => {\n        const domLayout = options.domLayout;\n        const validLayouts = [\"autoHeight\", \"normal\", \"print\"];\n        if (domLayout && !validLayouts.includes(domLayout)) {\n          return `domLayout must be one of [${validLayouts.join()}], currently it's ${domLayout}`;\n        }\n        return null;\n      }\n    },\n    enableFillHandle: {\n      dependencies: {\n        enableRangeSelection: {\n          required: [true]\n        }\n      }\n    },\n    enableRangeHandle: {\n      dependencies: {\n        enableRangeSelection: {\n          required: [true]\n        }\n      }\n    },\n    enableRangeSelection: {\n      dependencies: {\n        rowDragEntireRow: {\n          required: [false, void 0]\n        }\n      }\n    },\n    enableRowPinning: {\n      supportedRowModels: [\"clientSide\"],\n      validate({\n        enableRowPinning,\n        pinnedTopRowData,\n        pinnedBottomRowData\n      }) {\n        if (enableRowPinning && (pinnedTopRowData || pinnedBottomRowData)) {\n          return \"Manual row pinning cannot be used together with pinned row data. Either set `enableRowPinning` to `false`, or remove `pinnedTopRowData` and `pinnedBottomRowData`.\";\n        }\n        return null;\n      }\n    },\n    isRowPinnable: {\n      supportedRowModels: [\"clientSide\"],\n      validate({\n        enableRowPinning,\n        isRowPinnable,\n        pinnedTopRowData,\n        pinnedBottomRowData\n      }) {\n        if (isRowPinnable && (pinnedTopRowData || pinnedBottomRowData)) {\n          return \"Manual row pinning cannot be used together with pinned row data. Either remove `isRowPinnable`, or remove `pinnedTopRowData` and `pinnedBottomRowData`.\";\n        }\n        if (!enableRowPinning && isRowPinnable) {\n          return \"`isRowPinnable` requires `enableRowPinning` to be set.\";\n        }\n        return null;\n      }\n    },\n    isRowPinned: {\n      supportedRowModels: [\"clientSide\"],\n      validate({\n        enableRowPinning,\n        isRowPinned,\n        pinnedTopRowData,\n        pinnedBottomRowData\n      }) {\n        if (isRowPinned && (pinnedTopRowData || pinnedBottomRowData)) {\n          return \"Manual row pinning cannot be used together with pinned row data. Either remove `isRowPinned`, or remove `pinnedTopRowData` and `pinnedBottomRowData`.\";\n        }\n        if (!enableRowPinning && isRowPinned) {\n          return \"`isRowPinned` requires `enableRowPinning` to be set.\";\n        }\n        return null;\n      }\n    },\n    groupDefaultExpanded: {\n      supportedRowModels: [\"clientSide\"]\n    },\n    groupHideOpenParents: {\n      supportedRowModels: [\"clientSide\", \"serverSide\"],\n      dependencies: {\n        groupTotalRow: {\n          required: [void 0, \"bottom\"]\n        },\n        treeData: {\n          required: [void 0, false],\n          reason: \"Tree Data has values at the group level so it doesn't make sense to hide them.\"\n        }\n      }\n    },\n    groupHideParentOfSingleChild: {\n      dependencies: {\n        groupHideOpenParents: {\n          required: [void 0, false]\n        }\n      }\n    },\n    groupRemoveLowestSingleChildren: {\n      dependencies: {\n        groupHideOpenParents: {\n          required: [void 0, false]\n        },\n        groupRemoveSingleChildren: {\n          required: [void 0, false]\n        }\n      }\n    },\n    groupRemoveSingleChildren: {\n      dependencies: {\n        groupHideOpenParents: {\n          required: [void 0, false]\n        },\n        groupRemoveLowestSingleChildren: {\n          required: [void 0, false]\n        }\n      }\n    },\n    groupSelectsChildren: {\n      dependencies: {\n        rowSelection: {\n          required: [\"multiple\"]\n        }\n      }\n    },\n    icons: {\n      validate: ({\n        icons\n      }) => {\n        if (icons) {\n          if (icons[\"smallDown\"]) {\n            return _errMsg(262);\n          }\n          if (icons[\"smallLeft\"]) {\n            return _errMsg(263);\n          }\n          if (icons[\"smallRight\"]) {\n            return _errMsg(264);\n          }\n        }\n        return null;\n      }\n    },\n    infiniteInitialRowCount: {\n      validate({\n        infiniteInitialRowCount\n      }) {\n        return toConstrainedNum(\"infiniteInitialRowCount\", infiniteInitialRowCount, 1);\n      }\n    },\n    initialGroupOrderComparator: {\n      supportedRowModels: [\"clientSide\"]\n    },\n    keepDetailRowsCount: {\n      validate({\n        keepDetailRowsCount\n      }) {\n        return toConstrainedNum(\"keepDetailRowsCount\", keepDetailRowsCount, 1);\n      }\n    },\n    paginationPageSize: {\n      validate({\n        paginationPageSize\n      }) {\n        return toConstrainedNum(\"paginationPageSize\", paginationPageSize, 1);\n      }\n    },\n    paginationPageSizeSelector: {\n      validate: options => {\n        const values = options.paginationPageSizeSelector;\n        if (typeof values === \"boolean\" || values == null) {\n          return null;\n        }\n        if (!values.length) {\n          return `'paginationPageSizeSelector' cannot be an empty array.\n                    If you want to hide the page size selector, set paginationPageSizeSelector to false.`;\n        }\n        return null;\n      }\n    },\n    pivotMode: {\n      dependencies: {\n        treeData: {\n          required: [false, void 0],\n          reason: \"Pivot Mode is not supported with Tree Data.\"\n        }\n      }\n    },\n    quickFilterText: {\n      supportedRowModels: [\"clientSide\"]\n    },\n    rowBuffer: {\n      validate({\n        rowBuffer\n      }) {\n        return toConstrainedNum(\"rowBuffer\", rowBuffer, 0);\n      }\n    },\n    rowClass: {\n      validate: options => {\n        const rowClass = options.rowClass;\n        if (typeof rowClass === \"function\") {\n          return \"rowClass should not be a function, please use getRowClass instead\";\n        }\n        return null;\n      }\n    },\n    rowData: {\n      supportedRowModels: [\"clientSide\"]\n    },\n    rowDragManaged: {\n      supportedRowModels: [\"clientSide\"],\n      dependencies: {\n        pagination: {\n          required: [false, void 0]\n        }\n      }\n    },\n    rowSelection: {\n      validate({\n        rowSelection\n      }) {\n        if (rowSelection && typeof rowSelection === \"string\") {\n          return 'As of version 32.2.1, using `rowSelection` with the values \"single\" or \"multiple\" has been deprecated. Use the object value instead.';\n        }\n        if (rowSelection && typeof rowSelection !== \"object\") {\n          return \"Expected `RowSelectionOptions` object for the `rowSelection` property.\";\n        }\n        if (rowSelection && rowSelection.mode !== \"multiRow\" && rowSelection.mode !== \"singleRow\") {\n          return `Selection mode \"${rowSelection.mode}\" is invalid. Use one of 'singleRow' or 'multiRow'.`;\n        }\n        return null;\n      }\n    },\n    rowStyle: {\n      validate: options => {\n        const rowStyle = options.rowStyle;\n        if (rowStyle && typeof rowStyle === \"function\") {\n          return \"rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead\";\n        }\n        return null;\n      }\n    },\n    serverSideDatasource: {\n      supportedRowModels: [\"serverSide\"]\n    },\n    serverSideInitialRowCount: {\n      supportedRowModels: [\"serverSide\"],\n      validate({\n        serverSideInitialRowCount\n      }) {\n        return toConstrainedNum(\"serverSideInitialRowCount\", serverSideInitialRowCount, 1);\n      }\n    },\n    serverSideOnlyRefreshFilteredGroups: {\n      supportedRowModels: [\"serverSide\"]\n    },\n    serverSideSortAllLevels: {\n      supportedRowModels: [\"serverSide\"]\n    },\n    sortingOrder: {\n      validate: _options => {\n        const sortingOrder = _options.sortingOrder;\n        if (Array.isArray(sortingOrder) && sortingOrder.length > 0) {\n          const invalidItems = sortingOrder.filter(a => !DEFAULT_SORTING_ORDER.includes(a));\n          if (invalidItems.length > 0) {\n            return `sortingOrder must be an array with elements from [${DEFAULT_SORTING_ORDER.map(toStringWithNullUndefined).join()}], currently it includes [${invalidItems.map(toStringWithNullUndefined).join()}]`;\n          }\n        } else if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\n          return `sortingOrder must be an array with at least one element, currently it's ${sortingOrder}`;\n        }\n        return null;\n      }\n    },\n    tooltipHideDelay: {\n      validate: options => {\n        if (options.tooltipHideDelay && options.tooltipHideDelay < 0) {\n          return \"tooltipHideDelay should not be lower than 0\";\n        }\n        return null;\n      }\n    },\n    tooltipShowDelay: {\n      validate: options => {\n        if (options.tooltipShowDelay && options.tooltipShowDelay < 0) {\n          return \"tooltipShowDelay should not be lower than 0\";\n        }\n        return null;\n      }\n    },\n    treeData: {\n      supportedRowModels: [\"clientSide\", \"serverSide\"],\n      validate: options => {\n        const rowModel = options.rowModelType ?? \"clientSide\";\n        switch (rowModel) {\n          case \"clientSide\":\n            {\n              const {\n                treeDataChildrenField,\n                treeDataParentIdField,\n                getDataPath,\n                getRowId\n              } = options;\n              if (!treeDataChildrenField && !treeDataParentIdField && !getDataPath) {\n                return \"treeData requires either 'treeDataChildrenField' or 'treeDataParentIdField' or 'getDataPath' in the clientSide row model.\";\n              }\n              if (treeDataChildrenField) {\n                if (getDataPath) {\n                  return \"Cannot use both 'treeDataChildrenField' and 'getDataPath' at the same time.\";\n                }\n                if (treeDataParentIdField) {\n                  return \"Cannot use both 'treeDataChildrenField' and 'treeDataParentIdField' at the same time.\";\n                }\n              }\n              if (treeDataParentIdField) {\n                if (!getRowId) {\n                  return \"getRowId callback not provided, tree data with parent id cannot be built.\";\n                }\n                if (getDataPath) {\n                  return \"Cannot use both 'treeDataParentIdField' and 'getDataPath' at the same time.\";\n                }\n              }\n              return null;\n            }\n          case \"serverSide\":\n            {\n              const ssrmWarning = `treeData requires 'isServerSideGroup' and 'getServerSideGroupKey' in the ${rowModel} row model.`;\n              return options.isServerSideGroup && options.getServerSideGroupKey ? null : ssrmWarning;\n            }\n        }\n        return null;\n      }\n    },\n    viewportDatasource: {\n      supportedRowModels: [\"viewport\"]\n    },\n    viewportRowModelBufferSize: {\n      validate({\n        viewportRowModelBufferSize\n      }) {\n        return toConstrainedNum(\"viewportRowModelBufferSize\", viewportRowModelBufferSize, 0);\n      }\n    },\n    viewportRowModelPageSize: {\n      validate({\n        viewportRowModelPageSize\n      }) {\n        return toConstrainedNum(\"viewportRowModelPageSize\", viewportRowModelPageSize, 1);\n      }\n    },\n    rowDragEntireRow: {\n      dependencies: {\n        cellSelection: {\n          required: [void 0]\n        }\n      }\n    },\n    autoGroupColumnDef: {\n      validate({\n        autoGroupColumnDef,\n        showOpenedGroup\n      }) {\n        if (autoGroupColumnDef?.field && showOpenedGroup) {\n          return \"autoGroupColumnDef.field and showOpenedGroup are not supported when used together.\";\n        }\n        if (autoGroupColumnDef?.valueGetter && showOpenedGroup) {\n          return \"autoGroupColumnDef.valueGetter and showOpenedGroup are not supported when used together.\";\n        }\n        return null;\n      }\n    },\n    renderingMode: {\n      validate: options => {\n        const renderingMode = options.renderingMode;\n        const validModes = [\"default\", \"legacy\"];\n        if (renderingMode && !validModes.includes(renderingMode)) {\n          return `renderingMode must be one of [${validModes.join()}], currently it's ${renderingMode}`;\n        }\n        return null;\n      }\n    }\n  };\n  const validations = {};\n  _BOOLEAN_GRID_OPTIONS.forEach(key => {\n    validations[key] = {\n      expectedType: \"boolean\"\n    };\n  });\n  _NUMBER_GRID_OPTIONS.forEach(key => {\n    validations[key] = {\n      expectedType: \"number\"\n    };\n  });\n  _mergeDeep(validations, definedValidations);\n  return validations;\n};\nvar GRID_OPTIONS_VALIDATORS = () => ({\n  objectName: \"gridOptions\",\n  allProperties: [..._GET_ALL_GRID_OPTIONS(), ...Object.values(_PUBLIC_EVENT_HANDLERS_MAP)],\n  propertyExceptions: [\"api\"],\n  docsUrl: \"grid-options/\",\n  deprecations: GRID_OPTION_DEPRECATIONS(),\n  validations: GRID_OPTION_VALIDATIONS()\n});\n\n// packages/ag-grid-community/src/gridOptionsService.ts\nvar changeSetId = 0;\nvar gridInstanceSequence = 0;\nvar GridOptionsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"gos\";\n    this.domDataKey = \"__AG_\" + Math.random().toString();\n    /** This is only used for the main DOM element */\n    this.gridInstanceId = gridInstanceSequence++;\n    // Used to hold user events until the grid is ready\n    // Required to support React 19 StrictMode. See IFrameworkOverrides.runWhenReadyAsync but also is likely a good idea that onGridReady is the first event fired.\n    this.gridReadyFired = false;\n    this.queueEvents = [];\n    this.propEventSvc = new LocalEventService();\n    // responsible for calling the onXXX functions on gridOptions\n    // It forces events defined in GridOptionsService.alwaysSyncGlobalEvents to be fired synchronously.\n    // This is required for events such as GridPreDestroyed.\n    // Other events can be fired asynchronously or synchronously depending on config.\n    this.globalEventHandlerFactory = restrictToSyncOnly => {\n      return (eventName, event) => {\n        if (!this.isAlive()) {\n          return;\n        }\n        const alwaysSync = ALWAYS_SYNC_GLOBAL_EVENTS.has(eventName);\n        if (alwaysSync && !restrictToSyncOnly || !alwaysSync && restrictToSyncOnly) {\n          return;\n        }\n        if (!isPublicEventHandler(eventName)) {\n          return;\n        }\n        const fireEvent = (name, e) => {\n          const eventHandlerName = _PUBLIC_EVENT_HANDLERS_MAP[name];\n          const eventHandler = this.gridOptions[eventHandlerName];\n          if (typeof eventHandler === \"function\") {\n            this.beans.frameworkOverrides.wrapOutgoing(() => eventHandler(e));\n          }\n        };\n        if (this.gridReadyFired) {\n          fireEvent(eventName, event);\n        } else {\n          if (eventName === \"gridReady\") {\n            fireEvent(eventName, event);\n            this.gridReadyFired = true;\n            for (const q of this.queueEvents) {\n              fireEvent(q.eventName, q.event);\n            }\n            this.queueEvents = [];\n          } else {\n            this.queueEvents.push({\n              eventName,\n              event\n            });\n          }\n        }\n      };\n    };\n  }\n  wireBeans(beans) {\n    this.gridOptions = beans.gridOptions;\n    this.validation = beans.validation;\n    this.api = beans.gridApi;\n    this.gridId = beans.context.getGridId();\n  }\n  // This is quicker then having code call gridOptionsService.get('context')\n  get gridOptionsContext() {\n    return this.gridOptions[\"context\"];\n  }\n  postConstruct() {\n    this.validateGridOptions(this.gridOptions);\n    this.eventSvc.addGlobalListener(this.globalEventHandlerFactory().bind(this), true);\n    this.eventSvc.addGlobalListener(this.globalEventHandlerFactory(true).bind(this), false);\n    this.propEventSvc.setFrameworkOverrides(this.beans.frameworkOverrides);\n    this.addManagedEventListeners({\n      gridOptionsChanged: ({\n        options\n      }) => {\n        this.updateGridOptions({\n          options,\n          force: true,\n          source: \"gridOptionsUpdated\"\n        });\n      }\n    });\n  }\n  destroy() {\n    super.destroy();\n    this.queueEvents = [];\n  }\n  /**\n   * Get the raw value of the GridOptions property provided.\n   * @param property\n   */\n  get(property) {\n    return this.gridOptions[property] ?? GRID_OPTION_DEFAULTS[property];\n  }\n  /**\n   * Get the GridOption callback but wrapped so that the common params of api and context are automatically applied to the params.\n   * @param property GridOption callback properties based on the fact that this property has a callback with params extending AgGridCommon\n   */\n  getCallback(property) {\n    return this.mergeGridCommonParams(this.gridOptions[property]);\n  }\n  /**\n   * Returns `true` if a value has been specified for this GridOption.\n   * @param property GridOption property\n   */\n  exists(property) {\n    return _exists(this.gridOptions[property]);\n  }\n  /**\n   * Wrap the user callback and attach the api and context to the params object on the way through.\n   * @param callback User provided callback\n   * @returns Wrapped callback where the params object not require api and context\n   */\n  mergeGridCommonParams(callback) {\n    if (callback) {\n      const wrapped = callbackParams => {\n        return callback(this.addGridCommonParams(callbackParams));\n      };\n      return wrapped;\n    }\n    return callback;\n  }\n  updateGridOptions({\n    options,\n    force,\n    source = \"api\"\n  }) {\n    const changeSet = {\n      id: changeSetId++,\n      properties: []\n    };\n    const events = [];\n    const {\n      gridOptions,\n      validation: validation2\n    } = this;\n    for (const key of Object.keys(options)) {\n      const value = options[key];\n      validation2?.warnOnInitialPropertyUpdate(source, key);\n      const shouldForce = force || typeof value === \"object\" && source === \"api\";\n      const previousValue = gridOptions[key];\n      if (shouldForce || previousValue !== value) {\n        gridOptions[key] = value;\n        const event = {\n          type: key,\n          currentValue: value,\n          previousValue,\n          changeSet,\n          source\n        };\n        events.push(event);\n      }\n    }\n    this.validateGridOptions(this.gridOptions);\n    changeSet.properties = events.map(event => event.type);\n    events.forEach(event => {\n      _logIfDebug(this, `Updated property ${event.type} from`, event.previousValue, ` to `, event.currentValue);\n      this.propEventSvc.dispatchEvent(event);\n    });\n  }\n  addPropertyEventListener(key, listener) {\n    this.propEventSvc.addEventListener(key, listener);\n  }\n  removePropertyEventListener(key, listener) {\n    this.propEventSvc.removeEventListener(key, listener);\n  }\n  getDomDataKey() {\n    return this.domDataKey;\n  }\n  /** Prefer _addGridCommonParams from gridOptionsUtils for bundle size savings */\n  addGridCommonParams(params) {\n    params.api = this.api;\n    params.context = this.gridOptionsContext;\n    return params;\n  }\n  validateOptions(options, modValidations) {\n    for (const key of Object.keys(options)) {\n      const value = options[key];\n      if (value == null || value === false) {\n        continue;\n      }\n      let moduleToCheck = modValidations[key];\n      if (typeof moduleToCheck === \"function\") {\n        moduleToCheck = moduleToCheck(options, this.gridOptions, this.beans);\n      }\n      if (moduleToCheck) {\n        this.assertModuleRegistered(moduleToCheck, key);\n      }\n    }\n  }\n  validateGridOptions(gridOptions) {\n    this.validateOptions(gridOptions, GRID_OPTIONS_MODULES);\n    this.validation?.processGridOptions(gridOptions);\n  }\n  validateColDef(colDef, colId, skipInferenceCheck) {\n    if (skipInferenceCheck || !this.beans.dataTypeSvc?.isColPendingInference(colId)) {\n      this.validateOptions(colDef, COLUMN_DEFINITION_MOD_VALIDATIONS);\n      this.validation?.validateColDef(colDef);\n    }\n  }\n  assertModuleRegistered(moduleName, reasonOrId) {\n    const registered = Array.isArray(moduleName) ? moduleName.some(modName => this.isModuleRegistered(modName)) : this.isModuleRegistered(moduleName);\n    if (!registered) {\n      _error(200, {\n        ...this.getModuleErrorParams(),\n        moduleName,\n        reasonOrId\n      });\n    }\n    return registered;\n  }\n  getModuleErrorParams() {\n    return {\n      gridId: this.gridId,\n      gridScoped: _areModulesGridScoped(),\n      rowModelType: this.get(\"rowModelType\"),\n      isUmd: _isUmd()\n    };\n  }\n  isModuleRegistered(moduleName) {\n    return _isModuleRegistered(moduleName, this.gridId, this.get(\"rowModelType\"));\n  }\n};\nfunction isPublicEventHandler(eventName) {\n  return !!_PUBLIC_EVENT_HANDLERS_MAP[eventName];\n}\n\n// packages/ag-grid-community/src/headerRendering/cells/column/headerComp.ts\nfunction getHeaderCompElementParams(includeSortIndicator) {\n  const hiddenAttrs = {\n    \"aria-hidden\": \"true\"\n  };\n  return {\n    tag: \"div\",\n    cls: \"ag-cell-label-container\",\n    role: \"presentation\",\n    children: [{\n      tag: \"span\",\n      ref: \"eMenu\",\n      cls: \"ag-header-icon ag-header-cell-menu-button\",\n      attrs: hiddenAttrs\n    }, {\n      tag: \"span\",\n      ref: \"eFilterButton\",\n      cls: \"ag-header-icon ag-header-cell-filter-button\",\n      attrs: hiddenAttrs\n    }, {\n      tag: \"div\",\n      ref: \"eLabel\",\n      cls: \"ag-header-cell-label\",\n      role: \"presentation\",\n      children: [{\n        tag: \"span\",\n        ref: \"eText\",\n        cls: \"ag-header-cell-text\"\n      }, {\n        tag: \"span\",\n        ref: \"eFilter\",\n        cls: \"ag-header-icon ag-header-label-icon ag-filter-icon\",\n        attrs: hiddenAttrs\n      }, includeSortIndicator ? {\n        tag: \"ag-sort-indicator\",\n        ref: \"eSortIndicator\"\n      } : null]\n    }]\n  };\n}\nvar HeaderCompElement = getHeaderCompElementParams(true);\nvar HeaderCompElementNoSort = getHeaderCompElementParams(false);\nvar HeaderComp = class extends Component {\n  constructor() {\n    super(...arguments);\n    // All the elements are optional, as they are not guaranteed to be present if the user provides a custom template\n    this.eFilter = RefPlaceholder;\n    this.eFilterButton = RefPlaceholder;\n    this.eSortIndicator = RefPlaceholder;\n    this.eMenu = RefPlaceholder;\n    this.eLabel = RefPlaceholder;\n    this.eText = RefPlaceholder;\n    /**\n     * Selectors for custom headers templates, i.e when the ag-sort-indicator is not present.\n     */\n    this.eSortOrder = RefPlaceholder;\n    this.eSortAsc = RefPlaceholder;\n    this.eSortDesc = RefPlaceholder;\n    this.eSortMixed = RefPlaceholder;\n    this.eSortNone = RefPlaceholder;\n    this.isLoadingInnerComponent = false;\n  }\n  refresh(params) {\n    const oldParams = this.params;\n    this.params = params;\n    if (this.workOutTemplate(params, !!this.beans?.sortSvc) != this.currentTemplate || this.workOutShowMenu() != this.currentShowMenu || params.enableSorting != this.currentSort || this.currentSuppressMenuHide != null && this.shouldSuppressMenuHide() != this.currentSuppressMenuHide || oldParams.enableFilterButton != params.enableFilterButton || oldParams.enableFilterIcon != params.enableFilterIcon) {\n      return false;\n    }\n    if (this.innerHeaderComponent) {\n      const mergedParams = {\n        ...params\n      };\n      _mergeDeep(mergedParams, params.innerHeaderComponentParams);\n      this.innerHeaderComponent.refresh?.(mergedParams);\n    } else {\n      this.setDisplayName(params);\n    }\n    return true;\n  }\n  workOutTemplate(params, isSorting) {\n    const paramsTemplate = params.template;\n    if (paramsTemplate) {\n      return paramsTemplate?.trim ? paramsTemplate.trim() : paramsTemplate;\n    } else {\n      return isSorting ? HeaderCompElement : HeaderCompElementNoSort;\n    }\n  }\n  init(params) {\n    this.params = params;\n    const {\n      sortSvc,\n      touchSvc,\n      rowNumbersSvc,\n      userCompFactory\n    } = this.beans;\n    const sortComp = sortSvc?.getSortIndicatorSelector();\n    this.currentTemplate = this.workOutTemplate(params, !!sortComp);\n    this.setTemplate(this.currentTemplate, sortComp ? [sortComp] : void 0);\n    touchSvc?.setupForHeader(this);\n    this.setMenu();\n    this.setupSort();\n    rowNumbersSvc?.setupForHeader(this);\n    this.setupFilterIcon();\n    this.setupFilterButton();\n    this.workOutInnerHeaderComponent(userCompFactory, params);\n    this.setDisplayName(params);\n  }\n  workOutInnerHeaderComponent(userCompFactory, params) {\n    const userCompDetails = _getInnerHeaderCompDetails(userCompFactory, params, params);\n    if (!userCompDetails) {\n      return;\n    }\n    this.isLoadingInnerComponent = true;\n    userCompDetails.newAgStackInstance().then(comp => {\n      this.isLoadingInnerComponent = false;\n      if (!comp) {\n        return;\n      }\n      if (this.isAlive()) {\n        this.innerHeaderComponent = comp;\n        if (this.eText) {\n          this.eText.appendChild(comp.getGui());\n        }\n      } else {\n        this.destroyBean(comp);\n      }\n    });\n  }\n  setDisplayName(params) {\n    const {\n      displayName\n    } = params;\n    const oldDisplayName = this.currentDisplayName;\n    this.currentDisplayName = displayName;\n    if (!this.eText || oldDisplayName === displayName || this.innerHeaderComponent || this.isLoadingInnerComponent) {\n      return;\n    }\n    this.eText.textContent = _toString(displayName);\n  }\n  addInIcon(iconName, eParent, column) {\n    const eIcon = _createIconNoSpan(iconName, this.beans, column);\n    if (eIcon) {\n      eParent.appendChild(eIcon);\n    }\n  }\n  workOutShowMenu() {\n    return this.params.enableMenu && !!this.beans.menuSvc?.isHeaderMenuButtonEnabled();\n  }\n  shouldSuppressMenuHide() {\n    return !!this.beans.menuSvc?.isHeaderMenuButtonAlwaysShowEnabled();\n  }\n  setMenu() {\n    if (!this.eMenu) {\n      return;\n    }\n    this.currentShowMenu = this.workOutShowMenu();\n    if (!this.currentShowMenu) {\n      _removeFromParent(this.eMenu);\n      this.eMenu = void 0;\n      return;\n    }\n    const {\n      gos,\n      eMenu,\n      params\n    } = this;\n    const isLegacyMenu = _isLegacyMenuEnabled(gos);\n    this.addInIcon(isLegacyMenu ? \"menu\" : \"menuAlt\", eMenu, params.column);\n    eMenu.classList.toggle(\"ag-header-menu-icon\", !isLegacyMenu);\n    const currentSuppressMenuHide = this.shouldSuppressMenuHide();\n    this.currentSuppressMenuHide = currentSuppressMenuHide;\n    this.addManagedElementListeners(eMenu, {\n      click: () => this.showColumnMenu(this.eMenu)\n    });\n    this.toggleMenuAlwaysShow(currentSuppressMenuHide);\n  }\n  toggleMenuAlwaysShow(alwaysShow) {\n    this.eMenu?.classList.toggle(\"ag-header-menu-always-show\", alwaysShow);\n  }\n  showColumnMenu(element) {\n    const {\n      currentSuppressMenuHide,\n      params\n    } = this;\n    if (!currentSuppressMenuHide) {\n      this.toggleMenuAlwaysShow(true);\n    }\n    params.showColumnMenu(element, () => {\n      if (!currentSuppressMenuHide) {\n        this.toggleMenuAlwaysShow(false);\n      }\n    });\n  }\n  onMenuKeyboardShortcut(isFilterShortcut) {\n    const {\n      params,\n      gos,\n      beans,\n      eMenu,\n      eFilterButton\n    } = this;\n    const column = params.column;\n    const isLegacyMenuEnabled = _isLegacyMenuEnabled(gos);\n    if (isFilterShortcut && !isLegacyMenuEnabled) {\n      if (beans.menuSvc?.isFilterMenuInHeaderEnabled(column)) {\n        params.showFilter(eFilterButton ?? eMenu ?? this.getGui());\n        return true;\n      }\n    } else if (params.enableMenu) {\n      this.showColumnMenu(eMenu ?? eFilterButton ?? this.getGui());\n      return true;\n    }\n    return false;\n  }\n  setupSort() {\n    const {\n      sortSvc\n    } = this.beans;\n    if (!sortSvc) {\n      return;\n    }\n    const {\n      enableSorting,\n      column\n    } = this.params;\n    this.currentSort = enableSorting;\n    if (!this.eSortIndicator) {\n      this.eSortIndicator = this.createBean(sortSvc.createSortIndicator(true));\n      const {\n        eSortIndicator,\n        eSortOrder,\n        eSortAsc,\n        eSortDesc,\n        eSortMixed,\n        eSortNone\n      } = this;\n      eSortIndicator.attachCustomElements(eSortOrder, eSortAsc, eSortDesc, eSortMixed, eSortNone);\n    }\n    this.eSortIndicator.setupSort(column);\n    if (!this.currentSort) {\n      return;\n    }\n    sortSvc.setupHeader(this, column, this.eLabel);\n  }\n  setupFilterIcon() {\n    const {\n      eFilter,\n      params\n    } = this;\n    if (!eFilter) {\n      return;\n    }\n    const onFilterChangedIcon = () => {\n      const filterPresent = params.column.isFilterActive();\n      _setDisplayed(eFilter, filterPresent, {\n        skipAriaHidden: true\n      });\n    };\n    this.configureFilter(params.enableFilterIcon, eFilter, onFilterChangedIcon, \"filterActive\");\n  }\n  setupFilterButton() {\n    const {\n      eFilterButton,\n      params\n    } = this;\n    if (!eFilterButton) {\n      return;\n    }\n    const configured = this.configureFilter(params.enableFilterButton, eFilterButton, this.onFilterChangedButton.bind(this), \"filter\");\n    if (configured) {\n      this.addManagedElementListeners(eFilterButton, {\n        click: () => params.showFilter(eFilterButton)\n      });\n    } else {\n      this.eFilterButton = void 0;\n    }\n  }\n  configureFilter(enabled, element, filterChangedCallback, icon) {\n    if (!enabled) {\n      _removeFromParent(element);\n      return false;\n    }\n    const column = this.params.column;\n    this.addInIcon(icon, element, column);\n    this.addManagedListeners(column, {\n      filterChanged: filterChangedCallback\n    });\n    filterChangedCallback();\n    return true;\n  }\n  onFilterChangedButton() {\n    const filterPresent = this.params.column.isFilterActive();\n    this.eFilterButton.classList.toggle(\"ag-filter-active\", filterPresent);\n  }\n  getAnchorElementForMenu(isFilter) {\n    const {\n      eFilterButton,\n      eMenu\n    } = this;\n    if (isFilter) {\n      return eFilterButton ?? eMenu ?? this.getGui();\n    }\n    return eMenu ?? eFilterButton ?? this.getGui();\n  }\n  destroy() {\n    super.destroy();\n    if (this.innerHeaderComponent) {\n      this.destroyBean(this.innerHeaderComponent);\n      this.innerHeaderComponent = void 0;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/headerGroupComp.ts\nvar HeaderGroupCompElement = {\n  tag: \"div\",\n  cls: \"ag-header-group-cell-label\",\n  role: \"presentation\",\n  children: [{\n    tag: \"span\",\n    ref: \"agLabel\",\n    cls: \"ag-header-group-text\",\n    role: \"presentation\"\n  }, {\n    tag: \"span\",\n    ref: \"agOpened\",\n    cls: `ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded`\n  }, {\n    tag: \"span\",\n    ref: \"agClosed\",\n    cls: `ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed`\n  }]\n};\nvar HeaderGroupComp = class extends Component {\n  constructor() {\n    super(HeaderGroupCompElement);\n    this.agOpened = RefPlaceholder;\n    this.agClosed = RefPlaceholder;\n    this.agLabel = RefPlaceholder;\n    this.isLoadingInnerComponent = false;\n  }\n  init(params) {\n    const {\n      userCompFactory,\n      touchSvc\n    } = this.beans;\n    this.params = params;\n    this.checkWarnings();\n    this.workOutInnerHeaderGroupComponent(userCompFactory, params);\n    this.setupLabel(params);\n    this.addGroupExpandIcon(params);\n    this.setupExpandIcons();\n    touchSvc?.setupForHeaderGroup(this);\n  }\n  checkWarnings() {\n    const paramsAny = this.params;\n    if (paramsAny.template) {\n      _warn(89);\n    }\n  }\n  workOutInnerHeaderGroupComponent(userCompFactory, params) {\n    const userCompDetails = _getInnerHeaderGroupCompDetails(userCompFactory, params, params);\n    if (!userCompDetails) {\n      return;\n    }\n    this.isLoadingInnerComponent = true;\n    userCompDetails.newAgStackInstance().then(comp => {\n      this.isLoadingInnerComponent = false;\n      if (!comp) {\n        return;\n      }\n      if (this.isAlive()) {\n        this.innerHeaderGroupComponent = comp;\n        this.agLabel.appendChild(comp.getGui());\n      } else {\n        this.destroyBean(comp);\n      }\n    });\n  }\n  setupExpandIcons() {\n    const {\n      agOpened,\n      agClosed,\n      params: {\n        columnGroup\n      },\n      beans\n    } = this;\n    this.addInIcon(\"columnGroupOpened\", agOpened);\n    this.addInIcon(\"columnGroupClosed\", agClosed);\n    const expandAction = event => {\n      if (_isStopPropagationForAgGrid(event)) {\n        return;\n      }\n      const newExpandedValue = !columnGroup.isExpanded();\n      beans.colGroupSvc.setColumnGroupOpened(columnGroup.getProvidedColumnGroup(), newExpandedValue, \"uiColumnExpanded\");\n    };\n    this.addTouchAndClickListeners(beans, agClosed, expandAction);\n    this.addTouchAndClickListeners(beans, agOpened, expandAction);\n    const stopPropagationAction = event => {\n      _stopPropagationForAgGrid(event);\n    };\n    this.addManagedElementListeners(agClosed, {\n      dblclick: stopPropagationAction\n    });\n    this.addManagedElementListeners(agOpened, {\n      dblclick: stopPropagationAction\n    });\n    this.addManagedElementListeners(this.getGui(), {\n      dblclick: expandAction\n    });\n    this.updateIconVisibility();\n    const providedColumnGroup = columnGroup.getProvidedColumnGroup();\n    const updateIcon = this.updateIconVisibility.bind(this);\n    this.addManagedListeners(providedColumnGroup, {\n      expandedChanged: updateIcon,\n      expandableChanged: updateIcon\n    });\n  }\n  addTouchAndClickListeners(beans, eElement, action) {\n    beans.touchSvc?.setupForHeaderGroupElement(this, eElement, action);\n    this.addManagedElementListeners(eElement, {\n      click: action\n    });\n  }\n  updateIconVisibility() {\n    const {\n      agOpened,\n      agClosed,\n      params: {\n        columnGroup\n      }\n    } = this;\n    if (columnGroup.isExpandable()) {\n      const expanded = columnGroup.isExpanded();\n      _setDisplayed(agOpened, expanded);\n      _setDisplayed(agClosed, !expanded);\n    } else {\n      _setDisplayed(agOpened, false);\n      _setDisplayed(agClosed, false);\n    }\n  }\n  addInIcon(iconName, element) {\n    const eIcon = _createIconNoSpan(iconName, this.beans, null);\n    if (eIcon) {\n      element.appendChild(eIcon);\n    }\n  }\n  addGroupExpandIcon(params) {\n    if (!params.columnGroup.isExpandable()) {\n      const {\n        agOpened,\n        agClosed\n      } = this;\n      _setDisplayed(agOpened, false);\n      _setDisplayed(agClosed, false);\n      return;\n    }\n  }\n  setupLabel(params) {\n    const {\n      displayName,\n      columnGroup\n    } = params;\n    const hasInnerComponent = this.innerHeaderGroupComponent || this.isLoadingInnerComponent;\n    if (_exists(displayName) && !hasInnerComponent) {\n      this.agLabel.textContent = _toString(displayName);\n    }\n    this.toggleCss(\"ag-sticky-label\", !columnGroup.getColGroupDef()?.suppressStickyLabel);\n  }\n  destroy() {\n    super.destroy();\n    if (this.innerHeaderGroupComponent) {\n      this.destroyBean(this.innerHeaderGroupComponent);\n      this.innerHeaderGroupComponent = void 0;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/headerModule.ts\nvar ColumnHeaderCompModule = {\n  moduleName: \"ColumnHeaderComp\",\n  version: VERSION,\n  userComponents: {\n    agColumnHeader: HeaderComp\n  },\n  icons: {\n    // button to launch legacy column menu\n    menu: \"menu\",\n    // button to launch new enterprise column menu\n    menuAlt: \"menu-alt\"\n  }\n};\nvar ColumnGroupHeaderCompModule = {\n  moduleName: \"ColumnGroupHeaderComp\",\n  version: VERSION,\n  userComponents: {\n    agColumnGroupHeader: HeaderGroupComp\n  },\n  icons: {\n    // header column group shown when expanded (click to contract)\n    columnGroupOpened: \"expanded\",\n    // header column group shown when contracted (click to expand)\n    columnGroupClosed: \"contracted\"\n  }\n};\n\n// packages/ag-grid-community/src/misc/animationFrameService.ts\nvar AnimationFrameService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"animationFrameSvc\";\n    // p1 and p2 are create tasks are to do with row and cell creation.\n    // for them we want to execute according to row order, so we use\n    // TaskItem so we know what index the item is for.\n    this.p1 = {\n      list: [],\n      sorted: false\n    };\n    // eg drawing back-ground of rows\n    this.p2 = {\n      list: [],\n      sorted: false\n    };\n    // eg cell renderers, adding hover functionality\n    this.f1 = {\n      list: [],\n      sorted: false\n    };\n    // eg framework cell renderers\n    // destroy tasks are to do with row removal. they are done after row creation as the user will need to see new\n    // rows first (as blank is scrolled into view), when we remove the old rows (no longer in view) is not as\n    // important.\n    this.destroyTasks = [];\n    this.ticking = false;\n    // we need to know direction of scroll, to build up rows in the direction of\n    // the scroll. eg if user scrolls down, we extend the rows by building down.\n    this.scrollGoingDown = true;\n    this.lastScrollTop = 0;\n    this.taskCount = 0;\n  }\n  setScrollTop(scrollTop) {\n    this.scrollGoingDown = scrollTop >= this.lastScrollTop;\n    if (scrollTop === 0) {\n      this.scrollGoingDown = true;\n    }\n    this.lastScrollTop = scrollTop;\n  }\n  postConstruct() {\n    this.active = !this.gos.get(\"suppressAnimationFrame\");\n    this.batchFrameworkComps = this.beans.frameworkOverrides.batchFrameworkComps;\n  }\n  // this method is for our AG Grid sanity only - if animation frames are turned off,\n  // then no place in the code should be looking to add any work to be done in animation\n  // frames. this stops bugs - where some code is asking for a frame to be executed\n  // when it should not.\n  verify() {\n    if (this.active === false) {\n      _warn(92);\n    }\n  }\n  createTask(task, index, list, isFramework, isDeferred = false) {\n    this.verify();\n    let taskList = list;\n    if (isFramework && this.batchFrameworkComps) {\n      taskList = \"f1\";\n    }\n    const taskItem = {\n      task,\n      index,\n      createOrder: ++this.taskCount,\n      deferred: isDeferred\n    };\n    this.addTaskToList(this[taskList], taskItem);\n    this.schedule();\n  }\n  addTaskToList(taskList, task) {\n    taskList.list.push(task);\n    taskList.sorted = false;\n  }\n  sortTaskList(taskList) {\n    if (taskList.sorted) {\n      return;\n    }\n    const sortDirection = this.scrollGoingDown ? 1 : -1;\n    taskList.list.sort((a, b) => {\n      if (a.deferred !== b.deferred) {\n        return a.deferred ? -1 : 1;\n      }\n      if (a.index !== b.index) {\n        return sortDirection * (b.index - a.index);\n      }\n      return b.createOrder - a.createOrder;\n    });\n    taskList.sorted = true;\n  }\n  addDestroyTask(task) {\n    this.verify();\n    this.destroyTasks.push(task);\n    this.schedule();\n  }\n  executeFrame(millis) {\n    const {\n      p1,\n      p2,\n      f1,\n      destroyTasks,\n      beans\n    } = this;\n    const {\n      ctrlsSvc,\n      frameworkOverrides\n    } = beans;\n    const p1Tasks = p1.list;\n    const p2Tasks = p2.list;\n    const f1Tasks = f1.list;\n    const frameStart = Date.now();\n    let duration = 0;\n    const noMaxMillis = millis <= 0;\n    const scrollFeature = ctrlsSvc.getScrollFeature();\n    while (noMaxMillis || duration < millis) {\n      const gridBodyDidSomething = scrollFeature.scrollGridIfNeeded();\n      if (!gridBodyDidSomething) {\n        let task;\n        if (p1Tasks.length) {\n          this.sortTaskList(p1);\n          task = p1Tasks.pop().task;\n        } else if (p2Tasks.length) {\n          this.sortTaskList(p2);\n          task = p2Tasks.pop().task;\n        } else if (f1Tasks.length) {\n          frameworkOverrides.wrapOutgoing(() => {\n            while (noMaxMillis || duration < millis) {\n              const gridBodyDidSomething2 = scrollFeature.scrollGridIfNeeded();\n              if (!gridBodyDidSomething2) {\n                if (f1Tasks.length) {\n                  this.sortTaskList(f1);\n                  task = f1Tasks.pop().task;\n                  task();\n                } else {\n                  break;\n                }\n              } else {\n                break;\n              }\n              duration = Date.now() - frameStart;\n            }\n          });\n          task = () => {};\n        } else if (destroyTasks.length) {\n          task = destroyTasks.pop();\n        } else {\n          break;\n        }\n        task();\n      }\n      duration = Date.now() - frameStart;\n    }\n    if (p1Tasks.length || p2Tasks.length || f1Tasks.length || destroyTasks.length) {\n      this.requestFrame();\n    } else {\n      this.ticking = false;\n    }\n  }\n  flushAllFrames() {\n    if (!this.active) {\n      return;\n    }\n    this.executeFrame(-1);\n  }\n  schedule() {\n    if (!this.active) {\n      return;\n    }\n    if (!this.ticking) {\n      this.ticking = true;\n      this.requestFrame();\n    }\n  }\n  requestFrame() {\n    const callback = this.executeFrame.bind(this, 60);\n    _requestAnimationFrame(this.beans, callback);\n  }\n  isQueueEmpty() {\n    return !this.ticking;\n  }\n};\n\n// packages/ag-grid-community/src/misc/animationFrameModule.ts\nvar AnimationFrameModule = {\n  moduleName: \"AnimationFrame\",\n  version: VERSION,\n  beans: [AnimationFrameService]\n};\n\n// packages/ag-grid-community/src/misc/touchService.ts\nvar TouchService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"touchSvc\";\n  }\n  mockBodyContextMenu(ctrl, listener) {\n    this.mockContextMenu(ctrl, ctrl.eBodyViewport, listener);\n  }\n  mockHeaderContextMenu(ctrl, listener) {\n    this.mockContextMenu(ctrl, ctrl.eGui, listener);\n  }\n  mockRowContextMenu(ctrl) {\n    if (!_isIOSUserAgent()) {\n      return;\n    }\n    const listener = (mouseListener, touch, touchEvent) => {\n      const {\n        rowCtrl,\n        cellCtrl\n      } = ctrl.getControlsForEventTarget(touchEvent?.target ?? null);\n      if (cellCtrl?.column) {\n        cellCtrl.dispatchCellContextMenuEvent(touchEvent ?? null);\n      }\n      this.beans.contextMenuSvc?.handleContextMenuMouseEvent(void 0, touchEvent, rowCtrl, cellCtrl);\n    };\n    this.mockContextMenu(ctrl, ctrl.element, listener);\n  }\n  handleCellDoubleClick(ctrl, mouseEvent) {\n    const isDoubleClickOnIPad = () => {\n      if (!_isIOSUserAgent() || _isEventSupported(\"dblclick\")) {\n        return false;\n      }\n      const nowMillis = Date.now();\n      const res = nowMillis - ctrl.lastIPadMouseClickEvent < 200;\n      ctrl.lastIPadMouseClickEvent = nowMillis;\n      return res;\n    };\n    if (isDoubleClickOnIPad()) {\n      ctrl.onCellDoubleClicked(mouseEvent);\n      mouseEvent.preventDefault();\n      return true;\n    }\n    return false;\n  }\n  setupForHeader(comp) {\n    const {\n      gos,\n      sortSvc,\n      menuSvc\n    } = this.beans;\n    if (gos.get(\"suppressTouch\")) {\n      return;\n    }\n    const {\n      params,\n      eMenu,\n      eFilterButton\n    } = comp;\n    const touchListener = new TouchListener(comp.getGui(), true);\n    const suppressMenuHide = comp.shouldSuppressMenuHide();\n    const tapMenuButton = suppressMenuHide && _exists(eMenu) && params.enableMenu;\n    const menuTouchListener = tapMenuButton ? new TouchListener(eMenu, true) : touchListener;\n    if (params.enableMenu || menuSvc?.isHeaderContextMenuEnabled(params.column)) {\n      const eventType = tapMenuButton ? \"tap\" : \"longTap\";\n      const showMenuFn = event => params.showColumnMenuAfterMouseClick(event.touchStart);\n      comp.addManagedListeners(menuTouchListener, {\n        [eventType]: showMenuFn\n      });\n    }\n    if (params.enableSorting) {\n      const tapListener = event => {\n        const target = event.touchStart.target;\n        if (suppressMenuHide && (eMenu?.contains(target) || eFilterButton?.contains(target))) {\n          return;\n        }\n        sortSvc?.progressSort(params.column, false, \"uiColumnSorted\");\n      };\n      comp.addManagedListeners(touchListener, {\n        tap: tapListener\n      });\n    }\n    if (params.enableFilterButton && eFilterButton) {\n      const filterButtonTouchListener = new TouchListener(eFilterButton, true);\n      comp.addManagedListeners(filterButtonTouchListener, {\n        tap: () => params.showFilter(eFilterButton)\n      });\n      comp.addDestroyFunc(() => filterButtonTouchListener.destroy());\n    }\n    comp.addDestroyFunc(() => touchListener.destroy());\n    if (tapMenuButton) {\n      comp.addDestroyFunc(() => menuTouchListener.destroy());\n    }\n  }\n  setupForHeaderGroup(comp) {\n    const params = comp.params;\n    if (this.beans.menuSvc?.isHeaderContextMenuEnabled(params.columnGroup.getProvidedColumnGroup())) {\n      const touchListener = new TouchListener(params.eGridHeader, true);\n      const showMenuFn = event => params.showColumnMenuAfterMouseClick(event.touchStart);\n      comp.addManagedListeners(touchListener, {\n        longTap: showMenuFn\n      });\n      comp.addDestroyFunc(() => touchListener.destroy());\n    }\n  }\n  setupForHeaderGroupElement(comp, eElement, action) {\n    const touchListener = new TouchListener(eElement, true);\n    comp.addManagedListeners(touchListener, {\n      tap: action\n    });\n    comp.addDestroyFunc(() => touchListener.destroy());\n  }\n  mockContextMenu(ctrl, element, listener) {\n    if (!_isIOSUserAgent()) {\n      return;\n    }\n    const touchListener = new TouchListener(element);\n    const longTapListener = event => {\n      if (!_isEventFromThisGrid(this.gos, event.touchEvent)) {\n        return;\n      }\n      listener(void 0, event.touchStart, event.touchEvent);\n    };\n    ctrl.addManagedListeners(touchListener, {\n      longTap: longTapListener\n    });\n    ctrl.addDestroyFunc(() => touchListener.destroy());\n  }\n};\n\n// packages/ag-grid-community/src/misc/touchModule.ts\nvar TouchModule = {\n  moduleName: \"Touch\",\n  version: VERSION,\n  beans: [TouchService]\n};\n\n// packages/ag-grid-community/src/navigation/cellNavigationService.ts\nvar CellNavigationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"cellNavigation\";\n  }\n  wireBeans(beans) {\n    this.rowSpanSvc = beans.rowSpanSvc;\n  }\n  // returns null if no cell to focus on, ie at the end of the grid\n  getNextCellToFocus(key, focusedCell, ctrlPressed = false) {\n    if (ctrlPressed) {\n      return this.getNextCellToFocusWithCtrlPressed(key, focusedCell);\n    }\n    return this.getNextCellToFocusWithoutCtrlPressed(key, focusedCell);\n  }\n  getNextCellToFocusWithCtrlPressed(key, focusedCell) {\n    const upKey = key === KeyCode.UP;\n    const downKey = key === KeyCode.DOWN;\n    const leftKey = key === KeyCode.LEFT;\n    let column;\n    let rowIndex;\n    const {\n      pageBounds,\n      gos,\n      visibleCols,\n      pinnedRowModel\n    } = this.beans;\n    const {\n      rowPinned\n    } = focusedCell;\n    if (upKey || downKey) {\n      if (rowPinned && pinnedRowModel) {\n        if (upKey) {\n          rowIndex = 0;\n        } else {\n          rowIndex = rowPinned === \"top\" ? pinnedRowModel.getPinnedTopRowCount() - 1 : pinnedRowModel.getPinnedBottomRowCount() - 1;\n        }\n      } else {\n        rowIndex = upKey ? pageBounds.getFirstRow() : pageBounds.getLastRow();\n      }\n      column = focusedCell.column;\n    } else {\n      const isRtl = gos.get(\"enableRtl\");\n      rowIndex = focusedCell.rowIndex;\n      const allColumns = leftKey !== isRtl ? visibleCols.allCols : [...visibleCols.allCols].reverse();\n      column = allColumns.find(col => this.isCellGoodToFocusOn({\n        rowIndex,\n        rowPinned: null,\n        column: col\n      }));\n    }\n    return column ? {\n      rowIndex,\n      rowPinned,\n      column\n    } : null;\n  }\n  getNextCellToFocusWithoutCtrlPressed(key, focusedCell) {\n    let pointer = focusedCell;\n    let finished = false;\n    while (!finished) {\n      switch (key) {\n        case KeyCode.UP:\n          pointer = this.getCellAbove(pointer);\n          break;\n        case KeyCode.DOWN:\n          pointer = this.getCellBelow(pointer);\n          break;\n        case KeyCode.RIGHT:\n          pointer = this.gos.get(\"enableRtl\") ? this.getCellToLeft(pointer) : this.getCellToRight(pointer);\n          break;\n        case KeyCode.LEFT:\n          pointer = this.gos.get(\"enableRtl\") ? this.getCellToRight(pointer) : this.getCellToLeft(pointer);\n          break;\n        default:\n          pointer = null;\n          _warn(8, {\n            key\n          });\n          break;\n      }\n      if (pointer) {\n        finished = this.isCellGoodToFocusOn(pointer);\n      } else {\n        finished = true;\n      }\n    }\n    return pointer;\n  }\n  isCellGoodToFocusOn(gridCell) {\n    const column = gridCell.column;\n    let rowNode;\n    const {\n      pinnedRowModel,\n      rowModel\n    } = this.beans;\n    switch (gridCell.rowPinned) {\n      case \"top\":\n        rowNode = pinnedRowModel?.getPinnedTopRow(gridCell.rowIndex);\n        break;\n      case \"bottom\":\n        rowNode = pinnedRowModel?.getPinnedBottomRow(gridCell.rowIndex);\n        break;\n      default:\n        rowNode = rowModel.getRow(gridCell.rowIndex);\n        break;\n    }\n    if (!rowNode) {\n      return false;\n    }\n    const suppressNavigable = this.isSuppressNavigable(column, rowNode);\n    return !suppressNavigable;\n  }\n  getCellToLeft(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const colToLeft = this.beans.visibleCols.getColBefore(lastCell.column);\n    if (!colToLeft) {\n      return null;\n    }\n    return {\n      rowIndex: lastCell.rowIndex,\n      column: colToLeft,\n      rowPinned: lastCell.rowPinned\n    };\n  }\n  getCellToRight(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const colToRight = this.beans.visibleCols.getColAfter(lastCell.column);\n    if (!colToRight) {\n      return null;\n    }\n    return {\n      rowIndex: lastCell.rowIndex,\n      column: colToRight,\n      rowPinned: lastCell.rowPinned\n    };\n  }\n  getCellBelow(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const adjustedLastCell = this.rowSpanSvc?.getCellEnd(lastCell) ?? lastCell;\n    const rowBelow = _getRowBelow(this.beans, adjustedLastCell);\n    if (rowBelow) {\n      return {\n        rowIndex: rowBelow.rowIndex,\n        column: lastCell.column,\n        rowPinned: rowBelow.rowPinned\n      };\n    }\n    return null;\n  }\n  getCellAbove(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const adjustedLastCell = this.rowSpanSvc?.getCellStart(lastCell) ?? lastCell;\n    const rowAbove = _getRowAbove(this.beans, {\n      rowIndex: adjustedLastCell.rowIndex,\n      rowPinned: adjustedLastCell.rowPinned\n    });\n    if (rowAbove) {\n      return {\n        rowIndex: rowAbove.rowIndex,\n        column: lastCell.column,\n        rowPinned: rowAbove.rowPinned\n      };\n    }\n    return null;\n  }\n  getNextTabbedCell(gridCell, backwards) {\n    if (backwards) {\n      return this.getNextTabbedCellBackwards(gridCell);\n    }\n    return this.getNextTabbedCellForwards(gridCell);\n  }\n  getNextTabbedCellForwards(gridCell) {\n    const {\n      visibleCols,\n      pagination\n    } = this.beans;\n    const displayedColumns = visibleCols.allCols;\n    let newRowIndex = gridCell.rowIndex;\n    let newFloating = gridCell.rowPinned;\n    let newColumn = visibleCols.getColAfter(gridCell.column);\n    if (!newColumn) {\n      newColumn = displayedColumns[0];\n      const rowBelow = _getRowBelow(this.beans, gridCell);\n      if (_missing(rowBelow)) {\n        return null;\n      }\n      if (!rowBelow.rowPinned && !(pagination?.isRowInPage(rowBelow.rowIndex) ?? true)) {\n        return null;\n      }\n      newRowIndex = rowBelow ? rowBelow.rowIndex : null;\n      newFloating = rowBelow ? rowBelow.rowPinned : null;\n    }\n    return {\n      rowIndex: newRowIndex,\n      column: newColumn,\n      rowPinned: newFloating\n    };\n  }\n  getNextTabbedCellBackwards(gridCell) {\n    const {\n      beans\n    } = this;\n    const {\n      visibleCols,\n      pagination\n    } = beans;\n    const displayedColumns = visibleCols.allCols;\n    let newRowIndex = gridCell.rowIndex;\n    let newFloating = gridCell.rowPinned;\n    let newColumn = visibleCols.getColBefore(gridCell.column);\n    if (!newColumn) {\n      newColumn = _last(displayedColumns);\n      const rowAbove = _getRowAbove(beans, {\n        rowIndex: gridCell.rowIndex,\n        rowPinned: gridCell.rowPinned\n      });\n      if (_missing(rowAbove)) {\n        return null;\n      }\n      if (!rowAbove.rowPinned && !(pagination?.isRowInPage(rowAbove.rowIndex) ?? true)) {\n        return null;\n      }\n      newRowIndex = rowAbove ? rowAbove.rowIndex : null;\n      newFloating = rowAbove ? rowAbove.rowPinned : null;\n    }\n    return {\n      rowIndex: newRowIndex,\n      column: newColumn,\n      rowPinned: newFloating\n    };\n  }\n  isSuppressNavigable(column, rowNode) {\n    const {\n      suppressNavigable\n    } = column.colDef;\n    if (typeof suppressNavigable === \"boolean\") {\n      return suppressNavigable;\n    }\n    if (typeof suppressNavigable === \"function\") {\n      const params = column.createColumnFunctionCallbackParams(rowNode);\n      const userFunc = suppressNavigable;\n      return userFunc(params);\n    }\n    return false;\n  }\n};\n\n// packages/ag-grid-community/src/navigation/navigationApi.ts\nfunction getFocusedCell(beans) {\n  return beans.focusSvc.getFocusedCell();\n}\nfunction clearFocusedCell(beans) {\n  return beans.focusSvc.clearFocusedCell();\n}\nfunction setFocusedCell(beans, rowIndex, colKey, rowPinned) {\n  beans.focusSvc.setFocusedCell({\n    rowIndex,\n    column: colKey,\n    rowPinned,\n    forceBrowserFocus: true\n  });\n}\nfunction tabToNextCell(beans, event) {\n  return beans.navigation?.tabToNextCell(false, event) ?? false;\n}\nfunction tabToPreviousCell(beans, event) {\n  return beans.navigation?.tabToNextCell(true, event) ?? false;\n}\nfunction setFocusedHeader(beans, colKey, floatingFilter = false) {\n  const headerPosition = beans.headerNavigation?.getHeaderPositionForColumn(colKey, floatingFilter);\n  if (!headerPosition) {\n    return;\n  }\n  beans.focusSvc.focusHeaderPosition({\n    headerPosition\n  });\n}\n\n// packages/ag-grid-community/src/navigation/navigationService.ts\nvar NavigationService = class extends BeanStub {\n  constructor() {\n    super();\n    this.beanName = \"navigation\";\n    this.onPageDown = _throttle(this.onPageDown, 100);\n    this.onPageUp = _throttle(this.onPageUp, 100);\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, p => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n  }\n  handlePageScrollingKey(event, fromFullWidth = false) {\n    const key = event.key;\n    const alt = event.altKey;\n    const ctrl = event.ctrlKey || event.metaKey;\n    const rangeServiceShouldHandleShift = !!this.beans.rangeSvc && event.shiftKey;\n    const currentCell = _getCellPositionForEvent(this.gos, event);\n    let processed = false;\n    switch (key) {\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        if (!ctrl && !alt) {\n          this.onHomeOrEndKey(key);\n          processed = true;\n        }\n        break;\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        if (!currentCell) {\n          return false;\n        }\n        if (ctrl && !alt && !rangeServiceShouldHandleShift) {\n          this.onCtrlUpDownLeftRight(key, currentCell);\n          processed = true;\n        }\n        break;\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n        if (!ctrl && !alt) {\n          processed = this.handlePageUpDown(key, currentCell, fromFullWidth);\n        }\n        break;\n    }\n    if (processed) {\n      event.preventDefault();\n    }\n    return processed;\n  }\n  handlePageUpDown(key, currentCell, fromFullWidth) {\n    if (fromFullWidth) {\n      currentCell = this.beans.focusSvc.getFocusedCell();\n    }\n    if (!currentCell) {\n      return false;\n    }\n    if (key === KeyCode.PAGE_UP) {\n      this.onPageUp(currentCell);\n    } else {\n      this.onPageDown(currentCell);\n    }\n    return true;\n  }\n  navigateTo({\n    scrollIndex,\n    scrollType,\n    scrollColumn,\n    focusIndex,\n    focusColumn,\n    isAsync,\n    rowPinned\n  }) {\n    const {\n      scrollFeature\n    } = this.gridBodyCon;\n    if (_exists(scrollColumn) && !scrollColumn.isPinned()) {\n      scrollFeature.ensureColumnVisible(scrollColumn);\n    }\n    if (_exists(scrollIndex)) {\n      scrollFeature.ensureIndexVisible(scrollIndex, scrollType);\n    }\n    if (!isAsync) {\n      scrollFeature.ensureIndexVisible(focusIndex);\n    }\n    const {\n      focusSvc,\n      rangeSvc\n    } = this.beans;\n    focusSvc.setFocusedCell({\n      rowIndex: focusIndex,\n      column: focusColumn,\n      rowPinned,\n      forceBrowserFocus: true\n    });\n    rangeSvc?.setRangeToCell({\n      rowIndex: focusIndex,\n      rowPinned,\n      column: focusColumn\n    });\n  }\n  // this method is throttled, see the `constructor`\n  onPageDown(gridCell) {\n    const beans = this.beans;\n    const scrollPosition = getVScroll(beans);\n    const pixelsInOnePage = this.getViewportHeight();\n    const {\n      pageBounds,\n      rowModel,\n      rowAutoHeight\n    } = beans;\n    const pagingPixelOffset = pageBounds.getPixelOffset();\n    const currentPageBottomPixel = scrollPosition.top + pixelsInOnePage;\n    const currentPageBottomRow = rowModel.getRowIndexAtPixel(currentPageBottomPixel + pagingPixelOffset);\n    if (rowAutoHeight?.active) {\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageBottomRow);\n    } else {\n      this.navigateToNextPage(gridCell, currentPageBottomRow);\n    }\n  }\n  // this method is throttled, see the `constructor`\n  onPageUp(gridCell) {\n    const beans = this.beans;\n    const scrollPosition = getVScroll(beans);\n    const {\n      pageBounds,\n      rowModel,\n      rowAutoHeight\n    } = beans;\n    const pagingPixelOffset = pageBounds.getPixelOffset();\n    const currentPageTopPixel = scrollPosition.top;\n    const currentPageTopRow = rowModel.getRowIndexAtPixel(currentPageTopPixel + pagingPixelOffset);\n    if (rowAutoHeight?.active) {\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageTopRow, true);\n    } else {\n      this.navigateToNextPage(gridCell, currentPageTopRow, true);\n    }\n  }\n  navigateToNextPage(gridCell, scrollIndex, up = false) {\n    const {\n      pageBounds,\n      rowModel\n    } = this.beans;\n    const pixelsInOnePage = this.getViewportHeight();\n    const firstRow = pageBounds.getFirstRow();\n    const lastRow = pageBounds.getLastRow();\n    const pagingPixelOffset = pageBounds.getPixelOffset();\n    const currentRowNode = rowModel.getRow(gridCell.rowIndex);\n    const rowPixelDiff = up ?\n    // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n    currentRowNode?.rowHeight - pixelsInOnePage - pagingPixelOffset : pixelsInOnePage - pagingPixelOffset;\n    const nextCellPixel = currentRowNode?.rowTop + rowPixelDiff;\n    let focusIndex = rowModel.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\n    if (focusIndex === gridCell.rowIndex) {\n      const diff = up ? -1 : 1;\n      scrollIndex = focusIndex = gridCell.rowIndex + diff;\n    }\n    let scrollType;\n    if (up) {\n      scrollType = \"bottom\";\n      if (focusIndex < firstRow) {\n        focusIndex = firstRow;\n      }\n      if (scrollIndex < firstRow) {\n        scrollIndex = firstRow;\n      }\n    } else {\n      scrollType = \"top\";\n      if (focusIndex > lastRow) {\n        focusIndex = lastRow;\n      }\n      if (scrollIndex > lastRow) {\n        scrollIndex = lastRow;\n      }\n    }\n    if (this.isRowTallerThanView(rowModel.getRow(focusIndex))) {\n      scrollIndex = focusIndex;\n      scrollType = \"top\";\n    }\n    this.navigateTo({\n      scrollIndex,\n      scrollType,\n      scrollColumn: null,\n      focusIndex,\n      focusColumn: gridCell.column\n    });\n  }\n  navigateToNextPageWithAutoHeight(gridCell, scrollIndex, up = false) {\n    this.navigateTo({\n      scrollIndex,\n      scrollType: up ? \"bottom\" : \"top\",\n      scrollColumn: null,\n      focusIndex: scrollIndex,\n      focusColumn: gridCell.column\n    });\n    setTimeout(() => {\n      const focusIndex = this.getNextFocusIndexForAutoHeight(gridCell, up);\n      this.navigateTo({\n        scrollIndex,\n        scrollType: up ? \"bottom\" : \"top\",\n        scrollColumn: null,\n        focusIndex,\n        focusColumn: gridCell.column,\n        isAsync: true\n      });\n    }, 50);\n  }\n  getNextFocusIndexForAutoHeight(gridCell, up = false) {\n    const step = up ? -1 : 1;\n    const pixelsInOnePage = this.getViewportHeight();\n    const {\n      pageBounds,\n      rowModel\n    } = this.beans;\n    const lastRowIndex = pageBounds.getLastRow();\n    let pixelSum = 0;\n    let currentIndex = gridCell.rowIndex;\n    while (currentIndex >= 0 && currentIndex <= lastRowIndex) {\n      const currentCell = rowModel.getRow(currentIndex);\n      if (currentCell) {\n        const currentCellHeight = currentCell.rowHeight ?? 0;\n        if (pixelSum + currentCellHeight > pixelsInOnePage) {\n          break;\n        }\n        pixelSum += currentCellHeight;\n      }\n      currentIndex += step;\n    }\n    return Math.max(0, Math.min(currentIndex, lastRowIndex));\n  }\n  getViewportHeight() {\n    const beans = this.beans;\n    const scrollPosition = getVScroll(beans);\n    const scrollbarWidth = this.beans.scrollVisibleSvc.getScrollbarWidth();\n    let pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\n    if (beans.ctrlsSvc.get(\"center\").isHorizontalScrollShowing()) {\n      pixelsInOnePage -= scrollbarWidth;\n    }\n    return pixelsInOnePage;\n  }\n  isRowTallerThanView(rowNode) {\n    if (!rowNode) {\n      return false;\n    }\n    const rowHeight = rowNode.rowHeight;\n    if (typeof rowHeight !== \"number\") {\n      return false;\n    }\n    return rowHeight > this.getViewportHeight();\n  }\n  onCtrlUpDownLeftRight(key, gridCell) {\n    const cellToFocus = this.beans.cellNavigation.getNextCellToFocus(key, gridCell, true);\n    const {\n      rowIndex,\n      rowPinned\n    } = cellToFocus;\n    const column = cellToFocus.column;\n    this.navigateTo({\n      scrollIndex: rowIndex,\n      scrollType: null,\n      scrollColumn: column,\n      focusIndex: rowIndex,\n      focusColumn: column,\n      rowPinned\n    });\n  }\n  // home brings focus to top left cell, end brings focus to bottom right, grid scrolled to bring\n  // same cell into view (which means either scroll all the way up, or all the way down).\n  onHomeOrEndKey(key) {\n    const homeKey = key === KeyCode.PAGE_HOME;\n    const {\n      visibleCols,\n      pageBounds,\n      rowModel\n    } = this.beans;\n    const allColumns = visibleCols.allCols;\n    const scrollIndex = homeKey ? pageBounds.getFirstRow() : pageBounds.getLastRow();\n    const rowNode = rowModel.getRow(scrollIndex);\n    if (!rowNode) {\n      return;\n    }\n    const columnToSelect = (homeKey ? allColumns : [...allColumns].reverse()).find(col => !col.isSuppressNavigable(rowNode));\n    if (!columnToSelect) {\n      return;\n    }\n    this.navigateTo({\n      scrollIndex,\n      scrollType: null,\n      scrollColumn: columnToSelect,\n      focusIndex: scrollIndex,\n      focusColumn: columnToSelect\n    });\n  }\n  // result of keyboard event\n  onTabKeyDown(previous, keyboardEvent) {\n    const backwards = keyboardEvent.shiftKey;\n    const movedToNextCell = this.tabToNextCellCommon(previous, backwards, keyboardEvent);\n    const beans = this.beans;\n    const {\n      ctrlsSvc,\n      pageBounds,\n      focusSvc,\n      gos\n    } = beans;\n    if (movedToNextCell !== false) {\n      if (movedToNextCell) {\n        keyboardEvent.preventDefault();\n      } else if (movedToNextCell === null) {\n        ctrlsSvc.get(\"gridCtrl\").allowFocusForNextCoreContainer(backwards);\n      }\n      return;\n    }\n    if (backwards) {\n      const {\n        rowIndex,\n        rowPinned\n      } = previous.getRowPosition();\n      const firstRow = rowPinned ? rowIndex === 0 : rowIndex === pageBounds.getFirstRow();\n      if (firstRow) {\n        if (gos.get(\"headerHeight\") === 0 || _isHeaderFocusSuppressed(beans)) {\n          _focusNextGridCoreContainer(beans, true, true);\n        } else {\n          keyboardEvent.preventDefault();\n          focusSvc.focusPreviousFromFirstCell(keyboardEvent);\n        }\n      }\n    } else {\n      if (previous instanceof CellCtrl) {\n        previous.focusCell(true);\n      }\n      if (!backwards && focusSvc.focusOverlay(false) || _focusNextGridCoreContainer(beans, backwards)) {\n        keyboardEvent.preventDefault();\n      }\n    }\n  }\n  // comes from API\n  tabToNextCell(backwards, event) {\n    const beans = this.beans;\n    const {\n      focusSvc,\n      rowRenderer\n    } = beans;\n    const focusedCell = focusSvc.getFocusedCell();\n    if (!focusedCell) {\n      return false;\n    }\n    let cellOrRow = _getCellByPosition(beans, focusedCell);\n    if (!cellOrRow) {\n      cellOrRow = rowRenderer.getRowByPosition(focusedCell);\n      if (!cellOrRow || !cellOrRow.isFullWidth()) {\n        return false;\n      }\n    }\n    return !!this.tabToNextCellCommon(cellOrRow, backwards, event, \"api\");\n  }\n  tabToNextCellCommon(previous, backwards, event, source = \"ui\") {\n    const {\n      editSvc,\n      focusSvc\n    } = this.beans;\n    let res = void 0;\n    const cellCtrl = previous instanceof CellCtrl ? previous : previous.getAllCellCtrls()?.[0];\n    if (editSvc?.isEditing()) {\n      res = editSvc?.moveToNextCell(cellCtrl, backwards, event, source);\n    } else {\n      res = this.moveToNextCellNotEditing(previous, backwards, event);\n    }\n    if (res === null) {\n      return res;\n    }\n    return res || !!focusSvc.focusedHeader;\n  }\n  // returns null if no navigation should be performed\n  moveToNextCellNotEditing(previousCell, backwards, event) {\n    const displayedColumns = this.beans.visibleCols.allCols;\n    let cellPos;\n    if (previousCell instanceof RowCtrl) {\n      cellPos = {\n        ...previousCell.getRowPosition(),\n        column: backwards ? displayedColumns[0] : _last(displayedColumns)\n      };\n      if (this.gos.get(\"embedFullWidthRows\") && event) {\n        const focusedContainer = previousCell.findFullWidthInfoForEvent(event);\n        if (focusedContainer) {\n          cellPos.column = focusedContainer.column;\n        }\n      }\n    } else {\n      cellPos = previousCell.getFocusedCellPosition();\n    }\n    const nextCell = this.findNextCellToFocusOn(cellPos, {\n      backwards,\n      startEditing: false\n    });\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell instanceof CellCtrl) {\n      nextCell.focusCell(true);\n    } else if (nextCell) {\n      return this.tryToFocusFullWidthRow(nextCell, backwards);\n    }\n    return _exists(nextCell);\n  }\n  /**\n   * called by the cell, when tab is pressed while editing.\n   * @returns RenderedCell when navigation successful, false if navigation should not be performed, otherwise null\n   */\n  findNextCellToFocusOn(previousPosition, {\n    backwards,\n    startEditing,\n    skipToNextEditableCell\n  }) {\n    let nextPosition = previousPosition;\n    const beans = this.beans;\n    const {\n      cellNavigation,\n      gos,\n      focusSvc,\n      rowRenderer,\n      rangeSvc\n    } = beans;\n    while (true) {\n      if (previousPosition !== nextPosition) {\n        previousPosition = nextPosition;\n      }\n      if (!backwards) {\n        nextPosition = this.getLastCellOfColSpan(nextPosition);\n      }\n      nextPosition = cellNavigation.getNextTabbedCell(nextPosition, backwards);\n      const userFunc = gos.getCallback(\"tabToNextCell\");\n      if (_exists(userFunc)) {\n        const params = {\n          backwards,\n          editing: startEditing,\n          previousCellPosition: previousPosition,\n          nextCellPosition: nextPosition ? nextPosition : null\n        };\n        const userResult = userFunc(params);\n        if (userResult === true) {\n          nextPosition = previousPosition;\n        } else if (userResult === false) {\n          return false;\n        } else {\n          nextPosition = {\n            rowIndex: userResult.rowIndex,\n            column: userResult.column,\n            rowPinned: userResult.rowPinned\n          };\n        }\n      }\n      if (!nextPosition) {\n        return null;\n      }\n      if (nextPosition.rowIndex < 0) {\n        const headerLen = getFocusHeaderRowCount(beans);\n        focusSvc.focusHeaderPosition({\n          headerPosition: {\n            headerRowIndex: headerLen + nextPosition.rowIndex,\n            column: nextPosition.column\n          },\n          fromCell: true\n        });\n        return null;\n      }\n      const fullRowEdit = gos.get(\"editType\") === \"fullRow\";\n      if (startEditing && (!fullRowEdit || skipToNextEditableCell)) {\n        const cellIsEditable = this.isCellEditable(nextPosition);\n        if (!cellIsEditable) {\n          continue;\n        }\n      }\n      this.ensureCellVisible(nextPosition);\n      const nextCell = _getCellByPosition(beans, nextPosition);\n      if (!nextCell) {\n        const row = rowRenderer.getRowByPosition(nextPosition);\n        if (!row || !row.isFullWidth() || startEditing) {\n          continue;\n        }\n        return {\n          ...row.getRowPosition(),\n          column: nextPosition?.column\n        };\n      }\n      if (cellNavigation.isSuppressNavigable(nextCell.column, nextCell.rowNode)) {\n        continue;\n      }\n      nextCell.setFocusedCellPosition(nextPosition);\n      rangeSvc?.setRangeToCell(nextPosition);\n      return nextCell;\n    }\n  }\n  isCellEditable(cell) {\n    const rowNode = this.lookupRowNodeForCell(cell);\n    if (rowNode) {\n      return cell.column.isCellEditable(rowNode);\n    }\n    return false;\n  }\n  lookupRowNodeForCell({\n    rowIndex,\n    rowPinned\n  }) {\n    const {\n      pinnedRowModel,\n      rowModel\n    } = this.beans;\n    if (rowPinned === \"top\") {\n      return pinnedRowModel?.getPinnedTopRow(rowIndex);\n    }\n    if (rowPinned === \"bottom\") {\n      return pinnedRowModel?.getPinnedBottomRow(rowIndex);\n    }\n    return rowModel.getRow(rowIndex);\n  }\n  // we use index for rows, but column object for columns, as the next column (by index) might not\n  // be visible (header grouping) so it's not reliable, so using the column object instead.\n  navigateToNextCell(event, key, currentCell, allowUserOverride) {\n    let nextCell = currentCell;\n    let hitEdgeOfGrid = false;\n    const beans = this.beans;\n    const {\n      cellNavigation,\n      focusSvc,\n      gos\n    } = beans;\n    while (nextCell && (nextCell === currentCell || !this.isValidNavigateCell(nextCell))) {\n      if (gos.get(\"enableRtl\")) {\n        if (key === KeyCode.LEFT) {\n          nextCell = this.getLastCellOfColSpan(nextCell);\n        }\n      } else if (key === KeyCode.RIGHT) {\n        nextCell = this.getLastCellOfColSpan(nextCell);\n      }\n      nextCell = cellNavigation.getNextCellToFocus(key, nextCell);\n      hitEdgeOfGrid = _missing(nextCell);\n    }\n    if (hitEdgeOfGrid && event && event.key === KeyCode.UP) {\n      nextCell = {\n        rowIndex: -1,\n        rowPinned: null,\n        column: currentCell.column\n      };\n    }\n    if (allowUserOverride) {\n      const userFunc = gos.getCallback(\"navigateToNextCell\");\n      if (_exists(userFunc)) {\n        const params = {\n          key,\n          previousCellPosition: currentCell,\n          nextCellPosition: nextCell ? nextCell : null,\n          event\n        };\n        const userCell = userFunc(params);\n        if (_exists(userCell)) {\n          nextCell = {\n            rowPinned: userCell.rowPinned,\n            rowIndex: userCell.rowIndex,\n            column: userCell.column\n          };\n        } else {\n          nextCell = null;\n        }\n      }\n    }\n    if (!nextCell) {\n      return;\n    }\n    if (nextCell.rowIndex < 0) {\n      const headerLen = getFocusHeaderRowCount(beans);\n      focusSvc.focusHeaderPosition({\n        headerPosition: {\n          headerRowIndex: headerLen + nextCell.rowIndex,\n          column: currentCell.column\n        },\n        event: event || void 0,\n        fromCell: true\n      });\n      return;\n    }\n    const normalisedPosition = this.getNormalisedPosition(nextCell);\n    if (normalisedPosition) {\n      this.focusPosition(normalisedPosition);\n    } else {\n      this.tryToFocusFullWidthRow(nextCell);\n    }\n  }\n  getNormalisedPosition(cellPosition) {\n    const isSpannedCell = !!this.beans.spannedRowRenderer?.getCellByPosition(cellPosition);\n    if (isSpannedCell) {\n      return cellPosition;\n    }\n    this.ensureCellVisible(cellPosition);\n    const cellCtrl = _getCellByPosition(this.beans, cellPosition);\n    if (!cellCtrl) {\n      return null;\n    }\n    cellPosition = cellCtrl.getFocusedCellPosition();\n    this.ensureCellVisible(cellPosition);\n    return cellPosition;\n  }\n  tryToFocusFullWidthRow(position, backwards) {\n    const {\n      visibleCols,\n      rowRenderer,\n      focusSvc,\n      eventSvc\n    } = this.beans;\n    const displayedColumns = visibleCols.allCols;\n    const rowComp = rowRenderer.getRowByPosition(position);\n    if (!rowComp || !rowComp.isFullWidth()) {\n      return false;\n    }\n    const currentCellFocused = focusSvc.getFocusedCell();\n    const cellPosition = {\n      rowIndex: position.rowIndex,\n      rowPinned: position.rowPinned,\n      column: position.column || (backwards ? _last(displayedColumns) : displayedColumns[0])\n    };\n    this.focusPosition(cellPosition);\n    const fromBelow = backwards == null ? currentCellFocused != null && _isRowBefore(cellPosition, currentCellFocused) : backwards;\n    eventSvc.dispatchEvent({\n      type: \"fullWidthRowFocused\",\n      rowIndex: cellPosition.rowIndex,\n      rowPinned: cellPosition.rowPinned,\n      column: cellPosition.column,\n      isFullWidthCell: true,\n      fromBelow\n    });\n    return true;\n  }\n  focusPosition(cellPosition) {\n    const {\n      focusSvc,\n      rangeSvc\n    } = this.beans;\n    focusSvc.setFocusedCell({\n      rowIndex: cellPosition.rowIndex,\n      column: cellPosition.column,\n      rowPinned: cellPosition.rowPinned,\n      forceBrowserFocus: true\n    });\n    rangeSvc?.setRangeToCell(cellPosition);\n  }\n  isValidNavigateCell(cell) {\n    const rowNode = _getRowNode(this.beans, cell);\n    return !!rowNode;\n  }\n  getLastCellOfColSpan(cell) {\n    const cellCtrl = _getCellByPosition(this.beans, cell);\n    if (!cellCtrl) {\n      return cell;\n    }\n    const colSpanningList = cellCtrl.getColSpanningList();\n    if (colSpanningList.length === 1) {\n      return cell;\n    }\n    return {\n      rowIndex: cell.rowIndex,\n      column: _last(colSpanningList),\n      rowPinned: cell.rowPinned\n    };\n  }\n  ensureCellVisible(gridCell) {\n    const isGroupStickyEnabled = _isGroupRowsSticky(this.gos);\n    const rowNode = this.beans.rowModel.getRow(gridCell.rowIndex);\n    const skipScrollToRow = isGroupStickyEnabled && rowNode?.sticky;\n    const {\n      scrollFeature\n    } = this.gridBodyCon;\n    if (!skipScrollToRow && _missing(gridCell.rowPinned)) {\n      scrollFeature.ensureIndexVisible(gridCell.rowIndex);\n    }\n    if (!gridCell.column.isPinned()) {\n      scrollFeature.ensureColumnVisible(gridCell.column);\n    }\n  }\n  ensureColumnVisible(column) {\n    const scrollFeature = this.gridBodyCon.scrollFeature;\n    if (!column.isPinned()) {\n      scrollFeature.ensureColumnVisible(column);\n    }\n  }\n  ensureRowVisible(rowIndex) {\n    const scrollFeature = this.gridBodyCon.scrollFeature;\n    scrollFeature.ensureIndexVisible(rowIndex);\n  }\n};\nfunction getVScroll(beans) {\n  return beans.ctrlsSvc.getScrollFeature().getVScrollPosition();\n}\n\n// packages/ag-grid-community/src/navigation/navigationModule.ts\nvar KeyboardNavigationModule = {\n  moduleName: \"KeyboardNavigation\",\n  version: VERSION,\n  beans: [NavigationService, CellNavigationService, HeaderNavigationService],\n  apiFunctions: {\n    getFocusedCell,\n    clearFocusedCell,\n    setFocusedCell,\n    setFocusedHeader,\n    tabToNextCell,\n    tabToPreviousCell\n  }\n};\n\n// packages/ag-grid-community/src/pagination/pageBoundsListener.ts\nvar PageBoundsListener = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pageBoundsListener\";\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      modelUpdated: this.onModelUpdated.bind(this),\n      recalculateRowBounds: this.calculatePages.bind(this)\n    });\n    this.onModelUpdated();\n  }\n  onModelUpdated(modelUpdatedEvent) {\n    this.calculatePages();\n    this.eventSvc.dispatchEvent({\n      type: \"paginationChanged\",\n      animate: modelUpdatedEvent?.animate ?? false,\n      newData: modelUpdatedEvent?.newData ?? false,\n      newPage: modelUpdatedEvent?.newPage ?? false,\n      newPageSize: modelUpdatedEvent?.newPageSize ?? false,\n      keepRenderedRows: modelUpdatedEvent?.keepRenderedRows ?? false\n    });\n  }\n  calculatePages() {\n    const {\n      pageBounds,\n      pagination,\n      rowModel\n    } = this.beans;\n    if (pagination) {\n      pagination.calculatePages();\n    } else {\n      pageBounds.calculateBounds(0, rowModel.getRowCount() - 1);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/pagination/pageBoundsService.ts\nvar PageBoundsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pageBounds\";\n    this.pixelOffset = 0;\n  }\n  getFirstRow() {\n    return this.topRowBounds?.rowIndex ?? -1;\n  }\n  getLastRow() {\n    return this.bottomRowBounds?.rowIndex ?? -1;\n  }\n  getCurrentPageHeight() {\n    const {\n      topRowBounds,\n      bottomRowBounds\n    } = this;\n    if (!topRowBounds || !bottomRowBounds) {\n      return 0;\n    }\n    return Math.max(bottomRowBounds.rowTop + bottomRowBounds.rowHeight - topRowBounds.rowTop, 0);\n  }\n  getCurrentPagePixelRange() {\n    const {\n      topRowBounds,\n      bottomRowBounds\n    } = this;\n    const pageFirstPixel = topRowBounds?.rowTop ?? 0;\n    const pageLastPixel = bottomRowBounds ? bottomRowBounds.rowTop + bottomRowBounds.rowHeight : 0;\n    return {\n      pageFirstPixel,\n      pageLastPixel\n    };\n  }\n  calculateBounds(topDisplayedRowIndex, bottomDisplayedRowIndex) {\n    const {\n      rowModel\n    } = this.beans;\n    const topRowBounds = rowModel.getRowBounds(topDisplayedRowIndex);\n    if (topRowBounds) {\n      topRowBounds.rowIndex = topDisplayedRowIndex;\n    }\n    this.topRowBounds = topRowBounds;\n    const bottomRowBounds = rowModel.getRowBounds(bottomDisplayedRowIndex);\n    if (bottomRowBounds) {\n      bottomRowBounds.rowIndex = bottomDisplayedRowIndex;\n    }\n    this.bottomRowBounds = bottomRowBounds;\n    this.calculatePixelOffset();\n  }\n  getPixelOffset() {\n    return this.pixelOffset;\n  }\n  calculatePixelOffset() {\n    const value = this.topRowBounds?.rowTop ?? 0;\n    if (this.pixelOffset === value) {\n      return;\n    }\n    this.pixelOffset = value;\n    this.eventSvc.dispatchEvent({\n      type: \"paginationPixelOffsetChanged\"\n    });\n  }\n};\n\n// packages/ag-grid-community/src/pinnedColumns/pinnedColumnModule.css-GENERATED.ts\nvar pinnedColumnModuleCSS = /*css*/\n`.ag-pinned-left-floating-bottom,.ag-pinned-left-floating-top,.ag-pinned-right-floating-bottom,.ag-pinned-right-floating-top{min-width:0;overflow:hidden;position:relative}.ag-pinned-left-sticky-top,.ag-pinned-right-sticky-top{height:100%;overflow:hidden;position:relative}.ag-sticky-bottom-full-width-container,.ag-sticky-top-full-width-container{height:100%;overflow:hidden;width:100%}.ag-pinned-left-header,.ag-pinned-right-header{display:inline-block;height:100%;overflow:hidden;position:relative}.ag-body-horizontal-scroll:not(.ag-scrollbar-invisible){.ag-horizontal-left-spacer:not(.ag-scroller-corner){border-right:var(--ag-pinned-column-border)}.ag-horizontal-right-spacer:not(.ag-scroller-corner){border-left:var(--ag-pinned-column-border)}}.ag-pinned-right-header{border-left:var(--ag-pinned-column-border)}.ag-pinned-left-header{border-right:var(--ag-pinned-column-border)}.ag-cell.ag-cell-first-right-pinned:not(.ag-cell-range-left,.ag-cell-range-single-cell,.ag-cell-focus:not(.ag-cell-range-selected):focus-within){border-left:var(--ag-pinned-column-border)}.ag-cell.ag-cell-last-left-pinned:not(.ag-cell-range-right,.ag-cell-range-single-cell,.ag-cell-focus:not(.ag-cell-range-selected):focus-within){border-right:var(--ag-pinned-column-border)}.ag-pinned-left-header .ag-header-cell-resize:after{left:calc(50% - var(--ag-header-column-resize-handle-width))}.ag-pinned-right-header .ag-header-cell-resize:after{left:50%}.ag-pinned-left-header .ag-header-cell-resize{right:-3px}.ag-pinned-right-header .ag-header-cell-resize{left:-3px}`;\n\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/setPinnedWidthFeature.ts\nvar SetPinnedWidthFeature = class extends BeanStub {\n  constructor(isLeft, elements) {\n    super();\n    this.isLeft = isLeft;\n    this.elements = elements;\n    this.getWidth = isLeft ? () => this.beans.pinnedCols.leftWidth : () => this.beans.pinnedCols.rightWidth;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      [`${this.isLeft ? \"left\" : \"right\"}PinnedWidthChanged`]: this.onPinnedWidthChanged.bind(this)\n    });\n  }\n  onPinnedWidthChanged() {\n    const width = this.getWidth();\n    const displayed = width > 0;\n    for (const element of this.elements) {\n      if (element) {\n        _setDisplayed(element, displayed);\n        _setFixedWidth(element, width);\n      }\n    }\n  }\n};\n\n// packages/ag-grid-community/src/pinnedColumns/pinnedColumnService.ts\nvar PinnedColumnService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pinnedCols\";\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, p => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n    });\n    const listener = this.checkContainerWidths.bind(this);\n    this.addManagedEventListeners({\n      displayedColumnsChanged: listener,\n      displayedColumnsWidthChanged: listener\n    });\n    this.addManagedPropertyListener(\"domLayout\", listener);\n  }\n  checkContainerWidths() {\n    const {\n      gos,\n      visibleCols,\n      eventSvc\n    } = this.beans;\n    const printLayout = _isDomLayout(gos, \"print\");\n    const newLeftWidth = printLayout ? 0 : visibleCols.getColsLeftWidth();\n    const newRightWidth = printLayout ? 0 : visibleCols.getDisplayedColumnsRightWidth();\n    if (newLeftWidth != this.leftWidth) {\n      this.leftWidth = newLeftWidth;\n      eventSvc.dispatchEvent({\n        type: \"leftPinnedWidthChanged\"\n      });\n    }\n    if (newRightWidth != this.rightWidth) {\n      this.rightWidth = newRightWidth;\n      eventSvc.dispatchEvent({\n        type: \"rightPinnedWidthChanged\"\n      });\n    }\n  }\n  keepPinnedColumnsNarrowerThanViewport() {\n    const eBodyViewport = this.gridBodyCtrl.eBodyViewport;\n    const bodyWidth = _getInnerWidth(eBodyViewport);\n    if (bodyWidth <= 50) {\n      return;\n    }\n    const processedColumnsToRemove = this.getPinnedColumnsOverflowingViewport(bodyWidth - 50);\n    const processUnpinnedColumns = this.gos.getCallback(\"processUnpinnedColumns\");\n    const {\n      columns,\n      hasLockedPinned\n    } = processedColumnsToRemove;\n    let columnsToRemove = columns;\n    if (!columnsToRemove.length && !hasLockedPinned) {\n      return;\n    }\n    if (processUnpinnedColumns) {\n      const params = {\n        columns: columnsToRemove,\n        viewportWidth: bodyWidth\n      };\n      columnsToRemove = processUnpinnedColumns(params);\n    }\n    if (!columnsToRemove || !columnsToRemove.length) {\n      return;\n    }\n    columnsToRemove = columnsToRemove.filter(col => !isRowNumberCol(col));\n    this.setColsPinned(columnsToRemove, null, \"viewportSizeFeature\");\n  }\n  createPinnedWidthFeature(isLeft, ...elements) {\n    return new SetPinnedWidthFeature(isLeft, elements);\n  }\n  setColsPinned(keys, pinned, source) {\n    const {\n      colModel,\n      colAnimation,\n      visibleCols,\n      gos\n    } = this.beans;\n    if (!colModel.cols) {\n      return;\n    }\n    if (!keys?.length) {\n      return;\n    }\n    if (_isDomLayout(gos, \"print\")) {\n      _warn(37);\n      return;\n    }\n    colAnimation?.start();\n    let actualPinned;\n    if (pinned === true || pinned === \"left\") {\n      actualPinned = \"left\";\n    } else if (pinned === \"right\") {\n      actualPinned = \"right\";\n    } else {\n      actualPinned = null;\n    }\n    const updatedCols = [];\n    keys.forEach(key => {\n      if (!key) {\n        return;\n      }\n      const column = colModel.getCol(key);\n      if (!column) {\n        return;\n      }\n      if (column.getPinned() !== actualPinned) {\n        this.setColPinned(column, actualPinned);\n        updatedCols.push(column);\n      }\n    });\n    if (updatedCols.length) {\n      visibleCols.refresh(source);\n      dispatchColumnPinnedEvent(this.eventSvc, updatedCols, source);\n    }\n    colAnimation?.finish();\n  }\n  initCol(column) {\n    const {\n      pinned,\n      initialPinned\n    } = column.colDef;\n    if (pinned !== void 0) {\n      this.setColPinned(column, pinned);\n    } else {\n      this.setColPinned(column, initialPinned);\n    }\n  }\n  setColPinned(column, pinned) {\n    if (pinned === true || pinned === \"left\") {\n      column.pinned = \"left\";\n    } else if (pinned === \"right\") {\n      column.pinned = \"right\";\n    } else {\n      column.pinned = null;\n    }\n    column.dispatchStateUpdatedEvent(\"pinned\");\n  }\n  setupHeaderPinnedWidth(ctrl) {\n    const {\n      scrollVisibleSvc\n    } = this.beans;\n    if (ctrl.pinned == null) {\n      return;\n    }\n    const pinningLeft = ctrl.pinned === \"left\";\n    const pinningRight = ctrl.pinned === \"right\";\n    ctrl.hidden = true;\n    const listener = () => {\n      const width = pinningLeft ? this.leftWidth : this.rightWidth;\n      if (width == null) {\n        return;\n      }\n      const hidden = width == 0;\n      const hiddenChanged = ctrl.hidden !== hidden;\n      const isRtl = this.gos.get(\"enableRtl\");\n      const scrollbarWidth = scrollVisibleSvc.getScrollbarWidth();\n      const addPaddingForScrollbar = scrollVisibleSvc.verticalScrollShowing && (isRtl && pinningLeft || !isRtl && pinningRight);\n      const widthWithPadding = addPaddingForScrollbar ? width + scrollbarWidth : width;\n      ctrl.comp.setPinnedContainerWidth(`${widthWithPadding}px`);\n      ctrl.comp.setDisplayed(!hidden);\n      if (hiddenChanged) {\n        ctrl.hidden = hidden;\n        ctrl.refresh();\n      }\n    };\n    ctrl.addManagedEventListeners({\n      leftPinnedWidthChanged: listener,\n      rightPinnedWidthChanged: listener,\n      scrollVisibilityChanged: listener,\n      scrollbarWidthChanged: listener\n    });\n  }\n  getHeaderResizeDiff(diff, column) {\n    const pinned = column.getPinned();\n    if (pinned) {\n      const {\n        leftWidth,\n        rightWidth\n      } = this;\n      const bodyWidth = _getInnerWidth(this.beans.ctrlsSvc.getGridBodyCtrl().eBodyViewport) - 50;\n      if (leftWidth + rightWidth + diff > bodyWidth) {\n        if (bodyWidth > leftWidth + rightWidth) {\n          diff = bodyWidth - leftWidth - rightWidth;\n        } else {\n          return 0;\n        }\n      }\n    }\n    return diff;\n  }\n  getPinnedColumnsOverflowingViewport(viewportWidth) {\n    const pinnedRightWidth = this.rightWidth ?? 0;\n    const pinnedLeftWidth = this.leftWidth ?? 0;\n    const totalPinnedWidth = pinnedRightWidth + pinnedLeftWidth;\n    let hasLockedPinned = false;\n    if (totalPinnedWidth < viewportWidth) {\n      return {\n        columns: [],\n        hasLockedPinned\n      };\n    }\n    const {\n      visibleCols\n    } = this.beans;\n    const pinnedLeftColumns = [...visibleCols.leftCols];\n    const pinnedRightColumns = [...visibleCols.rightCols];\n    let indexRight = 0;\n    let indexLeft = 0;\n    const totalWidthRemoved = 0;\n    const columnsToRemove = [];\n    let spaceNecessary = totalPinnedWidth - totalWidthRemoved - viewportWidth;\n    while ((indexLeft < pinnedLeftColumns.length || indexRight < pinnedRightColumns.length) && spaceNecessary > 0) {\n      if (indexRight < pinnedRightColumns.length) {\n        const currentColumn = pinnedRightColumns[indexRight++];\n        if (currentColumn.colDef.lockPinned) {\n          hasLockedPinned = true;\n          continue;\n        }\n        spaceNecessary -= currentColumn.getActualWidth();\n        columnsToRemove.push(currentColumn);\n      }\n      if (indexLeft < pinnedLeftColumns.length && spaceNecessary > 0) {\n        const currentColumn = pinnedLeftColumns[indexLeft++];\n        if (currentColumn.colDef.lockPinned) {\n          hasLockedPinned = true;\n          continue;\n        }\n        spaceNecessary -= currentColumn.getActualWidth();\n        columnsToRemove.push(currentColumn);\n      }\n    }\n    return {\n      columns: columnsToRemove,\n      hasLockedPinned\n    };\n  }\n};\n\n// packages/ag-grid-community/src/pinnedColumns/pinnedColumnModule.ts\nvar PinnedColumnModule = {\n  moduleName: \"PinnedColumn\",\n  version: VERSION,\n  beans: [PinnedColumnService],\n  css: [pinnedColumnModuleCSS]\n};\n\n// packages/ag-grid-community/src/rendering/ariaAnnouncementService.ts\nvar AriaAnnouncementService = class extends BeanStub {\n  constructor() {\n    super();\n    this.beanName = \"ariaAnnounce\";\n    this.descriptionContainer = null;\n    this.pendingAnnouncements = /* @__PURE__ */new Map();\n    this.lastAnnouncement = \"\";\n    this.updateAnnouncement = _debounce(this, this.updateAnnouncement.bind(this), 200);\n  }\n  postConstruct() {\n    const beans = this.beans;\n    const eDocument = _getDocument(beans);\n    const div = this.descriptionContainer = eDocument.createElement(\"div\");\n    div.classList.add(\"ag-aria-description-container\");\n    _setAriaLive(div, \"polite\");\n    _setAriaRelevant(div, \"additions text\");\n    _setAriaAtomic(div, true);\n    beans.eGridDiv.appendChild(div);\n  }\n  /**\n   * @param key used for debouncing calls\n   */\n  announceValue(value, key) {\n    this.pendingAnnouncements.set(key, value);\n    this.updateAnnouncement();\n  }\n  updateAnnouncement() {\n    if (!this.descriptionContainer) {\n      return;\n    }\n    const value = Array.from(this.pendingAnnouncements.values()).join(\". \");\n    this.pendingAnnouncements.clear();\n    this.descriptionContainer.textContent = \"\";\n    setTimeout(() => {\n      this.handleAnnouncementUpdate(value);\n    }, 50);\n  }\n  handleAnnouncementUpdate(value) {\n    if (!this.isAlive() || !this.descriptionContainer) {\n      return;\n    }\n    let valueToAnnounce = value;\n    if (valueToAnnounce == null || valueToAnnounce.replace(/[ .]/g, \"\") == \"\") {\n      this.lastAnnouncement = \"\";\n      return;\n    }\n    if (this.lastAnnouncement === valueToAnnounce) {\n      valueToAnnounce = `${valueToAnnounce}\\u200B`;\n    }\n    this.lastAnnouncement = valueToAnnounce;\n    this.descriptionContainer.textContent = valueToAnnounce;\n  }\n  destroy() {\n    super.destroy();\n    const {\n      descriptionContainer\n    } = this;\n    if (descriptionContainer) {\n      _clearElement(descriptionContainer);\n      descriptionContainer.parentElement?.removeChild(descriptionContainer);\n    }\n    this.descriptionContainer = null;\n    this.pendingAnnouncements.clear();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/ariaModule.ts\nvar AriaModule = {\n  moduleName: \"Aria\",\n  version: VERSION,\n  beans: [AriaAnnouncementService]\n};\n\n// packages/ag-grid-community/src/rendering/overlays/overlayApi.ts\nfunction showLoadingOverlay(beans) {\n  beans.overlays?.showLoadingOverlay();\n}\nfunction showNoRowsOverlay(beans) {\n  beans.overlays?.showNoRowsOverlay();\n}\nfunction hideOverlay(beans) {\n  beans.overlays?.hideOverlay();\n}\n\n// packages/ag-grid-community/src/rendering/overlays/overlayWrapperComponent.css-GENERATED.ts\nvar overlayWrapperComponentCSS = /*css*/\n`.ag-overlay{inset:0;pointer-events:none;position:absolute;z-index:2}.ag-overlay-panel,.ag-overlay-wrapper{display:flex;height:100%;width:100%}.ag-overlay-wrapper{align-items:center;flex:none;justify-content:center;text-align:center}.ag-overlay-loading-wrapper{pointer-events:all}.ag-overlay-loading-center{background:var(--ag-background-color);border:solid var(--ag-border-width) var(--ag-border-color);border-radius:var(--ag-border-radius);box-shadow:var(--ag-popup-shadow);padding:var(--ag-spacing)}`;\n\n// packages/ag-grid-community/src/rendering/overlays/overlayWrapperComponent.ts\nvar OverlayWrapperElement = {\n  tag: \"div\",\n  cls: \"ag-overlay\",\n  role: \"presentation\",\n  children: [{\n    tag: \"div\",\n    cls: \"ag-overlay-panel\",\n    role: \"presentation\",\n    children: [{\n      tag: \"div\",\n      ref: \"eOverlayWrapper\",\n      cls: \"ag-overlay-wrapper\",\n      role: \"presentation\"\n    }]\n  }]\n};\nvar OverlayWrapperComponent = class extends Component {\n  constructor() {\n    super(OverlayWrapperElement);\n    this.eOverlayWrapper = RefPlaceholder;\n    this.activePromise = null;\n    this.activeOverlay = null;\n    this.updateListenerDestroyFunc = null;\n    this.activeCssClass = null;\n    this.elToFocusAfter = null;\n    this.registerCSS(overlayWrapperComponentCSS);\n  }\n  handleKeyDown(e) {\n    if (e.key !== KeyCode.TAB || e.defaultPrevented || _isStopPropagationForAgGrid(e)) {\n      return;\n    }\n    const beans = this.beans;\n    const nextEl = _findNextFocusableElement(beans, this.eOverlayWrapper, false, e.shiftKey);\n    if (nextEl) {\n      return;\n    }\n    let isFocused = false;\n    if (e.shiftKey) {\n      isFocused = beans.focusSvc.focusGridView({\n        column: _last(beans.visibleCols.allCols),\n        backwards: true,\n        canFocusOverlay: false\n      });\n    } else {\n      isFocused = _focusNextGridCoreContainer(beans, false);\n    }\n    if (isFocused) {\n      e.preventDefault();\n    }\n  }\n  updateLayoutClasses(cssClass, params) {\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\n    const {\n      AUTO_HEIGHT,\n      NORMAL,\n      PRINT\n    } = LayoutCssClasses;\n    overlayWrapperClassList.toggle(AUTO_HEIGHT, params.autoHeight);\n    overlayWrapperClassList.toggle(NORMAL, params.normal);\n    overlayWrapperClassList.toggle(PRINT, params.print);\n  }\n  postConstruct() {\n    this.createManagedBean(new LayoutFeature(this));\n    this.setDisplayed(false, {\n      skipAriaHidden: true\n    });\n    this.beans.overlays.setOverlayWrapperComp(this);\n    this.addManagedElementListeners(this.getFocusableElement(), {\n      keydown: this.handleKeyDown.bind(this)\n    });\n  }\n  setWrapperTypeClass(overlayWrapperCssClass) {\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\n    if (this.activeCssClass) {\n      overlayWrapperClassList.toggle(this.activeCssClass, false);\n    }\n    this.activeCssClass = overlayWrapperCssClass;\n    overlayWrapperClassList.toggle(overlayWrapperCssClass, true);\n  }\n  showOverlay(overlayComponentPromise, overlayWrapperCssClass, exclusive, gridOption) {\n    this.setWrapperTypeClass(overlayWrapperCssClass);\n    this.destroyActiveOverlay();\n    this.elToFocusAfter = null;\n    this.activePromise = overlayComponentPromise;\n    if (!overlayComponentPromise) {\n      return;\n    }\n    this.setDisplayed(true, {\n      skipAriaHidden: true\n    });\n    if (exclusive && this.isGridFocused()) {\n      const activeElement = _getActiveDomElement(this.beans);\n      if (activeElement && !_isNothingFocused(this.beans)) {\n        this.elToFocusAfter = activeElement;\n      }\n    }\n    overlayComponentPromise.then(comp => {\n      if (this.activePromise !== overlayComponentPromise) {\n        if (this.activeOverlay !== comp) {\n          this.destroyBean(comp);\n          comp = null;\n        }\n        return;\n      }\n      this.activePromise = null;\n      if (!comp) {\n        return;\n      }\n      if (this.activeOverlay !== comp) {\n        this.eOverlayWrapper.appendChild(comp.getGui());\n        this.activeOverlay = comp;\n        if (gridOption) {\n          const component = comp;\n          this.updateListenerDestroyFunc = this.addManagedPropertyListener(gridOption, ({\n            currentValue\n          }) => {\n            component.refresh?.(_addGridCommonParams(this.gos, {\n              ...(currentValue ?? {})\n            }));\n          });\n        }\n      }\n      if (exclusive && this.isGridFocused()) {\n        _focusInto(this.eOverlayWrapper);\n      }\n    });\n  }\n  updateOverlayWrapperPaddingTop(padding) {\n    this.eOverlayWrapper.style.setProperty(\"padding-top\", `${padding}px`);\n  }\n  destroyActiveOverlay() {\n    this.activePromise = null;\n    const activeOverlay = this.activeOverlay;\n    if (!activeOverlay) {\n      return;\n    }\n    let elementToFocus = this.elToFocusAfter;\n    this.activeOverlay = null;\n    this.elToFocusAfter = null;\n    if (elementToFocus && !this.isGridFocused()) {\n      elementToFocus = null;\n    }\n    const updateListenerDestroyFunc = this.updateListenerDestroyFunc;\n    if (updateListenerDestroyFunc) {\n      updateListenerDestroyFunc();\n      this.updateListenerDestroyFunc = null;\n    }\n    this.destroyBean(activeOverlay);\n    _clearElement(this.eOverlayWrapper);\n    elementToFocus?.focus?.({\n      preventScroll: true\n    });\n  }\n  hideOverlay() {\n    this.destroyActiveOverlay();\n    this.setDisplayed(false, {\n      skipAriaHidden: true\n    });\n  }\n  isGridFocused() {\n    const activeEl = _getActiveDomElement(this.beans);\n    return !!activeEl && this.beans.eGridDiv.contains(activeEl);\n  }\n  destroy() {\n    this.elToFocusAfter = null;\n    this.destroyActiveOverlay();\n    this.beans.overlays.setOverlayWrapperComp(void 0);\n    super.destroy();\n  }\n};\nvar OverlayWrapperSelector = {\n  selector: \"AG-OVERLAY-WRAPPER\",\n  component: OverlayWrapperComponent\n};\n\n// packages/ag-grid-community/src/rendering/overlays/overlayService.ts\nvar OverlayService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"overlays\";\n    this.state = 0 /* Hidden */;\n    this.showInitialOverlay = true;\n    this.wrapperPadding = 0;\n  }\n  postConstruct() {\n    this.isClientSide = _isClientSideRowModel(this.gos);\n    this.isServerSide = !this.isClientSide && _isServerSideRowModel(this.gos);\n    const updateOverlayVisibility = () => this.updateOverlayVisibility();\n    this.addManagedEventListeners({\n      newColumnsLoaded: updateOverlayVisibility,\n      rowDataUpdated: updateOverlayVisibility,\n      gridSizeChanged: this.refreshWrapperPadding.bind(this),\n      rowCountReady: () => {\n        this.showInitialOverlay = false;\n        this.updateOverlayVisibility();\n      }\n    });\n    this.addManagedPropertyListener(\"loading\", updateOverlayVisibility);\n  }\n  setOverlayWrapperComp(overlayWrapperComp) {\n    this.eWrapper = overlayWrapperComp;\n    this.updateOverlayVisibility();\n  }\n  /** Returns true if the overlay is visible. */\n  isVisible() {\n    return this.state !== 0 /* Hidden */ && !!this.eWrapper;\n  }\n  /** Returns true if the overlay is visible and is exclusive (popup over the grid) */\n  isExclusive() {\n    return this.state === 1 /* Loading */ && !!this.eWrapper;\n  }\n  showLoadingOverlay() {\n    this.showInitialOverlay = false;\n    const gos = this.gos;\n    const loading = gos.get(\"loading\");\n    if (!loading && (loading !== void 0 || gos.get(\"suppressLoadingOverlay\"))) {\n      return;\n    }\n    this.doShowLoadingOverlay();\n  }\n  showNoRowsOverlay() {\n    this.showInitialOverlay = false;\n    const gos = this.gos;\n    if (gos.get(\"loading\") || gos.get(\"suppressNoRowsOverlay\")) {\n      return;\n    }\n    this.doShowNoRowsOverlay();\n  }\n  hideOverlay() {\n    this.showInitialOverlay = false;\n    if (this.gos.get(\"loading\")) {\n      _warn(99);\n      return;\n    }\n    this.doHideOverlay();\n  }\n  getOverlayWrapperSelector() {\n    return OverlayWrapperSelector;\n  }\n  getOverlayWrapperCompClass() {\n    return OverlayWrapperComponent;\n  }\n  updateOverlayVisibility() {\n    if (!this.eWrapper) {\n      this.state = 0 /* Hidden */;\n      return;\n    }\n    const {\n      state,\n      isClientSide,\n      isServerSide,\n      beans: {\n        gos,\n        colModel,\n        rowModel\n      }\n    } = this;\n    let loading = this.gos.get(\"loading\");\n    if (loading !== void 0) {\n      this.showInitialOverlay = false;\n    }\n    if (this.showInitialOverlay && loading === void 0 && !gos.get(\"suppressLoadingOverlay\")) {\n      loading = !gos.get(\"columnDefs\") || !colModel.ready || !gos.get(\"rowData\") && isClientSide;\n    }\n    if (loading) {\n      if (state !== 1 /* Loading */) {\n        this.doShowLoadingOverlay();\n      }\n    } else {\n      this.showInitialOverlay = false;\n      if (isClientSide && rowModel.isEmpty() && !gos.get(\"suppressNoRowsOverlay\")) {\n        if (state !== 2 /* NoRows */) {\n          this.doShowNoRowsOverlay();\n        }\n      } else if (state === 1 /* Loading */ || !isServerSide && state !== 0 /* Hidden */) {\n        this.doHideOverlay();\n      }\n    }\n  }\n  doShowLoadingOverlay() {\n    if (!this.eWrapper) {\n      return;\n    }\n    this.state = 1 /* Loading */;\n    this.showOverlay(_getLoadingOverlayCompDetails(this.beans.userCompFactory, _addGridCommonParams(this.gos, {})), \"ag-overlay-loading-wrapper\", \"loadingOverlayComponentParams\");\n    this.updateExclusive();\n  }\n  doShowNoRowsOverlay() {\n    if (!this.eWrapper) {\n      return;\n    }\n    this.state = 2 /* NoRows */;\n    this.showOverlay(_getNoRowsOverlayCompDetails(this.beans.userCompFactory, _addGridCommonParams(this.gos, {})), \"ag-overlay-no-rows-wrapper\", \"noRowsOverlayComponentParams\");\n    this.updateExclusive();\n  }\n  doHideOverlay() {\n    if (!this.eWrapper) {\n      return;\n    }\n    this.state = 0 /* Hidden */;\n    this.eWrapper.hideOverlay();\n    this.updateExclusive();\n  }\n  showOverlay(compDetails, wrapperCssClass, gridOption) {\n    const promise = compDetails?.newAgStackInstance() ?? null;\n    this.eWrapper?.showOverlay(promise, wrapperCssClass, this.isExclusive(), gridOption);\n    this.refreshWrapperPadding();\n  }\n  updateExclusive() {\n    const wasExclusive = this.exclusive;\n    this.exclusive = this.isExclusive();\n    if (this.exclusive !== wasExclusive) {\n      this.eventSvc.dispatchEvent({\n        type: \"overlayExclusiveChanged\"\n      });\n    }\n  }\n  refreshWrapperPadding() {\n    const eWrapper = this.eWrapper;\n    if (!eWrapper) {\n      return;\n    }\n    let newPadding = 0;\n    if (this.state === 2 /* NoRows */) {\n      const headerCtrl = this.beans.ctrlsSvc.get(\"gridHeaderCtrl\");\n      const headerHeight = headerCtrl?.headerHeight || 0;\n      newPadding = headerHeight;\n    } else if (this.wrapperPadding !== 0) {\n      newPadding = 0;\n    }\n    if (this.wrapperPadding === newPadding) {\n      return;\n    }\n    this.wrapperPadding = newPadding;\n    eWrapper.updateOverlayWrapperPaddingTop(newPadding);\n  }\n};\n\n// packages/ag-grid-community/src/rendering/overlays/overlayModule.ts\nvar OverlayModule = {\n  moduleName: \"Overlay\",\n  version: VERSION,\n  userComponents: {\n    agLoadingOverlay: LoadingOverlayComponent2,\n    agNoRowsOverlay: NoRowsOverlayComponent2\n  },\n  apiFunctions: {\n    showLoadingOverlay,\n    showNoRowsOverlay,\n    hideOverlay\n  },\n  beans: [OverlayService]\n};\n\n// packages/ag-grid-community/src/rendering/rowContainerHeightService.ts\nvar RowContainerHeightService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowContainerHeight\";\n    // the scrollY position\n    this.scrollY = 0;\n    // how tall the body is\n    this.uiBodyHeight = 0;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      bodyHeightChanged: this.updateOffset.bind(this)\n    });\n    this.maxDivHeight = _getMaxDivHeight();\n    _logIfDebug(this.gos, \"RowContainerHeightService - maxDivHeight = \" + this.maxDivHeight);\n  }\n  updateOffset() {\n    if (!this.stretching) {\n      return;\n    }\n    const newScrollY = this.beans.ctrlsSvc.getScrollFeature().getVScrollPosition().top;\n    const newBodyHeight = this.getUiBodyHeight();\n    const atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n    if (atLeastOneChanged) {\n      this.scrollY = newScrollY;\n      this.uiBodyHeight = newBodyHeight;\n      this.calculateOffset();\n    }\n  }\n  calculateOffset() {\n    this.setUiContainerHeight(this.maxDivHeight);\n    this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n    this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n    const scrollPercent = this.scrollY / this.maxScrollY;\n    const divStretchOffset = scrollPercent * this.pixelsToShave;\n    _logIfDebug(this.gos, `RowContainerHeightService - Div Stretch Offset = ${divStretchOffset} (${this.pixelsToShave} * ${scrollPercent})`);\n    this.setDivStretchOffset(divStretchOffset);\n  }\n  setUiContainerHeight(height) {\n    if (height !== this.uiContainerHeight) {\n      this.uiContainerHeight = height;\n      this.eventSvc.dispatchEvent({\n        type: \"rowContainerHeightChanged\"\n      });\n    }\n  }\n  clearOffset() {\n    this.setUiContainerHeight(this.modelHeight);\n    this.pixelsToShave = 0;\n    this.setDivStretchOffset(0);\n  }\n  setDivStretchOffset(newOffset) {\n    const newOffsetFloor = typeof newOffset === \"number\" ? Math.floor(newOffset) : null;\n    if (this.divStretchOffset === newOffsetFloor) {\n      return;\n    }\n    this.divStretchOffset = newOffsetFloor;\n    this.eventSvc.dispatchEvent({\n      type: \"heightScaleChanged\"\n    });\n  }\n  setModelHeight(modelHeight) {\n    this.modelHeight = modelHeight;\n    this.stretching = modelHeight != null &&\n    // null happens when in print layout\n    this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\n    if (this.stretching) {\n      this.calculateOffset();\n    } else {\n      this.clearOffset();\n    }\n  }\n  getRealPixelPosition(modelPixel) {\n    return modelPixel - this.divStretchOffset;\n  }\n  getUiBodyHeight() {\n    const pos = this.beans.ctrlsSvc.getScrollFeature().getVScrollPosition();\n    return pos.bottom - pos.top;\n  }\n  getScrollPositionForPixel(rowTop) {\n    if (this.pixelsToShave <= 0) {\n      return rowTop;\n    }\n    const modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n    const scrollPercent = rowTop / modelMaxScroll;\n    const scrollPixel = this.maxScrollY * scrollPercent;\n    return scrollPixel;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/rowRenderer.ts\nvar ROW_ANIMATION_TIMEOUT = 400;\nvar RowRenderer = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowRenderer\";\n    this.destroyFuncsForColumnListeners = [];\n    // map of row ids to row objects. keeps track of which elements\n    // are rendered for which rows in the dom.\n    this.rowCtrlsByRowIndex = {};\n    this.zombieRowCtrls = {};\n    this.allRowCtrls = [];\n    this.topRowCtrls = [];\n    this.bottomRowCtrls = [];\n    // we only allow one refresh at a time, otherwise the internal memory structure here\n    // will get messed up. this can happen if the user has a cellRenderer, and inside the\n    // renderer they call an API method that results in another pass of the refresh,\n    // then it will be trying to draw rows in the middle of a refresh.\n    this.refreshInProgress = false;\n    this.dataFirstRenderedFired = false;\n    this.setupRangeSelectionListeners = () => {\n      const onCellSelectionChanged = () => {\n        this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onCellSelectionChanged());\n      };\n      const onColumnMovedPinnedVisible = () => {\n        this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.updateRangeBordersIfRangeCount());\n      };\n      const addCellSelectionListeners = () => {\n        this.eventSvc.addEventListener(\"cellSelectionChanged\", onCellSelectionChanged);\n        this.eventSvc.addEventListener(\"columnMoved\", onColumnMovedPinnedVisible);\n        this.eventSvc.addEventListener(\"columnPinned\", onColumnMovedPinnedVisible);\n        this.eventSvc.addEventListener(\"columnVisible\", onColumnMovedPinnedVisible);\n      };\n      const removeCellSelectionListeners = () => {\n        this.eventSvc.removeEventListener(\"cellSelectionChanged\", onCellSelectionChanged);\n        this.eventSvc.removeEventListener(\"columnMoved\", onColumnMovedPinnedVisible);\n        this.eventSvc.removeEventListener(\"columnPinned\", onColumnMovedPinnedVisible);\n        this.eventSvc.removeEventListener(\"columnVisible\", onColumnMovedPinnedVisible);\n      };\n      this.addDestroyFunc(() => removeCellSelectionListeners());\n      this.addManagedPropertyListeners([\"enableRangeSelection\", \"cellSelection\"], () => {\n        const isEnabled = _isCellSelectionEnabled(this.gos);\n        if (isEnabled) {\n          addCellSelectionListeners();\n        } else {\n          removeCellSelectionListeners();\n        }\n      });\n      const cellSelectionEnabled = _isCellSelectionEnabled(this.gos);\n      if (cellSelectionEnabled) {\n        addCellSelectionListeners();\n      }\n    };\n  }\n  wireBeans(beans) {\n    this.pageBounds = beans.pageBounds;\n    this.colModel = beans.colModel;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.rowModel = beans.rowModel;\n    this.focusSvc = beans.focusSvc;\n    this.rowContainerHeight = beans.rowContainerHeight;\n    this.ctrlsSvc = beans.ctrlsSvc;\n    this.editSvc = beans.editSvc;\n  }\n  postConstruct() {\n    this.ctrlsSvc.whenReady(this, p => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n      this.initialise();\n    });\n  }\n  initialise() {\n    this.addManagedEventListeners({\n      paginationChanged: this.onPageLoaded.bind(this),\n      pinnedRowDataChanged: this.onPinnedRowDataChanged.bind(this),\n      pinnedRowsChanged: this.onPinnedRowsChanged.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      bodyScroll: this.onBodyScroll.bind(this),\n      bodyHeightChanged: this.redraw.bind(this, {})\n    });\n    this.addManagedPropertyListeners([\"domLayout\", \"embedFullWidthRows\"], () => this.onDomLayoutChanged());\n    this.addManagedPropertyListeners([\"suppressMaxRenderedRowRestriction\", \"rowBuffer\"], () => this.redraw());\n    this.addManagedPropertyListener(\"suppressCellFocus\", e => this.onSuppressCellFocusChanged(e.currentValue));\n    this.addManagedPropertyListeners([\"groupSuppressBlankHeader\", \"getBusinessKeyForNode\", \"fullWidthCellRenderer\", \"fullWidthCellRendererParams\", \"suppressStickyTotalRow\", \"groupRowRenderer\", \"groupRowRendererParams\",\n    // maybe only needs to refresh FW rows...\n    \"loadingCellRenderer\", \"loadingCellRendererParams\", \"detailCellRenderer\", \"detailCellRendererParams\", \"enableRangeSelection\", \"enableCellTextSelection\"], () => this.redrawRows());\n    this.addManagedPropertyListener(\"cellSelection\", ({\n      currentValue,\n      previousValue\n    }) => {\n      if (!previousValue && currentValue || previousValue && !currentValue) {\n        this.redrawRows();\n      }\n    });\n    const {\n      stickyRowSvc,\n      gos,\n      showRowGroupCols\n    } = this.beans;\n    if (showRowGroupCols) {\n      this.addManagedPropertyListener(\"showOpenedGroup\", () => {\n        const columns = showRowGroupCols.getShowRowGroupCols();\n        if (columns.length) {\n          this.refreshCells({\n            columns,\n            force: true\n          });\n        }\n      });\n    }\n    if (stickyRowSvc) {\n      this.stickyRowFeature = stickyRowSvc.createStickyRowFeature(this, this.createRowCon.bind(this), this.destroyRowCtrls.bind(this));\n    } else {\n      const gridBodyCtrl = this.gridBodyCtrl;\n      gridBodyCtrl.setStickyTopHeight(0);\n      gridBodyCtrl.setStickyBottomHeight(0);\n    }\n    this.registerCellEventListeners();\n    this.initialiseCache();\n    this.printLayout = _isDomLayout(gos, \"print\");\n    this.embedFullWidthRows = this.printLayout || gos.get(\"embedFullWidthRows\");\n    this.redrawAfterModelUpdate();\n  }\n  initialiseCache() {\n    if (this.gos.get(\"keepDetailRows\")) {\n      const countProp = this.getKeepDetailRowsCount();\n      const count = countProp != null ? countProp : 3;\n      this.cachedRowCtrls = new RowCtrlCache(count);\n    }\n  }\n  getKeepDetailRowsCount() {\n    return this.gos.get(\"keepDetailRowsCount\");\n  }\n  getStickyTopRowCtrls() {\n    return this.stickyRowFeature?.stickyTopRowCtrls ?? [];\n  }\n  getStickyBottomRowCtrls() {\n    return this.stickyRowFeature?.stickyBottomRowCtrls ?? [];\n  }\n  updateAllRowCtrls() {\n    const liveList = Object.values(this.rowCtrlsByRowIndex);\n    const zombieList = Object.values(this.zombieRowCtrls);\n    const cachedList = this.cachedRowCtrls?.getEntries() ?? [];\n    if (zombieList.length > 0 || cachedList.length > 0) {\n      this.allRowCtrls = [...liveList, ...zombieList, ...cachedList];\n    } else {\n      this.allRowCtrls = liveList;\n    }\n  }\n  /**\n   * Checks if the cell is rendered or not. Also returns true if row ctrl is present but has not rendered\n   * cells yet.\n   * @returns true if cellCtrl is present, or if the row is present but has not rendered rows yet\n   */\n  isCellBeingRendered(rowIndex, column) {\n    const rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\n    if (!column || !rowCtrl) {\n      return !!rowCtrl;\n    }\n    if (rowCtrl.isFullWidth()) {\n      return true;\n    }\n    const spannedCell = this.beans.spannedRowRenderer?.getCellByPosition({\n      rowIndex,\n      column,\n      rowPinned: null\n    });\n    return !!spannedCell || !!rowCtrl.getCellCtrl(column) || !rowCtrl.isRowRendered();\n  }\n  /**\n   * Notifies all row and cell controls of any change in focused cell.\n   * @param event cell focused event\n   */\n  updateCellFocus(event) {\n    this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onCellFocused(event));\n    this.getFullWidthRowCtrls().forEach(rowCtrl => rowCtrl.onFullWidthRowFocused(event));\n  }\n  /**\n   * Called when a new cell is focused in the grid\n   * - if the focused cell isn't rendered; re-draw rows to dry to render it\n   * - subsequently updates all cell and row controls with the new focused cell\n   * @param event cell focused event\n   */\n  onCellFocusChanged(event) {\n    if (event && event.rowIndex != null && !event.rowPinned) {\n      const col = this.beans.colModel.getCol(event.column) ?? void 0;\n      if (!this.isCellBeingRendered(event.rowIndex, col)) {\n        this.redraw();\n      }\n    }\n    this.updateCellFocus(event);\n  }\n  onSuppressCellFocusChanged(suppressCellFocus) {\n    this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onSuppressCellFocusChanged(suppressCellFocus));\n    this.getFullWidthRowCtrls().forEach(rowCtrl => rowCtrl.onSuppressCellFocusChanged(suppressCellFocus));\n  }\n  // in a clean design, each cell would register for each of these events. however when scrolling, all the cells\n  // registering and de-registering for events is a performance bottleneck. so we register here once and inform\n  // all active cells.\n  registerCellEventListeners() {\n    this.addManagedEventListeners({\n      cellFocused: event => this.onCellFocusChanged(event),\n      cellFocusCleared: () => this.updateCellFocus(),\n      flashCells: event => {\n        const {\n          cellFlashSvc\n        } = this.beans;\n        if (cellFlashSvc) {\n          this.getAllCellCtrls().forEach(cellCtrl => cellFlashSvc.onFlashCells(cellCtrl, event));\n        }\n      },\n      columnHoverChanged: () => {\n        this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onColumnHover());\n      },\n      displayedColumnsChanged: () => {\n        this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onDisplayedColumnsChanged());\n      },\n      displayedColumnsWidthChanged: () => {\n        if (this.printLayout) {\n          this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onLeftChanged());\n        }\n      }\n    });\n    this.setupRangeSelectionListeners();\n    this.refreshListenersToColumnsForCellComps();\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.refreshListenersToColumnsForCellComps.bind(this)\n    });\n    this.addDestroyFunc(this.removeGridColumnListeners.bind(this));\n  }\n  // executes all functions in destroyFuncsForColumnListeners and then clears the list\n  removeGridColumnListeners() {\n    this.destroyFuncsForColumnListeners.forEach(func => func());\n    this.destroyFuncsForColumnListeners.length = 0;\n  }\n  // this function adds listeners onto all the grid columns, which are the column that we could have cellComps for.\n  // when the grid columns change, we add listeners again. in an ideal design, each CellComp would just register to\n  // the column it belongs to on creation, however this was a bottleneck with the number of cells, so do it here\n  // once instead.\n  refreshListenersToColumnsForCellComps() {\n    this.removeGridColumnListeners();\n    const cols = this.colModel.getCols();\n    cols.forEach(col => {\n      const forEachCellWithThisCol = callback => {\n        this.getAllCellCtrls().forEach(cellCtrl => {\n          if (cellCtrl.column === col) {\n            callback(cellCtrl);\n          }\n        });\n      };\n      const leftChangedListener = () => {\n        forEachCellWithThisCol(cellCtrl => cellCtrl.onLeftChanged());\n      };\n      const widthChangedListener = () => {\n        forEachCellWithThisCol(cellCtrl => cellCtrl.onWidthChanged());\n      };\n      const firstRightPinnedChangedListener = () => {\n        forEachCellWithThisCol(cellCtrl => cellCtrl.onFirstRightPinnedChanged());\n      };\n      const lastLeftPinnedChangedListener = () => {\n        forEachCellWithThisCol(cellCtrl => cellCtrl.onLastLeftPinnedChanged());\n      };\n      const colDefChangedListener = () => {\n        forEachCellWithThisCol(cellCtrl => cellCtrl.onColDefChanged());\n      };\n      col.__addEventListener(\"leftChanged\", leftChangedListener);\n      col.__addEventListener(\"widthChanged\", widthChangedListener);\n      col.__addEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\n      col.__addEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\n      col.__addEventListener(\"colDefChanged\", colDefChangedListener);\n      this.destroyFuncsForColumnListeners.push(() => {\n        col.__removeEventListener(\"leftChanged\", leftChangedListener);\n        col.__removeEventListener(\"widthChanged\", widthChangedListener);\n        col.__removeEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\n        col.__removeEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\n        col.__removeEventListener(\"colDefChanged\", colDefChangedListener);\n      });\n    });\n  }\n  onDomLayoutChanged() {\n    const printLayout = _isDomLayout(this.gos, \"print\");\n    const embedFullWidthRows = printLayout || this.gos.get(\"embedFullWidthRows\");\n    const destroyRows = embedFullWidthRows !== this.embedFullWidthRows || this.printLayout !== printLayout;\n    this.printLayout = printLayout;\n    this.embedFullWidthRows = embedFullWidthRows;\n    if (destroyRows) {\n      this.redrawAfterModelUpdate({\n        domLayoutChanged: true\n      });\n    }\n  }\n  // for row models that have datasources, when we update the datasource, we need to force the rowRenderer\n  // to redraw all rows. otherwise the old rows from the old datasource will stay displayed.\n  datasourceChanged() {\n    this.firstRenderedRow = 0;\n    this.lastRenderedRow = -1;\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\n    this.removeRowCtrls(rowIndexesToRemove);\n  }\n  onPageLoaded(event) {\n    const params = {\n      recycleRows: event.keepRenderedRows,\n      animate: event.animate,\n      newData: event.newData,\n      newPage: event.newPage,\n      // because this is a model updated event (not pinned rows), we\n      // can skip updating the pinned rows. this is needed so that if user\n      // is doing transaction updates, the pinned rows are not getting constantly\n      // trashed - or editing cells in pinned rows are not refreshed and put into read mode\n      onlyBody: true\n    };\n    this.redrawAfterModelUpdate(params);\n  }\n  /**\n   * @param column AgColumn\n   * @returns An array with HTMLElement for every cell of the column passed as param.\n   * If the cell is spanning across multiple columns, it only returns the html element\n   * if the column passed is the first column of the span (used for auto width calculation).\n   */\n  getAllCellsNotSpanningForColumn(column) {\n    const res = [];\n    this.getAllRowCtrls().forEach(rowCtrl => {\n      const eCell = rowCtrl.getCellCtrl(column, true)?.eGui;\n      if (eCell) {\n        res.push(eCell);\n      }\n    });\n    return res;\n  }\n  refreshFloatingRowComps(recycleRows = true) {\n    this.refreshFloatingRows(this.topRowCtrls, \"top\", recycleRows);\n    this.refreshFloatingRows(this.bottomRowCtrls, \"bottom\", recycleRows);\n  }\n  /**\n   * Determines which row controllers need to be destroyed and re-created vs which ones can\n   * be re-used.\n   *\n   * This is operation is to pinned/floating rows as `this.recycleRows` is to normal/body rows.\n   *\n   * All `RowCtrl` instances in `rowCtrls` that don't correspond to `RowNode` instances in `rowNodes` are destroyed.\n   * All `RowNode` instances in `rowNodes` that don't correspond to `RowCtrl` instances in `rowCtrls` are created.\n   * All instances in `rowCtrls` must be in the same order as their corresponding nodes in `rowNodes`.\n   *\n   * @param rowCtrls The list of existing row controllers\n   * @param rowNodes The canonical list of row nodes that should have associated controllers\n   */\n  refreshFloatingRows(rowCtrls, floating, recycleRows) {\n    const {\n      pinnedRowModel,\n      beans,\n      printLayout\n    } = this;\n    const rowCtrlMap = Object.fromEntries(rowCtrls.map(ctrl => [ctrl.rowNode.id, ctrl]));\n    pinnedRowModel?.forEachPinnedRow(floating, (node, i) => {\n      const rowCtrl = rowCtrls[i];\n      const rowCtrlDoesNotExist = rowCtrl && pinnedRowModel.getPinnedRowById(rowCtrl.rowNode.id, floating) === void 0;\n      if (rowCtrlDoesNotExist) {\n        rowCtrl.destroyFirstPass();\n        rowCtrl.destroySecondPass();\n      }\n      if (node.id in rowCtrlMap && recycleRows) {\n        rowCtrls[i] = rowCtrlMap[node.id];\n        delete rowCtrlMap[node.id];\n      } else {\n        rowCtrls[i] = new RowCtrl(node, beans, false, false, printLayout);\n      }\n    });\n    const rowNodeCount = (floating === \"top\" ? pinnedRowModel?.getPinnedTopRowCount() : pinnedRowModel?.getPinnedBottomRowCount()) ?? 0;\n    rowCtrls.length = rowNodeCount;\n  }\n  onPinnedRowDataChanged() {\n    const params = {\n      recycleRows: true\n    };\n    this.redrawAfterModelUpdate(params);\n  }\n  onPinnedRowsChanged() {\n    this.redrawAfterModelUpdate({\n      recycleRows: true\n    });\n  }\n  redrawRow(rowNode, suppressEvent = false) {\n    if (rowNode.sticky) {\n      this.stickyRowFeature?.refreshStickyNode(rowNode);\n    } else if (this.cachedRowCtrls?.has(rowNode)) {\n      this.cachedRowCtrls.removeRow(rowNode);\n      return;\n    } else {\n      const destroyAndRecreateCtrl = dataStruct => {\n        const ctrl = dataStruct[rowNode.rowIndex];\n        if (!ctrl) {\n          return;\n        }\n        if (ctrl.rowNode !== rowNode) {\n          return;\n        }\n        ctrl.destroyFirstPass();\n        ctrl.destroySecondPass();\n        dataStruct[rowNode.rowIndex] = this.createRowCon(rowNode, false, false);\n      };\n      switch (rowNode.rowPinned) {\n        case \"top\":\n          destroyAndRecreateCtrl(this.topRowCtrls);\n          break;\n        case \"bottom\":\n          destroyAndRecreateCtrl(this.bottomRowCtrls);\n          break;\n        default:\n          destroyAndRecreateCtrl(this.rowCtrlsByRowIndex);\n          this.updateAllRowCtrls();\n      }\n    }\n    if (!suppressEvent) {\n      this.dispatchDisplayedRowsChanged(false);\n    }\n  }\n  redrawRows(rowNodes) {\n    const {\n      editSvc\n    } = this.beans;\n    if (editSvc?.isEditing()) {\n      if (editSvc.isBatchEditing()) {\n        editSvc.cleanupEditors();\n      } else {\n        editSvc.stopEditing(void 0, {\n          source: \"api\"\n        });\n      }\n    }\n    const partialRefresh = rowNodes != null;\n    if (partialRefresh) {\n      rowNodes?.forEach(node => this.redrawRow(node, true));\n      this.dispatchDisplayedRowsChanged(false);\n      return;\n    }\n    this.redrawAfterModelUpdate();\n  }\n  // gets called from:\n  // +) initialisation (in registerGridComp) params = null\n  // +) onDomLayoutChanged, params = null\n  // +) onPageLoaded, recycleRows, animate, newData, newPage from event, onlyBody=true\n  // +) onPinnedRowDataChanged, recycleRows = true\n  // +) redrawRows (from Grid API), recycleRows = true/false\n  redrawAfterModelUpdate(params = {}) {\n    this.getLockOnRefresh();\n    const focusedCell = this.beans.focusSvc?.getFocusCellToUseAfterRefresh();\n    this.updateContainerHeights();\n    this.scrollToTopIfNewData(params);\n    const recycleRows = !params.domLayoutChanged && !!params.recycleRows;\n    const animate = params.animate && _isAnimateRows(this.gos);\n    const rowsToRecycle = recycleRows ? this.getRowsToRecycle() : null;\n    if (!recycleRows) {\n      this.removeAllRowComps();\n    }\n    this.workOutFirstAndLastRowsToRender();\n    const {\n      stickyRowFeature,\n      gos\n    } = this;\n    if (stickyRowFeature) {\n      stickyRowFeature.checkStickyRows();\n      const extraHeight = stickyRowFeature.extraTopHeight + stickyRowFeature.extraBottomHeight;\n      if (extraHeight) {\n        this.updateContainerHeights(extraHeight);\n      }\n    }\n    this.recycleRows(rowsToRecycle, animate);\n    this.gridBodyCtrl.updateRowCount();\n    if (!params.onlyBody) {\n      this.refreshFloatingRowComps(gos.get(\"enableRowPinning\") ? recycleRows : void 0);\n    }\n    this.dispatchDisplayedRowsChanged();\n    if (focusedCell != null) {\n      this.restoreFocusedCell(focusedCell);\n    }\n    this.releaseLockOnRefresh();\n  }\n  scrollToTopIfNewData(params) {\n    const scrollToTop = params.newData || params.newPage;\n    const suppressScrollToTop = this.gos.get(\"suppressScrollOnNewData\");\n    if (scrollToTop && !suppressScrollToTop) {\n      this.gridBodyCtrl.scrollFeature.scrollToTop();\n      this.stickyRowFeature?.resetOffsets();\n    }\n  }\n  updateContainerHeights(additionalHeight = 0) {\n    const {\n      rowContainerHeight\n    } = this;\n    if (this.printLayout) {\n      rowContainerHeight.setModelHeight(null);\n      return;\n    }\n    let containerHeight = this.pageBounds.getCurrentPageHeight();\n    if (containerHeight === 0) {\n      containerHeight = 1;\n    }\n    rowContainerHeight.setModelHeight(containerHeight + additionalHeight);\n  }\n  getLockOnRefresh() {\n    if (this.refreshInProgress) {\n      throw new Error(_errMsg(252));\n    }\n    this.refreshInProgress = true;\n    this.beans.frameworkOverrides.getLockOnRefresh?.();\n  }\n  releaseLockOnRefresh() {\n    this.refreshInProgress = false;\n    this.beans.frameworkOverrides.releaseLockOnRefresh?.();\n  }\n  isRefreshInProgress() {\n    return this.refreshInProgress;\n  }\n  // sets the focus to the provided cell, if the cell is provided. this way, the user can call refresh without\n  // worry about the focus been lost. this is important when the user is using keyboard navigation to do edits\n  // and the cellEditor is calling 'refresh' to get other cells to update (as other cells might depend on the\n  // edited cell).\n  restoreFocusedCell(cellPosition) {\n    if (!cellPosition) {\n      return;\n    }\n    const focusSvc = this.beans.focusSvc;\n    const cellToFocus = this.findPositionToFocus(cellPosition);\n    if (!cellToFocus) {\n      focusSvc.focusHeaderPosition({\n        headerPosition: {\n          headerRowIndex: getFocusHeaderRowCount(this.beans) - 1,\n          column: cellPosition.column\n        }\n      });\n      return;\n    }\n    if (cellPosition.rowIndex !== cellToFocus.rowIndex || cellPosition.rowPinned != cellToFocus.rowPinned) {\n      focusSvc.setFocusedCell({\n        ...cellToFocus,\n        preventScrollOnBrowserFocus: true,\n        forceBrowserFocus: true\n      });\n      return;\n    }\n    if (!focusSvc.doesRowOrCellHaveBrowserFocus()) {\n      this.updateCellFocus(_addGridCommonParams(this.gos, {\n        ...cellToFocus,\n        forceBrowserFocus: true,\n        preventScrollOnBrowserFocus: true,\n        type: \"cellFocused\"\n      }));\n    }\n  }\n  findPositionToFocus(cellPosition) {\n    const {\n      pagination,\n      pageBounds\n    } = this.beans;\n    let rowPosition = cellPosition;\n    if (rowPosition.rowPinned == null && pagination && pageBounds && !pagination.isRowInPage(rowPosition.rowIndex)) {\n      rowPosition = {\n        rowPinned: null,\n        rowIndex: pageBounds.getFirstRow()\n      };\n    }\n    while (rowPosition) {\n      if (rowPosition.rowPinned == null && pageBounds) {\n        if (rowPosition.rowIndex < pageBounds.getFirstRow()) {\n          rowPosition = _getRowAbove(this.beans, {\n            rowPinned: null,\n            rowIndex: 0\n          });\n          if (!rowPosition) {\n            return null;\n          }\n        } else if (rowPosition.rowIndex > pageBounds.getLastRow()) {\n          rowPosition = {\n            rowPinned: null,\n            rowIndex: pageBounds.getLastRow()\n          };\n        }\n      }\n      const row = this.getRowByPosition(rowPosition);\n      if (row?.isAlive()) {\n        return {\n          ...row.getRowPosition(),\n          column: cellPosition.column\n        };\n      }\n      rowPosition = _getRowAbove(this.beans, rowPosition);\n    }\n    return null;\n  }\n  getAllCellCtrls() {\n    const res = [];\n    const rowCtrls = this.getAllRowCtrls();\n    const rowCtrlsLength = rowCtrls.length;\n    for (let i = 0; i < rowCtrlsLength; i++) {\n      const cellCtrls = rowCtrls[i].getAllCellCtrls();\n      const cellCtrlsLength = cellCtrls.length;\n      for (let j = 0; j < cellCtrlsLength; j++) {\n        res.push(cellCtrls[j]);\n      }\n    }\n    return res;\n  }\n  getAllRowCtrls() {\n    const {\n      spannedRowRenderer\n    } = this.beans;\n    const stickyTopRowCtrls = this.getStickyTopRowCtrls();\n    const stickyBottomRowCtrls = this.getStickyBottomRowCtrls();\n    const res = [...this.topRowCtrls, ...this.bottomRowCtrls, ...stickyTopRowCtrls, ...stickyBottomRowCtrls, ...(spannedRowRenderer?.getCtrls(\"top\") ?? []), ...(spannedRowRenderer?.getCtrls(\"bottom\") ?? []), ...(spannedRowRenderer?.getCtrls(\"center\") ?? []), ...Object.values(this.rowCtrlsByRowIndex)];\n    return res;\n  }\n  addRenderedRowListener(eventName, rowIndex, callback) {\n    const rowComp = this.rowCtrlsByRowIndex[rowIndex];\n    if (rowComp) {\n      rowComp.addEventListener(eventName, callback);\n    }\n  }\n  refreshCells({\n    rowNodes,\n    columns,\n    force,\n    suppressFlash\n  } = {}) {\n    const refreshCellParams = {\n      force,\n      newData: false,\n      suppressFlash\n    };\n    for (const cellCtrl of this.getCellCtrls(rowNodes, columns)) {\n      cellCtrl.refreshOrDestroyCell(refreshCellParams);\n    }\n    this.refreshFullWidth(rowNodes);\n  }\n  refreshRows(params = {}) {\n    this.getRowCtrls(params.rowNodes).forEach(rowCtrl => rowCtrl.refreshRow(params));\n    this.refreshFullWidth(params.rowNodes);\n  }\n  refreshFullWidth(rowNodes) {\n    if (!rowNodes) {\n      return;\n    }\n    let rowRedrawn = false;\n    for (const rowCtrl of this.getRowCtrls(rowNodes)) {\n      if (!rowCtrl.isFullWidth()) {\n        continue;\n      }\n      const refreshed = rowCtrl.refreshFullWidth();\n      if (!refreshed) {\n        rowRedrawn = true;\n        this.redrawRow(rowCtrl.rowNode, true);\n      }\n    }\n    if (rowRedrawn) {\n      this.dispatchDisplayedRowsChanged(false);\n    }\n  }\n  /**\n   * @param rowNodes if provided, returns the RowCtrls for the provided rowNodes. otherwise returns all RowCtrls.\n   */\n  getRowCtrls(rowNodes) {\n    const rowIdsMap = mapRowNodes(rowNodes);\n    const allRowCtrls = this.getAllRowCtrls();\n    if (!rowNodes || !rowIdsMap) {\n      return allRowCtrls;\n    }\n    return allRowCtrls.filter(rowCtrl => {\n      const rowNode = rowCtrl.rowNode;\n      return isRowInMap(rowNode, rowIdsMap);\n    });\n  }\n  // returns CellCtrl's that match the provided rowNodes and columns. eg if one row node\n  // and two columns provided, that identifies 4 cells, so 4 CellCtrl's returned.\n  getCellCtrls(rowNodes, columns) {\n    let colIdsMap;\n    if (_exists(columns)) {\n      colIdsMap = {};\n      columns.forEach(colKey => {\n        const column = this.colModel.getCol(colKey);\n        if (_exists(column)) {\n          colIdsMap[column.getId()] = true;\n        }\n      });\n    }\n    const res = [];\n    this.getRowCtrls(rowNodes).forEach(rowCtrl => {\n      rowCtrl.getAllCellCtrls().forEach(cellCtrl => {\n        const colId = cellCtrl.column.getId();\n        const excludeColFromRefresh = colIdsMap && !colIdsMap[colId];\n        if (excludeColFromRefresh) {\n          return;\n        }\n        res.push(cellCtrl);\n      });\n    });\n    return res;\n  }\n  destroy() {\n    this.removeAllRowComps(true);\n    super.destroy();\n  }\n  removeAllRowComps(suppressAnimation = false) {\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\n    this.removeRowCtrls(rowIndexesToRemove, suppressAnimation);\n    this.stickyRowFeature?.destroyStickyCtrls();\n  }\n  getRowsToRecycle() {\n    const stubNodeIndexes = [];\n    for (const index of Object.keys(this.rowCtrlsByRowIndex)) {\n      const rowCtrl = this.rowCtrlsByRowIndex[index];\n      const stubNode = rowCtrl.rowNode.id == null;\n      if (stubNode) {\n        stubNodeIndexes.push(index);\n      }\n    }\n    this.removeRowCtrls(stubNodeIndexes);\n    const ctrlsByIdMap = {};\n    for (const rowCtrl of Object.values(this.rowCtrlsByRowIndex)) {\n      const rowNode = rowCtrl.rowNode;\n      ctrlsByIdMap[rowNode.id] = rowCtrl;\n    }\n    this.rowCtrlsByRowIndex = {};\n    return ctrlsByIdMap;\n  }\n  // takes array of row indexes\n  removeRowCtrls(rowsToRemove, suppressAnimation = false) {\n    rowsToRemove.forEach(indexToRemove => {\n      const rowCtrl = this.rowCtrlsByRowIndex[indexToRemove];\n      if (rowCtrl) {\n        rowCtrl.destroyFirstPass(suppressAnimation);\n        rowCtrl.destroySecondPass();\n      }\n      delete this.rowCtrlsByRowIndex[indexToRemove];\n    });\n  }\n  onBodyScroll(e) {\n    if (e.direction !== \"vertical\") {\n      return;\n    }\n    this.redraw({\n      afterScroll: true\n    });\n  }\n  // gets called when rows don't change, but viewport does, so after:\n  // 1) height of grid body changes, ie number of displayed rows has changed\n  // 2) grid scrolled to new position\n  // 3) ensure index visible (which is a scroll)\n  redraw(params = {}) {\n    const {\n      focusSvc,\n      animationFrameSvc\n    } = this.beans;\n    const {\n      afterScroll\n    } = params;\n    let cellFocused;\n    const stickyRowFeature = this.stickyRowFeature;\n    if (stickyRowFeature) {\n      cellFocused = focusSvc?.getFocusCellToUseAfterRefresh() || void 0;\n    }\n    const oldFirstRow = this.firstRenderedRow;\n    const oldLastRow = this.lastRenderedRow;\n    this.workOutFirstAndLastRowsToRender();\n    let hasStickyRowChanges = false;\n    if (stickyRowFeature) {\n      hasStickyRowChanges = stickyRowFeature.checkStickyRows();\n      const extraHeight = stickyRowFeature.extraTopHeight + stickyRowFeature.extraBottomHeight;\n      if (extraHeight) {\n        this.updateContainerHeights(extraHeight);\n      }\n    }\n    const rangeChanged = this.firstRenderedRow !== oldFirstRow || this.lastRenderedRow !== oldLastRow;\n    if (afterScroll && !hasStickyRowChanges && !rangeChanged) {\n      return;\n    }\n    this.getLockOnRefresh();\n    this.recycleRows(null, false, afterScroll);\n    this.releaseLockOnRefresh();\n    this.dispatchDisplayedRowsChanged(afterScroll && !hasStickyRowChanges);\n    if (cellFocused != null) {\n      const newFocusedCell = focusSvc?.getFocusCellToUseAfterRefresh();\n      if (cellFocused != null && newFocusedCell == null) {\n        animationFrameSvc?.flushAllFrames();\n        this.restoreFocusedCell(cellFocused);\n      }\n    }\n  }\n  removeRowCompsNotToDraw(indexesToDraw, suppressAnimation) {\n    const indexesToDrawMap = {};\n    indexesToDraw.forEach(index => indexesToDrawMap[index] = true);\n    const existingIndexes = Object.keys(this.rowCtrlsByRowIndex);\n    const indexesNotToDraw = existingIndexes.filter(index => !indexesToDrawMap[index]);\n    this.removeRowCtrls(indexesNotToDraw, suppressAnimation);\n  }\n  calculateIndexesToDraw(rowsToRecycle) {\n    const indexesToDraw = [];\n    for (let i = this.firstRenderedRow; i <= this.lastRenderedRow; i++) {\n      indexesToDraw.push(i);\n    }\n    const pagination = this.beans.pagination;\n    const focusedRowIndex = this.beans.focusSvc?.getFocusedCell()?.rowIndex;\n    if (focusedRowIndex != null && (focusedRowIndex < this.firstRenderedRow || focusedRowIndex > this.lastRenderedRow) && (!pagination || pagination.isRowInPage(focusedRowIndex)) && focusedRowIndex < this.rowModel.getRowCount()) {\n      indexesToDraw.push(focusedRowIndex);\n    }\n    const checkRowToDraw = rowComp => {\n      const index = rowComp.rowNode.rowIndex;\n      if (index == null || index === focusedRowIndex) {\n        return;\n      }\n      if (index < this.firstRenderedRow || index > this.lastRenderedRow) {\n        if (this.doNotUnVirtualiseRow(rowComp)) {\n          indexesToDraw.push(index);\n        }\n      }\n    };\n    for (const rowCtrl of Object.values(this.rowCtrlsByRowIndex)) {\n      checkRowToDraw(rowCtrl);\n    }\n    if (rowsToRecycle) {\n      for (const rowCtrl of Object.values(rowsToRecycle)) {\n        checkRowToDraw(rowCtrl);\n      }\n    }\n    indexesToDraw.sort((a, b) => a - b);\n    const ret = [];\n    for (let i = 0; i < indexesToDraw.length; i++) {\n      const currRow = indexesToDraw[i];\n      const rowNode = this.rowModel.getRow(currRow);\n      if (rowNode && !rowNode.sticky) {\n        ret.push(currRow);\n      }\n    }\n    return ret;\n  }\n  recycleRows(rowsToRecycle, animate = false, afterScroll = false) {\n    const indexesToDraw = this.calculateIndexesToDraw(rowsToRecycle);\n    if (this.printLayout || afterScroll) {\n      animate = false;\n    }\n    this.removeRowCompsNotToDraw(indexesToDraw, !animate);\n    const rowCtrls = [];\n    indexesToDraw.forEach(rowIndex => {\n      const rowCtrl = this.createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll);\n      if (_exists(rowCtrl)) {\n        rowCtrls.push(rowCtrl);\n      }\n    });\n    if (rowsToRecycle) {\n      const {\n        animationFrameSvc\n      } = this.beans;\n      const useAnimationFrame = animationFrameSvc?.active && afterScroll && !this.printLayout;\n      if (useAnimationFrame) {\n        animationFrameSvc.addDestroyTask(() => {\n          this.destroyRowCtrls(rowsToRecycle, animate);\n          this.updateAllRowCtrls();\n          this.dispatchDisplayedRowsChanged();\n        });\n      } else {\n        this.destroyRowCtrls(rowsToRecycle, animate);\n      }\n    }\n    this.updateAllRowCtrls();\n  }\n  dispatchDisplayedRowsChanged(afterScroll = false) {\n    this.eventSvc.dispatchEvent({\n      type: \"displayedRowsChanged\",\n      afterScroll\n    });\n  }\n  onDisplayedColumnsChanged() {\n    const {\n      visibleCols\n    } = this.beans;\n    const pinningLeft = visibleCols.isPinningLeft();\n    const pinningRight = visibleCols.isPinningRight();\n    const atLeastOneChanged = this.pinningLeft !== pinningLeft || pinningRight !== this.pinningRight;\n    if (atLeastOneChanged) {\n      this.pinningLeft = pinningLeft;\n      this.pinningRight = pinningRight;\n      if (this.embedFullWidthRows) {\n        this.redrawFullWidthEmbeddedRows();\n      }\n    }\n  }\n  // when embedding, what gets showed in each section depends on what is pinned. eg if embedding group expand / collapse,\n  // then it should go into the pinned left area if pinning left, or the center area if not pinning.\n  redrawFullWidthEmbeddedRows() {\n    const rowsToRemove = [];\n    this.getFullWidthRowCtrls().forEach(fullWidthCtrl => {\n      const rowIndex = fullWidthCtrl.rowNode.rowIndex;\n      rowsToRemove.push(rowIndex.toString());\n    });\n    this.refreshFloatingRowComps();\n    this.removeRowCtrls(rowsToRemove);\n    this.redraw({\n      afterScroll: true\n    });\n  }\n  getFullWidthRowCtrls(rowNodes) {\n    const rowNodesMap = mapRowNodes(rowNodes);\n    return this.getAllRowCtrls().filter(rowCtrl => {\n      if (!rowCtrl.isFullWidth()) {\n        return false;\n      }\n      const rowNode = rowCtrl.rowNode;\n      if (rowNodesMap != null && !isRowInMap(rowNode, rowNodesMap)) {\n        return false;\n      }\n      return true;\n    });\n  }\n  createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll) {\n    let rowNode;\n    let rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\n    if (!rowCtrl) {\n      rowNode = this.rowModel.getRow(rowIndex);\n      if (_exists(rowNode) && _exists(rowsToRecycle) && rowsToRecycle[rowNode.id] && rowNode.alreadyRendered) {\n        rowCtrl = rowsToRecycle[rowNode.id];\n        rowsToRecycle[rowNode.id] = null;\n      }\n    }\n    const creatingNewRowCtrl = !rowCtrl;\n    if (creatingNewRowCtrl) {\n      if (!rowNode) {\n        rowNode = this.rowModel.getRow(rowIndex);\n      }\n      if (_exists(rowNode)) {\n        rowCtrl = this.createRowCon(rowNode, animate, afterScroll);\n      } else {\n        return;\n      }\n    }\n    if (rowNode) {\n      rowNode.alreadyRendered = true;\n    }\n    this.rowCtrlsByRowIndex[rowIndex] = rowCtrl;\n    return rowCtrl;\n  }\n  destroyRowCtrls(rowCtrlsMap, animate) {\n    const executeInAWhileFuncs = [];\n    if (rowCtrlsMap) {\n      for (const rowCtrl of Object.values(rowCtrlsMap)) {\n        if (!rowCtrl) {\n          continue;\n        }\n        if (this.cachedRowCtrls && rowCtrl.isCacheable()) {\n          this.cachedRowCtrls.addRow(rowCtrl);\n          continue;\n        }\n        rowCtrl.destroyFirstPass(!animate);\n        if (animate) {\n          const instanceId = rowCtrl.instanceId;\n          this.zombieRowCtrls[instanceId] = rowCtrl;\n          executeInAWhileFuncs.push(() => {\n            rowCtrl.destroySecondPass();\n            delete this.zombieRowCtrls[instanceId];\n          });\n        } else {\n          rowCtrl.destroySecondPass();\n        }\n      }\n    }\n    if (animate) {\n      executeInAWhileFuncs.push(() => {\n        this.updateAllRowCtrls();\n        this.dispatchDisplayedRowsChanged();\n      });\n      window.setTimeout(() => executeInAWhileFuncs.forEach(func => func()), ROW_ANIMATION_TIMEOUT);\n    }\n  }\n  getRowBuffer() {\n    return this.gos.get(\"rowBuffer\");\n  }\n  getRowBufferInPixels() {\n    const rowsToBuffer = this.getRowBuffer();\n    const defaultRowHeight = _getRowHeightAsNumber(this.beans);\n    return rowsToBuffer * defaultRowHeight;\n  }\n  workOutFirstAndLastRowsToRender() {\n    const {\n      rowContainerHeight,\n      pageBounds,\n      rowModel\n    } = this;\n    rowContainerHeight.updateOffset();\n    let newFirst;\n    let newLast;\n    if (!rowModel.isRowsToRender()) {\n      newFirst = 0;\n      newLast = -1;\n    } else if (this.printLayout) {\n      this.beans.environment.refreshRowHeightVariable();\n      newFirst = pageBounds.getFirstRow();\n      newLast = pageBounds.getLastRow();\n    } else {\n      const bufferPixels = this.getRowBufferInPixels();\n      const scrollFeature = this.ctrlsSvc.getScrollFeature();\n      const suppressRowVirtualisation = this.gos.get(\"suppressRowVirtualisation\");\n      let rowHeightsChanged = false;\n      let firstPixel;\n      let lastPixel;\n      do {\n        const paginationOffset = pageBounds.getPixelOffset();\n        const {\n          pageFirstPixel,\n          pageLastPixel\n        } = pageBounds.getCurrentPagePixelRange();\n        const divStretchOffset = rowContainerHeight.divStretchOffset;\n        const bodyVRange = scrollFeature.getVScrollPosition();\n        const bodyTopPixel = bodyVRange.top;\n        const bodyBottomPixel = bodyVRange.bottom;\n        if (suppressRowVirtualisation) {\n          firstPixel = pageFirstPixel + divStretchOffset;\n          lastPixel = pageLastPixel + divStretchOffset;\n        } else {\n          firstPixel = Math.max(bodyTopPixel + paginationOffset - bufferPixels, pageFirstPixel) + divStretchOffset;\n          lastPixel = Math.min(bodyBottomPixel + paginationOffset + bufferPixels, pageLastPixel) + divStretchOffset;\n        }\n        this.firstVisibleVPixel = Math.max(bodyTopPixel + paginationOffset, pageFirstPixel) + divStretchOffset;\n        this.lastVisibleVPixel = Math.min(bodyBottomPixel + paginationOffset, pageLastPixel) + divStretchOffset;\n        rowHeightsChanged = this.ensureAllRowsInRangeHaveHeightsCalculated(firstPixel, lastPixel);\n      } while (rowHeightsChanged);\n      let firstRowIndex = rowModel.getRowIndexAtPixel(firstPixel);\n      let lastRowIndex = rowModel.getRowIndexAtPixel(lastPixel);\n      const pageFirstRow = pageBounds.getFirstRow();\n      const pageLastRow = pageBounds.getLastRow();\n      if (firstRowIndex < pageFirstRow) {\n        firstRowIndex = pageFirstRow;\n      }\n      if (lastRowIndex > pageLastRow) {\n        lastRowIndex = pageLastRow;\n      }\n      newFirst = firstRowIndex;\n      newLast = lastRowIndex;\n    }\n    const rowLayoutNormal = _isDomLayout(this.gos, \"normal\");\n    const suppressRowCountRestriction = this.gos.get(\"suppressMaxRenderedRowRestriction\");\n    const rowBufferMaxSize = Math.max(this.getRowBuffer(), 500);\n    if (rowLayoutNormal && !suppressRowCountRestriction) {\n      if (newLast - newFirst > rowBufferMaxSize) {\n        newLast = newFirst + rowBufferMaxSize;\n      }\n    }\n    const firstDiffers = newFirst !== this.firstRenderedRow;\n    const lastDiffers = newLast !== this.lastRenderedRow;\n    if (firstDiffers || lastDiffers) {\n      this.firstRenderedRow = newFirst;\n      this.lastRenderedRow = newLast;\n      this.eventSvc.dispatchEvent({\n        type: \"viewportChanged\",\n        firstRow: newFirst,\n        lastRow: newLast\n      });\n    }\n  }\n  /**\n   * This event will only be fired once, and is queued until after the browser next renders.\n   * This allows us to fire an event during the start of the render cycle, when we first see data being rendered\n   * but not execute the event until all of the data has finished being rendered to the dom.\n   */\n  dispatchFirstDataRenderedEvent() {\n    if (this.dataFirstRenderedFired) {\n      return;\n    }\n    this.dataFirstRenderedFired = true;\n    _requestAnimationFrame(this.beans, () => {\n      this.beans.eventSvc.dispatchEvent({\n        type: \"firstDataRendered\",\n        firstRow: this.firstRenderedRow,\n        lastRow: this.lastRenderedRow\n      });\n    });\n  }\n  ensureAllRowsInRangeHaveHeightsCalculated(topPixel, bottomPixel) {\n    const pinnedRowHeightsChanged = this.pinnedRowModel?.ensureRowHeightsValid();\n    const stickyHeightsChanged = this.stickyRowFeature?.ensureRowHeightsValid();\n    const {\n      pageBounds,\n      rowModel\n    } = this;\n    const rowModelHeightsChanged = rowModel.ensureRowHeightsValid(topPixel, bottomPixel, pageBounds.getFirstRow(), pageBounds.getLastRow());\n    if (rowModelHeightsChanged || stickyHeightsChanged) {\n      this.eventSvc.dispatchEvent({\n        type: \"recalculateRowBounds\"\n      });\n    }\n    if (stickyHeightsChanged || rowModelHeightsChanged || pinnedRowHeightsChanged) {\n      this.updateContainerHeights();\n      return true;\n    }\n    return false;\n  }\n  // check that none of the rows to remove are editing or focused as:\n  // a) if editing, we want to keep them, otherwise the user will loose the context of the edit,\n  //    eg user starts editing, enters some text, then scrolls down and then up, next time row rendered\n  //    the edit is reset - so we want to keep it rendered.\n  // b) if focused, we want ot keep keyboard focus, so if user ctrl+c, it goes to clipboard,\n  //    otherwise the user can range select and drag (with focus cell going out of the viewport)\n  //    and then ctrl+c, nothing will happen if cell is removed from dom.\n  // c) if detail record of master detail, as users complained that the context of detail rows\n  //    was getting lost when detail row out of view. eg user expands to show detail row,\n  //    then manipulates the detail panel (eg sorts the detail grid), then context is lost\n  //    after detail panel is scrolled out of / into view.\n  doNotUnVirtualiseRow(rowCtrl) {\n    const REMOVE_ROW = false;\n    const KEEP_ROW = true;\n    const rowNode = rowCtrl.rowNode;\n    const rowHasFocus = this.focusSvc.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n    const rowIsEditing = this.editSvc?.isEditing(rowCtrl);\n    const rowIsDetail = rowNode.detail;\n    const mightWantToKeepRow = rowHasFocus || rowIsEditing || rowIsDetail;\n    if (!mightWantToKeepRow) {\n      return REMOVE_ROW;\n    }\n    const rowNodePresent = this.isRowPresent(rowNode);\n    return rowNodePresent ? KEEP_ROW : REMOVE_ROW;\n  }\n  isRowPresent(rowNode) {\n    if (!this.rowModel.isRowPresent(rowNode)) {\n      return false;\n    }\n    return this.beans.pagination?.isRowInPage(rowNode.rowIndex) ?? true;\n  }\n  createRowCon(rowNode, animate, afterScroll) {\n    const rowCtrlFromCache = this.cachedRowCtrls?.getRow(rowNode) ?? null;\n    if (rowCtrlFromCache) {\n      return rowCtrlFromCache;\n    }\n    const useAnimationFrameForCreate = afterScroll && !this.printLayout && !!this.beans.animationFrameSvc?.active;\n    const res = new RowCtrl(rowNode, this.beans, animate, useAnimationFrameForCreate, this.printLayout);\n    return res;\n  }\n  getRenderedNodes() {\n    const viewportRows = Object.values(this.rowCtrlsByRowIndex).map(rowCtrl => rowCtrl.rowNode);\n    const stickyTopRows = this.getStickyTopRowCtrls().map(rowCtrl => rowCtrl.rowNode);\n    const stickyBottomRows = this.getStickyBottomRowCtrls().map(rowCtrl => rowCtrl.rowNode);\n    return [...stickyTopRows, ...viewportRows, ...stickyBottomRows];\n  }\n  getRowByPosition(rowPosition) {\n    let rowCtrl;\n    const {\n      rowIndex\n    } = rowPosition;\n    switch (rowPosition.rowPinned) {\n      case \"top\":\n        rowCtrl = this.topRowCtrls[rowIndex];\n        break;\n      case \"bottom\":\n        rowCtrl = this.bottomRowCtrls[rowIndex];\n        break;\n      default:\n        rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\n        if (!rowCtrl) {\n          rowCtrl = this.getStickyTopRowCtrls().find(ctrl => ctrl.rowNode.rowIndex === rowIndex) || null;\n          if (!rowCtrl) {\n            rowCtrl = this.getStickyBottomRowCtrls().find(ctrl => ctrl.rowNode.rowIndex === rowIndex) || null;\n          }\n        }\n        break;\n    }\n    return rowCtrl;\n  }\n  // returns true if any row between startIndex and endIndex is rendered. used by\n  // SSRM or IRM, as they don't want to purge visible blocks from cache.\n  isRangeInRenderedViewport(startIndex, endIndex) {\n    const parentClosed = startIndex == null || endIndex == null;\n    if (parentClosed) {\n      return false;\n    }\n    const blockAfterViewport = startIndex > this.lastRenderedRow;\n    const blockBeforeViewport = endIndex < this.firstRenderedRow;\n    const blockInsideViewport = !blockBeforeViewport && !blockAfterViewport;\n    return blockInsideViewport;\n  }\n};\nvar RowCtrlCache = class {\n  constructor(maxCount) {\n    // map for fast access\n    this.entriesMap = {};\n    // list for keeping order\n    this.entriesList = [];\n    this.maxCount = maxCount;\n  }\n  addRow(rowCtrl) {\n    this.entriesMap[rowCtrl.rowNode.id] = rowCtrl;\n    this.entriesList.push(rowCtrl);\n    rowCtrl.setCached(true);\n    if (this.entriesList.length > this.maxCount) {\n      const rowCtrlToDestroy = this.entriesList[0];\n      rowCtrlToDestroy.destroyFirstPass();\n      rowCtrlToDestroy.destroySecondPass();\n      this.removeFromCache(rowCtrlToDestroy);\n    }\n  }\n  getRow(rowNode) {\n    if (rowNode == null || rowNode.id == null) {\n      return null;\n    }\n    const res = this.entriesMap[rowNode.id];\n    if (!res) {\n      return null;\n    }\n    this.removeFromCache(res);\n    res.setCached(false);\n    const rowNodeMismatch = res.rowNode != rowNode;\n    return rowNodeMismatch ? null : res;\n  }\n  has(rowNode) {\n    return this.entriesMap[rowNode.id] != null;\n  }\n  removeRow(rowNode) {\n    const rowNodeId = rowNode.id;\n    const ctrl = this.entriesMap[rowNodeId];\n    delete this.entriesMap[rowNodeId];\n    _removeFromArray(this.entriesList, ctrl);\n  }\n  removeFromCache(rowCtrl) {\n    const rowNodeId = rowCtrl.rowNode.id;\n    delete this.entriesMap[rowNodeId];\n    _removeFromArray(this.entriesList, rowCtrl);\n  }\n  getEntries() {\n    return this.entriesList;\n  }\n};\nfunction mapRowNodes(rowNodes) {\n  if (!rowNodes) {\n    return;\n  }\n  const res = {\n    top: {},\n    bottom: {},\n    normal: {}\n  };\n  rowNodes.forEach(rowNode => {\n    const id = rowNode.id;\n    switch (rowNode.rowPinned) {\n      case \"top\":\n        res.top[id] = rowNode;\n        break;\n      case \"bottom\":\n        res.bottom[id] = rowNode;\n        break;\n      default:\n        res.normal[id] = rowNode;\n        break;\n    }\n  });\n  return res;\n}\nfunction isRowInMap(rowNode, rowIdsMap) {\n  const id = rowNode.id;\n  const floating = rowNode.rowPinned;\n  switch (floating) {\n    case \"top\":\n      return rowIdsMap.top[id] != null;\n    case \"bottom\":\n      return rowIdsMap.bottom[id] != null;\n    default:\n      return rowIdsMap.normal[id] != null;\n  }\n}\n\n// packages/ag-grid-community/src/sort/rowNodeSorter.ts\nvar RowNodeSorter = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowNodeSorter\";\n  }\n  postConstruct() {\n    const {\n      gos\n    } = this;\n    this.isAccentedSort = gos.get(\"accentedSort\");\n    this.primaryColumnsSortGroups = _isColumnsSortingCoupledToGroup(gos);\n    this.addManagedPropertyListener(\"accentedSort\", propChange => this.isAccentedSort = propChange.currentValue);\n    this.addManagedPropertyListener(\"autoGroupColumnDef\", () => this.primaryColumnsSortGroups = _isColumnsSortingCoupledToGroup(gos));\n  }\n  doFullSort(rowNodes, sortOptions) {\n    const sortedRowNodes = rowNodes.map((rowNode, currentPos) => ({\n      currentPos,\n      rowNode\n    }));\n    sortedRowNodes.sort(this.compareRowNodes.bind(this, sortOptions));\n    return sortedRowNodes.map(item => item.rowNode);\n  }\n  compareRowNodes(sortOptions, sortedNodeA, sortedNodeB) {\n    const nodeA = sortedNodeA.rowNode;\n    const nodeB = sortedNodeB.rowNode;\n    for (let i = 0, len = sortOptions.length; i < len; i++) {\n      const sortOption = sortOptions[i];\n      const isDescending = sortOption.sort === \"desc\";\n      const valueA = this.getValue(nodeA, sortOption.column);\n      const valueB = this.getValue(nodeB, sortOption.column);\n      let comparatorResult;\n      const providedComparator = this.getComparator(sortOption, nodeA);\n      if (providedComparator) {\n        comparatorResult = providedComparator(valueA, valueB, nodeA, nodeB, isDescending);\n      } else {\n        comparatorResult = _defaultComparator(valueA, valueB, this.isAccentedSort);\n      }\n      const validResult = !isNaN(comparatorResult);\n      if (validResult && comparatorResult !== 0) {\n        return sortOption.sort === \"asc\" ? comparatorResult : comparatorResult * -1;\n      }\n    }\n    return sortedNodeA.currentPos - sortedNodeB.currentPos;\n  }\n  getComparator(sortOption, rowNode) {\n    const column = sortOption.column;\n    const comparatorOnCol = column.getColDef().comparator;\n    if (comparatorOnCol != null) {\n      return comparatorOnCol;\n    }\n    if (!column.getColDef().showRowGroup) {\n      return;\n    }\n    const groupLeafField = !rowNode.group && column.getColDef().field;\n    if (!groupLeafField) {\n      return;\n    }\n    const primaryColumn = this.beans.colModel.getColDefCol(groupLeafField);\n    if (!primaryColumn) {\n      return;\n    }\n    return primaryColumn.getColDef().comparator;\n  }\n  getValue(node, column) {\n    const {\n      valueSvc,\n      colModel,\n      showRowGroupCols,\n      gos\n    } = this.beans;\n    if (!this.primaryColumnsSortGroups) {\n      return valueSvc.getValue(column, node, false);\n    }\n    const isNodeGroupedAtLevel = node.rowGroupColumn === column;\n    if (isNodeGroupedAtLevel) {\n      const isGroupRows = _isGroupUseEntireRow(gos, colModel.isPivotActive());\n      if (isGroupRows) {\n        const leafChild = node.allLeafChildren?.[0];\n        if (leafChild) {\n          return valueSvc.getValue(column, leafChild, false);\n        }\n        return void 0;\n      }\n      const displayCol = showRowGroupCols?.getShowRowGroupCol(column.getId());\n      if (!displayCol) {\n        return void 0;\n      }\n      return node.groupData?.[displayCol.getId()];\n    }\n    if (node.group && column.getColDef().showRowGroup) {\n      return void 0;\n    }\n    return valueSvc.getValue(column, node, false);\n  }\n};\n\n// packages/ag-grid-community/src/sort/sortApi.ts\nfunction onSortChanged(beans) {\n  beans.sortSvc?.onSortChanged(\"api\");\n}\n\n// packages/ag-grid-community/src/sort/sortModule.ts\nvar SortModule = {\n  moduleName: \"Sort\",\n  version: VERSION,\n  beans: [SortService, RowNodeSorter],\n  apiFunctions: {\n    onSortChanged\n  },\n  userComponents: {\n    agSortIndicator: SortIndicatorComp\n  },\n  icons: {\n    // show on column header when column is sorted ascending\n    sortAscending: \"asc\",\n    // show on column header when column is sorted descending\n    sortDescending: \"desc\",\n    // show on column header when column has no sort, only when enabled with gridOptions.unSortIcon=true\n    sortUnSort: \"none\"\n  }\n};\n\n// packages/ag-grid-community/src/syncService.ts\nvar SyncService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"syncSvc\";\n    this.waitingForColumns = false;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"columnDefs\", event => this.setColumnDefs(event));\n  }\n  start() {\n    this.beans.ctrlsSvc.whenReady(this, () => {\n      const columnDefs = this.gos.get(\"columnDefs\");\n      if (columnDefs) {\n        this.setColumnsAndData(columnDefs);\n      } else {\n        this.waitingForColumns = true;\n      }\n      this.gridReady();\n    });\n  }\n  setColumnsAndData(columnDefs) {\n    const {\n      colModel,\n      rowModel\n    } = this.beans;\n    colModel.setColumnDefs(columnDefs ?? [], \"gridInitializing\");\n    rowModel.start();\n  }\n  gridReady() {\n    const {\n      eventSvc,\n      gos\n    } = this;\n    eventSvc.dispatchEvent({\n      type: \"gridReady\"\n    });\n    _logIfDebug(gos, `initialised successfully, enterprise = ${gos.isModuleRegistered(\"EnterpriseCore\")}`);\n  }\n  setColumnDefs(event) {\n    const columnDefs = this.gos.get(\"columnDefs\");\n    if (!columnDefs) {\n      return;\n    }\n    if (this.waitingForColumns) {\n      this.waitingForColumns = false;\n      this.setColumnsAndData(columnDefs);\n      return;\n    }\n    this.beans.colModel.setColumnDefs(columnDefs, _convertColumnEventSourceType(event.source));\n  }\n};\n\n// packages/ag-grid-community/src/valueService/cellApi.ts\nfunction expireValueCache(beans) {\n  beans.valueCache?.expire();\n}\nfunction getCellValue(beans, params) {\n  const {\n    colKey,\n    rowNode,\n    useFormatter\n  } = params;\n  const column = beans.colModel.getColDefCol(colKey) ?? beans.colModel.getCol(colKey);\n  if (_missing(column)) {\n    return null;\n  }\n  const result = beans.valueSvc.getValueForDisplay(column, rowNode, useFormatter);\n  if (useFormatter) {\n    return result.valueFormatted ?? _toString(result.value);\n  }\n  return result.value;\n}\n\n// packages/ag-grid-community/src/valueService/changeDetectionService.ts\nvar SOURCE_PASTE = \"paste\";\nvar ChangeDetectionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"changeDetectionSvc\";\n    this.clientSideRowModel = null;\n  }\n  postConstruct() {\n    const {\n      gos,\n      rowModel\n    } = this.beans;\n    if (_isClientSideRowModel(gos, rowModel)) {\n      this.clientSideRowModel = rowModel;\n    }\n    this.addManagedEventListeners({\n      cellValueChanged: this.onCellValueChanged.bind(this)\n    });\n  }\n  onCellValueChanged(event) {\n    const {\n      gos,\n      rowRenderer\n    } = this.beans;\n    if (event.source === SOURCE_PASTE || gos.get(\"suppressChangeDetection\")) {\n      return;\n    }\n    const rowNode = event.node;\n    const nodesToRefresh = [rowNode];\n    const clientSideRowModel = this.clientSideRowModel;\n    const rootNode = clientSideRowModel?.rootNode;\n    if (rootNode && !rowNode.isRowPinned()) {\n      const onlyChangedColumns = gos.get(\"aggregateOnlyChangedColumns\");\n      const changedPath = new ChangedPath(onlyChangedColumns, rootNode);\n      changedPath.addParentNode(rowNode.parent, [event.column]);\n      clientSideRowModel.doAggregate(changedPath);\n      changedPath.forEachChangedNodeDepthFirst(rowNode2 => {\n        nodesToRefresh.push(rowNode2);\n        if (rowNode2.sibling) {\n          nodesToRefresh.push(rowNode2.sibling);\n        }\n      });\n    }\n    rowRenderer.refreshCells({\n      rowNodes: nodesToRefresh\n    });\n  }\n};\n\n// packages/ag-grid-community/src/valueService/expressionService.ts\nvar ExpressionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"expressionSvc\";\n    this.cache = {};\n  }\n  evaluate(expression, params) {\n    if (typeof expression === \"string\") {\n      return this.evaluateExpression(expression, params);\n    } else {\n      _error(15, {\n        expression\n      });\n    }\n  }\n  evaluateExpression(expression, params) {\n    try {\n      const javaScriptFunction = this.createExpressionFunction(expression);\n      const result = javaScriptFunction(params.value, params.context, params.oldValue, params.newValue, params.value, params.node, params.data, params.colDef, params.rowIndex, params.api, params.getValue, params.column, params.columnGroup);\n      return result;\n    } catch (e) {\n      _error(16, {\n        expression,\n        params,\n        e\n      });\n      return null;\n    }\n  }\n  createExpressionFunction(expression) {\n    const expressionToFunctionCache = this.cache;\n    if (expressionToFunctionCache[expression]) {\n      return expressionToFunctionCache[expression];\n    }\n    const functionBody = this.createFunctionBody(expression);\n    const theFunction = new Function(\"x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, getValue, column, columnGroup\", functionBody);\n    expressionToFunctionCache[expression] = theFunction;\n    return theFunction;\n  }\n  createFunctionBody(expression) {\n    if (expression.indexOf(\"return\") >= 0) {\n      return expression;\n    } else {\n      return \"return \" + expression + \";\";\n    }\n  }\n};\n\n// packages/ag-grid-community/src/valueService/valueCache.ts\nvar ValueCache = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"valueCache\";\n    this.cacheVersion = 0;\n  }\n  postConstruct() {\n    const gos = this.gos;\n    this.active = gos.get(\"valueCache\");\n    this.neverExpires = gos.get(\"valueCacheNeverExpires\");\n  }\n  onDataChanged() {\n    if (this.neverExpires) {\n      return;\n    }\n    this.expire();\n  }\n  expire() {\n    this.cacheVersion++;\n  }\n  setValue(rowNode, colId, value) {\n    if (this.active) {\n      const cacheVersion = this.cacheVersion;\n      if (rowNode.__cacheVersion !== cacheVersion) {\n        rowNode.__cacheVersion = cacheVersion;\n        rowNode.__cacheData = {};\n      }\n      rowNode.__cacheData[colId] = value;\n    }\n  }\n  getValue(rowNode, colId) {\n    if (!this.active || rowNode.__cacheVersion !== this.cacheVersion) {\n      return void 0;\n    }\n    return rowNode.__cacheData[colId];\n  }\n};\n\n// packages/ag-grid-community/src/valueService/valueModule.ts\nvar ValueCacheModule = {\n  moduleName: \"ValueCache\",\n  version: VERSION,\n  beans: [ValueCache],\n  apiFunctions: {\n    expireValueCache\n  }\n};\nvar ExpressionModule = {\n  moduleName: \"Expression\",\n  version: VERSION,\n  beans: [ExpressionService]\n};\nvar ChangeDetectionModule = {\n  moduleName: \"ChangeDetection\",\n  version: VERSION,\n  beans: [ChangeDetectionService]\n};\nvar CellApiModule = {\n  moduleName: \"CellApi\",\n  version: VERSION,\n  apiFunctions: {\n    getCellValue\n  }\n};\n\n// packages/ag-grid-community/src/valueService/valueService.ts\nvar EDITING_CHECK_SIBLINGS = {\n  checkSiblings: true\n};\nvar ValueService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"valueSvc\";\n    this.hasEdit = false;\n    this.initialised = false;\n    this.isSsrm = false;\n  }\n  wireBeans(beans) {\n    this.expressionSvc = beans.expressionSvc;\n    this.colModel = beans.colModel;\n    this.valueCache = beans.valueCache;\n    this.dataTypeSvc = beans.dataTypeSvc;\n    this.editSvc = beans.editSvc;\n    this.hasEdit = !!beans.editSvc;\n  }\n  postConstruct() {\n    if (!this.initialised) {\n      this.init();\n    }\n  }\n  init() {\n    this.executeValueGetter = this.valueCache ? this.executeValueGetterWithValueCache.bind(this) : this.executeValueGetterWithoutValueCache.bind(this);\n    this.isSsrm = _isServerSideRowModel(this.gos);\n    this.cellExpressions = this.gos.get(\"enableCellExpressions\");\n    this.isTreeData = this.gos.get(\"treeData\");\n    this.initialised = true;\n    const listener = event => this.callColumnCellValueChangedHandler(event);\n    this.eventSvc.addEventListener(\"cellValueChanged\", listener, true);\n    this.addDestroyFunc(() => this.eventSvc.removeEventListener(\"cellValueChanged\", listener, true));\n    this.addManagedPropertyListener(\"treeData\", propChange => this.isTreeData = propChange.currentValue);\n  }\n  /**\n   * Use this function to get a displayable cell value.\n   * The values from this function are not used for sorting, filtering, or aggregation purposes.\n   * Handles: groupHideOpenParents, showOpenedGroup and groupSuppressBlankHeader behaviours\n   */\n  getValueForDisplay(column, node, includeValueFormatted = false, exporting = false, source = \"ui\") {\n    const {\n      showRowGroupColValueSvc\n    } = this.beans;\n    const isFullWidthGroup = !column && node.group;\n    const isGroupCol = column?.colDef.showRowGroup;\n    const processTreeDataAsGroup = !this.isTreeData || node.footer;\n    if (showRowGroupColValueSvc && processTreeDataAsGroup && (isFullWidthGroup || isGroupCol)) {\n      const groupValue = showRowGroupColValueSvc.getGroupValue(node, column);\n      if (groupValue == null) {\n        return {\n          value: null,\n          valueFormatted: null\n        };\n      }\n      if (!includeValueFormatted) {\n        return {\n          value: groupValue.value,\n          valueFormatted: null\n        };\n      }\n      const valueFormatted = showRowGroupColValueSvc.formatAndPrefixGroupColValue(groupValue, column, exporting);\n      return {\n        value: groupValue.value,\n        valueFormatted\n      };\n    }\n    if (!column) {\n      return {\n        value: node.key,\n        valueFormatted: null\n      };\n    }\n    const isPivotLeaf = node.leafGroup && this.colModel.isPivotMode();\n    const isOpenedGroup = node.group && node.expanded && !node.footer && !isPivotLeaf;\n    const groupShowsAggData = this.gos.get(\"groupSuppressBlankHeader\") || !node.sibling;\n    const ignoreAggData = isOpenedGroup && !groupShowsAggData;\n    const value = this.getValue(column, node, ignoreAggData, source);\n    const format = includeValueFormatted && !(exporting && column.colDef.useValueFormatterForExport === false);\n    return {\n      value,\n      valueFormatted: format ? this.formatValue(column, node, value) : null\n    };\n  }\n  getValue(column, rowNode, ignoreAggData = false, source = \"ui\") {\n    if (!this.initialised) {\n      this.init();\n    }\n    if (!rowNode) {\n      return;\n    }\n    const colDef = column.getColDef();\n    const field = colDef.field;\n    const colId = column.getColId();\n    let data = rowNode.data;\n    if (this.hasEdit && source === \"ui\") {\n      const editSvc = this.editSvc;\n      if (editSvc.isRowEditing(rowNode, EDITING_CHECK_SIBLINGS)) {\n        data = editSvc.getRowDataValue(rowNode, EDITING_CHECK_SIBLINGS);\n      }\n      if (editSvc.isEditing()) {\n        const newValue = editSvc.getCellDataValue({\n          rowNode,\n          column\n        }, true);\n        if (newValue !== void 0) {\n          return newValue;\n        }\n      }\n    }\n    let result;\n    const rowGroupColId = colDef.showRowGroup;\n    if (typeof rowGroupColId === \"string\") {\n      const colRowGroupIndex = this.beans.rowGroupColsSvc?.getColumnIndex(rowGroupColId) ?? -1;\n      if (colRowGroupIndex > rowNode.level) {\n        return null;\n      }\n    }\n    const allowUserValuesForCell = typeof rowGroupColId !== \"string\" || !rowNode.group;\n    const groupDataExists = rowNode.groupData && colId in rowNode.groupData;\n    const aggDataExists = !ignoreAggData && rowNode.aggData && rowNode.aggData[colId] !== void 0;\n    const ignoreSsrmAggData = this.isSsrm && ignoreAggData && !!colDef.aggFunc;\n    const ssrmFooterGroupCol = this.isSsrm && rowNode.footer && rowNode.field && (colDef.showRowGroup === true || colDef.showRowGroup === rowNode.field);\n    if (this.isTreeData && aggDataExists) {\n      result = rowNode.aggData[colId];\n    } else if (this.isTreeData && colDef.valueGetter) {\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n    } else if (this.isTreeData && field && data) {\n      result = _getValueUsingField(data, field, column.isFieldContainsDots());\n    } else if (groupDataExists) {\n      result = rowNode.groupData[colId];\n    } else if (aggDataExists) {\n      result = rowNode.aggData[colId];\n    } else if (colDef.valueGetter && !ignoreSsrmAggData) {\n      if (!allowUserValuesForCell) {\n        return result;\n      }\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n    } else if (ssrmFooterGroupCol) {\n      result = _getValueUsingField(data, rowNode.field, column.isFieldContainsDots());\n    } else if (field && data && !ignoreSsrmAggData) {\n      if (!allowUserValuesForCell) {\n        return result;\n      }\n      result = _getValueUsingField(data, field, column.isFieldContainsDots());\n    }\n    if (this.cellExpressions && typeof result === \"string\" && result.indexOf(\"=\") === 0) {\n      const cellValueGetter = result.substring(1);\n      result = this.executeValueGetter(cellValueGetter, data, column, rowNode);\n    }\n    return result;\n  }\n  parseValue(column, rowNode, newValue, oldValue) {\n    const colDef = column.getColDef();\n    const valueParser = colDef.valueParser;\n    if (_exists(valueParser)) {\n      const params = _addGridCommonParams(this.gos, {\n        node: rowNode,\n        data: rowNode?.data,\n        oldValue,\n        newValue,\n        colDef,\n        column\n      });\n      if (typeof valueParser === \"function\") {\n        return valueParser(params);\n      }\n      return this.expressionSvc?.evaluate(valueParser, params);\n    }\n    return newValue;\n  }\n  getDeleteValue(column, rowNode) {\n    if (_exists(column.getColDef().valueParser)) {\n      return this.parseValue(column, rowNode, \"\", this.getValueForDisplay(column, rowNode).value) ?? null;\n    }\n    return null;\n  }\n  formatValue(column, node, value, suppliedFormatter, useFormatterFromColumn = true) {\n    const {\n      expressionSvc\n    } = this.beans;\n    let result = null;\n    let formatter;\n    const colDef = column.getColDef();\n    if (suppliedFormatter) {\n      formatter = suppliedFormatter;\n    } else if (useFormatterFromColumn) {\n      formatter = colDef.valueFormatter;\n    }\n    if (formatter) {\n      let data = node ? node.data : null;\n      if (node) {\n        const position = {\n          rowNode: node\n        };\n        if (this.hasEdit) {\n          const editSvc = this.editSvc;\n          if (editSvc.isEditing(position, EDITING_CHECK_SIBLINGS)) {\n            data = editSvc.getRowDataValue(node, EDITING_CHECK_SIBLINGS);\n          }\n        }\n      }\n      const params = _addGridCommonParams(this.gos, {\n        value,\n        node,\n        data,\n        colDef,\n        column\n      });\n      if (typeof formatter === \"function\") {\n        result = formatter(params);\n      } else {\n        result = expressionSvc ? expressionSvc.evaluate(formatter, params) : null;\n      }\n    } else if (colDef.refData) {\n      return colDef.refData[value] || \"\";\n    }\n    if (result == null && Array.isArray(value)) {\n      result = value.join(\", \");\n    }\n    return result;\n  }\n  /**\n   * Sets the value of a GridCell\n   * @param rowNode The `RowNode` to be updated\n   * @param colKey The `Column` to be updated\n   * @param newValue The new value to be set\n   * @param eventSource The event source\n   * @returns `True` if the value has been updated, otherwise`False`.\n   */\n  setValue(rowNode, colKey, newValue, eventSource) {\n    const column = this.colModel.getColDefCol(colKey);\n    if (!rowNode || !column) {\n      return false;\n    }\n    if (_missing(rowNode.data)) {\n      rowNode.data = {};\n    }\n    const {\n      field,\n      valueSetter\n    } = column.getColDef();\n    if (_missing(field) && _missing(valueSetter)) {\n      _warn(17);\n      return false;\n    }\n    if (this.dataTypeSvc && !this.dataTypeSvc.checkType(column, newValue)) {\n      _warn(135);\n      return false;\n    }\n    const params = _addGridCommonParams(this.gos, {\n      node: rowNode,\n      data: rowNode.data,\n      oldValue: this.getValue(column, rowNode, void 0, eventSource),\n      newValue,\n      colDef: column.getColDef(),\n      column\n    });\n    params.newValue = newValue;\n    let valueWasDifferent;\n    if (_exists(valueSetter)) {\n      if (typeof valueSetter === \"function\") {\n        valueWasDifferent = valueSetter(params);\n      } else {\n        valueWasDifferent = this.expressionSvc?.evaluate(valueSetter, params);\n      }\n    } else {\n      valueWasDifferent = this.setValueUsingField(rowNode.data, field, newValue, column.isFieldContainsDots());\n    }\n    if (valueWasDifferent === void 0) {\n      valueWasDifferent = true;\n    }\n    if (!valueWasDifferent) {\n      return false;\n    }\n    rowNode.resetQuickFilterAggregateText();\n    this.valueCache?.onDataChanged();\n    const savedValue = this.getValue(column, rowNode);\n    this.dispatchCellValueChangedEvent(rowNode, params, savedValue, eventSource);\n    if (rowNode.pinnedSibling) {\n      this.dispatchCellValueChangedEvent(rowNode.pinnedSibling, params, savedValue, eventSource);\n    }\n    return true;\n  }\n  dispatchCellValueChangedEvent(rowNode, params, value, source) {\n    this.eventSvc.dispatchEvent({\n      type: \"cellValueChanged\",\n      event: null,\n      rowIndex: rowNode.rowIndex,\n      rowPinned: rowNode.rowPinned,\n      column: params.column,\n      colDef: params.colDef,\n      data: rowNode.data,\n      node: rowNode,\n      oldValue: params.oldValue,\n      newValue: value,\n      value,\n      source\n    });\n  }\n  callColumnCellValueChangedHandler(event) {\n    const onCellValueChanged = event.colDef.onCellValueChanged;\n    if (typeof onCellValueChanged === \"function\") {\n      this.beans.frameworkOverrides.wrapOutgoing(() => {\n        onCellValueChanged({\n          node: event.node,\n          data: event.data,\n          oldValue: event.oldValue,\n          newValue: event.newValue,\n          colDef: event.colDef,\n          column: event.column,\n          api: event.api,\n          context: event.context\n        });\n      });\n    }\n  }\n  setValueUsingField(data, field, newValue, isFieldContainsDots) {\n    if (!field) {\n      return false;\n    }\n    let valuesAreSame = false;\n    if (!isFieldContainsDots) {\n      valuesAreSame = data[field] === newValue;\n      if (!valuesAreSame) {\n        data[field] = newValue;\n      }\n    } else {\n      const fieldPieces = field.split(\".\");\n      let currentObject = data;\n      while (fieldPieces.length > 0 && currentObject) {\n        const fieldPiece = fieldPieces.shift();\n        if (fieldPieces.length === 0) {\n          valuesAreSame = currentObject[fieldPiece] === newValue;\n          if (!valuesAreSame) {\n            currentObject[fieldPiece] = newValue;\n          }\n        } else {\n          currentObject = currentObject[fieldPiece];\n        }\n      }\n    }\n    return !valuesAreSame;\n  }\n  executeValueGetterWithValueCache(valueGetter, data, column, rowNode) {\n    const colId = column.getColId();\n    const valueFromCache = this.valueCache.getValue(rowNode, colId);\n    if (valueFromCache !== void 0) {\n      return valueFromCache;\n    }\n    const result = this.executeValueGetterWithoutValueCache(valueGetter, data, column, rowNode);\n    this.valueCache.setValue(rowNode, colId, result);\n    return result;\n  }\n  executeValueGetterWithoutValueCache(valueGetter, data, column, rowNode) {\n    const params = _addGridCommonParams(this.gos, {\n      data,\n      node: rowNode,\n      column,\n      colDef: column.getColDef(),\n      getValue: this.getValueCallback.bind(this, rowNode)\n    });\n    let result;\n    if (typeof valueGetter === \"function\") {\n      result = valueGetter(params);\n    } else {\n      result = this.expressionSvc?.evaluate(valueGetter, params);\n    }\n    return result;\n  }\n  getValueCallback(node, field) {\n    const otherColumn = this.colModel.getColDefCol(field);\n    if (otherColumn) {\n      return this.getValue(otherColumn, node);\n    }\n    return null;\n  }\n  // used by row grouping and pivot, to get key for a row. col can be a pivot col or a row grouping col\n  getKeyForNode(col, rowNode) {\n    const value = this.getValue(col, rowNode);\n    const keyCreator = col.getColDef().keyCreator;\n    let result = value;\n    if (keyCreator) {\n      const keyParams = _addGridCommonParams(this.gos, {\n        value,\n        colDef: col.getColDef(),\n        column: col,\n        node: rowNode,\n        data: rowNode.data\n      });\n      result = keyCreator(keyParams);\n    }\n    if (typeof result === \"string\" || result == null) {\n      return result;\n    }\n    result = String(result);\n    if (result === \"[object Object]\") {\n      _warn(121);\n    }\n    return result;\n  }\n};\n\n// packages/ag-grid-community/src/gridCoreModule.ts\nvar CommunityCoreModule = {\n  moduleName: \"CommunityCore\",\n  version: VERSION,\n  beans: [GridDestroyService, ApiFunctionService, Registry, UserComponentFactory, RowContainerHeightService, VisibleColsService, EventService, GridOptionsService, ColumnModel, PageBoundsService, PageBoundsListener, RowRenderer, ValueService, FocusService, Environment, ScrollVisibleService, CtrlsService, SyncService, ColumnNameService, ColumnViewportService],\n  icons: {\n    // icon on select dropdowns (select cell editor, charts tool panels)\n    selectOpen: \"small-down\",\n    /** @deprecated v33 */\n    smallDown: \"small-down\",\n    /** @deprecated v33 */\n    colorPicker: \"color-picker\",\n    /** @deprecated v33 */\n    smallUp: \"small-up\",\n    /** @deprecated v33 */\n    checkboxChecked: \"small-up\",\n    /** @deprecated v33 */\n    checkboxIndeterminate: \"checkbox-indeterminate\",\n    /** @deprecated v33 */\n    checkboxUnchecked: \"checkbox-unchecked\",\n    /** @deprecated v33 */\n    radioButtonOn: \"radio-button-on\",\n    /** @deprecated v33 */\n    radioButtonOff: \"radio-button-off\",\n    /** @deprecated v33 */\n    smallLeft: \"small-left\",\n    /** @deprecated v33 */\n    smallRight: \"small-right\"\n  },\n  apiFunctions: {\n    getGridId,\n    destroy,\n    isDestroyed,\n    getGridOption,\n    setGridOption,\n    updateGridOptions,\n    isModuleRegistered\n  },\n  dependsOn: [DataTypeModule, ColumnMoveModule, ColumnResizeModule, SortModule, ColumnHeaderCompModule, ColumnGroupModule, ColumnGroupHeaderCompModule, OverlayModule, ChangeDetectionModule, AnimationFrameModule, KeyboardNavigationModule, PinnedColumnModule, AriaModule, TouchModule, CellRendererFunctionModule, ColumnFlexModule, ExpressionModule, SkeletonCellRendererModule]\n};\n\n// packages/ag-grid-community/src/utils/fuzzyMatch.ts\nfunction _fuzzySuggestions(params) {\n  const {\n    inputValue,\n    allSuggestions,\n    hideIrrelevant,\n    filterByPercentageOfBestMatch\n  } = params;\n  let thisSuggestions = (allSuggestions ?? []).map((text, idx) => ({\n    value: text,\n    relevance: _getLevenshteinSimilarityDistance(inputValue, text),\n    idx\n  }));\n  thisSuggestions.sort((a, b) => a.relevance - b.relevance);\n  if (hideIrrelevant) {\n    thisSuggestions = thisSuggestions.filter(suggestion => suggestion.relevance < Math.max(suggestion.value.length, inputValue.length));\n  }\n  if (thisSuggestions.length > 0 && filterByPercentageOfBestMatch && filterByPercentageOfBestMatch > 0) {\n    const bestMatch = thisSuggestions[0].relevance;\n    const limit = bestMatch * filterByPercentageOfBestMatch;\n    thisSuggestions = thisSuggestions.filter(suggestion => limit - suggestion.relevance < 0);\n  }\n  const values = [];\n  const indices = [];\n  for (const suggestion of thisSuggestions) {\n    values.push(suggestion.value);\n    indices.push(suggestion.idx);\n  }\n  return {\n    values,\n    indices\n  };\n}\nfunction _getLevenshteinSimilarityDistance(inputText, suggestion) {\n  if (inputText.length < suggestion.length) {\n    [inputText, suggestion] = [suggestion, inputText];\n  }\n  let previousRow = [];\n  let currentRow = [];\n  const sourceLength = inputText.length;\n  const targetLength = suggestion.length;\n  for (let j = 0; j <= targetLength; j++) {\n    previousRow[j] = j;\n  }\n  let secondaryScore = 0;\n  for (let i = 1; i <= sourceLength; i++) {\n    currentRow[0] = i;\n    for (let j = 1; j <= targetLength; j++) {\n      const sourceChar = inputText[i - 1];\n      const targetChar = suggestion[j - 1];\n      if (sourceChar.toLocaleLowerCase() === targetChar.toLocaleLowerCase()) {\n        ++secondaryScore;\n        if (sourceChar === targetChar) {\n          ++secondaryScore;\n        }\n        if (i > 1 && j > 1) {\n          if (inputText[i - 2].toLocaleLowerCase() === suggestion[j - 2].toLocaleLowerCase()) {\n            ++secondaryScore;\n            if (inputText[i - 2] === suggestion[j - 2]) {\n              ++secondaryScore;\n            }\n          }\n        }\n        if (i < sourceLength / 2 - 10) ++secondaryScore;\n        currentRow[j] = previousRow[j - 1];\n      } else {\n        const insertCost = currentRow[j - 1];\n        const deleteCost = previousRow[j];\n        const replaceCost = previousRow[j - 1];\n        currentRow[j] = 1 + Math.min(insertCost, deleteCost, replaceCost);\n      }\n    }\n    [previousRow, currentRow] = [currentRow, previousRow];\n  }\n  return previousRow[targetLength] / (secondaryScore + 1);\n}\n\n// packages/ag-grid-community/src/validation/enterpriseModuleNames.ts\nvar ENTERPRISE_MODULE_NAMES = {\n  AdvancedFilter: 1,\n  AllEnterprise: 1,\n  BatchEdit: 1,\n  CellSelection: 1,\n  Clipboard: 1,\n  ColumnMenu: 1,\n  ColumnsToolPanel: 1,\n  ContextMenu: 1,\n  ExcelExport: 1,\n  FiltersToolPanel: 1,\n  Find: 1,\n  GridCharts: 1,\n  IntegratedCharts: 1,\n  GroupFilter: 1,\n  MasterDetail: 1,\n  Menu: 1,\n  MultiFilter: 1,\n  NewFiltersToolPanel: 1,\n  Pivot: 1,\n  RangeSelection: 1,\n  RichSelect: 1,\n  RowNumbers: 1,\n  RowGrouping: 1,\n  RowGroupingPanel: 1,\n  ServerSideRowModelApi: 1,\n  ServerSideRowModel: 1,\n  SetFilter: 1,\n  SideBar: 1,\n  Sparklines: 1,\n  StatusBar: 1,\n  TreeData: 1,\n  ViewportRowModel: 1\n};\n\n// packages/ag-grid-community/src/validation/resolvableModuleNames.ts\nvar ALL_COLUMN_FILTERS = [\"TextFilter\", \"NumberFilter\", \"DateFilter\", \"SetFilter\", \"MultiFilter\", \"GroupFilter\", \"CustomFilter\"];\nvar RESOLVABLE_MODULE_NAMES = {\n  EditCore: [\"TextEditor\", \"NumberEditor\", \"DateEditor\", \"CheckboxEditor\", \"LargeTextEditor\", \"SelectEditor\", \"RichSelect\", \"CustomEditor\"],\n  CheckboxCellRenderer: [\"AllCommunity\"],\n  ClientSideRowModelHierarchy: [\"RowGrouping\", \"Pivot\", \"TreeData\"],\n  ColumnFilter: ALL_COLUMN_FILTERS,\n  ColumnGroupHeaderComp: [\"AllCommunity\"],\n  ColumnGroup: [\"AllCommunity\"],\n  ColumnHeaderComp: [\"AllCommunity\"],\n  ColumnMove: [\"AllCommunity\"],\n  ColumnResize: [\"AllCommunity\"],\n  CommunityCore: [\"AllCommunity\"],\n  CsrmSsrmSharedApi: [\"ClientSideRowModelApi\", \"ServerSideRowModelApi\"],\n  EnterpriseCore: [\"AllEnterprise\"],\n  FilterCore: [...ALL_COLUMN_FILTERS, \"QuickFilter\", \"ExternalFilter\", \"AdvancedFilter\"],\n  GroupCellRenderer: [\"RowGrouping\", \"Pivot\", \"TreeData\", \"MasterDetail\", \"ServerSideRowModel\"],\n  KeyboardNavigation: [\"AllCommunity\"],\n  LoadingCellRenderer: [\"ServerSideRowModel\"],\n  MenuCore: [\"ColumnMenu\", \"ContextMenu\"],\n  MenuItem: [\"ColumnMenu\", \"ContextMenu\", \"MultiFilter\", \"IntegratedCharts\", \"ColumnsToolPanel\"],\n  Overlay: [\"AllCommunity\"],\n  PinnedColumn: [\"AllCommunity\"],\n  SharedAggregation: [\"RowGrouping\", \"Pivot\", \"TreeData\", \"ServerSideRowModel\"],\n  SharedDragAndDrop: [\"AllCommunity\"],\n  SharedMasterDetail: [\"MasterDetail\", \"ServerSideRowModel\"],\n  SharedMenu: [...ALL_COLUMN_FILTERS, \"ColumnMenu\", \"ContextMenu\"],\n  SharedPivot: [\"Pivot\", \"ServerSideRowModel\"],\n  SharedRowGrouping: [\"RowGrouping\", \"ServerSideRowModel\"],\n  SharedRowSelection: [\"RowSelection\", \"ServerSideRowModel\"],\n  SkeletonCellRenderer: [\"ServerSideRowModel\"],\n  Sort: [\"AllCommunity\"],\n  SsrmInfiniteSharedApi: [\"InfiniteRowModel\", \"ServerSideRowModelApi\"],\n  SharedTreeData: [\"TreeData\", \"ServerSideRowModel\"]\n};\nvar MODULES_FOR_ROW_MODELS = {\n  InfiniteRowModel: \"infinite\",\n  ClientSideRowModelApi: \"clientSide\",\n  ClientSideRowModel: \"clientSide\",\n  ServerSideRowModelApi: \"serverSide\",\n  ServerSideRowModel: \"serverSide\",\n  ViewportRowModel: \"viewport\"\n};\nfunction resolveModuleNames(moduleName, rowModelType) {\n  const resolvedModuleNames = [];\n  (Array.isArray(moduleName) ? moduleName : [moduleName]).forEach(modName => {\n    const resolved = RESOLVABLE_MODULE_NAMES[modName];\n    if (resolved) {\n      resolved.forEach(resolvedModName => {\n        const rowModelForModule = MODULES_FOR_ROW_MODELS[resolvedModName];\n        if (!rowModelForModule || rowModelForModule === rowModelType) {\n          resolvedModuleNames.push(resolvedModName);\n        }\n      });\n    } else {\n      resolvedModuleNames.push(modName);\n    }\n  });\n  return resolvedModuleNames;\n}\n\n// packages/ag-grid-community/src/validation/errorMessages/errorText.ts\nvar NoModulesRegisteredError = () => `No AG Grid modules are registered! It is recommended to start with all Community features via the AllCommunityModule:\n                    \n    import { ModuleRegistry, AllCommunityModule } from 'ag-grid-community';\n    \n    ModuleRegistry.registerModules([ AllCommunityModule ]);\n    `;\nvar moduleImportMsg = moduleNames => {\n  const imports = moduleNames.map(moduleName => `import { ${convertToUserModuleName(moduleName)} } from '${ENTERPRISE_MODULE_NAMES[moduleName] ? \"ag-grid-enterprise\" : \"ag-grid-community\"}';`);\n  const includeCharts = moduleNames.some(m => m === \"IntegratedCharts\" || m === \"Sparklines\");\n  if (includeCharts) {\n    const chartImport = `import { AgChartsEnterpriseModule } from 'ag-charts-enterprise';`;\n    imports.push(chartImport);\n  }\n  return `import { ModuleRegistry } from 'ag-grid-community'; \n${imports.join(\" \\n\")} \n\nModuleRegistry.registerModules([ ${moduleNames.map(m => convertToUserModuleName(m, true)).join(\", \")} ]); \n\nFor more info see: ${baseDocLink}/modules/`;\n};\nfunction convertToUserModuleName(moduleName, inModuleRegistration = false) {\n  if (inModuleRegistration && (moduleName === \"IntegratedCharts\" || moduleName === \"Sparklines\")) {\n    return `${moduleName}Module.with(AgChartsEnterpriseModule)`;\n  }\n  return `${moduleName}Module`;\n}\nfunction umdMissingModule(reasonOrId, moduleNames) {\n  const chartModules = moduleNames.filter(m => m === \"IntegratedCharts\" || m === \"Sparklines\");\n  let message = \"\";\n  const agChartsDynamic = globalThis?.agCharts;\n  if (!agChartsDynamic && chartModules.length > 0) {\n    message = `Unable to use ${reasonOrId} as either the ag-charts-community or ag-charts-enterprise script needs to be included alongside ag-grid-enterprise.\n`;\n  } else if (moduleNames.some(m => ENTERPRISE_MODULE_NAMES[m])) {\n    message = message + `Unable to use ${reasonOrId} as that requires the ag-grid-enterprise script to be included.\n`;\n  }\n  return message;\n}\nfunction missingRowModelTypeError({\n  moduleName,\n  rowModelType\n}) {\n  return `To use the ${moduleName}Module you must set the gridOption \"rowModelType='${rowModelType}'\"`;\n}\nvar missingModule = ({\n  reasonOrId,\n  moduleName,\n  gridScoped,\n  gridId,\n  rowModelType,\n  additionalText,\n  isUmd: isUmd2\n}) => {\n  const resolvedModuleNames = resolveModuleNames(moduleName, rowModelType);\n  const reason = typeof reasonOrId === \"string\" ? reasonOrId : MISSING_MODULE_REASONS[reasonOrId];\n  if (isUmd2) {\n    return umdMissingModule(reason, resolvedModuleNames);\n  }\n  const chartModules = resolvedModuleNames.filter(m => m === \"IntegratedCharts\" || m === \"Sparklines\");\n  const chartImportRequired = chartModules.length > 0 ? `${chartModules.map(m => convertToUserModuleName(m)).join()} must be initialised with an AG Charts module. One of 'AgChartsCommunityModule' / 'AgChartsEnterpriseModule'.` : \"\";\n  const explanation = `Unable to use ${reason} as ${resolvedModuleNames.length > 1 ? \"one of \" + resolvedModuleNames.map(m => convertToUserModuleName(m)).join(\", \") : convertToUserModuleName(resolvedModuleNames[0])} is not registered${gridScoped ? \" for gridId: \" + gridId : \"\"}. ${chartImportRequired} Check if you have registered the module:\n`;\n  return `${explanation}\n${moduleImportMsg(resolvedModuleNames)}` + (additionalText ? ` \n\n${additionalText}` : \"\");\n};\nvar missingChartsWithModule = gridModule => {\n  return `${gridModule} must be initialised with an AG Charts module. One of 'AgChartsCommunityModule' / 'AgChartsEnterpriseModule'.\n\nimport { AgChartsEnterpriseModule } from 'ag-charts-enterprise';\nimport { ModuleRegistry } from 'ag-grid-community';\nimport { ${gridModule} } from 'ag-grid-enterprise';\n    \nModuleRegistry.registerModules([${gridModule}.with(AgChartsEnterpriseModule)]);\n    `;\n};\nvar clipboardApiError = method => `AG Grid: Unable to use the Clipboard API (navigator.clipboard.${method}()). The reason why it could not be used has been logged in the previous line. For this reason the grid has defaulted to using a workaround which doesn't perform as well. Either fix why Clipboard API is blocked, OR stop this message from appearing by setting grid property suppressClipboardApi=true (which will default the grid to using the workaround rather than the API.`;\nvar AG_GRID_ERRORS = {\n  1: () => \"`rowData` must be an array\",\n  2: ({\n    nodeId\n  }) => `Duplicate node id '${nodeId}' detected from getRowId callback, this could cause issues in your grid.`,\n  3: () => \"Calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.\",\n  4: ({\n    id\n  }) => `Could not find row id=${id}, data item was not found for this id`,\n  5: ({\n    data\n  }) => [`Could not find data item as object was not found.`, data, \" Consider using getRowId to help the Grid find matching row data\"],\n  6: () => `'groupHideOpenParents' only works when specifying specific columns for 'colDef.showRowGroup'`,\n  7: () => \"Pivoting is not supported with aligned grids as it may produce different columns in each grid.\",\n  8: ({\n    key\n  }) => `Unknown key for navigation ${key}`,\n  9: ({\n    variable\n  }) => `No value for ${variable?.cssName}. This usually means that the grid has been initialised before styles have been loaded. The default value of ${variable?.defaultValue} will be used and updated when styles load.`,\n  10: ({\n    eventType\n  }) => `As of v33, the '${eventType}' event is deprecated. Use the global 'modelUpdated' event to determine when row children have changed.`,\n  11: () => \"No gridOptions provided to createGrid\",\n  12: ({\n    colKey\n  }) => [\"column \", colKey, \" not found\"],\n  13: () => \"Could not find rowIndex, this means tasks are being executed on a rowNode that has been removed from the grid.\",\n  14: ({\n    groupPrefix\n  }) => `Row IDs cannot start with ${groupPrefix}, this is a reserved prefix for AG Grid's row grouping feature.`,\n  15: ({\n    expression\n  }) => [\"value should be either a string or a function\", expression],\n  16: ({\n    expression,\n    params,\n    e\n  }) => [\"Processing of the expression failed\", \"Expression = \", expression, \"Params = \", params, \"Exception = \", e],\n  17: () => \"you need either field or valueSetter set on colDef for editing to work\",\n  18: () => `alignedGrids contains an undefined option.`,\n  19: () => `alignedGrids - No api found on the linked grid.`,\n  20: () => `You may want to configure via a callback to avoid setup race conditions:\n                     \"alignedGrids: () => [linkedGrid]\"`,\n  21: () => \"pivoting is not supported with aligned grids. You can only use one of these features at a time in a grid.\",\n  22: ({\n    key\n  }) => `${key} is an initial property and cannot be updated.`,\n  23: () => \"The return of `getRowHeight` cannot be zero. If the intention is to hide rows, use a filter instead.\",\n  24: () => \"row height must be a number if not using standard row model\",\n  25: ({\n    id\n  }) => [`The getRowId callback must return a string. The ID `, id, ` is being cast to a string.`],\n  26: ({\n    fnName,\n    preDestroyLink\n  }) => {\n    return `Grid API function ${fnName}() cannot be called as the grid has been destroyed.\n Either clear local references to the grid api, when it is destroyed, or check gridApi.isDestroyed() to avoid calling methods against a destroyed grid.\n To run logic when the grid is about to be destroyed use the gridPreDestroy event. See: ${preDestroyLink}`;\n  },\n  27: ({\n    fnName,\n    module\n  }) => `API function '${fnName}' not registered to module '${module}'`,\n  28: () => \"setRowCount cannot be used while using row grouping.\",\n  29: () => \"tried to call sizeColumnsToFit() but the grid is coming back with zero width, maybe the grid is not visible yet on the screen?\",\n  30: ({\n    toIndex\n  }) => [\"tried to insert columns in invalid location, toIndex = \", toIndex, \"remember that you should not count the moving columns when calculating the new index\"],\n  31: () => \"infinite loop in resizeColumnSets\",\n  32: () => \"applyColumnState() - the state attribute should be an array, however an array was not found. Please provide an array of items (one for each col you want to change) for state.\",\n  33: () => \"stateItem.aggFunc must be a string. if using your own aggregation functions, register the functions first before using them in get/set state. This is because it is intended for the column state to be stored and retrieved as simple JSON.\",\n  34: ({\n    key\n  }) => `the column type '${key}' is a default column type and cannot be overridden.`,\n  35: () => `Column type definitions 'columnTypes' with a 'type' attribute are not supported because a column type cannot refer to another column type. Only column definitions 'columnDefs' can use the 'type' attribute to refer to a column type.`,\n  36: ({\n    t\n  }) => \"colDef.type '\" + t + \"' does not correspond to defined gridOptions.columnTypes\",\n  37: () => `Changing the column pinning status is not allowed with domLayout='print'`,\n  38: ({\n    iconName\n  }) => `provided icon '${iconName}' needs to be a string or a function`,\n  39: () => \"Applying column order broke a group where columns should be married together. Applying new order has been discarded.\",\n  40: ({\n    e,\n    method\n  }) => `${e}\n${clipboardApiError(method)}`,\n  41: () => \"Browser did not allow document.execCommand('copy'). Ensure 'api.copySelectedRowsToClipboard() is invoked via a user event, i.e. button click, otherwise the browser will prevent it for security reasons.\",\n  42: () => \"Browser does not support document.execCommand('copy') for clipboard operations\",\n  43: ({\n    iconName\n  }) => `As of v33, icon '${iconName}' is deprecated. Use the icon CSS name instead.`,\n  44: () => 'Data type definition hierarchies (via the \"extendsDataType\" property) cannot contain circular references.',\n  45: ({\n    parentCellDataType\n  }) => `The data type definition ${parentCellDataType} does not exist.`,\n  46: () => 'The \"baseDataType\" property of a data type definition must match that of its parent.',\n  47: ({\n    cellDataType\n  }) => `Missing data type definition - \"${cellDataType}\"`,\n  48: ({\n    property\n  }) => `Cell data type is \"object\" but no Value ${property} has been provided. Please either provide an object data type definition with a Value ${property}, or set \"colDef.value${property}\"`,\n  49: ({\n    methodName\n  }) => `Framework component is missing the method ${methodName}()`,\n  50: ({\n    compName\n  }) => `Could not find component ${compName}, did you forget to configure this component?`,\n  51: () => `Export cancelled. Export is not allowed as per your configuration.`,\n  52: () => \"There is no `window` associated with the current `document`\",\n  53: () => `unknown value type during csv conversion`,\n  54: () => \"Could not find document body, it is needed for drag and drop and context menu.\",\n  55: () => \"addRowDropZone - A container target needs to be provided\",\n  56: () => \"addRowDropZone - target already exists in the list of DropZones. Use `removeRowDropZone` before adding it again.\",\n  57: () => \"unable to show popup filter, filter instantiation failed\",\n  58: () => \"no values found for select cellEditor\",\n  59: () => \"cannot select pinned rows\",\n  60: () => \"cannot select node until it has finished loading\",\n  61: () => \"since version v32.2.0, rowNode.isFullWidthCell() has been deprecated. Instead check `rowNode.detail` followed by the user provided `isFullWidthRow` grid option.\",\n  62: ({\n    colId\n  }) => `setFilterModel() - no column found for colId: ${colId}`,\n  63: ({\n    colId\n  }) => `setFilterModel() - unable to fully apply model, filtering disabled for colId: ${colId}`,\n  64: ({\n    colId\n  }) => `setFilterModel() - unable to fully apply model, unable to create filter for colId: ${colId}`,\n  65: () => \"filter missing setModel method, which is needed for setFilterModel\",\n  66: () => \"filter API missing getModel method, which is needed for getFilterModel\",\n  67: () => \"Filter is missing isFilterActive() method\",\n  68: () => \"Column Filter API methods have been disabled as Advanced Filters are enabled.\",\n  69: ({\n    guiFromFilter\n  }) => `getGui method from filter returned ${guiFromFilter}; it should be a DOM element.`,\n  70: ({\n    newFilter\n  }) => `Grid option quickFilterText only supports string inputs, received: ${typeof newFilter}`,\n  71: () => \"debounceMs is ignored when apply button is present\",\n  72: ({\n    keys\n  }) => [`ignoring FilterOptionDef as it doesn't contain one of `, keys],\n  73: () => `invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'`,\n  74: () => \"no filter options for filter\",\n  75: () => \"Unknown button type specified\",\n  76: ({\n    filterModelType\n  }) => ['Unexpected type of filter \"', filterModelType, '\", it looks like the filter was configured with incorrect Filter Options'],\n  77: () => `Filter model is missing 'conditions'`,\n  78: () => 'Filter Model contains more conditions than \"filterParams.maxNumConditions\". Additional conditions have been ignored.',\n  79: () => '\"filterParams.maxNumConditions\" must be greater than or equal to zero.',\n  80: () => '\"filterParams.numAlwaysVisibleConditions\" must be greater than or equal to zero.',\n  81: () => '\"filterParams.numAlwaysVisibleConditions\" cannot be greater than \"filterParams.maxNumConditions\".',\n  82: ({\n    param\n  }) => `DateFilter ${param} is not a number`,\n  83: () => `DateFilter minValidYear should be <= maxValidYear`,\n  84: () => `DateFilter minValidDate should be <= maxValidDate`,\n  85: () => \"DateFilter should not have both minValidDate and minValidYear parameters set at the same time! minValidYear will be ignored.\",\n  86: () => \"DateFilter should not have both maxValidDate and maxValidYear parameters set at the same time! maxValidYear will be ignored.\",\n  87: () => \"DateFilter parameter minValidDate should always be lower than or equal to parameter maxValidDate.\",\n  88: ({\n    index\n  }) => `Invalid row index for ensureIndexVisible: ${index}`,\n  89: () => `A template was provided for Header Group Comp - templates are only supported for Header Comps (not groups)`,\n  90: () => `datasource is missing getRows method`,\n  91: () => \"Filter is missing method doesFilterPass\",\n  92: () => `AnimationFrameService called but animation frames are off`,\n  93: () => \"cannot add multiple ranges when `cellSelection.suppressMultiRanges = true`\",\n  94: ({\n    paginationPageSizeOption,\n    pageSizeSet,\n    pageSizesSet,\n    pageSizeOptions\n  }) => `'paginationPageSize=${paginationPageSizeOption}'${pageSizeSet ? \"\" : \" (default value)\"}, but ${paginationPageSizeOption} is not included in${pageSizesSet ? \"\" : \" the default\"} paginationPageSizeSelector=[${pageSizeOptions?.join(\", \")}].`,\n  95: ({\n    paginationPageSizeOption,\n    paginationPageSizeSelector: paginationPageSizeSelector2\n  }) => `Either set '${paginationPageSizeSelector2}' to an array that includes ${paginationPageSizeOption} or to 'false' to disable the page size selector.`,\n  96: ({\n    id,\n    data\n  }) => [\"Duplicate ID\", id, \"found for pinned row with data\", data, \"When `getRowId` is defined, it must return unique IDs for all pinned rows. Use the `rowPinned` parameter.\"],\n  97: ({\n    colId\n  }) => `cellEditor for column ${colId} is missing getGui() method`,\n  98: () => \"popup cellEditor does not work with fullRowEdit - you cannot use them both - either turn off fullRowEdit, or stop using popup editors.\",\n  99: () => \"Since v32, `api.hideOverlay()` does not hide the loading overlay when `loading=true`. Set `loading=false` instead.\",\n  // 100: ({ rowModelType }: { rowModelType: RowModelType }) =>\n  //     `selectAll only available when rowModelType='clientSide', ie not ${rowModelType}` as const,\n  101: ({\n    propertyName,\n    componentName,\n    agGridDefaults,\n    jsComps\n  }) => {\n    const textOutput = [];\n    const validComponents = [\n    // Don't include the old names / internals in potential suggestions\n    ...Object.keys(agGridDefaults ?? []).filter(k => ![\"agCellEditor\", \"agGroupRowRenderer\", \"agSortIndicator\"].includes(k)), ...Object.keys(jsComps ?? []).filter(k => !!jsComps[k])];\n    const suggestions = _fuzzySuggestions({\n      inputValue: componentName,\n      allSuggestions: validComponents,\n      hideIrrelevant: true,\n      filterByPercentageOfBestMatch: 0.8\n    }).values;\n    textOutput.push(`Could not find '${componentName}' component. It was configured as \"${propertyName}: '${componentName}'\" but it wasn't found in the list of registered components.\n`);\n    if (suggestions.length > 0) {\n      textOutput.push(`         Did you mean: [${suggestions.slice(0, 3)}]?\n`);\n    }\n    textOutput.push(`If using a custom component check it has been registered correctly.`);\n    return textOutput;\n  },\n  102: () => \"selectAll: 'filtered' only works when gridOptions.rowModelType='clientSide'\",\n  103: () => \"Invalid selection state. When using client-side row model, the state must conform to `string[]`.\",\n  104: ({\n    value,\n    param\n  }) => `Numeric value ${value} passed to ${param} param will be interpreted as ${value} seconds. If this is intentional use \"${value}s\" to silence this warning.`,\n  105: ({\n    e\n  }) => [`chart rendering failed`, e],\n  106: () => `Theming API and Legacy Themes are both used in the same page. A Theming API theme has been provided to the 'theme' grid option, but the file (ag-grid.css) is also included and will cause styling issues. Remove ag-grid.css from the page. See the migration guide: ${baseDocLink}/theming-migration/`,\n  107: ({\n    key,\n    value\n  }) => `Invalid value for theme param ${key} - ${value}`,\n  108: ({\n    e\n  }) => [\"chart update failed\", e],\n  109: ({\n    inputValue,\n    allSuggestions\n  }) => {\n    const suggestions = _fuzzySuggestions({\n      inputValue,\n      allSuggestions,\n      hideIrrelevant: true,\n      filterByPercentageOfBestMatch: 0.8\n    }).values;\n    return [`Could not find '${inputValue}' aggregate function. It was configured as \"aggFunc: '${inputValue}'\" but it wasn't found in the list of registered aggregations.`, suggestions.length > 0 ? `         Did you mean: [${suggestions.slice(0, 3)}]?` : \"\", `If using a custom aggregation function check it has been registered correctly.`].join(\"\\n\");\n  },\n  110: () => \"groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup\",\n  111: () => \"Invalid selection state. When `groupSelects` is enabled, the state must conform to `IServerSideGroupSelectionState`.\",\n  113: () => \"Set Filter cannot initialise because you are using a row model that does not contain all rows in the browser. Either use a different filter type, or configure Set Filter such that you provide it with values\",\n  114: ({\n    component\n  }) => `Could not find component with name of ${component}. Is it in Vue.components?`,\n  // 115: () => 'The provided selection state should be an object.' as const,\n  116: () => \"Invalid selection state. The state must conform to `IServerSideSelectionState`.\",\n  117: () => \"selectAll must be of boolean type.\",\n  118: () => \"Infinite scrolling must be enabled in order to set the row count.\",\n  119: () => \"Unable to instantiate filter\",\n  120: () => \"MultiFloatingFilterComp expects MultiFilter as its parent\",\n  121: () => \"a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (see AG Grid docs) or b) to toString() on the object to return a key\",\n  122: () => \"could not find the document, document is empty\",\n  123: () => \"Advanced Filter is only supported with the Client-Side Row Model or Server-Side Row Model.\",\n  124: () => \"No active charts to update.\",\n  125: ({\n    chartId\n  }) => `Unable to update chart. No active chart found with ID: ${chartId}.`,\n  126: () => \"unable to restore chart as no chart model is provided\",\n  127: ({\n    allRange\n  }) => `unable to create chart as ${allRange ? \"there are no columns in the grid\" : \"no range is selected\"}.`,\n  128: ({\n    feature\n  }) => `${feature} is only available if using 'multiRow' selection mode.`,\n  129: ({\n    feature,\n    rowModel\n  }) => `${feature} is only available if using 'clientSide' or 'serverSide' rowModelType, you are using ${rowModel}.`,\n  130: () => 'cannot multi select unless selection mode is \"multiRow\"',\n  // 131: () => 'cannot range select while selecting multiple rows' as const,\n  132: () => \"Row selection features are not available unless `rowSelection` is enabled.\",\n  133: ({\n    iconName\n  }) => `icon '${iconName}' function should return back a string or a dom object`,\n  134: ({\n    iconName\n  }) => `Did not find icon '${iconName}'`,\n  135: () => `Data type of the new value does not match the cell data type of the column`,\n  136: () => `Unable to update chart as the 'type' is missing. It must be either 'rangeChartUpdate', 'pivotChartUpdate', or 'crossFilterChartUpdate'.`,\n  137: ({\n    type,\n    currentChartType\n  }) => `Unable to update chart as a '${type}' update type is not permitted on a ${currentChartType}.`,\n  138: ({\n    chartType\n  }) => `invalid chart type supplied: ${chartType}`,\n  139: ({\n    customThemeName\n  }) => `a custom chart theme with the name ${customThemeName} has been supplied but not added to the 'chartThemes' list`,\n  140: ({\n    name\n  }) => `no stock theme exists with the name '${name}' and no custom chart theme with that name was supplied to 'customChartThemes'`,\n  141: () => \"cross filtering with row grouping is not supported.\",\n  142: () => \"cross filtering is only supported in the client side row model.\",\n  143: ({\n    panel\n  }) => `'${panel}' is not a valid Chart Tool Panel name`,\n  144: ({\n    type\n  }) => `Invalid charts data panel group name supplied: '${type}'`,\n  145: ({\n    group\n  }) => `As of v32, only one charts customize panel group can be expanded at a time. '${group}' will not be expanded.`,\n  146: ({\n    comp\n  }) => `Unable to instantiate component '${comp}' as its module hasn't been loaded. Add 'ValidationModule' to see which module is required.`,\n  147: ({\n    group\n  }) => `Invalid charts customize panel group name supplied: '${group}'`,\n  148: ({\n    group\n  }) => `invalid chartGroupsDef config '${group}'`,\n  149: ({\n    group,\n    chartType\n  }) => `invalid chartGroupsDef config '${group}.${chartType}'`,\n  150: () => `'seriesChartTypes' are required when the 'customCombo' chart type is specified.`,\n  151: ({\n    chartType\n  }) => `invalid chartType '${chartType}' supplied in 'seriesChartTypes', converting to 'line' instead.`,\n  152: ({\n    colId\n  }) => `no 'seriesChartType' found for colId = '${colId}', defaulting to 'line'.`,\n  153: ({\n    chartDataType\n  }) => `unexpected chartDataType value '${chartDataType}' supplied, instead use 'category', 'series' or 'excluded'`,\n  154: ({\n    colId\n  }) => `cross filtering requires a 'agSetColumnFilter' or 'agMultiColumnFilter' to be defined on the column with id: ${colId}`,\n  155: ({\n    option\n  }) => `'${option}' is not a valid Chart Toolbar Option`,\n  156: ({\n    panel\n  }) => `Invalid panel in chartToolPanelsDef.panels: '${panel}'`,\n  157: ({\n    unrecognisedGroupIds\n  }) => [\"unable to find group(s) for supplied groupIds:\", unrecognisedGroupIds],\n  158: () => \"can not expand a column item that does not represent a column group header\",\n  159: () => \"Invalid params supplied to createExcelFileForExcel() - `ExcelExportParams.data` is empty.\",\n  160: () => `Export cancelled. Export is not allowed as per your configuration.`,\n  161: () => \"The Excel Exporter is currently on Multi Sheet mode. End that operation by calling 'api.getMultipleSheetAsExcel()' or 'api.exportMultipleSheetsAsExcel()'\",\n  162: ({\n    id,\n    dataType\n  }) => `Unrecognized data type for excel export [${id}.dataType=${dataType}]`,\n  163: ({\n    featureName\n  }) => `Excel table export does not work with ${featureName}. The exported Excel file will not contain any Excel tables.\n Please turn off ${featureName} to enable Excel table exports.`,\n  164: () => \"Unable to add data table to Excel sheet: A table already exists.\",\n  165: () => \"Unable to add data table to Excel sheet: Missing required parameters.\",\n  166: ({\n    unrecognisedGroupIds\n  }) => [\"unable to find groups for these supplied groupIds:\", unrecognisedGroupIds],\n  167: ({\n    unrecognisedColIds\n  }) => [\"unable to find columns for these supplied colIds:\", unrecognisedColIds],\n  168: () => \"detailCellRendererParams.template should be function or string\",\n  169: () => 'Reference to eDetailGrid was missing from the details template. Please add data-ref=\"eDetailGrid\" to the template.',\n  170: ({\n    providedStrategy\n  }) => `invalid cellRendererParams.refreshStrategy = ${providedStrategy} supplied, defaulting to refreshStrategy = 'rows'.`,\n  171: () => \"could not find detail grid options for master detail, please set gridOptions.detailCellRendererParams.detailGridOptions\",\n  172: () => \"could not find getDetailRowData for master / detail, please set gridOptions.detailCellRendererParams.getDetailRowData\",\n  173: ({\n    group\n  }) => `invalid chartGroupsDef config '${group}'`,\n  174: ({\n    group,\n    chartType\n  }) => `invalid chartGroupsDef config '${group}.${chartType}'`,\n  175: ({\n    menuTabName,\n    itemsToConsider\n  }) => [`Trying to render an invalid menu item '${menuTabName}'. Check that your 'menuTabs' contains one of `, itemsToConsider],\n  176: ({\n    key\n  }) => `unknown menu item type ${key}`,\n  177: () => `valid values for cellSelection.handle.direction are 'x', 'y' and 'xy'. Default to 'xy'.`,\n  178: ({\n    colId\n  }) => `column ${colId} is not visible`,\n  179: () => \"totalValueGetter should be either a function or a string (expression)\",\n  180: () => \"agRichSelectCellEditor requires cellEditorParams.values to be set\",\n  181: () => \"agRichSelectCellEditor cannot have `multiSelect` and `allowTyping` set to `true`. AllowTyping has been turned off.\",\n  182: () => 'you cannot mix groupDisplayType = \"multipleColumns\" with treeData, only one column can be used to display groups when doing tree data',\n  183: () => \"Group Column Filter only works on group columns. Please use a different filter.\",\n  184: ({\n    parentGroupData,\n    childNodeData\n  }) => [`duplicate group keys for row data, keys should be unique`, [parentGroupData, childNodeData]],\n  185: ({\n    data\n  }) => [`getDataPath() should not return an empty path`, [data]],\n  186: ({\n    rowId,\n    rowData,\n    duplicateRowsData\n  }) => [`duplicate group keys for row data, keys should be unique`, rowId, rowData, ...(duplicateRowsData ?? [])],\n  187: ({\n    rowId,\n    firstData,\n    secondData\n  }) => [`Duplicate node id ${rowId}. Row IDs are provided via the getRowId() callback. Please modify the getRowId() callback code to provide unique row id values.`, \"first instance\", firstData, \"second instance\", secondData],\n  188: () => `getRowId callback must be provided for Server Side Row Model selection to work correctly.`,\n  189: ({\n    startRow\n  }) => `invalid value ${startRow} for startRow, the value should be >= 0`,\n  190: ({\n    rowGroupId,\n    data\n  }) => [`null and undefined values are not allowed for server side row model keys`, rowGroupId ? `column = ${rowGroupId}` : ``, `data is `, data],\n  // 191: () => `cannot multi select unless selection mode is 'multiRow'` as const,\n  // 192: () => `cannot use range selection when multi selecting rows` as const,\n  // 193: () => \"cannot multi select unless selection mode is 'multiRow'\" as const,\n  194: ({\n    method\n  }) => `calling gridApi.${method}() is only possible when using rowModelType=\\`clientSide\\`.`,\n  195: ({\n    justCurrentPage\n  }) => `selecting just ${justCurrentPage ? \"current page\" : \"filtered\"} only works when gridOptions.rowModelType='clientSide'`,\n  196: ({\n    key\n  }) => `Provided ids must be of string type. Invalid id provided: ${key}`,\n  197: () => \"`toggledNodes` must be an array of string ids.\",\n  // 198: () => `cannot multi select unless selection mode is 'multiRow'` as const,\n  199: () => `getSelectedNodes and getSelectedRows functions cannot be used with select all functionality with the server-side row model. Use \\`api.getServerSideSelectionState()\\` instead.`,\n  200: missingModule,\n  201: ({\n    rowModelType\n  }) => `Could not find row model for rowModelType = ${rowModelType}`,\n  202: () => `\\`getSelectedNodes\\` and \\`getSelectedRows\\` functions cannot be used with \\`groupSelectsChildren\\` and the server-side row model. Use \\`api.getServerSideSelectionState()\\` instead.`,\n  203: () => \"Server Side Row Model does not support Dynamic Row Height and Cache Purging. Either a) remove getRowHeight() callback or b) remove maxBlocksInCache property. Purging has been disabled.\",\n  204: () => \"Server Side Row Model does not support Auto Row Height and Cache Purging. Either a) remove colDef.autoHeight or b) remove maxBlocksInCache property. Purging has been disabled.\",\n  205: ({\n    duplicateIdText\n  }) => `Unable to display rows as duplicate row ids (${duplicateIdText}) were returned by the getRowId callback. Please modify the getRowId callback to provide unique ids.`,\n  206: () => \"getRowId callback must be implemented for transactions to work. Transaction was ignored.\",\n  207: () => 'The Set Filter Parameter \"defaultToNothingSelected\" value was ignored because it does not work when \"excelMode\" is used.',\n  208: () => `Set Filter Value Formatter must return string values. Please ensure the Set Filter Value Formatter returns string values for complex objects.`,\n  209: () => `Set Filter Key Creator is returning null for provided values and provided values are primitives. Please provide complex objects. See ${baseDocLink}/filter-set-filter-list/#filter-value-types`,\n  210: () => \"Set Filter has a Key Creator, but provided values are primitives. Did you mean to provide complex objects?\",\n  211: () => \"property treeList=true for Set Filter params, but you did not provide a treeListPathGetter or values of type Date.\",\n  212: () => `please review all your toolPanel components, it seems like at least one of them doesn't have an id`,\n  213: () => \"Advanced Filter does not work with Filters Tool Panel. Filters Tool Panel has been disabled.\",\n  214: ({\n    key\n  }) => `unable to lookup Tool Panel as invalid key supplied: ${key}`,\n  215: ({\n    key,\n    defaultByKey\n  }) => `the key ${key} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(defaultByKey ?? {}).join(\",\")}`,\n  216: ({\n    name\n  }) => `Missing component for '${name}'`,\n  217: ({\n    invalidColIds\n  }) => [\"unable to find grid columns for the supplied colDef(s):\", invalidColIds],\n  218: ({\n    property,\n    defaultOffset\n  }) => `${property} must be a number, the value you provided is not a valid number. Using the default of ${defaultOffset}px.`,\n  219: ({\n    property\n  }) => `Property ${property} does not exist on the target object.`,\n  220: ({\n    lineDash\n  }) => `'${lineDash}' is not a valid 'lineDash' option.`,\n  221: () => `agAggregationComponent should only be used with the client and server side row model.`,\n  222: () => `agFilteredRowCountComponent should only be used with the client side row model.`,\n  223: () => `agSelectedRowCountComponent should only be used with the client and server side row model.`,\n  224: () => `agTotalAndFilteredRowCountComponent should only be used with the client side row model.`,\n  225: () => \"agTotalRowCountComponent should only be used with the client side row model.\",\n  226: () => \"viewport is missing init method.\",\n  227: () => \"menu item icon must be DOM node or string\",\n  228: ({\n    menuItemOrString\n  }) => `unrecognised menu item ${menuItemOrString}`,\n  229: ({\n    index\n  }) => [\"invalid row index for ensureIndexVisible: \", index],\n  230: () => \"detailCellRendererParams.template is not supported by AG Grid React. To change the template, provide a Custom Detail Cell Renderer. See https://www.ag-grid.com/react-data-grid/master-detail-custom-detail/\",\n  // @deprecated v32 mark for removal as part of v32 deprecated features\n  231: () => \"As of v32, using custom components with `reactiveCustomComponents = false` is deprecated.\",\n  232: () => \"Using both rowData and v-model. rowData will be ignored.\",\n  233: ({\n    methodName\n  }) => `Framework component is missing the method ${methodName}()`,\n  234: () => 'Group Column Filter does not work with the colDef property \"field\". This property will be ignored.',\n  235: () => 'Group Column Filter does not work with the colDef property \"filterValueGetter\". This property will be ignored.',\n  236: () => 'Group Column Filter does not work with the colDef property \"filterParams\". This property will be ignored.',\n  237: () => \"Group Column Filter does not work with Tree Data enabled. Please disable Tree Data, or use a different filter.\",\n  238: () => \"setRowCount can only accept a positive row count.\",\n  239: () => 'Theming API and CSS File Themes are both used in the same page. In v33 we released the Theming API as the new default method of styling the grid. See the migration docs https://www.ag-grid.com/react-data-grid/theming-migration/. Because no value was provided to the `theme` grid option it defaulted to themeQuartz. But the file (ag-grid.css) is also included and will cause styling issues. Either pass the string \"legacy\" to the theme grid option to use v32 style themes, or remove ag-grid.css from the page to use Theming API.',\n  240: ({\n    theme\n  }) => `theme grid option must be a Theming API theme object or the string \"legacy\", received: ${theme}`,\n  // 241: () => `cannot select multiple rows when rowSelection.mode is set to 'singleRow'` as const,\n  // 242: () => 'cannot select multiple rows when using rangeSelect' as const,\n  243: () => \"Failed to deserialize state - each provided state object must be an object.\",\n  244: () => \"Failed to deserialize state - `selectAllChildren` must be a boolean value or undefined.\",\n  245: () => \"Failed to deserialize state - `toggledNodes` must be an array.\",\n  246: () => \"Failed to deserialize state - Every `toggledNode` requires an associated string id.\",\n  247: () => `Row selection state could not be parsed due to invalid data. Ensure all child state has toggledNodes or does not conform with the parent rule. \nPlease rebuild the selection state and reapply it.`,\n  248: () => \"SetFloatingFilter expects SetFilter as its parent\",\n  249: () => \"Must supply a Value Formatter in Set Filter params when using a Key Creator\",\n  250: () => \"Must supply a Key Creator in Set Filter params when `treeList = true` on a group column, and Tree Data or Row Grouping is enabled.\",\n  251: ({\n    chartType\n  }) => `AG Grid: Unable to create chart as an invalid chartType = '${chartType}' was supplied.`,\n  252: () => \"cannot get grid to draw rows when it is in the middle of drawing rows. \\nYour code probably called a grid API method while the grid was in the render stage. \\nTo overcome this, put the API call into a timeout, e.g. instead of api.redrawRows(), call setTimeout(function() { api.redrawRows(); }, 0). \\nTo see what part of your code that caused the refresh check this stacktrace.\",\n  253: ({\n    version\n  }) => [\"Illegal version string: \", version],\n  254: () => \"Cannot create chart: no chart themes available.\",\n  255: ({\n    point\n  }) => `Lone surrogate U+${point?.toString(16).toUpperCase()} is not a scalar value`,\n  256: () => \"Unable to initialise. See validation error, or load ValidationModule if missing.\",\n  257: () => missingChartsWithModule(\"IntegratedChartsModule\"),\n  258: () => missingChartsWithModule(\"SparklinesModule\"),\n  259: ({\n    part\n  }) => `the argument to theme.withPart must be a Theming API part object, received: ${part}`,\n  260: ({\n    propName,\n    compName,\n    gridScoped,\n    gridId,\n    rowModelType\n  }) => missingModule({\n    reasonOrId: `AG Grid '${propName}' component: ${compName}`,\n    moduleName: USER_COMP_MODULES[compName],\n    gridId,\n    gridScoped,\n    rowModelType\n  }),\n  261: () => \"As of v33, `column.isHovered()` is deprecated. Use `api.isColumnHovered(column)` instead.\",\n  262: () => 'As of v33, icon key \"smallDown\" is deprecated. Use \"advancedFilterBuilderSelect\" for Advanced Filter Builder dropdown, \"selectOpen\" for Select cell editor and dropdowns (e.g. Integrated Charts menu), \"richSelectOpen\" for Rich Select cell editor.',\n  263: () => 'As of v33, icon key \"smallLeft\" is deprecated. Use \"panelDelimiterRtl\" for Row Group Panel / Pivot Panel, \"subMenuOpenRtl\" for sub-menus.',\n  264: () => 'As of v33, icon key \"smallRight\" is deprecated. Use \"panelDelimiter\" for Row Group Panel / Pivot Panel, \"subMenuOpen\" for sub-menus.',\n  265: ({\n    colId\n  }) => `Unable to infer chart data type for column '${colId}' if first data entry is null. Please specify \"chartDataType\", or a \"cellDataType\" in the column definition. For more information, see ${baseDocLink}/integrated-charts-range-chart#coldefchartdatatype .`,\n  266: () => 'As of v33.1, using \"keyCreator\" with the Rich Select Editor has been deprecated. It now requires the \"formatValue\" callback to convert complex data to strings.',\n  267: () => \"Detail grids can not use a different theme to the master grid, the `theme` detail grid option will be ignored.\",\n  268: () => \"Transactions aren't supported with tree data when using treeDataChildrenField\",\n  269: () => \"When `masterSelects: 'detail'`, detail grids must be configured with multi-row selection\",\n  270: ({\n    id,\n    parentId\n  }) => `Cycle detected for row with id='${id}' and parent id='${parentId}'. Resetting the parent for row with id='${id}' and showing it as a root-level node.`,\n  271: ({\n    id,\n    parentId\n  }) => `Parent row not found for row with id='${id}' and parent id='${parentId}'. Showing row with id='${id}' as a root-level node.`,\n  272: () => NoModulesRegisteredError(),\n  273: ({\n    providedId,\n    usedId\n  }) => `Provided column id '${providedId}' was already in use, ensure all column and group ids are unique. Using '${usedId}' instead.`,\n  274: ({\n    prop\n  }) => {\n    let msg = `Since v33, ${prop} has been deprecated.`;\n    switch (prop) {\n      case \"maxComponentCreationTimeMs\":\n        msg += \" This property is no longer required and so will be removed in a future version.\";\n        break;\n      case \"setGridApi\":\n        msg += ` This method is not called by AG Grid. To access the GridApi see: https://ag-grid.com/react-data-grid/grid-interface/#grid-api `;\n        break;\n      case \"children\":\n        msg += ` For multiple versions AgGridReact does not support children.`;\n        break;\n    }\n    return msg;\n  },\n  275: missingRowModelTypeError,\n  276: () => \"Row Numbers Row Resizer cannot be used when Grid Columns have `autoHeight` enabled.\",\n  277: ({\n    colId\n  }) => `'enableFilterHandlers' is set to true, but column '${colId}' does not have 'filter.doesFilterPass' or 'filter.handler' set.`,\n  278: ({\n    colId\n  }) => `Unable to create filter handler for column '${colId}'`,\n  279: _ => {},\n  // `Unable to create dynamic bean '${name}' during module init lifecycle, dynamic beans must be initialised on first use.` as const,\n  280: ({\n    colId\n  }) => `'name' must be provided for custom filter components for column '${colId}`,\n  281: ({\n    colId\n  }) => `Filter for column '${colId}' does not have 'filterParams.buttons', but the new Filters Tool Panel has buttons configured. Either configure buttons for the filter, or disable buttons on the Filters Tool Panel.`,\n  282: () => \"New filter tool panel requires `enableFilterHandlers: true`.\",\n  283: () => \"As of v34, use the same method on the filter handler (`api.getColumnFilterHandler(colKey)`) instead.\",\n  284: () => \"As of v34, filters are active when they have a model. Use `api.getColumnFilterModel()` instead.\",\n  285: () => \"As of v34, use (`api.getColumnFilterModel()`) instead.\",\n  286: () => \"As of v34, use (`api.setColumnFilterModel()`) instead.\",\n  287: () => \"`api.doFilterAction()` requires `enableFilterHandlers = true\",\n  288: () => \"`api.getColumnFilterModel(key, true)` requires `enableFilterHandlers = true\",\n  289: ({\n    rowModelType\n  }) => `Row Model '${rowModelType}' is not supported with Batch Editing`,\n  290: ({\n    rowIndex,\n    rowPinned\n  }) => `Row with index '${rowIndex}' and pinned state '${rowPinned}' not found`\n};\nfunction getError(errorId, args) {\n  const msgOrFunc = AG_GRID_ERRORS[errorId];\n  if (!msgOrFunc) {\n    return [`Missing error text for error id ${errorId}!`];\n  }\n  const errorBody = msgOrFunc(args);\n  const errorLink = getErrorLink(errorId, args);\n  const errorSuffix = `\nSee ${errorLink}`;\n  return Array.isArray(errorBody) ? errorBody.concat(errorSuffix) : [errorBody, errorSuffix];\n}\nvar MISSING_MODULE_REASONS = {\n  1: \"Charting Aggregation\",\n  2: \"pivotResultFields\",\n  3: \"setTooltip\"\n};\n\n// packages/ag-grid-community/src/grid.ts\nvar _gridApiCache = /* @__PURE__ */new WeakMap();\nvar _gridElementCache = /* @__PURE__ */new WeakMap();\nfunction createGrid(eGridDiv, gridOptions, params) {\n  if (!gridOptions) {\n    _error(11);\n    return {};\n  }\n  const gridParams = params;\n  let destroyCallback;\n  if (!gridParams?.setThemeOnGridDiv) {\n    const newGridDiv = _createElement({\n      tag: \"div\"\n    });\n    newGridDiv.style.height = \"100%\";\n    eGridDiv.appendChild(newGridDiv);\n    eGridDiv = newGridDiv;\n    destroyCallback = () => eGridDiv.remove();\n  }\n  const api = new GridCoreCreator().create(eGridDiv, gridOptions, context => {\n    const gridComp = new GridComp(eGridDiv);\n    context.createBean(gridComp);\n  }, void 0, params, destroyCallback);\n  return api;\n}\nvar nextGridId = 1;\nvar GridCoreCreator = class {\n  create(eGridDiv, providedOptions, createUi, acceptChanges, params, _destroyCallback) {\n    const gridOptions = GlobalGridOptions.applyGlobalGridOptions(providedOptions);\n    const gridId = gridOptions.gridId ?? String(nextGridId++);\n    const registeredModules = this.getRegisteredModules(params, gridId, gridOptions.rowModelType);\n    const beanClasses = this.createBeansList(gridOptions.rowModelType, registeredModules, gridId);\n    const providedBeanInstances = this.createProvidedBeans(eGridDiv, gridOptions, params);\n    if (!beanClasses) {\n      return void 0;\n    }\n    const destroyCallback = () => {\n      _gridElementCache.delete(api);\n      _gridApiCache.delete(eGridDiv);\n      _destroyCallback?.();\n    };\n    const contextParams = {\n      providedBeanInstances,\n      beanClasses,\n      gridId,\n      beanInitComparator: gridBeanInitComparator,\n      beanDestroyComparator: gridBeanDestroyComparator,\n      derivedBeans: [createGridApi],\n      destroyCallback\n    };\n    const context = new Context(contextParams);\n    this.registerModuleFeatures(context, registeredModules);\n    createUi(context);\n    context.getBean(\"syncSvc\").start();\n    acceptChanges?.(context);\n    const api = context.getBean(\"gridApi\");\n    _gridApiCache.set(eGridDiv, api);\n    _gridElementCache.set(api, eGridDiv);\n    return api;\n  }\n  getRegisteredModules(params, gridId, rowModelType) {\n    _registerModule(CommunityCoreModule, void 0, true);\n    params?.modules?.forEach(m => _registerModule(m, gridId));\n    return _getRegisteredModules(gridId, getDefaultRowModelType(rowModelType));\n  }\n  registerModuleFeatures(context, registeredModules) {\n    const registry = context.getBean(\"registry\");\n    const apiFunctionSvc = context.getBean(\"apiFunctionSvc\");\n    registeredModules.forEach(module => {\n      registry.registerModule(module);\n      const apiFunctions = module.apiFunctions;\n      if (apiFunctions) {\n        const names = Object.keys(apiFunctions);\n        names.forEach(name => {\n          apiFunctionSvc?.addFunction(name, apiFunctions[name]);\n        });\n      }\n    });\n  }\n  createProvidedBeans(eGridDiv, gridOptions, params) {\n    let frameworkOverrides = params ? params.frameworkOverrides : null;\n    if (_missing(frameworkOverrides)) {\n      frameworkOverrides = new VanillaFrameworkOverrides();\n    }\n    const seed = {\n      gridOptions,\n      eGridDiv,\n      globalListener: params ? params.globalListener : null,\n      globalSyncListener: params ? params.globalSyncListener : null,\n      frameworkOverrides\n    };\n    if (params && params.providedBeanInstances) {\n      Object.assign(seed, params.providedBeanInstances);\n    }\n    return seed;\n  }\n  createBeansList(userProvidedRowModelType, registeredModules, gridId) {\n    const rowModelModuleNames = {\n      clientSide: \"ClientSideRowModel\",\n      infinite: \"InfiniteRowModel\",\n      serverSide: \"ServerSideRowModel\",\n      viewport: \"ViewportRowModel\"\n    };\n    const rowModelType = getDefaultRowModelType(userProvidedRowModelType);\n    const rowModuleModelName = rowModelModuleNames[rowModelType];\n    if (!rowModuleModelName) {\n      _logPreInitErr(201, {\n        rowModelType\n      }, `Unknown rowModelType ${rowModelType}.`);\n      return;\n    }\n    if (!_hasUserRegistered()) {\n      _logPreInitErr(272, void 0, NoModulesRegisteredError());\n      return;\n    }\n    if (!userProvidedRowModelType) {\n      const registeredRowModelModules = Object.entries(rowModelModuleNames).filter(([rowModelType2, module]) => _isModuleRegistered(module, gridId, rowModelType2));\n      if (registeredRowModelModules.length == 1) {\n        const [userRowModelType, moduleName] = registeredRowModelModules[0];\n        if (userRowModelType !== rowModelType) {\n          const params = {\n            moduleName,\n            rowModelType: userRowModelType\n          };\n          _logPreInitErr(275, params, missingRowModelTypeError(params));\n          return;\n        }\n      }\n    }\n    if (!_isModuleRegistered(rowModuleModelName, gridId, rowModelType)) {\n      _logPreInitErr(200, {\n        reasonOrId: `rowModelType = '${rowModelType}'`,\n        moduleName: rowModuleModelName,\n        gridScoped: _areModulesGridScoped(),\n        gridId,\n        rowModelType\n      }, `Missing module ${rowModuleModelName}Module for rowModelType ${rowModelType}.`);\n      return;\n    }\n    const beans = /* @__PURE__ */new Set();\n    registeredModules.forEach(module => module.beans?.forEach(bean => beans.add(bean)));\n    return Array.from(beans);\n  }\n};\nfunction getDefaultRowModelType(passedRowModelType) {\n  return passedRowModelType ?? \"clientSide\";\n}\nfunction getGridApi(gridElement) {\n  if (typeof gridElement === \"string\") {\n    try {\n      gridElement = document.querySelector(`[grid-id=\"${gridElement}\"]`)?.parentElement ?? document.querySelector(gridElement)?.firstElementChild ?? document.getElementById(gridElement)?.firstElementChild;\n    } catch {\n      gridElement = null;\n    }\n  }\n  return gridElement ? _gridApiCache.get(gridElement) : void 0;\n}\nfunction getGridElement(api) {\n  return _gridElementCache.get(api);\n}\n\n// packages/ag-grid-community/src/api/rowModelApiUtils.ts\nfunction _getClientSideRowModel(beans) {\n  const rowModel = beans.rowModel;\n  return rowModel.getType() === \"clientSide\" ? rowModel : void 0;\n}\nfunction _getInfiniteRowModel(beans) {\n  const rowModel = beans.rowModel;\n  return rowModel.getType() === \"infinite\" ? rowModel : void 0;\n}\nfunction _getServerSideRowModel(beans) {\n  const rowModel = beans.rowModel;\n  return rowModel.getType() === \"serverSide\" ? rowModel : void 0;\n}\n\n// packages/ag-grid-community/src/misc/locale/localeService.ts\nvar LocaleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"localeSvc\";\n  }\n  getLocaleTextFunc() {\n    const gos = this.gos;\n    const getLocaleText = gos.getCallback(\"getLocaleText\");\n    if (getLocaleText) {\n      return (key, defaultValue, variableValues) => {\n        const params = {\n          key,\n          defaultValue,\n          variableValues\n        };\n        return getLocaleText(params);\n      };\n    }\n    const localeText = gos.get(\"localeText\");\n    return (key, defaultValue, variableValues) => {\n      let localisedText = localeText && localeText[key];\n      if (localisedText && variableValues && variableValues.length) {\n        let found = 0;\n        while (true) {\n          if (found >= variableValues.length) {\n            break;\n          }\n          const idx = localisedText.indexOf(\"${variable}\");\n          if (idx === -1) {\n            break;\n          }\n          localisedText = localisedText.replace(\"${variable}\", variableValues[found++]);\n        }\n      }\n      return localisedText ?? defaultValue;\n    };\n  }\n};\n\n// packages/ag-grid-community/src/misc/state/stateUtils.ts\nfunction convertColumnState(columnState, enablePivotMode = false) {\n  const sortColumns = [];\n  const groupColIds = [];\n  const aggregationColumns = [];\n  const pivotColIds = [];\n  const leftColIds = [];\n  const rightColIds = [];\n  const hiddenColIds = [];\n  const columnSizes = [];\n  const columns = [];\n  let defaultSortIndex = 0;\n  for (let i = 0; i < columnState.length; i++) {\n    const {\n      colId,\n      sort,\n      sortIndex,\n      rowGroup,\n      rowGroupIndex,\n      aggFunc,\n      pivot,\n      pivotIndex,\n      pinned,\n      hide,\n      width,\n      flex\n    } = columnState[i];\n    columns.push(colId);\n    if (sort) {\n      sortColumns[sortIndex ?? defaultSortIndex++] = {\n        colId,\n        sort\n      };\n    }\n    if (rowGroup) {\n      groupColIds[rowGroupIndex ?? 0] = colId;\n    }\n    if (typeof aggFunc === \"string\") {\n      aggregationColumns.push({\n        colId,\n        aggFunc\n      });\n    }\n    if (pivot) {\n      pivotColIds[pivotIndex ?? 0] = colId;\n    }\n    if (pinned) {\n      (pinned === \"right\" ? rightColIds : leftColIds).push(colId);\n    }\n    if (hide) {\n      hiddenColIds.push(colId);\n    }\n    if (flex != null || width) {\n      columnSizes.push({\n        colId,\n        flex: flex ?? void 0,\n        width\n      });\n    }\n  }\n  return {\n    sort: sortColumns.length ? {\n      sortModel: sortColumns\n    } : void 0,\n    rowGroup: groupColIds.length ? {\n      groupColIds\n    } : void 0,\n    aggregation: aggregationColumns.length ? {\n      aggregationModel: aggregationColumns\n    } : void 0,\n    pivot: pivotColIds.length || enablePivotMode ? {\n      pivotMode: enablePivotMode,\n      pivotColIds\n    } : void 0,\n    columnPinning: leftColIds.length || rightColIds.length ? {\n      leftColIds,\n      rightColIds\n    } : void 0,\n    columnVisibility: hiddenColIds.length ? {\n      hiddenColIds\n    } : void 0,\n    columnSizing: columnSizes.length ? {\n      columnSizingModel: columnSizes\n    } : void 0,\n    columnOrder: columns.length ? {\n      orderedColIds: columns\n    } : void 0\n  };\n}\nfunction _convertColumnGroupState(columnGroupState) {\n  const openColumnGroups = [];\n  columnGroupState.forEach(({\n    groupId,\n    open\n  }) => {\n    if (open) {\n      openColumnGroups.push(groupId);\n    }\n  });\n  return openColumnGroups.length ? {\n    openColumnGroupIds: openColumnGroups\n  } : void 0;\n}\nfunction convertColumnGroupState(columnGroupState) {\n  return {\n    columnGroup: _convertColumnGroupState(columnGroupState)\n  };\n}\n\n// packages/ag-grid-community/src/components/framework/frameworkComponentWrapper.ts\nvar BaseComponentWrapper = class {\n  wrap(OriginalConstructor, mandatoryMethods, optionalMethods, componentType) {\n    const wrapper = this.createWrapper(OriginalConstructor, componentType);\n    mandatoryMethods?.forEach(methodName => {\n      this.createMethod(wrapper, methodName, true);\n    });\n    optionalMethods?.forEach(methodName => {\n      this.createMethod(wrapper, methodName, false);\n    });\n    return wrapper;\n  }\n  createMethod(wrapper, methodName, mandatory) {\n    wrapper.addMethod(methodName, this.createMethodProxy(wrapper, methodName, mandatory));\n  }\n  createMethodProxy(wrapper, methodName, mandatory) {\n    return function () {\n      if (wrapper.hasMethod(methodName)) {\n        return wrapper.callMethod(methodName, arguments);\n      }\n      if (mandatory) {\n        _warn(49, {\n          methodName\n        });\n      }\n      return null;\n    };\n  }\n};\n\n// packages/ag-grid-community/src/tooltip/tooltipComponent.ts\nvar TooltipComponentElement = {\n  tag: \"div\",\n  cls: \"ag-tooltip\"\n};\nvar TooltipComponent2 = class extends PopupComponent {\n  constructor() {\n    super(TooltipComponentElement);\n  }\n  // will need to type params\n  init(params) {\n    const {\n      value\n    } = params;\n    const eGui = this.getGui();\n    eGui.textContent = _toString(value);\n    const locationKebabCase = params.location.replace(/([a-z])([A-Z0-9])/g, \"$1-$2\").toLowerCase();\n    eGui.classList.add(`ag-${locationKebabCase}-tooltip`);\n  }\n};\n\n// packages/ag-grid-community/src/tooltip/tooltipStateManager.ts\nvar SHOW_QUICK_TOOLTIP_DIFF = 1e3;\nvar FADE_OUT_TOOLTIP_TIMEOUT = 1e3;\nvar INTERACTIVE_HIDE_DELAY = 100;\nvar lastTooltipHideTime;\nvar isLocked = false;\nvar TooltipStateManager = class extends BeanStub {\n  constructor(tooltipCtrl, getTooltipValue) {\n    super();\n    this.tooltipCtrl = tooltipCtrl;\n    this.getTooltipValue = getTooltipValue;\n    this.interactionEnabled = false;\n    this.isInteractingWithTooltip = false;\n    this.state = 0 /* NOTHING */;\n    // when showing the tooltip, we need to make sure it's the most recent instance we request, as due to\n    // async we could request two tooltips before the first instance returns, in which case we should\n    // disregard the second instance.\n    this.tooltipInstanceCount = 0;\n    this.tooltipMouseTrack = false;\n  }\n  wireBeans(beans) {\n    this.popupSvc = beans.popupSvc;\n    this.userCompFactory = beans.userCompFactory;\n  }\n  postConstruct() {\n    if (this.gos.get(\"tooltipInteraction\")) {\n      this.interactionEnabled = true;\n    }\n    this.tooltipTrigger = this.getTooltipTrigger();\n    this.tooltipMouseTrack = this.gos.get(\"tooltipMouseTrack\");\n    const el = this.tooltipCtrl.getGui();\n    if (this.tooltipTrigger === 0 /* HOVER */) {\n      this.addManagedListeners(el, {\n        mouseenter: this.onMouseEnter.bind(this),\n        mouseleave: this.onMouseLeave.bind(this)\n      });\n    }\n    if (this.tooltipTrigger === 1 /* FOCUS */) {\n      this.addManagedListeners(el, {\n        focusin: this.onFocusIn.bind(this),\n        focusout: this.onFocusOut.bind(this)\n      });\n    }\n    this.addManagedListeners(el, {\n      mousemove: this.onMouseMove.bind(this)\n    });\n    if (!this.interactionEnabled) {\n      this.addManagedListeners(el, {\n        mousedown: this.onMouseDown.bind(this),\n        keydown: this.onKeyDown.bind(this)\n      });\n    }\n  }\n  getGridOptionsTooltipDelay(delayOption) {\n    const delay = this.gos.get(delayOption);\n    return Math.max(200, delay);\n  }\n  getTooltipDelay(type) {\n    if (type === \"show\") {\n      return this.tooltipCtrl.getTooltipShowDelayOverride?.() ?? this.getGridOptionsTooltipDelay(\"tooltipShowDelay\");\n    }\n    return this.tooltipCtrl.getTooltipHideDelayOverride?.() ?? this.getGridOptionsTooltipDelay(\"tooltipHideDelay\");\n  }\n  destroy() {\n    this.setToDoNothing();\n    super.destroy();\n  }\n  getTooltipTrigger() {\n    const trigger = this.gos.get(\"tooltipTrigger\");\n    if (!trigger || trigger === \"hover\") {\n      return 0 /* HOVER */;\n    }\n    return 1 /* FOCUS */;\n  }\n  onMouseEnter(e) {\n    if (this.interactionEnabled && this.interactiveTooltipTimeoutId) {\n      this.unlockService();\n      this.startHideTimeout();\n    }\n    if (_isIOSUserAgent()) {\n      return;\n    }\n    if (isLocked) {\n      this.showTooltipTimeoutId = window.setTimeout(() => {\n        this.prepareToShowTooltip(e);\n      }, INTERACTIVE_HIDE_DELAY);\n    } else {\n      this.prepareToShowTooltip(e);\n    }\n  }\n  onMouseMove(e) {\n    if (this.lastMouseEvent) {\n      this.lastMouseEvent = e;\n    }\n    if (this.tooltipMouseTrack && this.state === 2 /* SHOWING */ && this.tooltipComp) {\n      this.positionTooltip();\n    }\n  }\n  onMouseDown() {\n    this.setToDoNothing();\n  }\n  onMouseLeave() {\n    if (this.interactionEnabled) {\n      this.lockService();\n    } else {\n      this.setToDoNothing();\n    }\n  }\n  onFocusIn() {\n    this.prepareToShowTooltip();\n  }\n  onFocusOut(e) {\n    const relatedTarget = e.relatedTarget;\n    const parentCompGui = this.tooltipCtrl.getGui();\n    const tooltipGui = this.tooltipComp?.getGui();\n    if (this.isInteractingWithTooltip || parentCompGui.contains(relatedTarget) || this.interactionEnabled && tooltipGui?.contains(relatedTarget)) {\n      return;\n    }\n    this.setToDoNothing();\n  }\n  onKeyDown() {\n    if (this.isInteractingWithTooltip) {\n      this.isInteractingWithTooltip = false;\n    }\n    this.setToDoNothing();\n  }\n  prepareToShowTooltip(mouseEvent) {\n    if (this.state != 0 /* NOTHING */ || isLocked) {\n      return;\n    }\n    let delay = 0;\n    if (mouseEvent) {\n      delay = this.isLastTooltipHiddenRecently() ? 200 : this.getTooltipDelay(\"show\");\n    }\n    this.lastMouseEvent = mouseEvent || null;\n    this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), delay);\n    this.state = 1 /* WAITING_TO_SHOW */;\n  }\n  isLastTooltipHiddenRecently() {\n    const now = Date.now();\n    const then = lastTooltipHideTime;\n    return now - then < SHOW_QUICK_TOOLTIP_DIFF;\n  }\n  setToDoNothing(fromHideTooltip) {\n    if (!fromHideTooltip && this.state === 2 /* SHOWING */) {\n      this.hideTooltip();\n    }\n    if (this.onBodyScrollEventCallback) {\n      this.onBodyScrollEventCallback();\n      this.onBodyScrollEventCallback = void 0;\n    }\n    if (this.onColumnMovedEventCallback) {\n      this.onColumnMovedEventCallback();\n      this.onColumnMovedEventCallback = void 0;\n    }\n    if (this.onDocumentKeyDownCallback) {\n      this.onDocumentKeyDownCallback();\n      this.onDocumentKeyDownCallback = void 0;\n    }\n    this.clearTimeouts();\n    this.state = 0 /* NOTHING */;\n    this.lastMouseEvent = null;\n  }\n  showTooltip() {\n    const value = this.getTooltipValue();\n    const ctrl = this.tooltipCtrl;\n    if (!_exists(value) || ctrl.shouldDisplayTooltip && !ctrl.shouldDisplayTooltip()) {\n      this.setToDoNothing();\n      return;\n    }\n    const rowNode = ctrl.getRowNode?.();\n    const params = _addGridCommonParams(this.gos, {\n      location: ctrl.getLocation?.() ?? \"UNKNOWN\",\n      //'cell',\n      colDef: ctrl.getColDef?.(),\n      column: ctrl.getColumn?.(),\n      rowIndex: ctrl.getRowIndex?.(),\n      node: rowNode,\n      data: rowNode?.data,\n      value,\n      valueFormatted: ctrl.getValueFormatted?.(),\n      hideTooltipCallback: () => this.hideTooltip(true),\n      ...(ctrl.getAdditionalParams?.() ?? {})\n    });\n    this.state = 2 /* SHOWING */;\n    this.tooltipInstanceCount++;\n    const callback = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount);\n    const userDetails = _getTooltipCompDetails(this.userCompFactory, params);\n    userDetails?.newAgStackInstance().then(callback);\n  }\n  hideTooltip(forceHide) {\n    if (!forceHide && this.isInteractingWithTooltip) {\n      return;\n    }\n    if (this.tooltipComp) {\n      this.destroyTooltipComp();\n      lastTooltipHideTime = Date.now();\n    }\n    this.eventSvc.dispatchEvent({\n      type: \"tooltipHide\",\n      parentGui: this.tooltipCtrl.getGui()\n    });\n    if (forceHide) {\n      this.isInteractingWithTooltip = false;\n    }\n    this.setToDoNothing(true);\n  }\n  newTooltipComponentCallback(tooltipInstanceCopy, tooltipComp) {\n    const compNoLongerNeeded = this.state !== 2 /* SHOWING */ || this.tooltipInstanceCount !== tooltipInstanceCopy;\n    if (compNoLongerNeeded) {\n      this.destroyBean(tooltipComp);\n      return;\n    }\n    const eGui = tooltipComp.getGui();\n    this.tooltipComp = tooltipComp;\n    if (!eGui.classList.contains(\"ag-tooltip\")) {\n      eGui.classList.add(\"ag-tooltip-custom\");\n    }\n    if (this.tooltipTrigger === 0 /* HOVER */) {\n      eGui.classList.add(\"ag-tooltip-animate\");\n    }\n    if (this.interactionEnabled) {\n      eGui.classList.add(\"ag-tooltip-interactive\");\n    }\n    const translate = this.getLocaleTextFunc();\n    const addPopupRes = this.popupSvc?.addPopup({\n      eChild: eGui,\n      ariaLabel: translate(\"ariaLabelTooltip\", \"Tooltip\")\n    });\n    if (addPopupRes) {\n      this.tooltipPopupDestroyFunc = addPopupRes.hideFunc;\n    }\n    this.positionTooltip();\n    if (this.tooltipTrigger === 1 /* FOCUS */) {\n      const listener = () => this.setToDoNothing();\n      [this.onBodyScrollEventCallback, this.onColumnMovedEventCallback] = this.addManagedEventListeners({\n        bodyScroll: listener,\n        columnMoved: listener\n      });\n    }\n    if (this.interactionEnabled) {\n      [this.tooltipMouseEnterListener, this.tooltipMouseLeaveListener] = this.addManagedElementListeners(eGui, {\n        mouseenter: this.onTooltipMouseEnter.bind(this),\n        mouseleave: this.onTooltipMouseLeave.bind(this)\n      });\n      [this.onDocumentKeyDownCallback] = this.addManagedElementListeners(_getDocument(this.beans), {\n        keydown: e => {\n          if (!eGui.contains(e?.target)) {\n            this.onKeyDown();\n          }\n        }\n      });\n      if (this.tooltipTrigger === 1 /* FOCUS */) {\n        [this.tooltipFocusInListener, this.tooltipFocusOutListener] = this.addManagedElementListeners(eGui, {\n          focusin: this.onTooltipFocusIn.bind(this),\n          focusout: this.onTooltipFocusOut.bind(this)\n        });\n      }\n    }\n    this.eventSvc.dispatchEvent({\n      type: \"tooltipShow\",\n      tooltipGui: eGui,\n      parentGui: this.tooltipCtrl.getGui()\n    });\n    this.startHideTimeout();\n  }\n  onTooltipMouseEnter() {\n    this.isInteractingWithTooltip = true;\n    this.unlockService();\n  }\n  onTooltipMouseLeave() {\n    if (this.isTooltipFocused()) {\n      return;\n    }\n    this.isInteractingWithTooltip = false;\n    this.lockService();\n  }\n  onTooltipFocusIn() {\n    this.isInteractingWithTooltip = true;\n  }\n  isTooltipFocused() {\n    const tooltipGui = this.tooltipComp?.getGui();\n    const activeEl = _getActiveDomElement(this.beans);\n    return !!tooltipGui && tooltipGui.contains(activeEl);\n  }\n  onTooltipFocusOut(e) {\n    const parentGui = this.tooltipCtrl.getGui();\n    if (this.isTooltipFocused()) {\n      return;\n    }\n    this.isInteractingWithTooltip = false;\n    if (parentGui.contains(e.relatedTarget)) {\n      this.startHideTimeout();\n    } else {\n      this.hideTooltip();\n    }\n  }\n  positionTooltip() {\n    const params = {\n      type: \"tooltip\",\n      ePopup: this.tooltipComp.getGui(),\n      nudgeY: 18,\n      skipObserver: this.tooltipMouseTrack\n    };\n    if (this.lastMouseEvent) {\n      this.popupSvc?.positionPopupUnderMouseEvent({\n        ...params,\n        mouseEvent: this.lastMouseEvent\n      });\n    } else {\n      this.popupSvc?.positionPopupByComponent({\n        ...params,\n        eventSource: this.tooltipCtrl.getGui(),\n        position: \"under\",\n        keepWithinBounds: true,\n        nudgeY: 5\n      });\n    }\n  }\n  destroyTooltipComp() {\n    this.tooltipComp.getGui().classList.add(\"ag-tooltip-hiding\");\n    const tooltipPopupDestroyFunc = this.tooltipPopupDestroyFunc;\n    const tooltipComp = this.tooltipComp;\n    const delay = this.tooltipTrigger === 0 /* HOVER */ ? FADE_OUT_TOOLTIP_TIMEOUT : 0;\n    window.setTimeout(() => {\n      tooltipPopupDestroyFunc();\n      this.destroyBean(tooltipComp);\n    }, delay);\n    this.clearTooltipListeners();\n    this.tooltipPopupDestroyFunc = void 0;\n    this.tooltipComp = void 0;\n  }\n  clearTooltipListeners() {\n    [this.tooltipMouseEnterListener, this.tooltipMouseLeaveListener, this.tooltipFocusInListener, this.tooltipFocusOutListener].forEach(listener => {\n      if (listener) {\n        listener();\n      }\n    });\n    this.tooltipMouseEnterListener = this.tooltipMouseLeaveListener = this.tooltipFocusInListener = this.tooltipFocusOutListener = null;\n  }\n  lockService() {\n    isLocked = true;\n    this.interactiveTooltipTimeoutId = window.setTimeout(() => {\n      this.unlockService();\n      this.setToDoNothing();\n    }, INTERACTIVE_HIDE_DELAY);\n  }\n  unlockService() {\n    isLocked = false;\n    this.clearInteractiveTimeout();\n  }\n  startHideTimeout() {\n    this.clearHideTimeout();\n    this.hideTooltipTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.getTooltipDelay(\"hide\"));\n  }\n  clearShowTimeout() {\n    if (!this.showTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.showTooltipTimeoutId);\n    this.showTooltipTimeoutId = void 0;\n  }\n  clearHideTimeout() {\n    if (!this.hideTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.hideTooltipTimeoutId);\n    this.hideTooltipTimeoutId = void 0;\n  }\n  clearInteractiveTimeout() {\n    if (!this.interactiveTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.interactiveTooltipTimeoutId);\n    this.interactiveTooltipTimeoutId = void 0;\n  }\n  clearTimeouts() {\n    this.clearShowTimeout();\n    this.clearHideTimeout();\n    this.clearInteractiveTimeout();\n  }\n};\n\n// packages/ag-grid-community/src/tooltip/tooltipFeature.ts\nfunction _isShowTooltipWhenTruncated(gos) {\n  return gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n}\nfunction _getShouldDisplayTooltip(gos, getElement2) {\n  return _isShowTooltipWhenTruncated(gos) ? _isElementOverflowingCallback(getElement2) : void 0;\n}\nvar TooltipFeature = class extends BeanStub {\n  constructor(ctrl, beans) {\n    super();\n    this.ctrl = ctrl;\n    if (beans) {\n      this.beans = beans;\n    }\n  }\n  postConstruct() {\n    this.refreshTooltip();\n  }\n  /**\n   *\n   * @param tooltip The tooltip value\n   * @param allowEmptyString Set it to true to allow the title to be set to `''`. This is necessary\n   * when the browser adds a default tooltip the element and the tooltip service will be displayed\n   * next to a browser tooltip causing confusion.\n   */\n  setBrowserTooltip(tooltip, allowEmptyString) {\n    const name = \"title\";\n    const eGui = this.ctrl.getGui();\n    if (!eGui) {\n      return;\n    }\n    if (tooltip != null && (tooltip != \"\" || allowEmptyString)) {\n      eGui.setAttribute(name, tooltip);\n    } else {\n      eGui.removeAttribute(name);\n    }\n  }\n  updateTooltipText() {\n    const {\n      getTooltipValue\n    } = this.ctrl;\n    if (getTooltipValue) {\n      this.tooltip = getTooltipValue();\n    }\n  }\n  createTooltipFeatureIfNeeded() {\n    if (this.tooltipManager == null) {\n      this.tooltipManager = this.createBean(new TooltipStateManager(this.ctrl, () => this.tooltip), this.beans.context);\n    }\n  }\n  setTooltipAndRefresh(tooltip) {\n    this.tooltip = tooltip;\n    this.refreshTooltip();\n  }\n  refreshTooltip(clearWithEmptyString) {\n    this.browserTooltips = this.beans.gos.get(\"enableBrowserTooltips\");\n    this.updateTooltipText();\n    if (this.browserTooltips) {\n      this.setBrowserTooltip(this.tooltip);\n      this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\n    } else {\n      this.setBrowserTooltip(clearWithEmptyString ? \"\" : null, clearWithEmptyString);\n      this.createTooltipFeatureIfNeeded();\n    }\n  }\n  destroy() {\n    this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/utils/number.ts\nfunction _formatNumberCommas(value, getLocaleTextFunc) {\n  if (typeof value !== \"number\") {\n    return \"\";\n  }\n  const localeTextFunc = getLocaleTextFunc();\n  const thousandSeparator = localeTextFunc(\"thousandSeparator\", \",\");\n  const decimalSeparator = localeTextFunc(\"decimalSeparator\", \".\");\n  return value.toString().replace(\".\", decimalSeparator).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, `$1${thousandSeparator}`);\n}\n\n// packages/ag-grid-community/src/export/baseCreator.ts\nvar BaseCreator = class extends BeanStub {\n  getFileName(fileName) {\n    const extension = this.getDefaultFileExtension();\n    if (fileName == null || !fileName.length) {\n      fileName = this.getDefaultFileName();\n    }\n    return fileName.indexOf(\".\") === -1 ? `${fileName}.${extension}` : fileName;\n  }\n  getData(params) {\n    const serializingSession = this.createSerializingSession(params);\n    return this.beans.gridSerializer.serialize(serializingSession, params);\n  }\n  getDefaultFileName() {\n    return `export.${this.getDefaultFileExtension()}`;\n  }\n};\n\n// packages/ag-grid-community/src/export/baseGridSerializingSession.ts\nvar BaseGridSerializingSession = class {\n  constructor(config) {\n    const {\n      colModel,\n      rowGroupColsSvc,\n      colNames,\n      valueSvc,\n      gos,\n      processCellCallback,\n      processHeaderCallback,\n      processGroupHeaderCallback,\n      processRowGroupCallback\n    } = config;\n    this.colModel = colModel;\n    this.rowGroupColsSvc = rowGroupColsSvc;\n    this.colNames = colNames;\n    this.valueSvc = valueSvc;\n    this.gos = gos;\n    this.processCellCallback = processCellCallback;\n    this.processHeaderCallback = processHeaderCallback;\n    this.processGroupHeaderCallback = processGroupHeaderCallback;\n    this.processRowGroupCallback = processRowGroupCallback;\n  }\n  prepare(_columnsToExport) {}\n  extractHeaderValue(column) {\n    const value = this.getHeaderName(this.processHeaderCallback, column);\n    return value ?? \"\";\n  }\n  extractRowCellValue(column, currentColumnIndex, accumulatedRowIndex, type, node) {\n    const isFullWidthGroup = currentColumnIndex === 0 && _isFullWidthGroupRow(this.gos, node, this.colModel.isPivotMode());\n    if (this.processRowGroupCallback && (this.gos.get(\"treeData\") || node.group) && (column.isRowGroupDisplayed(node.rowGroupColumn?.getColId() ?? \"\") || isFullWidthGroup)) {\n      return {\n        value: this.processRowGroupCallback(_addGridCommonParams(this.gos, {\n          column,\n          node\n        })) ?? \"\"\n      };\n    }\n    if (this.processCellCallback) {\n      return {\n        value: this.processCellCallback(_addGridCommonParams(this.gos, {\n          accumulatedRowIndex,\n          column,\n          node,\n          value: this.valueSvc.getValueForDisplay(column, node, void 0, void 0).value,\n          type,\n          parseValue: valueToParse => this.valueSvc.parseValue(column, node, valueToParse, this.valueSvc.getValue(column, node, void 0)),\n          formatValue: valueToFormat => this.valueSvc.formatValue(column, node, valueToFormat) ?? valueToFormat\n        })) ?? \"\"\n      };\n    }\n    const isTreeData = this.gos.get(\"treeData\");\n    const valueService = this.valueSvc;\n    const isGrandTotalRow = node.level === -1 && node.footer;\n    const isMultiAutoCol = column.colDef.showRowGroup === true && (node.group || isTreeData);\n    if (!isGrandTotalRow && (isFullWidthGroup || isMultiAutoCol)) {\n      let concatenatedGroupValue = \"\";\n      let pointer = node;\n      while (pointer && pointer.level !== -1) {\n        const {\n          value: value2,\n          valueFormatted: valueFormatted2\n        } = valueService.getValueForDisplay(isFullWidthGroup ? void 0 : column,\n        // full width group doesn't have a column\n        pointer, true, true);\n        concatenatedGroupValue = ` -> ${valueFormatted2 ?? value2 ?? \"\"}${concatenatedGroupValue}`;\n        pointer = pointer.parent;\n      }\n      return {\n        value: concatenatedGroupValue,\n        // don't return the unformatted value; as if the grid detects number it'll not use the concatenated string\n        valueFormatted: concatenatedGroupValue\n      };\n    }\n    const {\n      value,\n      valueFormatted\n    } = valueService.getValueForDisplay(column, node, true, true);\n    return {\n      value: value ?? \"\",\n      valueFormatted\n    };\n  }\n  getHeaderName(callback, column) {\n    if (callback) {\n      return callback(_addGridCommonParams(this.gos, {\n        column\n      }));\n    }\n    return this.colNames.getDisplayNameForColumn(column, \"csv\", true);\n  }\n};\n\n// packages/ag-grid-community/src/export/downloader.ts\nfunction _downloadFile(fileName, content) {\n  const win = document.defaultView || window;\n  if (!win) {\n    _warn(52);\n    return;\n  }\n  const element = document.createElement(\"a\");\n  const url = win.URL.createObjectURL(content);\n  element.setAttribute(\"href\", url);\n  element.setAttribute(\"download\", fileName);\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n  element.dispatchEvent(new MouseEvent(\"click\", {\n    bubbles: false,\n    cancelable: true,\n    view: win\n  }));\n  document.body.removeChild(element);\n  win.setTimeout(() => {\n    win.URL.revokeObjectURL(url);\n  }, 0);\n}\n\n// packages/ag-grid-community/src/gridOptionsInitial.ts\nvar INITIAL_GRID_OPTION_KEYS = {\n  enableBrowserTooltips: true,\n  tooltipTrigger: true,\n  tooltipMouseTrack: true,\n  tooltipShowMode: true,\n  tooltipInteraction: true,\n  defaultColGroupDef: true,\n  suppressAutoSize: true,\n  skipHeaderOnAutoSize: true,\n  autoSizeStrategy: true,\n  components: true,\n  stopEditingWhenCellsLoseFocus: true,\n  undoRedoCellEditing: true,\n  undoRedoCellEditingLimit: true,\n  excelStyles: true,\n  cacheQuickFilter: true,\n  customChartThemes: true,\n  chartThemeOverrides: true,\n  chartToolPanelsDef: true,\n  loadingCellRendererSelector: true,\n  localeText: true,\n  keepDetailRows: true,\n  keepDetailRowsCount: true,\n  detailRowHeight: true,\n  detailRowAutoHeight: true,\n  tabIndex: true,\n  valueCache: true,\n  valueCacheNeverExpires: true,\n  enableCellExpressions: true,\n  suppressTouch: true,\n  suppressBrowserResizeObserver: true,\n  suppressPropertyNamesCheck: true,\n  debug: true,\n  dragAndDropImageComponent: true,\n  loadingOverlayComponent: true,\n  suppressLoadingOverlay: true,\n  noRowsOverlayComponent: true,\n  paginationPageSizeSelector: true,\n  paginateChildRows: true,\n  pivotPanelShow: true,\n  pivotSuppressAutoColumn: true,\n  suppressExpandablePivotGroups: true,\n  aggFuncs: true,\n  allowShowChangeAfterFilter: true,\n  ensureDomOrder: true,\n  enableRtl: true,\n  suppressColumnVirtualisation: true,\n  suppressMaxRenderedRowRestriction: true,\n  suppressRowVirtualisation: true,\n  rowDragText: true,\n  groupLockGroupColumns: true,\n  suppressGroupRowsSticky: true,\n  rowModelType: true,\n  cacheOverflowSize: true,\n  infiniteInitialRowCount: true,\n  serverSideInitialRowCount: true,\n  maxBlocksInCache: true,\n  maxConcurrentDatasourceRequests: true,\n  blockLoadDebounceMillis: true,\n  serverSideOnlyRefreshFilteredGroups: true,\n  serverSidePivotResultFieldSeparator: true,\n  viewportRowModelPageSize: true,\n  viewportRowModelBufferSize: true,\n  debounceVerticalScrollbar: true,\n  suppressAnimationFrame: true,\n  suppressPreventDefaultOnMouseWheel: true,\n  scrollbarWidth: true,\n  icons: true,\n  suppressRowTransform: true,\n  gridId: true,\n  enableGroupEdit: true,\n  initialState: true,\n  processUnpinnedColumns: true,\n  createChartContainer: true,\n  getLocaleText: true,\n  getRowId: true,\n  reactiveCustomComponents: true,\n  renderingMode: true,\n  columnMenu: true,\n  suppressSetFilterByDefault: true,\n  getDataPath: true,\n  enableCellSpan: true,\n  enableFilterHandlers: true,\n  filterHandlers: true\n};\n\n// packages/ag-grid-community/src/validation/apiFunctionValidator.ts\nvar clientSide = \"clientSide\";\nvar serverSide = \"serverSide\";\nvar infinite = \"infinite\";\nvar functionRowModels = {\n  onGroupExpandedOrCollapsed: [clientSide],\n  refreshClientSideRowModel: [clientSide],\n  isRowDataEmpty: [clientSide],\n  forEachLeafNode: [clientSide],\n  forEachNodeAfterFilter: [clientSide],\n  forEachNodeAfterFilterAndSort: [clientSide],\n  resetRowHeights: [clientSide],\n  applyTransaction: [clientSide],\n  applyTransactionAsync: [clientSide],\n  flushAsyncTransactions: [clientSide],\n  getBestCostNodeSelection: [clientSide],\n  getServerSideSelectionState: [serverSide],\n  setServerSideSelectionState: [serverSide],\n  applyServerSideTransaction: [serverSide],\n  applyServerSideTransactionAsync: [serverSide],\n  applyServerSideRowData: [serverSide],\n  retryServerSideLoads: [serverSide],\n  flushServerSideAsyncTransactions: [serverSide],\n  refreshServerSide: [serverSide],\n  getServerSideGroupLevelState: [serverSide],\n  refreshInfiniteCache: [infinite],\n  purgeInfiniteCache: [infinite],\n  getInfiniteRowCount: [infinite],\n  isLastRowIndexKnown: [infinite, serverSide],\n  expandAll: [clientSide, serverSide],\n  collapseAll: [clientSide, serverSide],\n  onRowHeightChanged: [clientSide, serverSide],\n  setRowCount: [infinite, serverSide],\n  getCacheBlockState: [infinite, serverSide]\n};\nvar deprecatedFunctions = {\n  showLoadingOverlay: {\n    version: \"v32\",\n    message: '`showLoadingOverlay` is deprecated. Use the grid option \"loading\"=true instead or setGridOption(\"loading\", true).'\n  },\n  clearRangeSelection: {\n    version: \"v32.2\",\n    message: \"Use `clearCellSelection` instead.\"\n  },\n  getInfiniteRowCount: {\n    version: \"v32.2\",\n    old: \"getInfiniteRowCount()\",\n    new: \"getDisplayedRowCount()\"\n  },\n  selectAllFiltered: {\n    version: \"v33\",\n    old: \"selectAllFiltered()\",\n    new: 'selectAll(\"filtered\")'\n  },\n  deselectAllFiltered: {\n    version: \"v33\",\n    old: \"deselectAllFiltered()\",\n    new: 'deselectAll(\"filtered\")'\n  },\n  selectAllOnCurrentPage: {\n    version: \"v33\",\n    old: \"selectAllOnCurrentPage()\",\n    new: 'selectAll(\"currentPage\")'\n  },\n  deselectAllOnCurrentPage: {\n    version: \"v33\",\n    old: \"deselectAllOnCurrentPage()\",\n    new: 'deselectAll(\"currentPage\")'\n  }\n};\nfunction validateApiFunction(functionName, apiFunction, beans) {\n  const deprecation = deprecatedFunctions[functionName];\n  if (deprecation) {\n    const {\n      version,\n      new: replacement,\n      old,\n      message\n    } = deprecation;\n    const apiMethod = old ?? functionName;\n    return (...args) => {\n      const replacementMessage = replacement ? `Please use ${replacement} instead. ` : \"\";\n      _warnOnce(`Since ${version} api.${apiMethod} is deprecated. ${replacementMessage}${message ?? \"\"}`);\n      return apiFunction.apply(apiFunction, args);\n    };\n  }\n  const rowModels = functionRowModels[functionName];\n  if (rowModels) {\n    return (...args) => {\n      const rowModel = beans.rowModel.getType();\n      if (!rowModels.includes(rowModel)) {\n        _errorOnce(`api.${functionName} can only be called when gridOptions.rowModelType is ${rowModels.join(\" or \")}`);\n        return void 0;\n      }\n      return apiFunction.apply(apiFunction, args);\n    };\n  }\n  return apiFunction;\n}\n\n// packages/ag-grid-community/src/validation/rules/dynamicBeanValidations.ts\nvar DYNAMIC_BEAN_MODULES = {\n  detailCellRendererCtrl: \"SharedMasterDetail\",\n  dndSourceComp: \"DragAndDrop\",\n  fillHandle: \"CellSelection\",\n  groupCellRendererCtrl: \"GroupCellRenderer\",\n  headerFilterCellCtrl: \"ColumnFilter\",\n  headerGroupCellCtrl: \"ColumnGroup\",\n  rangeHandle: \"CellSelection\",\n  tooltipFeature: \"Tooltip\",\n  groupStrategy: \"RowGrouping\",\n  treeGroupStrategy: \"TreeData\",\n  rowNumberRowResizer: \"RowNumbers\",\n  singleCell: \"EditCore\",\n  fullRow: \"EditCore\",\n  agSetColumnFilterHandler: \"SetFilter\",\n  agMultiColumnFilterHandler: \"MultiFilter\",\n  agGroupColumnFilterHandler: \"GroupFilter\",\n  agNumberColumnFilterHandler: \"NumberFilter\",\n  agDateColumnFilterHandler: \"DateFilter\",\n  agTextColumnFilterHandler: \"TextFilter\"\n};\n\n// packages/ag-grid-community/src/validation/rules/iconValidations.ts\nvar ICON_VALUES = {\n  expanded: 1,\n  contracted: 1,\n  \"tree-closed\": 1,\n  \"tree-open\": 1,\n  \"tree-indeterminate\": 1,\n  pin: 1,\n  \"eye-slash\": 1,\n  arrows: 1,\n  left: 1,\n  right: 1,\n  group: 1,\n  aggregation: 1,\n  pivot: 1,\n  \"not-allowed\": 1,\n  chart: 1,\n  cross: 1,\n  cancel: 1,\n  tick: 1,\n  first: 1,\n  previous: 1,\n  next: 1,\n  last: 1,\n  linked: 1,\n  unlinked: 1,\n  \"color-picker\": 1,\n  loading: 1,\n  menu: 1,\n  \"menu-alt\": 1,\n  filter: 1,\n  \"filter-add\": 1,\n  columns: 1,\n  maximize: 1,\n  minimize: 1,\n  copy: 1,\n  cut: 1,\n  paste: 1,\n  grip: 1,\n  save: 1,\n  csv: 1,\n  excel: 1,\n  \"small-down\": 1,\n  \"small-left\": 1,\n  \"small-right\": 1,\n  \"small-up\": 1,\n  asc: 1,\n  desc: 1,\n  none: 1,\n  up: 1,\n  down: 1,\n  plus: 1,\n  minus: 1,\n  settings: 1,\n  \"checkbox-checked\": 1,\n  \"checkbox-indeterminate\": 1,\n  \"checkbox-unchecked\": 1,\n  \"radio-button-on\": 1,\n  \"radio-button-off\": 1,\n  eye: 1,\n  \"column-arrow\": 1,\n  \"un-pin\": 1,\n  \"pinned-top\": 1,\n  \"pinned-bottom\": 1,\n  \"chevron-up\": 1,\n  \"chevron-down\": 1,\n  \"chevron-left\": 1,\n  \"chevron-right\": 1,\n  edit: 1\n};\nvar ICON_MODULES = {\n  chart: \"MenuCore\",\n  cancel: \"EnterpriseCore\",\n  first: \"Pagination\",\n  previous: \"Pagination\",\n  next: \"Pagination\",\n  last: \"Pagination\",\n  linked: \"IntegratedCharts\",\n  loadingMenuItems: \"MenuCore\",\n  unlinked: \"IntegratedCharts\",\n  menu: \"ColumnHeaderComp\",\n  legacyMenu: \"ColumnMenu\",\n  filter: \"ColumnFilter\",\n  filterActive: \"ColumnFilter\",\n  filterAdd: \"NewFiltersToolPanel\",\n  filterCardCollapse: \"NewFiltersToolPanel\",\n  filterCardExpand: \"NewFiltersToolPanel\",\n  filterCardEditing: \"NewFiltersToolPanel\",\n  filterTab: \"ColumnMenu\",\n  filtersToolPanel: \"FiltersToolPanel\",\n  columns: [\"MenuCore\"],\n  columnsToolPanel: [\"ColumnsToolPanel\"],\n  maximize: \"EnterpriseCore\",\n  minimize: \"EnterpriseCore\",\n  save: \"MenuCore\",\n  columnGroupOpened: \"ColumnGroupHeaderComp\",\n  columnGroupClosed: \"ColumnGroupHeaderComp\",\n  accordionOpen: \"EnterpriseCore\",\n  accordionClosed: \"EnterpriseCore\",\n  accordionIndeterminate: \"EnterpriseCore\",\n  columnSelectClosed: [\"ColumnsToolPanel\", \"ColumnMenu\"],\n  columnSelectOpen: [\"ColumnsToolPanel\", \"ColumnMenu\"],\n  columnSelectIndeterminate: [\"ColumnsToolPanel\", \"ColumnMenu\"],\n  columnMovePin: \"SharedDragAndDrop\",\n  columnMoveHide: \"SharedDragAndDrop\",\n  columnMoveMove: \"SharedDragAndDrop\",\n  columnMoveLeft: \"SharedDragAndDrop\",\n  columnMoveRight: \"SharedDragAndDrop\",\n  columnMoveGroup: \"SharedDragAndDrop\",\n  columnMoveValue: \"SharedDragAndDrop\",\n  columnMovePivot: \"SharedDragAndDrop\",\n  dropNotAllowed: \"SharedDragAndDrop\",\n  ensureColumnVisible: [\"ColumnsToolPanel\", \"ColumnMenu\"],\n  groupContracted: \"GroupCellRenderer\",\n  groupExpanded: \"GroupCellRenderer\",\n  setFilterGroupClosed: \"SetFilter\",\n  setFilterGroupOpen: \"SetFilter\",\n  setFilterGroupIndeterminate: \"SetFilter\",\n  setFilterLoading: \"SetFilter\",\n  close: \"EnterpriseCore\",\n  check: \"MenuItem\",\n  colorPicker: \"CommunityCore\",\n  groupLoading: \"LoadingCellRenderer\",\n  menuAlt: \"ColumnHeaderComp\",\n  menuPin: \"MenuCore\",\n  menuValue: \"MenuCore\",\n  menuAddRowGroup: [\"MenuCore\", \"ColumnsToolPanel\"],\n  menuRemoveRowGroup: [\"MenuCore\", \"ColumnsToolPanel\"],\n  clipboardCopy: \"MenuCore\",\n  clipboardCut: \"MenuCore\",\n  clipboardPaste: \"MenuCore\",\n  pivotPanel: [\"ColumnsToolPanel\", \"RowGroupingPanel\"],\n  rowGroupPanel: [\"ColumnsToolPanel\", \"RowGroupingPanel\"],\n  valuePanel: \"ColumnsToolPanel\",\n  columnDrag: \"EnterpriseCore\",\n  rowDrag: [\"RowDrag\", \"DragAndDrop\"],\n  csvExport: \"MenuCore\",\n  excelExport: \"MenuCore\",\n  smallDown: \"CommunityCore\",\n  selectOpen: \"CommunityCore\",\n  richSelectOpen: \"RichSelect\",\n  richSelectRemove: \"RichSelect\",\n  smallLeft: \"CommunityCore\",\n  smallRight: \"CommunityCore\",\n  subMenuOpen: \"MenuItem\",\n  subMenuOpenRtl: \"MenuItem\",\n  panelDelimiter: \"RowGroupingPanel\",\n  panelDelimiterRtl: \"RowGroupingPanel\",\n  smallUp: \"CommunityCore\",\n  sortAscending: [\"MenuCore\", \"Sort\"],\n  sortDescending: [\"MenuCore\", \"Sort\"],\n  sortUnSort: [\"MenuCore\", \"Sort\"],\n  advancedFilterBuilder: \"AdvancedFilter\",\n  advancedFilterBuilderDrag: \"AdvancedFilter\",\n  advancedFilterBuilderInvalid: \"AdvancedFilter\",\n  advancedFilterBuilderMoveUp: \"AdvancedFilter\",\n  advancedFilterBuilderMoveDown: \"AdvancedFilter\",\n  advancedFilterBuilderAdd: \"AdvancedFilter\",\n  advancedFilterBuilderRemove: \"AdvancedFilter\",\n  advancedFilterBuilderSelectOpen: \"AdvancedFilter\",\n  chartsMenu: \"IntegratedCharts\",\n  chartsMenuEdit: \"IntegratedCharts\",\n  chartsMenuAdvancedSettings: \"IntegratedCharts\",\n  chartsMenuAdd: \"IntegratedCharts\",\n  chartsColorPicker: \"IntegratedCharts\",\n  chartsThemePrevious: \"IntegratedCharts\",\n  chartsThemeNext: \"IntegratedCharts\",\n  chartsDownload: \"IntegratedCharts\",\n  checkboxChecked: \"CommunityCore\",\n  checkboxIndeterminate: \"CommunityCore\",\n  checkboxUnchecked: \"CommunityCore\",\n  radioButtonOn: \"CommunityCore\",\n  radioButtonOff: \"CommunityCore\",\n  rowPin: \"PinnedRow\",\n  rowUnpin: \"PinnedRow\",\n  rowPinBottom: \"PinnedRow\",\n  rowPinTop: \"PinnedRow\"\n};\nvar DEPRECATED_ICONS_V33 = /* @__PURE__ */new Set([\"colorPicker\", \"smallUp\", \"checkboxChecked\", \"checkboxIndeterminate\", \"checkboxUnchecked\", \"radioButtonOn\", \"radioButtonOff\", \"smallDown\", \"smallLeft\", \"smallRight\"]);\n\n// packages/ag-grid-community/src/validation/validationService.ts\nvar ValidationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"validation\";\n  }\n  wireBeans(beans) {\n    this.gridOptions = beans.gridOptions;\n    provideValidationServiceLogger(this);\n  }\n  warnOnInitialPropertyUpdate(source, key) {\n    if (source === \"api\" && INITIAL_GRID_OPTION_KEYS[key]) {\n      _warn(22, {\n        key\n      });\n    }\n  }\n  processGridOptions(options) {\n    this.processOptions(options, GRID_OPTIONS_VALIDATORS());\n  }\n  validateApiFunction(functionName, apiFunction) {\n    return validateApiFunction(functionName, apiFunction, this.beans);\n  }\n  missingUserComponent(propertyName, componentName, agGridDefaults, jsComps) {\n    const moduleForComponent = USER_COMP_MODULES[componentName];\n    if (moduleForComponent) {\n      this.gos.assertModuleRegistered(moduleForComponent, `AG Grid '${propertyName}' component: ${componentName}`);\n    } else {\n      _warn(101, {\n        propertyName,\n        componentName,\n        agGridDefaults,\n        jsComps\n      });\n    }\n  }\n  missingDynamicBean(beanName) {\n    const moduleName = DYNAMIC_BEAN_MODULES[beanName];\n    return moduleName ? _errMsg(200, {\n      ...this.gos.getModuleErrorParams(),\n      moduleName,\n      reasonOrId: beanName\n    }) : void 0;\n  }\n  checkRowEvents(eventType) {\n    if (DEPRECATED_ROW_NODE_EVENTS.has(eventType)) {\n      _warn(10, {\n        eventType\n      });\n    }\n  }\n  validateIcon(iconName) {\n    if (DEPRECATED_ICONS_V33.has(iconName)) {\n      _warn(43, {\n        iconName\n      });\n    }\n    if (ICON_VALUES[iconName]) {\n      return;\n    }\n    const moduleName = ICON_MODULES[iconName];\n    if (moduleName) {\n      _error(200, {\n        reasonOrId: `icon '${iconName}'`,\n        moduleName,\n        gridScoped: _areModulesGridScoped(),\n        gridId: this.beans.context.getGridId(),\n        rowModelType: this.gos.get(\"rowModelType\"),\n        additionalText: \"Alternatively, use the CSS icon name directly.\"\n      });\n      return;\n    }\n    _warn(134, {\n      iconName\n    });\n  }\n  isProvidedUserComp(compName) {\n    return !!USER_COMP_MODULES[compName];\n  }\n  /** Should only be called via the GridOptionsService */\n  validateColDef(colDef) {\n    this.processOptions(colDef, COL_DEF_VALIDATORS());\n  }\n  processOptions(options, validator) {\n    const {\n      validations,\n      deprecations,\n      allProperties,\n      propertyExceptions,\n      objectName,\n      docsUrl\n    } = validator;\n    if (allProperties && this.gridOptions.suppressPropertyNamesCheck !== true) {\n      this.checkProperties(options, [...(propertyExceptions ?? []), ...Object.keys(deprecations)], allProperties, objectName, docsUrl);\n    }\n    const warnings = /* @__PURE__ */new Set();\n    const optionKeys = Object.keys(options);\n    optionKeys.forEach(key => {\n      const deprecation = deprecations[key];\n      if (deprecation) {\n        const {\n          message,\n          version\n        } = deprecation;\n        warnings.add(`As of v${version}, ${String(key)} is deprecated. ${message ?? \"\"}`);\n      }\n      const value = options[key];\n      if (value == null || value === false) {\n        return;\n      }\n      const rules = validations[key];\n      if (!rules) {\n        return;\n      }\n      const {\n        dependencies,\n        validate,\n        supportedRowModels,\n        expectedType\n      } = rules;\n      if (expectedType) {\n        const actualType = typeof value;\n        if (actualType !== expectedType) {\n          warnings.add(`${String(key)} should be of type '${expectedType}' but received '${actualType}' (${value}).`);\n          return;\n        }\n      }\n      if (supportedRowModels) {\n        const rowModel = this.gridOptions.rowModelType ?? \"clientSide\";\n        if (!supportedRowModels.includes(rowModel)) {\n          warnings.add(`${String(key)} is not supported with the '${rowModel}' row model. It is only valid with: ${supportedRowModels.join(\", \")}.`);\n          return;\n        }\n      }\n      if (dependencies) {\n        const warning = this.checkForRequiredDependencies(key, dependencies, options);\n        if (warning) {\n          warnings.add(warning);\n          return;\n        }\n      }\n      if (validate) {\n        const warning = validate(options, this.gridOptions, this.beans);\n        if (warning) {\n          warnings.add(warning);\n          return;\n        }\n      }\n    });\n    if (warnings.size > 0) {\n      warnings.forEach(warning => {\n        _warnOnce(warning);\n      });\n    }\n  }\n  checkForRequiredDependencies(key, validator, options) {\n    const optionEntries = Object.entries(validator);\n    const failedOptions = optionEntries.filter(([key2, value]) => {\n      const gridOptionValue = options[key2];\n      return !value.required.includes(gridOptionValue);\n    });\n    if (failedOptions.length === 0) {\n      return null;\n    }\n    return failedOptions.map(([failedKey, possibleOptions]) => `'${String(key)}' requires '${failedKey}' to be one of [${possibleOptions.required.map(o => {\n      if (o === null) {\n        return \"null\";\n      } else if (o === void 0) {\n        return \"undefined\";\n      }\n      return o;\n    }).join(\", \")}]. ${possibleOptions.reason ?? \"\"}`).join(\"\\n           \");\n  }\n  checkProperties(object, exceptions, validProperties, containerName, docsUrl) {\n    const VUE_FRAMEWORK_PROPS = [\"__ob__\", \"__v_skip\", \"__metadata__\"];\n    const invalidProperties = _fuzzyCheckStrings(Object.getOwnPropertyNames(object), [...VUE_FRAMEWORK_PROPS, ...exceptions, ...validProperties], validProperties);\n    const invalidPropertiesKeys = Object.keys(invalidProperties);\n    for (const key of invalidPropertiesKeys) {\n      const value = invalidProperties[key];\n      let message = `invalid ${containerName} property '${key}' did you mean any of these: ${value.slice(0, 8).join(\", \")}.`;\n      if (validProperties.includes(\"context\")) {\n        message += `\nIf you are trying to annotate ${containerName} with application data, use the '${containerName}.context' property instead.`;\n      }\n      _warnOnce(message);\n    }\n    if (invalidPropertiesKeys.length > 0 && docsUrl) {\n      const url = this.beans.frameworkOverrides.getDocLink(docsUrl);\n      _warnOnce(`to see all the valid ${containerName} properties please check: ${url}`);\n    }\n  }\n  getConsoleMessage(id, args) {\n    return getError(id, args);\n  }\n};\nfunction _fuzzyCheckStrings(inputValues, validValues, allSuggestions) {\n  const fuzzyMatches = {};\n  const invalidInputs = inputValues.filter(inputValue => !validValues.some(validValue => validValue === inputValue));\n  if (invalidInputs.length > 0) {\n    invalidInputs.forEach(invalidInput => fuzzyMatches[invalidInput] = _fuzzySuggestions({\n      inputValue: invalidInput,\n      allSuggestions\n    }).values);\n  }\n  return fuzzyMatches;\n}\nvar DEPRECATED_ROW_NODE_EVENTS = /* @__PURE__ */new Set([\"firstChildChanged\", \"lastChildChanged\", \"childIndexChanged\"]);\n\n// packages/ag-grid-community/src/validation/validationModule.ts\nvar ValidationModule = {\n  moduleName: \"Validation\",\n  version: VERSION,\n  beans: [ValidationService]\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/filterStage.ts\nfunction updateRowNodeAfterFilter(rowNode) {\n  if (rowNode.sibling) {\n    rowNode.sibling.childrenAfterFilter = rowNode.childrenAfterFilter;\n  }\n}\nvar FilterStage = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterStage\";\n    this.refreshProps = /* @__PURE__ */new Set([\"excludeChildrenWhenTreeDataFiltering\"]);\n    this.step = \"filter\";\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n  }\n  execute(params) {\n    const {\n      changedPath\n    } = params;\n    this.filter(changedPath);\n  }\n  filter(changedPath) {\n    const filterActive = !!this.filterManager?.isChildFilterPresent();\n    this.filterNodes(filterActive, changedPath);\n  }\n  filterNodes(filterActive, changedPath) {\n    const filterCallback = (rowNode, includeChildNodes) => {\n      if (rowNode.hasChildren()) {\n        if (filterActive && !includeChildNodes) {\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup.filter(childNode => {\n            const passBecauseChildren = childNode.childrenAfterFilter && childNode.childrenAfterFilter.length > 0;\n            const passBecauseDataPasses = childNode.data && this.filterManager.doesRowPassFilter({\n              rowNode: childNode\n            });\n            return passBecauseChildren || passBecauseDataPasses;\n          });\n        } else {\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n        }\n      } else {\n        rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n      }\n      updateRowNodeAfterFilter(rowNode);\n    };\n    if (this.doingTreeDataFiltering()) {\n      const treeDataDepthFirstFilter = (rowNode, alreadyFoundInParent) => {\n        if (rowNode.childrenAfterGroup) {\n          for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n            const childNode = rowNode.childrenAfterGroup[i];\n            const foundInParent = alreadyFoundInParent || this.filterManager.doesRowPassFilter({\n              rowNode: childNode\n            });\n            if (childNode.childrenAfterGroup) {\n              treeDataDepthFirstFilter(rowNode.childrenAfterGroup[i], foundInParent);\n            } else {\n              filterCallback(childNode, foundInParent);\n            }\n          }\n        }\n        filterCallback(rowNode, alreadyFoundInParent);\n      };\n      const treeDataFilterCallback = rowNode => treeDataDepthFirstFilter(rowNode, false);\n      changedPath.executeFromRootNode(treeDataFilterCallback);\n    } else {\n      const defaultFilterCallback = rowNode => filterCallback(rowNode, false);\n      changedPath.forEachChangedNodeDepthFirst(defaultFilterCallback, true);\n    }\n  }\n  doingTreeDataFiltering() {\n    return this.gos.get(\"treeData\") && !this.gos.get(\"excludeChildrenWhenTreeDataFiltering\");\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/floatingFilter/headerFilterCellCtrl.ts\nvar HeaderFilterCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor() {\n    super(...arguments);\n    this.iconCreated = false;\n  }\n  setComp(comp, eGui, eButtonShowMainFilter, eFloatingFilterBody, compBeanInput) {\n    this.comp = comp;\n    const compBean = setupCompBean(this, this.beans.context, compBeanInput);\n    this.eButtonShowMainFilter = eButtonShowMainFilter;\n    this.eFloatingFilterBody = eFloatingFilterBody;\n    this.setGui(eGui, compBean);\n    this.setupActive();\n    this.refreshHeaderStyles();\n    this.setupWidth(compBean);\n    this.setupLeft(compBean);\n    this.setupHover(compBean);\n    this.setupFocus(compBean);\n    this.setupAria();\n    this.setupFilterButton();\n    this.setupUserComp();\n    this.setupSyncWithFilter(compBean);\n    this.setupUi();\n    compBean.addManagedElementListeners(this.eButtonShowMainFilter, {\n      click: this.showParentFilter.bind(this)\n    });\n    this.setupFilterChangedListener(compBean);\n    const colDefChanged = () => this.onColDefChanged(compBean);\n    compBean.addManagedListeners(this.column, {\n      colDefChanged\n    });\n    compBean.addManagedEventListeners({\n      filterSwitched: ({\n        column\n      }) => {\n        if (column === this.column) {\n          colDefChanged();\n        }\n      }\n    });\n    compBean.addDestroyFunc(() => {\n      this.eButtonShowMainFilter = null;\n      this.eFloatingFilterBody = null;\n      this.userCompDetails = null;\n      this.clearComponent();\n    });\n  }\n  // empty abstract method\n  resizeHeader() {}\n  moveHeader() {}\n  getHeaderClassParams() {\n    const {\n      column,\n      beans\n    } = this;\n    const colDef = column.colDef;\n    return _addGridCommonParams(beans.gos, {\n      colDef,\n      column,\n      floatingFilter: true\n    });\n  }\n  setupActive() {\n    const colDef = this.column.getColDef();\n    const filterExists = !!colDef.filter;\n    const floatingFilterExists = !!colDef.floatingFilter;\n    this.active = filterExists && floatingFilterExists;\n  }\n  setupUi() {\n    this.comp.setButtonWrapperDisplayed(!this.suppressFilterButton && this.active);\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-full-body\", this.suppressFilterButton);\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-body\", !this.suppressFilterButton);\n    if (!this.active || this.iconCreated) {\n      return;\n    }\n    const eMenuIcon = _createIconNoSpan(\"filter\", this.beans, this.column);\n    if (eMenuIcon) {\n      this.iconCreated = true;\n      this.eButtonShowMainFilter.appendChild(eMenuIcon);\n    }\n  }\n  setupFocus(compBean) {\n    compBean.createManagedBean(new ManagedFocusFeature(this.eGui, {\n      shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n      onTabKeyDown: this.onTabKeyDown.bind(this),\n      handleKeyDown: this.handleKeyDown.bind(this),\n      onFocusIn: this.onFocusIn.bind(this)\n    }));\n  }\n  setupAria() {\n    const localeTextFunc = this.getLocaleTextFunc();\n    _setAriaLabel(this.eButtonShowMainFilter, localeTextFunc(\"ariaFilterMenuOpen\", \"Open Filter Menu\"));\n  }\n  onTabKeyDown(e) {\n    const {\n      beans\n    } = this;\n    const activeEl = _getActiveDomElement(beans);\n    const wrapperHasFocus = activeEl === this.eGui;\n    if (wrapperHasFocus) {\n      return;\n    }\n    const nextFocusableEl = _findNextFocusableElement(beans, this.eGui, null, e.shiftKey);\n    if (nextFocusableEl) {\n      beans.headerNavigation?.scrollToColumn(this.column);\n      e.preventDefault();\n      nextFocusableEl.focus();\n      return;\n    }\n    const nextFocusableColumn = this.findNextColumnWithFloatingFilter(e.shiftKey);\n    if (!nextFocusableColumn) {\n      return;\n    }\n    if (beans.focusSvc.focusHeaderPosition({\n      headerPosition: {\n        headerRowIndex: this.rowCtrl.rowIndex,\n        column: nextFocusableColumn\n      },\n      event: e\n    })) {\n      e.preventDefault();\n    }\n  }\n  findNextColumnWithFloatingFilter(backwards) {\n    const presentedColsService = this.beans.visibleCols;\n    let nextCol = this.column;\n    do {\n      nextCol = backwards ? presentedColsService.getColBefore(nextCol) : presentedColsService.getColAfter(nextCol);\n      if (!nextCol) {\n        break;\n      }\n    } while (!nextCol.getColDef().filter || !nextCol.getColDef().floatingFilter);\n    return nextCol;\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n        if (wrapperHasFocus) {\n          return;\n        }\n        _stopPropagationForAgGrid(e);\n      case KeyCode.ENTER:\n        if (wrapperHasFocus) {\n          if (_focusInto(this.eGui)) {\n            e.preventDefault();\n          }\n        }\n        break;\n      case KeyCode.ESCAPE:\n        if (!wrapperHasFocus) {\n          this.eGui.focus();\n        }\n    }\n  }\n  onFocusIn(e) {\n    const isRelatedWithin = this.eGui.contains(e.relatedTarget);\n    if (isRelatedWithin) {\n      return;\n    }\n    const notFromHeaderWrapper = !!e.relatedTarget && !e.relatedTarget.classList.contains(\"ag-floating-filter\");\n    const fromWithinHeader = !!e.relatedTarget && _isElementChildOfClass(e.relatedTarget, \"ag-floating-filter\");\n    if (notFromHeaderWrapper && fromWithinHeader && e.target === this.eGui) {\n      const lastFocusEvent = this.lastFocusEvent;\n      const fromTab = !!(lastFocusEvent && lastFocusEvent.key === KeyCode.TAB);\n      if (lastFocusEvent && fromTab) {\n        const shouldFocusLast = lastFocusEvent.shiftKey;\n        _focusInto(this.eGui, shouldFocusLast);\n      }\n    }\n    this.focusThis();\n  }\n  setupHover(compBean) {\n    this.beans.colHover?.addHeaderFilterColumnHoverListener(compBean, this.comp, this.column, this.eGui);\n  }\n  setupLeft(compBean) {\n    const setLeftFeature = new SetLeftFeature(this.column, this.eGui, this.beans);\n    compBean.createManagedBean(setLeftFeature);\n  }\n  setupFilterButton() {\n    this.suppressFilterButton = !this.beans.menuSvc?.isFloatingFilterButtonEnabled(this.column);\n    this.highlightFilterButtonWhenActive = !_isLegacyMenuEnabled(this.gos);\n  }\n  setupUserComp() {\n    if (!this.active) {\n      return;\n    }\n    const compDetails = this.beans.colFilter?.getFloatingFilterCompDetails(this.column, () => this.showParentFilter());\n    if (compDetails) {\n      this.setCompDetails(compDetails);\n    }\n  }\n  setCompDetails(compDetails) {\n    this.userCompDetails = compDetails;\n    this.comp.setCompDetails(compDetails);\n  }\n  showParentFilter() {\n    const eventSource = this.suppressFilterButton ? this.eFloatingFilterBody : this.eButtonShowMainFilter;\n    this.beans.menuSvc?.showFilterMenu({\n      column: this.column,\n      buttonElement: eventSource,\n      containerType: \"floatingFilter\",\n      positionBy: \"button\"\n    });\n  }\n  setupSyncWithFilter(compBean) {\n    if (!this.active) {\n      return;\n    }\n    const {\n      beans: {\n        colFilter\n      },\n      column,\n      gos\n    } = this;\n    const syncWithFilter = event => {\n      if (event?.source === \"filterDestroyed\" && (!this.isAlive() || !colFilter?.isAlive())) {\n        return;\n      }\n      const compPromise = this.comp.getFloatingFilterComp();\n      if (!compPromise) {\n        return;\n      }\n      compPromise.then(comp => {\n        if (comp) {\n          if (gos.get(\"enableFilterHandlers\")) {\n            const eventWithParams = event;\n            let source = \"filter\";\n            if (eventWithParams?.afterFloatingFilter) {\n              source = \"ui\";\n            } else if (eventWithParams?.afterDataChange) {\n              source = \"dataChanged\";\n            } else if (event?.source === \"api\") {\n              source = \"api\";\n            }\n            this.updateFloatingFilterParams(this.userCompDetails, source);\n            return;\n          }\n          const parentModel = colFilter?.getCurrentFloatingFilterParentModel(column);\n          const filterChangedEvent = event ? {\n            // event can have additional params like `afterDataChange` which need to be passed through\n            ...event,\n            columns: event.columns ?? [],\n            source: event.source === \"api\" ? \"api\" : \"columnFilter\"\n          } : null;\n          comp.onParentModelChanged(parentModel, filterChangedEvent);\n        }\n      });\n    };\n    [this.destroySyncListener] = compBean.addManagedListeners(column, {\n      filterChanged: syncWithFilter\n    });\n    if (colFilter?.isFilterActive(column)) {\n      syncWithFilter(null);\n    }\n  }\n  setupWidth(compBean) {\n    const listener = () => {\n      const width = `${this.column.getActualWidth()}px`;\n      this.comp.setWidth(width);\n    };\n    compBean.addManagedListeners(this.column, {\n      widthChanged: listener\n    });\n    listener();\n  }\n  setupFilterChangedListener(compBean) {\n    if (this.active) {\n      [this.destroyFilterChangedListener] = compBean.addManagedListeners(this.column, {\n        filterChanged: this.updateFilterButton.bind(this)\n      });\n      this.updateFilterButton();\n    }\n  }\n  updateFilterButton() {\n    if (!this.suppressFilterButton && this.comp) {\n      const isFilterAllowed = !!this.beans.filterManager?.isFilterAllowed(this.column);\n      this.comp.setButtonWrapperDisplayed(isFilterAllowed);\n      if (this.highlightFilterButtonWhenActive && isFilterAllowed) {\n        this.eButtonShowMainFilter.classList.toggle(\"ag-filter-active\", this.column.isFilterActive());\n      }\n    }\n  }\n  onColDefChanged(compBean) {\n    const wasActive = this.active;\n    this.setupActive();\n    const becomeActive = !wasActive && this.active;\n    if (wasActive && !this.active) {\n      this.destroySyncListener();\n      this.destroyFilterChangedListener();\n    }\n    const colFilter = this.beans.colFilter;\n    const newCompDetails = this.active ? colFilter?.getFloatingFilterCompDetails(this.column, () => this.showParentFilter()) : null;\n    const compPromise = this.comp.getFloatingFilterComp();\n    if (!compPromise || !newCompDetails) {\n      this.updateCompDetails(compBean, newCompDetails, becomeActive);\n    } else {\n      compPromise.then(compInstance => {\n        if (!compInstance || colFilter?.areFilterCompsDifferent(this.userCompDetails ?? null, newCompDetails)) {\n          this.updateCompDetails(compBean, newCompDetails, becomeActive);\n        } else {\n          this.updateFloatingFilterParams(newCompDetails, \"colDef\");\n        }\n      });\n    }\n  }\n  updateCompDetails(compBean, compDetails, becomeActive) {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.setCompDetails(compDetails);\n    this.setupFilterButton();\n    this.setupUi();\n    if (becomeActive) {\n      this.setupSyncWithFilter(compBean);\n      this.setupFilterChangedListener(compBean);\n    }\n  }\n  updateFloatingFilterParams(userCompDetails, source) {\n    if (!userCompDetails) {\n      return;\n    }\n    let params = userCompDetails.params;\n    this.comp.getFloatingFilterComp()?.then(floatingFilter => {\n      if (typeof floatingFilter?.refresh === \"function\") {\n        if (this.gos.get(\"enableFilterHandlers\")) {\n          params = {\n            ...params,\n            model: _getFilterModel(this.beans.colFilter?.model ?? {}, this.column.getColId()),\n            source\n          };\n        }\n        floatingFilter.refresh(params);\n      }\n    });\n  }\n  addResizeAndMoveKeyboardListeners() {}\n  destroy() {\n    super.destroy();\n    this.destroySyncListener = null;\n    this.destroyFilterChangedListener = null;\n  }\n};\n\n// packages/ag-grid-community/src/misc/menu/menuApi.ts\nfunction showColumnMenu(beans, colKey) {\n  const column = beans.colModel.getCol(colKey);\n  if (!column) {\n    _error(12, {\n      colKey\n    });\n    return;\n  }\n  beans.menuSvc?.showColumnMenu({\n    column,\n    positionBy: \"auto\"\n  });\n}\nfunction hidePopupMenu(beans) {\n  beans.menuSvc?.hidePopupMenu();\n}\n\n// packages/ag-grid-community/src/misc/menu/sharedMenuModule.ts\nvar SharedMenuModule = {\n  moduleName: \"SharedMenu\",\n  version: VERSION,\n  beans: [MenuService],\n  apiFunctions: {\n    showColumnMenu,\n    hidePopupMenu\n  }\n};\n\n// packages/ag-grid-community/src/widgets/popupService.ts\nvar instanceIdSeq = 0;\nvar WAIT_FOR_POPUP_CONTENT_RESIZE = 200;\nvar PopupService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"popupSvc\";\n    this.popupList = [];\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, p => {\n      this.gridCtrl = p.gridCtrl;\n    });\n    this.addManagedEventListeners({\n      gridStylesChanged: this.handleThemeChange.bind(this)\n    });\n  }\n  getPopupParent() {\n    const ePopupParent = this.gos.get(\"popupParent\");\n    if (ePopupParent) {\n      return ePopupParent;\n    }\n    return this.gridCtrl.getGui();\n  }\n  positionPopupForMenu(params) {\n    const {\n      eventSource,\n      ePopup,\n      column,\n      node,\n      event\n    } = params;\n    const sourceRect = eventSource.getBoundingClientRect();\n    const parentRect = this.getParentRect();\n    this.setAlignedTo(eventSource, ePopup);\n    let minWidthSet = false;\n    const updatePosition = () => {\n      const y = this.keepXYWithinBounds(ePopup, sourceRect.top - parentRect.top, 0 /* Vertical */);\n      const minWidth = ePopup.clientWidth > 0 ? ePopup.clientWidth : 200;\n      if (!minWidthSet) {\n        ePopup.style.minWidth = `${minWidth}px`;\n        minWidthSet = true;\n      }\n      const widthOfParent = parentRect.right - parentRect.left;\n      const maxX = widthOfParent - minWidth;\n      let x;\n      if (this.gos.get(\"enableRtl\")) {\n        x = xLeftPosition();\n        if (x < 0) {\n          x = xRightPosition();\n          this.setAlignedStyles(ePopup, \"left\");\n        }\n        if (x > maxX) {\n          x = 0;\n          this.setAlignedStyles(ePopup, \"right\");\n        }\n      } else {\n        x = xRightPosition();\n        if (x > maxX) {\n          x = xLeftPosition();\n          this.setAlignedStyles(ePopup, \"right\");\n        }\n        if (x < 0) {\n          x = 0;\n          this.setAlignedStyles(ePopup, \"left\");\n        }\n      }\n      return {\n        x,\n        y\n      };\n      function xRightPosition() {\n        return sourceRect.right - parentRect.left - 2;\n      }\n      function xLeftPosition() {\n        return sourceRect.left - parentRect.left - minWidth;\n      }\n    };\n    this.positionPopup({\n      ePopup,\n      keepWithinBounds: true,\n      updatePosition,\n      postProcessCallback: () => this.callPostProcessPopup(\"subMenu\", ePopup, eventSource, event instanceof MouseEvent ? event : void 0, column, node)\n    });\n  }\n  positionPopupUnderMouseEvent(params) {\n    const {\n      ePopup,\n      nudgeX,\n      nudgeY,\n      skipObserver\n    } = params;\n    this.positionPopup({\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds: true,\n      skipObserver,\n      updatePosition: () => this.calculatePointerAlign(params.mouseEvent),\n      postProcessCallback: () => this.callPostProcessPopup(params.type, params.ePopup, null, params.mouseEvent, params.column, params.rowNode)\n    });\n  }\n  calculatePointerAlign(e) {\n    const parentRect = this.getParentRect();\n    return {\n      x: e.clientX - parentRect.left,\n      y: e.clientY - parentRect.top\n    };\n  }\n  positionPopupByComponent(params) {\n    const {\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds,\n      eventSource,\n      alignSide = \"left\",\n      position = \"over\",\n      column,\n      rowNode,\n      type\n    } = params;\n    const sourceRect = eventSource.getBoundingClientRect();\n    const parentRect = this.getParentRect();\n    this.setAlignedTo(eventSource, ePopup);\n    const updatePosition = () => {\n      let x = sourceRect.left - parentRect.left;\n      if (alignSide === \"right\") {\n        x -= ePopup.offsetWidth - sourceRect.width;\n      }\n      let y;\n      if (position === \"over\") {\n        y = sourceRect.top - parentRect.top;\n        this.setAlignedStyles(ePopup, \"over\");\n      } else {\n        this.setAlignedStyles(ePopup, \"under\");\n        const alignSide2 = this.shouldRenderUnderOrAbove(ePopup, sourceRect, parentRect, params.nudgeY || 0);\n        if (alignSide2 === \"under\") {\n          y = sourceRect.top - parentRect.top + sourceRect.height;\n        } else {\n          y = sourceRect.top - ePopup.offsetHeight - (nudgeY || 0) * 2 - parentRect.top;\n        }\n      }\n      return {\n        x,\n        y\n      };\n    };\n    this.positionPopup({\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds,\n      updatePosition,\n      postProcessCallback: () => this.callPostProcessPopup(type, ePopup, eventSource, null, column, rowNode)\n    });\n  }\n  shouldRenderUnderOrAbove(ePopup, targetCompRect, parentRect, nudgeY) {\n    const spaceAvailableUnder = parentRect.bottom - targetCompRect.bottom;\n    const spaceAvailableAbove = targetCompRect.top - parentRect.top;\n    const spaceRequired = ePopup.offsetHeight + nudgeY;\n    if (spaceAvailableUnder > spaceRequired) {\n      return \"under\";\n    }\n    if (spaceAvailableAbove > spaceRequired || spaceAvailableAbove > spaceAvailableUnder) {\n      return \"above\";\n    }\n    return \"under\";\n  }\n  setAlignedStyles(ePopup, positioned) {\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx === -1) {\n      return;\n    }\n    const popup = this.popupList[popupIdx];\n    const {\n      alignedToElement\n    } = popup;\n    if (!alignedToElement) {\n      return;\n    }\n    const positions = [\"right\", \"left\", \"over\", \"above\", \"under\"];\n    positions.forEach(position => {\n      alignedToElement.classList.remove(`ag-has-popup-positioned-${position}`);\n      ePopup.classList.remove(`ag-popup-positioned-${position}`);\n    });\n    if (!positioned) {\n      return;\n    }\n    alignedToElement.classList.add(`ag-has-popup-positioned-${positioned}`);\n    ePopup.classList.add(`ag-popup-positioned-${positioned}`);\n  }\n  setAlignedTo(eventSource, ePopup) {\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx !== -1) {\n      const popup = this.popupList[popupIdx];\n      popup.alignedToElement = eventSource;\n    }\n  }\n  callPostProcessPopup(type, ePopup, eventSource, mouseEvent, column, rowNode) {\n    const callback = this.gos.getCallback(\"postProcessPopup\");\n    if (callback) {\n      const params = {\n        column,\n        rowNode,\n        ePopup,\n        type,\n        eventSource,\n        mouseEvent\n      };\n      callback(params);\n    }\n  }\n  positionPopup(params) {\n    const {\n      ePopup,\n      keepWithinBounds,\n      nudgeX,\n      nudgeY,\n      skipObserver,\n      updatePosition\n    } = params;\n    const lastSize = {\n      width: 0,\n      height: 0\n    };\n    const updatePopupPosition = (fromResizeObserver = false) => {\n      let {\n        x,\n        y\n      } = updatePosition();\n      if (fromResizeObserver && ePopup.clientWidth === lastSize.width && ePopup.clientHeight === lastSize.height) {\n        return;\n      }\n      lastSize.width = ePopup.clientWidth;\n      lastSize.height = ePopup.clientHeight;\n      if (nudgeX) {\n        x += nudgeX;\n      }\n      if (nudgeY) {\n        y += nudgeY;\n      }\n      if (keepWithinBounds) {\n        x = this.keepXYWithinBounds(ePopup, x, 1 /* Horizontal */);\n        y = this.keepXYWithinBounds(ePopup, y, 0 /* Vertical */);\n      }\n      ePopup.style.left = `${x}px`;\n      ePopup.style.top = `${y}px`;\n      if (params.postProcessCallback) {\n        params.postProcessCallback();\n      }\n    };\n    updatePopupPosition();\n    if (!skipObserver) {\n      const resizeObserverDestroyFunc = _observeResize(this.beans, ePopup, () => updatePopupPosition(true));\n      setTimeout(() => resizeObserverDestroyFunc(), WAIT_FOR_POPUP_CONTENT_RESIZE);\n    }\n  }\n  getActivePopups() {\n    return this.popupList.map(popup => popup.element);\n  }\n  getParentRect() {\n    const eDocument = _getDocument(this.beans);\n    let popupParent = this.getPopupParent();\n    if (popupParent === eDocument.body) {\n      popupParent = eDocument.documentElement;\n    } else if (getComputedStyle(popupParent).position === \"static\") {\n      popupParent = popupParent.offsetParent;\n    }\n    return _getElementRectWithOffset(popupParent);\n  }\n  keepXYWithinBounds(ePopup, position, direction) {\n    const isVertical = direction === 0 /* Vertical */;\n    const sizeProperty = isVertical ? \"clientHeight\" : \"clientWidth\";\n    const anchorProperty = isVertical ? \"top\" : \"left\";\n    const offsetProperty = isVertical ? \"height\" : \"width\";\n    const scrollPositionProperty = isVertical ? \"scrollTop\" : \"scrollLeft\";\n    const eDocument = _getDocument(this.beans);\n    const docElement = eDocument.documentElement;\n    const popupParent = this.getPopupParent();\n    const popupRect = ePopup.getBoundingClientRect();\n    const parentRect = popupParent.getBoundingClientRect();\n    const documentRect = eDocument.documentElement.getBoundingClientRect();\n    const isBody = popupParent === eDocument.body;\n    const offsetSize = Math.ceil(popupRect[offsetProperty]);\n    const getSize2 = isVertical ? _getAbsoluteHeight : _getAbsoluteWidth;\n    let sizeOfParent = isBody ? getSize2(docElement) + docElement[scrollPositionProperty] : popupParent[sizeProperty];\n    if (isBody) {\n      sizeOfParent -= Math.abs(documentRect[anchorProperty] - parentRect[anchorProperty]);\n    }\n    const max = sizeOfParent - offsetSize;\n    return Math.min(Math.max(position, 0), Math.abs(max));\n  }\n  addPopup(params) {\n    const eDocument = _getDocument(this.beans);\n    const {\n      eChild,\n      ariaLabel,\n      ariaOwns,\n      alwaysOnTop,\n      positionCallback,\n      anchorToElement\n    } = params;\n    if (!eDocument) {\n      _warn(122);\n      return {\n        hideFunc: () => {}\n      };\n    }\n    const pos = this.getPopupIndex(eChild);\n    if (pos !== -1) {\n      const popup = this.popupList[pos];\n      return {\n        hideFunc: popup.hideFunc\n      };\n    }\n    this.initialisePopupPosition(eChild);\n    const wrapperEl = this.createPopupWrapper(eChild, !!alwaysOnTop, ariaLabel, ariaOwns);\n    const removeListeners = this.addEventListenersToPopup({\n      ...params,\n      wrapperEl\n    });\n    if (positionCallback) {\n      positionCallback();\n    }\n    this.addPopupToPopupList(eChild, wrapperEl, removeListeners, anchorToElement);\n    return {\n      hideFunc: removeListeners\n    };\n  }\n  initialisePopupPosition(element) {\n    const ePopupParent = this.getPopupParent();\n    const ePopupParentRect = ePopupParent.getBoundingClientRect();\n    if (!_exists(element.style.top)) {\n      element.style.top = `${ePopupParentRect.top * -1}px`;\n    }\n    if (!_exists(element.style.left)) {\n      element.style.left = `${ePopupParentRect.left * -1}px`;\n    }\n  }\n  createPopupWrapper(element, alwaysOnTop, ariaLabel, ariaOwns) {\n    const ePopupParent = this.getPopupParent();\n    const {\n      environment,\n      gos\n    } = this.beans;\n    const eWrapper = _createElement({\n      tag: \"div\"\n    });\n    environment.applyThemeClasses(eWrapper);\n    eWrapper.classList.add(\"ag-popup\");\n    element.classList.add(gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\", \"ag-popup-child\");\n    if (!element.hasAttribute(\"role\")) {\n      _setAriaRole(element, \"dialog\");\n    }\n    if (ariaLabel) {\n      _setAriaLabel(element, ariaLabel);\n    } else if (ariaOwns) {\n      element.id || (element.id = `popup-component-${instanceIdSeq}`);\n      _setAriaOwns(ariaOwns, element.id);\n    }\n    eWrapper.appendChild(element);\n    ePopupParent.appendChild(eWrapper);\n    if (alwaysOnTop) {\n      this.setAlwaysOnTop(element, true);\n    } else {\n      this.bringPopupToFront(element);\n    }\n    return eWrapper;\n  }\n  handleThemeChange(e) {\n    if (e.themeChanged) {\n      const environment = this.beans.environment;\n      for (const popup of this.popupList) {\n        environment.applyThemeClasses(popup.wrapper);\n      }\n    }\n  }\n  addEventListenersToPopup(params) {\n    const beans = this.beans;\n    const eDocument = _getDocument(beans);\n    const ePopupParent = this.getPopupParent();\n    const {\n      wrapperEl,\n      eChild: popupEl,\n      closedCallback,\n      afterGuiAttached,\n      closeOnEsc,\n      modal,\n      ariaOwns\n    } = params;\n    let popupHidden = false;\n    const hidePopupOnKeyboardEvent = event => {\n      if (!wrapperEl.contains(_getActiveDomElement(beans))) {\n        return;\n      }\n      const key = event.key;\n      if (key === KeyCode.ESCAPE && !_isStopPropagationForAgGrid(event)) {\n        removeListeners({\n          keyboardEvent: event\n        });\n      }\n    };\n    const hidePopupOnMouseEvent = event => removeListeners({\n      mouseEvent: event\n    });\n    const hidePopupOnTouchEvent = event => removeListeners({\n      touchEvent: event\n    });\n    const removeListeners = (popupParams = {}) => {\n      const {\n        mouseEvent,\n        touchEvent,\n        keyboardEvent,\n        forceHide\n      } = popupParams;\n      if (!forceHide && (\n      // we don't hide popup if the event was on the child, or any\n      // children of this child\n      this.isEventFromCurrentPopup({\n        mouseEvent,\n        touchEvent\n      }, popupEl) ||\n      // this method should only be called once. the client can have different\n      // paths, each one wanting to close, so this method may be called multiple times.\n      popupHidden)) {\n        return;\n      }\n      popupHidden = true;\n      ePopupParent.removeChild(wrapperEl);\n      eDocument.removeEventListener(\"keydown\", hidePopupOnKeyboardEvent);\n      eDocument.removeEventListener(\"mousedown\", hidePopupOnMouseEvent);\n      eDocument.removeEventListener(\"touchstart\", hidePopupOnTouchEvent);\n      eDocument.removeEventListener(\"contextmenu\", hidePopupOnMouseEvent);\n      this.eventSvc.removeEventListener(\"dragStarted\", hidePopupOnMouseEvent);\n      if (closedCallback) {\n        closedCallback(mouseEvent || touchEvent || keyboardEvent);\n      }\n      this.removePopupFromPopupList(popupEl, ariaOwns);\n    };\n    if (afterGuiAttached) {\n      afterGuiAttached({\n        hidePopup: removeListeners\n      });\n    }\n    window.setTimeout(() => {\n      if (closeOnEsc) {\n        eDocument.addEventListener(\"keydown\", hidePopupOnKeyboardEvent);\n      }\n      if (modal) {\n        eDocument.addEventListener(\"mousedown\", hidePopupOnMouseEvent);\n        this.eventSvc.addEventListener(\"dragStarted\", hidePopupOnMouseEvent);\n        eDocument.addEventListener(\"touchstart\", hidePopupOnTouchEvent);\n        eDocument.addEventListener(\"contextmenu\", hidePopupOnMouseEvent);\n      }\n    }, 0);\n    return removeListeners;\n  }\n  addPopupToPopupList(element, wrapperEl, removeListeners, anchorToElement) {\n    this.popupList.push({\n      element,\n      wrapper: wrapperEl,\n      hideFunc: removeListeners,\n      instanceId: instanceIdSeq,\n      isAnchored: !!anchorToElement\n    });\n    if (anchorToElement) {\n      this.setPopupPositionRelatedToElement(element, anchorToElement);\n    }\n    instanceIdSeq = instanceIdSeq + 1;\n  }\n  getPopupIndex(el) {\n    return this.popupList.findIndex(p => p.element === el);\n  }\n  setPopupPositionRelatedToElement(popupEl, relativeElement) {\n    const popupIndex = this.getPopupIndex(popupEl);\n    if (popupIndex === -1) {\n      return;\n    }\n    const popup = this.popupList[popupIndex];\n    if (popup.stopAnchoringPromise) {\n      popup.stopAnchoringPromise.then(destroyFunc => destroyFunc && destroyFunc());\n    }\n    popup.stopAnchoringPromise = void 0;\n    popup.isAnchored = false;\n    if (!relativeElement) {\n      return;\n    }\n    const destroyPositionTracker = this.keepPopupPositionedRelativeTo({\n      element: relativeElement,\n      ePopup: popupEl,\n      hidePopup: popup.hideFunc\n    });\n    popup.stopAnchoringPromise = destroyPositionTracker;\n    popup.isAnchored = true;\n    return destroyPositionTracker;\n  }\n  removePopupFromPopupList(element, ariaOwns) {\n    this.setAlignedStyles(element, null);\n    this.setPopupPositionRelatedToElement(element, null);\n    if (ariaOwns) {\n      _setAriaOwns(ariaOwns, null);\n    }\n    this.popupList = this.popupList.filter(p => p.element !== element);\n  }\n  keepPopupPositionedRelativeTo(params) {\n    const eParent = this.getPopupParent();\n    const parentRect = eParent.getBoundingClientRect();\n    const {\n      element,\n      ePopup\n    } = params;\n    const sourceRect = element.getBoundingClientRect();\n    const extractFromPixelValue = pxSize => parseInt(pxSize.substring(0, pxSize.length - 1), 10);\n    const createPosition = (prop, direction) => {\n      const initialDiff = parentRect[prop] - sourceRect[prop];\n      const initial = extractFromPixelValue(ePopup.style[prop]);\n      return {\n        initialDiff,\n        lastDiff: initialDiff,\n        initial,\n        last: initial,\n        direction\n      };\n    };\n    const topPosition = createPosition(\"top\", 0 /* Vertical */);\n    const leftPosition = createPosition(\"left\", 1 /* Horizontal */);\n    const fwOverrides = this.beans.frameworkOverrides;\n    return new AgPromise(resolve => {\n      fwOverrides.wrapIncoming(() => {\n        fwOverrides.setInterval(() => {\n          const pRect = eParent.getBoundingClientRect();\n          const sRect = element.getBoundingClientRect();\n          const elementNotInDom = sRect.top == 0 && sRect.left == 0 && sRect.height == 0 && sRect.width == 0;\n          if (elementNotInDom) {\n            params.hidePopup();\n            return;\n          }\n          const calculateNewPosition = (position, prop) => {\n            const current = extractFromPixelValue(ePopup.style[prop]);\n            if (position.last !== current) {\n              position.initial = current;\n              position.last = current;\n            }\n            const currentDiff = pRect[prop] - sRect[prop];\n            if (currentDiff != position.lastDiff) {\n              const newValue = this.keepXYWithinBounds(ePopup, position.initial + position.initialDiff - currentDiff, position.direction);\n              ePopup.style[prop] = `${newValue}px`;\n              position.last = newValue;\n            }\n            position.lastDiff = currentDiff;\n          };\n          calculateNewPosition(topPosition, \"top\");\n          calculateNewPosition(leftPosition, \"left\");\n        }, 200).then(intervalId => {\n          const result = () => {\n            if (intervalId != null) {\n              window.clearInterval(intervalId);\n            }\n          };\n          resolve(result);\n        });\n      }, \"popupPositioning\");\n    });\n  }\n  hasAnchoredPopup() {\n    return this.popupList.some(popup => popup.isAnchored);\n  }\n  isEventFromCurrentPopup(params, target) {\n    const {\n      mouseEvent,\n      touchEvent\n    } = params;\n    const event = mouseEvent ? mouseEvent : touchEvent;\n    if (!event) {\n      return false;\n    }\n    const indexOfThisChild = this.getPopupIndex(target);\n    if (indexOfThisChild === -1) {\n      return false;\n    }\n    for (let i = indexOfThisChild; i < this.popupList.length; i++) {\n      const popup = this.popupList[i];\n      if (_isElementInEventPath(popup.element, event)) {\n        return true;\n      }\n    }\n    return this.isElementWithinCustomPopup(event.target);\n  }\n  isElementWithinCustomPopup(el) {\n    const eDocument = _getDocument(this.beans);\n    while (el && el !== eDocument.body) {\n      if (el.classList.contains(\"ag-custom-component-popup\") || el.parentElement === null) {\n        return true;\n      }\n      el = el.parentElement;\n    }\n    return false;\n  }\n  getWrapper(ePopup) {\n    while (!ePopup.classList.contains(\"ag-popup\") && ePopup.parentElement) {\n      ePopup = ePopup.parentElement;\n    }\n    return ePopup.classList.contains(\"ag-popup\") ? ePopup : null;\n  }\n  setAlwaysOnTop(ePopup, alwaysOnTop) {\n    const eWrapper = this.getWrapper(ePopup);\n    if (!eWrapper) {\n      return;\n    }\n    eWrapper.classList.toggle(\"ag-always-on-top\", !!alwaysOnTop);\n    if (alwaysOnTop) {\n      this.bringPopupToFront(eWrapper);\n    }\n  }\n  /** @returns true if moved */\n  bringPopupToFront(ePopup) {\n    const parent = this.getPopupParent();\n    const popupList = Array.prototype.slice.call(parent.querySelectorAll(\".ag-popup\"));\n    const popupLen = popupList.length;\n    const eWrapper = this.getWrapper(ePopup);\n    if (!eWrapper || popupLen <= 1 || !parent.contains(ePopup)) {\n      return;\n    }\n    const standardPopupList = [];\n    const alwaysOnTopList = [];\n    for (const popup of popupList) {\n      if (popup === eWrapper) {\n        continue;\n      }\n      if (popup.classList.contains(\"ag-always-on-top\")) {\n        alwaysOnTopList.push(popup);\n      } else {\n        standardPopupList.push(popup);\n      }\n    }\n    const innerElsScrollMap = [];\n    const onTopLength = alwaysOnTopList.length;\n    const isPopupAlwaysOnTop = eWrapper.classList.contains(\"ag-always-on-top\");\n    const shouldBeLast = isPopupAlwaysOnTop || !onTopLength;\n    const targetList = shouldBeLast ? [...standardPopupList, ...alwaysOnTopList, eWrapper] : [...standardPopupList, eWrapper, ...alwaysOnTopList];\n    for (let i = 0; i <= popupLen; i++) {\n      const currentPopup = targetList[i];\n      if (popupList[i] === targetList[i] || currentPopup === eWrapper) {\n        continue;\n      }\n      const innerEls = currentPopup.querySelectorAll(\"div\");\n      innerEls.forEach(el => {\n        if (el.scrollTop !== 0) {\n          innerElsScrollMap.push([el, el.scrollTop]);\n        }\n      });\n      if (i === 0) {\n        parent.insertAdjacentElement(\"afterbegin\", currentPopup);\n      } else {\n        targetList[i - 1].insertAdjacentElement(\"afterend\", currentPopup);\n      }\n    }\n    while (innerElsScrollMap.length) {\n      const currentEl = innerElsScrollMap.pop();\n      currentEl[0].scrollTop = currentEl[1];\n    }\n  }\n};\n\n// packages/ag-grid-community/src/widgets/popupModule.ts\nvar PopupModule = {\n  moduleName: \"Popup\",\n  version: VERSION,\n  beans: [PopupService]\n};\n\n// packages/ag-grid-community/src/filter/column-filters.css-GENERATED.ts\nvar columnFiltersCSS = /*css*/\n`.ag-set-filter{--ag-indentation-level:0}.ag-set-filter-item{align-items:center;display:flex;height:100%}:where(.ag-ltr) .ag-set-filter-item{padding-left:calc(var(--ag-widget-container-horizontal-padding) + var(--ag-indentation-level)*var(--ag-set-filter-indent-size))}:where(.ag-rtl) .ag-set-filter-item{padding-right:calc(var(--ag-widget-container-horizontal-padding) + var(--ag-indentation-level)*var(--ag-set-filter-indent-size))}.ag-set-filter-item-checkbox{display:flex;height:100%;width:100%}.ag-set-filter-group-icons{display:block;>*{cursor:pointer}}:where(.ag-ltr) .ag-set-filter-group-icons{margin-right:var(--ag-widget-container-horizontal-padding)}:where(.ag-rtl) .ag-set-filter-group-icons{margin-left:var(--ag-widget-container-horizontal-padding)}.ag-filter-body-wrapper{display:flex;flex-direction:column}:where(.ag-menu:not(.ag-tabs) .ag-filter) .ag-filter-body-wrapper,:where(.ag-menu:not(.ag-tabs) .ag-filter)>:not(.ag-filter-wrapper){min-width:180px}.ag-filter-filter{flex:1 1 0px}.ag-filter-condition{display:flex;justify-content:center}.ag-floating-filter-body{display:flex;flex:1 1 auto;height:100%;position:relative}.ag-floating-filter-full-body{align-items:center;display:flex;flex:1 1 auto;height:100%;overflow:hidden;width:100%}:where(.ag-floating-filter-full-body)>div{flex:1 1 auto}.ag-floating-filter-input{align-items:center;display:flex;width:100%;>*{flex:1 1 auto}:where(.ag-input-field-input[type=date]),:where(.ag-input-field-input[type=datetime-local]){width:1px}}.ag-floating-filter-button{display:flex;flex:none}.ag-date-floating-filter-wrapper{display:flex}.ag-set-floating-filter-input :where(input)[disabled]{pointer-events:none}.ag-floating-filter-button-button{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;height:var(--ag-icon-size);width:var(--ag-icon-size)}.ag-filter-loading{align-items:unset;background-color:var(--ag-chrome-background-color);height:100%;padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding);position:absolute;width:100%;z-index:1;:where(.ag-menu) &{background-color:var(--ag-menu-background-color)}}.ag-filter-separator{border-top:solid var(--ag-border-width) var(--menu-separator-color)}:where(.ag-filter-select) .ag-picker-field-wrapper{width:0}.ag-filter-condition-operator{height:17px}:where(.ag-ltr) .ag-filter-condition-operator-or{margin-left:calc(var(--ag-spacing)*2)}:where(.ag-rtl) .ag-filter-condition-operator-or{margin-right:calc(var(--ag-spacing)*2)}.ag-set-filter-select-all{padding-top:var(--ag-widget-container-vertical-padding)}.ag-filter-no-matches,.ag-set-filter-list{height:calc(var(--ag-list-item-height)*6)}.ag-filter-no-matches{padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding)}.ag-set-filter-tree-list{height:calc(var(--ag-list-item-height)*10)}.ag-set-filter-filter{margin-left:var(--ag-widget-container-horizontal-padding);margin-right:var(--ag-widget-container-horizontal-padding);margin-top:var(--ag-widget-container-vertical-padding)}.ag-filter-to{margin-top:var(--ag-widget-vertical-spacing)}.ag-mini-filter{margin:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding)}:where(.ag-ltr) .ag-set-filter-add-group-indent{margin-left:calc(var(--ag-icon-size) + var(--ag-widget-container-horizontal-padding))}:where(.ag-rtl) .ag-set-filter-add-group-indent{margin-right:calc(var(--ag-icon-size) + var(--ag-widget-container-horizontal-padding))}:where(.ag-filter-menu) .ag-set-filter-list{min-width:200px}.ag-filter-virtual-list-item:focus-visible{box-shadow:inset var(--ag-focus-shadow)}.ag-filter-apply-panel{display:flex;justify-content:flex-end;overflow:hidden;padding:var(--ag-widget-vertical-spacing) var(--ag-widget-container-horizontal-padding) var(--ag-widget-container-vertical-padding)}.ag-filter-apply-panel-button{line-height:1.5}:where(.ag-ltr) .ag-filter-apply-panel-button{margin-left:calc(var(--ag-spacing)*2)}:where(.ag-rtl) .ag-filter-apply-panel-button{margin-right:calc(var(--ag-spacing)*2)}.ag-simple-filter-body-wrapper{display:flex;flex-direction:column;min-height:calc(var(--ag-list-item-height) + var(--ag-widget-container-vertical-padding) + var(--ag-widget-vertical-spacing));overflow-y:auto;padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding);padding-bottom:calc(var(--ag-widget-container-vertical-padding) - var(--ag-widget-vertical-spacing));&>*{margin-bottom:var(--ag-widget-vertical-spacing)}:where(.ag-resizer-wrapper){margin:0}}.ag-multi-filter-menu-item{margin:var(--ag-spacing) 0}.ag-multi-filter-group-title-bar{background-color:transparent;color:var(--ag-header-text-color);font-weight:500;padding:calc(var(--ag-spacing)*1.5) var(--ag-spacing)}.ag-group-filter-field-select-wrapper{display:flex;flex-direction:column;gap:var(--ag-widget-vertical-spacing);padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding)}`;\n\n// packages/ag-grid-community/src/filter/columnFilterApi.ts\nfunction isColumnFilterPresent(beans) {\n  const filterManager = beans.filterManager;\n  return !!filterManager?.isColumnFilterPresent() || !!filterManager?.isAggregateFilterPresent();\n}\nfunction getColumnFilterInstance(beans, key) {\n  return beans.filterManager?.getColumnFilterInstance(key) ?? Promise.resolve(void 0);\n}\nfunction destroyFilter(beans, key) {\n  const column = beans.colModel.getColDefCol(key);\n  if (column) {\n    return beans.colFilter?.destroyFilter(column, \"api\");\n  }\n}\nfunction setFilterModel(beans, model) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.filterManager?.setFilterModel(model));\n}\nfunction getFilterModel(beans) {\n  return beans.filterManager?.getFilterModel() ?? {};\n}\nfunction getColumnFilterModel(beans, key, useUnapplied) {\n  const {\n    gos,\n    colModel,\n    colFilter\n  } = beans;\n  if (useUnapplied && !gos.get(\"enableFilterHandlers\")) {\n    _warn(288);\n    useUnapplied = false;\n  }\n  const column = colModel.getColDefCol(key);\n  return column ? colFilter?.getModelForColumn(column, useUnapplied) ?? null : null;\n}\nfunction setColumnFilterModel(beans, column, model) {\n  return beans.filterManager?.setColumnFilterModel(column, model) ?? Promise.resolve();\n}\nfunction showColumnFilter(beans, colKey) {\n  const column = beans.colModel.getCol(colKey);\n  if (!column) {\n    _error(12, {\n      colKey\n    });\n    return;\n  }\n  beans.menuSvc?.showFilterMenu({\n    column,\n    containerType: \"columnFilter\",\n    positionBy: \"auto\"\n  });\n}\nfunction hideColumnFilter(beans) {\n  beans.menuSvc?.hideFilterMenu();\n}\nfunction getColumnFilterHandler(beans, colKey) {\n  const column = beans.colModel.getCol(colKey);\n  if (!column) {\n    _error(12, {\n      colKey\n    });\n    return void 0;\n  }\n  return beans.colFilter?.getHandler(column, true);\n}\nfunction doFilterAction(beans, params) {\n  const {\n    colModel,\n    colFilter,\n    gos\n  } = beans;\n  if (!gos.get(\"enableFilterHandlers\")) {\n    _warn(287);\n    return;\n  }\n  const {\n    colId,\n    action\n  } = params;\n  if (colId) {\n    const column = colModel.getColById(colId);\n    if (column) {\n      colFilter?.updateModel(column, action);\n    }\n  } else {\n    colFilter?.updateAllModels(action);\n  }\n}\n\n// packages/ag-grid-community/src/filter/columnFilterService.ts\nvar DUMMY_HANDLER = {\n  filterHandler: () => ({\n    doesFilterPass: () => true\n  })\n};\nvar ColumnFilterService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colFilter\";\n    this.allColumnFilters = /* @__PURE__ */new Map();\n    this.allColumnListeners = /* @__PURE__ */new Map();\n    this.activeAggregateFilters = [];\n    this.activeColumnFilters = [];\n    // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n    // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n    // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n    // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n    // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n    this.processingFilterChange = false;\n    // when we're waiting for cell data types to be inferred, we need to defer filter model updates\n    this.modelUpdates = [];\n    this.columnModelUpdates = [];\n    /** This contains the UI state for handler columns */\n    this.state = /* @__PURE__ */new Map();\n    this.handlerMap = {\n      ...FILTER_HANDLER_MAP\n    };\n    this.isGlobalButtons = false;\n    this.activeFilterComps = /* @__PURE__ */new Set();\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.onColumnsChanged.bind(this),\n      dataTypesInferred: this.processFilterModelUpdateQueue.bind(this)\n    });\n    const gos = this.gos;\n    const initialFilterModel = {\n      ...(gos.get(\"initialState\")?.filter?.filterModel ?? {})\n    };\n    this.initialModel = initialFilterModel;\n    this.model = {\n      ...initialFilterModel\n    };\n    if (!gos.get(\"enableFilterHandlers\")) {\n      delete this.handlerMap[\"agMultiColumnFilter\"];\n    }\n  }\n  refreshModel() {\n    this.onNewRowsLoaded(\"rowDataUpdated\");\n  }\n  setModel(model, source = \"api\") {\n    const {\n      colModel,\n      dataTypeSvc,\n      filterManager\n    } = this.beans;\n    if (dataTypeSvc?.isPendingInference) {\n      this.modelUpdates.push({\n        model,\n        source\n      });\n      return;\n    }\n    const allPromises = [];\n    const previousModel = this.getModel(true);\n    if (model) {\n      const modelKeys = new Set(Object.keys(model));\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\n        const newModel = model[colId];\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper, newModel));\n        modelKeys.delete(colId);\n      });\n      modelKeys.forEach(colId => {\n        const column = colModel.getColDefCol(colId) || colModel.getCol(colId);\n        if (!column) {\n          _warn(62, {\n            colId\n          });\n          return;\n        }\n        if (!column.isFilterAllowed()) {\n          _warn(63, {\n            colId\n          });\n          return;\n        }\n        const filterWrapper = this.getOrCreateFilterWrapper(column, true);\n        if (!filterWrapper) {\n          _warn(64, {\n            colId\n          });\n          return;\n        }\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper, model[colId], true));\n      });\n    } else {\n      this.model = {};\n      this.allColumnFilters.forEach(filterWrapper => {\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper, null));\n      });\n    }\n    AgPromise.all(allPromises).then(() => {\n      const currentModel = this.getModel(true);\n      const columns = [];\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\n        const before = previousModel ? previousModel[colId] : null;\n        const after = currentModel ? currentModel[colId] : null;\n        if (!_jsonEquals(before, after)) {\n          columns.push(filterWrapper.column);\n        }\n      });\n      if (columns.length > 0) {\n        filterManager?.onFilterChanged({\n          columns,\n          source\n        });\n      }\n    });\n  }\n  getModel(excludeInitialState) {\n    const result = {};\n    const {\n      allColumnFilters,\n      initialModel,\n      beans: {\n        colModel\n      }\n    } = this;\n    allColumnFilters.forEach((filterWrapper, key) => {\n      const model = this.getModelFromFilterWrapper(filterWrapper);\n      if (_exists(model)) {\n        result[key] = model;\n      }\n    });\n    if (!excludeInitialState) {\n      for (const colId of Object.keys(initialModel)) {\n        const model = initialModel[colId];\n        if (_exists(model) && !allColumnFilters.has(colId) && colModel.getCol(colId)?.isFilterAllowed()) {\n          result[colId] = model;\n        }\n      }\n    }\n    return result;\n  }\n  setState(model, state, source = \"api\") {\n    this.state.clear();\n    if (state) {\n      for (const colId of Object.keys(state)) {\n        const newState = state[colId];\n        this.state.set(colId, {\n          model: _getFilterModel(this.model, colId),\n          state: newState\n        });\n      }\n    }\n    this.setModel(model, source);\n  }\n  getState() {\n    const state = this.state;\n    if (!state.size) {\n      return void 0;\n    }\n    const newState = {};\n    let hasNewState = false;\n    state.forEach((colState, colId) => {\n      const actualState = colState.state;\n      if (actualState != null) {\n        hasNewState = true;\n        newState[colId] = actualState;\n      }\n    });\n    return hasNewState ? newState : void 0;\n  }\n  getModelFromFilterWrapper(filterWrapper) {\n    const column = filterWrapper.column;\n    const colId = column.getColId();\n    if (filterWrapper.isHandler) {\n      return _getFilterModel(this.model, colId);\n    }\n    const filter = filterWrapper.filter;\n    if (filter) {\n      if (typeof filter.getModel !== \"function\") {\n        _warn(66);\n        return null;\n      }\n      return filter.getModel();\n    }\n    return _getFilterModel(this.initialModel, colId);\n  }\n  isFilterPresent() {\n    return this.activeColumnFilters.length > 0;\n  }\n  isAggFilterPresent() {\n    return !!this.activeAggregateFilters.length;\n  }\n  disableFilters() {\n    this.initialModel = {};\n    const {\n      allColumnFilters\n    } = this;\n    if (allColumnFilters.size) {\n      allColumnFilters.forEach(filterWrapper => this.disposeFilterWrapper(filterWrapper, \"advancedFilterEnabled\"));\n      return true;\n    }\n    return false;\n  }\n  updateActiveFilters() {\n    const isFilterActive = filter => {\n      if (!filter) {\n        return false;\n      }\n      if (!filter.isFilterActive) {\n        _warn(67);\n        return false;\n      }\n      return filter.isFilterActive();\n    };\n    const {\n      colModel,\n      gos\n    } = this.beans;\n    const groupFilterEnabled = !!_getGroupAggFiltering(gos);\n    const isAggFilter = column => {\n      const isSecondary = !column.isPrimary();\n      if (isSecondary) {\n        return true;\n      }\n      const isShowingPrimaryColumns = !colModel.isPivotActive();\n      const isValueActive = column.isValueActive();\n      if (!isValueActive || !isShowingPrimaryColumns) {\n        return false;\n      }\n      if (colModel.isPivotMode()) {\n        return true;\n      }\n      return groupFilterEnabled;\n    };\n    const activeAggregateFilters = [];\n    const activeColumnFilters = [];\n    const addFilter = (column, filterActive, doesFilterPassWrapper) => {\n      if (filterActive) {\n        if (isAggFilter(column)) {\n          activeAggregateFilters.push(doesFilterPassWrapper);\n        } else {\n          activeColumnFilters.push(doesFilterPassWrapper);\n        }\n      }\n    };\n    const promises = [];\n    this.allColumnFilters.forEach(filterWrapper => {\n      const column = filterWrapper.column;\n      const colId = column.getColId();\n      if (filterWrapper.isHandler) {\n        promises.push(AgPromise.resolve().then(() => {\n          addFilter(column, this.isHandlerActive(column), {\n            colId,\n            isHandler: true,\n            handler: filterWrapper.handler,\n            handlerParams: filterWrapper.handlerParams\n          });\n        }));\n      } else {\n        const promise = getFilterUiFromWrapper(filterWrapper);\n        if (promise) {\n          promises.push(promise.then(filter => {\n            addFilter(column, isFilterActive(filter), {\n              colId,\n              isHandler: false,\n              comp: filter\n            });\n          }));\n        }\n      }\n    });\n    return AgPromise.all(promises).then(() => {\n      this.activeAggregateFilters = activeAggregateFilters;\n      this.activeColumnFilters = activeColumnFilters;\n    });\n  }\n  updateFilterFlagInColumns(source, additionalEventAttributes) {\n    const promises = [];\n    this.allColumnFilters.forEach(filterWrapper => {\n      const column = filterWrapper.column;\n      if (filterWrapper.isHandler) {\n        promises.push(AgPromise.resolve().then(() => {\n          this.setColFilterActive(column, this.isHandlerActive(column), source, additionalEventAttributes);\n        }));\n      } else {\n        const promise = getFilterUiFromWrapper(filterWrapper);\n        if (promise) {\n          promises.push(promise.then(filter => {\n            this.setColFilterActive(column, filter.isFilterActive(), source, additionalEventAttributes);\n          }));\n        }\n      }\n    });\n    this.beans.groupFilter?.updateFilterFlags(source, additionalEventAttributes);\n    return AgPromise.all(promises);\n  }\n  doFiltersPass(node, colIdToSkip, targetAggregates) {\n    const {\n      data,\n      aggData\n    } = node;\n    const targetedFilters = targetAggregates ? this.activeAggregateFilters : this.activeColumnFilters;\n    const targetedData = targetAggregates ? aggData : data;\n    const model = this.model;\n    for (let i = 0; i < targetedFilters.length; i++) {\n      const filter = targetedFilters[i];\n      const {\n        colId,\n        isHandler\n      } = filter;\n      if (colId === colIdToSkip) {\n        continue;\n      }\n      if (isHandler) {\n        const {\n          handler,\n          handlerParams\n        } = filter;\n        if (!handler.doesFilterPass({\n          node,\n          data: targetedData,\n          model: _getFilterModel(model, colId),\n          handlerParams\n        })) {\n          return false;\n        }\n      } else {\n        const comp = filter.comp;\n        if (typeof comp.doesFilterPass !== \"function\") {\n          _error(91);\n          continue;\n        }\n        if (!comp.doesFilterPass({\n          node,\n          data: targetedData\n        })) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  getHandlerParams(column) {\n    const wrapper = this.allColumnFilters.get(column.getColId());\n    return wrapper?.isHandler ? wrapper.handlerParams : void 0;\n  }\n  // sometimes (especially in React) the filter can call onFilterChanged when we are in the middle\n  // of a render cycle. this would be bad, so we wait for render cycle to complete when this happens.\n  // this happens in react when we change React State in the grid (eg setting RowCtrl's in RowContainer)\n  // which results in React State getting applied in the main application, triggering a useEffect() to\n  // be kicked off adn then the application calling the grid's API. in AG-6554, the custom filter was\n  // getting it's useEffect() triggered in this way.\n  callOnFilterChangedOutsideRenderCycle(params) {\n    const {\n      rowRenderer,\n      filterManager\n    } = this.beans;\n    const action = () => {\n      if (this.isAlive()) {\n        filterManager?.onFilterChanged(params);\n      }\n    };\n    if (rowRenderer.isRefreshInProgress()) {\n      setTimeout(action, 0);\n    } else {\n      action();\n    }\n  }\n  updateBeforeFilterChanged(params = {}) {\n    const {\n      column,\n      additionalEventAttributes\n    } = params;\n    const colId = column?.getColId();\n    return this.updateActiveFilters().then(() => this.updateFilterFlagInColumns(\"filterChanged\", additionalEventAttributes).then(() => {\n      this.allColumnFilters.forEach(filterWrapper => {\n        const {\n          column: filterColumn,\n          isHandler\n        } = filterWrapper;\n        if (colId === filterColumn.getColId()) {\n          return;\n        }\n        if (isHandler) {\n          filterWrapper.handler.onAnyFilterChanged?.();\n        }\n        getFilterUiFromWrapper(filterWrapper, isHandler)?.then(filter => {\n          if (typeof filter?.onAnyFilterChanged === \"function\") {\n            filter.onAnyFilterChanged();\n          }\n        });\n      });\n      this.processingFilterChange = true;\n    }));\n  }\n  updateAfterFilterChanged() {\n    this.processingFilterChange = false;\n  }\n  isSuppressFlashingCellsBecauseFiltering() {\n    const allowShowChangeAfterFilter = this.gos.get(\"allowShowChangeAfterFilter\") ?? false;\n    return !allowShowChangeAfterFilter && this.processingFilterChange;\n  }\n  onNewRowsLoaded(source) {\n    const promises = [];\n    this.allColumnFilters.forEach(filterWrapper => {\n      const isHandler = filterWrapper.isHandler;\n      if (isHandler) {\n        filterWrapper.handler.onNewRowsLoaded?.();\n      }\n      const promise = getFilterUiFromWrapper(filterWrapper, isHandler);\n      if (promise) {\n        promises.push(promise.then(filter => {\n          filter.onNewRowsLoaded?.();\n        }));\n      }\n    });\n    AgPromise.all(promises).then(() => this.updateFilterFlagInColumns(source, {\n      afterDataChange: true\n    })).then(() => this.updateActiveFilters());\n  }\n  createGetValue(filterColumn, filterValueGetterOverride) {\n    const {\n      filterValueSvc,\n      colModel\n    } = this.beans;\n    return (rowNode, column) => {\n      const columnToUse = column ? colModel.getCol(column) : filterColumn;\n      return columnToUse ? filterValueSvc.getValue(columnToUse, rowNode, filterValueGetterOverride) : void 0;\n    };\n  }\n  isFilterActive(column) {\n    const filterWrapper = this.cachedFilter(column);\n    if (filterWrapper?.isHandler) {\n      return this.isHandlerActive(column);\n    }\n    const filter = filterWrapper?.filter;\n    if (filter) {\n      return filter.isFilterActive();\n    }\n    return _getFilterModel(this.initialModel, column.getColId()) != null;\n  }\n  isHandlerActive(column) {\n    const active = _exists(_getFilterModel(this.model, column.getColId()));\n    if (active) {\n      return active;\n    }\n    const groupFilter = this.beans.groupFilter;\n    return groupFilter?.isGroupFilter(column) ? groupFilter.isFilterActive(column) : false;\n  }\n  getOrCreateFilterUi(column) {\n    const filterWrapper = this.getOrCreateFilterWrapper(column, true);\n    return filterWrapper ? getFilterUiFromWrapper(filterWrapper) : null;\n  }\n  getFilterUiForDisplay(column) {\n    const filterWrapper = this.getOrCreateFilterWrapper(column, true);\n    if (!filterWrapper) {\n      return null;\n    }\n    const compPromise = getFilterUiFromWrapper(filterWrapper);\n    if (!compPromise) {\n      return null;\n    }\n    return compPromise.then(comp => ({\n      comp,\n      params: filterWrapper.filterUi.filterParams,\n      isHandler: filterWrapper.isHandler\n    }));\n  }\n  getHandler(column, createIfMissing) {\n    const filterWrapper = this.getOrCreateFilterWrapper(column, createIfMissing);\n    return filterWrapper?.isHandler ? filterWrapper.handler : void 0;\n  }\n  getOrCreateFilterWrapper(column, createIfMissing) {\n    if (!column.isFilterAllowed()) {\n      return void 0;\n    }\n    let filterWrapper = this.cachedFilter(column);\n    if (!filterWrapper && createIfMissing) {\n      filterWrapper = this.createFilterWrapper(column);\n      this.setColumnFilterWrapper(column, filterWrapper);\n    }\n    return filterWrapper;\n  }\n  cachedFilter(column) {\n    return this.allColumnFilters.get(column.getColId());\n  }\n  getDefaultFilter(column, isFloating = false) {\n    return this.getDefaultFilterFromDataType(() => this.beans.dataTypeSvc?.getBaseDataType(column), isFloating);\n  }\n  getDefaultFilterFromDataType(getCellDataType, isFloating = false) {\n    if (_isSetFilterByDefault(this.gos)) {\n      return isFloating ? \"agSetColumnFloatingFilter\" : \"agSetColumnFilter\";\n    }\n    return _getDefaultSimpleFilter(getCellDataType(), isFloating);\n  }\n  getDefaultFloatingFilter(column) {\n    return this.getDefaultFilter(column, true);\n  }\n  createFilterComp(column, filterDef, defaultFilter, getFilterParams, isHandler, source) {\n    const createFilterCompDetails = () => {\n      const params = this.createFilterCompParams(column, isHandler, source);\n      const updatedParams = getFilterParams(params, isHandler);\n      return _getFilterDetails(this.beans.userCompFactory, filterDef, updatedParams, defaultFilter);\n    };\n    const compDetails = createFilterCompDetails();\n    if (!compDetails) {\n      return null;\n    }\n    const createFilterUi = update => {\n      return (update ? createFilterCompDetails() : compDetails).newAgStackInstance();\n    };\n    return {\n      compDetails,\n      createFilterUi\n    };\n  }\n  createFilterInstance(column, filterDef, defaultFilter, getFilterParams) {\n    const selectableFilter = this.beans.selectableFilter;\n    if (selectableFilter?.isSelectable(filterDef)) {\n      filterDef = selectableFilter.getFilterDef(column, filterDef);\n    }\n    const {\n      handler,\n      handlerParams,\n      handlerGenerator\n    } = this.createHandler(column, filterDef, defaultFilter) ?? {};\n    const filterCompDetails = this.createFilterComp(column, filterDef, defaultFilter, getFilterParams, !!handler, \"init\");\n    if (!filterCompDetails) {\n      return {\n        compDetails: null,\n        createFilterUi: null,\n        handler,\n        handlerGenerator,\n        handlerParams\n      };\n    }\n    const {\n      compDetails,\n      createFilterUi\n    } = filterCompDetails;\n    if (this.isGlobalButtons) {\n      const hasLocalButtons = !!compDetails.params?.buttons?.length;\n      if (!hasLocalButtons) {\n        _warn(281, {\n          colId: column.getColId()\n        });\n      }\n    }\n    return {\n      compDetails,\n      handler,\n      handlerGenerator,\n      handlerParams,\n      createFilterUi\n    };\n  }\n  createBaseFilterParams(column, forFloatingFilter) {\n    const {\n      filterManager,\n      rowModel\n    } = this.beans;\n    return _addGridCommonParams(this.gos, {\n      column,\n      colDef: column.getColDef(),\n      getValue: this.createGetValue(column),\n      doesRowPassOtherFilter: forFloatingFilter ? () => true : node => filterManager?.doesRowPassOtherFilters(column.getColId(), node) ?? true,\n      // to avoid breaking changes to `filterParams` defined as functions\n      // we need to provide the below options even though they are not valid for handlers\n      rowModel\n    });\n  }\n  createFilterCompParams(column, useHandler, source, forFloatingFilter) {\n    const filterChangedCallback = this.filterChangedCallbackFactory(column);\n    const params = this.createBaseFilterParams(column, forFloatingFilter);\n    params.filterChangedCallback = filterChangedCallback;\n    params.filterModifiedCallback = forFloatingFilter ? () => {} : additionalEventAttributes => this.filterModified(column, additionalEventAttributes);\n    if (useHandler) {\n      const displayParams = params;\n      const colId = column.getColId();\n      const model = _getFilterModel(this.model, colId);\n      displayParams.model = model;\n      displayParams.state = this.state.get(colId) ?? {\n        model\n      };\n      displayParams.onModelChange = (model2, additionalEventAttributes) => {\n        this.updateStoredModel(colId, model2);\n        this.refreshHandlerAndUi(column, model2, \"ui\").then(() => {\n          filterChangedCallback({\n            ...additionalEventAttributes,\n            source: \"columnFilter\"\n          });\n        });\n      };\n      displayParams.onStateChange = state => {\n        this.updateState(column, state);\n        this.updateOrRefreshFilterUi(column);\n      };\n      displayParams.onAction = (action, additionalEventAttributes, event) => {\n        this.updateModel(column, action, additionalEventAttributes);\n        this.dispatchLocalEvent({\n          type: \"filterAction\",\n          column,\n          action,\n          event\n        });\n      };\n      displayParams.getHandler = () => this.getHandler(column, true);\n      displayParams.onUiChange = additionalEventAttributes => this.filterUiChanged(column, additionalEventAttributes);\n      displayParams.source = source;\n    }\n    return params;\n  }\n  createFilterUiForHandler(compDetails, createFilterUi) {\n    return createFilterUi ? {\n      created: false,\n      create: createFilterUi,\n      filterParams: compDetails.params,\n      compDetails\n    } : null;\n  }\n  createFilterUiLegacy(compDetails, createFilterUi, updateInstanceCallback) {\n    const promise = createFilterUi();\n    const filterUi = {\n      created: true,\n      create: createFilterUi,\n      filterParams: compDetails.params,\n      compDetails,\n      promise\n    };\n    promise.then(updateInstanceCallback);\n    return filterUi;\n  }\n  createFilterWrapper(column) {\n    const {\n      compDetails,\n      handler,\n      handlerGenerator,\n      handlerParams,\n      createFilterUi\n    } = this.createFilterInstance(column, column.getColDef(), this.getDefaultFilter(column), params => params);\n    const colId = column.getColId();\n    if (handler) {\n      delete this.initialModel[colId];\n      handler.init?.({\n        ...handlerParams,\n        source: \"init\",\n        model: _getFilterModel(this.model, colId)\n      });\n      return {\n        column,\n        isHandler: true,\n        handler,\n        handlerGenerator,\n        handlerParams,\n        filterUi: this.createFilterUiForHandler(compDetails, createFilterUi)\n      };\n    }\n    if (createFilterUi) {\n      const filterWrapper = {\n        column,\n        filterUi: null,\n        isHandler: false\n      };\n      filterWrapper.filterUi = this.createFilterUiLegacy(compDetails, createFilterUi, filterComp => {\n        filterWrapper.filter = filterComp ?? void 0;\n      });\n      return filterWrapper;\n    }\n    return {\n      column,\n      filterUi: null,\n      isHandler: false\n    };\n  }\n  createHandlerFunc(filterDef, defaultFilter) {\n    const {\n      gos,\n      frameworkOverrides,\n      registry\n    } = this.beans;\n    let doesFilterPass;\n    const getFilterHandlerFromDef = filterDef2 => {\n      const filter = filterDef2.filter;\n      if (isColumnFilterComp(filter)) {\n        const handler = filter.handler;\n        if (handler) {\n          return handler;\n        }\n        doesFilterPass = filter.doesFilterPass;\n        if (doesFilterPass) {\n          return () => ({\n            doesFilterPass\n          });\n        }\n        return void 0;\n      }\n      return typeof filter === \"string\" ? filter : void 0;\n    };\n    const providedFilterHandler = gos.get(\"enableFilterHandlers\") ? getFilterHandlerFromDef(filterDef) : void 0;\n    const resolveProvidedFilterHandler = handlerName2 => () => this.createBean(registry.createDynamicBean(handlerName2, true));\n    let filterHandler;\n    let handlerName;\n    if (typeof providedFilterHandler === \"string\") {\n      const userFilterHandler = gos.get(\"filterHandlers\")?.[providedFilterHandler];\n      if (userFilterHandler != null) {\n        filterHandler = userFilterHandler;\n      } else {\n        if (FILTER_HANDLERS.has(providedFilterHandler)) {\n          filterHandler = resolveProvidedFilterHandler(providedFilterHandler);\n          handlerName = providedFilterHandler;\n        }\n      }\n    } else {\n      filterHandler = providedFilterHandler;\n    }\n    if (!filterHandler) {\n      let filterName;\n      const {\n        compName,\n        jsComp,\n        fwComp\n      } = _getFilterCompKeys(frameworkOverrides, filterDef);\n      if (compName) {\n        filterName = compName;\n      } else {\n        const usingDefaultFilter = jsComp == null && fwComp == null && filterDef.filter === true;\n        if (usingDefaultFilter) {\n          filterName = defaultFilter;\n        }\n      }\n      handlerName = this.handlerMap[filterName];\n      if (handlerName) {\n        filterHandler = resolveProvidedFilterHandler(handlerName);\n      }\n    }\n    if (!filterHandler) {\n      return void 0;\n    }\n    return {\n      filterHandler,\n      handlerNameOrCallback: doesFilterPass ?? handlerName\n    };\n  }\n  createHandler(column, filterDef, defaultFilter) {\n    let handlerFunc = this.createHandlerFunc(filterDef, defaultFilter);\n    if (!handlerFunc) {\n      const gos = this.gos;\n      if (!gos.get(\"enableFilterHandlers\")) {\n        return void 0;\n      }\n      if (_isClientSideRowModel(gos)) {\n        _warn(277, {\n          colId: column.getColId()\n        });\n      }\n      handlerFunc = DUMMY_HANDLER;\n    }\n    const filterParams = _mergeFilterParamsWithApplicationProvidedParams(this.beans.userCompFactory, filterDef, this.createFilterCompParams(column, true, \"init\"));\n    const {\n      handlerNameOrCallback,\n      filterHandler\n    } = handlerFunc;\n    const {\n      handler,\n      handlerParams\n    } = this.createHandlerFromFunc(column, filterHandler, filterParams);\n    return {\n      handler,\n      handlerParams,\n      handlerGenerator: handlerNameOrCallback ?? filterHandler\n    };\n  }\n  createHandlerFromFunc(column, filterHandler, filterParams) {\n    const colDef = column.getColDef();\n    const handler = filterHandler(_addGridCommonParams(this.gos, {\n      column,\n      colDef\n    }));\n    const handlerParams = this.createHandlerParams(column, filterParams);\n    return {\n      handler,\n      handlerParams\n    };\n  }\n  createHandlerParams(column, filterParams) {\n    const colDef = column.getColDef();\n    const colId = column.getColId();\n    const filterChangedCallback = this.filterChangedCallbackFactory(column);\n    return _addGridCommonParams(this.gos, {\n      colDef,\n      column,\n      getValue: this.createGetValue(column),\n      doesRowPassOtherFilter: node => this.beans.filterManager?.doesRowPassOtherFilters(colId, node) ?? true,\n      onModelChange: (newModel, additionalEventAttributes) => {\n        this.updateStoredModel(colId, newModel);\n        this.refreshHandlerAndUi(column, newModel, \"handler\").then(() => {\n          filterChangedCallback({\n            ...additionalEventAttributes,\n            source: \"columnFilter\"\n          });\n        });\n      },\n      filterParams\n    });\n  }\n  onColumnsChanged() {\n    const columns = [];\n    const {\n      colModel,\n      filterManager,\n      groupFilter\n    } = this.beans;\n    this.allColumnFilters.forEach((wrapper, colId) => {\n      let currentColumn;\n      if (wrapper.column.isPrimary()) {\n        currentColumn = colModel.getColDefCol(colId);\n      } else {\n        currentColumn = colModel.getCol(colId);\n      }\n      if (currentColumn && currentColumn === wrapper.column) {\n        return;\n      }\n      columns.push(wrapper.column);\n      this.disposeFilterWrapper(wrapper, \"columnChanged\");\n      this.disposeColumnListener(colId);\n    });\n    const allFiltersAreGroupFilters = groupFilter && columns.every(col => groupFilter.isGroupFilter(col));\n    if (columns.length > 0 && !allFiltersAreGroupFilters) {\n      filterManager?.onFilterChanged({\n        columns,\n        source: \"api\"\n      });\n    }\n  }\n  isFilterAllowed(column) {\n    const isFilterAllowed = column.isFilterAllowed();\n    if (!isFilterAllowed) {\n      return false;\n    }\n    const groupFilter = this.beans.groupFilter;\n    if (groupFilter?.isGroupFilter(column)) {\n      return groupFilter.isFilterAllowed(column);\n    }\n    return true;\n  }\n  getFloatingFilterCompDetails(column, showParentFilter) {\n    const {\n      userCompFactory,\n      frameworkOverrides,\n      selectableFilter\n    } = this.beans;\n    const parentFilterInstance = callback => {\n      const filterComponent = this.getOrCreateFilterUi(column);\n      if (filterComponent == null) {\n        return;\n      }\n      filterComponent.then(instance => {\n        callback(_unwrapUserComp(instance));\n      });\n    };\n    const colDef = column.getColDef();\n    const filterDef = selectableFilter?.isSelectable(colDef) ? selectableFilter.getFilterDef(column, colDef) : colDef;\n    const defaultFloatingFilterType = _getDefaultFloatingFilterType(frameworkOverrides, filterDef, () => this.getDefaultFloatingFilter(column)) ?? \"agReadOnlyFloatingFilter\";\n    const isReactive = this.gos.get(\"enableFilterHandlers\");\n    const filterParams = _mergeFilterParamsWithApplicationProvidedParams(userCompFactory, filterDef, this.createFilterCompParams(column, isReactive, \"init\", true));\n    const params = _addGridCommonParams(this.gos, {\n      column,\n      filterParams,\n      currentParentModel: () => this.getCurrentFloatingFilterParentModel(column),\n      parentFilterInstance,\n      showParentFilter\n    });\n    if (isReactive) {\n      const displayParams = params;\n      const colId = column.getColId();\n      const filterChangedCallback = this.filterChangedCallbackFactory(column);\n      displayParams.onUiChange = additionalEventAttributes => this.floatingFilterUiChanged(column, additionalEventAttributes);\n      displayParams.model = _getFilterModel(this.model, colId);\n      displayParams.onModelChange = (model, additionalEventAttributes) => {\n        this.updateStoredModel(colId, model);\n        this.refreshHandlerAndUi(column, model, \"floating\", true).then(() => {\n          filterChangedCallback({\n            ...additionalEventAttributes,\n            source: \"columnFilter\"\n          });\n        });\n      };\n      displayParams.getHandler = () => this.getHandler(column, true);\n      displayParams.source = \"init\";\n    }\n    return _getFloatingFilterCompDetails(userCompFactory, colDef, params, defaultFloatingFilterType);\n  }\n  getCurrentFloatingFilterParentModel(column) {\n    return this.getModelFromFilterWrapper(this.cachedFilter(column) ?? {\n      column\n    });\n  }\n  destroyFilterUi(filterWrapper, column, compDetails, createFilterUi) {\n    if (filterWrapper.isHandler) {\n      const colId = column.getColId();\n      delete this.initialModel[colId];\n      this.state.delete(colId);\n      const filterUi = filterWrapper.filterUi;\n      const newFilterUi = this.createFilterUiForHandler(compDetails, createFilterUi);\n      filterWrapper.filterUi = newFilterUi;\n      if (filterUi?.created) {\n        filterUi.promise.then(filter => {\n          this.destroyBean(filter);\n          this.eventSvc.dispatchEvent({\n            type: \"filterDestroyed\",\n            source: \"paramsUpdated\",\n            column: filterWrapper.column\n          });\n        });\n      }\n    } else {\n      this.destroyFilter(column, \"paramsUpdated\");\n    }\n  }\n  // destroys the filter, so it no longer takes part\n  destroyFilter(column, source = \"api\") {\n    const colId = column.getColId();\n    const filterWrapper = this.allColumnFilters.get(colId);\n    this.disposeColumnListener(colId);\n    delete this.initialModel[colId];\n    if (filterWrapper) {\n      this.disposeFilterWrapper(filterWrapper, source).then(wasActive => {\n        if (wasActive && this.isAlive()) {\n          this.beans.filterManager?.onFilterChanged({\n            columns: [column],\n            source: \"api\"\n          });\n        }\n      });\n    }\n  }\n  disposeColumnListener(colId) {\n    const columnListener = this.allColumnListeners.get(colId);\n    if (columnListener) {\n      this.allColumnListeners.delete(colId);\n      columnListener();\n    }\n  }\n  disposeFilterWrapper(filterWrapper, source) {\n    let isActive = false;\n    const {\n      column,\n      isHandler,\n      filterUi\n    } = filterWrapper;\n    const colId = column.getColId();\n    if (isHandler) {\n      isActive = this.isHandlerActive(column);\n      this.destroyBean(filterWrapper.handler);\n      delete this.model[colId];\n      this.state.delete(colId);\n    }\n    const removeFilter = () => {\n      this.setColFilterActive(column, false, \"filterDestroyed\");\n      this.allColumnFilters.delete(colId);\n      this.eventSvc.dispatchEvent({\n        type: \"filterDestroyed\",\n        source,\n        column\n      });\n    };\n    if (filterUi) {\n      if (filterUi.created) {\n        return filterUi.promise.then(filter => {\n          isActive = isHandler ? isActive : !!filter?.isFilterActive();\n          this.destroyBean(filter);\n          removeFilter();\n          return isActive;\n        });\n      } else {\n        removeFilter();\n      }\n    }\n    return AgPromise.resolve(isActive);\n  }\n  filterChangedCallbackFactory(column) {\n    return additionalEventAttributes => {\n      this.callOnFilterChangedOutsideRenderCycle({\n        additionalEventAttributes,\n        columns: [column],\n        column,\n        source: additionalEventAttributes?.source ?? \"columnFilter\"\n      });\n    };\n  }\n  filterParamsChanged(colId, source = \"api\") {\n    const filterWrapper = this.allColumnFilters.get(colId);\n    if (!filterWrapper) {\n      return;\n    }\n    const beans = this.beans;\n    const column = filterWrapper.column;\n    const colDef = column.getColDef();\n    const isFilterAllowed = column.isFilterAllowed();\n    const defaultFilter = this.getDefaultFilter(column);\n    const selectableFilter = beans.selectableFilter;\n    const filterDef = selectableFilter?.isSelectable(colDef) ? selectableFilter.getFilterDef(column, colDef) : colDef;\n    const handlerFunc = isFilterAllowed ? this.createHandlerFunc(filterDef, this.getDefaultFilter(column)) : void 0;\n    const isHandler = !!handlerFunc;\n    const wasHandler = filterWrapper.isHandler;\n    if (wasHandler != isHandler) {\n      this.destroyFilter(column, \"paramsUpdated\");\n      return;\n    }\n    const {\n      compDetails,\n      createFilterUi\n    } = (isFilterAllowed ? this.createFilterComp(column, filterDef, defaultFilter, params => params, isHandler, \"colDef\") : null) ?? {\n      compDetails: null,\n      createFilterUi: null\n    };\n    const newFilterParams = compDetails?.params ?? _mergeFilterParamsWithApplicationProvidedParams(beans.userCompFactory, filterDef, this.createFilterCompParams(column, isHandler, \"colDef\"));\n    if (wasHandler) {\n      const handlerGenerator = handlerFunc?.handlerNameOrCallback ?? handlerFunc?.filterHandler;\n      const existingModel = _getFilterModel(this.model, colId);\n      if (filterWrapper.handlerGenerator != handlerGenerator) {\n        const oldHandler = filterWrapper.handler;\n        const {\n          handler,\n          handlerParams\n        } = this.createHandlerFromFunc(column, handlerFunc.filterHandler, newFilterParams);\n        filterWrapper.handler = handler;\n        filterWrapper.handlerParams = handlerParams;\n        filterWrapper.handlerGenerator = handlerGenerator;\n        delete this.model[colId];\n        handler.init?.({\n          ...handlerParams,\n          source: \"init\",\n          model: null\n        });\n        this.destroyBean(oldHandler);\n        if (existingModel != null) {\n          this.beans.filterManager?.onFilterChanged({\n            columns: [column],\n            source\n          });\n        }\n      } else {\n        const handlerParams = this.createHandlerParams(column, compDetails?.params);\n        filterWrapper.handlerParams = handlerParams;\n        filterWrapper.handler.refresh?.({\n          ...handlerParams,\n          source: \"colDef\",\n          model: existingModel\n        });\n      }\n    }\n    if (this.areFilterCompsDifferent(filterWrapper.filterUi?.compDetails ?? null, compDetails) || !filterWrapper.filterUi || !compDetails) {\n      this.destroyFilterUi(filterWrapper, column, compDetails, createFilterUi);\n      return;\n    }\n    filterWrapper.filterUi.filterParams = newFilterParams;\n    getFilterUiFromWrapper(filterWrapper, wasHandler)?.then(filter => {\n      const shouldRefreshFilter = filter?.refresh ? filter.refresh(newFilterParams) : true;\n      if (shouldRefreshFilter === false) {\n        this.destroyFilterUi(filterWrapper, column, compDetails, createFilterUi);\n      } else {\n        this.dispatchLocalEvent({\n          type: \"filterParamsChanged\",\n          column,\n          params: newFilterParams\n        });\n      }\n    });\n  }\n  refreshHandlerAndUi(column, model, source, createIfMissing) {\n    const filterWrapper = this.cachedFilter(column);\n    if (!filterWrapper) {\n      if (createIfMissing) {\n        this.getOrCreateFilterWrapper(column, true);\n      }\n      return AgPromise.resolve();\n    }\n    if (!filterWrapper.isHandler) {\n      return AgPromise.resolve();\n    }\n    const {\n      filterUi,\n      handler,\n      handlerParams\n    } = filterWrapper;\n    return _refreshHandlerAndUi(() => {\n      if (filterUi) {\n        const {\n          created,\n          filterParams\n        } = filterUi;\n        if (created) {\n          return filterUi.promise.then(filter => {\n            return filter ? {\n              filter,\n              filterParams\n            } : void 0;\n          });\n        } else {\n          filterUi.refreshed = true;\n        }\n      }\n      return AgPromise.resolve(void 0);\n    }, handler, handlerParams, model, this.state.get(column.getColId()) ?? {\n      model\n    }, source);\n  }\n  setColumnFilterWrapper(column, filterWrapper) {\n    const colId = column.getColId();\n    this.allColumnFilters.set(colId, filterWrapper);\n    this.allColumnListeners.set(colId, this.addManagedListeners(column, {\n      colDefChanged: () => this.filterParamsChanged(colId)\n    })[0]);\n  }\n  areFilterCompsDifferent(oldCompDetails, newCompDetails) {\n    if (!newCompDetails || !oldCompDetails) {\n      return true;\n    }\n    const {\n      componentClass: oldComponentClass\n    } = oldCompDetails;\n    const {\n      componentClass: newComponentClass\n    } = newCompDetails;\n    const isSameComponentClass = oldComponentClass === newComponentClass ||\n    // react hooks returns new wrappers, so check nested render method\n    oldComponentClass?.render && newComponentClass?.render && oldComponentClass.render === newComponentClass.render;\n    return !isSameComponentClass;\n  }\n  hasFloatingFilters() {\n    const gridColumns = this.beans.colModel.getCols();\n    return gridColumns.some(col => col.getColDef().floatingFilter);\n  }\n  getFilterInstance(key) {\n    const column = this.beans.colModel.getColDefCol(key);\n    if (!column) {\n      return Promise.resolve(void 0);\n    }\n    const filterPromise = this.getOrCreateFilterUi(column);\n    if (!filterPromise) {\n      return Promise.resolve(null);\n    }\n    return new Promise(resolve => {\n      filterPromise.then(filter => {\n        resolve(_unwrapUserComp(filter));\n      });\n    });\n  }\n  processFilterModelUpdateQueue() {\n    this.modelUpdates.forEach(({\n      model,\n      source\n    }) => this.setModel(model, source));\n    this.modelUpdates = [];\n    this.columnModelUpdates.forEach(({\n      key,\n      model,\n      resolve\n    }) => {\n      this.setModelForColumn(key, model).then(() => resolve());\n    });\n    this.columnModelUpdates = [];\n  }\n  getModelForColumn(column, useUnapplied) {\n    if (useUnapplied) {\n      const {\n        state,\n        model\n      } = this;\n      const colId = column.getColId();\n      const colState = state.get(colId);\n      if (colState) {\n        return colState.model ?? null;\n      }\n      return _getFilterModel(model, colId);\n    }\n    const filterWrapper = this.cachedFilter(column);\n    return filterWrapper ? this.getModelFromFilterWrapper(filterWrapper) : null;\n  }\n  setModelForColumn(key, model) {\n    if (this.beans.dataTypeSvc?.isPendingInference) {\n      let resolve = () => {};\n      const promise = new Promise(res => {\n        resolve = res;\n      });\n      this.columnModelUpdates.push({\n        key,\n        model,\n        resolve\n      });\n      return promise;\n    }\n    return new Promise(resolve => {\n      this.setModelForColumnLegacy(key, model).then(result => resolve(result));\n    });\n  }\n  getStateForColumn(colId) {\n    return this.state.get(colId) ?? {\n      model: _getFilterModel(this.model, colId)\n    };\n  }\n  setModelForColumnLegacy(key, model) {\n    const column = this.beans.colModel.getColDefCol(key);\n    const filterWrapper = column ? this.getOrCreateFilterWrapper(column, true) : null;\n    return filterWrapper ? this.setModelOnFilterWrapper(filterWrapper, model) : AgPromise.resolve();\n  }\n  setColDefPropsForDataType(colDef, dataTypeDefinition, formatValue) {\n    const providedFilter = colDef.filter;\n    const filter = providedFilter === true ? this.getDefaultFilterFromDataType(() => dataTypeDefinition.baseDataType) : providedFilter;\n    if (typeof filter !== \"string\") {\n      return;\n    }\n    let filterParams;\n    let filterValueGetter;\n    const beans = this.beans;\n    const {\n      filterParams: colDefFilterParams,\n      filterValueGetter: colDefFilterValueGetter\n    } = colDef;\n    if (filter === \"agMultiColumnFilter\") {\n      ({\n        filterParams,\n        filterValueGetter\n      } = beans.multiFilter?.getParamsForDataType(colDefFilterParams, colDefFilterValueGetter, dataTypeDefinition, formatValue) ?? {});\n    } else {\n      ({\n        filterParams,\n        filterValueGetter\n      } = _getFilterParamsForDataType(filter, colDefFilterParams, colDefFilterValueGetter, dataTypeDefinition, formatValue, beans, this.getLocaleTextFunc()));\n    }\n    colDef.filterParams = filterParams;\n    if (filterValueGetter) {\n      colDef.filterValueGetter = filterValueGetter;\n    }\n  }\n  // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n  setColFilterActive(column, active, source, additionalEventAttributes) {\n    if (column.filterActive !== active) {\n      column.filterActive = active;\n      column.dispatchColEvent(\"filterActiveChanged\", source);\n    }\n    column.dispatchColEvent(\"filterChanged\", source, additionalEventAttributes);\n  }\n  setModelOnFilterWrapper(filterWrapper, newModel, justCreated) {\n    return new AgPromise(resolve => {\n      if (filterWrapper.isHandler) {\n        const column = filterWrapper.column;\n        const colId = column.getColId();\n        const existingModel = this.model[colId];\n        this.updateStoredModel(colId, newModel);\n        if (justCreated && newModel === existingModel) {\n          resolve();\n          return;\n        }\n        this.refreshHandlerAndUi(column, newModel, \"api\").then(() => resolve());\n        return;\n      }\n      const uiPromise = getFilterUiFromWrapper(filterWrapper);\n      if (uiPromise) {\n        uiPromise.then(filter => {\n          if (typeof filter?.setModel !== \"function\") {\n            _warn(65);\n            resolve();\n            return;\n          }\n          (filter.setModel(newModel) || AgPromise.resolve()).then(() => resolve());\n        });\n        return;\n      }\n      resolve();\n    });\n  }\n  /** for handlers only */\n  updateStoredModel(colId, model) {\n    if (_exists(model)) {\n      this.model[colId] = model;\n    } else {\n      delete this.model[colId];\n    }\n    const oldState = this.state.get(colId);\n    const newState = {\n      model,\n      state: oldState?.state\n    };\n    this.state.set(colId, newState);\n  }\n  filterModified(column, additionalEventAttributes) {\n    this.getOrCreateFilterUi(column)?.then(filterInstance => {\n      this.eventSvc.dispatchEvent({\n        type: \"filterModified\",\n        column,\n        filterInstance,\n        ...additionalEventAttributes\n      });\n    });\n  }\n  filterUiChanged(column, additionalEventAttributes) {\n    if (this.gos.get(\"enableFilterHandlers\")) {\n      this.eventSvc.dispatchEvent({\n        type: \"filterUiChanged\",\n        column,\n        ...additionalEventAttributes\n      });\n    }\n  }\n  floatingFilterUiChanged(column, additionalEventAttributes) {\n    if (this.gos.get(\"enableFilterHandlers\")) {\n      this.eventSvc.dispatchEvent({\n        type: \"floatingFilterUiChanged\",\n        column,\n        ...additionalEventAttributes\n      });\n    }\n  }\n  updateModel(column, action, additionalEventAttributes) {\n    const colId = column.getColId();\n    const getFilterUi = () => this.cachedFilter(column)?.filterUi;\n    _updateFilterModel(action, getFilterUi, () => _getFilterModel(this.model, colId), () => this.state.get(colId), state => this.updateState(column, state), model => getFilterUi()?.filterParams?.onModelChange(model, additionalEventAttributes));\n  }\n  updateAllModels(action, additionalEventAttributes) {\n    const promises = [];\n    this.allColumnFilters.forEach((filter, colId) => {\n      const column = this.beans.colModel.getColDefCol(colId);\n      if (column) {\n        _updateFilterModel(action, () => filter.filterUi, () => _getFilterModel(this.model, colId), () => this.state.get(colId), state => this.updateState(column, state), model => {\n          this.updateStoredModel(colId, model);\n          this.dispatchLocalEvent({\n            type: \"filterAction\",\n            column,\n            action\n          });\n          promises.push(this.refreshHandlerAndUi(column, model, \"ui\"));\n        });\n      }\n    });\n    if (promises.length) {\n      AgPromise.all(promises).then(() => {\n        this.callOnFilterChangedOutsideRenderCycle({\n          source: \"columnFilter\",\n          additionalEventAttributes,\n          columns: []\n        });\n      });\n    }\n  }\n  updateOrRefreshFilterUi(column) {\n    const colId = column.getColId();\n    getAndRefreshFilterUi(() => this.cachedFilter(column)?.filterUi, () => _getFilterModel(this.model, colId), () => this.state.get(colId));\n  }\n  updateState(column, state) {\n    this.state.set(column.getColId(), state);\n    this.dispatchLocalEvent({\n      type: \"filterStateChanged\",\n      column,\n      state\n    });\n  }\n  // for tool panel only\n  canApplyAll() {\n    const {\n      state,\n      model,\n      activeFilterComps\n    } = this;\n    for (const comp of activeFilterComps) {\n      if (comp.source === \"COLUMN_MENU\") {\n        return false;\n      }\n    }\n    let hasChanges = false;\n    for (const colId of state.keys()) {\n      const colState = state.get(colId);\n      if (colState.valid === false) {\n        return false;\n      }\n      if ((colState.model ?? null) !== _getFilterModel(model, colId)) {\n        hasChanges = true;\n      }\n    }\n    return hasChanges;\n  }\n  hasUnappliedModel(colId) {\n    const {\n      model,\n      state\n    } = this;\n    return (state.get(colId)?.model ?? null) !== _getFilterModel(model, colId);\n  }\n  setGlobalButtons(isGlobal) {\n    this.isGlobalButtons = isGlobal;\n    this.dispatchLocalEvent({\n      type: \"filterGlobalButtons\",\n      isGlobal\n    });\n  }\n  shouldKeepStateOnDetach(column, lastContainerType) {\n    if (lastContainerType === \"newFiltersToolPanel\") {\n      return true;\n    }\n    const filterPanelSvc = this.beans.filterPanelSvc;\n    if (filterPanelSvc?.isActive) {\n      return !!filterPanelSvc.getState(column.getColId());\n    }\n    return false;\n  }\n  destroy() {\n    super.destroy();\n    this.allColumnFilters.forEach(filterWrapper => this.disposeFilterWrapper(filterWrapper, \"gridDestroyed\"));\n    this.allColumnListeners.clear();\n    this.state.clear();\n    this.activeFilterComps.clear();\n  }\n};\n\n// packages/ag-grid-community/src/filter/filterApi.ts\nfunction isAnyFilterPresent(beans) {\n  return !!beans.filterManager?.isAnyFilterPresent();\n}\nfunction onFilterChanged(beans, source = \"api\") {\n  beans.filterManager?.onFilterChanged({\n    source\n  });\n}\n\n// packages/ag-grid-community/src/filter/filterManager.ts\nvar FilterManager = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterManager\";\n    // when we're waiting for cell data types to be inferred, we need to defer filter model updates\n    this.advFilterModelUpdateQueue = [];\n  }\n  wireBeans(beans) {\n    this.quickFilter = beans.quickFilter;\n    this.advancedFilter = beans.advancedFilter;\n    this.colFilter = beans.colFilter;\n  }\n  postConstruct() {\n    const refreshFiltersForAggregations = this.refreshFiltersForAggregations.bind(this);\n    const updateAdvFilterColumns = this.updateAdvFilterColumns.bind(this);\n    this.addManagedEventListeners({\n      columnValueChanged: refreshFiltersForAggregations,\n      columnPivotChanged: refreshFiltersForAggregations,\n      columnPivotModeChanged: refreshFiltersForAggregations,\n      newColumnsLoaded: updateAdvFilterColumns,\n      columnVisible: updateAdvFilterColumns,\n      advancedFilterEnabledChanged: ({\n        enabled\n      }) => this.onAdvFilterEnabledChanged(enabled),\n      dataTypesInferred: this.processFilterModelUpdateQueue.bind(this)\n    });\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\n    this.addManagedPropertyListeners([\"isExternalFilterPresent\", \"doesExternalFilterPass\"], () => {\n      this.onFilterChanged({\n        source: \"api\"\n      });\n    });\n    this.updateAggFiltering();\n    this.addManagedPropertyListener(\"groupAggFiltering\", () => {\n      this.updateAggFiltering();\n      this.onFilterChanged();\n    });\n    if (this.quickFilter) {\n      this.addManagedListeners(this.quickFilter, {\n        quickFilterChanged: () => this.onFilterChanged({\n          source: \"quickFilter\"\n        })\n      });\n    }\n    const {\n      gos\n    } = this;\n    this.alwaysPassFilter = gos.get(\"alwaysPassFilter\");\n    this.addManagedPropertyListener(\"alwaysPassFilter\", () => {\n      this.alwaysPassFilter = gos.get(\"alwaysPassFilter\");\n      this.onFilterChanged({\n        source: \"api\"\n      });\n    });\n  }\n  isExternalFilterPresentCallback() {\n    const isFilterPresent = this.gos.getCallback(\"isExternalFilterPresent\");\n    return typeof isFilterPresent === \"function\" && isFilterPresent({});\n  }\n  doesExternalFilterPass(node) {\n    const doesFilterPass = this.gos.get(\"doesExternalFilterPass\");\n    return typeof doesFilterPass === \"function\" && doesFilterPass(node);\n  }\n  setFilterState(model, state, source = \"api\") {\n    if (this.isAdvFilterEnabled()) {\n      return;\n    }\n    this.colFilter?.setState(model, state, source);\n  }\n  setFilterModel(model, source = \"api\", skipWarning) {\n    if (this.isAdvFilterEnabled()) {\n      if (!skipWarning) {\n        this.warnAdvFilters();\n      }\n      return;\n    }\n    this.colFilter?.setModel(model, source);\n  }\n  getFilterModel() {\n    return this.colFilter?.getModel() ?? {};\n  }\n  getFilterState() {\n    return this.colFilter?.getState();\n  }\n  isColumnFilterPresent() {\n    return !!this.colFilter?.isFilterPresent();\n  }\n  isAggregateFilterPresent() {\n    return !!this.colFilter?.isAggFilterPresent();\n  }\n  isChildFilterPresent() {\n    return this.isColumnFilterPresent() || this.isQuickFilterPresent() || this.externalFilterPresent || this.isAdvFilterPresent();\n  }\n  isAnyFilterPresent() {\n    return this.isChildFilterPresent() || this.isAggregateFilterPresent();\n  }\n  isAdvFilterPresent() {\n    return this.isAdvFilterEnabled() && this.advancedFilter.isFilterPresent();\n  }\n  onAdvFilterEnabledChanged(enabled) {\n    if (enabled) {\n      if (this.colFilter?.disableFilters()) {\n        this.onFilterChanged({\n          source: \"advancedFilter\"\n        });\n      }\n    } else {\n      if (this.advancedFilter?.isFilterPresent()) {\n        this.advancedFilter.setModel(null);\n        this.onFilterChanged({\n          source: \"advancedFilter\"\n        });\n      }\n    }\n  }\n  isAdvFilterEnabled() {\n    return !!this.advancedFilter?.isEnabled();\n  }\n  isAdvFilterHeaderActive() {\n    return this.isAdvFilterEnabled() && this.advancedFilter.isHeaderActive();\n  }\n  refreshFiltersForAggregations() {\n    if (_getGroupAggFiltering(this.gos) && this.isAnyFilterPresent()) {\n      this.onFilterChanged();\n    }\n  }\n  onFilterChanged(params = {}) {\n    const {\n      source,\n      additionalEventAttributes,\n      columns = []\n    } = params;\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\n    (this.colFilter ? this.colFilter.updateBeforeFilterChanged(params) : AgPromise.resolve()).then(() => {\n      const filterChangedEvent = {\n        source,\n        type: \"filterChanged\",\n        columns\n      };\n      if (additionalEventAttributes) {\n        _mergeDeep(filterChangedEvent, additionalEventAttributes);\n      }\n      this.eventSvc.dispatchEvent(filterChangedEvent);\n      this.colFilter?.updateAfterFilterChanged();\n    });\n  }\n  isSuppressFlashingCellsBecauseFiltering() {\n    return !!this.colFilter?.isSuppressFlashingCellsBecauseFiltering();\n  }\n  isQuickFilterPresent() {\n    return !!this.quickFilter?.isFilterPresent();\n  }\n  updateAggFiltering() {\n    this.aggFiltering = !!_getGroupAggFiltering(this.gos);\n  }\n  isAggregateQuickFilterPresent() {\n    return this.isQuickFilterPresent() && this.shouldApplyQuickFilterAfterAgg();\n  }\n  isNonAggregateQuickFilterPresent() {\n    return this.isQuickFilterPresent() && !this.shouldApplyQuickFilterAfterAgg();\n  }\n  shouldApplyQuickFilterAfterAgg() {\n    return (this.aggFiltering || this.beans.colModel.isPivotMode()) && !this.gos.get(\"applyQuickFilterBeforePivotOrAgg\");\n  }\n  doesRowPassOtherFilters(colIdToSkip, rowNode) {\n    return this.doesRowPassFilter({\n      rowNode,\n      colIdToSkip\n    });\n  }\n  doesRowPassAggregateFilters(params) {\n    const {\n      rowNode\n    } = params;\n    if (this.alwaysPassFilter?.(rowNode)) {\n      return true;\n    }\n    if (this.isAggregateQuickFilterPresent() && !this.quickFilter.doesRowPass(rowNode)) {\n      return false;\n    }\n    if (this.isAggregateFilterPresent() && !this.colFilter.doFiltersPass(rowNode, params.colIdToSkip, true)) {\n      return false;\n    }\n    return true;\n  }\n  doesRowPassFilter(params) {\n    const {\n      rowNode\n    } = params;\n    if (this.alwaysPassFilter?.(rowNode)) {\n      return true;\n    }\n    if (this.isNonAggregateQuickFilterPresent() && !this.quickFilter.doesRowPass(rowNode)) {\n      return false;\n    }\n    if (this.externalFilterPresent && !this.doesExternalFilterPass(rowNode)) {\n      return false;\n    }\n    if (this.isColumnFilterPresent() && !this.colFilter.doFiltersPass(rowNode, params.colIdToSkip)) {\n      return false;\n    }\n    if (this.isAdvFilterPresent() && !this.advancedFilter.doesFilterPass(rowNode)) {\n      return false;\n    }\n    return true;\n  }\n  // for group filters, can change dynamically whether they are allowed or not\n  isFilterAllowed(column) {\n    if (this.isAdvFilterEnabled()) {\n      return false;\n    }\n    return !!this.colFilter?.isFilterAllowed(column);\n  }\n  getAdvFilterModel() {\n    return this.isAdvFilterEnabled() ? this.advancedFilter.getModel() : null;\n  }\n  setAdvFilterModel(expression, source = \"api\") {\n    if (!this.isAdvFilterEnabled()) {\n      return;\n    }\n    if (this.beans.dataTypeSvc?.isPendingInference) {\n      this.advFilterModelUpdateQueue.push(expression);\n      return;\n    }\n    this.advancedFilter.setModel(expression ?? null);\n    this.onFilterChanged({\n      source\n    });\n  }\n  toggleAdvFilterBuilder(show, source) {\n    if (!this.isAdvFilterEnabled()) {\n      return;\n    }\n    this.advancedFilter.getCtrl().toggleFilterBuilder({\n      source,\n      force: show\n    });\n  }\n  updateAdvFilterColumns() {\n    if (!this.isAdvFilterEnabled()) {\n      return;\n    }\n    if (this.advancedFilter.updateValidity()) {\n      this.onFilterChanged({\n        source: \"advancedFilter\"\n      });\n    }\n  }\n  hasFloatingFilters() {\n    if (this.isAdvFilterEnabled()) {\n      return false;\n    }\n    return !!this.colFilter?.hasFloatingFilters();\n  }\n  getColumnFilterInstance(key) {\n    if (this.isAdvFilterEnabled()) {\n      this.warnAdvFilters();\n      return Promise.resolve(void 0);\n    }\n    return this.colFilter?.getFilterInstance(key) ?? Promise.resolve(void 0);\n  }\n  warnAdvFilters() {\n    _warn(68);\n  }\n  setupAdvFilterHeaderComp(eCompToInsertBefore) {\n    this.advancedFilter?.getCtrl().setupHeaderComp(eCompToInsertBefore);\n  }\n  getHeaderRowCount() {\n    return this.isAdvFilterHeaderActive() ? 1 : 0;\n  }\n  getHeaderHeight() {\n    return this.isAdvFilterHeaderActive() ? this.advancedFilter.getCtrl().getHeaderHeight() : 0;\n  }\n  processFilterModelUpdateQueue() {\n    this.advFilterModelUpdateQueue.forEach(model => this.setAdvFilterModel(model));\n    this.advFilterModelUpdateQueue = [];\n  }\n  setColumnFilterModel(key, model) {\n    if (this.isAdvFilterEnabled()) {\n      this.warnAdvFilters();\n      return Promise.resolve();\n    }\n    return this.colFilter?.setModelForColumn(key, model) ?? Promise.resolve();\n  }\n};\n\n// packages/ag-grid-community/src/filter/filterMenuFactory.ts\nvar FilterMenuFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterMenuFactory\";\n  }\n  wireBeans(beans) {\n    this.popupSvc = beans.popupSvc;\n  }\n  hideActiveMenu() {\n    this.hidePopup?.();\n  }\n  showMenuAfterMouseEvent(column, mouseEvent, containerType, onClosedCallback) {\n    if (column && !column.isColumn) {\n      return;\n    }\n    this.showPopup(column, eMenu => {\n      this.popupSvc?.positionPopupUnderMouseEvent({\n        column,\n        type: containerType,\n        mouseEvent,\n        ePopup: eMenu\n      });\n    }, containerType, mouseEvent.target, _isLegacyMenuEnabled(this.gos), onClosedCallback);\n  }\n  showMenuAfterButtonClick(column, eventSource, containerType, onClosedCallback) {\n    if (column && !column.isColumn) {\n      return;\n    }\n    let multiplier = -1;\n    let alignSide = \"left\";\n    const isLegacyMenuEnabled = _isLegacyMenuEnabled(this.gos);\n    if (!isLegacyMenuEnabled && this.gos.get(\"enableRtl\")) {\n      multiplier = 1;\n      alignSide = \"right\";\n    }\n    const nudgeX = isLegacyMenuEnabled ? void 0 : 4 * multiplier;\n    const nudgeY = isLegacyMenuEnabled ? void 0 : 4;\n    this.showPopup(column, eMenu => {\n      this.popupSvc?.positionPopupByComponent({\n        type: containerType,\n        eventSource,\n        ePopup: eMenu,\n        nudgeX,\n        nudgeY,\n        alignSide,\n        keepWithinBounds: true,\n        position: \"under\",\n        column\n      });\n    }, containerType, eventSource, isLegacyMenuEnabled, onClosedCallback);\n  }\n  showPopup(column, positionCallback, containerType, eventSource, isLegacyMenuEnabled, onClosedCallback) {\n    const comp = column ? this.createBean(new FilterComp(column, \"COLUMN_MENU\")) : void 0;\n    this.activeMenu = comp;\n    if (!comp?.hasFilter() || !column) {\n      _error(57);\n      return;\n    }\n    const eMenu = _createElement({\n      tag: \"div\",\n      cls: `ag-menu${!isLegacyMenuEnabled ? \" ag-filter-menu\" : \"\"}`,\n      role: \"presentation\"\n    });\n    [this.tabListener] = this.addManagedElementListeners(eMenu, {\n      keydown: e => this.trapFocusWithin(e, eMenu)\n    });\n    eMenu.appendChild(comp?.getGui());\n    let hidePopup;\n    const afterGuiDetached = () => comp?.afterGuiDetached();\n    const anchorToElement = _isColumnMenuAnchoringEnabled(this.gos) ? eventSource ?? this.beans.ctrlsSvc.getGridBodyCtrl().eGridBody : void 0;\n    const closedCallback = e => {\n      _setColMenuVisible(column, false, \"contextMenu\");\n      const isKeyboardEvent = e instanceof KeyboardEvent;\n      if (this.tabListener) {\n        this.tabListener = this.tabListener();\n      }\n      if (isKeyboardEvent && eventSource && _isVisible(eventSource)) {\n        const focusableEl = _findTabbableParent(eventSource);\n        focusableEl?.focus({\n          preventScroll: true\n        });\n      }\n      afterGuiDetached();\n      this.destroyBean(this.activeMenu);\n      this.dispatchVisibleChangedEvent(false, containerType, column);\n      onClosedCallback?.();\n    };\n    const translate = this.getLocaleTextFunc();\n    const ariaLabel = isLegacyMenuEnabled && containerType !== \"columnFilter\" ? translate(\"ariaLabelColumnMenu\", \"Column Menu\") : translate(\"ariaLabelColumnFilter\", \"Column Filter\");\n    const addPopupRes = this.popupSvc?.addPopup({\n      modal: true,\n      eChild: eMenu,\n      closeOnEsc: true,\n      closedCallback,\n      positionCallback: () => positionCallback(eMenu),\n      anchorToElement,\n      ariaLabel\n    });\n    if (addPopupRes) {\n      this.hidePopup = hidePopup = addPopupRes.hideFunc;\n    }\n    comp.afterInit().then(() => {\n      positionCallback(eMenu);\n      comp.afterGuiAttached({\n        container: containerType,\n        hidePopup\n      });\n    });\n    _setColMenuVisible(column, true, \"contextMenu\");\n    this.dispatchVisibleChangedEvent(true, containerType, column);\n  }\n  trapFocusWithin(e, menu) {\n    if (e.key !== KeyCode.TAB || e.defaultPrevented || _findNextFocusableElement(this.beans, menu, false, e.shiftKey)) {\n      return;\n    }\n    e.preventDefault();\n    _focusInto(menu, e.shiftKey);\n  }\n  dispatchVisibleChangedEvent(visible, containerType, column) {\n    this.eventSvc.dispatchEvent({\n      type: \"columnMenuVisibleChanged\",\n      visible,\n      switchingTab: false,\n      key: containerType,\n      column: column ?? null,\n      columnGroup: null\n    });\n  }\n  isMenuEnabled(column) {\n    return column.isFilterAllowed() && (column.getColDef().menuTabs ?? [\"filterMenuTab\"]).includes(\"filterMenuTab\");\n  }\n  showMenuAfterContextMenuEvent() {}\n  destroy() {\n    this.destroyBean(this.activeMenu);\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/filter/filterValueService.ts\nvar FilterValueService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterValueSvc\";\n  }\n  getValue(column, rowNode, filterValueGetterOverride) {\n    if (!rowNode) {\n      return;\n    }\n    const colDef = column.getColDef();\n    const {\n      selectableFilter,\n      valueSvc\n    } = this.beans;\n    const filterValueGetter = filterValueGetterOverride ?? selectableFilter?.getFilterValueGetter(column.getColId()) ?? colDef.filterValueGetter;\n    if (filterValueGetter) {\n      return this.executeFilterValueGetter(filterValueGetter, rowNode.data, column, rowNode, colDef);\n    }\n    return valueSvc.getValue(column, rowNode);\n  }\n  executeFilterValueGetter(valueGetter, data, column, node, colDef) {\n    const {\n      expressionSvc,\n      valueSvc\n    } = this.beans;\n    const params = _addGridCommonParams(this.gos, {\n      data,\n      node,\n      column,\n      colDef,\n      getValue: valueSvc.getValueCallback.bind(valueSvc, node)\n    });\n    if (typeof valueGetter === \"function\") {\n      return valueGetter(params);\n    }\n    return expressionSvc?.evaluate(valueGetter, params);\n  }\n};\n\n// packages/ag-grid-community/src/filter/floating/provided/readOnlyFloatingFilter.ts\nvar ReadOnlyFloatingFilterElement = {\n  tag: \"div\",\n  cls: \"ag-floating-filter-input\",\n  role: \"presentation\",\n  children: [{\n    tag: \"ag-input-text-field\",\n    ref: \"eFloatingFilterText\"\n  }]\n};\nvar ReadOnlyFloatingFilter = class extends Component {\n  constructor() {\n    super(ReadOnlyFloatingFilterElement, [AgInputTextFieldSelector]);\n    this.eFloatingFilterText = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    const displayName = this.beans.colNames.getDisplayNameForColumn(params.column, \"header\", true);\n    this.eFloatingFilterText.setDisabled(true).setInputAriaLabel(`${displayName} ${this.getLocaleTextFunc()(\"ariaFilterInput\", \"Filter Input\")}`);\n    if (this.gos.get(\"enableFilterHandlers\")) {\n      const reactiveParams = params;\n      const handler = reactiveParams.getHandler();\n      if (handler.getModelAsString) {\n        const modelAsString = handler.getModelAsString(reactiveParams.model);\n        this.eFloatingFilterText.setValue(modelAsString);\n      }\n    }\n  }\n  onParentModelChanged(parentModel) {\n    if (parentModel == null) {\n      this.eFloatingFilterText.setValue(\"\");\n      return;\n    }\n    this.params.parentFilterInstance(filterInstance => {\n      if (filterInstance.getModelAsString) {\n        const modelAsString = filterInstance.getModelAsString(parentModel);\n        this.eFloatingFilterText.setValue(modelAsString);\n      }\n    });\n  }\n  refresh(params) {\n    this.init(params);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/optionsFactory.ts\nvar OptionsFactory = class {\n  constructor() {\n    this.customFilterOptions = {};\n  }\n  init(params, defaultOptions) {\n    this.filterOptions = params.filterOptions ?? defaultOptions;\n    this.mapCustomOptions();\n    this.defaultOption = this.getDefaultItem(params.defaultOption);\n  }\n  refresh(params, defaultOptions) {\n    const filterOptions = params.filterOptions ?? defaultOptions;\n    if (this.filterOptions !== filterOptions) {\n      this.filterOptions = filterOptions;\n      this.customFilterOptions = {};\n      this.mapCustomOptions();\n    }\n    this.defaultOption = this.getDefaultItem(params.defaultOption);\n  }\n  mapCustomOptions() {\n    const {\n      filterOptions\n    } = this;\n    if (!filterOptions) {\n      return;\n    }\n    filterOptions.forEach(filterOption => {\n      if (typeof filterOption === \"string\") {\n        return;\n      }\n      const requiredProperties = [[\"displayKey\"], [\"displayName\"], [\"predicate\", \"test\"]];\n      const propertyCheck = keys => {\n        if (!keys.some(key => filterOption[key] != null)) {\n          _warn(72, {\n            keys\n          });\n          return false;\n        }\n        return true;\n      };\n      if (!requiredProperties.every(propertyCheck)) {\n        this.filterOptions = filterOptions.filter(v => v === filterOption) || [];\n        return;\n      }\n      this.customFilterOptions[filterOption.displayKey] = filterOption;\n    });\n  }\n  getDefaultItem(defaultOption) {\n    const {\n      filterOptions\n    } = this;\n    if (defaultOption) {\n      return defaultOption;\n    } else if (filterOptions.length >= 1) {\n      const firstFilterOption = filterOptions[0];\n      if (typeof firstFilterOption === \"string\") {\n        return firstFilterOption;\n      } else if (firstFilterOption.displayKey) {\n        return firstFilterOption.displayKey;\n      } else {\n        _warn(73);\n      }\n    } else {\n      _warn(74);\n    }\n    return void 0;\n  }\n  getCustomOption(name) {\n    return this.customFilterOptions[name];\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/simpleFilterUtils.ts\nfunction removeItems(items, startPosition, deleteCount) {\n  return deleteCount == null ? items.splice(startPosition) : items.splice(startPosition, deleteCount);\n}\nfunction isBlank(cellValue) {\n  return cellValue == null || typeof cellValue === \"string\" && cellValue.trim().length === 0;\n}\nfunction getDefaultJoinOperator(defaultJoinOperator) {\n  return defaultJoinOperator === \"AND\" || defaultJoinOperator === \"OR\" ? defaultJoinOperator : \"AND\";\n}\nfunction evaluateCustomFilter(customFilterOption, values, cellValue) {\n  if (customFilterOption == null) {\n    return;\n  }\n  const {\n    predicate\n  } = customFilterOption;\n  if (predicate != null && !values.some(v => v == null)) {\n    return predicate(values, cellValue);\n  }\n  return;\n}\nfunction validateAndUpdateConditions(conditions, maxNumConditions) {\n  let numConditions = conditions.length;\n  if (numConditions > maxNumConditions) {\n    conditions.splice(maxNumConditions);\n    _warn(78);\n    numConditions = maxNumConditions;\n  }\n  return numConditions;\n}\nfunction getNumberOfInputs(type, optionsFactory) {\n  const customOpts = optionsFactory.getCustomOption(type);\n  if (customOpts) {\n    const {\n      numberOfInputs\n    } = customOpts;\n    return numberOfInputs != null ? numberOfInputs : 1;\n  }\n  const zeroInputTypes = [\"empty\", \"notBlank\", \"blank\"];\n  if (type && zeroInputTypes.indexOf(type) >= 0) {\n    return 0;\n  } else if (type === \"inRange\") {\n    return 2;\n  }\n  return 1;\n}\n\n// packages/ag-grid-community/src/filter/provided/simpleFilter.ts\nvar SimpleFilter = class extends ProvidedFilter {\n  constructor(filterNameKey, mapValuesFromModel, defaultOptions) {\n    super(filterNameKey, \"simple-filter\");\n    this.mapValuesFromModel = mapValuesFromModel;\n    this.defaultOptions = defaultOptions;\n    this.eTypes = [];\n    this.eJoinPanels = [];\n    this.eJoinAnds = [];\n    this.eJoinOrs = [];\n    this.eConditionBodies = [];\n    this.listener = () => this.onUiChanged();\n    this.lastUiCompletePosition = null;\n    this.joinOperatorId = 0;\n  }\n  setParams(params) {\n    super.setParams(params);\n    const optionsFactory = new OptionsFactory();\n    this.optionsFactory = optionsFactory;\n    optionsFactory.init(params, this.defaultOptions);\n    this.commonUpdateSimpleParams(params);\n    this.createOption();\n    this.createMissingConditionsAndOperators();\n  }\n  updateParams(newParams, oldParams) {\n    this.optionsFactory.refresh(newParams, this.defaultOptions);\n    super.updateParams(newParams, oldParams);\n    this.commonUpdateSimpleParams(newParams);\n  }\n  commonUpdateSimpleParams(params) {\n    this.setNumConditions(params);\n    this.defaultJoinOperator = getDefaultJoinOperator(params.defaultJoinOperator);\n    this.filterPlaceholder = params.filterPlaceholder;\n    this.createFilterListOptions();\n    const eGui = this.getGui();\n    if (this.isReadOnly()) {\n      eGui.setAttribute(\"tabindex\", \"-1\");\n    } else {\n      eGui.removeAttribute(\"tabindex\");\n    }\n  }\n  // floating filter calls this when user applies filter from floating filter\n  onFloatingFilterChanged(type, value) {\n    this.setTypeFromFloatingFilter(type);\n    this.setValueFromFloatingFilter(value);\n    this.onUiChanged(\"immediately\", true);\n  }\n  setTypeFromFloatingFilter(type) {\n    this.eTypes.forEach((eType, position) => {\n      const value = position === 0 ? type : this.optionsFactory.defaultOption;\n      eType.setValue(value, true);\n    });\n  }\n  getModelFromUi() {\n    const conditions = this.getUiCompleteConditions();\n    if (conditions.length === 0) {\n      return null;\n    }\n    if (this.maxNumConditions > 1 && conditions.length > 1) {\n      return {\n        filterType: this.filterType,\n        operator: this.getJoinOperator(),\n        conditions\n      };\n    }\n    return conditions[0];\n  }\n  getConditionTypes() {\n    return this.eTypes.map(eType => eType.getValue());\n  }\n  getConditionType(position) {\n    return this.eTypes[position].getValue();\n  }\n  getJoinOperator() {\n    const {\n      eJoinOrs: eJoinOperatorsOr,\n      defaultJoinOperator\n    } = this;\n    return eJoinOperatorsOr.length === 0 ? defaultJoinOperator : eJoinOperatorsOr[0].getValue() === true ? \"OR\" : \"AND\";\n  }\n  areNonNullModelsEqual(a, b) {\n    const aIsSimple = !a.operator;\n    const bIsSimple = !b.operator;\n    const oneSimpleOneCombined = !aIsSimple && bIsSimple || aIsSimple && !bIsSimple;\n    if (oneSimpleOneCombined) {\n      return false;\n    }\n    let res;\n    if (aIsSimple) {\n      const aSimple = a;\n      const bSimple = b;\n      res = this.areSimpleModelsEqual(aSimple, bSimple);\n    } else {\n      const aCombined = a;\n      const bCombined = b;\n      res = aCombined.operator === bCombined.operator && _areEqual(aCombined.conditions, bCombined.conditions, (aModel, bModel) => this.areSimpleModelsEqual(aModel, bModel));\n    }\n    return res;\n  }\n  setModelIntoUi(model, isInitialLoad) {\n    if (model == null) {\n      this.resetUiToDefaults(isInitialLoad);\n      return AgPromise.resolve();\n    }\n    const isCombined = model.operator;\n    if (isCombined) {\n      const combinedModel = model;\n      let conditions = combinedModel.conditions;\n      if (conditions == null) {\n        conditions = [];\n        _warn(77);\n      }\n      const numConditions = validateAndUpdateConditions(conditions, this.maxNumConditions);\n      const numPrevConditions = this.getNumConditions();\n      if (numConditions < numPrevConditions) {\n        this.removeConditionsAndOperators(numConditions);\n      } else if (numConditions > numPrevConditions) {\n        for (let i = numPrevConditions; i < numConditions; i++) {\n          this.createJoinOperatorPanel();\n          this.createOption();\n        }\n      }\n      const orChecked = combinedModel.operator === \"OR\";\n      this.eJoinAnds.forEach(eJoinOperatorAnd => eJoinOperatorAnd.setValue(!orChecked, true));\n      this.eJoinOrs.forEach(eJoinOperatorOr => eJoinOperatorOr.setValue(orChecked, true));\n      conditions.forEach((condition, position) => {\n        this.eTypes[position].setValue(condition.type, true);\n        this.setConditionIntoUi(condition, position);\n      });\n    } else {\n      const simpleModel = model;\n      if (this.getNumConditions() > 1) {\n        this.removeConditionsAndOperators(1);\n      }\n      this.eTypes[0].setValue(simpleModel.type, true);\n      this.setConditionIntoUi(simpleModel, 0);\n    }\n    this.lastUiCompletePosition = this.getNumConditions() - 1;\n    this.createMissingConditionsAndOperators();\n    this.updateUiVisibility();\n    if (!isInitialLoad) {\n      this.params.onUiChange(this.getUiChangeEventParams());\n    }\n    return AgPromise.resolve();\n  }\n  setNumConditions(params) {\n    let maxNumConditions = params.maxNumConditions ?? 2;\n    if (maxNumConditions < 1) {\n      _warn(79);\n      maxNumConditions = 1;\n    }\n    this.maxNumConditions = maxNumConditions;\n    let numAlwaysVisibleConditions = params.numAlwaysVisibleConditions ?? 1;\n    if (numAlwaysVisibleConditions < 1) {\n      _warn(80);\n      numAlwaysVisibleConditions = 1;\n    }\n    if (numAlwaysVisibleConditions > maxNumConditions) {\n      _warn(81);\n      numAlwaysVisibleConditions = maxNumConditions;\n    }\n    this.numAlwaysVisibleConditions = numAlwaysVisibleConditions;\n  }\n  createOption() {\n    const eGui = this.getGui();\n    const eType = this.createManagedBean(new AgSelect());\n    this.eTypes.push(eType);\n    eType.addCss(\"ag-filter-select\");\n    eGui.appendChild(eType.getGui());\n    const eConditionBody = this.createEValue();\n    this.eConditionBodies.push(eConditionBody);\n    eGui.appendChild(eConditionBody);\n    this.putOptionsIntoDropdown(eType);\n    this.resetType(eType);\n    const position = this.getNumConditions() - 1;\n    this.forEachPositionInput(position, element => this.resetInput(element));\n    this.addChangedListeners(eType, position);\n  }\n  createJoinOperatorPanel() {\n    const eJoinOperatorPanel = _createElement({\n      tag: \"div\",\n      cls: \"ag-filter-condition\"\n    });\n    this.eJoinPanels.push(eJoinOperatorPanel);\n    const eJoinOperatorAnd = this.createJoinOperator(this.eJoinAnds, eJoinOperatorPanel, \"and\");\n    const eJoinOperatorOr = this.createJoinOperator(this.eJoinOrs, eJoinOperatorPanel, \"or\");\n    this.getGui().appendChild(eJoinOperatorPanel);\n    const index = this.eJoinPanels.length - 1;\n    const uniqueGroupId = this.joinOperatorId++;\n    this.resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId);\n    this.resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId);\n    if (!this.isReadOnly()) {\n      eJoinOperatorAnd.onValueChange(this.listener);\n      eJoinOperatorOr.onValueChange(this.listener);\n    }\n  }\n  createJoinOperator(eJoinOperators, eJoinOperatorPanel, andOr) {\n    const eJoinOperator = this.createManagedBean(new AgRadioButton());\n    eJoinOperators.push(eJoinOperator);\n    const baseClass = \"ag-filter-condition-operator\";\n    eJoinOperator.addCss(baseClass);\n    eJoinOperator.addCss(`${baseClass}-${andOr}`);\n    eJoinOperatorPanel.appendChild(eJoinOperator.getGui());\n    return eJoinOperator;\n  }\n  createFilterListOptions() {\n    this.filterListOptions = this.optionsFactory.filterOptions.map(option => typeof option === \"string\" ? this.createBoilerplateListOption(option) : this.createCustomListOption(option));\n  }\n  putOptionsIntoDropdown(eType) {\n    const {\n      filterListOptions\n    } = this;\n    filterListOptions.forEach(listOption => {\n      eType.addOption(listOption);\n    });\n    eType.setDisabled(filterListOptions.length <= 1);\n  }\n  createBoilerplateListOption(option) {\n    return {\n      value: option,\n      text: this.translate(option)\n    };\n  }\n  createCustomListOption(option) {\n    const {\n      displayKey\n    } = option;\n    const customOption = this.optionsFactory.getCustomOption(option.displayKey);\n    return {\n      value: displayKey,\n      text: customOption ? this.getLocaleTextFunc()(customOption.displayKey, customOption.displayName) : this.translate(displayKey)\n    };\n  }\n  createBodyTemplate() {\n    return null;\n  }\n  getAgComponents() {\n    return [];\n  }\n  updateUiVisibility() {\n    const joinOperator = this.getJoinOperator();\n    this.updateNumConditions();\n    this.updateConditionStatusesAndValues(this.lastUiCompletePosition, joinOperator);\n  }\n  updateNumConditions() {\n    let lastUiCompletePosition = -1;\n    let areAllConditionsUiComplete = true;\n    for (let position = 0; position < this.getNumConditions(); position++) {\n      if (this.isConditionUiComplete(position)) {\n        lastUiCompletePosition = position;\n      } else {\n        areAllConditionsUiComplete = false;\n      }\n    }\n    if (this.shouldAddNewConditionAtEnd(areAllConditionsUiComplete)) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n    } else {\n      const activePosition = this.lastUiCompletePosition ?? this.getNumConditions() - 2;\n      if (lastUiCompletePosition < activePosition) {\n        this.removeConditionsAndOperators(activePosition + 1);\n        const removeStartPosition = lastUiCompletePosition + 1;\n        const numConditionsToRemove = activePosition - removeStartPosition;\n        if (numConditionsToRemove > 0) {\n          this.removeConditionsAndOperators(removeStartPosition, numConditionsToRemove);\n        }\n        this.createMissingConditionsAndOperators();\n      }\n    }\n    this.lastUiCompletePosition = lastUiCompletePosition;\n  }\n  updateConditionStatusesAndValues(lastUiCompletePosition, joinOperator) {\n    this.eTypes.forEach((eType, position) => {\n      const disabled = this.isConditionDisabled(position, lastUiCompletePosition);\n      eType.setDisabled(disabled || this.filterListOptions.length <= 1);\n      if (position === 1) {\n        _setDisabled(this.eJoinPanels[0], disabled);\n        this.eJoinAnds[0].setDisabled(disabled);\n        this.eJoinOrs[0].setDisabled(disabled);\n      }\n    });\n    this.eConditionBodies.forEach((element, index) => {\n      _setDisplayed(element, this.isConditionBodyVisible(index));\n    });\n    const orChecked = (joinOperator ?? this.getJoinOperator()) === \"OR\";\n    this.eJoinAnds.forEach(eJoinOperatorAnd => {\n      eJoinOperatorAnd.setValue(!orChecked, true);\n    });\n    this.eJoinOrs.forEach(eJoinOperatorOr => {\n      eJoinOperatorOr.setValue(orChecked, true);\n    });\n    this.forEachInput((element, index, position, numberOfInputs) => {\n      this.setElementDisplayed(element, index < numberOfInputs);\n      this.setElementDisabled(element, this.isConditionDisabled(position, lastUiCompletePosition));\n    });\n    this.resetPlaceholder();\n  }\n  shouldAddNewConditionAtEnd(areAllConditionsUiComplete) {\n    return areAllConditionsUiComplete && this.getNumConditions() < this.maxNumConditions && !this.isReadOnly();\n  }\n  removeConditionsAndOperators(startPosition, deleteCount) {\n    if (startPosition >= this.getNumConditions()) {\n      return;\n    }\n    const {\n      eTypes,\n      eConditionBodies,\n      eJoinPanels: eJoinOperatorPanels,\n      eJoinAnds: eJoinOperatorsAnd,\n      eJoinOrs: eJoinOperatorsOr\n    } = this;\n    this.removeComponents(eTypes, startPosition, deleteCount);\n    this.removeElements(eConditionBodies, startPosition, deleteCount);\n    this.removeEValues(startPosition, deleteCount);\n    const joinOperatorIndex = Math.max(startPosition - 1, 0);\n    this.removeElements(eJoinOperatorPanels, joinOperatorIndex, deleteCount);\n    this.removeComponents(eJoinOperatorsAnd, joinOperatorIndex, deleteCount);\n    this.removeComponents(eJoinOperatorsOr, joinOperatorIndex, deleteCount);\n  }\n  removeElements(elements, startPosition, deleteCount) {\n    const removedElements = removeItems(elements, startPosition, deleteCount);\n    removedElements.forEach(element => _removeFromParent(element));\n  }\n  removeComponents(components, startPosition, deleteCount) {\n    const removedComponents = removeItems(components, startPosition, deleteCount);\n    removedComponents.forEach(comp => {\n      _removeFromParent(comp.getGui());\n      this.destroyBean(comp);\n    });\n  }\n  afterGuiAttached(params) {\n    super.afterGuiAttached(params);\n    this.resetPlaceholder();\n    if (!params?.suppressFocus) {\n      let elementToFocus;\n      if (!this.isReadOnly()) {\n        const firstInput = this.getInputs(0)[0];\n        if (firstInput instanceof AgAbstractInputField && this.isConditionBodyVisible(0)) {\n          elementToFocus = firstInput.getInputElement();\n        } else {\n          elementToFocus = this.eTypes[0]?.getFocusableElement();\n        }\n      }\n      (elementToFocus ?? this.getGui()).focus({\n        preventScroll: true\n      });\n    }\n  }\n  afterGuiDetached() {\n    super.afterGuiDetached();\n    const params = this.params;\n    if (this.beans.colFilter?.shouldKeepStateOnDetach(params.column)) {\n      return;\n    }\n    params.onStateChange({\n      model: params.model\n    });\n    let lastUiCompletePosition = -1;\n    let updatedLastUiCompletePosition = -1;\n    let conditionsRemoved = false;\n    const joinOperator = this.getJoinOperator();\n    for (let position = this.getNumConditions() - 1; position >= 0; position--) {\n      if (this.isConditionUiComplete(position)) {\n        if (lastUiCompletePosition === -1) {\n          lastUiCompletePosition = position;\n          updatedLastUiCompletePosition = position;\n        }\n      } else {\n        const shouldRemovePositionAtEnd = position >= this.numAlwaysVisibleConditions && !this.isConditionUiComplete(position - 1);\n        const positionBeforeLastUiCompletePosition = position < lastUiCompletePosition;\n        if (shouldRemovePositionAtEnd || positionBeforeLastUiCompletePosition) {\n          this.removeConditionsAndOperators(position, 1);\n          conditionsRemoved = true;\n          if (positionBeforeLastUiCompletePosition) {\n            updatedLastUiCompletePosition--;\n          }\n        }\n      }\n    }\n    let shouldUpdateConditionStatusesAndValues = false;\n    if (this.getNumConditions() < this.numAlwaysVisibleConditions) {\n      this.createMissingConditionsAndOperators();\n      shouldUpdateConditionStatusesAndValues = true;\n    }\n    if (this.shouldAddNewConditionAtEnd(updatedLastUiCompletePosition === this.getNumConditions() - 1)) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n      shouldUpdateConditionStatusesAndValues = true;\n    }\n    if (shouldUpdateConditionStatusesAndValues) {\n      this.updateConditionStatusesAndValues(updatedLastUiCompletePosition, joinOperator);\n    }\n    if (conditionsRemoved) {\n      this.updateJoinOperatorsDisabled();\n    }\n    this.lastUiCompletePosition = updatedLastUiCompletePosition;\n  }\n  getModelAsString(model) {\n    return this.params.getHandler()?.getModelAsString?.(model) ?? \"\";\n  }\n  getPlaceholderText(defaultPlaceholder, position) {\n    let placeholder = this.translate(defaultPlaceholder);\n    if (typeof this.filterPlaceholder === \"function\") {\n      const filterOptionKey = this.eTypes[position].getValue();\n      const filterOption = this.translate(filterOptionKey);\n      placeholder = this.filterPlaceholder({\n        filterOptionKey,\n        filterOption,\n        placeholder\n      });\n    } else if (typeof this.filterPlaceholder === \"string\") {\n      placeholder = this.filterPlaceholder;\n    }\n    return placeholder;\n  }\n  // allow sub-classes to reset HTML placeholders after UI update.\n  resetPlaceholder() {\n    const globalTranslate = this.getLocaleTextFunc();\n    this.forEachInput((element, index, position, numberOfInputs) => {\n      if (!(element instanceof AgAbstractInputField)) {\n        return;\n      }\n      const placeholder = index === 0 && numberOfInputs > 1 ? \"inRangeStart\" : index === 0 ? \"filterOoo\" : \"inRangeEnd\";\n      const ariaLabel = index === 0 && numberOfInputs > 1 ? globalTranslate(\"ariaFilterFromValue\", \"Filter from value\") : index === 0 ? globalTranslate(\"ariaFilterValue\", \"Filter Value\") : globalTranslate(\"ariaFilterToValue\", \"Filter to Value\");\n      element.setInputPlaceholder(this.getPlaceholderText(placeholder, position));\n      element.setInputAriaLabel(ariaLabel);\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setElementValue(element, value, fromFloatingFilter) {\n    if (element instanceof AgAbstractInputField) {\n      element.setValue(value != null ? String(value) : null, true);\n    }\n  }\n  setElementDisplayed(element, displayed) {\n    if (element instanceof Component) {\n      _setDisplayed(element.getGui(), displayed);\n    }\n  }\n  setElementDisabled(element, disabled) {\n    if (element instanceof Component) {\n      _setDisabled(element.getGui(), disabled);\n    }\n  }\n  attachElementOnChange(element, listener) {\n    if (element instanceof AgAbstractInputField) {\n      element.onValueChange(listener);\n    }\n  }\n  forEachInput(cb) {\n    this.getConditionTypes().forEach((type, position) => {\n      this.forEachPositionTypeInput(position, type, cb);\n    });\n  }\n  forEachPositionInput(position, cb) {\n    const type = this.getConditionType(position);\n    this.forEachPositionTypeInput(position, type, cb);\n  }\n  forEachPositionTypeInput(position, type, cb) {\n    const numberOfInputs = getNumberOfInputs(type, this.optionsFactory);\n    const inputs = this.getInputs(position);\n    for (let index = 0; index < inputs.length; index++) {\n      const input = inputs[index];\n      if (input != null) {\n        cb(input, index, position, numberOfInputs);\n      }\n    }\n  }\n  isConditionDisabled(position, lastUiCompletePosition) {\n    if (this.isReadOnly()) {\n      return true;\n    }\n    if (position === 0) {\n      return false;\n    }\n    return position > lastUiCompletePosition + 1;\n  }\n  isConditionBodyVisible(position) {\n    const type = this.getConditionType(position);\n    const numberOfInputs = getNumberOfInputs(type, this.optionsFactory);\n    return numberOfInputs > 0;\n  }\n  // returns true if the UI represents a working filter, eg all parts are filled out.\n  // eg if text filter and textfield blank then returns false.\n  isConditionUiComplete(position) {\n    if (position >= this.getNumConditions()) {\n      return false;\n    }\n    const type = this.getConditionType(position);\n    if (type === \"empty\") {\n      return false;\n    }\n    if (this.getValues(position).some(v => v == null)) {\n      return false;\n    }\n    return true;\n  }\n  getNumConditions() {\n    return this.eTypes.length;\n  }\n  getUiCompleteConditions() {\n    const conditions = [];\n    for (let position = 0; position < this.getNumConditions(); position++) {\n      if (this.isConditionUiComplete(position)) {\n        conditions.push(this.createCondition(position));\n      }\n    }\n    return conditions;\n  }\n  createMissingConditionsAndOperators() {\n    if (this.isReadOnly()) {\n      return;\n    }\n    for (let i = this.getNumConditions(); i < this.numAlwaysVisibleConditions; i++) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n    }\n  }\n  resetUiToDefaults(silent) {\n    this.removeConditionsAndOperators(this.isReadOnly() ? 1 : this.numAlwaysVisibleConditions);\n    this.eTypes.forEach(eType => this.resetType(eType));\n    this.eJoinAnds.forEach((eJoinOperatorAnd, index) => this.resetJoinOperatorAnd(eJoinOperatorAnd, index, this.joinOperatorId + index));\n    this.eJoinOrs.forEach((eJoinOperatorOr, index) => this.resetJoinOperatorOr(eJoinOperatorOr, index, this.joinOperatorId + index));\n    this.joinOperatorId++;\n    this.forEachInput(element => this.resetInput(element));\n    this.resetPlaceholder();\n    this.createMissingConditionsAndOperators();\n    this.lastUiCompletePosition = null;\n    this.updateUiVisibility();\n    if (!silent) {\n      this.params.onUiChange(this.getUiChangeEventParams());\n    }\n  }\n  resetType(eType) {\n    const translate = this.getLocaleTextFunc();\n    const filteringLabel = translate(\"ariaFilteringOperator\", \"Filtering operator\");\n    eType.setValue(this.optionsFactory.defaultOption, true).setAriaLabel(filteringLabel).setDisabled(this.isReadOnly() || this.filterListOptions.length <= 1);\n  }\n  resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId) {\n    this.resetJoinOperator(eJoinOperatorAnd, index, this.defaultJoinOperator === \"AND\", this.translate(\"andCondition\"), uniqueGroupId);\n  }\n  resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId) {\n    this.resetJoinOperator(eJoinOperatorOr, index, this.defaultJoinOperator === \"OR\", this.translate(\"orCondition\"), uniqueGroupId);\n  }\n  resetJoinOperator(eJoinOperator, index, value, label, uniqueGroupId) {\n    this.updateJoinOperatorDisabled(eJoinOperator.setValue(value, true).setName(`ag-simple-filter-and-or-${this.getCompId()}-${uniqueGroupId}`).setLabel(label), index);\n  }\n  updateJoinOperatorsDisabled() {\n    const updater = (eJoinOperator, index) => this.updateJoinOperatorDisabled(eJoinOperator, index);\n    this.eJoinAnds.forEach(updater);\n    this.eJoinOrs.forEach(updater);\n  }\n  updateJoinOperatorDisabled(eJoinOperator, index) {\n    eJoinOperator.setDisabled(this.isReadOnly() || index > 0);\n  }\n  resetInput(element) {\n    this.setElementValue(element, null);\n    this.setElementDisabled(element, this.isReadOnly());\n  }\n  // puts model values into the UI\n  setConditionIntoUi(model, position) {\n    const values = this.mapValuesFromModel(model, this.optionsFactory);\n    this.forEachInput((element, index, elPosition) => {\n      if (elPosition !== position) {\n        return;\n      }\n      this.setElementValue(element, values[index] != null ? values[index] : null);\n    });\n  }\n  // after floating filter changes, this sets the 'value' section. this is implemented by the base class\n  // (as that's where value is controlled), the 'type' part from the floating filter is dealt with in this class.\n  setValueFromFloatingFilter(value) {\n    this.forEachInput((element, index, position) => {\n      this.setElementValue(element, index === 0 && position === 0 ? value : null, true);\n    });\n  }\n  addChangedListeners(eType, position) {\n    if (this.isReadOnly()) {\n      return;\n    }\n    eType.onValueChange(this.listener);\n    this.forEachPositionInput(position, element => {\n      this.attachElementOnChange(element, this.listener);\n    });\n  }\n  hasInvalidInputs() {\n    return false;\n  }\n  isReadOnly() {\n    return !!this.params.readOnly;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/dateCompWrapper.ts\nvar DateCompWrapper = class {\n  constructor(context, userCompFactory, colDef, dateComponentParams, eParent, onReady) {\n    this.alive = true;\n    this.context = context;\n    this.eParent = eParent;\n    const compDetails = _getDateCompDetails(userCompFactory, colDef, dateComponentParams);\n    if (!compDetails) {\n      return;\n    }\n    compDetails.newAgStackInstance().then(dateComp => {\n      if (!this.alive) {\n        context.destroyBean(dateComp);\n        return;\n      }\n      this.dateComp = dateComp;\n      if (!dateComp) {\n        return;\n      }\n      eParent.appendChild(dateComp.getGui());\n      dateComp?.afterGuiAttached?.();\n      const {\n        tempValue,\n        disabled\n      } = this;\n      if (tempValue) {\n        dateComp.setDate(tempValue);\n      }\n      if (disabled != null) {\n        dateComp.setDisabled?.(disabled);\n      }\n      onReady?.(this);\n    });\n  }\n  destroy() {\n    this.alive = false;\n    this.dateComp = this.context.destroyBean(this.dateComp);\n  }\n  getDate() {\n    return this.dateComp ? this.dateComp.getDate() : this.tempValue;\n  }\n  setDate(value) {\n    const dateComp = this.dateComp;\n    if (dateComp) {\n      dateComp.setDate(value);\n    } else {\n      this.tempValue = value;\n    }\n  }\n  setDisabled(disabled) {\n    const dateComp = this.dateComp;\n    if (dateComp) {\n      dateComp.setDisabled?.(disabled);\n    } else {\n      this.disabled = disabled;\n    }\n  }\n  setDisplayed(displayed) {\n    _setDisplayed(this.eParent, displayed);\n  }\n  setInputPlaceholder(placeholder) {\n    this.dateComp?.setInputPlaceholder?.(placeholder);\n  }\n  setInputAriaLabel(label) {\n    this.dateComp?.setInputAriaLabel?.(label);\n  }\n  afterGuiAttached(params) {\n    this.dateComp?.afterGuiAttached?.(params);\n  }\n  updateParams(params) {\n    this.dateComp?.refresh?.(params);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/dateFilterConstants.ts\nvar DEFAULT_DATE_FILTER_OPTIONS = [\"equals\", \"notEqual\", \"lessThan\", \"greaterThan\", \"inRange\", \"blank\", \"notBlank\"];\n\n// packages/ag-grid-community/src/filter/provided/date/dateFilterUtils.ts\nfunction mapValuesFromDateFilterModel(filterModel, optionsFactory) {\n  const {\n    dateFrom,\n    dateTo,\n    type\n  } = filterModel || {};\n  return [dateFrom && _parseDateTimeFromString(dateFrom) || null, dateTo && _parseDateTimeFromString(dateTo) || null].slice(0, getNumberOfInputs(type, optionsFactory));\n}\n\n// packages/ag-grid-community/src/filter/provided/date/dateFilter.ts\nvar DEFAULT_MIN_YEAR = 1e3;\nvar DEFAULT_MAX_YEAR = Infinity;\nvar DateFilter = class extends SimpleFilter {\n  constructor() {\n    super(\"dateFilter\", mapValuesFromDateFilterModel, DEFAULT_DATE_FILTER_OPTIONS);\n    this.eConditionPanelsFrom = [];\n    this.eConditionPanelsTo = [];\n    this.dateConditionFromComps = [];\n    this.dateConditionToComps = [];\n    this.minValidYear = DEFAULT_MIN_YEAR;\n    this.maxValidYear = DEFAULT_MAX_YEAR;\n    this.minValidDate = null;\n    this.maxValidDate = null;\n    this.filterType = \"date\";\n  }\n  afterGuiAttached(params) {\n    super.afterGuiAttached(params);\n    this.dateConditionFromComps[0].afterGuiAttached(params);\n  }\n  commonUpdateSimpleParams(params) {\n    super.commonUpdateSimpleParams(params);\n    const yearParser = (param, fallback) => {\n      const value = params[param];\n      if (value != null) {\n        if (!isNaN(value)) {\n          return value == null ? fallback : Number(value);\n        } else {\n          _warn(82, {\n            param\n          });\n        }\n      }\n      return fallback;\n    };\n    const minValidYear = yearParser(\"minValidYear\", DEFAULT_MIN_YEAR);\n    const maxValidYear = yearParser(\"maxValidYear\", DEFAULT_MAX_YEAR);\n    this.minValidYear = minValidYear;\n    this.maxValidYear = maxValidYear;\n    if (minValidYear > maxValidYear) {\n      _warn(83);\n    }\n    const {\n      minValidDate,\n      maxValidDate\n    } = params;\n    const parsedMinValidDate = minValidDate instanceof Date ? minValidDate : _parseDateTimeFromString(minValidDate);\n    this.minValidDate = parsedMinValidDate;\n    const parsedMaxValidDate = maxValidDate instanceof Date ? maxValidDate : _parseDateTimeFromString(maxValidDate);\n    this.maxValidDate = parsedMaxValidDate;\n    if (parsedMinValidDate && parsedMaxValidDate && parsedMinValidDate > parsedMaxValidDate) {\n      _warn(84);\n    }\n  }\n  createDateCompWrapper(element) {\n    const {\n      beans: {\n        userCompFactory,\n        context,\n        gos\n      },\n      params\n    } = this;\n    const dateCompWrapper = new DateCompWrapper(context, userCompFactory, params.colDef, _addGridCommonParams(gos, {\n      onDateChanged: () => this.onUiChanged(),\n      filterParams: params,\n      location: \"filter\"\n    }), element);\n    this.addDestroyFunc(() => dateCompWrapper.destroy());\n    return dateCompWrapper;\n  }\n  setElementValue(element, value) {\n    element.setDate(value);\n  }\n  setElementDisplayed(element, displayed) {\n    element.setDisplayed(displayed);\n  }\n  setElementDisabled(element, disabled) {\n    element.setDisabled(disabled);\n  }\n  createEValue() {\n    const eCondition = _createElement({\n      tag: \"div\",\n      cls: \"ag-filter-body\"\n    });\n    this.createFromToElement(eCondition, this.eConditionPanelsFrom, this.dateConditionFromComps, \"from\");\n    this.createFromToElement(eCondition, this.eConditionPanelsTo, this.dateConditionToComps, \"to\");\n    return eCondition;\n  }\n  createFromToElement(eCondition, eConditionPanels, dateConditionComps, fromTo) {\n    const eConditionPanel = _createElement({\n      tag: \"div\",\n      cls: `ag-filter-${fromTo} ag-filter-date-${fromTo}`\n    });\n    eConditionPanels.push(eConditionPanel);\n    eCondition.appendChild(eConditionPanel);\n    dateConditionComps.push(this.createDateCompWrapper(eConditionPanel));\n  }\n  removeEValues(startPosition, deleteCount) {\n    this.removeDateComps(this.dateConditionFromComps, startPosition, deleteCount);\n    this.removeDateComps(this.dateConditionToComps, startPosition, deleteCount);\n    removeItems(this.eConditionPanelsFrom, startPosition, deleteCount);\n    removeItems(this.eConditionPanelsTo, startPosition, deleteCount);\n  }\n  removeDateComps(components, startPosition, deleteCount) {\n    const removedComponents = removeItems(components, startPosition, deleteCount);\n    removedComponents.forEach(comp => comp.destroy());\n  }\n  isValidDateValue(value) {\n    if (value === null) {\n      return false;\n    }\n    const {\n      minValidDate,\n      maxValidDate,\n      minValidYear,\n      maxValidYear\n    } = this;\n    if (minValidDate) {\n      if (value < minValidDate) {\n        return false;\n      }\n    } else {\n      if (value.getUTCFullYear() < minValidYear) {\n        return false;\n      }\n    }\n    if (maxValidDate) {\n      if (value > maxValidDate) {\n        return false;\n      }\n    } else {\n      if (value.getUTCFullYear() > maxValidYear) {\n        return false;\n      }\n    }\n    return true;\n  }\n  isConditionUiComplete(position) {\n    if (!super.isConditionUiComplete(position)) {\n      return false;\n    }\n    let valid = true;\n    this.forEachInput((element, index, elPosition, numberOfInputs) => {\n      if (elPosition !== position || !valid || index >= numberOfInputs) {\n        return;\n      }\n      valid = valid && this.isValidDateValue(element.getDate());\n    });\n    return valid;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.dateFrom === bSimple.dateFrom && aSimple.dateTo === bSimple.dateTo && aSimple.type === bSimple.type;\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {};\n    const values = this.getValues(position);\n    if (values.length > 0) {\n      model.dateFrom = _serialiseDate(values[0]);\n    }\n    if (values.length > 1) {\n      model.dateTo = _serialiseDate(values[1]);\n    }\n    return {\n      dateFrom: null,\n      dateTo: null,\n      filterType: this.filterType,\n      type,\n      ...model\n    };\n  }\n  resetPlaceholder() {\n    const globalTranslate = this.getLocaleTextFunc();\n    const placeholder = this.translate(\"dateFormatOoo\");\n    const ariaLabel = globalTranslate(\"ariaFilterValue\", \"Filter Value\");\n    this.forEachInput(element => {\n      element.setInputPlaceholder(placeholder);\n      element.setInputAriaLabel(ariaLabel);\n    });\n  }\n  getInputs(position) {\n    const {\n      dateConditionFromComps,\n      dateConditionToComps\n    } = this;\n    if (position >= dateConditionFromComps.length) {\n      return [null, null];\n    }\n    return [dateConditionFromComps[position], dateConditionToComps[position]];\n  }\n  getValues(position) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        result.push(element.getDate());\n      }\n    });\n    return result;\n  }\n  translate(key) {\n    if (key === \"lessThan\") {\n      return super.translate(\"before\");\n    }\n    if (key === \"greaterThan\") {\n      return super.translate(\"after\");\n    }\n    return super.translate(key);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/simpleFilterHandler.ts\nvar SimpleFilterHandler = class extends BeanStub {\n  constructor(mapValuesFromModel, defaultOptions) {\n    super();\n    this.mapValuesFromModel = mapValuesFromModel;\n    this.defaultOptions = defaultOptions;\n  }\n  init(params) {\n    const filterParams = params.filterParams;\n    const optionsFactory = new OptionsFactory();\n    this.optionsFactory = optionsFactory;\n    optionsFactory.init(filterParams, this.defaultOptions);\n    this.filterModelFormatter = this.createManagedBean(new this.FilterModelFormatterClass(optionsFactory, filterParams));\n    this.updateParams(params);\n    this.validateModel(params);\n  }\n  refresh(params) {\n    if (params.source === \"colDef\") {\n      const filterParams = params.filterParams;\n      const optionsFactory = this.optionsFactory;\n      optionsFactory.refresh(filterParams, this.defaultOptions);\n      this.filterModelFormatter.updateParams({\n        optionsFactory,\n        filterParams\n      });\n      this.updateParams(params);\n    }\n    this.validateModel(params);\n  }\n  updateParams(params) {\n    this.params = params;\n  }\n  doesFilterPass(params) {\n    const model = params.model;\n    if (model == null) {\n      return true;\n    }\n    const {\n      operator\n    } = model;\n    const models = [];\n    if (operator) {\n      const combinedModel = model;\n      models.push(...(combinedModel.conditions ?? []));\n    } else {\n      models.push(model);\n    }\n    const combineFunction = operator && operator === \"OR\" ? \"some\" : \"every\";\n    const cellValue = this.params.getValue(params.node);\n    return models[combineFunction](m => this.individualConditionPasses(params, m, cellValue));\n  }\n  getModelAsString(model, source) {\n    return this.filterModelFormatter.getModelAsString(model, source) ?? \"\";\n  }\n  validateModel(params) {\n    const {\n      model,\n      filterParams: {\n        filterOptions,\n        maxNumConditions\n      }\n    } = params;\n    if (model == null) {\n      return;\n    }\n    const isCombined = isCombinedFilterModel(model);\n    let conditions = isCombined ? model.conditions : [model];\n    const newOptionsList = filterOptions?.map(option => typeof option === \"string\" ? option : option.displayKey) ?? this.defaultOptions;\n    const allConditionsExistInNewOptionsList = !conditions || conditions.every(condition => newOptionsList.find(option => option === condition.type) !== void 0);\n    if (!allConditionsExistInNewOptionsList) {\n      this.params = {\n        ...params,\n        model: null\n      };\n      params.onModelChange(null);\n      return;\n    }\n    let needsUpdate = false;\n    const filterType = this.filterType;\n    if (conditions && !conditions.every(condition => condition.filterType === filterType) || model.filterType !== filterType) {\n      conditions = conditions.map(condition => ({\n        ...condition,\n        filterType\n      }));\n      needsUpdate = true;\n    }\n    if (typeof maxNumConditions === \"number\" && conditions && conditions.length > maxNumConditions) {\n      conditions = conditions.slice(0, maxNumConditions);\n      needsUpdate = true;\n    }\n    if (needsUpdate) {\n      const updatedModel = conditions.length > 1 ? {\n        ...model,\n        filterType,\n        conditions\n      } : {\n        ...conditions[0],\n        filterType\n      };\n      this.params = {\n        ...params,\n        model: updatedModel\n      };\n      params.onModelChange(updatedModel);\n      return;\n    }\n  }\n  /** returns true if the row passes the said condition */\n  individualConditionPasses(params, filterModel, cellValue) {\n    const optionsFactory = this.optionsFactory;\n    const values = this.mapValuesFromModel(filterModel, optionsFactory);\n    const customFilterOption = optionsFactory.getCustomOption(filterModel.type);\n    const customFilterResult = evaluateCustomFilter(customFilterOption, values, cellValue);\n    if (customFilterResult != null) {\n      return customFilterResult;\n    }\n    if (cellValue == null) {\n      return this.evaluateNullValue(filterModel.type);\n    }\n    return this.evaluateNonNullValue(values, cellValue, filterModel, params);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/scalarFilterHandler.ts\nvar ScalarFilterHandler = class extends SimpleFilterHandler {\n  evaluateNullValue(filterType) {\n    const {\n      includeBlanksInEquals,\n      includeBlanksInNotEqual,\n      includeBlanksInGreaterThan,\n      includeBlanksInLessThan,\n      includeBlanksInRange\n    } = this.params.filterParams;\n    switch (filterType) {\n      case \"equals\":\n        if (includeBlanksInEquals) {\n          return true;\n        }\n        break;\n      case \"notEqual\":\n        if (includeBlanksInNotEqual) {\n          return true;\n        }\n        break;\n      case \"greaterThan\":\n      case \"greaterThanOrEqual\":\n        if (includeBlanksInGreaterThan) {\n          return true;\n        }\n        break;\n      case \"lessThan\":\n      case \"lessThanOrEqual\":\n        if (includeBlanksInLessThan) {\n          return true;\n        }\n        break;\n      case \"inRange\":\n        if (includeBlanksInRange) {\n          return true;\n        }\n        break;\n      case \"blank\":\n        return true;\n      case \"notBlank\":\n        return false;\n    }\n    return false;\n  }\n  evaluateNonNullValue(values, cellValue, filterModel) {\n    const type = filterModel.type;\n    if (!this.isValid(cellValue)) {\n      return type === \"notEqual\" || type === \"notBlank\";\n    }\n    const comparator = this.comparator();\n    const compareResult = values[0] != null ? comparator(values[0], cellValue) : 0;\n    switch (type) {\n      case \"equals\":\n        return compareResult === 0;\n      case \"notEqual\":\n        return compareResult !== 0;\n      case \"greaterThan\":\n        return compareResult > 0;\n      case \"greaterThanOrEqual\":\n        return compareResult >= 0;\n      case \"lessThan\":\n        return compareResult < 0;\n      case \"lessThanOrEqual\":\n        return compareResult <= 0;\n      case \"inRange\":\n        {\n          const compareToResult = comparator(values[1], cellValue);\n          return this.params.filterParams.inRangeInclusive ? compareResult >= 0 && compareToResult <= 0 : compareResult > 0 && compareToResult < 0;\n        }\n      case \"blank\":\n        return isBlank(cellValue);\n      case \"notBlank\":\n        return !isBlank(cellValue);\n      default:\n        _warn(76, {\n          filterModelType: type\n        });\n        return true;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/simpleFilterModelFormatter.ts\nvar SCALAR_FILTER_TYPE_KEYS = {\n  equals: \"Equals\",\n  notEqual: \"NotEqual\",\n  greaterThan: \"GreaterThan\",\n  greaterThanOrEqual: \"GreaterThanOrEqual\",\n  lessThan: \"LessThan\",\n  lessThanOrEqual: \"LessThanOrEqual\",\n  inRange: \"InRange\"\n};\nvar TEXT_FILTER_TYPE_KEYS = {\n  contains: \"Contains\",\n  notContains: \"NotContains\",\n  equals: \"TextEquals\",\n  notEqual: \"TextNotEqual\",\n  startsWith: \"StartsWith\",\n  endsWith: \"EndsWith\",\n  inRange: \"InRange\"\n};\nvar SimpleFilterModelFormatter = class extends BeanStub {\n  constructor(optionsFactory, filterParams, valueFormatter) {\n    super();\n    this.optionsFactory = optionsFactory;\n    this.filterParams = filterParams;\n    this.valueFormatter = valueFormatter;\n  }\n  // used by:\n  // 1) NumberFloatingFilter & TextFloatingFilter: Always, for both when editable and read only.\n  // 2) DateFloatingFilter: Only when read only (as we show text rather than a date picker when read only)\n  getModelAsString(model, source) {\n    const translate = this.getLocaleTextFunc();\n    const forToolPanel = source === \"filterToolPanel\";\n    if (!model) {\n      return forToolPanel ? translateForFilter(this, \"filterSummaryInactive\") : null;\n    }\n    const isCombined = model.operator != null;\n    if (isCombined) {\n      const combinedModel = model;\n      const conditions = combinedModel.conditions ?? [];\n      const customOptions = conditions.map(condition => this.getModelAsString(condition, source));\n      const joinOperatorTranslateKey = combinedModel.operator === \"AND\" ? \"andCondition\" : \"orCondition\";\n      return customOptions.join(` ${translateForFilter(this, joinOperatorTranslateKey)} `);\n    } else if (model.type === \"blank\" || model.type === \"notBlank\") {\n      return forToolPanel ? translateForFilter(this, model.type === \"blank\" ? \"filterSummaryBlank\" : \"filterSummaryNotBlank\") : translate(model.type, model.type);\n    } else {\n      const condition = model;\n      const customOption = this.optionsFactory.getCustomOption(condition.type);\n      const {\n        displayKey,\n        displayName,\n        numberOfInputs\n      } = customOption || {};\n      if (displayKey && displayName && numberOfInputs === 0) {\n        return translate(displayKey, displayName);\n      }\n      return this.conditionToString(condition, forToolPanel, condition.type === \"inRange\" || numberOfInputs === 2, displayKey, displayName);\n    }\n  }\n  updateParams(params) {\n    const {\n      optionsFactory,\n      filterParams\n    } = params;\n    this.optionsFactory = optionsFactory;\n    this.filterParams = filterParams;\n  }\n  conditionForToolPanel(type, isRange, getFilter, getFilterTo, customDisplayKey, customDisplayName) {\n    let typeValue;\n    const typeKey = this.getTypeKey(type);\n    if (typeKey) {\n      typeValue = translateForFilter(this, typeKey);\n    }\n    if (customDisplayKey && customDisplayName) {\n      typeValue = this.getLocaleTextFunc()(customDisplayKey, customDisplayName);\n    }\n    if (typeValue != null) {\n      if (isRange) {\n        return `${typeValue} ${translateForFilter(this, \"filterSummaryInRangeValues\", [getFilter(), getFilterTo()])}`;\n      } else {\n        return `${typeValue} ${getFilter()}`;\n      }\n    }\n    return null;\n  }\n  getTypeKey(type) {\n    const suffix = this.filterTypeKeys[type];\n    return suffix ? `filterSummary${suffix}` : null;\n  }\n  formatValue(value) {\n    const valueFormatter = this.valueFormatter;\n    return valueFormatter ? valueFormatter(value ?? null) ?? \"\" : String(value);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/dateFilterModelFormatter.ts\nvar DateFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  constructor(optionsFactory, filterParams) {\n    super(optionsFactory, filterParams, value => {\n      const {\n        dataTypeSvc,\n        valueSvc\n      } = this.beans;\n      const column = filterParams.column;\n      const dateFormatFn = dataTypeSvc?.getDateFormatterFunction(column);\n      const dateStringStringValue = dateFormatFn?.(value ?? void 0);\n      return valueSvc.formatValue(column, null, dateStringStringValue);\n    });\n    this.filterTypeKeys = SCALAR_FILTER_TYPE_KEYS;\n  }\n  conditionToString(condition, forToolPanel, isRange, customDisplayKey, customDisplayName) {\n    const {\n      type\n    } = condition;\n    const dateFrom = _parseDateTimeFromString(condition.dateFrom);\n    const dateTo = _parseDateTimeFromString(condition.dateTo);\n    const format = this.filterParams.inRangeFloatingFilterDateFormat;\n    const formatDate = forToolPanel ? this.formatValue.bind(this) : value => _dateToFormattedString(value, format);\n    const formattedFrom = () => dateFrom !== null ? formatDate(dateFrom) : \"null\";\n    const formattedTo = () => dateTo !== null ? formatDate(dateTo) : \"null\";\n    if (forToolPanel) {\n      const valueForToolPanel = this.conditionForToolPanel(type, isRange, formattedFrom, formattedTo, customDisplayKey, customDisplayName);\n      if (valueForToolPanel != null) {\n        return valueForToolPanel;\n      }\n    }\n    if (isRange) {\n      return `${formattedFrom()}-${formattedTo()}`;\n    }\n    if (dateFrom != null) {\n      return formatDate(dateFrom);\n    }\n    return `${type}`;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/dateFilterHandler.ts\nfunction defaultDateComparator(filterDate, cellValue) {\n  const cellAsDate = cellValue;\n  if (cellAsDate < filterDate) {\n    return -1;\n  }\n  if (cellAsDate > filterDate) {\n    return 1;\n  }\n  return 0;\n}\nvar DateFilterHandler = class extends ScalarFilterHandler {\n  constructor() {\n    super(mapValuesFromDateFilterModel, DEFAULT_DATE_FILTER_OPTIONS);\n    this.filterType = \"date\";\n    this.FilterModelFormatterClass = DateFilterModelFormatter;\n  }\n  comparator() {\n    return this.params.filterParams.comparator ?? defaultDateComparator;\n  }\n  isValid(value) {\n    const isValidDate2 = this.params.filterParams.isValidDate;\n    return !isValidDate2 || isValidDate2(value);\n  }\n};\n\n// packages/ag-grid-community/src/filter/floating/provided/simpleFloatingFilter.ts\nvar SimpleFloatingFilter = class extends Component {\n  constructor() {\n    super(...arguments);\n    this.defaultDebounceMs = 0;\n  }\n  setLastTypeFromModel(model) {\n    if (!model) {\n      this.lastType = this.optionsFactory.defaultOption;\n      return;\n    }\n    const isCombined = model.operator;\n    let condition;\n    if (isCombined) {\n      const combinedModel = model;\n      condition = combinedModel.conditions[0];\n    } else {\n      condition = model;\n    }\n    this.lastType = condition.type;\n  }\n  canWeEditAfterModelFromParentFilter(model) {\n    if (!model) {\n      return this.isTypeEditable(this.lastType);\n    }\n    const isCombined = model.operator;\n    if (isCombined) {\n      return false;\n    }\n    const simpleModel = model;\n    return this.isTypeEditable(simpleModel.type);\n  }\n  init(params) {\n    this.params = params;\n    const reactive = this.gos.get(\"enableFilterHandlers\");\n    this.reactive = reactive;\n    this.setParams(params);\n    if (reactive) {\n      const reactiveParams = params;\n      this.onModelUpdated(reactiveParams.model);\n    }\n  }\n  setParams(params) {\n    const optionsFactory = new OptionsFactory();\n    this.optionsFactory = optionsFactory;\n    optionsFactory.init(params.filterParams, this.defaultOptions);\n    this.filterModelFormatter = this.createManagedBean(new this.FilterModelFormatterClass(optionsFactory, params.filterParams));\n    this.setSimpleParams(params, false);\n  }\n  setSimpleParams(params, update = true) {\n    const defaultOption = this.optionsFactory.defaultOption;\n    if (!update) {\n      this.lastType = defaultOption;\n    }\n    this.readOnly = !!params.filterParams.readOnly;\n    const editable = this.isTypeEditable(defaultOption);\n    this.setEditable(editable);\n  }\n  refresh(params) {\n    this.params = params;\n    const reactiveParams = params;\n    const reactive = this.reactive;\n    if (!reactive || reactiveParams.source === \"colDef\") {\n      this.updateParams(params);\n    }\n    if (reactive) {\n      const {\n        source,\n        model\n      } = reactiveParams;\n      if (source === \"dataChanged\" || source === \"ui\") {\n        return;\n      }\n      this.onModelUpdated(model);\n    }\n  }\n  updateParams(params) {\n    const optionsFactory = this.optionsFactory;\n    optionsFactory.refresh(params.filterParams, this.defaultOptions);\n    this.setSimpleParams(params);\n    this.filterModelFormatter.updateParams({\n      optionsFactory,\n      filterParams: params.filterParams\n    });\n  }\n  onParentModelChanged(model, event) {\n    if (event?.afterFloatingFilter || event?.afterDataChange) {\n      return;\n    }\n    this.onModelUpdated(model);\n  }\n  hasSingleInput(filterType) {\n    const numberOfInputs = this.optionsFactory.getCustomOption(filterType)?.numberOfInputs;\n    return numberOfInputs == null || numberOfInputs == 1;\n  }\n  isTypeEditable(type) {\n    const uneditableTypes = [\"inRange\", \"empty\", \"blank\", \"notBlank\"];\n    return !!type && !this.readOnly && this.hasSingleInput(type) && uneditableTypes.indexOf(type) < 0;\n  }\n  getAriaLabel(params) {\n    const displayName = this.beans.colNames.getDisplayNameForColumn(params.column, \"header\", true);\n    return `${displayName} ${this.getLocaleTextFunc()(\"ariaFilterInput\", \"Filter Input\")}`;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/dateFloatingFilter.ts\nvar DateFloatingFilterElement = {\n  tag: \"div\",\n  cls: \"ag-floating-filter-input\",\n  role: \"presentation\",\n  children: [{\n    tag: \"ag-input-text-field\",\n    ref: \"eReadOnlyText\"\n  }, {\n    tag: \"div\",\n    ref: \"eDateWrapper\",\n    cls: \"ag-date-floating-filter-wrapper\"\n  }]\n};\nvar DateFloatingFilter = class extends SimpleFloatingFilter {\n  constructor() {\n    super(DateFloatingFilterElement, [AgInputTextFieldSelector]);\n    this.eReadOnlyText = RefPlaceholder;\n    this.eDateWrapper = RefPlaceholder;\n    this.FilterModelFormatterClass = DateFilterModelFormatter;\n    this.filterType = \"date\";\n    this.defaultOptions = DEFAULT_DATE_FILTER_OPTIONS;\n  }\n  setParams(params) {\n    super.setParams(params);\n    this.createDateComponent();\n    const translate = this.getLocaleTextFunc();\n    this.eReadOnlyText.setDisabled(true).setInputAriaLabel(translate(\"ariaDateFilterInput\", \"Date Filter Input\"));\n  }\n  updateParams(params) {\n    super.updateParams(params);\n    this.dateComp.updateParams(this.getDateComponentParams());\n    this.updateCompOnModelChange(params.currentParentModel());\n  }\n  updateCompOnModelChange(model) {\n    const allowEditing = !this.readOnly && this.canWeEditAfterModelFromParentFilter(model);\n    this.setEditable(allowEditing);\n    if (allowEditing) {\n      const dateModel = model ? _parseDateTimeFromString(model.dateFrom) : null;\n      this.dateComp.setDate(dateModel);\n      this.eReadOnlyText.setValue(\"\");\n    } else {\n      this.eReadOnlyText.setValue(this.filterModelFormatter.getModelAsString(model));\n      this.dateComp.setDate(null);\n    }\n  }\n  setEditable(editable) {\n    _setDisplayed(this.eDateWrapper, editable);\n    _setDisplayed(this.eReadOnlyText.getGui(), !editable);\n  }\n  onModelUpdated(model) {\n    super.setLastTypeFromModel(model);\n    this.updateCompOnModelChange(model);\n  }\n  onDateChanged() {\n    const filterValueDate = this.dateComp.getDate();\n    if (this.reactive) {\n      const reactiveParams = this.params;\n      reactiveParams.onUiChange();\n      const model = reactiveParams.model;\n      const filterValueText = _serialiseDate(filterValueDate);\n      const newModel = filterValueText == null ? null : {\n        ...(model ?? {\n          filterType: this.filterType,\n          type: this.lastType ?? this.optionsFactory.defaultOption\n        }),\n        dateFrom: filterValueText\n      };\n      reactiveParams.onModelChange(newModel, {\n        afterFloatingFilter: true\n      });\n    } else {\n      this.params.parentFilterInstance(filterInstance => {\n        filterInstance?.onFloatingFilterChanged(this.lastType || null, filterValueDate);\n      });\n    }\n  }\n  getDateComponentParams() {\n    const {\n      filterParams\n    } = this.params;\n    const debounceMs = getDebounceMs(filterParams, this.defaultDebounceMs);\n    return _addGridCommonParams(this.gos, {\n      onDateChanged: _debounce(this, this.onDateChanged.bind(this), debounceMs),\n      filterParams,\n      location: \"floatingFilter\"\n    });\n  }\n  createDateComponent() {\n    const {\n      beans: {\n        context,\n        userCompFactory\n      },\n      eDateWrapper,\n      params\n    } = this;\n    this.dateComp = new DateCompWrapper(context, userCompFactory, params.column.getColDef(), this.getDateComponentParams(), eDateWrapper, dateComp => {\n      dateComp.setInputAriaLabel(this.getAriaLabel(params));\n    });\n    this.addDestroyFunc(() => this.dateComp.destroy());\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/defaultDateComponent.ts\nvar DefaultDateElement = {\n  tag: \"div\",\n  cls: \"ag-filter-filter\",\n  children: [{\n    tag: \"ag-input-text-field\",\n    ref: \"eDateInput\",\n    cls: \"ag-date-filter\"\n  }]\n};\nvar DefaultDateComponent = class extends Component {\n  constructor() {\n    super(DefaultDateElement, [AgInputTextFieldSelector]);\n    this.eDateInput = RefPlaceholder;\n    this.isApply = false;\n    this.applyOnFocusOut = false;\n  }\n  init(params) {\n    this.params = params;\n    this.setParams(params);\n    const inputElement = this.eDateInput.getInputElement();\n    this.addManagedListeners(inputElement, {\n      // ensures that the input element is focussed when a clear button is clicked,\n      // unless using safari as there is no clear button and focus does not work properly\n      mouseDown: () => {\n        if (this.eDateInput.isDisabled() || this.usingSafariDatePicker) {\n          return;\n        }\n        inputElement.focus({\n          preventScroll: true\n        });\n      },\n      input: this.handleInput.bind(this, false),\n      change: this.handleInput.bind(this, true),\n      focusout: this.handleFocusOut.bind(this)\n    });\n  }\n  handleInput(isChange) {\n    if (this.eDateInput.isDisabled()) {\n      return;\n    }\n    if (this.isApply) {\n      this.applyOnFocusOut = !isChange;\n      if (isChange) {\n        this.params.onDateChanged();\n      }\n      return;\n    }\n    if (!isChange) {\n      this.params.onDateChanged();\n    }\n  }\n  handleFocusOut() {\n    if (this.applyOnFocusOut) {\n      this.applyOnFocusOut = false;\n      this.params.onDateChanged();\n    }\n  }\n  setParams(params) {\n    const inputElement = this.eDateInput.getInputElement();\n    const shouldUseBrowserDatePicker = this.shouldUseBrowserDatePicker(params);\n    this.usingSafariDatePicker = shouldUseBrowserDatePicker && _isBrowserSafari();\n    const {\n      minValidYear,\n      maxValidYear,\n      minValidDate,\n      maxValidDate,\n      buttons,\n      includeTime,\n      colDef\n    } = params.filterParams || {};\n    const dataTypeSvc = this.beans.dataTypeSvc;\n    const shouldUseDateTimeLocal = includeTime ?? dataTypeSvc?.getDateIncludesTimeFlag?.(colDef.cellDataType) ?? false;\n    if (shouldUseBrowserDatePicker) {\n      if (shouldUseDateTimeLocal) {\n        inputElement.type = \"datetime-local\";\n        inputElement.step = \"1\";\n      } else {\n        inputElement.type = \"date\";\n      }\n    } else {\n      inputElement.type = \"text\";\n    }\n    if (minValidDate && minValidYear) {\n      _warn(85);\n    }\n    if (maxValidDate && maxValidYear) {\n      _warn(86);\n    }\n    if (minValidDate && maxValidDate) {\n      const [parsedMinValidDate, parsedMaxValidDate] = [minValidDate, maxValidDate].map(v => v instanceof Date ? v : _parseDateTimeFromString(v));\n      if (parsedMinValidDate && parsedMaxValidDate && parsedMinValidDate.getTime() > parsedMaxValidDate.getTime()) {\n        _warn(87);\n      }\n    }\n    if (minValidDate) {\n      if (minValidDate instanceof Date) {\n        inputElement.min = _dateToFormattedString(minValidDate);\n      } else {\n        inputElement.min = minValidDate;\n      }\n    } else {\n      if (minValidYear) {\n        inputElement.min = `${minValidYear}-01-01`;\n      }\n    }\n    if (maxValidDate) {\n      if (maxValidDate instanceof Date) {\n        inputElement.max = _dateToFormattedString(maxValidDate);\n      } else {\n        inputElement.max = maxValidDate;\n      }\n    } else {\n      if (maxValidYear) {\n        inputElement.max = `${maxValidYear}-12-31`;\n      }\n    }\n    this.isApply = params.location === \"floatingFilter\" && !!buttons?.includes(\"apply\");\n  }\n  refresh(params) {\n    this.params = params;\n    this.setParams(params);\n  }\n  getDate() {\n    return _parseDateTimeFromString(this.eDateInput.getValue());\n  }\n  setDate(date) {\n    const colType = this.params.filterParams.colDef.cellDataType;\n    const includeTime = this.beans.dataTypeSvc?.getDateIncludesTimeFlag(colType) ?? false;\n    this.eDateInput.setValue(_serialiseDate(date, includeTime));\n  }\n  setInputPlaceholder(placeholder) {\n    this.eDateInput.setInputPlaceholder(placeholder);\n  }\n  setInputAriaLabel(ariaLabel) {\n    this.eDateInput.setAriaLabel(ariaLabel);\n  }\n  setDisabled(disabled) {\n    this.eDateInput.setDisabled(disabled);\n  }\n  afterGuiAttached(params) {\n    if (!params || !params.suppressFocus) {\n      this.eDateInput.getInputElement().focus({\n        preventScroll: true\n      });\n    }\n  }\n  shouldUseBrowserDatePicker(params) {\n    return params?.filterParams?.browserDatePicker ?? true;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/number/numberFilterConstants.ts\nvar DEFAULT_NUMBER_FILTER_OPTIONS = [\"equals\", \"notEqual\", \"greaterThan\", \"greaterThanOrEqual\", \"lessThan\", \"lessThanOrEqual\", \"inRange\", \"blank\", \"notBlank\"];\n\n// packages/ag-grid-community/src/filter/provided/number/numberFilterUtils.ts\nfunction getAllowedCharPattern(filterParams) {\n  const {\n    allowedCharPattern\n  } = filterParams ?? {};\n  return allowedCharPattern ?? null;\n}\nfunction processNumberFilterValue(value) {\n  if (value == null) {\n    return null;\n  }\n  return isNaN(value) ? null : value;\n}\nfunction mapValuesFromNumberFilterModel(filterModel, optionsFactory) {\n  const {\n    filter,\n    filterTo,\n    type\n  } = filterModel || {};\n  return [processNumberFilterValue(filter), processNumberFilterValue(filterTo)].slice(0, getNumberOfInputs(type, optionsFactory));\n}\n\n// packages/ag-grid-community/src/filter/provided/number/numberFilter.ts\nvar NumberFilter = class extends SimpleFilter {\n  constructor() {\n    super(\"numberFilter\", mapValuesFromNumberFilterModel, DEFAULT_NUMBER_FILTER_OPTIONS);\n    this.eValuesFrom = [];\n    this.eValuesTo = [];\n    this.filterType = \"number\";\n    this.defaultDebounceMs = 500;\n  }\n  setElementValue(element, value, fromFloatingFilter) {\n    const {\n      numberFormatter\n    } = this.params;\n    const valueToSet = !fromFloatingFilter && numberFormatter ? numberFormatter(value ?? null) : value;\n    super.setElementValue(element, valueToSet);\n  }\n  createEValue() {\n    const allowedCharPattern = getAllowedCharPattern(this.params);\n    const eCondition = _createElement({\n      tag: \"div\",\n      cls: \"ag-filter-body\",\n      role: \"presentation\"\n    });\n    this.createFromToElement(eCondition, this.eValuesFrom, \"from\", allowedCharPattern);\n    this.createFromToElement(eCondition, this.eValuesTo, \"to\", allowedCharPattern);\n    return eCondition;\n  }\n  createFromToElement(eCondition, eValues, fromTo, allowedCharPattern) {\n    const eValue = this.createManagedBean(allowedCharPattern ? new AgInputTextField({\n      allowedCharPattern\n    }) : new AgInputNumberField());\n    eValue.addCss(`ag-filter-${fromTo}`);\n    eValue.addCss(\"ag-filter-filter\");\n    eValues.push(eValue);\n    eCondition.appendChild(eValue.getGui());\n  }\n  removeEValues(startPosition, deleteCount) {\n    const removeComps = eGui => this.removeComponents(eGui, startPosition, deleteCount);\n    removeComps(this.eValuesFrom);\n    removeComps(this.eValuesTo);\n  }\n  getValues(position) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        result.push(processNumberFilterValue(this.stringToFloat(element.getValue())));\n      }\n    });\n    return result;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\n  }\n  stringToFloat(value) {\n    if (typeof value === \"number\") {\n      return value;\n    }\n    let filterText = _makeNull(value);\n    if (filterText != null && filterText.trim() === \"\") {\n      filterText = null;\n    }\n    const numberParser = this.params.numberParser;\n    if (numberParser) {\n      return numberParser(filterText);\n    }\n    return filterText == null || filterText.trim() === \"-\" ? null : parseFloat(filterText);\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {\n      filterType: this.filterType,\n      type\n    };\n    const values = this.getValues(position);\n    if (values.length > 0) {\n      model.filter = values[0];\n    }\n    if (values.length > 1) {\n      model.filterTo = values[1];\n    }\n    return model;\n  }\n  getInputs(position) {\n    const {\n      eValuesFrom,\n      eValuesTo\n    } = this;\n    if (position >= eValuesFrom.length) {\n      return [null, null];\n    }\n    return [eValuesFrom[position], eValuesTo[position]];\n  }\n  hasInvalidInputs() {\n    let invalidInputs = false;\n    this.forEachInput(element => {\n      if (!element.getInputElement().validity.valid) {\n        invalidInputs = true;\n        return;\n      }\n    });\n    return invalidInputs;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/number/numberFilterModelFormatter.ts\nvar NumberFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  constructor(optionsFactory, filterParams) {\n    super(optionsFactory, filterParams, filterParams.numberFormatter);\n    this.filterTypeKeys = SCALAR_FILTER_TYPE_KEYS;\n  }\n  conditionToString(condition, forToolPanel, isRange, customDisplayKey, customDisplayName) {\n    const {\n      filter,\n      filterTo,\n      type\n    } = condition;\n    const formatValue = this.formatValue.bind(this);\n    if (forToolPanel) {\n      const valueForToolPanel = this.conditionForToolPanel(type, isRange, () => formatValue(filter), () => formatValue(filterTo), customDisplayKey, customDisplayName);\n      if (valueForToolPanel != null) {\n        return valueForToolPanel;\n      }\n    }\n    if (isRange) {\n      return `${formatValue(filter)}-${formatValue(filterTo)}`;\n    }\n    if (filter != null) {\n      return formatValue(filter);\n    }\n    return `${type}`;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/number/numberFilterHandler.ts\nvar NumberFilterHandler = class extends ScalarFilterHandler {\n  constructor() {\n    super(mapValuesFromNumberFilterModel, DEFAULT_NUMBER_FILTER_OPTIONS);\n    this.filterType = \"number\";\n    this.FilterModelFormatterClass = NumberFilterModelFormatter;\n  }\n  comparator() {\n    return (left, right) => {\n      if (left === right) {\n        return 0;\n      }\n      return left < right ? 1 : -1;\n    };\n  }\n  isValid(value) {\n    return !isNaN(value);\n  }\n};\n\n// packages/ag-grid-community/src/filter/floating/provided/floatingFilterTextInputService.ts\nvar FloatingFilterTextInputService = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.params = params;\n    this.eInput = RefPlaceholder;\n    this.onValueChanged = () => {};\n  }\n  setupGui(parentElement) {\n    this.eInput = this.createManagedBean(new AgInputTextField(this.params?.config));\n    const eInput = this.eInput.getGui();\n    parentElement.appendChild(eInput);\n    const listener = e => this.onValueChanged(e);\n    this.addManagedListeners(eInput, {\n      input: listener,\n      keydown: listener\n    });\n  }\n  setEditable(editable) {\n    this.eInput.setDisabled(!editable);\n  }\n  getValue() {\n    return this.eInput.getValue();\n  }\n  setValue(value, silent) {\n    this.eInput.setValue(value, silent);\n  }\n  setValueChangedListener(listener) {\n    this.onValueChanged = listener;\n  }\n  setParams({\n    ariaLabel,\n    autoComplete\n  }) {\n    const {\n      eInput\n    } = this;\n    eInput.setInputAriaLabel(ariaLabel);\n    if (autoComplete !== void 0) {\n      eInput.setAutoComplete(autoComplete);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/text/textFilterUtils.ts\nfunction trimInputForFilter(value) {\n  const trimmedInput = value?.trim();\n  return trimmedInput === \"\" ? value : trimmedInput;\n}\nfunction mapValuesFromTextFilterModel(filterModel, optionsFactory) {\n  const {\n    filter,\n    filterTo,\n    type\n  } = filterModel || {};\n  return [filter || null, filterTo || null].slice(0, getNumberOfInputs(type, optionsFactory));\n}\n\n// packages/ag-grid-community/src/filter/floating/provided/textInputFloatingFilter.ts\nvar TextInputFloatingFilterElement = {\n  tag: \"div\",\n  ref: \"eFloatingFilterInputContainer\",\n  cls: \"ag-floating-filter-input\",\n  role: \"presentation\"\n};\nvar TextInputFloatingFilter = class extends SimpleFloatingFilter {\n  constructor() {\n    super(...arguments);\n    this.eFloatingFilterInputContainer = RefPlaceholder;\n    this.defaultDebounceMs = 500;\n  }\n  postConstruct() {\n    this.setTemplate(TextInputFloatingFilterElement);\n  }\n  onModelUpdated(model) {\n    this.setLastTypeFromModel(model);\n    this.setEditable(this.canWeEditAfterModelFromParentFilter(model));\n    this.inputSvc.setValue(this.filterModelFormatter.getModelAsString(model));\n  }\n  setParams(params) {\n    this.setupFloatingFilterInputService(params);\n    super.setParams(params);\n    this.setTextInputParams(params);\n  }\n  setupFloatingFilterInputService(params) {\n    this.inputSvc = this.createFloatingFilterInputService(params);\n    this.inputSvc.setupGui(this.eFloatingFilterInputContainer);\n  }\n  setTextInputParams(params) {\n    const autoComplete = params.browserAutoComplete ?? false;\n    const {\n      inputSvc,\n      defaultDebounceMs,\n      readOnly\n    } = this;\n    inputSvc.setParams({\n      ariaLabel: this.getAriaLabel(params),\n      autoComplete\n    });\n    this.applyActive = _isUseApplyButton(params.filterParams);\n    if (!readOnly) {\n      const debounceMs = getDebounceMs(params.filterParams, defaultDebounceMs);\n      const toDebounce = _debounce(this, this.syncUpWithParentFilter.bind(this), debounceMs);\n      inputSvc.setValueChangedListener(toDebounce);\n    }\n  }\n  updateParams(params) {\n    super.updateParams(params);\n    this.setTextInputParams(params);\n  }\n  recreateFloatingFilterInputService(params) {\n    const {\n      inputSvc\n    } = this;\n    const value = inputSvc.getValue();\n    _clearElement(this.eFloatingFilterInputContainer);\n    this.destroyBean(inputSvc);\n    this.setupFloatingFilterInputService(params);\n    inputSvc.setValue(value, true);\n  }\n  syncUpWithParentFilter(e) {\n    const isEnterKey = e.key === KeyCode.ENTER;\n    const reactive = this.reactive;\n    if (reactive) {\n      const reactiveParams = this.params;\n      reactiveParams.onUiChange();\n    }\n    if (this.applyActive && !isEnterKey) {\n      return;\n    }\n    const {\n      inputSvc,\n      params,\n      lastType\n    } = this;\n    let value = inputSvc.getValue();\n    if (params.filterParams.trimInput) {\n      value = trimInputForFilter(value);\n      inputSvc.setValue(value, true);\n    }\n    if (reactive) {\n      const reactiveParams = params;\n      const model = reactiveParams.model;\n      const parsedValue = this.convertValue(value);\n      const newModel = parsedValue == null ? null : {\n        ...(model ?? {\n          filterType: this.filterType,\n          type: lastType ?? this.optionsFactory.defaultOption\n        }),\n        filter: parsedValue\n      };\n      reactiveParams.onModelChange(newModel, {\n        afterFloatingFilter: true\n      });\n    } else {\n      params.parentFilterInstance(filterInstance => {\n        filterInstance?.onFloatingFilterChanged(lastType || null, value || null);\n      });\n    }\n  }\n  convertValue(value) {\n    return value || null;\n  }\n  setEditable(editable) {\n    this.inputSvc.setEditable(editable);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/number/numberFloatingFilter.ts\nvar FloatingFilterNumberInputService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.onValueChanged = () => {};\n    this.numberInputActive = true;\n  }\n  setupGui(parentElement) {\n    this.eNumberInput = this.createManagedBean(new AgInputNumberField());\n    this.eTextInput = this.createManagedBean(new AgInputTextField());\n    this.eTextInput.setDisabled(true);\n    const eNumberInput = this.eNumberInput.getGui();\n    const eTextInput = this.eTextInput.getGui();\n    parentElement.appendChild(eNumberInput);\n    parentElement.appendChild(eTextInput);\n    this.setupListeners(eNumberInput, e => this.onValueChanged(e));\n    this.setupListeners(eTextInput, e => this.onValueChanged(e));\n  }\n  setEditable(editable) {\n    this.numberInputActive = editable;\n    this.eNumberInput.setDisplayed(this.numberInputActive);\n    this.eTextInput.setDisplayed(!this.numberInputActive);\n  }\n  setAutoComplete(autoComplete) {\n    this.eNumberInput.setAutoComplete(autoComplete);\n    this.eTextInput.setAutoComplete(autoComplete);\n  }\n  getValue() {\n    return this.getActiveInputElement().getValue();\n  }\n  setValue(value, silent) {\n    this.getActiveInputElement().setValue(value, silent);\n  }\n  getActiveInputElement() {\n    return this.numberInputActive ? this.eNumberInput : this.eTextInput;\n  }\n  setValueChangedListener(listener) {\n    this.onValueChanged = listener;\n  }\n  setupListeners(element, listener) {\n    this.addManagedListeners(element, {\n      input: listener,\n      keydown: listener\n    });\n  }\n  setParams(params) {\n    this.setAriaLabel(params.ariaLabel);\n    if (params.autoComplete !== void 0) {\n      this.setAutoComplete(params.autoComplete);\n    }\n  }\n  setAriaLabel(ariaLabel) {\n    this.eNumberInput.setInputAriaLabel(ariaLabel);\n    this.eTextInput.setInputAriaLabel(ariaLabel);\n  }\n};\nvar NumberFloatingFilter = class extends TextInputFloatingFilter {\n  constructor() {\n    super(...arguments);\n    this.FilterModelFormatterClass = NumberFilterModelFormatter;\n    this.filterType = \"number\";\n    this.defaultOptions = DEFAULT_NUMBER_FILTER_OPTIONS;\n  }\n  updateParams(params) {\n    const allowedCharPattern = getAllowedCharPattern(params.filterParams);\n    if (allowedCharPattern !== this.allowedCharPattern) {\n      this.recreateFloatingFilterInputService(params);\n    }\n    super.updateParams(params);\n  }\n  createFloatingFilterInputService(params) {\n    this.allowedCharPattern = getAllowedCharPattern(params.filterParams);\n    if (this.allowedCharPattern) {\n      return this.createManagedBean(new FloatingFilterTextInputService({\n        config: {\n          allowedCharPattern: this.allowedCharPattern\n        }\n      }));\n    }\n    return this.createManagedBean(new FloatingFilterNumberInputService());\n  }\n  convertValue(value) {\n    return value ? Number(value) : null;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/text/textFilterConstants.ts\nvar DEFAULT_TEXT_FILTER_OPTIONS = [\"contains\", \"notContains\", \"equals\", \"notEqual\", \"startsWith\", \"endsWith\", \"blank\", \"notBlank\"];\n\n// packages/ag-grid-community/src/filter/provided/text/textFilter.ts\nvar TextFilter = class extends SimpleFilter {\n  constructor() {\n    super(\"textFilter\", mapValuesFromTextFilterModel, DEFAULT_TEXT_FILTER_OPTIONS);\n    this.filterType = \"text\";\n    this.eValuesFrom = [];\n    this.eValuesTo = [];\n    this.defaultDebounceMs = 500;\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {\n      filterType: this.filterType,\n      type\n    };\n    const values = this.getValuesWithSideEffects(position, true);\n    if (values.length > 0) {\n      model.filter = values[0];\n    }\n    if (values.length > 1) {\n      model.filterTo = values[1];\n    }\n    return model;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\n  }\n  getInputs(position) {\n    const {\n      eValuesFrom,\n      eValuesTo\n    } = this;\n    if (position >= eValuesFrom.length) {\n      return [null, null];\n    }\n    return [eValuesFrom[position], eValuesTo[position]];\n  }\n  getValues(position) {\n    return this.getValuesWithSideEffects(position, false);\n  }\n  getValuesWithSideEffects(position, applySideEffects) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        let value = _makeNull(element.getValue());\n        if (applySideEffects && this.params.trimInput) {\n          value = trimInputForFilter(value) ?? null;\n          element.setValue(value, true);\n        }\n        result.push(value);\n      }\n    });\n    return result;\n  }\n  createEValue() {\n    const eCondition = _createElement({\n      tag: \"div\",\n      cls: \"ag-filter-body\",\n      role: \"presentation\"\n    });\n    const {\n      eValuesFrom,\n      eValuesTo\n    } = this;\n    this.createFromToElement(eCondition, eValuesFrom, \"from\");\n    this.createFromToElement(eCondition, eValuesTo, \"to\");\n    return eCondition;\n  }\n  createFromToElement(eCondition, eValues, fromTo) {\n    const eValue = this.createManagedBean(new AgInputTextField());\n    eValue.addCss(`ag-filter-${fromTo}`);\n    eValue.addCss(\"ag-filter-filter\");\n    eValues.push(eValue);\n    eCondition.appendChild(eValue.getGui());\n  }\n  removeEValues(startPosition, deleteCount) {\n    const removeComps = eGui => this.removeComponents(eGui, startPosition, deleteCount);\n    const {\n      eValuesFrom,\n      eValuesTo\n    } = this;\n    removeComps(eValuesFrom);\n    removeComps(eValuesTo);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/text/textFilterModelFormatter.ts\nvar TextFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  constructor() {\n    super(...arguments);\n    this.filterTypeKeys = TEXT_FILTER_TYPE_KEYS;\n  }\n  conditionToString(condition, forToolPanel, isRange, customDisplayKey, customDisplayName) {\n    const {\n      filter,\n      filterTo,\n      type\n    } = condition;\n    if (forToolPanel) {\n      const getValueFunc = value => () => translateForFilter(this, \"filterSummaryTextQuote\", [value]);\n      const valueForToolPanel = this.conditionForToolPanel(type, isRange, getValueFunc(filter), getValueFunc(filterTo), customDisplayKey, customDisplayName);\n      if (valueForToolPanel != null) {\n        return valueForToolPanel;\n      }\n    }\n    if (isRange) {\n      return `${filter}-${filterTo}`;\n    }\n    if (filter != null) {\n      return `${filter}`;\n    }\n    return `${type}`;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/text/textFilterHandler.ts\nvar defaultMatcher = ({\n  filterOption,\n  value,\n  filterText\n}) => {\n  if (filterText == null) {\n    return false;\n  }\n  switch (filterOption) {\n    case \"contains\":\n      return value.indexOf(filterText) >= 0;\n    case \"notContains\":\n      return value.indexOf(filterText) < 0;\n    case \"equals\":\n      return value === filterText;\n    case \"notEqual\":\n      return value != filterText;\n    case \"startsWith\":\n      return value.indexOf(filterText) === 0;\n    case \"endsWith\":\n      {\n        const index = value.lastIndexOf(filterText);\n        return index >= 0 && index === value.length - filterText.length;\n      }\n    default:\n      return false;\n  }\n};\nvar defaultFormatter = from => from;\nvar defaultLowercaseFormatter = from => from == null ? null : from.toString().toLowerCase();\nvar TextFilterHandler = class extends SimpleFilterHandler {\n  constructor() {\n    super(mapValuesFromTextFilterModel, DEFAULT_TEXT_FILTER_OPTIONS);\n    this.filterType = \"text\";\n    this.FilterModelFormatterClass = TextFilterModelFormatter;\n  }\n  updateParams(params) {\n    super.updateParams(params);\n    const filterParams = params.filterParams;\n    this.matcher = filterParams.textMatcher ?? defaultMatcher;\n    this.formatter = filterParams.textFormatter ?? (filterParams.caseSensitive ? defaultFormatter : defaultLowercaseFormatter);\n  }\n  evaluateNullValue(filterType) {\n    const filterTypesAllowNulls = [\"notEqual\", \"notContains\", \"blank\"];\n    return filterType ? filterTypesAllowNulls.indexOf(filterType) >= 0 : false;\n  }\n  evaluateNonNullValue(values, cellValue, filterModel, params) {\n    const formattedValues = values.map(v => this.formatter(v)) || [];\n    const cellValueFormatted = this.formatter(cellValue);\n    const {\n      api,\n      colDef,\n      column,\n      context,\n      filterParams: {\n        textFormatter\n      }\n    } = this.params;\n    if (filterModel.type === \"blank\") {\n      return isBlank(cellValue);\n    } else if (filterModel.type === \"notBlank\") {\n      return !isBlank(cellValue);\n    }\n    const matcherParams = {\n      api,\n      colDef,\n      column,\n      context,\n      node: params.node,\n      data: params.data,\n      filterOption: filterModel.type,\n      value: cellValueFormatted,\n      textFormatter\n    };\n    return formattedValues.some(v => this.matcher({\n      ...matcherParams,\n      filterText: v\n    }));\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/text/textFloatingFilter.ts\nvar TextFloatingFilter = class extends TextInputFloatingFilter {\n  constructor() {\n    super(...arguments);\n    this.FilterModelFormatterClass = TextFilterModelFormatter;\n    this.filterType = \"text\";\n    this.defaultOptions = DEFAULT_TEXT_FILTER_OPTIONS;\n  }\n  createFloatingFilterInputService() {\n    return this.createManagedBean(new FloatingFilterTextInputService());\n  }\n};\n\n// packages/ag-grid-community/src/filter/quickFilterApi.ts\nfunction isQuickFilterPresent(beans) {\n  return !!beans.quickFilter?.isFilterPresent();\n}\nfunction getQuickFilter(beans) {\n  return beans.quickFilter?.getText();\n}\nfunction resetQuickFilter(beans) {\n  beans.quickFilter?.resetCache();\n}\n\n// packages/ag-grid-community/src/filter/quickFilterService.ts\nvar QuickFilterService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"quickFilter\";\n    this.quickFilter = null;\n    this.quickFilterParts = null;\n  }\n  postConstruct() {\n    const resetListener = this.resetCache.bind(this);\n    const gos = this.gos;\n    this.addManagedEventListeners({\n      columnPivotModeChanged: resetListener,\n      newColumnsLoaded: resetListener,\n      columnRowGroupChanged: resetListener,\n      columnVisible: () => {\n        if (!gos.get(\"includeHiddenColumnsInQuickFilter\")) {\n          this.resetCache();\n        }\n      }\n    });\n    this.addManagedPropertyListener(\"quickFilterText\", e => this.setFilter(e.currentValue));\n    this.addManagedPropertyListeners([\"includeHiddenColumnsInQuickFilter\", \"applyQuickFilterBeforePivotOrAgg\"], () => this.onColumnConfigChanged());\n    this.quickFilter = this.parseFilter(gos.get(\"quickFilterText\"));\n    this.parser = gos.get(\"quickFilterParser\");\n    this.matcher = gos.get(\"quickFilterMatcher\");\n    this.setFilterParts();\n    this.addManagedPropertyListeners([\"quickFilterMatcher\", \"quickFilterParser\"], () => this.setParserAndMatcher());\n  }\n  // if we are using autoGroupCols, then they should be included for quick filter. this covers the\n  // following scenarios:\n  // a) user provides 'field' into autoGroupCol of normal grid, so now because a valid col to filter leafs on\n  // b) using tree data and user depends on autoGroupCol for first col, and we also want to filter on this\n  //    (tree data is a bit different, as parent rows can be filtered on, unlike row grouping)\n  refreshCols() {\n    const {\n      autoColSvc,\n      colModel,\n      gos,\n      pivotResultCols\n    } = this.beans;\n    const pivotMode = colModel.isPivotMode();\n    const groupAutoCols = autoColSvc?.getColumns();\n    const providedCols = colModel.getColDefCols();\n    let columnsForQuickFilter = (pivotMode && !gos.get(\"applyQuickFilterBeforePivotOrAgg\") ? pivotResultCols?.getPivotResultCols()?.list : providedCols) ?? [];\n    if (groupAutoCols) {\n      columnsForQuickFilter = columnsForQuickFilter.concat(groupAutoCols);\n    }\n    this.colsToUse = gos.get(\"includeHiddenColumnsInQuickFilter\") ? columnsForQuickFilter : columnsForQuickFilter.filter(col => col.isVisible() || col.isRowGroupActive());\n  }\n  isFilterPresent() {\n    return this.quickFilter !== null;\n  }\n  doesRowPass(node) {\n    const usingCache = this.gos.get(\"cacheQuickFilter\");\n    if (this.matcher) {\n      return this.doesRowPassMatcher(usingCache, node);\n    }\n    return this.quickFilterParts.every(part => usingCache ? this.doesRowPassCache(node, part) : this.doesRowPassNoCache(node, part));\n  }\n  resetCache() {\n    this.beans.rowModel.forEachNode(node => node.quickFilterAggregateText = null);\n  }\n  getText() {\n    return this.gos.get(\"quickFilterText\");\n  }\n  setFilterParts() {\n    const {\n      quickFilter,\n      parser\n    } = this;\n    if (quickFilter) {\n      this.quickFilterParts = parser ? parser(quickFilter) : quickFilter.split(\" \");\n    } else {\n      this.quickFilterParts = null;\n    }\n  }\n  parseFilter(newFilter) {\n    if (!_exists(newFilter)) {\n      return null;\n    }\n    return newFilter.toUpperCase();\n  }\n  setFilter(newFilter) {\n    if (newFilter != null && typeof newFilter !== \"string\") {\n      _warn(70, {\n        newFilter\n      });\n      return;\n    }\n    const parsedFilter = this.parseFilter(newFilter);\n    if (this.quickFilter !== parsedFilter) {\n      this.quickFilter = parsedFilter;\n      this.setFilterParts();\n      this.dispatchLocalEvent({\n        type: \"quickFilterChanged\"\n      });\n    }\n  }\n  setParserAndMatcher() {\n    const parser = this.gos.get(\"quickFilterParser\");\n    const matcher = this.gos.get(\"quickFilterMatcher\");\n    const hasChanged = parser !== this.parser || matcher !== this.matcher;\n    this.parser = parser;\n    this.matcher = matcher;\n    if (hasChanged) {\n      this.setFilterParts();\n      this.dispatchLocalEvent({\n        type: \"quickFilterChanged\"\n      });\n    }\n  }\n  onColumnConfigChanged() {\n    this.refreshCols();\n    this.resetCache();\n    if (this.isFilterPresent()) {\n      this.dispatchLocalEvent({\n        type: \"quickFilterChanged\"\n      });\n    }\n  }\n  doesRowPassNoCache(node, filterPart) {\n    return this.colsToUse.some(column => {\n      const part = this.getTextForColumn(column, node);\n      return _exists(part) && part.indexOf(filterPart) >= 0;\n    });\n  }\n  doesRowPassCache(node, filterPart) {\n    this.checkGenerateAggText(node);\n    return node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n  }\n  doesRowPassMatcher(usingCache, node) {\n    let quickFilterAggregateText;\n    if (usingCache) {\n      this.checkGenerateAggText(node);\n      quickFilterAggregateText = node.quickFilterAggregateText;\n    } else {\n      quickFilterAggregateText = this.getAggText(node);\n    }\n    const {\n      quickFilterParts,\n      matcher\n    } = this;\n    return matcher(quickFilterParts, quickFilterAggregateText);\n  }\n  checkGenerateAggText(node) {\n    if (!node.quickFilterAggregateText) {\n      node.quickFilterAggregateText = this.getAggText(node);\n    }\n  }\n  getTextForColumn(column, node) {\n    let value = this.beans.filterValueSvc.getValue(column, node);\n    const colDef = column.getColDef();\n    if (colDef.getQuickFilterText) {\n      const params = _addGridCommonParams(this.gos, {\n        value,\n        node,\n        data: node.data,\n        column,\n        colDef\n      });\n      value = colDef.getQuickFilterText(params);\n    }\n    return _exists(value) ? value.toString().toUpperCase() : null;\n  }\n  getAggText(node) {\n    const stringParts = [];\n    this.colsToUse.forEach(column => {\n      const part = this.getTextForColumn(column, node);\n      if (_exists(part)) {\n        stringParts.push(part);\n      }\n    });\n    return stringParts.join(\"\\n\");\n  }\n};\n\n// packages/ag-grid-community/src/filter/filterModule.ts\nvar ClientSideRowModelFilterModule = {\n  moduleName: \"ClientSideRowModelFilter\",\n  version: VERSION,\n  rowModels: [\"clientSide\"],\n  beans: [FilterStage]\n};\nvar FilterCoreModule = {\n  moduleName: \"FilterCore\",\n  version: VERSION,\n  beans: [FilterManager],\n  apiFunctions: {\n    isAnyFilterPresent,\n    onFilterChanged\n  },\n  css: [columnFiltersCSS],\n  dependsOn: [ClientSideRowModelFilterModule]\n};\nvar FilterValueModule = {\n  moduleName: \"FilterValue\",\n  version: VERSION,\n  beans: [FilterValueService]\n};\nvar ColumnFilterModule = {\n  moduleName: \"ColumnFilter\",\n  version: VERSION,\n  beans: [ColumnFilterService, FilterMenuFactory],\n  dynamicBeans: {\n    headerFilterCellCtrl: HeaderFilterCellCtrl\n  },\n  icons: {\n    // open filter button - header, floating filter, menu\n    filter: \"filter\",\n    // filter is applied - header (legacy column menu), filter tool panel\n    filterActive: \"filter\"\n  },\n  apiFunctions: {\n    isColumnFilterPresent,\n    getColumnFilterInstance,\n    destroyFilter,\n    setFilterModel,\n    getFilterModel,\n    getColumnFilterModel,\n    setColumnFilterModel,\n    showColumnFilter,\n    hideColumnFilter,\n    getColumnFilterHandler,\n    doFilterAction\n  },\n  dependsOn: [FilterCoreModule, PopupModule, FilterValueModule, SharedMenuModule]\n};\nvar CustomFilterModule = {\n  moduleName: \"CustomFilter\",\n  version: VERSION,\n  userComponents: {\n    agReadOnlyFloatingFilter: ReadOnlyFloatingFilter\n  },\n  dependsOn: [ColumnFilterModule]\n};\nvar TextFilterModule = {\n  moduleName: \"TextFilter\",\n  version: VERSION,\n  dependsOn: [ColumnFilterModule],\n  userComponents: {\n    agTextColumnFilter: {\n      classImp: TextFilter,\n      params: {\n        useForm: true\n      }\n    },\n    agTextColumnFloatingFilter: TextFloatingFilter\n  },\n  dynamicBeans: {\n    agTextColumnFilterHandler: TextFilterHandler\n  }\n};\nvar NumberFilterModule = {\n  moduleName: \"NumberFilter\",\n  version: VERSION,\n  dependsOn: [ColumnFilterModule],\n  userComponents: {\n    agNumberColumnFilter: {\n      classImp: NumberFilter,\n      params: {\n        useForm: true\n      }\n    },\n    agNumberColumnFloatingFilter: NumberFloatingFilter\n  },\n  dynamicBeans: {\n    agNumberColumnFilterHandler: NumberFilterHandler\n  }\n};\nvar DateFilterModule = {\n  moduleName: \"DateFilter\",\n  version: VERSION,\n  dependsOn: [ColumnFilterModule],\n  userComponents: {\n    agDateColumnFilter: {\n      classImp: DateFilter,\n      params: {\n        useForm: true\n      }\n    },\n    agDateInput: DefaultDateComponent,\n    agDateColumnFloatingFilter: DateFloatingFilter\n  },\n  dynamicBeans: {\n    agDateColumnFilterHandler: DateFilterHandler\n  }\n};\nvar QuickFilterCoreModule = {\n  moduleName: \"QuickFilterCore\",\n  version: VERSION,\n  rowModels: [\"clientSide\"],\n  beans: [QuickFilterService],\n  dependsOn: [FilterCoreModule, FilterValueModule]\n};\nvar QuickFilterModule = {\n  moduleName: \"QuickFilter\",\n  version: VERSION,\n  apiFunctions: {\n    isQuickFilterPresent,\n    getQuickFilter,\n    resetQuickFilter\n  },\n  dependsOn: [QuickFilterCoreModule]\n};\nvar ExternalFilterModule = {\n  moduleName: \"ExternalFilter\",\n  version: VERSION,\n  dependsOn: [FilterCoreModule]\n};\n\n// packages/ag-grid-community/src/tooltip/tooltip.css-GENERATED.ts\nvar tooltipCSS = /*css*/\n`.ag-tooltip{background-color:var(--ag-tooltip-background-color);border:var(--ag-tooltip-border);border-radius:var(--ag-border-radius);color:var(--ag-tooltip-text-color);padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding);position:absolute;white-space:normal;z-index:99999;&:where(.ag-cell-editor-tooltip){background-color:var(--ag-tooltip-error-background-color);border:var(--ag-tooltip-error-border);color:var(--ag-tooltip-error-text-color);font-weight:500}}.ag-tooltip-custom{position:absolute;z-index:99999}.ag-tooltip-custom:where(:not(.ag-tooltip-interactive)),.ag-tooltip:where(:not(.ag-tooltip-interactive)){pointer-events:none}.ag-tooltip-animate{transition:opacity 1s;&:where(.ag-tooltip-hiding){opacity:0}}`;\n\n// packages/ag-grid-community/src/tooltip/tooltipService.ts\nvar getEditErrorsForPosition = (beans, cellCtrl, translate) => {\n  const {\n    editModelSvc\n  } = beans;\n  const cellValidationErrors = editModelSvc?.getCellValidationModel()?.getCellValidation(cellCtrl)?.errorMessages;\n  const rowValidationErrors = editModelSvc?.getRowValidationModel().getRowValidation(cellCtrl)?.errorMessages;\n  const errors = cellValidationErrors || rowValidationErrors;\n  return errors && errors.length ? errors.join(translate(\"tooltipValidationErrorSeparator\", \". \")) : void 0;\n};\nvar TooltipService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"tooltipSvc\";\n  }\n  setupHeaderTooltip(existingTooltipFeature, ctrl, value, shouldDisplayTooltip) {\n    if (existingTooltipFeature) {\n      ctrl.destroyBean(existingTooltipFeature);\n    }\n    const isTooltipWhenTruncated = _isShowTooltipWhenTruncated(this.gos);\n    const {\n      column,\n      eGui\n    } = ctrl;\n    const colDef = column.getColDef();\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !colDef.headerComponent) {\n      shouldDisplayTooltip = _isElementOverflowingCallback(() => eGui.querySelector(\".ag-header-cell-text\"));\n    }\n    const tooltipCtrl = {\n      getColumn: () => column,\n      getColDef: () => column.getColDef(),\n      getGui: () => eGui,\n      getLocation: () => \"header\",\n      getTooltipValue: () => {\n        if (value != null) {\n          return value;\n        }\n        const res = column.getColDef().headerTooltip;\n        return res;\n      },\n      shouldDisplayTooltip\n    };\n    let tooltipFeature = this.createTooltipFeature(tooltipCtrl);\n    if (tooltipFeature) {\n      tooltipFeature = ctrl.createBean(tooltipFeature);\n      ctrl.setRefreshFunction(\"tooltip\", () => tooltipFeature.refreshTooltip());\n    }\n    return tooltipFeature;\n  }\n  setupHeaderGroupTooltip(existingTooltipFeature, ctrl, value, shouldDisplayTooltip) {\n    if (existingTooltipFeature) {\n      ctrl.destroyBean(existingTooltipFeature);\n    }\n    const isTooltipWhenTruncated = _isShowTooltipWhenTruncated(this.gos);\n    const {\n      column,\n      eGui\n    } = ctrl;\n    const colGroupDef = column.getColGroupDef();\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !colGroupDef?.headerGroupComponent) {\n      shouldDisplayTooltip = _isElementOverflowingCallback(() => eGui.querySelector(\".ag-header-group-text\"));\n    }\n    const tooltipCtrl = {\n      getColumn: () => column,\n      getGui: () => eGui,\n      getLocation: () => \"headerGroup\",\n      getTooltipValue: () => value ?? (colGroupDef && colGroupDef.headerTooltip),\n      shouldDisplayTooltip\n    };\n    if (colGroupDef) {\n      tooltipCtrl.getColDef = () => colGroupDef;\n    }\n    const tooltipFeature = this.createTooltipFeature(tooltipCtrl);\n    return tooltipFeature ? ctrl.createBean(tooltipFeature) : tooltipFeature;\n  }\n  enableCellTooltipFeature(ctrl, value, shouldDisplayTooltip) {\n    const {\n      beans\n    } = this;\n    const {\n      gos,\n      editSvc\n    } = beans;\n    const {\n      column,\n      rowNode\n    } = ctrl;\n    let location = \"cell\";\n    const getTooltipValue = () => {\n      const isEditing2 = !!editSvc?.isEditing(ctrl);\n      const errorMessages = !isEditing2 && getEditErrorsForPosition(beans, ctrl, this.getLocaleTextFunc());\n      if (errorMessages) {\n        location = \"cellEditor\";\n        return errorMessages;\n      }\n      location = \"cell\";\n      const colDef = column.getColDef();\n      const data = rowNode.data;\n      if (colDef.tooltipField && _exists(data)) {\n        return _getValueUsingField(data, colDef.tooltipField, column.isTooltipFieldContainsDots());\n      }\n      const valueGetter = colDef.tooltipValueGetter;\n      if (valueGetter) {\n        return valueGetter(_addGridCommonParams(gos, {\n          location: \"cell\",\n          colDef: column.getColDef(),\n          column,\n          rowIndex: ctrl.cellPosition.rowIndex,\n          node: rowNode,\n          data: rowNode.data,\n          value: ctrl.value,\n          valueFormatted: ctrl.valueFormatted\n        }));\n      }\n      return null;\n    };\n    const isTooltipWhenTruncated = _isShowTooltipWhenTruncated(gos);\n    if (!shouldDisplayTooltip) {\n      if (isTooltipWhenTruncated && !ctrl.isCellRenderer()) {\n        shouldDisplayTooltip = () => {\n          const isEditing2 = !!editSvc?.isEditing(ctrl);\n          const errorMessages = !isEditing2 && getEditErrorsForPosition(beans, ctrl, this.getLocaleTextFunc());\n          if (errorMessages) {\n            return true;\n          }\n          const isTooltipEnabled = column.isTooltipEnabled();\n          if (!isTooltipEnabled) {\n            return false;\n          }\n          const isElementOverflowing = _isElementOverflowingCallback(() => {\n            const eCell = ctrl.eGui;\n            return eCell.children.length === 0 ? eCell : eCell.querySelector(\".ag-cell-value\");\n          });\n          return !isEditing2 && isElementOverflowing();\n        };\n      } else {\n        shouldDisplayTooltip = () => !editSvc?.isEditing(ctrl);\n      }\n    }\n    const tooltipCtrl = {\n      getColumn: () => column,\n      getColDef: () => column.getColDef(),\n      getRowIndex: () => ctrl.cellPosition.rowIndex,\n      getRowNode: () => rowNode,\n      getGui: () => ctrl.eGui,\n      getLocation: () => location,\n      getTooltipValue: value != null ? () => value : getTooltipValue,\n      // this makes no sense, why is the cell formatted value passed to the tooltip???\n      getValueFormatted: () => ctrl.valueFormatted,\n      shouldDisplayTooltip\n    };\n    return this.createTooltipFeature(tooltipCtrl, beans);\n  }\n  setupFullWidthRowTooltip(existingTooltipFeature, ctrl, value, shouldDisplayTooltip) {\n    const tooltipParams = {\n      getGui: () => ctrl.getFullWidthElement(),\n      getTooltipValue: () => value,\n      getLocation: () => \"fullWidthRow\",\n      shouldDisplayTooltip\n    };\n    const beans = this.beans;\n    const context = beans.context;\n    if (existingTooltipFeature) {\n      ctrl.destroyBean(existingTooltipFeature, context);\n    }\n    const tooltipFeature = this.createTooltipFeature(tooltipParams, beans);\n    if (!tooltipFeature) {\n      return;\n    }\n    return ctrl.createBean(tooltipFeature, context);\n  }\n  setupCellEditorTooltip(cellCtrl, editor) {\n    const {\n      beans\n    } = this;\n    const {\n      context\n    } = beans;\n    const el = editor.getValidationElement?.(true) || !editor.isPopup?.() && cellCtrl.eGui;\n    if (!el) {\n      return;\n    }\n    const tooltipParams = {\n      getGui: () => el,\n      getTooltipValue: () => getEditErrorsForPosition(beans, cellCtrl, this.getLocaleTextFunc()),\n      getLocation: () => \"cellEditor\",\n      shouldDisplayTooltip: () => {\n        const {\n          editModelSvc\n        } = beans;\n        const rowValidationMap = editModelSvc?.getRowValidationModel()?.getRowValidationMap();\n        const cellValidationMap = editModelSvc?.getCellValidationModel()?.getCellValidationMap();\n        const hasRowValidationErrors = !!rowValidationMap && rowValidationMap.size > 0;\n        const hasCellValidationErrors = !!cellValidationMap && cellValidationMap.size > 0;\n        return hasRowValidationErrors || hasCellValidationErrors;\n      }\n    };\n    const tooltipFeature = this.createTooltipFeature(tooltipParams, beans);\n    if (!tooltipFeature) {\n      return;\n    }\n    return cellCtrl.createBean(tooltipFeature, context);\n  }\n  initCol(column) {\n    const {\n      colDef\n    } = column;\n    column.tooltipEnabled = _exists(colDef.tooltipField) || _exists(colDef.tooltipValueGetter) || _exists(colDef.tooltipComponent);\n  }\n  createTooltipFeature(tooltipCtrl, beans) {\n    return this.beans.registry.createDynamicBean(\"tooltipFeature\", false, tooltipCtrl, beans);\n  }\n};\n\n// packages/ag-grid-community/src/tooltip/tooltipModule.ts\nvar TooltipModule = {\n  moduleName: \"Tooltip\",\n  version: VERSION,\n  beans: [TooltipService],\n  dynamicBeans: {\n    tooltipFeature: TooltipFeature\n  },\n  userComponents: {\n    agTooltipComponent: TooltipComponent2\n  },\n  dependsOn: [PopupModule],\n  css: [tooltipCSS]\n};\n\n// packages/ag-grid-community/src/undoRedo/undoRedoStack.ts\nvar UndoRedoAction = class {\n  constructor(cellValueChanges) {\n    this.cellValueChanges = cellValueChanges;\n  }\n};\nvar RangeUndoRedoAction = class extends UndoRedoAction {\n  constructor(cellValueChanges, initialRange, finalRange, ranges) {\n    super(cellValueChanges);\n    this.initialRange = initialRange;\n    this.finalRange = finalRange;\n    this.ranges = ranges;\n  }\n};\nvar DEFAULT_STACK_SIZE = 10;\nvar UndoRedoStack = class {\n  constructor(maxStackSize) {\n    this.actionStack = [];\n    this.maxStackSize = maxStackSize ? maxStackSize : DEFAULT_STACK_SIZE;\n    this.actionStack = new Array(this.maxStackSize);\n  }\n  pop() {\n    return this.actionStack.pop();\n  }\n  push(item) {\n    const shouldAddActions = item.cellValueChanges && item.cellValueChanges.length > 0;\n    if (!shouldAddActions) {\n      return;\n    }\n    if (this.actionStack.length === this.maxStackSize) {\n      this.actionStack.shift();\n    }\n    this.actionStack.push(item);\n  }\n  clear() {\n    this.actionStack = [];\n  }\n  getCurrentStackSize() {\n    return this.actionStack.length;\n  }\n};\n\n// packages/ag-grid-community/src/undoRedo/undoRedoService.ts\nvar UndoRedoService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"undoRedo\";\n    this.cellValueChanges = [];\n    this.activeCellEdit = null;\n    this.activeRowEdit = null;\n    this.isPasting = false;\n    this.isRangeInAction = false;\n    this.batchEditing = false;\n    this.bulkEditing = false;\n    this.onCellValueChanged = event => {\n      const eventCell = {\n        column: event.column,\n        rowIndex: event.rowIndex,\n        rowPinned: event.rowPinned\n      };\n      const isCellEditing = this.activeCellEdit !== null && _areCellsEqual(this.activeCellEdit, eventCell);\n      const isRowEditing = this.activeRowEdit !== null && _isSameRow(this.activeRowEdit, eventCell);\n      const shouldCaptureAction = isCellEditing || isRowEditing || this.isPasting || this.isRangeInAction;\n      if (!shouldCaptureAction) {\n        return;\n      }\n      const {\n        rowPinned,\n        rowIndex,\n        column,\n        oldValue,\n        value\n      } = event;\n      const cellValueChange = {\n        rowPinned,\n        rowIndex,\n        columnId: column.getColId(),\n        newValue: value,\n        oldValue\n      };\n      this.cellValueChanges.push(cellValueChange);\n    };\n    this.clearStacks = () => {\n      this.undoStack.clear();\n      this.redoStack.clear();\n    };\n  }\n  postConstruct() {\n    const {\n      gos,\n      ctrlsSvc\n    } = this.beans;\n    if (!gos.get(\"undoRedoCellEditing\")) {\n      return;\n    }\n    const undoRedoLimit = gos.get(\"undoRedoCellEditingLimit\");\n    if (undoRedoLimit <= 0) {\n      return;\n    }\n    this.undoStack = new UndoRedoStack(undoRedoLimit);\n    this.redoStack = new UndoRedoStack(undoRedoLimit);\n    this.addListeners();\n    const listener = this.clearStacks.bind(this);\n    this.addManagedEventListeners({\n      cellValueChanged: this.onCellValueChanged.bind(this),\n      // undo / redo is restricted to actual editing so we clear the stacks when other operations are\n      // performed that change the order of the row / cols.\n      modelUpdated: e => {\n        if (!e.keepUndoRedoStack) {\n          this.clearStacks();\n        }\n      },\n      columnPivotModeChanged: listener,\n      newColumnsLoaded: listener,\n      columnGroupOpened: listener,\n      columnRowGroupChanged: listener,\n      columnMoved: listener,\n      columnPinned: listener,\n      columnVisible: listener,\n      rowDragEnd: listener\n    });\n    ctrlsSvc.whenReady(this, p => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n    });\n  }\n  getCurrentUndoStackSize() {\n    return this.undoStack?.getCurrentStackSize() ?? 0;\n  }\n  getCurrentRedoStackSize() {\n    return this.redoStack?.getCurrentStackSize() ?? 0;\n  }\n  undo(source) {\n    const {\n      eventSvc,\n      undoStack,\n      redoStack\n    } = this;\n    eventSvc.dispatchEvent({\n      type: \"undoStarted\",\n      source\n    });\n    const operationPerformed = this.undoRedo(undoStack, redoStack, \"initialRange\", \"oldValue\", \"undo\");\n    eventSvc.dispatchEvent({\n      type: \"undoEnded\",\n      source,\n      operationPerformed\n    });\n  }\n  redo(source) {\n    const {\n      eventSvc,\n      undoStack,\n      redoStack\n    } = this;\n    eventSvc.dispatchEvent({\n      type: \"redoStarted\",\n      source\n    });\n    const operationPerformed = this.undoRedo(redoStack, undoStack, \"finalRange\", \"newValue\", \"redo\");\n    eventSvc.dispatchEvent({\n      type: \"redoEnded\",\n      source,\n      operationPerformed\n    });\n  }\n  undoRedo(undoRedoStack, opposingUndoRedoStack, rangeProperty, cellValueChangeProperty, source) {\n    if (!undoRedoStack) {\n      return false;\n    }\n    const undoRedoAction = undoRedoStack.pop();\n    if (!undoRedoAction || !undoRedoAction.cellValueChanges) {\n      return false;\n    }\n    this.processAction(undoRedoAction, cellValueChange => cellValueChange[cellValueChangeProperty], source);\n    if (undoRedoAction instanceof RangeUndoRedoAction) {\n      this.processRange(undoRedoAction.ranges || [undoRedoAction[rangeProperty]]);\n    } else {\n      this.processCell(undoRedoAction.cellValueChanges);\n    }\n    opposingUndoRedoStack.push(undoRedoAction);\n    return true;\n  }\n  processAction(action, valueExtractor, source) {\n    action.cellValueChanges.forEach(cellValueChange => {\n      const {\n        rowIndex,\n        rowPinned,\n        columnId\n      } = cellValueChange;\n      const rowPosition = {\n        rowIndex,\n        rowPinned\n      };\n      const currentRow = _getRowNode(this.beans, rowPosition);\n      if (!currentRow.displayed) {\n        return;\n      }\n      currentRow.setDataValue(columnId, valueExtractor(cellValueChange), source);\n    });\n  }\n  processRange(ranges) {\n    let lastFocusedCell;\n    const rangeSvc = this.beans.rangeSvc;\n    rangeSvc.removeAllCellRanges(true);\n    ranges.forEach((range, idx) => {\n      if (!range) {\n        return;\n      }\n      const startRow = range.startRow;\n      const endRow = range.endRow;\n      if (idx === ranges.length - 1) {\n        lastFocusedCell = {\n          rowPinned: startRow.rowPinned,\n          rowIndex: startRow.rowIndex,\n          columnId: range.startColumn.getColId()\n        };\n        this.setLastFocusedCell(lastFocusedCell);\n      }\n      const cellRangeParams = {\n        rowStartIndex: startRow.rowIndex,\n        rowStartPinned: startRow.rowPinned,\n        rowEndIndex: endRow.rowIndex,\n        rowEndPinned: endRow.rowPinned,\n        columnStart: range.startColumn,\n        columns: range.columns\n      };\n      rangeSvc.addCellRange(cellRangeParams);\n    });\n  }\n  processCell(cellValueChanges) {\n    const cellValueChange = cellValueChanges[0];\n    const {\n      rowIndex,\n      rowPinned\n    } = cellValueChange;\n    const rowPosition = {\n      rowIndex,\n      rowPinned\n    };\n    const row = _getRowNode(this.beans, rowPosition);\n    const lastFocusedCell = {\n      rowPinned: cellValueChange.rowPinned,\n      rowIndex: row.rowIndex,\n      columnId: cellValueChange.columnId\n    };\n    this.setLastFocusedCell(lastFocusedCell);\n  }\n  setLastFocusedCell(lastFocusedCell) {\n    const {\n      rowIndex,\n      columnId,\n      rowPinned\n    } = lastFocusedCell;\n    const {\n      colModel,\n      focusSvc,\n      rangeSvc\n    } = this.beans;\n    const column = colModel.getCol(columnId);\n    if (!column) {\n      return;\n    }\n    const {\n      scrollFeature\n    } = this.gridBodyCtrl;\n    scrollFeature.ensureIndexVisible(rowIndex);\n    scrollFeature.ensureColumnVisible(column);\n    const cellPosition = {\n      rowIndex,\n      column,\n      rowPinned\n    };\n    focusSvc.setFocusedCell({\n      ...cellPosition,\n      forceBrowserFocus: true\n    });\n    rangeSvc?.setRangeToCell(cellPosition);\n  }\n  addListeners() {\n    this.addManagedEventListeners({\n      rowEditingStarted: e => {\n        this.activeRowEdit = {\n          rowIndex: e.rowIndex,\n          rowPinned: e.rowPinned\n        };\n      },\n      rowEditingStopped: () => {\n        const action = new UndoRedoAction(this.cellValueChanges);\n        this.pushActionsToUndoStack(action);\n        this.activeRowEdit = null;\n      },\n      cellEditingStarted: e => {\n        this.activeCellEdit = {\n          column: e.column,\n          rowIndex: e.rowIndex,\n          rowPinned: e.rowPinned\n        };\n      },\n      cellEditingStopped: e => {\n        this.activeCellEdit = null;\n        const shouldPushAction = e.valueChanged && !this.activeRowEdit && !this.isPasting && !this.isRangeInAction;\n        if (shouldPushAction) {\n          const action = new UndoRedoAction(this.cellValueChanges);\n          this.pushActionsToUndoStack(action);\n        }\n      },\n      pasteStart: () => {\n        this.isPasting = true;\n      },\n      pasteEnd: () => {\n        const action = new UndoRedoAction(this.cellValueChanges);\n        this.pushActionsToUndoStack(action);\n        this.isPasting = false;\n      },\n      fillStart: () => {\n        this.isRangeInAction = true;\n      },\n      fillEnd: event => {\n        const action = new RangeUndoRedoAction(this.cellValueChanges, event.initialRange, event.finalRange);\n        this.pushActionsToUndoStack(action);\n        this.isRangeInAction = false;\n      },\n      keyShortcutChangedCellStart: () => {\n        this.isRangeInAction = true;\n      },\n      keyShortcutChangedCellEnd: () => {\n        let action;\n        const {\n          rangeSvc,\n          gos\n        } = this.beans;\n        if (rangeSvc && _isCellSelectionEnabled(gos)) {\n          action = new RangeUndoRedoAction(this.cellValueChanges, void 0, void 0, [...rangeSvc.getCellRanges()]);\n        } else {\n          action = new UndoRedoAction(this.cellValueChanges);\n        }\n        this.pushActionsToUndoStack(action);\n        this.isRangeInAction = false;\n      },\n      batchEditingStarted: () => this.startBigChange(\"batchEditing\"),\n      batchEditingStopped: ({\n        changes\n      }) => this.stopBigChange(\"batchEditing\", changes),\n      bulkEditingStarted: () => this.startBigChange(\"bulkEditing\"),\n      bulkEditingStopped: ({\n        changes\n      }) => this.stopBigChange(\"bulkEditing\", changes)\n    });\n  }\n  startBigChange(key) {\n    this[key] = true;\n  }\n  stopBigChange(key, changes) {\n    if (!this[key]) {\n      return;\n    }\n    this[key] = false;\n    if (changes?.length === 0) {\n      return;\n    }\n    const action = new UndoRedoAction(changes ?? []);\n    this.pushActionsToUndoStack(action);\n    this.cellValueChanges = [];\n  }\n  pushActionsToUndoStack(action) {\n    this.undoStack.push(action);\n    this.cellValueChanges = [];\n    this.redoStack.clear();\n  }\n};\n\n// packages/ag-grid-community/src/edit/cell-editing.css-GENERATED.ts\nvar cellEditingCSS = /*css*/\n`.ag-cell-inline-editing{border:var(--ag-cell-editing-border)!important;border-radius:var(--ag-border-radius);box-shadow:var(--ag-cell-editing-shadow);padding:0;z-index:1;.ag-cell-edit-wrapper,.ag-cell-editor,.ag-cell-wrapper,:where(.ag-cell-editor) .ag-input-field-input,:where(.ag-cell-editor) .ag-wrapper{height:100%;line-height:normal;min-height:100%;width:100%}&.ag-cell-editing-error{border-color:var(--ag-invalid-color)!important}}:where(.ag-popup-editor) .ag-large-text{background-color:var(--ag-background-color);border-radius:var(--ag-border-radius);box-shadow:var(--ag-dropdown-shadow);padding:0}.ag-large-text-input{height:auto;padding:var(--ag-cell-horizontal-padding)}:where(.ag-rtl .ag-large-text-input) textarea{resize:none}:where(.ag-ltr) .ag-checkbox-edit{padding-left:var(--ag-cell-horizontal-padding)}:where(.ag-rtl) .ag-checkbox-edit{padding-right:var(--ag-cell-horizontal-padding)}:where(.ag-row.ag-row-editing-invalid .ag-cell-inline-editing){opacity:.8}`;\n\n// packages/ag-grid-community/src/edit/cellEditors/checkboxCellEditor.ts\nvar CheckboxCellEditorElement = {\n  tag: \"div\",\n  cls: \"ag-cell-wrapper ag-cell-edit-wrapper ag-checkbox-edit\",\n  children: [{\n    tag: \"ag-checkbox\",\n    ref: \"eEditor\",\n    role: \"presentation\"\n  }]\n};\nvar CheckboxCellEditor = class extends AgAbstractCellEditor {\n  constructor() {\n    super(CheckboxCellEditorElement, [AgCheckboxSelector]);\n    this.eEditor = RefPlaceholder;\n  }\n  initialiseEditor(params) {\n    const isSelected = params.value ?? void 0;\n    const eEditor = this.eEditor;\n    eEditor.setValue(isSelected);\n    const inputEl = eEditor.getInputElement();\n    inputEl.setAttribute(\"tabindex\", \"-1\");\n    this.setAriaLabel(isSelected);\n    this.addManagedListeners(eEditor, {\n      fieldValueChanged: event => this.setAriaLabel(event.selected)\n    });\n  }\n  getValue() {\n    return this.eEditor.getValue();\n  }\n  focusIn() {\n    this.eEditor.getFocusableElement().focus();\n  }\n  afterGuiAttached() {\n    if (this.params.cellStartedEdit) {\n      this.focusIn();\n    }\n  }\n  isPopup() {\n    return false;\n  }\n  setAriaLabel(isSelected) {\n    const translate = this.getLocaleTextFunc();\n    const stateName = _getAriaCheckboxStateName(translate, isSelected);\n    const ariaLabel = translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\");\n    this.eEditor.setInputAriaLabel(`${ariaLabel} (${stateName})`);\n  }\n  getValidationElement(tooltip) {\n    return tooltip ? this.params.eGridCell : this.eEditor.getInputElement();\n  }\n  getValidationErrors() {\n    const {\n      params\n    } = this;\n    const {\n      getValidationErrors\n    } = params;\n    const value = this.getValue();\n    if (!getValidationErrors) {\n      return null;\n    }\n    return getValidationErrors({\n      value,\n      internalErrors: null,\n      cellEditorParams: params\n    });\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/simpleCellEditor.ts\nvar SimpleCellEditor = class extends AgAbstractCellEditor {\n  constructor(cellEditorInput) {\n    super();\n    this.cellEditorInput = cellEditorInput;\n    this.eEditor = RefPlaceholder;\n  }\n  initialiseEditor(params) {\n    const {\n      cellEditorInput\n    } = this;\n    this.setTemplate({\n      tag: \"div\",\n      cls: \"ag-cell-edit-wrapper\",\n      children: [cellEditorInput.getTemplate()]\n    }, cellEditorInput.getAgComponents());\n    const {\n      eEditor\n    } = this;\n    const {\n      cellStartedEdit,\n      eventKey,\n      suppressPreventDefault\n    } = params;\n    eEditor.getInputElement().setAttribute(\"title\", \"\");\n    cellEditorInput.init(eEditor, params);\n    let startValue;\n    let shouldSetStartValue = true;\n    if (cellStartedEdit) {\n      this.focusAfterAttached = true;\n      if (eventKey === KeyCode.BACKSPACE || eventKey === KeyCode.DELETE) {\n        startValue = \"\";\n      } else if (eventKey && eventKey.length === 1) {\n        if (suppressPreventDefault) {\n          shouldSetStartValue = false;\n        } else {\n          startValue = eventKey;\n        }\n      } else {\n        startValue = cellEditorInput.getStartValue();\n        if (eventKey !== KeyCode.F2) {\n          this.highlightAllOnFocus = true;\n        }\n      }\n    } else {\n      this.focusAfterAttached = false;\n      startValue = cellEditorInput.getStartValue();\n    }\n    if (shouldSetStartValue && startValue != null) {\n      eEditor.setStartValue(startValue);\n    }\n    this.addGuiEventListener(\"keydown\", event => {\n      const {\n        key\n      } = event;\n      if (key === KeyCode.PAGE_UP || key === KeyCode.PAGE_DOWN) {\n        event.preventDefault();\n      }\n    });\n  }\n  afterGuiAttached() {\n    const translate = this.getLocaleTextFunc();\n    const eInput = this.eEditor;\n    eInput.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\n    if (!this.focusAfterAttached) {\n      return;\n    }\n    if (!_isBrowserSafari()) {\n      eInput.getFocusableElement().focus();\n    }\n    const inputEl = eInput.getInputElement();\n    if (this.highlightAllOnFocus) {\n      inputEl.select();\n    } else {\n      this.cellEditorInput.setCaret?.();\n    }\n  }\n  // gets called when tabbing through cells and in full row edit mode\n  focusIn() {\n    const {\n      eEditor\n    } = this;\n    const focusEl = eEditor.getFocusableElement();\n    const inputEl = eEditor.getInputElement();\n    focusEl.focus();\n    inputEl.select();\n  }\n  getValue() {\n    return this.cellEditorInput.getValue();\n  }\n  isPopup() {\n    return false;\n  }\n  getValidationElement() {\n    return this.eEditor.getInputElement();\n  }\n  getValidationErrors() {\n    return this.cellEditorInput.getValidationErrors();\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/dateCellEditor.ts\nvar DateCellElement = {\n  tag: \"ag-input-date-field\",\n  ref: \"eEditor\",\n  cls: \"ag-cell-editor\"\n};\nvar DateCellEditorInput = class {\n  constructor(getDataTypeService, getLocaleTextFunc) {\n    this.getDataTypeService = getDataTypeService;\n    this.getLocaleTextFunc = getLocaleTextFunc;\n  }\n  getTemplate() {\n    return DateCellElement;\n  }\n  getAgComponents() {\n    return [AgInputDateFieldSelector];\n  }\n  init(eEditor, params) {\n    this.eEditor = eEditor;\n    this.params = params;\n    const {\n      min,\n      max,\n      step,\n      colDef\n    } = params;\n    if (min != null) {\n      eEditor.setMin(min);\n    }\n    if (max != null) {\n      eEditor.setMax(max);\n    }\n    if (step != null) {\n      eEditor.setStep(step);\n    }\n    this.includeTime = params.includeTime ?? this.getDataTypeService()?.getDateIncludesTimeFlag?.(colDef.cellDataType);\n    if (this.includeTime != null) {\n      eEditor.setIncludeTime(this.includeTime);\n    }\n  }\n  getValidationErrors() {\n    const eInput = this.eEditor.getInputElement();\n    const value = eInput.valueAsDate;\n    const {\n      params\n    } = this;\n    const {\n      min,\n      max,\n      getValidationErrors\n    } = params;\n    let internalErrors = [];\n    const translate = this.getLocaleTextFunc();\n    if (value instanceof Date && !isNaN(value.getTime())) {\n      if (min) {\n        const minValue = min instanceof Date ? min : new Date(min);\n        if (value < minValue) {\n          const minDateString = minValue.toLocaleDateString();\n          internalErrors.push(translate(\"minDateValidation\", `Date must be after ${minDateString}`, [minDateString]));\n        }\n      }\n      if (max) {\n        const maxValue = max instanceof Date ? max : new Date(max);\n        if (value > maxValue) {\n          const maxDateString = maxValue.toLocaleDateString();\n          internalErrors.push(translate(\"maxDateValidation\", `Date must be before ${maxDateString}`, [maxDateString]));\n        }\n      }\n    }\n    if (!internalErrors.length) {\n      internalErrors = null;\n    }\n    if (getValidationErrors) {\n      return getValidationErrors({\n        value,\n        cellEditorParams: params,\n        internalErrors\n      });\n    }\n    return internalErrors;\n  }\n  getValue() {\n    const {\n      eEditor,\n      params\n    } = this;\n    const value = eEditor.getDate();\n    if (!_exists(value) && !_exists(params.value)) {\n      return params.value;\n    }\n    return value ?? null;\n  }\n  getStartValue() {\n    const {\n      value\n    } = this.params;\n    if (!(value instanceof Date)) {\n      return void 0;\n    }\n    return _serialiseDate(value, this.includeTime ?? false);\n  }\n};\nvar DateCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new DateCellEditorInput(() => this.beans.dataTypeSvc, () => this.getLocaleTextFunc()));\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/dateStringCellEditor.ts\nvar DateStringCellElement = {\n  tag: \"ag-input-date-field\",\n  ref: \"eEditor\",\n  cls: \"ag-cell-editor\"\n};\nvar DateStringCellEditorInput = class {\n  constructor(getDataTypeService, getLocaleTextFunc) {\n    this.getDataTypeService = getDataTypeService;\n    this.getLocaleTextFunc = getLocaleTextFunc;\n  }\n  getTemplate() {\n    return DateStringCellElement;\n  }\n  getAgComponents() {\n    return [AgInputDateFieldSelector];\n  }\n  init(eEditor, params) {\n    this.eEditor = eEditor;\n    this.params = params;\n    const {\n      min,\n      max,\n      step,\n      colDef\n    } = params;\n    if (min != null) {\n      eEditor.setMin(min);\n    }\n    if (max != null) {\n      eEditor.setMax(max);\n    }\n    if (step != null) {\n      eEditor.setStep(step);\n    }\n    this.includeTime = params.includeTime ?? this.getDataTypeService()?.getDateIncludesTimeFlag?.(colDef.cellDataType);\n    if (this.includeTime != null) {\n      eEditor.setIncludeTime(this.includeTime);\n    }\n  }\n  getValidationErrors() {\n    const {\n      eEditor,\n      params\n    } = this;\n    const raw = eEditor.getInputElement().value;\n    const value = this.formatDate(this.parseDate(raw ?? void 0));\n    const {\n      min,\n      max,\n      getValidationErrors\n    } = params;\n    let internalErrors = [];\n    if (value) {\n      const date = new Date(value);\n      const translate = this.getLocaleTextFunc();\n      if (min) {\n        const minDate = new Date(min);\n        if (date < minDate) {\n          const minDateString = minDate.toLocaleDateString();\n          internalErrors.push(translate(\"minDateValidation\", `Date must be after ${minDateString}`, [minDateString]));\n        }\n      }\n      if (max) {\n        const maxDate = new Date(max);\n        if (date > maxDate) {\n          const maxDateString = maxDate.toLocaleDateString();\n          internalErrors.push(translate(\"maxDateValidation\", `Date must be before ${maxDateString}`, [maxDateString]));\n        }\n      }\n    }\n    if (!internalErrors.length) {\n      internalErrors = null;\n    }\n    if (getValidationErrors) {\n      return getValidationErrors({\n        value: this.getValue(),\n        cellEditorParams: params,\n        internalErrors\n      });\n    }\n    return internalErrors;\n  }\n  getValue() {\n    const {\n      params,\n      eEditor\n    } = this;\n    const value = this.formatDate(eEditor.getDate());\n    if (!_exists(value) && !_exists(params.value)) {\n      return params.value;\n    }\n    return params.parseValue(value ?? \"\");\n  }\n  getStartValue() {\n    return _serialiseDate(this.parseDate(this.params.value ?? void 0) ?? null, this.includeTime ?? false);\n  }\n  parseDate(value) {\n    const dataTypeSvc = this.getDataTypeService();\n    return dataTypeSvc ? dataTypeSvc.getDateParserFunction(this.params.column)(value) : _parseDateTimeFromString(value) ?? void 0;\n  }\n  formatDate(value) {\n    const dataTypeSvc = this.getDataTypeService();\n    return dataTypeSvc ? dataTypeSvc.getDateFormatterFunction(this.params.column)(value) : _serialiseDate(value ?? null, this.includeTime ?? false) ?? void 0;\n  }\n};\nvar DateStringCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new DateStringCellEditorInput(() => this.beans.dataTypeSvc, () => this.getLocaleTextFunc()));\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/largeTextCellEditor.ts\nvar LargeTextCellElement = {\n  tag: \"div\",\n  cls: \"ag-large-text\",\n  children: [{\n    tag: \"ag-input-text-area\",\n    ref: \"eEditor\",\n    cls: \"ag-large-text-input\"\n  }]\n};\nvar LargeTextCellEditor = class extends AgAbstractCellEditor {\n  constructor() {\n    super(LargeTextCellElement, [AgInputTextAreaSelector]);\n    this.eEditor = RefPlaceholder;\n  }\n  initialiseEditor(params) {\n    const {\n      eEditor\n    } = this;\n    const {\n      cellStartedEdit,\n      eventKey,\n      value,\n      maxLength,\n      cols,\n      rows\n    } = params;\n    this.focusAfterAttached = cellStartedEdit;\n    eEditor.getInputElement().setAttribute(\"title\", \"\");\n    eEditor.setMaxLength(maxLength || 200).setCols(cols || 60).setRows(rows || 10);\n    let startValue;\n    if (cellStartedEdit) {\n      this.focusAfterAttached = true;\n      if (eventKey === KeyCode.BACKSPACE || eventKey === KeyCode.DELETE) {\n        startValue = \"\";\n      } else if (eventKey && eventKey.length === 1) {\n        startValue = eventKey;\n      } else {\n        startValue = value.toString();\n        if (eventKey !== KeyCode.F2) {\n          this.highlightAllOnFocus = true;\n        }\n      }\n    } else {\n      this.focusAfterAttached = false;\n      startValue = value.toString();\n    }\n    if (startValue != null) {\n      eEditor.setValue(startValue, true);\n    }\n    this.addGuiEventListener(\"keydown\", this.onKeyDown.bind(this));\n    this.activateTabIndex();\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    if (key === KeyCode.LEFT || key === KeyCode.UP || key === KeyCode.RIGHT || key === KeyCode.DOWN || event.shiftKey && key === KeyCode.ENTER) {\n      event.stopPropagation();\n    }\n  }\n  afterGuiAttached() {\n    const {\n      eEditor,\n      focusAfterAttached,\n      highlightAllOnFocus\n    } = this;\n    const translate = this.getLocaleTextFunc();\n    eEditor.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\n    if (focusAfterAttached) {\n      eEditor.getFocusableElement().focus();\n      if (highlightAllOnFocus) {\n        eEditor.getInputElement().select();\n      }\n    }\n  }\n  getValue() {\n    const {\n      eEditor,\n      params\n    } = this;\n    const {\n      value\n    } = params;\n    const editorValue = eEditor.getValue();\n    if (!_exists(editorValue) && !_exists(value)) {\n      return value;\n    }\n    return params.parseValue(editorValue);\n  }\n  getValidationElement() {\n    return this.eEditor.getInputElement();\n  }\n  getValidationErrors() {\n    const {\n      params\n    } = this;\n    const {\n      maxLength,\n      getValidationErrors\n    } = params;\n    const translate = this.getLocaleTextFunc();\n    const value = this.getValue();\n    let internalErrors = [];\n    if (typeof value === \"string\" && maxLength != null && value.length > maxLength) {\n      internalErrors.push(translate(\"maxLengthValidation\", `Must be ${maxLength} characters or fewer.`, [String(maxLength)]));\n    }\n    if (!internalErrors.length) {\n      internalErrors = null;\n    }\n    if (getValidationErrors) {\n      return getValidationErrors({\n        value,\n        internalErrors,\n        cellEditorParams: params\n      });\n    }\n    return internalErrors;\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/numberCellEditor.ts\nvar NumberCellElement = {\n  tag: \"ag-input-number-field\",\n  ref: \"eEditor\",\n  cls: \"ag-cell-editor\"\n};\nvar NumberCellEditorInput = class {\n  constructor(getLocaleTextFunc) {\n    this.getLocaleTextFunc = getLocaleTextFunc;\n  }\n  getTemplate() {\n    return NumberCellElement;\n  }\n  getAgComponents() {\n    return [AgInputNumberFieldSelector];\n  }\n  init(eEditor, params) {\n    this.eEditor = eEditor;\n    this.params = params;\n    const {\n      max,\n      min,\n      precision,\n      step\n    } = params;\n    if (max != null) {\n      eEditor.setMax(max);\n    }\n    if (min != null) {\n      eEditor.setMin(min);\n    }\n    if (precision != null) {\n      eEditor.setPrecision(precision);\n    }\n    if (step != null) {\n      eEditor.setStep(step);\n    }\n    const editorEl = eEditor.getInputElement();\n    if (params.preventStepping) {\n      eEditor.addManagedElementListeners(editorEl, {\n        keydown: this.preventStepping\n      });\n    } else if (params.showStepperButtons) {\n      editorEl.classList.add(\"ag-number-field-input-stepper\");\n    }\n  }\n  getValidationErrors() {\n    const {\n      params\n    } = this;\n    const {\n      min,\n      max,\n      getValidationErrors\n    } = params;\n    const eInput = this.eEditor.getInputElement();\n    const value = eInput.valueAsNumber;\n    const translate = this.getLocaleTextFunc();\n    let internalErrors = [];\n    if (typeof value === \"number\") {\n      if (min != null && value < min) {\n        internalErrors.push(translate(\"minValueValidation\", `Must be greater than or equal to ${min}.`, [String(min)]));\n      }\n      if (max != null && value > max) {\n        internalErrors.push(translate(\"maxValueValidation\", `Must be less than or equal to ${max}.`, [String(max)]));\n      }\n    }\n    if (!internalErrors.length) {\n      internalErrors = null;\n    }\n    if (getValidationErrors) {\n      return getValidationErrors({\n        value,\n        cellEditorParams: params,\n        internalErrors\n      });\n    }\n    return internalErrors;\n  }\n  preventStepping(e) {\n    if (e.key === KeyCode.UP || e.key === KeyCode.DOWN) {\n      e.preventDefault();\n    }\n  }\n  getValue() {\n    const {\n      eEditor,\n      params\n    } = this;\n    const value = eEditor.getValue();\n    if (!_exists(value) && !_exists(params.value)) {\n      return params.value;\n    }\n    let parsedValue = params.parseValue(value);\n    if (parsedValue == null) {\n      return parsedValue;\n    }\n    if (typeof parsedValue === \"string\") {\n      if (parsedValue === \"\") {\n        return null;\n      }\n      parsedValue = Number(parsedValue);\n    }\n    return isNaN(parsedValue) ? null : parsedValue;\n  }\n  getStartValue() {\n    return this.params.value;\n  }\n  setCaret() {\n    if (_isBrowserSafari()) {\n      this.eEditor.getInputElement().focus({\n        preventScroll: true\n      });\n    }\n  }\n};\nvar NumberCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new NumberCellEditorInput(() => this.getLocaleTextFunc()));\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/selectCellEditor.ts\nvar SelectCellElement = {\n  tag: \"div\",\n  cls: \"ag-cell-edit-wrapper\",\n  children: [{\n    tag: \"ag-select\",\n    ref: \"eEditor\",\n    cls: \"ag-cell-editor\"\n  }]\n};\nvar SelectCellEditor = class extends AgAbstractCellEditor {\n  constructor() {\n    super(SelectCellElement, [AgSelectSelector]);\n    this.eEditor = RefPlaceholder;\n    this.startedByEnter = false;\n  }\n  wireBeans(beans) {\n    this.valueSvc = beans.valueSvc;\n  }\n  initialiseEditor(params) {\n    this.focusAfterAttached = params.cellStartedEdit;\n    const {\n      eEditor,\n      valueSvc,\n      gos\n    } = this;\n    const {\n      values,\n      value,\n      eventKey\n    } = params;\n    if (_missing(values)) {\n      _warn(58);\n      return;\n    }\n    this.startedByEnter = eventKey != null ? eventKey === KeyCode.ENTER : false;\n    let hasValue = false;\n    values.forEach(currentValue => {\n      const option = {\n        value: currentValue\n      };\n      const valueFormatted = valueSvc.formatValue(params.column, null, currentValue);\n      const valueFormattedExits = valueFormatted !== null && valueFormatted !== void 0;\n      option.text = valueFormattedExits ? valueFormatted : currentValue;\n      eEditor.addOption(option);\n      hasValue = hasValue || value === currentValue;\n    });\n    if (hasValue) {\n      eEditor.setValue(params.value, true);\n    } else if (params.values.length) {\n      eEditor.setValue(params.values[0], true);\n    }\n    const {\n      valueListGap,\n      valueListMaxWidth,\n      valueListMaxHeight\n    } = params;\n    if (valueListGap != null) {\n      eEditor.setPickerGap(valueListGap);\n    }\n    if (valueListMaxHeight != null) {\n      eEditor.setPickerMaxHeight(valueListMaxHeight);\n    }\n    if (valueListMaxWidth != null) {\n      eEditor.setPickerMaxWidth(valueListMaxWidth);\n    }\n    if (gos.get(\"editType\") !== \"fullRow\") {\n      this.addManagedListeners(this.eEditor, {\n        selectedItem: () => params.stopEditing()\n      });\n    }\n  }\n  afterGuiAttached() {\n    if (this.focusAfterAttached) {\n      this.eEditor.getFocusableElement().focus();\n    }\n    if (this.startedByEnter) {\n      setTimeout(() => {\n        if (this.isAlive()) {\n          this.eEditor.showPicker();\n        }\n      });\n    }\n  }\n  focusIn() {\n    this.eEditor.getFocusableElement().focus();\n  }\n  getValue() {\n    return this.eEditor.getValue();\n  }\n  isPopup() {\n    return false;\n  }\n  getValidationElement() {\n    return this.eEditor.getAriaElement();\n  }\n  getValidationErrors() {\n    const {\n      params\n    } = this;\n    const {\n      values,\n      getValidationErrors\n    } = params;\n    const value = this.getValue();\n    let internalErrors = [];\n    if (values && !values.includes(value)) {\n      const translate = this.getLocaleTextFunc();\n      internalErrors.push(translate(\"invalidSelectionValidation\", \"Invalid selection.\"));\n    } else {\n      internalErrors = null;\n    }\n    if (getValidationErrors) {\n      return getValidationErrors({\n        value,\n        internalErrors,\n        cellEditorParams: params\n      });\n    }\n    return internalErrors;\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/textCellEditor.ts\nvar TextCellEditorElement = {\n  tag: \"ag-input-text-field\",\n  ref: \"eEditor\",\n  cls: \"ag-cell-editor\"\n};\nvar TextCellEditorInput = class {\n  constructor(getLocaleTextFunc) {\n    this.getLocaleTextFunc = getLocaleTextFunc;\n  }\n  getTemplate() {\n    return TextCellEditorElement;\n  }\n  getAgComponents() {\n    return [AgInputTextFieldSelector];\n  }\n  init(eEditor, params) {\n    this.eEditor = eEditor;\n    this.params = params;\n    const maxLength = params.maxLength;\n    if (maxLength != null) {\n      eEditor.setMaxLength(maxLength);\n    }\n  }\n  getValidationErrors() {\n    const {\n      params\n    } = this;\n    const {\n      maxLength,\n      getValidationErrors\n    } = params;\n    const value = this.getValue();\n    const translate = this.getLocaleTextFunc();\n    let internalErrors = [];\n    if (maxLength != null && typeof value === \"string\" && value.length > maxLength) {\n      internalErrors.push(translate(\"maxLengthValidation\", `Must be ${maxLength} characters or fewer.`, [String(maxLength)]));\n    }\n    if (!internalErrors.length) {\n      internalErrors = null;\n    }\n    if (getValidationErrors) {\n      return getValidationErrors({\n        value,\n        cellEditorParams: params,\n        internalErrors\n      });\n    }\n    return internalErrors;\n  }\n  getValue() {\n    const {\n      eEditor,\n      params\n    } = this;\n    const value = eEditor.getValue();\n    if (!_exists(value) && !_exists(params.value)) {\n      return params.value;\n    }\n    return params.parseValue(value);\n  }\n  getStartValue() {\n    const params = this.params;\n    const formatValue = params.useFormatter || params.column.getColDef().refData;\n    return formatValue ? params.formatValue(params.value) : params.value;\n  }\n  setCaret() {\n    const eInput = this.eEditor;\n    const value = eInput.getValue();\n    const len = _exists(value) && value.length || 0;\n    if (len) {\n      eInput.getInputElement().setSelectionRange(len, len);\n    }\n  }\n};\nvar TextCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new TextCellEditorInput(() => this.getLocaleTextFunc()));\n  }\n};\n\n// packages/ag-grid-community/src/api/scrollApi.ts\nfunction getVerticalPixelRange(beans) {\n  return beans.ctrlsSvc.getScrollFeature().getVScrollPosition();\n}\nfunction getHorizontalPixelRange(beans) {\n  return beans.ctrlsSvc.getScrollFeature().getHScrollPosition();\n}\nfunction ensureColumnVisible(beans, key, position = \"auto\") {\n  beans.frameworkOverrides.wrapIncoming(() => beans.ctrlsSvc.getScrollFeature().ensureColumnVisible(key, position), \"ensureVisible\");\n}\nfunction ensureIndexVisible(beans, index, position) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.ctrlsSvc.getScrollFeature().ensureIndexVisible(index, position), \"ensureVisible\");\n}\nfunction ensureNodeVisible(beans, nodeSelector, position = null) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.ctrlsSvc.getScrollFeature().ensureNodeVisible(nodeSelector, position), \"ensureVisible\");\n}\n\n// packages/ag-grid-community/src/edit/editApi.ts\nfunction undoCellEditing(beans) {\n  beans.undoRedo?.undo(\"api\");\n}\nfunction redoCellEditing(beans) {\n  beans.undoRedo?.redo(\"api\");\n}\nfunction getEditingCells(beans) {\n  const edits = beans.editModelSvc?.getEditMap();\n  const positions = [];\n  edits?.forEach((editRow, rowNode) => {\n    const {\n      rowIndex,\n      rowPinned\n    } = rowNode;\n    editRow.forEach((editValue, column) => {\n      const {\n        editorValue,\n        pendingValue,\n        sourceValue: oldValue,\n        state\n      } = editValue;\n      const diff = _sourceAndPendingDiffer(editValue);\n      let newValue = editorValue ?? pendingValue;\n      if (newValue === UNEDITED) {\n        newValue = void 0;\n      }\n      const edit = {\n        newValue,\n        oldValue,\n        state,\n        column,\n        colId: column.getColId(),\n        colKey: column.getColId(),\n        rowIndex,\n        rowPinned\n      };\n      const changed = state === \"changed\" && diff;\n      const editing = state === \"editing\";\n      if (editing || changed) {\n        positions.push(edit);\n      }\n    });\n  });\n  return positions;\n}\nfunction stopEditing(beans, cancel = false) {\n  const {\n    editSvc\n  } = beans;\n  if (editSvc?.isBatchEditing()) {\n    if (cancel) {\n      beans.editModelSvc?.getEditPositions().forEach(cellPosition => {\n        if (cellPosition.state === \"editing\") {\n          editSvc.revertSingleCellEdit(cellPosition);\n        }\n      });\n    } else {\n      _syncFromEditors(beans, true);\n    }\n    _destroyEditors(beans);\n  } else {\n    editSvc?.stopEditing(void 0, {\n      cancel,\n      source: \"api\"\n    });\n  }\n}\nfunction isEditing(beans, cellPosition) {\n  const cellCtrl = _getCellCtrl(beans, cellPosition);\n  return beans.editSvc?.isEditing(cellCtrl) ?? false;\n}\nfunction startEditingCell(beans, params) {\n  const {\n    key,\n    colKey,\n    rowIndex,\n    rowPinned\n  } = params;\n  const {\n    editSvc,\n    colModel\n  } = beans;\n  const column = colModel.getCol(colKey);\n  if (!column) {\n    _warn(12, {\n      colKey\n    });\n    return;\n  }\n  const cellPosition = {\n    rowIndex,\n    rowPinned: rowPinned || null,\n    column\n  };\n  const rowNode = _getRowNode(beans, cellPosition);\n  if (!rowNode) {\n    _warn(290, {\n      rowIndex,\n      rowPinned\n    });\n    return;\n  }\n  if (!column.isCellEditable(rowNode)) {\n    return;\n  }\n  const notPinned = rowPinned == null;\n  if (notPinned) {\n    ensureIndexVisible(beans, rowIndex);\n  }\n  ensureColumnVisible(beans, colKey);\n  editSvc?.startEditing({\n    rowNode,\n    column\n  }, {\n    event: key ? new KeyboardEvent(\"keydown\", {\n      key\n    }) : void 0,\n    source: \"api\"\n  });\n}\nfunction validateEdit(beans) {\n  return beans.editSvc?.validateEdit() || null;\n}\nfunction getCurrentUndoSize(beans) {\n  return beans.undoRedo?.getCurrentUndoStackSize() ?? 0;\n}\nfunction getCurrentRedoSize(beans) {\n  return beans.undoRedo?.getCurrentRedoStackSize() ?? 0;\n}\n\n// packages/ag-grid-community/src/edit/cellEditors/popupEditorWrapper.ts\nvar PopupEditorElement = {\n  tag: \"div\",\n  cls: \"ag-popup-editor\",\n  attrs: {\n    tabindex: \"-1\"\n  }\n};\nvar PopupEditorWrapper = class extends PopupComponent {\n  constructor(params) {\n    super(PopupEditorElement);\n    this.params = params;\n  }\n  postConstruct() {\n    _setDomData(this.gos, this.getGui(), \"popupEditorWrapper\", true);\n    this.addKeyDownListener();\n  }\n  addKeyDownListener() {\n    const eGui = this.getGui();\n    const params = this.params;\n    const listener = event => {\n      if (!_isUserSuppressingKeyboardEvent(this.gos, event, params.node, params.column, true)) {\n        params.onKeyDown(event);\n      }\n    };\n    this.addManagedElementListeners(eGui, {\n      keydown: listener\n    });\n  }\n};\n\n// packages/ag-grid-community/src/edit/styles/style-utils.ts\nvar editHighlightFn = (edit, includeEditing = false) => {\n  if (edit !== void 0) {\n    return _sourceAndPendingDiffer(edit) || includeEditing && edit.state === \"editing\";\n  }\n};\nfunction _hasEdits(beans, position, includeEditing = false) {\n  return editHighlightFn(beans.editModelSvc?.getEdit(position), includeEditing);\n}\nfunction _hasLeafEdits(beans, position) {\n  const {\n    editModelSvc\n  } = beans;\n  const {\n    column,\n    rowNode\n  } = position;\n  if (beans.gos.get(\"groupTotalRow\") && !rowNode?.footer) {\n    return false;\n  }\n  for (const node of rowNode?.allLeafChildren ?? []) {\n    const highlight = editHighlightFn(editModelSvc?.getEdit({\n      rowNode: node,\n      column\n    })) || editHighlightFn(editModelSvc?.getEdit({\n      rowNode: node.pinnedSibling,\n      column\n    }));\n    if (highlight) {\n      return true;\n    }\n  }\n}\nfunction _hasPinnedEdits(beans, {\n  rowNode,\n  column\n}) {\n  rowNode = rowNode.pinnedSibling;\n  if (!rowNode) {\n    return;\n  }\n  return editHighlightFn(beans.editModelSvc?.getEdit({\n    rowNode,\n    column\n  }));\n}\n\n// packages/ag-grid-community/src/edit/styles/cellEditStyleFeature.ts\nvar CellEditStyleFeature = class extends BeanStub {\n  constructor(cellCtrl, beans) {\n    super();\n    this.cellCtrl = cellCtrl;\n    this.beans = beans;\n    this.editSvc = beans.editSvc;\n    this.editModelSvc = beans.editModelSvc;\n  }\n  setComp(comp) {\n    this.cellComp = comp;\n    this.applyCellStyles();\n  }\n  applyCellStyles() {\n    const {\n      cellCtrl,\n      editSvc,\n      beans\n    } = this;\n    if (editSvc?.isBatchEditing() && editSvc.isEditing()) {\n      const state = _hasEdits(beans, cellCtrl) || _hasLeafEdits(beans, cellCtrl) || _hasPinnedEdits(beans, cellCtrl);\n      this.applyBatchingStyle(state);\n    } else {\n      this.applyBatchingStyle(false);\n    }\n    const hasErrors = !!this.editModelSvc?.getCellValidationModel().hasCellValidation(this.cellCtrl);\n    this.cellComp.toggleCss(\"ag-cell-editing-error\", hasErrors);\n  }\n  applyBatchingStyle(newState) {\n    this.cellComp.toggleCss(\"ag-cell-editing\", newState ?? false);\n    this.cellComp.toggleCss(\"ag-cell-batch-edit\", (newState && this.editSvc?.isBatchEditing()) ?? false);\n  }\n};\n\n// packages/ag-grid-community/src/edit/styles/rowEditStyleFeature.ts\nvar RowEditStyleFeature = class extends BeanStub {\n  constructor(rowCtrl, beans) {\n    super();\n    this.rowCtrl = rowCtrl;\n    this.beans = beans;\n    this.gos = beans.gos;\n    this.editSvc = beans.editSvc;\n    this.editModelSvc = beans.editModelSvc;\n  }\n  applyRowStyles() {\n    const {\n      rowCtrl,\n      editModelSvc,\n      beans\n    } = this;\n    let rowNode = rowCtrl.rowNode;\n    let edits = editModelSvc?.getEditRow(rowNode);\n    const hasErrors = this.editModelSvc?.getRowValidationModel().hasRowValidation({\n      rowNode\n    });\n    if (!edits && rowNode.pinnedSibling) {\n      rowNode = rowNode.pinnedSibling;\n      edits = editModelSvc?.getEditRow(rowNode);\n    }\n    if (edits) {\n      const editing = Array.from(edits.keys()).some(column => {\n        const position = {\n          rowNode,\n          column\n        };\n        return _hasEdits(beans, position, true) || _hasLeafEdits(beans, position) || _hasPinnedEdits(beans, position);\n      });\n      this.applyStyle(hasErrors, editing);\n      return;\n    }\n    this.applyStyle(hasErrors);\n  }\n  applyStyle(hasErrors = false, editing = false) {\n    const batchEdit = this.editSvc?.isBatchEditing() ?? false;\n    const fullRow = this.gos.get(\"editType\") === \"fullRow\";\n    this.rowCtrl?.forEachGui(void 0, ({\n      rowComp\n    }) => {\n      rowComp.toggleCss(\"ag-row-editing\", fullRow && editing);\n      rowComp.toggleCss(\"ag-row-batch-edit\", fullRow && editing && batchEdit);\n      rowComp.toggleCss(\"ag-row-inline-editing\", editing);\n      rowComp.toggleCss(\"ag-row-not-inline-editing\", !editing);\n      rowComp.toggleCss(\"ag-row-editing-invalid\", fullRow && editing && hasErrors);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/edit/utils/refresh.ts\nvar purgeRows = ({\n  rowModel,\n  pinnedRowModel,\n  editModelSvc\n}, rowNodes) => {\n  const found = /* @__PURE__ */new Set();\n  rowModel.forEachNode(node => rowNodes.has(node) && found.add(node));\n  pinnedRowModel?.forEachPinnedRow(\"top\", node => rowNodes.has(node) && found.add(node));\n  pinnedRowModel?.forEachPinnedRow(\"bottom\", node => rowNodes.has(node) && found.add(node));\n  rowNodes.forEach(rowNode => {\n    if (!found.has(rowNode)) {\n      editModelSvc.removeEdits({\n        rowNode\n      });\n    }\n  });\n  return found;\n};\nvar purgeCells = ({\n  editModelSvc\n}, rowNodes, columns) => {\n  rowNodes.forEach(rowNode => editModelSvc?.getEditRow(rowNode)?.forEach((_, column) => !columns.has(column) && editModelSvc.removeEdits({\n    rowNode,\n    column\n  })));\n};\nvar _refreshEditCells = beans => () => {\n  const columns = new Set(beans.colModel.getCols());\n  const updates = beans.editModelSvc.getEditMap(true);\n  const rowNodes = new Set(updates.keys());\n  purgeCells(beans, purgeRows(beans, rowNodes), columns);\n};\n\n// packages/ag-grid-community/src/edit/editService.ts\nvar KEEP_EDITOR_SOURCES = /* @__PURE__ */new Set([\"undo\", \"redo\"]);\nvar STOP_EDIT_SOURCE_TRANSFORM = {\n  paste: \"ui\",\n  rangeSvc: \"ui\",\n  fillHandle: \"api\",\n  cellClear: \"api\"\n};\nvar STOP_EDIT_SOURCE_TRANSFORM_KEYS = new Set(Object.keys(STOP_EDIT_SOURCE_TRANSFORM));\nvar SET_DATA_SOURCE_AS_API = /* @__PURE__ */new Set([\"paste\", \"rangeSvc\", \"renderer\", \"cellClear\", \"redo\", \"undo\"]);\nvar CANCEL_PARAMS = {\n  cancel: true,\n  source: \"api\"\n};\nvar COMMIT_PARAMS = {\n  cancel: false,\n  source: \"api\"\n};\nvar CHECK_SIBLING = {\n  checkSiblings: true\n};\nvar FORCE_REFRESH = {\n  force: true,\n  suppressFlash: true\n};\nvar EditService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"editSvc\";\n    this.batch = false;\n  }\n  postConstruct() {\n    const {\n      beans\n    } = this;\n    this.model = beans.editModelSvc;\n    this.valueSvc = beans.valueSvc;\n    this.rangeSvc = beans.rangeSvc;\n    this.addManagedPropertyListener(\"editType\", ({\n      currentValue\n    }) => {\n      this.stopEditing(void 0, CANCEL_PARAMS);\n      this.createStrategy(currentValue);\n    });\n    const handler = _refreshEditCells(beans);\n    const stopInvalidEdits = () => {\n      const hasCellValidation = this.model.getCellValidationModel().getCellValidationMap().size > 0;\n      const hasRowValidation = this.model.getRowValidationModel().getRowValidationMap().size > 0;\n      if (hasCellValidation || hasRowValidation) {\n        this.stopEditing(void 0, CANCEL_PARAMS);\n      } else {\n        if (this.isEditing()) {\n          if (this.isBatchEditing()) {\n            _destroyEditors(beans, this.model.getEditPositions());\n          } else {\n            this.stopEditing(void 0, COMMIT_PARAMS);\n          }\n        }\n      }\n      return false;\n    };\n    this.addManagedEventListeners({\n      columnPinned: handler,\n      columnVisible: handler,\n      columnRowGroupChanged: handler,\n      rowGroupOpened: handler,\n      pinnedRowsChanged: handler,\n      displayedRowsChanged: handler,\n      sortChanged: stopInvalidEdits,\n      filterChanged: stopInvalidEdits,\n      cellFocused: this.onCellFocused.bind(this)\n    });\n  }\n  isBatchEditing() {\n    return this.batch;\n  }\n  setBatchEditing(enabled) {\n    if (enabled) {\n      this.batch = true;\n      this.stopEditing(void 0, CANCEL_PARAMS);\n    } else {\n      this.stopEditing(void 0, CANCEL_PARAMS);\n      this.batch = false;\n    }\n  }\n  createStrategy(editType) {\n    const {\n      beans,\n      gos,\n      strategy\n    } = this;\n    const name = editType ?? gos.get(\"editType\") ?? \"singleCell\";\n    if (strategy) {\n      if (strategy.beanName === name) {\n        return strategy;\n      }\n      this.destroyStrategy();\n    }\n    return this.strategy = this.createOptionalManagedBean(beans.registry.createDynamicBean(name, true));\n  }\n  destroyStrategy() {\n    if (!this.strategy) {\n      return;\n    }\n    this.strategy.destroy();\n    this.strategy = this.destroyBean(this.strategy);\n  }\n  shouldStartEditing(position, event, cellStartedEdit, source = \"ui\") {\n    this.strategy ?? (this.strategy = this.createStrategy());\n    return this.strategy?.shouldStart(position, event, cellStartedEdit, source) ?? null;\n  }\n  shouldStopEditing(position, event, source = \"ui\") {\n    return this.strategy?.shouldStop(position, event, source) ?? null;\n  }\n  shouldCancelEditing(position, event, source = \"ui\") {\n    return this.strategy?.shouldCancel(position, event, source) ?? null;\n  }\n  validateEdit() {\n    return _validateEdit(this.beans);\n  }\n  isEditing(position, params) {\n    return this.model.hasEdits(position, params ?? CHECK_SIBLING);\n  }\n  isRowEditing(rowNode, params) {\n    return (rowNode && this.model.hasRowEdits(rowNode, params)) ?? false;\n  }\n  /** @returns whether to prevent default on event */\n  startEditing(position, params) {\n    const {\n      startedEdit = true,\n      event = null,\n      source = \"ui\",\n      ignoreEventKey = false\n    } = params;\n    this.strategy ?? (this.strategy = this.createStrategy());\n    if (!this.isCellEditable(position, \"api\")) {\n      return;\n    }\n    const cellCtrl = _getCellCtrl(this.beans, position);\n    if (cellCtrl && !cellCtrl.comp) {\n      cellCtrl.onCompAttachedFuncs.push(() => this.startEditing(position, params));\n      return;\n    }\n    const res = this.shouldStartEditing?.(position, event, startedEdit, source);\n    if (res === false && source !== \"api\") {\n      this.isEditing(position) && this.stopEditing();\n      return;\n    }\n    if (!this.batch && this.shouldStopEditing(position, void 0, source)) {\n      this.stopEditing(void 0, {\n        source\n      });\n    }\n    if (res && this.isBatchEditing()) {\n      this.dispatchBatchEvent(\"batchEditingStarted\", /* @__PURE__ */new Map());\n    }\n    this.strategy.start(position, event, source, ignoreEventKey);\n    return;\n  }\n  stopEditing(position, params) {\n    const {\n      event,\n      cancel,\n      source = \"ui\",\n      suppressNavigateAfterEdit\n    } = params || {};\n    const {\n      beans,\n      model\n    } = this;\n    if (STOP_EDIT_SOURCE_TRANSFORM_KEYS.has(source)) {\n      if (this.isBatchEditing()) {\n        this.bulkRefresh(position);\n        return false;\n      }\n      return this.stopEditing(position, {\n        ...params,\n        source: STOP_EDIT_SOURCE_TRANSFORM[source]\n      });\n    }\n    const isEditingOrBatchWithEdits = this.isEditing(position) || this.isBatchEditing() && model.hasEdits(position, CHECK_SIBLING);\n    if (!isEditingOrBatchWithEdits || !this.strategy) {\n      return false;\n    }\n    const cellCtrl = _getCellCtrl(beans, position);\n    if (cellCtrl) {\n      cellCtrl.onEditorAttachedFuncs = [];\n    }\n    let edits = model.getEditMap(true);\n    let res = false;\n    const willStop = !cancel && !!this.shouldStopEditing(position, event, source);\n    const willCancel = cancel && !!this.shouldCancelEditing(position, event, source);\n    if (willStop || willCancel) {\n      _syncFromEditors(beans, true);\n      const freshEdits = model.getEditMap();\n      this.processEdits(freshEdits, cancel);\n      this.strategy?.stop(cancel, event);\n      this.bulkRefresh(void 0, edits);\n      edits = freshEdits;\n      res || (res = willStop);\n    } else if (event instanceof KeyboardEvent && this.batch && this.strategy?.midBatchInputsAllowed(position) && this.isEditing(position, {\n      withOpenEditor: true\n    })) {\n      const key = event.key;\n      const isEnter = key === KeyCode.ENTER;\n      const isEscape = key === KeyCode.ESCAPE;\n      const isTab = key === KeyCode.TAB;\n      if (isEnter || isTab || isEscape) {\n        if (isEnter || isTab) {\n          _syncFromEditors(beans, true);\n        } else if (isEscape) {\n          this.revertSingleCellEdit(cellCtrl);\n        }\n        if (this.isBatchEditing()) {\n          this.strategy?.cleanupEditors();\n        } else {\n          _destroyEditors(beans, model.getEditPositions(), {\n            event\n          });\n        }\n        event.preventDefault();\n        this.bulkRefresh(position, edits, {\n          suppressFlash: true\n        });\n        edits = model.getEditMap();\n      }\n    } else {\n      _syncFromEditors(beans, true);\n      edits = model.getEditMap();\n    }\n    if (res && position) {\n      this.model.removeEdits(position);\n    }\n    if (!suppressNavigateAfterEdit && cellCtrl) {\n      this.navigateAfterEdit(event instanceof KeyboardEvent && event.shiftKey, cellCtrl.cellPosition);\n    }\n    _purgeUnchangedEdits(beans);\n    if (!this.model.hasEdits()) {\n      this.model.getCellValidationModel().clearCellValidationMap();\n      this.model.getRowValidationModel().clearRowValidationMap();\n    }\n    this.bulkRefresh();\n    if (willCancel) {\n      this.beans.rowRenderer.refreshRows({\n        rowNodes: Array.from(edits.keys())\n      });\n    }\n    if (this.isBatchEditing()) {\n      this.beans.rowRenderer.refreshRows({\n        suppressFlash: true,\n        force: true\n      });\n      if (res && willStop) {\n        this.dispatchBatchEvent(\"batchEditingStopped\", edits);\n      }\n    }\n    return res;\n  }\n  navigateAfterEdit(shiftKey, cellPosition) {\n    const navAfterEdit = this.gos.get(\"enterNavigatesVerticallyAfterEdit\");\n    if (navAfterEdit) {\n      const key = shiftKey ? KeyCode.UP : KeyCode.DOWN;\n      this.beans.navigation?.navigateToNextCell(null, key, cellPosition, false);\n    }\n  }\n  processEdits(edits, cancel = false) {\n    const rowNodes = Array.from(edits.keys());\n    const {\n      beans\n    } = this;\n    const hasValidationErrors = this.model.getCellValidationModel().getCellValidationMap().size > 0 || this.model.getRowValidationModel().getRowValidationMap().size > 0;\n    const editsToDelete = [];\n    for (const rowNode of rowNodes) {\n      const editRow = edits.get(rowNode);\n      for (const column of editRow.keys()) {\n        const editValue = editRow.get(column);\n        const position = {\n          rowNode,\n          column\n        };\n        const cellCtrl = _getCellCtrl(beans, position);\n        const valueChanged = _sourceAndPendingDiffer(editValue);\n        const isCancelAfterEnd = cellCtrl?.comp?.getCellEditor()?.isCancelAfterEnd?.();\n        if (!cancel && !isCancelAfterEnd && valueChanged && !hasValidationErrors) {\n          const success = this.setNodeDataValue(rowNode, column, editValue.pendingValue);\n          if (!success) {\n            editsToDelete.push(position);\n          }\n        }\n        cellCtrl?.refreshCell(FORCE_REFRESH);\n      }\n    }\n    editsToDelete.forEach(position => {\n      this.model.clearEditValue(position);\n    });\n  }\n  setNodeDataValue(rowNode, column, newValue, refreshCell) {\n    const {\n      beans\n    } = this;\n    const cellCtrl = _getCellCtrl(beans, {\n      rowNode,\n      column\n    });\n    if (cellCtrl) {\n      cellCtrl.suppressRefreshCell = true;\n    }\n    const success = rowNode.setDataValue(column, newValue, \"commit\");\n    if (cellCtrl) {\n      cellCtrl.suppressRefreshCell = false;\n    }\n    if (refreshCell) {\n      cellCtrl?.refreshCell(FORCE_REFRESH);\n    }\n    return success;\n  }\n  setEditMap(edits, params) {\n    this.strategy ?? (this.strategy = this.createStrategy());\n    this.strategy?.setEditMap(edits, params);\n    this.bulkRefresh();\n    this.beans.rowRenderer.refreshCells(FORCE_REFRESH);\n  }\n  dispatchEditValuesChanged({\n    rowNode,\n    column\n  }, edit = {}) {\n    if (!rowNode || !column || !edit) {\n      return;\n    }\n    const {\n      pendingValue,\n      sourceValue\n    } = edit;\n    const {\n      rowIndex,\n      rowPinned,\n      data\n    } = rowNode;\n    this.beans.eventSvc.dispatchEvent({\n      type: \"cellEditValuesChanged\",\n      node: rowNode,\n      rowIndex,\n      rowPinned,\n      column,\n      source: \"api\",\n      data,\n      newValue: pendingValue,\n      oldValue: sourceValue,\n      value: pendingValue,\n      colDef: column.getColDef()\n    });\n  }\n  bulkRefresh(position = {}, editMap, params = {}) {\n    const {\n      beans,\n      gos\n    } = this;\n    const {\n      editModelSvc,\n      rowModel\n    } = beans;\n    if (_isClientSideRowModel(gos, rowModel)) {\n      if (position.rowNode && position.column) {\n        this.refCell(position, this.model.getEdit(position), params);\n      } else if (editMap) {\n        editModelSvc?.getEditMap(false)?.forEach((editRow, rowNode) => {\n          for (const column of editRow.keys()) {\n            this.refCell({\n              rowNode,\n              column\n            }, editRow.get(column), params);\n          }\n        });\n      }\n    }\n  }\n  refCell({\n    rowNode,\n    column\n  }, edit, params = {}) {\n    const {\n      beans,\n      gos\n    } = this;\n    const updatedNodes = /* @__PURE__ */new Set([rowNode]);\n    const refreshNodes = /* @__PURE__ */new Set();\n    const pinnedSibling = rowNode.pinnedSibling;\n    if (pinnedSibling) {\n      updatedNodes.add(pinnedSibling);\n    }\n    const sibling = rowNode.sibling;\n    if (sibling) {\n      refreshNodes.add(sibling);\n    }\n    let parent = rowNode.parent;\n    while (parent) {\n      if (parent.sibling?.footer && gos.get(\"groupTotalRow\")) {\n        refreshNodes.add(parent.sibling);\n      } else if (!parent.parent && parent.sibling && gos.get(\"grandTotalRow\")) {\n        refreshNodes.add(parent.sibling);\n      } else {\n        refreshNodes.add(parent);\n      }\n      parent = parent.parent;\n    }\n    updatedNodes.forEach(node => this.dispatchEditValuesChanged({\n      rowNode: node,\n      column\n    }, edit));\n    updatedNodes.forEach(node => _getCellCtrl(beans, {\n      rowNode: node,\n      column\n    })?.refreshCell(params));\n    refreshNodes.forEach(node => _getCellCtrl(beans, {\n      rowNode: node,\n      column\n    })?.refreshCell(params));\n  }\n  stopAllEditing(cancel = false, source = \"ui\") {\n    if (this.isEditing()) {\n      this.stopEditing(void 0, {\n        cancel,\n        source\n      });\n    }\n  }\n  isCellEditable(position, source = \"ui\") {\n    const {\n      rowNode\n    } = position;\n    if (rowNode.group) {\n      if (this.gos.get(\"treeData\")) {\n        if (!rowNode.data && !this.gos.get(\"enableGroupEdit\")) {\n          return false;\n        }\n      } else {\n        if (!this.gos.get(\"enableGroupEdit\")) {\n          return false;\n        }\n      }\n    }\n    this.strategy ?? (this.strategy = this.createStrategy());\n    return this.strategy?.isCellEditable(position, source) ?? false;\n  }\n  cellEditingInvalidCommitBlocks() {\n    return this.gos.get(\"invalidEditValueMode\") === \"block\";\n  }\n  checkNavWithValidation(position, event, focus = true) {\n    if (this.hasValidationErrors(position)) {\n      const cellCtrl = _getCellCtrl(this.beans, position);\n      if (this.cellEditingInvalidCommitBlocks()) {\n        event?.preventDefault?.();\n        if (focus) {\n          !cellCtrl?.hasBrowserFocus() && cellCtrl?.focusCell();\n          cellCtrl?.comp?.getCellEditor()?.focusIn?.();\n        }\n        return \"block-stop\";\n      }\n      cellCtrl && this.revertSingleCellEdit(cellCtrl);\n      return \"revert-continue\";\n    }\n    return \"continue\";\n  }\n  revertSingleCellEdit(cellPosition, focus = false) {\n    const cellCtrl = _getCellCtrl(this.beans, cellPosition);\n    if (!cellCtrl?.comp?.getCellEditor()) {\n      return;\n    }\n    _destroyEditors(this.beans, [cellPosition], {\n      silent: true\n    });\n    this.model.clearEditValue(cellPosition);\n    _setupEditor(this.beans, cellPosition, {\n      silent: true\n    });\n    _populateModelValidationErrors(this.beans);\n    cellCtrl?.refreshCell(FORCE_REFRESH);\n    cellCtrl.rowCtrl.rowEditStyleFeature?.applyRowStyles();\n    if (!focus) {\n      return;\n    }\n    cellCtrl?.focusCell();\n    cellCtrl?.comp?.getCellEditor()?.focusIn?.();\n  }\n  hasValidationErrors(position) {\n    _populateModelValidationErrors(this.beans);\n    const cellCtrl = _getCellCtrl(this.beans, position);\n    if (cellCtrl) {\n      cellCtrl.refreshCell(FORCE_REFRESH);\n      cellCtrl.rowCtrl.rowEditStyleFeature?.applyRowStyles();\n    }\n    let invalid = false;\n    if (position?.rowNode) {\n      invalid || (invalid = this.model.getRowValidationModel().hasRowValidation({\n        rowNode: position.rowNode\n      }));\n      if (position.column) {\n        invalid || (invalid = this.model.getCellValidationModel().hasCellValidation({\n          rowNode: position.rowNode,\n          column: position.column\n        }));\n      }\n    } else {\n      invalid || (invalid = this.model.getCellValidationModel().getCellValidationMap().size > 0);\n      invalid || (invalid = this.model.getRowValidationModel().getRowValidationMap().size > 0);\n    }\n    return invalid;\n  }\n  moveToNextCell(prev, backwards, event, source = \"ui\") {\n    let res;\n    const editing = this.isEditing();\n    const preventNavigation = editing && this.checkNavWithValidation(void 0, event) === \"block-stop\";\n    if (prev instanceof CellCtrl && editing) {\n      res = this.strategy?.moveToNextEditingCell(prev, backwards, event, source, preventNavigation);\n    }\n    if (res === null) {\n      return res;\n    }\n    res = res || !!this.beans.focusSvc.focusedHeader;\n    if (res === false && !preventNavigation) {\n      this.stopEditing();\n    }\n    return res;\n  }\n  getCellDataValue({\n    rowNode,\n    column\n  }, preferEditor = true) {\n    if (!rowNode || !column) {\n      return void 0;\n    }\n    let edit = this.model.getEdit({\n      rowNode,\n      column\n    });\n    const pinnedSibling = rowNode.pinnedSibling;\n    if (pinnedSibling) {\n      const siblingEdit = this.model.getEdit({\n        rowNode: pinnedSibling,\n        column\n      });\n      if (siblingEdit) {\n        edit = siblingEdit;\n      }\n    }\n    const newValue = preferEditor ? edit?.editorValue ?? edit?.pendingValue : edit?.pendingValue;\n    return newValue === UNEDITED || !edit ? this.valueSvc.getValue(column, rowNode, true, \"api\") : newValue;\n  }\n  getRowDataValue(rowNode, params) {\n    return this.model.getEditRowDataValue(rowNode, params);\n  }\n  addStopEditingWhenGridLosesFocus(viewports) {\n    _addStopEditingWhenGridLosesFocus(this, this.beans, viewports);\n  }\n  createPopupEditorWrapper(params) {\n    return new PopupEditorWrapper(params);\n  }\n  setDataValue(position, newValue, eventSource) {\n    if ((!this.isEditing() || eventSource === \"commit\") && !SET_DATA_SOURCE_AS_API.has(eventSource)) {\n      return;\n    }\n    const {\n      beans\n    } = this;\n    this.strategy ?? (this.strategy = this.createStrategy());\n    const source = this.isBatchEditing() ? \"ui\" : \"api\";\n    if (!eventSource || KEEP_EDITOR_SOURCES.has(eventSource)) {\n      _syncFromEditor(beans, position, true, newValue, eventSource);\n      return this.setNodeDataValue(position.rowNode, position.column, newValue, true);\n    }\n    const existing = this.model.getEdit(position);\n    if (existing) {\n      if (existing.pendingValue === newValue) {\n        return false;\n      }\n      if (existing.sourceValue !== newValue) {\n        _syncFromEditor(beans, position, true, newValue, eventSource);\n        this.stopEditing(position, {\n          source,\n          suppressNavigateAfterEdit: true\n        });\n        return true;\n      }\n      if (existing.sourceValue === newValue) {\n        beans.editModelSvc?.removeEdits(position);\n        this.dispatchEditValuesChanged(position, {\n          ...existing,\n          pendingValue: newValue\n        });\n        return true;\n      }\n    }\n    _syncFromEditor(beans, position, true, newValue, eventSource);\n    this.stopEditing(position, {\n      source,\n      suppressNavigateAfterEdit: true\n    });\n    return true;\n  }\n  handleColDefChanged(cellCtrl) {\n    _refreshEditorOnColDefChanged(this.beans, cellCtrl);\n  }\n  destroy() {\n    this.model.clear();\n    this.destroyStrategy();\n    super.destroy();\n  }\n  prepDetailsDuringBatch(position, params) {\n    if (!this.batch) {\n      return;\n    }\n    const hasEdits = this.model.hasRowEdits(position.rowNode, CHECK_SIBLING);\n    if (!hasEdits) {\n      return;\n    }\n    const {\n      rowNode,\n      column\n    } = position;\n    const {\n      compDetails,\n      valueToDisplay\n    } = params;\n    if (compDetails) {\n      const {\n        params: params2\n      } = compDetails;\n      params2.data = this.model.getEditRowDataValue(rowNode, CHECK_SIBLING);\n      return {\n        compDetails\n      };\n    }\n    const editRow = this.model.getEditRow(position.rowNode, CHECK_SIBLING);\n    if (valueToDisplay !== void 0 && editRow?.has(column)) {\n      return {\n        valueToDisplay: this.valueSvc.getValue(column, rowNode)\n      };\n    }\n  }\n  cleanupEditors() {\n    this.strategy?.cleanupEditors();\n  }\n  dispatchCellEvent(position, event, type, payload) {\n    this.strategy?.dispatchCellEvent(position, event, type, payload);\n  }\n  dispatchRowEvent(position, type) {\n    this.strategy?.dispatchRowEvent(position, type);\n  }\n  dispatchBatchEvent(type, edits) {\n    this.eventSvc.dispatchEvent(this.createBatchEditEvent(type, edits));\n  }\n  createBatchEditEvent(type, edits) {\n    return _addGridCommonParams(this.gos, {\n      type,\n      ...(type === \"batchEditingStopped\" ? {\n        changes: this.toEventChangeList(edits)\n      } : {})\n    });\n  }\n  toEventChangeList(edits) {\n    return this.model.getEditPositions(edits).map(edit => ({\n      rowIndex: edit.rowNode.rowIndex,\n      rowPinned: edit.rowNode.rowPinned,\n      columnId: edit.column.getColId(),\n      newValue: edit.pendingValue,\n      oldValue: edit.sourceValue\n    }));\n  }\n  applyBulkEdit({\n    rowNode,\n    column\n  }, ranges) {\n    if (!ranges || ranges.length === 0) {\n      return;\n    }\n    const {\n      beans,\n      rangeSvc,\n      valueSvc\n    } = this;\n    _syncFromEditors(beans, true);\n    const edits = this.model.getEditMap(true);\n    const editValue = edits.get(rowNode)?.get(column)?.pendingValue;\n    if (!this.batch) {\n      this.eventSvc.dispatchEvent({\n        type: \"bulkEditingStarted\"\n      });\n    }\n    ranges.forEach(range => {\n      rangeSvc?.forEachRowInRange(range, position => {\n        const rowNode2 = _getRowNode(beans, position);\n        if (rowNode2 === void 0) {\n          return;\n        }\n        const editRow = edits.get(rowNode2) ?? /* @__PURE__ */new Map();\n        for (const column2 of range.columns) {\n          if (!column2) {\n            continue;\n          }\n          if (this.isCellEditable({\n            rowNode: rowNode2,\n            column: column2\n          }, \"api\")) {\n            const sourceValue = valueSvc.getValue(column2, rowNode2, true, \"api\");\n            let pendingValue = valueSvc.parseValue(column2, rowNode2 ?? null, editValue, sourceValue);\n            if (Number.isNaN(pendingValue)) {\n              pendingValue = null;\n            }\n            editRow.set(column2, {\n              editorValue: void 0,\n              pendingValue,\n              sourceValue,\n              state: \"changed\"\n            });\n          }\n        }\n        if (editRow.size > 0) {\n          edits.set(rowNode2, editRow);\n        }\n      });\n      this.setEditMap(edits);\n      if (this.batch) {\n        this.cleanupEditors();\n        _purgeUnchangedEdits(beans);\n        this.bulkRefresh();\n        return;\n      }\n      this.stopEditing(void 0, {\n        source: \"api\"\n      });\n      this.eventSvc.dispatchEvent({\n        type: \"bulkEditingStopped\",\n        changes: this.toEventChangeList(edits)\n      });\n    });\n    this.bulkRefresh();\n    const cellCtrl = _getCellCtrl(beans, {\n      rowNode,\n      column\n    });\n    if (cellCtrl) {\n      cellCtrl.focusCell(true);\n    }\n  }\n  createCellStyleFeature(cellCtrl, beans) {\n    return new CellEditStyleFeature(cellCtrl, beans);\n  }\n  createRowStyleFeature(rowCtrl, beans) {\n    return new RowEditStyleFeature(rowCtrl, beans);\n  }\n  setEditingCells(cells, params) {\n    const {\n      beans\n    } = this;\n    const {\n      colModel,\n      valueSvc\n    } = beans;\n    const edits = /* @__PURE__ */new Map();\n    cells.forEach(({\n      colId,\n      column,\n      colKey,\n      rowIndex,\n      rowPinned,\n      newValue: pendingValue,\n      state\n    }) => {\n      const col = colId ? colModel.getCol(colId) : colKey ? colModel.getCol(colKey) : column;\n      if (!col) {\n        return;\n      }\n      const rowNode = _getRowNode(beans, {\n        rowIndex,\n        rowPinned\n      });\n      if (!rowNode) {\n        return;\n      }\n      const sourceValue = valueSvc.getValue(col, rowNode, true, \"api\");\n      if (!_sourceAndPendingDiffer({\n        pendingValue,\n        sourceValue\n      }) && state !== \"editing\") {\n        return;\n      }\n      let editRow = edits.get(rowNode);\n      if (!editRow) {\n        editRow = /* @__PURE__ */new Map();\n        edits.set(rowNode, editRow);\n      }\n      if (pendingValue === void 0) {\n        pendingValue = UNEDITED;\n      }\n      editRow.set(col, {\n        editorValue: void 0,\n        pendingValue,\n        sourceValue,\n        state: state ?? \"changed\"\n      });\n    });\n    this.setEditMap(edits, params);\n  }\n  onCellFocused(event) {\n    const cellCtrl = _getCellCtrl(this.beans, event);\n    if (!cellCtrl || !this.isEditing(cellCtrl, CHECK_SIBLING)) {\n      return;\n    }\n    const edit = this.model.getEdit(cellCtrl);\n    if (!edit || !_sourceAndPendingDiffer(edit)) {\n      return;\n    }\n    const translate = this.getLocaleTextFunc();\n    const label = translate(\"ariaPendingChange\", \"Pending Change\");\n    this.beans.ariaAnnounce?.announceValue(label, \"pendingChange\");\n  }\n  allowedFocusTargetOnValidation(cellPosition) {\n    return _getCellCtrl(this.beans, cellPosition);\n  }\n};\n\n// packages/ag-grid-community/src/edit/strategy/baseEditStrategy.ts\nvar BaseEditStrategy = class extends BeanStub {\n  postConstruct() {\n    this.model = this.beans.editModelSvc;\n    this.editSvc = this.beans.editSvc;\n    this.addManagedEventListeners({\n      cellFocused: this.onCellFocusChanged?.bind(this),\n      cellFocusCleared: this.onCellFocusChanged?.bind(this)\n    });\n  }\n  clearEdits(position) {\n    this.model.clearEditValue(position);\n  }\n  onCellFocusChanged(event) {\n    let cellCtrl;\n    const previous = event[\"previousParams\"];\n    const {\n      editSvc,\n      beans\n    } = this;\n    const sourceEvent = event.type === \"cellFocused\" ? event.sourceEvent : null;\n    if (previous) {\n      cellCtrl = _getCellCtrl(beans, previous);\n    }\n    const {\n      gos,\n      editModelSvc\n    } = beans;\n    const isFocusCleared = event.type === \"cellFocusCleared\";\n    if (editSvc.isEditing(void 0, {\n      withOpenEditor: true\n    })) {\n      const {\n        column,\n        rowIndex,\n        rowPinned\n      } = event;\n      const cellPositionFromEvent = {\n        column,\n        rowNode: _getRowNode(beans, {\n          rowIndex,\n          rowPinned\n        })\n      };\n      const isBlock = gos.get(\"invalidEditValueMode\") === \"block\";\n      if (isBlock) {\n        return;\n      }\n      const shouldRevert = !isBlock;\n      const hasError = !!editModelSvc?.getCellValidationModel().hasCellValidation(cellPositionFromEvent);\n      const shouldCancel = shouldRevert && hasError;\n      const result = previous || isFocusCleared ? editSvc.stopEditing(void 0, {\n        cancel: shouldCancel,\n        source: isFocusCleared && shouldRevert ? \"api\" : void 0,\n        event: sourceEvent\n      }) : true;\n      if (!result) {\n        if (editSvc.isBatchEditing()) {\n          editSvc.cleanupEditors();\n        } else {\n          editSvc.stopEditing(void 0, {\n            source: \"api\"\n          });\n        }\n      }\n    }\n    cellCtrl?.refreshCell({\n      suppressFlash: true,\n      force: true\n    });\n  }\n  isCellEditable({\n    rowNode,\n    column\n  }, _source = \"ui\") {\n    return column.isColumnFunc(rowNode, column.getColDef().editable);\n  }\n  stop(cancel, event) {\n    const editingCells = this.model.getEditPositions();\n    const results = {\n      all: [],\n      pass: [],\n      fail: []\n    };\n    editingCells.forEach(cell => {\n      results.all.push(cell);\n      const validation2 = this.model.getCellValidationModel().getCellValidation(cell);\n      if ((validation2?.errorMessages?.length ?? 0) > 0) {\n        results.fail.push(cell);\n        return;\n      }\n      results.pass.push(cell);\n    });\n    if (cancel) {\n      editingCells.forEach(cell => {\n        _destroyEditor(this.beans, cell);\n        this.model.stop(cell);\n      });\n      return true;\n    }\n    const actions = this.processValidationResults(results);\n    if (actions.destroy.length > 0) {\n      actions.destroy.forEach(cell => {\n        _destroyEditor(this.beans, cell, {\n          event\n        });\n        this.model.stop(cell);\n      });\n    }\n    if (actions.keep.length > 0) {\n      actions.keep.forEach(cell => {\n        const cellCtrl = _getCellCtrl(this.beans, cell);\n        if (!this.editSvc?.cellEditingInvalidCommitBlocks()) {\n          cellCtrl && this.editSvc.revertSingleCellEdit(cellCtrl);\n        }\n      });\n    }\n    return true;\n  }\n  cleanupEditors({\n    rowNode\n  } = {}, includeEditing) {\n    _syncFromEditors(this.beans, false);\n    const positions = this.model.getEditPositions();\n    const discard = [];\n    if (rowNode) {\n      positions.forEach(pos => {\n        if (!(!rowNode || pos.rowNode === rowNode)) {\n          discard.push(pos);\n        }\n      });\n    } else {\n      positions.forEach(pos => {\n        discard.push(pos);\n      });\n    }\n    _destroyEditors(this.beans, discard);\n    _purgeUnchangedEdits(this.beans, includeEditing);\n  }\n  setFocusOutOnEditor(cellCtrl) {\n    cellCtrl.comp?.getCellEditor()?.focusOut?.();\n  }\n  setFocusInOnEditor(cellCtrl) {\n    const comp = cellCtrl.comp;\n    const editor = comp?.getCellEditor();\n    if (editor?.focusIn) {\n      editor.focusIn();\n    } else {\n      const isFullRow = this.beans.gos.get(\"editType\") === \"fullRow\";\n      cellCtrl.focusCell(isFullRow);\n      cellCtrl.onEditorAttachedFuncs.push(() => comp?.getCellEditor()?.focusIn?.());\n    }\n  }\n  setupEditors(cells = this.model.getEditPositions(), position, cellStartedEdit, event, ignoreEventKey = false) {\n    const key = event instanceof KeyboardEvent && !ignoreEventKey && event.key || void 0;\n    _setupEditors(this.beans, cells, position, key, event, cellStartedEdit);\n  }\n  dispatchCellEvent(position, event, type, payload) {\n    const cellCtrl = _getCellCtrl(this.beans, position);\n    if (cellCtrl) {\n      this.eventSvc.dispatchEvent({\n        ...cellCtrl.createEvent(event ?? null, type),\n        ...payload\n      });\n    }\n  }\n  dispatchRowEvent(position, type) {\n    const rowCtrl = _getRowCtrl(this.beans, position);\n    if (rowCtrl) {\n      this.eventSvc.dispatchEvent(rowCtrl.createRowEvent(type));\n    }\n  }\n  shouldStart({\n    column\n  }, event, cellStartedEdit, source = \"ui\") {\n    if (event instanceof KeyboardEvent && (event.key === KeyCode.TAB || event.key === KeyCode.ENTER || event.key === KeyCode.F2 || event.key === KeyCode.BACKSPACE && cellStartedEdit)) {\n      return true;\n    }\n    const extendingRange = event?.shiftKey && this.beans.rangeSvc?.getCellRanges().length != 0;\n    if (extendingRange) {\n      return false;\n    }\n    const colDef = column?.getColDef();\n    const clickCount = this.deriveClickCount(colDef);\n    const type = event?.type;\n    if (type === \"click\" && event?.detail === 1 && clickCount === 1) {\n      return true;\n    }\n    if (type === \"dblclick\" && event?.detail === 2 && clickCount === 2) {\n      return true;\n    }\n    if (source === \"api\") {\n      return cellStartedEdit ?? false;\n    }\n    return false;\n  }\n  shouldStop(_position, event, source = \"ui\") {\n    const batch = this.editSvc.isBatchEditing();\n    if (batch && source === \"api\") {\n      return true;\n    }\n    if (batch && source === \"ui\") {\n      return false;\n    }\n    if (source === \"api\") {\n      return true;\n    }\n    if (event instanceof KeyboardEvent && !batch) {\n      return event.key === KeyCode.ENTER;\n    }\n    return null;\n  }\n  shouldCancel(_position, event, source = \"ui\") {\n    const batch = this.editSvc.isBatchEditing();\n    if (event instanceof KeyboardEvent && !batch) {\n      const result = event.key === KeyCode.ESCAPE;\n      if (result) {\n        return true;\n      }\n    }\n    if (batch && source === \"api\") {\n      return true;\n    }\n    if (source === \"api\") {\n      return true;\n    }\n    return false;\n  }\n  setEditMap(edits, params) {\n    if (!params?.update) {\n      this.editSvc.stopEditing(void 0, {\n        cancel: true,\n        source: \"api\"\n      });\n    }\n    const cells = [];\n    edits.forEach((editRow, rowNode) => {\n      editRow.forEach((cellData, column) => {\n        if (cellData.state === \"editing\") {\n          cells.push({\n            ...cellData,\n            rowNode,\n            column\n          });\n        }\n      });\n    });\n    if (params?.update) {\n      edits = new Map([...this.model.getEditMap(), ...edits]);\n    }\n    this.model?.setEditMap(edits);\n    if (cells.length > 0) {\n      const cell = cells.at(-1);\n      const key = cell.pendingValue === UNEDITED ? void 0 : cell.pendingValue;\n      this.start(cell, new KeyboardEvent(\"keydown\", {\n        key\n      }), \"api\");\n      const cellCtrl = _getCellCtrl(this.beans, cell);\n      if (cellCtrl) {\n        this.setFocusInOnEditor(cellCtrl);\n      }\n    }\n  }\n  deriveClickCount(colDef) {\n    const {\n      gos\n    } = this.beans;\n    if (gos.get(\"suppressClickEdit\") === true) {\n      return 0;\n    }\n    if (gos.get(\"singleClickEdit\") === true) {\n      return 1;\n    }\n    if (colDef?.singleClickEdit) {\n      return 1;\n    }\n    return 2;\n  }\n  destroy() {\n    this.cleanupEditors();\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/edit/strategy/fullRowEditStrategy.ts\nvar FullRowEditStrategy = class extends BaseEditStrategy {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"fullRow\";\n    this.startedRows = [];\n  }\n  isCellEditable(position, source = \"ui\") {\n    const editable = super.isCellEditable(position, source);\n    if (editable === true || source === \"ui\") {\n      return editable;\n    }\n    const columns = this.beans.colModel.getCols();\n    return columns.some(col => super.isCellEditable({\n      rowNode: position.rowNode,\n      column: col\n    }, source));\n  }\n  shouldStop(position, event, _source = \"ui\") {\n    const {\n      rowNode\n    } = position || {};\n    const oldRowCtrl = _getRowCtrl(this.beans, {\n      rowNode: this.rowNode\n    });\n    if (!oldRowCtrl) {\n      return true;\n    }\n    const res = super.shouldStop({\n      rowNode: this.rowNode\n    }, event, _source);\n    if (res !== null) {\n      return res;\n    }\n    if (!this.rowNode) {\n      return false;\n    }\n    return rowNode !== this.rowNode;\n  }\n  midBatchInputsAllowed({\n    rowNode\n  }) {\n    if (!rowNode) {\n      return false;\n    }\n    return this.model.hasEdits({\n      rowNode\n    });\n  }\n  clearEdits(position) {\n    this.model.clearEditValue(position);\n  }\n  start(position, event, _source = \"ui\", ignoreEventKey) {\n    const {\n      rowNode\n    } = position;\n    if (this.rowNode !== rowNode) {\n      super.cleanupEditors(position);\n    }\n    this.dispatchRowEvent({\n      rowNode\n    }, \"rowEditingStarted\");\n    this.startedRows.push(rowNode);\n    const columns = this.beans.visibleCols.allCols;\n    const cells = [];\n    columns.forEach(column => {\n      if (!column.isCellEditable(rowNode)) {\n        return;\n      }\n      const position2 = {\n        rowNode,\n        column\n      };\n      cells.push(position2);\n      if (!this.model.hasEdits(position2)) {\n        this.model.start(position2);\n      }\n    });\n    this.rowNode = rowNode;\n    this.setupEditors(cells, position, true, event, ignoreEventKey);\n  }\n  processValidationResults(results) {\n    const anyFailed = results.fail.length > 0;\n    if (anyFailed && this.editSvc.cellEditingInvalidCommitBlocks()) {\n      return {\n        destroy: [],\n        keep: results.all\n      };\n    }\n    return {\n      destroy: results.all,\n      keep: []\n    };\n  }\n  stop(cancel, event) {\n    const {\n      rowNode\n    } = this;\n    if (rowNode && !this.model.hasRowEdits(rowNode)) {\n      return false;\n    }\n    const changedRows = [];\n    if (!cancel) {\n      this.model.getEditMap().forEach((rowEdits, rowNode2) => {\n        if (!rowEdits || rowEdits.size === 0) {\n          return;\n        }\n        for (const edit of rowEdits.values()) {\n          if (_sourceAndPendingDiffer(edit)) {\n            changedRows.push(rowNode2);\n            break;\n          }\n        }\n      });\n    }\n    _populateModelValidationErrors(this.beans);\n    if (!cancel && this.editSvc?.checkNavWithValidation({\n      rowNode\n    }) === \"block-stop\") {\n      return false;\n    }\n    super.stop(cancel, event);\n    changedRows.forEach(rowNode2 => this.dispatchRowEvent({\n      rowNode: rowNode2\n    }, \"rowValueChanged\"));\n    this.cleanupEditors({\n      rowNode\n    }, true);\n    this.rowNode = void 0;\n    return true;\n  }\n  onCellFocusChanged(event) {\n    const {\n      rowIndex\n    } = event;\n    const prev = event[\"previousParams\"];\n    if (prev?.rowIndex === rowIndex || event.sourceEvent instanceof KeyboardEvent) {\n      return;\n    }\n    const prevCell = _getCellCtrl(this.beans, prev);\n    const isBlock = this.gos.get(\"invalidEditValueMode\") === \"block\";\n    if (isBlock && prevCell && (this.model.getCellValidationModel().getCellValidation(prevCell) || this.model.getRowValidationModel().getRowValidation(prevCell))) {\n      return;\n    }\n    super.onCellFocusChanged(event);\n  }\n  cleanupEditors(position = {}, includeEditing) {\n    super.cleanupEditors(position, includeEditing);\n    this.startedRows.forEach(rowNode => this.dispatchRowEvent({\n      rowNode\n    }, \"rowEditingStopped\"));\n    this.startedRows.length = 0;\n  }\n  // returns null if no navigation should be performed\n  moveToNextEditingCell(prevCell, backwards, event, source = \"ui\", preventNavigation = false) {\n    const prevPos = prevCell.cellPosition;\n    let nextCell;\n    this.model.suspend(true);\n    try {\n      nextCell = this.beans.navigation?.findNextCellToFocusOn(prevPos, {\n        backwards,\n        startEditing: true,\n        // Default behaviour for fullRow is skip to the next cell,\n        // editable or not. FullRow editing might have some editable\n        // and some not editable cells in the row.\n        // More complex logic needed to skip to the\n        // next FullRow editable cell,\n        skipToNextEditableCell: false\n      });\n    } finally {\n      this.model.suspend(false);\n    }\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell == null) {\n      return false;\n    }\n    const nextPos = nextCell.cellPosition;\n    const prevEditable = prevCell.isCellEditable();\n    const nextEditable = nextCell.isCellEditable();\n    const rowsMatch = nextPos && prevPos.rowIndex === nextPos.rowIndex && prevPos.rowPinned === nextPos.rowPinned;\n    if (prevEditable) {\n      this.setFocusOutOnEditor(prevCell);\n    }\n    this.restoreEditors();\n    const suppressStartEditOnTab = this.gos.get(\"suppressStartEditOnTab\");\n    if (nextEditable && !preventNavigation) {\n      if (suppressStartEditOnTab) {\n        nextCell.focusCell(true, event);\n      } else {\n        if (!nextCell.comp?.getCellEditor()) {\n          _setupEditor(this.beans, nextCell, {\n            event,\n            cellStartedEdit: true\n          });\n        }\n        this.setFocusInOnEditor(nextCell);\n        nextCell.focusCell(false, event);\n      }\n    } else {\n      if (nextEditable && preventNavigation) {\n        this.setFocusInOnEditor(nextCell);\n      }\n      nextCell.focusCell(true, event);\n    }\n    if (!rowsMatch && !preventNavigation) {\n      this.cleanupEditors(nextCell, true);\n      if (suppressStartEditOnTab) {\n        nextCell.focusCell(true, event);\n      } else {\n        this.editSvc.startEditing(nextCell, {\n          startedEdit: true,\n          event,\n          source,\n          ignoreEventKey: true\n        });\n      }\n    }\n    prevCell.rowCtrl?.refreshRow({\n      suppressFlash: true,\n      force: true\n    });\n    return true;\n  }\n  restoreEditors() {\n    this.model.getEditMap().forEach((rowEdits, rowNode) => rowEdits.forEach(({\n      state\n    }, column) => {\n      if (state !== \"editing\") {\n        return;\n      }\n      const cellCtrl = _getCellCtrl(this.beans, {\n        rowNode,\n        column\n      });\n      if (cellCtrl && !cellCtrl.comp?.getCellEditor()) {\n        _setupEditor(this.beans, cellCtrl, {\n          silent: true\n        });\n      }\n    }));\n  }\n  destroy() {\n    super.destroy();\n    this.rowNode = void 0;\n    this.startedRows.length = 0;\n  }\n};\n\n// packages/ag-grid-community/src/edit/strategy/singleCellEditStrategy.ts\nvar SingleCellEditStrategy = class extends BaseEditStrategy {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"singleCell\";\n  }\n  shouldStop(position, event, source = \"ui\") {\n    const res = super.shouldStop(position, event, source);\n    if (res !== null) {\n      return res;\n    }\n    const {\n      rowNode,\n      column\n    } = position || {};\n    if ((!this.rowNode || !this.column) && rowNode && column) {\n      return null;\n    }\n    return this.rowNode !== rowNode || this.column !== column;\n  }\n  midBatchInputsAllowed(position) {\n    return this.model.hasEdits(position);\n  }\n  start(position, event, _source = \"ui\", ignoreEventKey) {\n    if (this.rowNode !== position.rowNode || this.column !== position.column) {\n      super.cleanupEditors();\n    }\n    this.rowNode = position.rowNode;\n    this.column = position.column;\n    this.model.start(position);\n    this.setupEditors([position], position, true, event, ignoreEventKey);\n  }\n  dispatchRowEvent(_position, _type) {}\n  processValidationResults(results) {\n    const anyFailed = results.fail.length > 0;\n    if (anyFailed && this.editSvc.cellEditingInvalidCommitBlocks()) {\n      return {\n        destroy: [],\n        keep: results.all\n      };\n    }\n    return {\n      destroy: results.all,\n      keep: []\n    };\n  }\n  stop(cancel, event) {\n    super.stop(cancel, event);\n    this.rowNode = void 0;\n    this.column = void 0;\n    return true;\n  }\n  onCellFocusChanged(event) {\n    const {\n      colModel,\n      editSvc\n    } = this.beans;\n    const {\n      rowIndex,\n      column,\n      rowPinned\n    } = event;\n    const rowNode = _getRowNode(this.beans, {\n      rowIndex,\n      rowPinned\n    });\n    const curColId = _getColId(column);\n    const curCol = colModel.getCol(curColId);\n    const previous = event[\"previousParams\"];\n    if (previous) {\n      const prevColId = _getColId(previous.column);\n      if (previous?.rowIndex === rowIndex && prevColId === curColId && previous?.rowPinned === rowPinned) {\n        return;\n      }\n    }\n    if (editSvc?.isEditing({\n      rowNode,\n      column: curCol\n    }, {\n      withOpenEditor: true\n    }) && event.type === \"cellFocused\") {\n      return;\n    }\n    super.onCellFocusChanged(event);\n  }\n  // returns null if no navigation should be performed\n  moveToNextEditingCell(prevCell, backwards, event, source = \"ui\", preventNavigation = false) {\n    const prevPos = prevCell.cellPosition;\n    let nextCell;\n    const shouldSuspend = this.beans.gos.get(\"editType\") === \"fullRow\";\n    if (shouldSuspend) {\n      this.model.suspend(true);\n    }\n    if (!preventNavigation) {\n      prevCell.eGui.focus();\n      this.editSvc?.stopEditing(prevCell, {\n        source: this.editSvc?.isBatchEditing() ? \"ui\" : \"api\",\n        event\n      });\n    }\n    try {\n      nextCell = this.beans.navigation?.findNextCellToFocusOn(prevPos, {\n        backwards,\n        startEditing: true\n        // Default behaviour for fullRow is skip to the next cell,\n        // editable or not. FullRow editing might have some editable\n        // and some not editable cells in the row.\n        // More complex logic needed to skip to the\n        // next FullRow editable cell,\n        // skipToNextEditableCell: false,\n      });\n    } finally {\n      if (shouldSuspend) {\n        this.model.suspend(false);\n      }\n    }\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell == null) {\n      return false;\n    }\n    const nextPos = nextCell.cellPosition;\n    const prevEditable = prevCell.isCellEditable();\n    const nextEditable = nextCell.isCellEditable();\n    const rowsMatch = nextPos && prevPos.rowIndex === nextPos.rowIndex && prevPos.rowPinned === nextPos.rowPinned;\n    if (prevEditable && !preventNavigation) {\n      this.setFocusOutOnEditor(prevCell);\n    }\n    const suppressStartEditOnTab = this.gos.get(\"suppressStartEditOnTab\");\n    if (!rowsMatch && !preventNavigation) {\n      super.cleanupEditors(nextCell, true);\n      if (suppressStartEditOnTab) {\n        nextCell.focusCell(true, event);\n      } else {\n        this.editSvc.startEditing(nextCell, {\n          startedEdit: true,\n          event,\n          source,\n          ignoreEventKey: true\n        });\n      }\n    }\n    if (nextEditable && !preventNavigation) {\n      nextCell.focusCell(false, event);\n      if (suppressStartEditOnTab) {\n        nextCell.focusCell(true, event);\n      } else if (!nextCell.comp?.getCellEditor()) {\n        _setupEditor(this.beans, nextCell, {\n          event,\n          cellStartedEdit: true\n        });\n        this.setFocusInOnEditor(nextCell);\n      }\n    } else {\n      if (nextEditable && preventNavigation) {\n        this.setFocusInOnEditor(nextCell);\n      }\n      nextCell.focusCell(true, event);\n    }\n    prevCell.rowCtrl?.refreshRow({\n      suppressFlash: true,\n      force: true\n    });\n    return true;\n  }\n  destroy() {\n    super.destroy();\n    this.rowNode = void 0;\n    this.column = void 0;\n  }\n};\n\n// packages/ag-grid-community/src/edit/editModule.ts\nvar EditCoreModule = {\n  moduleName: \"EditCore\",\n  version: VERSION,\n  beans: [EditModelService, EditService],\n  apiFunctions: {\n    getEditingCells,\n    getCellEditorInstances,\n    startEditingCell,\n    stopEditing,\n    isEditing,\n    validateEdit\n  },\n  dynamicBeans: {\n    singleCell: SingleCellEditStrategy,\n    fullRow: FullRowEditStrategy\n  },\n  dependsOn: [PopupModule, TooltipModule],\n  css: [cellEditingCSS]\n};\nvar UndoRedoEditModule = {\n  moduleName: \"UndoRedoEdit\",\n  version: VERSION,\n  beans: [UndoRedoService],\n  apiFunctions: {\n    undoCellEditing,\n    redoCellEditing,\n    getCurrentUndoSize,\n    getCurrentRedoSize\n  },\n  dependsOn: [EditCoreModule]\n};\nvar TextEditorModule = {\n  moduleName: \"TextEditor\",\n  version: VERSION,\n  userComponents: {\n    agCellEditor: TextCellEditor,\n    agTextCellEditor: TextCellEditor\n  },\n  dependsOn: [EditCoreModule]\n};\nvar NumberEditorModule = {\n  moduleName: \"NumberEditor\",\n  version: VERSION,\n  userComponents: {\n    agNumberCellEditor: {\n      classImp: NumberCellEditor\n    }\n  },\n  dependsOn: [EditCoreModule]\n};\nvar DateEditorModule = {\n  moduleName: \"DateEditor\",\n  version: VERSION,\n  userComponents: {\n    agDateCellEditor: DateCellEditor,\n    agDateStringCellEditor: DateStringCellEditor\n  },\n  dependsOn: [EditCoreModule]\n};\nvar CheckboxEditorModule = {\n  moduleName: \"CheckboxEditor\",\n  version: VERSION,\n  userComponents: {\n    agCheckboxCellEditor: CheckboxCellEditor\n  },\n  dependsOn: [EditCoreModule]\n};\nvar SelectEditorModule = {\n  moduleName: \"SelectEditor\",\n  version: VERSION,\n  userComponents: {\n    agSelectCellEditor: SelectCellEditor\n  },\n  dependsOn: [EditCoreModule]\n};\nvar LargeTextEditorModule = {\n  moduleName: \"LargeTextEditor\",\n  version: VERSION,\n  userComponents: {\n    agLargeTextCellEditor: LargeTextCellEditor\n  },\n  dependsOn: [EditCoreModule]\n};\nvar CustomEditorModule = {\n  moduleName: \"CustomEditor\",\n  version: VERSION,\n  dependsOn: [EditCoreModule]\n};\n\n// packages/ag-grid-community/src/columns/selectionColService.ts\nvar SelectionColService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"selectionColSvc\";\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"rowSelection\", event => {\n      this.onSelectionOptionsChanged(event.currentValue, event.previousValue, _convertColumnEventSourceType(event.source));\n    });\n    this.addManagedPropertyListener(\"selectionColumnDef\", this.updateColumns.bind(this));\n  }\n  addColumns(cols) {\n    const selectionCols = this.columns;\n    if (selectionCols == null) {\n      return;\n    }\n    cols.list = selectionCols.list.concat(cols.list);\n    cols.tree = selectionCols.tree.concat(cols.tree);\n    _updateColsMap(cols);\n  }\n  createColumns(cols, updateOrders) {\n    const destroyCollection = () => {\n      _destroyColumnTree(this.beans, this.columns?.tree);\n      this.columns = null;\n    };\n    const newTreeDepth = cols.treeDepth;\n    const oldTreeDepth = this.columns?.treeDepth ?? -1;\n    const treeDepthSame = oldTreeDepth == newTreeDepth;\n    const list = this.generateSelectionCols();\n    const areSame = _areColIdsEqual(list, this.columns?.list ?? []);\n    if (areSame && treeDepthSame) {\n      return;\n    }\n    destroyCollection();\n    const {\n      colGroupSvc\n    } = this.beans;\n    const treeDepth = colGroupSvc?.findDepth(cols.tree) ?? 0;\n    const tree = colGroupSvc?.balanceTreeForAutoCols(list, treeDepth) ?? [];\n    this.columns = {\n      list,\n      tree,\n      treeDepth,\n      map: {}\n    };\n    const putSelectionColsFirstInList = cols2 => {\n      if (!cols2) {\n        return null;\n      }\n      const colsFiltered = cols2.filter(col => !isColumnSelectionCol(col));\n      return [...list, ...colsFiltered];\n    };\n    updateOrders(putSelectionColsFirstInList);\n  }\n  updateColumns(event) {\n    const source = _convertColumnEventSourceType(event.source);\n    this.columns?.list.forEach(col => {\n      const newColDef = this.createSelectionColDef(event.currentValue);\n      col.setColDef(newColDef, null, source);\n      _applyColumnState(this.beans, {\n        state: [{\n          ...newColDef,\n          colId: col.getColId()\n        }]\n      }, source);\n    });\n  }\n  getColumn(key) {\n    return this.columns?.list.find(col => _columnsMatch(col, key)) ?? null;\n  }\n  getColumns() {\n    return this.columns?.list ?? null;\n  }\n  isSelectionColumnEnabled() {\n    const {\n      gos,\n      beans\n    } = this;\n    const rowSelection = gos.get(\"rowSelection\");\n    if (typeof rowSelection !== \"object\" || !_isRowSelection(gos)) {\n      return false;\n    }\n    const hasAutoCols = (beans.autoColSvc?.getColumns()?.length ?? 0) > 0;\n    if (rowSelection.checkboxLocation === \"autoGroupColumn\" && hasAutoCols) {\n      return false;\n    }\n    const checkboxes = !!_getCheckboxes(rowSelection);\n    const headerCheckbox = _getHeaderCheckbox(rowSelection);\n    return checkboxes || headerCheckbox;\n  }\n  createSelectionColDef(def) {\n    const {\n      gos\n    } = this.beans;\n    const selectionColumnDef = def ?? gos.get(\"selectionColumnDef\");\n    const enableRTL = gos.get(\"enableRtl\");\n    const {\n      rowSpan: _,\n      spanRows: __,\n      ...filteredSelColDef\n    } = selectionColumnDef ?? {};\n    return {\n      // overridable properties\n      width: 50,\n      resizable: false,\n      suppressHeaderMenuButton: true,\n      sortable: false,\n      suppressMovable: true,\n      lockPosition: enableRTL ? \"right\" : \"left\",\n      comparator(valueA, valueB, nodeA, nodeB) {\n        const aSelected = nodeA.isSelected();\n        const bSelected = nodeB.isSelected();\n        return aSelected === bSelected ? 0 : aSelected ? 1 : -1;\n      },\n      editable: false,\n      suppressFillHandle: true,\n      pinned: null,\n      // overrides\n      ...filteredSelColDef,\n      // non-overridable properties\n      colId: SELECTION_COLUMN_ID,\n      chartDataType: \"excluded\"\n    };\n  }\n  generateSelectionCols() {\n    if (!this.isSelectionColumnEnabled()) {\n      return [];\n    }\n    const colDef = this.createSelectionColDef();\n    const colId = colDef.colId;\n    this.gos.validateColDef(colDef, colId, true);\n    const col = new AgColumn(colDef, null, colId, false);\n    this.createBean(col);\n    return [col];\n  }\n  onSelectionOptionsChanged(current, prev, source) {\n    const prevCheckbox = prev && typeof prev !== \"string\" ? _getCheckboxes(prev) : void 0;\n    const currCheckbox = current && typeof current !== \"string\" ? _getCheckboxes(current) : void 0;\n    const checkboxHasChanged = prevCheckbox !== currCheckbox;\n    const prevHeaderCheckbox = prev && typeof prev !== \"string\" ? _getHeaderCheckbox(prev) : void 0;\n    const currHeaderCheckbox = current && typeof current !== \"string\" ? _getHeaderCheckbox(current) : void 0;\n    const headerCheckboxHasChanged = prevHeaderCheckbox !== currHeaderCheckbox;\n    const currLocation = _getCheckboxLocation(current);\n    const prevLocation = _getCheckboxLocation(prev);\n    const locationChanged = currLocation !== prevLocation;\n    if (checkboxHasChanged || headerCheckboxHasChanged || locationChanged) {\n      this.beans.colModel.refreshAll(source);\n    }\n  }\n  destroy() {\n    _destroyColumnTree(this.beans, this.columns?.tree);\n    super.destroy();\n  }\n  /**\n   * Refreshes visibility of the selection column based on which columns are currently visible.\n   * Called by the VisibleColsService with the columns that are currently visible in left/center/right\n   * containers. This method *MUTATES* those arrays directly.\n   *\n   * The selection column should be visible if all of the following are true\n   * - The selection column is not disabled\n   * - The number of visible columns excluding the selection column and row numbers column is greater than 0\n   * @param leftCols Visible columns in the left-pinned container\n   * @param centerCols Visible columns in the center viewport\n   * @param rightCols Visible columns in the right-pinned container\n   */\n  refreshVisibility(leftCols, centerCols, rightCols) {\n    if (!this.columns?.list.length) {\n      return;\n    }\n    const numVisibleCols = leftCols.length + centerCols.length + rightCols.length;\n    if (numVisibleCols === 0) {\n      return;\n    }\n    const column = this.columns.list[0];\n    if (!column.isVisible()) return;\n    const hideSelectionCol = () => {\n      let cols;\n      switch (column.pinned) {\n        case \"left\":\n        case true:\n          cols = leftCols;\n          break;\n        case \"right\":\n          cols = rightCols;\n          break;\n        default:\n          cols = centerCols;\n      }\n      cols && _removeFromArray(cols, column);\n    };\n    const rowNumbersCol = this.beans.rowNumbersSvc?.getColumn(ROW_NUMBERS_COLUMN_ID);\n    const expectedNumCols = rowNumbersCol ? 2 : 1;\n    if (expectedNumCols === numVisibleCols) {\n      hideSelectionCol();\n    }\n  }\n};\n\n// packages/ag-grid-community/src/selection/rowSelectionApi.ts\nfunction setNodesSelected(beans, params) {\n  const allNodesValid = params.nodes.every(node => {\n    if (node.rowPinned && !_isManualPinnedRow(node)) {\n      _warn(59);\n      return false;\n    }\n    if (node.id === void 0) {\n      _warn(60);\n      return false;\n    }\n    return true;\n  });\n  if (!allNodesValid) {\n    return;\n  }\n  const {\n    nodes,\n    source,\n    newValue\n  } = params;\n  beans.selectionSvc?.setNodesSelected({\n    nodes,\n    source: source ?? \"api\",\n    newValue\n  });\n}\nfunction selectAll(beans, selectAll2, source = \"apiSelectAll\") {\n  beans.selectionSvc?.selectAllRowNodes({\n    source,\n    selectAll: selectAll2\n  });\n}\nfunction deselectAll(beans, selectAll2, source = \"apiSelectAll\") {\n  beans.selectionSvc?.deselectAllRowNodes({\n    source,\n    selectAll: selectAll2\n  });\n}\nfunction selectAllFiltered(beans, source = \"apiSelectAllFiltered\") {\n  beans.selectionSvc?.selectAllRowNodes({\n    source,\n    selectAll: \"filtered\"\n  });\n}\nfunction deselectAllFiltered(beans, source = \"apiSelectAllFiltered\") {\n  beans.selectionSvc?.deselectAllRowNodes({\n    source,\n    selectAll: \"filtered\"\n  });\n}\nfunction selectAllOnCurrentPage(beans, source = \"apiSelectAllCurrentPage\") {\n  beans.selectionSvc?.selectAllRowNodes({\n    source,\n    selectAll: \"currentPage\"\n  });\n}\nfunction deselectAllOnCurrentPage(beans, source = \"apiSelectAllCurrentPage\") {\n  beans.selectionSvc?.deselectAllRowNodes({\n    source,\n    selectAll: \"currentPage\"\n  });\n}\nfunction getSelectedNodes(beans) {\n  return beans.selectionSvc?.getSelectedNodes() ?? [];\n}\nfunction getSelectedRows(beans) {\n  return beans.selectionSvc?.getSelectedRows() ?? [];\n}\n\n// packages/ag-grid-community/src/selection/selectionService.ts\nvar SelectionService = class extends BaseSelectionService {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"selectionSvc\";\n    this.selectedNodes = /* @__PURE__ */new Map();\n    /** Only used to track detail grid selection state when master/detail is enabled */\n    this.detailSelection = /* @__PURE__ */new Map();\n    this.masterSelectsDetail = false;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const {\n      gos\n    } = this;\n    this.mode = _getRowSelectionMode(gos);\n    this.groupSelectsDescendants = _getGroupSelectsDescendants(gos);\n    this.groupSelectsFiltered = _getGroupSelection(gos) === \"filteredDescendants\";\n    this.masterSelectsDetail = _getMasterSelects(gos) === \"detail\";\n    this.addManagedPropertyListeners([\"groupSelectsChildren\", \"groupSelectsFiltered\", \"rowSelection\"], () => {\n      const groupSelectsDescendants = _getGroupSelectsDescendants(gos);\n      const selectionMode = _getRowSelectionMode(gos);\n      const groupSelectsFiltered = _getGroupSelection(gos) === \"filteredDescendants\";\n      this.masterSelectsDetail = _getMasterSelects(gos) === \"detail\";\n      if (groupSelectsDescendants !== this.groupSelectsDescendants || groupSelectsFiltered !== this.groupSelectsFiltered || selectionMode !== this.mode) {\n        this.deselectAllRowNodes({\n          source: \"api\"\n        });\n        this.groupSelectsDescendants = groupSelectsDescendants;\n        this.groupSelectsFiltered = groupSelectsFiltered;\n        this.mode = selectionMode;\n      }\n    });\n    this.addManagedEventListeners({\n      rowSelected: this.onRowSelected.bind(this)\n    });\n  }\n  destroy() {\n    super.destroy();\n    this.resetNodes();\n  }\n  handleSelectionEvent(event, rowNode, source) {\n    if (this.isRowSelectionBlocked(rowNode)) return 0;\n    const selection = this.inferNodeSelections(rowNode, event.shiftKey, event.metaKey || event.ctrlKey, source);\n    if (selection == null) {\n      return 0;\n    }\n    this.selectionCtx.selectAll = false;\n    if (\"select\" in selection) {\n      if (selection.reset) {\n        this.resetNodes();\n      } else {\n        this.selectRange(selection.deselect, false, source);\n      }\n      return this.selectRange(selection.select, true, source);\n    } else {\n      return this.setNodesSelected({\n        nodes: [selection.node],\n        newValue: selection.newValue,\n        clearSelection: selection.clearSelection,\n        keepDescendants: selection.keepDescendants,\n        event,\n        source\n      });\n    }\n  }\n  setNodesSelected({\n    newValue,\n    clearSelection,\n    suppressFinishActions,\n    nodes,\n    event,\n    source,\n    keepDescendants = false\n  }) {\n    if (!_isRowSelection(this.gos) && newValue) {\n      _warn(132);\n      return 0;\n    }\n    if (nodes.length === 0) return 0;\n    if (nodes.length > 1 && !this.isMultiSelect()) {\n      _warn(130);\n      return 0;\n    }\n    let updatedCount = 0;\n    for (let i = 0; i < nodes.length; i++) {\n      const rowNode = nodes[i];\n      const node = _normaliseSiblingRef(rowNode);\n      const skipThisNode = this.groupSelectsFiltered && node.group;\n      if (node.rowPinned && !_isManualPinnedRow(node)) {\n        _warn(59);\n        continue;\n      }\n      if (node.id === void 0) {\n        _warn(60);\n        continue;\n      }\n      if (!skipThisNode) {\n        const thisNodeWasSelected = this.selectRowNode(node, newValue, event, source);\n        if (thisNodeWasSelected) {\n          this.detailSelection.delete(node.id);\n          updatedCount++;\n        }\n      }\n      if (this.groupSelectsDescendants && node.childrenAfterGroup?.length) {\n        updatedCount += this.selectChildren(node, newValue, source);\n      }\n    }\n    if (!suppressFinishActions) {\n      if (nodes.length === 1 && source === \"api\") {\n        this.selectionCtx.setRoot(_normaliseSiblingRef(nodes[0]));\n      }\n      const clearOtherNodes = newValue && (clearSelection || !this.isMultiSelect());\n      if (clearOtherNodes) {\n        updatedCount += this.clearOtherNodes(_normaliseSiblingRef(nodes[0]), keepDescendants, source);\n      }\n      if (updatedCount > 0) {\n        this.updateGroupsFromChildrenSelections(source);\n        this.dispatchSelectionChanged(source);\n      }\n    }\n    return updatedCount;\n  }\n  // not to be mixed up with 'cell range selection' where you drag the mouse, this is row range selection, by\n  // holding down 'shift'.\n  selectRange(nodesToSelect, value, source) {\n    let updatedCount = 0;\n    nodesToSelect.forEach(node => {\n      const rowNode = _normaliseSiblingRef(node);\n      if (rowNode.group && this.groupSelectsDescendants) {\n        return;\n      }\n      const nodeWasSelected = this.selectRowNode(rowNode, value, void 0, source);\n      if (nodeWasSelected) {\n        updatedCount++;\n      }\n    });\n    if (updatedCount > 0) {\n      this.updateGroupsFromChildrenSelections(source);\n      this.dispatchSelectionChanged(source);\n    }\n    return updatedCount;\n  }\n  selectChildren(node, newValue, source) {\n    const children = this.groupSelectsFiltered ? node.childrenAfterAggFilter : node.childrenAfterGroup;\n    if (!children) {\n      return 0;\n    }\n    return this.setNodesSelected({\n      newValue,\n      clearSelection: false,\n      suppressFinishActions: true,\n      source,\n      nodes: children\n    });\n  }\n  getSelectedNodes() {\n    return Array.from(this.selectedNodes.values());\n  }\n  getSelectedRows() {\n    const selectedRows = [];\n    this.selectedNodes.forEach(rowNode => rowNode.data && selectedRows.push(rowNode.data));\n    return selectedRows;\n  }\n  getSelectionCount() {\n    return this.selectedNodes.size;\n  }\n  /**\n   * This method is used by the CSRM to remove groups which are being disposed of,\n   * events do not need fired in this case\n   */\n  filterFromSelection(predicate) {\n    const newSelectedNodes = /* @__PURE__ */new Map();\n    this.selectedNodes.forEach((rowNode, key) => {\n      if (predicate(rowNode)) {\n        newSelectedNodes.set(key, rowNode);\n      }\n    });\n    this.selectedNodes = newSelectedNodes;\n  }\n  updateGroupsFromChildrenSelections(source, changedPath) {\n    if (!this.groupSelectsDescendants) {\n      return false;\n    }\n    const {\n      gos,\n      rowModel\n    } = this.beans;\n    if (!_isClientSideRowModel(gos, rowModel)) {\n      return false;\n    }\n    const rootNode = rowModel.rootNode;\n    if (!rootNode) {\n      return false;\n    }\n    if (!changedPath) {\n      changedPath = new ChangedPath(true, rootNode);\n      changedPath.active = false;\n    }\n    let selectionChanged = false;\n    changedPath.forEachChangedNodeDepthFirst(rowNode => {\n      if (rowNode !== rootNode) {\n        const selected = this.calculateSelectedFromChildren(rowNode);\n        selectionChanged = this.selectRowNode(rowNode, selected === null ? false : selected, void 0, source) || selectionChanged;\n      }\n    });\n    return selectionChanged;\n  }\n  clearOtherNodes(rowNodeToKeepSelected, keepDescendants, source) {\n    const groupsToRefresh = /* @__PURE__ */new Map();\n    let updatedCount = 0;\n    this.selectedNodes.forEach(otherRowNode => {\n      const isNodeToKeep = otherRowNode.id == rowNodeToKeepSelected.id;\n      const shouldClearDescendant = keepDescendants ? !isDescendantOf(rowNodeToKeepSelected, otherRowNode) : true;\n      if (shouldClearDescendant && !isNodeToKeep) {\n        const rowNode = this.selectedNodes.get(otherRowNode.id);\n        updatedCount += this.setNodesSelected({\n          nodes: [rowNode],\n          newValue: false,\n          clearSelection: false,\n          suppressFinishActions: true,\n          source\n        });\n        if (this.groupSelectsDescendants && otherRowNode.parent) {\n          groupsToRefresh.set(otherRowNode.parent.id, otherRowNode.parent);\n        }\n      }\n    });\n    groupsToRefresh.forEach(group => {\n      const selected = this.calculateSelectedFromChildren(group);\n      this.selectRowNode(group, selected === null ? false : selected, void 0, source);\n    });\n    return updatedCount;\n  }\n  onRowSelected(event) {\n    const rowNode = event.node;\n    if (this.groupSelectsDescendants && rowNode.group) {\n      return;\n    }\n    if (rowNode.isSelected()) {\n      this.selectedNodes.set(rowNode.id, rowNode);\n    } else {\n      this.selectedNodes.delete(rowNode.id);\n    }\n  }\n  syncInRowNode(rowNode, oldNode) {\n    this.syncInOldRowNode(rowNode, oldNode);\n    this.syncInNewRowNode(rowNode);\n  }\n  createDaemonNode(rowNode) {\n    if (!rowNode.id) {\n      return void 0;\n    }\n    const oldNode = new RowNode(this.beans);\n    oldNode.id = rowNode.id;\n    oldNode.data = rowNode.data;\n    oldNode.__daemon = true;\n    oldNode.__selected = rowNode.__selected;\n    oldNode.level = rowNode.level;\n    return oldNode;\n  }\n  // if the id has changed for the node, then this means the rowNode\n  // is getting used for a different data item, which breaks\n  // our selectedNodes, as the node now is mapped by the old id\n  // which is inconsistent. so to keep the old node as selected,\n  // we swap in the clone (with the old id and old data). this means\n  // the oldNode is effectively a daemon we keep a reference to,\n  // so if client calls api.getSelectedNodes(), it gets the daemon\n  // in the result. when the client un-selects, the reference to the\n  // daemon is removed. the daemon, because it's an oldNode, is not\n  // used by the grid for rendering, it's a copy of what the node used\n  // to be like before the id was changed.\n  syncInOldRowNode(rowNode, oldNode) {\n    if (oldNode && rowNode.id !== oldNode.id) {\n      const oldNodeSelected = this.selectedNodes.get(oldNode.id) == rowNode;\n      if (oldNodeSelected) {\n        this.selectedNodes.set(oldNode.id, oldNode);\n      }\n    }\n  }\n  syncInNewRowNode(rowNode) {\n    if (this.selectedNodes.has(rowNode.id)) {\n      rowNode.__selected = true;\n      this.selectedNodes.set(rowNode.id, rowNode);\n    } else {\n      rowNode.__selected = false;\n    }\n  }\n  reset(source) {\n    const selectionCount = this.getSelectionCount();\n    this.resetNodes();\n    if (selectionCount) {\n      this.dispatchSelectionChanged(source);\n    }\n  }\n  resetNodes() {\n    this.selectedNodes.forEach(node => {\n      this.selectRowNode(node, false);\n    });\n    this.selectedNodes.clear();\n  }\n  // returns a list of all nodes at 'best cost' - a feature to be used\n  // with groups / trees. if a group has all it's children selected,\n  // then the group appears in the result, but not the children.\n  // Designed for use with 'children' as the group selection type,\n  // where groups don't actually appear in the selection normally.\n  getBestCostNodeSelection() {\n    const {\n      gos,\n      rowModel\n    } = this.beans;\n    if (!_isClientSideRowModel(gos, rowModel)) {\n      return;\n    }\n    const topLevelNodes = rowModel.getTopLevelNodes();\n    if (topLevelNodes === null) {\n      return;\n    }\n    const result = [];\n    function traverse(nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        const node = nodes[i];\n        if (node.isSelected()) {\n          result.push(node);\n        } else {\n          if (node.group && node.childrenAfterGroup) {\n            traverse(node.childrenAfterGroup);\n          }\n        }\n      }\n    }\n    traverse(topLevelNodes);\n    return result;\n  }\n  isEmpty() {\n    return this.getSelectionCount() === 0;\n  }\n  deselectAllRowNodes({\n    source,\n    selectAll: selectAll2\n  }) {\n    const rowModelClientSide = _isClientSideRowModel(this.gos);\n    let updatedNodes = false;\n    const callback = rowNode => {\n      const updated = this.selectRowNode(_normaliseSiblingRef(rowNode), false, void 0, source);\n      updatedNodes || (updatedNodes = updated);\n    };\n    if (selectAll2 === \"currentPage\" || selectAll2 === \"filtered\") {\n      if (!rowModelClientSide) {\n        _error(102);\n        return;\n      }\n      this.getNodesToSelect(selectAll2).forEach(callback);\n    } else {\n      this.selectedNodes.forEach(callback);\n      this.reset(source);\n    }\n    this.selectionCtx.selectAll = false;\n    if (rowModelClientSide && this.groupSelectsDescendants) {\n      const updated = this.updateGroupsFromChildrenSelections(source);\n      updatedNodes || (updatedNodes = updated);\n    }\n    if (updatedNodes) {\n      this.dispatchSelectionChanged(source);\n    }\n  }\n  getSelectedCounts(selectAll2) {\n    let selectedCount = 0;\n    let notSelectedCount = 0;\n    this.getNodesToSelect(selectAll2).forEach(node => {\n      if (this.groupSelectsDescendants && node.group) {\n        return;\n      }\n      if (node.isSelected()) {\n        selectedCount++;\n      } else if (node.selectable) {\n        notSelectedCount++;\n      }\n    });\n    return {\n      selectedCount,\n      notSelectedCount\n    };\n  }\n  getSelectAllState(selectAll2) {\n    const {\n      selectedCount,\n      notSelectedCount\n    } = this.getSelectedCounts(selectAll2);\n    return _calculateSelectAllState(selectedCount, notSelectedCount) ?? null;\n  }\n  hasNodesToSelect(selectAll2) {\n    return this.getNodesToSelect(selectAll2).filter(node => node.selectable).length > 0;\n  }\n  /**\n   * @param selectAll See `MultiRowSelectionOptions.selectAll`\n   * @returns all nodes including unselectable nodes which are the target of this selection attempt\n   */\n  getNodesToSelect(selectAll2) {\n    if (!this.canSelectAll()) {\n      return [];\n    }\n    const nodes = [];\n    const addToResult = node => nodes.push(node);\n    if (selectAll2 === \"currentPage\") {\n      this.forEachNodeOnPage(node => {\n        if (!node.group) {\n          addToResult(node);\n          return;\n        }\n        if (!node.expanded && !node.footer) {\n          const recursivelyAddChildren = child => {\n            addToResult(child);\n            child.childrenAfterFilter?.forEach(recursivelyAddChildren);\n          };\n          recursivelyAddChildren(node);\n          return;\n        }\n        if (!this.groupSelectsDescendants) {\n          addToResult(node);\n        }\n      });\n      return nodes;\n    }\n    const clientSideRowModel = this.beans.rowModel;\n    if (selectAll2 === \"filtered\") {\n      clientSideRowModel.forEachNodeAfterFilter(addToResult);\n      return nodes;\n    }\n    clientSideRowModel.forEachNode(addToResult);\n    return nodes;\n  }\n  forEachNodeOnPage(callback) {\n    const {\n      pageBounds,\n      rowModel\n    } = this.beans;\n    const firstRow = pageBounds.getFirstRow();\n    const lastRow = pageBounds.getLastRow();\n    for (let i = firstRow; i <= lastRow; i++) {\n      const node = rowModel.getRow(i);\n      if (node) {\n        callback(node);\n      }\n    }\n  }\n  selectAllRowNodes(params) {\n    const {\n      gos,\n      selectionCtx\n    } = this;\n    if (!_isRowSelection(gos)) {\n      _warn(132);\n      return;\n    }\n    if (_isUsingNewRowSelectionAPI(gos) && !_isMultiRowSelection(gos)) {\n      _warn(130);\n      return;\n    }\n    if (!this.canSelectAll()) {\n      return;\n    }\n    const {\n      source,\n      selectAll: selectAll2\n    } = params;\n    let updatedNodes = false;\n    this.getNodesToSelect(selectAll2).forEach(rowNode => {\n      const updated = this.selectRowNode(_normaliseSiblingRef(rowNode), true, void 0, source);\n      updatedNodes || (updatedNodes = updated);\n    });\n    selectionCtx.selectAll = true;\n    if (_isClientSideRowModel(gos) && this.groupSelectsDescendants) {\n      const updated = this.updateGroupsFromChildrenSelections(source);\n      updatedNodes || (updatedNodes = updated);\n    }\n    if (updatedNodes) {\n      this.dispatchSelectionChanged(source);\n    }\n  }\n  getSelectionState() {\n    return this.isEmpty() ? null : Array.from(this.selectedNodes.keys());\n  }\n  setSelectionState(state, source, clearSelection) {\n    if (!state) {\n      state = [];\n    }\n    if (!Array.isArray(state)) {\n      _error(103);\n      return;\n    }\n    const rowIds = new Set(state);\n    const nodes = [];\n    this.beans.rowModel.forEachNode(node => {\n      if (rowIds.has(node.id)) {\n        nodes.push(node);\n      }\n    });\n    if (clearSelection) {\n      this.resetNodes();\n    }\n    this.setNodesSelected({\n      newValue: true,\n      nodes,\n      source\n    });\n  }\n  canSelectAll() {\n    const {\n      gos\n    } = this.beans;\n    if (!_isClientSideRowModel(gos)) {\n      return false;\n    }\n    return true;\n  }\n  /**\n   * Updates the selectable state for a node by invoking isRowSelectable callback.\n   * If the node is not selectable, it will be deselected.\n   *\n   * Callers:\n   *  - property isRowSelectable changed\n   *  - after grouping / treeData via `updateSelectableAfterGrouping`\n   */\n  updateSelectable(changedPath) {\n    const {\n      gos,\n      rowModel\n    } = this.beans;\n    if (!_isRowSelection(gos)) {\n      return;\n    }\n    const source = \"selectableChanged\";\n    const skipLeafNodes = changedPath !== void 0;\n    const isCSRMGroupSelectsDescendants = _isClientSideRowModel(gos) && this.groupSelectsDescendants;\n    const nodesToDeselect = [];\n    const nodeCallback = node => {\n      if (skipLeafNodes && !node.group) {\n        return;\n      }\n      if (isCSRMGroupSelectsDescendants && node.group) {\n        const hasSelectableChild = node.childrenAfterGroup?.some(rowNode => rowNode.selectable) ?? false;\n        this.setRowSelectable(node, hasSelectableChild, true);\n        return;\n      }\n      const rowSelectable = this.updateRowSelectable(node, true);\n      if (!rowSelectable && node.isSelected()) {\n        nodesToDeselect.push(node);\n      }\n    };\n    if (isCSRMGroupSelectsDescendants) {\n      if (changedPath === void 0) {\n        const rootNode = rowModel.rootNode;\n        changedPath = rootNode ? new ChangedPath(false, rootNode) : void 0;\n      }\n      changedPath?.forEachChangedNodeDepthFirst(nodeCallback, !skipLeafNodes, !skipLeafNodes);\n    } else {\n      rowModel.forEachNode(nodeCallback);\n    }\n    if (nodesToDeselect.length) {\n      this.setNodesSelected({\n        nodes: nodesToDeselect,\n        newValue: false,\n        source\n      });\n    }\n    if (!skipLeafNodes && isCSRMGroupSelectsDescendants) {\n      this.updateGroupsFromChildrenSelections?.(source);\n    }\n  }\n  // only called by CSRM\n  updateSelectableAfterGrouping(changedPath) {\n    this.updateSelectable(changedPath);\n    if (this.groupSelectsDescendants) {\n      const selectionChanged = this.updateGroupsFromChildrenSelections?.(\"rowGroupChanged\", changedPath);\n      if (selectionChanged) {\n        this.dispatchSelectionChanged(\"rowGroupChanged\");\n      }\n    }\n  }\n  refreshMasterNodeState(node, e) {\n    if (!this.masterSelectsDetail) return;\n    const detailApi = node.detailNode?.detailGridInfo?.api;\n    if (!detailApi) return;\n    const isSelectAll = _isAllSelected(detailApi);\n    const current = node.isSelected();\n    if (current !== isSelectAll) {\n      const selectionChanged = this.selectRowNode(node, isSelectAll, e, \"masterDetail\");\n      if (selectionChanged) {\n        this.dispatchSelectionChanged(\"masterDetail\");\n      }\n    }\n    if (!isSelectAll) {\n      const detailSelected = this.detailSelection.get(node.id) ?? /* @__PURE__ */new Set();\n      for (const n of detailApi.getSelectedNodes()) {\n        detailSelected.add(n.id);\n      }\n      this.detailSelection.set(node.id, detailSelected);\n    }\n  }\n  setDetailSelectionState(masterNode, detailGridOptions, detailApi) {\n    if (!this.masterSelectsDetail) return;\n    if (!_isMultiRowSelection(detailGridOptions)) {\n      _warn(269);\n      return;\n    }\n    switch (masterNode.isSelected()) {\n      case true:\n        {\n          detailApi.selectAll();\n          break;\n        }\n      case false:\n        {\n          detailApi.deselectAll();\n          break;\n        }\n      case void 0:\n        {\n          const selectedIds = this.detailSelection.get(masterNode.id);\n          if (selectedIds) {\n            const nodes = [];\n            for (const id of selectedIds) {\n              const n = detailApi.getRowNode(id);\n              if (n) {\n                nodes.push(n);\n              }\n            }\n            detailApi.setNodesSelected({\n              nodes,\n              newValue: true,\n              source: \"masterDetail\"\n            });\n          }\n          break;\n        }\n      default:\n        break;\n    }\n  }\n  dispatchSelectionChanged(source) {\n    this.eventSvc.dispatchEvent({\n      type: \"selectionChanged\",\n      source,\n      selectedNodes: this.getSelectedNodes(),\n      serverSideState: null\n    });\n  }\n};\nfunction _normaliseSiblingRef(node) {\n  return _isManualPinnedRow(node) ? node.pinnedSibling : node.footer ? node.sibling : node;\n}\nfunction _isAllSelected(api) {\n  let selectedCount = 0;\n  let notSelectedCount = 0;\n  api.forEachNode(node => {\n    if (node.isSelected()) {\n      selectedCount++;\n    } else if (node.selectable) {\n      notSelectedCount++;\n    }\n  });\n  return _calculateSelectAllState(selectedCount, notSelectedCount);\n}\nfunction _calculateSelectAllState(selected, notSelected) {\n  if (selected === 0 && notSelected === 0) {\n    return false;\n  }\n  if (selected > 0 && notSelected > 0) {\n    return;\n  }\n  return selected > 0;\n}\nfunction isDescendantOf(root, child) {\n  let parent = child.parent;\n  while (parent) {\n    if (parent === root) return true;\n    parent = parent.parent;\n  }\n  return false;\n}\n\n// packages/ag-grid-community/src/selection/rowSelectionModule.ts\nvar SharedRowSelectionModule = {\n  moduleName: \"SharedRowSelection\",\n  version: VERSION,\n  beans: [SelectionColService],\n  apiFunctions: {\n    setNodesSelected,\n    selectAll,\n    deselectAll,\n    selectAllFiltered,\n    deselectAllFiltered,\n    selectAllOnCurrentPage,\n    deselectAllOnCurrentPage,\n    getSelectedNodes,\n    getSelectedRows\n  }\n};\nvar RowSelectionModule = {\n  moduleName: \"RowSelection\",\n  version: VERSION,\n  rowModels: [\"clientSide\", \"infinite\", \"viewport\"],\n  beans: [SelectionService],\n  dependsOn: [SharedRowSelectionModule]\n};\n\n// packages/ag-grid-community/src/api/csrmSsrmSharedApi.ts\nfunction expandAll(beans) {\n  beans.expansionSvc?.expandAll(true);\n}\nfunction collapseAll(beans) {\n  beans.expansionSvc?.expandAll(false);\n}\nfunction onRowHeightChanged(beans) {\n  const clientSideRowModel = _getClientSideRowModel(beans);\n  const serverSideRowModel = _getServerSideRowModel(beans);\n  if (clientSideRowModel) {\n    clientSideRowModel.onRowHeightChanged();\n  } else if (serverSideRowModel) {\n    serverSideRowModel.onRowHeightChanged();\n  }\n}\n\n// packages/ag-grid-community/src/api/ssrmInfiniteSharedApi.ts\nfunction setRowCount(beans, rowCount, maxRowFound) {\n  const serverSideRowModel = _getServerSideRowModel(beans);\n  if (serverSideRowModel) {\n    if (beans.rowGroupColsSvc?.columns.length === 0) {\n      if (rowCount < 0) {\n        _error(238);\n        return;\n      }\n      serverSideRowModel.setRowCount(rowCount, maxRowFound);\n      return;\n    }\n    _error(28);\n    return;\n  }\n  const infiniteRowModel = _getInfiniteRowModel(beans);\n  if (infiniteRowModel) {\n    infiniteRowModel.setRowCount(rowCount, maxRowFound);\n    return;\n  }\n}\nfunction getCacheBlockState(beans) {\n  if (_isServerSideRowModel(beans.gos)) {\n    const ssrm = beans.rowModel;\n    return ssrm.getBlockStates();\n  }\n  return beans.rowNodeBlockLoader?.getBlockState() ?? {};\n}\nfunction isLastRowIndexKnown(beans) {\n  return beans.rowModel.isLastRowIndexKnown();\n}\n\n// packages/ag-grid-community/src/api/sharedApiModule.ts\nvar CsrmSsrmSharedApiModule = {\n  moduleName: \"CsrmSsrmSharedApi\",\n  version: VERSION,\n  apiFunctions: {\n    expandAll,\n    collapseAll,\n    onRowHeightChanged\n  }\n};\nvar SsrmInfiniteSharedApiModule = {\n  moduleName: \"SsrmInfiniteSharedApi\",\n  version: VERSION,\n  apiFunctions: {\n    setRowCount,\n    getCacheBlockState,\n    isLastRowIndexKnown\n  }\n};\n\n// packages/ag-grid-community/src/alignedGrids/alignedGridsService.ts\nvar AlignedGridsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"alignedGridsSvc\";\n    // flag to mark if we are consuming. to avoid cyclic events (ie other grid firing back to master\n    // while processing a master event) we mark this if consuming an event, and if we are, then\n    // we don't fire back any events.\n    this.consuming = false;\n  }\n  getAlignedGridApis() {\n    let alignedGrids = this.gos.get(\"alignedGrids\") ?? [];\n    const isCallbackConfig = typeof alignedGrids === \"function\";\n    if (typeof alignedGrids === \"function\") {\n      alignedGrids = alignedGrids();\n    }\n    const apis = alignedGrids.map(alignedGrid => {\n      if (!alignedGrid) {\n        _error(18);\n        if (!isCallbackConfig) {\n          _error(20);\n        }\n        return;\n      }\n      if (this.isGridApi(alignedGrid)) {\n        return alignedGrid;\n      }\n      const refOrComp = alignedGrid;\n      if (\"current\" in refOrComp) {\n        return refOrComp.current?.api;\n      }\n      if (!refOrComp.api) {\n        _error(19);\n      }\n      return refOrComp.api;\n    }).filter(api => !!api && !api.isDestroyed());\n    return apis;\n  }\n  isGridApi(ref) {\n    return !!ref && !!ref.dispatchEvent;\n  }\n  postConstruct() {\n    const fireColumnEvent = this.fireColumnEvent.bind(this);\n    this.addManagedEventListeners({\n      columnMoved: fireColumnEvent,\n      columnVisible: fireColumnEvent,\n      columnPinned: fireColumnEvent,\n      columnGroupOpened: fireColumnEvent,\n      columnResized: fireColumnEvent,\n      bodyScroll: this.fireScrollEvent.bind(this),\n      alignedGridColumn: ({\n        event\n      }) => this.onColumnEvent(event),\n      alignedGridScroll: ({\n        event\n      }) => this.onScrollEvent(event)\n    });\n  }\n  // common logic across all the fire methods\n  fireEvent(event) {\n    if (this.consuming) {\n      return;\n    }\n    this.getAlignedGridApis().forEach(api => {\n      if (api.isDestroyed()) {\n        return;\n      }\n      api.dispatchEvent(event);\n    });\n  }\n  // common logic across all consume methods. very little common logic, however extracting\n  // guarantees consistency across the methods.\n  onEvent(callback) {\n    this.consuming = true;\n    callback();\n    this.consuming = false;\n  }\n  fireColumnEvent(columnEvent) {\n    this.fireEvent({\n      type: \"alignedGridColumn\",\n      event: columnEvent\n    });\n  }\n  fireScrollEvent(scrollEvent) {\n    if (scrollEvent.direction !== \"horizontal\") {\n      return;\n    }\n    this.fireEvent({\n      type: \"alignedGridScroll\",\n      event: scrollEvent\n    });\n  }\n  onScrollEvent(event) {\n    this.onEvent(() => {\n      this.beans.ctrlsSvc.getScrollFeature().setHorizontalScrollPosition(event.left, true);\n    });\n  }\n  extractDataFromEvent(event, func) {\n    const result = [];\n    if (event.columns) {\n      event.columns.forEach(column => {\n        result.push(func(column));\n      });\n    } else if (event.column) {\n      result.push(func(event.column));\n    }\n    return result;\n  }\n  getMasterColumns(event) {\n    return this.extractDataFromEvent(event, col => col);\n  }\n  getColumnIds(event) {\n    return this.extractDataFromEvent(event, col => col.getColId());\n  }\n  onColumnEvent(event) {\n    this.onEvent(() => {\n      switch (event.type) {\n        case \"columnMoved\":\n        case \"columnVisible\":\n        case \"columnPinned\":\n        case \"columnResized\":\n          {\n            this.processColumnEvent(event);\n            break;\n          }\n        case \"columnGroupOpened\":\n          {\n            this.processGroupOpenedEvent(event);\n            break;\n          }\n        case \"columnPivotChanged\":\n          _warn(21);\n          break;\n      }\n    });\n  }\n  processGroupOpenedEvent(groupOpenedEvent) {\n    const {\n      colGroupSvc\n    } = this.beans;\n    if (!colGroupSvc) {\n      return;\n    }\n    groupOpenedEvent.columnGroups.forEach(masterGroup => {\n      let otherColumnGroup = null;\n      if (masterGroup) {\n        otherColumnGroup = colGroupSvc.getProvidedColGroup(masterGroup.getGroupId());\n      }\n      if (masterGroup && !otherColumnGroup) {\n        return;\n      }\n      colGroupSvc.setColumnGroupOpened(otherColumnGroup, masterGroup.isExpanded(), \"alignedGridChanged\");\n    });\n  }\n  processColumnEvent(colEvent) {\n    const masterColumn = colEvent.column;\n    let otherColumn = null;\n    const beans = this.beans;\n    const {\n      colResize,\n      ctrlsSvc,\n      colModel\n    } = beans;\n    if (masterColumn) {\n      otherColumn = colModel.getColDefCol(masterColumn.getColId());\n    }\n    if (masterColumn && !otherColumn) {\n      return;\n    }\n    const masterColumns = this.getMasterColumns(colEvent);\n    switch (colEvent.type) {\n      case \"columnMoved\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map(s => ({\n            colId: s.colId\n          }));\n          _applyColumnState(beans, {\n            state: destColState,\n            applyOrder: true\n          }, \"alignedGridChanged\");\n        }\n        break;\n      case \"columnVisible\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map(s => ({\n            colId: s.colId,\n            hide: s.hide\n          }));\n          _applyColumnState(beans, {\n            state: destColState\n          }, \"alignedGridChanged\");\n        }\n        break;\n      case \"columnPinned\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map(s => ({\n            colId: s.colId,\n            pinned: s.pinned\n          }));\n          _applyColumnState(beans, {\n            state: destColState\n          }, \"alignedGridChanged\");\n        }\n        break;\n      case \"columnResized\":\n        {\n          const resizedEvent = colEvent;\n          const columnWidths = {};\n          masterColumns.forEach(column => {\n            columnWidths[column.getId()] = {\n              key: column.getColId(),\n              newWidth: column.getActualWidth()\n            };\n          });\n          resizedEvent.flexColumns?.forEach(col => {\n            if (columnWidths[col.getId()]) {\n              delete columnWidths[col.getId()];\n            }\n          });\n          colResize?.setColumnWidths(Object.values(columnWidths), false, resizedEvent.finished, \"alignedGridChanged\");\n          break;\n        }\n    }\n    const gridBodyCon = ctrlsSvc.getGridBodyCtrl();\n    const isVerticalScrollShowing = gridBodyCon.isVerticalScrollShowing();\n    this.getAlignedGridApis().forEach(api => {\n      api.setGridOption(\"alwaysShowVerticalScroll\", isVerticalScrollShowing);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/alignedGrids/alignedGridsModule.ts\nvar AlignedGridsModule = {\n  moduleName: \"AlignedGrids\",\n  version: VERSION,\n  beans: [AlignedGridsService],\n  dependsOn: [ColumnApiModule]\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/clientSideNodeManager.ts\nvar ClientSideNodeManager = class extends AbstractClientSideNodeManager {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"csrmNodeSvc\";\n  }\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/changedRowNodes.ts\nvar ChangedRowNodes = class {\n  constructor() {\n    this.removals = /* @__PURE__ */new Set();\n    this.updates = /* @__PURE__ */new Set();\n    this.adds = /* @__PURE__ */new Set();\n  }\n  /** Marks a row as removed. Order of operations is: remove, update, add */\n  remove(node) {\n    if (!this.adds.delete(node)) {\n      this.updates.delete(node);\n      this.removals.add(node);\n    }\n  }\n  /** Marks a row as updated. Order of operations is: remove, update, add */\n  update(node) {\n    if (!this.adds.has(node)) {\n      this.updates.add(node);\n    }\n  }\n  /** Marks a row as added. Order of operation is: remove, update, add */\n  add(node) {\n    this.adds.add(node);\n  }\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/sortStage.ts\nfunction updateChildIndexes(rowNode) {\n  if (_missing(rowNode.childrenAfterSort)) {\n    return;\n  }\n  const listToSort = rowNode.childrenAfterSort;\n  for (let i = 0; i < listToSort.length; i++) {\n    const child = listToSort[i];\n    const firstChild = i === 0;\n    const lastChild = i === rowNode.childrenAfterSort.length - 1;\n    child.setFirstChild(firstChild);\n    if (child.lastChild !== lastChild) {\n      child.lastChild = lastChild;\n      child.dispatchRowEvent(\"lastChildChanged\");\n    }\n    if (child.childIndex !== i) {\n      child.childIndex = i;\n      child.dispatchRowEvent(\"childIndexChanged\");\n    }\n  }\n}\nfunction updateRowNodeAfterSort(rowNode) {\n  if (rowNode.sibling) {\n    rowNode.sibling.childrenAfterSort = rowNode.childrenAfterSort;\n  }\n  updateChildIndexes(rowNode);\n}\nvar SortStage = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"sortStage\";\n    this.refreshProps = /* @__PURE__ */new Set([\"postSortRows\", \"groupDisplayType\", \"accentedSort\"]);\n    this.step = \"sort\";\n  }\n  execute(params) {\n    const beans = this.beans;\n    const sortOptions = beans.sortSvc.getSortOptions();\n    const sortActive = _exists(sortOptions) && sortOptions.length > 0;\n    const deltaSort = sortActive && !!params.changedRowNodes &&\n    // in time we can remove this check, so that delta sort is always\n    // on if transactions are present. it's off for now so that we can\n    // selectively turn it on and test it with some select users before\n    // rolling out to everyone.\n    this.gos.get(\"deltaSort\");\n    const sortContainsGroupColumns = sortOptions.some(({\n      column\n    }) => {\n      const isSortingCoupled = _isColumnsSortingCoupledToGroup(beans.gos);\n      if (isSortingCoupled) {\n        return column.isPrimary() && column.isRowGroupActive();\n      }\n      return !!column.getColDef().showRowGroup;\n    });\n    this.sort(beans, sortOptions, sortActive, deltaSort, params.changedRowNodes, params.changedPath, sortContainsGroupColumns);\n  }\n  sort(beans, sortOptions, sortActive, useDeltaSort, changedRowNodes, changedPath, sortContainsGroupColumns) {\n    const {\n      gos,\n      colModel,\n      rowGroupColsSvc,\n      rowNodeSorter,\n      rowRenderer,\n      showRowGroupCols\n    } = beans;\n    const groupMaintainOrder = gos.get(\"groupMaintainOrder\");\n    const groupColumnsPresent = colModel.getCols().some(c => c.isRowGroupActive());\n    const isPivotMode = colModel.isPivotMode();\n    const postSortFunc = gos.getCallback(\"postSortRows\");\n    let hasAnyFirstChildChanged = false;\n    const callback = rowNode => {\n      const skipSortingPivotLeafs = isPivotMode && rowNode.leafGroup;\n      const skipSortingGroups = groupMaintainOrder && groupColumnsPresent && !rowNode.leafGroup && !sortContainsGroupColumns;\n      let newChildrenAfterSort;\n      if (skipSortingGroups) {\n        const nextGroup = rowGroupColsSvc?.columns?.[rowNode.level + 1];\n        const wasSortExplicitlyRemoved = nextGroup?.getSort() === null;\n        const childrenToBeSorted = rowNode.childrenAfterAggFilter.slice(0);\n        if (rowNode.childrenAfterSort && !wasSortExplicitlyRemoved) {\n          const indexedOrders = {};\n          rowNode.childrenAfterSort.forEach((node, idx) => {\n            indexedOrders[node.id] = idx;\n          });\n          childrenToBeSorted.sort((row1, row2) => (indexedOrders[row1.id] ?? 0) - (indexedOrders[row2.id] ?? 0));\n        }\n        newChildrenAfterSort = childrenToBeSorted;\n      } else if (!sortActive || skipSortingPivotLeafs) {\n        newChildrenAfterSort = rowNode.childrenAfterAggFilter.slice(0);\n      } else if (useDeltaSort && changedRowNodes) {\n        newChildrenAfterSort = doDeltaSort(rowNodeSorter, rowNode, changedRowNodes, changedPath, sortOptions);\n      } else {\n        newChildrenAfterSort = rowNodeSorter.doFullSort(rowNode.childrenAfterAggFilter, sortOptions);\n      }\n      hasAnyFirstChildChanged || (hasAnyFirstChildChanged = rowNode.childrenAfterSort?.[0] !== newChildrenAfterSort[0]);\n      rowNode.childrenAfterSort = newChildrenAfterSort;\n      updateRowNodeAfterSort(rowNode);\n      if (postSortFunc) {\n        const params = {\n          nodes: rowNode.childrenAfterSort\n        };\n        postSortFunc(params);\n      }\n    };\n    changedPath?.forEachChangedNodeDepthFirst(callback);\n    if (hasAnyFirstChildChanged && this.gos.get(\"groupHideOpenParents\")) {\n      const columns = showRowGroupCols?.getShowRowGroupCols();\n      if (columns?.length) {\n        rowRenderer.refreshCells({\n          columns,\n          force: true\n        });\n      }\n    }\n  }\n};\nfunction doDeltaSort(rowNodeSorter, rowNode, changedRowNodes, changedPath, sortOptions) {\n  const unsortedRows = rowNode.childrenAfterAggFilter;\n  const oldSortedRows = rowNode.childrenAfterSort;\n  if (!oldSortedRows) {\n    return rowNodeSorter.doFullSort(unsortedRows, sortOptions);\n  }\n  const untouchedRows = /* @__PURE__ */new Set();\n  const touchedRows = [];\n  const {\n    updates,\n    adds\n  } = changedRowNodes;\n  for (let i = 0, len = unsortedRows.length; i < len; ++i) {\n    const row = unsortedRows[i];\n    if (updates.has(row) || adds.has(row) || changedPath && !changedPath.canSkip(row)) {\n      touchedRows.push({\n        currentPos: touchedRows.length,\n        rowNode: row\n      });\n    } else {\n      untouchedRows.add(row.id);\n    }\n  }\n  const sortedUntouchedRows = oldSortedRows.filter(child => untouchedRows.has(child.id)).map((rowNode2, currentPos) => ({\n    currentPos,\n    rowNode: rowNode2\n  }));\n  touchedRows.sort((a, b) => rowNodeSorter.compareRowNodes(sortOptions, a, b));\n  return mergeSortedArrays(rowNodeSorter, sortOptions, touchedRows, sortedUntouchedRows);\n}\nfunction mergeSortedArrays(rowNodeSorter, sortOptions, arr1, arr2) {\n  const res = [];\n  let i = 0;\n  let j = 0;\n  const arr1Length = arr1.length;\n  const arr2Length = arr2.length;\n  while (i < arr1Length && j < arr2Length) {\n    const a = arr1[i];\n    const b = arr2[j];\n    const compareResult = rowNodeSorter.compareRowNodes(sortOptions, a, b);\n    let chosen;\n    if (compareResult < 0) {\n      chosen = a;\n      ++i;\n    } else {\n      chosen = b;\n      ++j;\n    }\n    res.push(chosen.rowNode);\n  }\n  while (i < arr1Length) {\n    res.push(arr1[i++].rowNode);\n  }\n  while (j < arr2Length) {\n    res.push(arr2[j++].rowNode);\n  }\n  return res;\n}\n\n// packages/ag-grid-community/src/clientSideRowModel/clientSideRowModel.ts\nvar ClientSideRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowModel\";\n    // top most node of the tree. the children are the user provided data.\n    this.rootNode = null;\n    this.rowsToDisplay = [];\n    /** Keep track if row data was updated. Important with suppressModelUpdateAfterUpdateTransaction and refreshModel api is called  */\n    this.rowDataUpdatedPending = false;\n    /** Has the start method been called */\n    this.started = false;\n    /**\n     * This is to prevent refresh model being called when it's already being called.\n     * E.g. the group stage can trigger initial state filter model to be applied. This fires onFilterChanged,\n     * which then triggers the listener here that calls refresh model again but at the filter stage\n     * (which is about to be run by the original call).\n     */\n    this.isRefreshingModel = false;\n    this.rowNodesCountReady = false;\n    this.rowCountReady = false;\n    this.onRowHeightChanged_debounced = _debounce(this, this.onRowHeightChanged.bind(this), 100);\n  }\n  wireBeans(beans) {\n    this.colModel = beans.colModel;\n    this.valueCache = beans.valueCache;\n    this.filterStage = beans.filterStage;\n    this.sortStage = beans.sortStage;\n    this.flattenStage = beans.flattenStage;\n    this.groupStage = beans.groupStage;\n    this.aggStage = beans.aggStage;\n    this.pivotStage = beans.pivotStage;\n    this.filterAggStage = beans.filterAggStage;\n  }\n  postConstruct() {\n    this.orderedStages = [this.groupStage, this.filterStage, this.pivotStage, this.aggStage, this.sortStage, this.filterAggStage, this.flattenStage].filter(stage => !!stage);\n    const refreshEverythingFunc = this.refreshModel.bind(this, {\n      step: \"group\"\n    });\n    const refreshEverythingAfterColsChangedFunc = this.refreshModel.bind(this, {\n      step: \"group\",\n      // after cols change, row grouping (the first stage) could of changed\n      afterColumnsChanged: true,\n      keepRenderedRows: true,\n      // we want animations cos sorting or filtering could be applied\n      animate: !this.gos.get(\"suppressAnimationFrame\")\n    });\n    this.addManagedEventListeners({\n      newColumnsLoaded: refreshEverythingAfterColsChangedFunc,\n      columnRowGroupChanged: refreshEverythingFunc,\n      columnValueChanged: this.onValueChanged.bind(this),\n      columnPivotChanged: this.refreshModel.bind(this, {\n        step: \"pivot\"\n      }),\n      filterChanged: this.onFilterChanged.bind(this),\n      sortChanged: this.onSortChanged.bind(this),\n      columnPivotModeChanged: refreshEverythingFunc,\n      gridStylesChanged: this.onGridStylesChanges.bind(this),\n      gridReady: this.onGridReady.bind(this)\n    });\n    this.addPropertyListeners();\n    this.rootNode = new RowNode(this.beans);\n    const nodeManager = this.getNewNodeManager();\n    this.nodeManager = nodeManager;\n    nodeManager.activate(this.rootNode);\n  }\n  getNewNodeManager() {\n    const {\n      gos,\n      beans\n    } = this;\n    return _getGroupingApproach(gos) === \"treeNested\" && beans.csrmChildrenTreeNodeSvc || beans.csrmNodeSvc;\n  }\n  addPropertyListeners() {\n    const allProps = [\"treeData\", \"treeDataChildrenField\", ...this.orderedStages.flatMap(({\n      refreshProps\n    }) => [...refreshProps])];\n    this.addManagedPropertyListeners(allProps, params => {\n      const properties = params.changeSet?.properties;\n      if (properties) {\n        this.onPropChange(properties);\n      }\n    });\n    this.addManagedPropertyListener(\"rowData\", () => this.onPropChange([\"rowData\"]));\n    this.addManagedPropertyListener(\"rowHeight\", () => this.resetRowHeights());\n  }\n  start() {\n    this.started = true;\n    if (this.rowNodesCountReady) {\n      this.refreshModel({\n        step: \"group\",\n        rowDataUpdated: true,\n        newData: true\n      });\n    } else {\n      this.setInitialData();\n    }\n  }\n  setInitialData() {\n    const rowData = this.gos.get(\"rowData\");\n    if (rowData) {\n      this.onPropChange([\"rowData\"]);\n    }\n  }\n  ensureRowHeightsValid(startPixel, endPixel, startLimitIndex, endLimitIndex) {\n    let atLeastOneChange;\n    let res = false;\n    do {\n      atLeastOneChange = false;\n      const rowAtStartPixel = this.getRowIndexAtPixel(startPixel);\n      const rowAtEndPixel = this.getRowIndexAtPixel(endPixel);\n      const firstRow = Math.max(rowAtStartPixel, startLimitIndex);\n      const lastRow = Math.min(rowAtEndPixel, endLimitIndex);\n      for (let rowIndex = firstRow; rowIndex <= lastRow; rowIndex++) {\n        const rowNode = this.getRow(rowIndex);\n        if (rowNode.rowHeightEstimated) {\n          const rowHeight = _getRowHeightForNode(this.beans, rowNode);\n          rowNode.setRowHeight(rowHeight.height);\n          atLeastOneChange = true;\n          res = true;\n        }\n      }\n      if (atLeastOneChange) {\n        this.setRowTopAndRowIndex();\n      }\n    } while (atLeastOneChange);\n    return res;\n  }\n  onPropChange(properties) {\n    if (!this.rootNode) {\n      return;\n    }\n    const gos = this.gos;\n    const changedProps = new Set(properties);\n    const params = {\n      step: \"nothing\",\n      changedProps\n    };\n    const rowDataChanged = changedProps.has(\"rowData\");\n    const oldNodeManager = this.nodeManager;\n    const nodeManager = this.getNewNodeManager();\n    const reset = oldNodeManager !== nodeManager || rowDataChanged && changedProps.has(\"treeData\") && gos.get(\"treeData\") || changedProps.has(\"treeDataChildrenField\") && gos.get(\"treeData\");\n    let newRowData;\n    if (reset || rowDataChanged) {\n      newRowData = gos.get(\"rowData\");\n      if (newRowData != null && !Array.isArray(newRowData)) {\n        newRowData = null;\n        _warn(1);\n      }\n    }\n    if (reset) {\n      if (!rowDataChanged) {\n        newRowData = oldNodeManager?.extractRowData() ?? newRowData;\n      }\n      if (oldNodeManager !== nodeManager) {\n        oldNodeManager?.deactivate();\n        this.nodeManager = nodeManager;\n      }\n      nodeManager.activate(this.rootNode);\n    }\n    if (newRowData) {\n      const immutable = !reset && !this.isEmpty() && newRowData.length > 0 && gos.exists(\"getRowId\") &&\n      // this property is a backwards compatibility property, for those who want\n      // the old behaviour of Row IDs but NOT Immutable Data.\n      !gos.get(\"resetRowDataOnUpdate\");\n      if (immutable) {\n        params.keepRenderedRows = true;\n        params.animate = !this.gos.get(\"suppressAnimationFrame\");\n        params.changedRowNodes = new ChangedRowNodes();\n        nodeManager.setImmutableRowData(params, newRowData);\n      } else {\n        params.rowDataUpdated = true;\n        params.newData = true;\n        const {\n          selectionSvc,\n          pinnedRowModel\n        } = this.beans;\n        selectionSvc?.reset(\"rowDataChanged\");\n        if (pinnedRowModel?.isManual()) {\n          pinnedRowModel.reset();\n        }\n        this.rowNodesCountReady = true;\n        nodeManager.setNewRowData(newRowData);\n      }\n    }\n    if (params.rowDataUpdated) {\n      params.step = \"group\";\n    } else if (params.step === \"nothing\") {\n      for (const {\n        refreshProps,\n        step\n      } of this.orderedStages) {\n        if (properties.some(prop => refreshProps.has(prop))) {\n          params.step = step;\n          break;\n        }\n      }\n    }\n    if (params.step !== \"nothing\") {\n      this.refreshModel(params);\n    }\n  }\n  setRowTopAndRowIndex() {\n    const {\n      beans,\n      rowsToDisplay\n    } = this;\n    const defaultRowHeight = beans.environment.getDefaultRowHeight();\n    let nextRowTop = 0;\n    const displayedRowsMapped = /* @__PURE__ */new Set();\n    const allowEstimate = _isDomLayout(this.gos, \"normal\");\n    for (let i = 0, len = rowsToDisplay.length; i < len; ++i) {\n      const rowNode = rowsToDisplay[i];\n      if (rowNode.id != null) {\n        displayedRowsMapped.add(rowNode.id);\n      }\n      if (rowNode.rowHeight == null) {\n        const rowHeight = _getRowHeightForNode(beans, rowNode, allowEstimate, defaultRowHeight);\n        rowNode.setRowHeight(rowHeight.height, rowHeight.estimated);\n      }\n      rowNode.setRowTop(nextRowTop);\n      rowNode.setRowIndex(i);\n      nextRowTop += rowNode.rowHeight;\n    }\n    return displayedRowsMapped;\n  }\n  clearRowTopAndRowIndex(changedPath, displayedRowsMapped) {\n    const changedPathActive = changedPath.active;\n    const clearIfNotDisplayed = rowNode => {\n      if (rowNode && rowNode.id != null && !displayedRowsMapped.has(rowNode.id)) {\n        rowNode.clearRowTopAndRowIndex();\n      }\n    };\n    const recurse = rowNode => {\n      if (rowNode === null) {\n        return;\n      }\n      clearIfNotDisplayed(rowNode);\n      clearIfNotDisplayed(rowNode.detailNode);\n      clearIfNotDisplayed(rowNode.sibling);\n      if (rowNode.hasChildren()) {\n        if (rowNode.childrenAfterGroup) {\n          const isRootNode = rowNode.level == -1;\n          const skipChildren = changedPathActive && !isRootNode && !rowNode.expanded;\n          if (!skipChildren) {\n            rowNode.childrenAfterGroup.forEach(recurse);\n          }\n        }\n      }\n    };\n    recurse(this.rootNode);\n  }\n  isLastRowIndexKnown() {\n    return true;\n  }\n  getRowCount() {\n    if (this.rowsToDisplay) {\n      return this.rowsToDisplay.length;\n    }\n    return 0;\n  }\n  /**\n   * Returns the number of rows with level === 1\n   */\n  getTopLevelRowCount() {\n    const rootNode = this.rootNode;\n    if (!rootNode) {\n      return 0;\n    }\n    if (this.rowsToDisplay.length === 0) {\n      return 0;\n    }\n    const showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === rootNode;\n    if (showingRootNode) {\n      return 1;\n    }\n    const filteredChildren = rootNode.childrenAfterSort;\n    const totalFooterInc = rootNode.sibling && rootNode.sibling.displayed ? 1 : 0;\n    return (filteredChildren ? filteredChildren.length : 0) + totalFooterInc;\n  }\n  /**\n   * Get the row display index by the top level index\n   * top level index is the index of rows with level === 1\n   */\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\n    const {\n      rootNode,\n      rowsToDisplay\n    } = this;\n    const showingRootNode = !rootNode || !rowsToDisplay.length || rowsToDisplay[0] === rootNode;\n    if (showingRootNode) {\n      return topLevelIndex;\n    }\n    const {\n      childrenAfterSort\n    } = rootNode;\n    const getDefaultIndex = adjustedIndex => {\n      let rowNode = childrenAfterSort[adjustedIndex];\n      if (this.gos.get(\"groupHideOpenParents\")) {\n        while (rowNode.expanded && rowNode.childrenAfterSort && rowNode.childrenAfterSort.length > 0) {\n          rowNode = rowNode.childrenAfterSort[0];\n        }\n      }\n      return rowNode.rowIndex;\n    };\n    const {\n      footerSvc\n    } = this.beans;\n    if (footerSvc) {\n      return footerSvc.getTopDisplayIndex(rowsToDisplay, topLevelIndex, childrenAfterSort, getDefaultIndex);\n    } else {\n      return getDefaultIndex(topLevelIndex);\n    }\n  }\n  /**\n   * The opposite of `getTopLevelRowDisplayedIndex`\n   */\n  getTopLevelIndexFromDisplayedIndex(displayedIndex) {\n    const {\n      rootNode,\n      rowsToDisplay\n    } = this;\n    const showingRootNode = !rootNode || !rowsToDisplay.length || rowsToDisplay[0] === rootNode;\n    if (showingRootNode) {\n      return displayedIndex;\n    }\n    let node = this.getRow(displayedIndex);\n    if (node.footer) {\n      node = node.sibling;\n    }\n    while (node.parent && node.parent !== rootNode) {\n      node = node.parent;\n    }\n    const topLevelIndex = rootNode.childrenAfterSort?.findIndex(childNode => childNode === node);\n    return topLevelIndex === -1 ? displayedIndex : topLevelIndex ?? displayedIndex;\n  }\n  getRowBounds(index) {\n    const rowNode = this.rowsToDisplay[index];\n    if (rowNode) {\n      return {\n        rowTop: rowNode.rowTop,\n        rowHeight: rowNode.rowHeight\n      };\n    }\n    return null;\n  }\n  onRowGroupOpened() {\n    const animate = _isAnimateRows(this.gos);\n    this.refreshModel({\n      step: \"map\",\n      keepRenderedRows: true,\n      animate\n    });\n  }\n  onFilterChanged(event) {\n    if (event.afterDataChange) {\n      return;\n    }\n    const animate = _isAnimateRows(this.gos);\n    const primaryOrQuickFilterChanged = event.columns.length === 0 || event.columns.some(col => col.isPrimary());\n    const step = primaryOrQuickFilterChanged ? \"filter\" : \"filter_aggregates\";\n    this.refreshModel({\n      step,\n      keepRenderedRows: true,\n      animate\n    });\n  }\n  onSortChanged() {\n    const animate = _isAnimateRows(this.gos);\n    this.refreshModel({\n      step: \"sort\",\n      keepRenderedRows: true,\n      animate\n    });\n  }\n  getType() {\n    return \"clientSide\";\n  }\n  onValueChanged() {\n    this.refreshModel({\n      step: this.colModel.isPivotActive() ? \"pivot\" : \"aggregate\"\n    });\n  }\n  createChangePath(enabled) {\n    const changedPath = new ChangedPath(false, this.rootNode);\n    if (!enabled) {\n      changedPath.active = false;\n    }\n    return changedPath;\n  }\n  isSuppressModelUpdateAfterUpdateTransaction(params) {\n    if (!this.gos.get(\"suppressModelUpdateAfterUpdateTransaction\")) {\n      return false;\n    }\n    const {\n      changedRowNodes,\n      newData,\n      rowDataUpdated\n    } = params;\n    if (!changedRowNodes || newData || !rowDataUpdated) {\n      return false;\n    }\n    if (changedRowNodes.removals.size || changedRowNodes.adds.size) {\n      return false;\n    }\n    return true;\n  }\n  refreshModel(params) {\n    if (!this.rootNode) {\n      return;\n    }\n    const beans = this.beans;\n    let rowDataUpdated = !!params.rowDataUpdated;\n    const changedPath = params.changedPath ?? (params.changedPath = this.createChangePath(!params.newData && rowDataUpdated));\n    if (this.started && rowDataUpdated) {\n      this.eventSvc.dispatchEvent({\n        type: \"rowDataUpdated\"\n      });\n    }\n    this.rowDataUpdatedPending || (this.rowDataUpdatedPending = rowDataUpdated);\n    if (!this.started || this.isRefreshingModel || this.colModel.changeEventsDispatching || this.isSuppressModelUpdateAfterUpdateTransaction(params)) {\n      return;\n    }\n    if (this.rowDataUpdatedPending) {\n      this.rowDataUpdatedPending = false;\n      params.rowDataUpdated = rowDataUpdated = true;\n    }\n    this.isRefreshingModel = true;\n    beans.masterDetailSvc?.refreshModel(params);\n    if (rowDataUpdated && params.step !== \"group\") {\n      beans.colFilter?.refreshModel();\n    }\n    switch (params.step) {\n      case \"group\":\n        {\n          const groupingChanged = this.doRowGrouping(params);\n          if (groupingChanged || rowDataUpdated) {\n            beans.colFilter?.refreshModel();\n          }\n          if (!this.rowCountReady && this.rowNodesCountReady) {\n            this.rowCountReady = true;\n            this.eventSvc.dispatchEventOnce({\n              type: \"rowCountReady\"\n            });\n          }\n        }\n      case \"filter\":\n        this.doFilter(changedPath);\n      case \"pivot\":\n        this.doPivot(changedPath);\n      case \"aggregate\":\n        this.doAggregate(changedPath);\n      case \"filter_aggregates\":\n        this.doFilterAggregates(changedPath);\n      case \"sort\":\n        this.doSort(params.changedRowNodes, changedPath);\n      case \"map\":\n        this.doRowsToDisplay();\n    }\n    const displayedNodesMapped = this.setRowTopAndRowIndex();\n    this.clearRowTopAndRowIndex(changedPath, displayedNodesMapped);\n    this.isRefreshingModel = false;\n    this.eventSvc.dispatchEvent({\n      type: \"modelUpdated\",\n      animate: params.animate,\n      keepRenderedRows: params.keepRenderedRows,\n      newData: params.newData,\n      newPage: false,\n      keepUndoRedoStack: params.keepUndoRedoStack\n    });\n  }\n  isEmpty() {\n    return !this.rootNode?.allLeafChildren?.length || !this.colModel?.ready;\n  }\n  isRowsToRender() {\n    return this.rowsToDisplay.length > 0;\n  }\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\n    let started = false;\n    let finished = false;\n    const result = [];\n    const groupsSelectChildren = _getGroupSelectsDescendants(this.gos);\n    this.forEachNodeAfterFilterAndSort(rowNode => {\n      if (finished) {\n        return;\n      }\n      if (started) {\n        if (rowNode === lastInRange || rowNode === firstInRange) {\n          finished = true;\n          if (rowNode.group && groupsSelectChildren) {\n            result.push(...rowNode.allLeafChildren);\n            return;\n          }\n        }\n      }\n      if (!started) {\n        if (rowNode !== lastInRange && rowNode !== firstInRange) {\n          return;\n        }\n        started = true;\n      }\n      const includeThisNode = !rowNode.group || !groupsSelectChildren;\n      if (includeThisNode) {\n        result.push(rowNode);\n        return;\n      }\n    });\n    return result;\n  }\n  getTopLevelNodes() {\n    return this.rootNode?.childrenAfterGroup ?? null;\n  }\n  getRow(index) {\n    return this.rowsToDisplay[index];\n  }\n  isRowPresent(rowNode) {\n    return this.rowsToDisplay.indexOf(rowNode) >= 0;\n  }\n  getRowIndexAtPixel(pixelToMatch) {\n    const rowsToDisplay = this.rowsToDisplay;\n    if (this.isEmpty() || rowsToDisplay.length === 0) {\n      return -1;\n    }\n    let bottomPointer = 0;\n    let topPointer = rowsToDisplay.length - 1;\n    if (pixelToMatch <= 0) {\n      return 0;\n    }\n    const lastNode = _last(rowsToDisplay);\n    if (lastNode.rowTop <= pixelToMatch) {\n      return rowsToDisplay.length - 1;\n    }\n    let oldBottomPointer = -1;\n    let oldTopPointer = -1;\n    while (true) {\n      const midPointer = Math.floor((bottomPointer + topPointer) / 2);\n      const currentRowNode = rowsToDisplay[midPointer];\n      if (this.isRowInPixel(currentRowNode, pixelToMatch)) {\n        return midPointer;\n      }\n      if (currentRowNode.rowTop < pixelToMatch) {\n        bottomPointer = midPointer + 1;\n      } else if (currentRowNode.rowTop > pixelToMatch) {\n        topPointer = midPointer - 1;\n      }\n      const caughtInInfiniteLoop = oldBottomPointer === bottomPointer && oldTopPointer === topPointer;\n      if (caughtInInfiniteLoop) {\n        return midPointer;\n      }\n      oldBottomPointer = bottomPointer;\n      oldTopPointer = topPointer;\n    }\n  }\n  isRowInPixel(rowNode, pixelToMatch) {\n    const topPixel = rowNode.rowTop;\n    const bottomPixel = rowNode.rowTop + rowNode.rowHeight;\n    const pixelInRow = topPixel <= pixelToMatch && bottomPixel > pixelToMatch;\n    return pixelInRow;\n  }\n  forEachLeafNode(callback) {\n    this.rootNode?.allLeafChildren?.forEach((rowNode, index) => callback(rowNode, index));\n  }\n  forEachNode(callback, includeFooterNodes = false) {\n    this.depthFirstSearchRowNodes(callback, includeFooterNodes);\n  }\n  forEachDisplayedNode(callback) {\n    this.rowsToDisplay.forEach(callback);\n  }\n  forEachNodeAfterFilter(callback, includeFooterNodes = false) {\n    this.depthFirstSearchRowNodes(callback, includeFooterNodes, node => node.childrenAfterAggFilter);\n  }\n  forEachNodeAfterFilterAndSort(callback, includeFooterNodes = false) {\n    this.depthFirstSearchRowNodes(callback, includeFooterNodes, node => node.childrenAfterSort);\n  }\n  forEachPivotNode(callback, includeFooterNodes = false, afterSort = false) {\n    const {\n      colModel,\n      rowGroupColsSvc\n    } = this.beans;\n    if (!colModel.isPivotMode()) {\n      return;\n    }\n    if (!rowGroupColsSvc?.columns.length) {\n      callback(this.rootNode, 0);\n      return;\n    }\n    const childrenField = afterSort ? \"childrenAfterSort\" : \"childrenAfterGroup\";\n    this.depthFirstSearchRowNodes(callback, includeFooterNodes, node => !node.leafGroup ? node[childrenField] : null);\n  }\n  /**\n   * Iterate through each node and all of its children\n   * @param callback the function to execute for each node\n   * @param includeFooterNodes whether to also iterate over footer nodes\n   * @param nodes the nodes to start iterating over\n   * @param getChildren a function to determine the recursion strategy\n   * @param startIndex the index to start from\n   * @returns the index ended at\n   */\n  depthFirstSearchRowNodes(callback, includeFooterNodes = false, getChildren = node2 => node2.childrenAfterGroup, node = this.rootNode, startIndex = 0) {\n    let index = startIndex;\n    if (!node) {\n      return index;\n    }\n    const isRootNode = node === this.rootNode;\n    if (!isRootNode) {\n      callback(node, index++);\n    }\n    const {\n      footerSvc\n    } = this.beans;\n    if (node.hasChildren() && !node.footer) {\n      const children = getChildren(node);\n      if (children) {\n        index = footerSvc?.addTotalRows(index, node, callback, includeFooterNodes, isRootNode, \"top\") ?? index;\n        for (const node2 of children) {\n          index = this.depthFirstSearchRowNodes(callback, includeFooterNodes, getChildren, node2, index);\n        }\n        return footerSvc?.addTotalRows(index, node, callback, includeFooterNodes, isRootNode, \"bottom\") ?? index;\n      }\n    }\n    return index;\n  }\n  // it's possible to recompute the aggregate without doing the other parts\n  // + api.refreshClientSideRowModel('aggregate')\n  doAggregate(changedPath) {\n    const rootNode = this.rootNode;\n    if (rootNode) {\n      this.aggStage?.execute({\n        rowNode: rootNode,\n        changedPath\n      });\n    }\n  }\n  doFilterAggregates(changedPath) {\n    const rootNode = this.rootNode;\n    if (this.filterAggStage) {\n      this.filterAggStage.execute({\n        rowNode: rootNode,\n        changedPath\n      });\n    } else {\n      rootNode.childrenAfterAggFilter = rootNode.childrenAfterFilter;\n    }\n  }\n  doSort(changedRowNodes, changedPath) {\n    if (this.sortStage) {\n      this.sortStage.execute({\n        rowNode: this.rootNode,\n        changedRowNodes,\n        changedPath\n      });\n    } else {\n      changedPath.forEachChangedNodeDepthFirst(rowNode => {\n        rowNode.childrenAfterSort = rowNode.childrenAfterAggFilter.slice(0);\n        updateRowNodeAfterSort(rowNode);\n      });\n    }\n  }\n  doRowGrouping(params) {\n    const rootNode = this.rootNode;\n    const groupStageExecuted = this.groupStage?.execute({\n      rowNode: rootNode,\n      changedRowNodes: params.changedRowNodes,\n      changedPath: params.changedPath,\n      rowNodesOrderChanged: !!params.rowNodesOrderChanged,\n      afterColumnsChanged: !!params.afterColumnsChanged\n    });\n    if (groupStageExecuted !== void 0) {\n      return groupStageExecuted;\n    }\n    const sibling = rootNode.sibling;\n    rootNode.childrenAfterGroup = rootNode.allLeafChildren;\n    if (sibling) {\n      sibling.childrenAfterGroup = rootNode.childrenAfterGroup;\n    }\n    rootNode.updateHasChildren();\n    return false;\n  }\n  doFilter(changedPath) {\n    if (this.filterStage) {\n      this.filterStage.execute({\n        rowNode: this.rootNode,\n        changedPath\n      });\n    } else {\n      changedPath.forEachChangedNodeDepthFirst(rowNode => {\n        rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n        updateRowNodeAfterFilter(rowNode);\n      }, true);\n    }\n  }\n  doPivot(changedPath) {\n    this.pivotStage?.execute({\n      rowNode: this.rootNode,\n      changedPath\n    });\n  }\n  getRowNode(id) {\n    const found = this.nodeManager.getRowNode(id);\n    if (typeof found === \"object\") {\n      return found;\n    }\n    const idIsGroup = typeof id == \"string\" && id.indexOf(ROW_ID_PREFIX_ROW_GROUP) === 0;\n    return idIsGroup ? this.groupStage?.getNode(id) : void 0;\n  }\n  batchUpdateRowData(rowDataTransaction, callback) {\n    if (this.applyAsyncTransactionsTimeout == null) {\n      this.rowDataTransactionBatch = [];\n      const waitMillis = this.gos.get(\"asyncTransactionWaitMillis\");\n      this.applyAsyncTransactionsTimeout = window.setTimeout(() => {\n        if (this.isAlive()) {\n          this.executeBatchUpdateRowData();\n        }\n      }, waitMillis);\n    }\n    this.rowDataTransactionBatch.push({\n      rowDataTransaction,\n      callback\n    });\n  }\n  flushAsyncTransactions() {\n    if (this.applyAsyncTransactionsTimeout != null) {\n      clearTimeout(this.applyAsyncTransactionsTimeout);\n      this.executeBatchUpdateRowData();\n    }\n  }\n  executeBatchUpdateRowData() {\n    this.valueCache?.onDataChanged();\n    const callbackFuncsBound = [];\n    const rowNodeTrans = [];\n    const changedRowNodes = new ChangedRowNodes();\n    let orderChanged = false;\n    this.rowDataTransactionBatch?.forEach(tranItem => {\n      this.rowNodesCountReady = true;\n      const {\n        rowNodeTransaction,\n        rowsInserted\n      } = this.nodeManager.updateRowData(tranItem.rowDataTransaction, changedRowNodes);\n      if (rowsInserted) {\n        orderChanged = true;\n      }\n      rowNodeTrans.push(rowNodeTransaction);\n      if (tranItem.callback) {\n        callbackFuncsBound.push(tranItem.callback.bind(null, rowNodeTransaction));\n      }\n    });\n    this.commitTransactions(orderChanged, changedRowNodes);\n    if (callbackFuncsBound.length > 0) {\n      window.setTimeout(() => {\n        callbackFuncsBound.forEach(func => func());\n      }, 0);\n    }\n    if (rowNodeTrans.length > 0) {\n      this.eventSvc.dispatchEvent({\n        type: \"asyncTransactionsFlushed\",\n        results: rowNodeTrans\n      });\n    }\n    this.rowDataTransactionBatch = null;\n    this.applyAsyncTransactionsTimeout = void 0;\n  }\n  /**\n   * Used to apply transaction changes.\n   * Called by gridApi & rowDragFeature\n   */\n  updateRowData(rowDataTran) {\n    this.valueCache?.onDataChanged();\n    this.rowNodesCountReady = true;\n    const changedRowNodes = new ChangedRowNodes();\n    const {\n      rowNodeTransaction,\n      rowsInserted\n    } = this.nodeManager.updateRowData(rowDataTran, changedRowNodes);\n    this.commitTransactions(rowsInserted, changedRowNodes);\n    return rowNodeTransaction;\n  }\n  /**\n   * Common to:\n   * - executeBatchUpdateRowData (batch transactions)\n   * - updateRowData (single transaction)\n   * - setImmutableRowData (generated transaction)\n   *\n   * @param rowNodeTrans - the transactions to apply\n   * @param orderChanged - whether the order of the rows has changed, either via generated transaction or user provided addIndex\n   */\n  commitTransactions(rowNodesOrderChanged, changedRowNodes) {\n    this.refreshModel({\n      step: \"group\",\n      rowDataUpdated: true,\n      rowNodesOrderChanged,\n      keepRenderedRows: true,\n      animate: !this.gos.get(\"suppressAnimationFrame\"),\n      changedRowNodes,\n      changedPath: this.createChangePath(true)\n    });\n  }\n  doRowsToDisplay() {\n    const {\n      flattenStage,\n      rootNode\n    } = this;\n    let rowsToDisplay;\n    if (flattenStage) {\n      rowsToDisplay = flattenStage.execute({\n        rowNode: rootNode\n      });\n    } else {\n      rowsToDisplay = rootNode?.childrenAfterSort ?? [];\n      for (const row of rowsToDisplay) {\n        row.setUiLevel(0);\n      }\n    }\n    this.rowsToDisplay = rowsToDisplay;\n  }\n  onRowHeightChanged() {\n    this.refreshModel({\n      step: \"map\",\n      keepRenderedRows: true,\n      keepUndoRedoStack: true\n    });\n  }\n  resetRowHeights() {\n    const rootNode = this.rootNode;\n    if (!rootNode) {\n      return;\n    }\n    const atLeastOne = this.resetRowHeightsForAllRowNodes();\n    rootNode.setRowHeight(rootNode.rowHeight, true);\n    if (rootNode.sibling) {\n      rootNode.sibling.setRowHeight(rootNode.sibling.rowHeight, true);\n    }\n    if (atLeastOne) {\n      this.onRowHeightChanged();\n    }\n  }\n  resetRowHeightsForAllRowNodes() {\n    let atLeastOne = false;\n    this.forEachNode(rowNode => {\n      rowNode.setRowHeight(rowNode.rowHeight, true);\n      const detailNode = rowNode.detailNode;\n      if (detailNode) {\n        detailNode.setRowHeight(detailNode.rowHeight, true);\n      }\n      if (rowNode.sibling) {\n        rowNode.sibling.setRowHeight(rowNode.sibling.rowHeight, true);\n      }\n      atLeastOne = true;\n    });\n    return atLeastOne;\n  }\n  onGridStylesChanges(e) {\n    if (e.rowHeightChanged) {\n      if (this.beans.rowAutoHeight?.active) {\n        return;\n      }\n      this.resetRowHeights();\n    }\n  }\n  onGridReady() {\n    if (!this.started) {\n      this.setInitialData();\n    }\n  }\n  isRowDataLoaded() {\n    return this.rowCountReady;\n  }\n  destroy() {\n    super.destroy();\n    this.started = false;\n    this.rootNode = null;\n    this.nodeManager = null;\n    this.rowDataTransactionBatch = null;\n    this.orderedStages = _EmptyArray;\n    this.rowsToDisplay = _EmptyArray;\n  }\n  /**\n   * @deprecated v33.1\n   */\n  onRowHeightChangedDebounced() {\n    this.onRowHeightChanged_debounced();\n  }\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/clientSideRowModelApi.ts\nfunction onGroupExpandedOrCollapsed(beans) {\n  beans.expansionSvc?.onGroupExpandedOrCollapsed();\n}\nfunction refreshClientSideRowModel(beans, step) {\n  const clientSideRowModel = _getClientSideRowModel(beans);\n  if (clientSideRowModel) {\n    if (!step || step === \"everything\") {\n      step = \"group\";\n    }\n    clientSideRowModel.refreshModel({\n      step,\n      keepRenderedRows: true,\n      animate: !beans.gos.get(\"suppressAnimationFrame\")\n    });\n  }\n}\nfunction isRowDataEmpty(beans) {\n  return _getClientSideRowModel(beans)?.isEmpty() ?? true;\n}\nfunction forEachLeafNode(beans, callback) {\n  _getClientSideRowModel(beans)?.forEachLeafNode(callback);\n}\nfunction forEachNodeAfterFilter(beans, callback) {\n  _getClientSideRowModel(beans)?.forEachNodeAfterFilter(callback);\n}\nfunction forEachNodeAfterFilterAndSort(beans, callback) {\n  _getClientSideRowModel(beans)?.forEachNodeAfterFilterAndSort(callback);\n}\nfunction resetRowHeights(beans) {\n  if (beans.rowAutoHeight?.active) {\n    _warn(3);\n    return;\n  }\n  _getClientSideRowModel(beans)?.resetRowHeights();\n}\nfunction applyTransaction(beans, rowDataTransaction) {\n  return beans.frameworkOverrides.wrapIncoming(() => _getClientSideRowModel(beans)?.updateRowData(rowDataTransaction));\n}\nfunction applyTransactionAsync(beans, rowDataTransaction, callback) {\n  beans.frameworkOverrides.wrapIncoming(() => _getClientSideRowModel(beans)?.batchUpdateRowData(rowDataTransaction, callback));\n}\nfunction flushAsyncTransactions(beans) {\n  beans.frameworkOverrides.wrapIncoming(() => _getClientSideRowModel(beans)?.flushAsyncTransactions());\n}\nfunction getBestCostNodeSelection(beans) {\n  return beans.selectionSvc?.getBestCostNodeSelection();\n}\n\n// packages/ag-grid-community/src/clientSideRowModel/clientSideRowModelModule.ts\nvar ClientSideRowModelModule = {\n  moduleName: \"ClientSideRowModel\",\n  version: VERSION,\n  rowModels: [\"clientSide\"],\n  beans: [ClientSideNodeManager, ClientSideRowModel, SortStage],\n  dependsOn: [SortModule]\n};\nvar ClientSideRowModelApiModule = {\n  moduleName: \"ClientSideRowModelApi\",\n  version: VERSION,\n  apiFunctions: {\n    onGroupExpandedOrCollapsed,\n    refreshClientSideRowModel,\n    isRowDataEmpty,\n    forEachLeafNode,\n    forEachNodeAfterFilter,\n    forEachNodeAfterFilterAndSort,\n    resetRowHeights,\n    applyTransaction,\n    applyTransactionAsync,\n    flushAsyncTransactions,\n    getBestCostNodeSelection\n  },\n  dependsOn: [CsrmSsrmSharedApiModule]\n};\n\n// packages/ag-grid-community/src/export/gridSerializer.ts\nvar GridSerializer = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"gridSerializer\";\n  }\n  wireBeans(beans) {\n    this.visibleCols = beans.visibleCols;\n    this.colModel = beans.colModel;\n    this.rowModel = beans.rowModel;\n    this.pinnedRowModel = beans.pinnedRowModel;\n  }\n  serialize(gridSerializingSession, params = {}) {\n    const {\n      allColumns,\n      columnKeys,\n      skipRowGroups,\n      exportRowNumbers\n    } = params;\n    const columnsToExport = this.getColumnsToExport({\n      allColumns,\n      skipRowGroups,\n      columnKeys,\n      exportRowNumbers\n    });\n    return [\n    // first pass, put in the header names of the cols\n    this.prepareSession(columnsToExport), this.prependContent(params), this.exportColumnGroups(params, columnsToExport), this.exportHeaders(params, columnsToExport), this.processPinnedTopRows(params, columnsToExport), this.processRows(params, columnsToExport), this.processPinnedBottomRows(params, columnsToExport), this.appendContent(params)].reduce((composed, f) => f(composed), gridSerializingSession).parse();\n  }\n  processRow(gridSerializingSession, params, columnsToExport, node) {\n    const rowSkipper = params.shouldRowBeSkipped || (() => false);\n    const isClipboardExport = params.rowPositions != null;\n    const isExplicitExportSelection = isClipboardExport || !!params.onlySelected;\n    const hideOpenParents = this.gos.get(\"groupHideOpenParents\") && !isExplicitExportSelection;\n    const isLeafNode = this.colModel.isPivotMode() ? node.leafGroup : !node.group;\n    const isFooter = !!node.footer;\n    const shouldSkipCurrentGroup = node.allChildrenCount === 1 && node.childrenAfterGroup?.length === 1 && _canSkipShowingRowGroup(this.gos, node);\n    if (!isLeafNode && !isFooter && (params.skipRowGroups || shouldSkipCurrentGroup || hideOpenParents) || params.onlySelected && !node.isSelected() || params.skipPinnedTop && node.rowPinned === \"top\" || params.skipPinnedBottom && node.rowPinned === \"bottom\" || node.stub) {\n      return;\n    }\n    const nodeIsRootNode = node.level === -1;\n    if (nodeIsRootNode && !isLeafNode && !isFooter) {\n      return;\n    }\n    const shouldRowBeSkipped = rowSkipper(_addGridCommonParams(this.gos, {\n      node\n    }));\n    if (shouldRowBeSkipped) {\n      return;\n    }\n    const rowAccumulator = gridSerializingSession.onNewBodyRow(node);\n    columnsToExport.forEach((column, index) => {\n      rowAccumulator.onColumn(column, index, node);\n    });\n    if (params.getCustomContentBelowRow) {\n      const content = params.getCustomContentBelowRow(_addGridCommonParams(this.gos, {\n        node\n      }));\n      if (content) {\n        gridSerializingSession.addCustomContent(content);\n      }\n    }\n  }\n  appendContent(params) {\n    return gridSerializingSession => {\n      const appendContent = params.appendContent;\n      if (appendContent) {\n        gridSerializingSession.addCustomContent(appendContent);\n      }\n      return gridSerializingSession;\n    };\n  }\n  prependContent(params) {\n    return gridSerializingSession => {\n      const prependContent = params.prependContent;\n      if (prependContent) {\n        gridSerializingSession.addCustomContent(prependContent);\n      }\n      return gridSerializingSession;\n    };\n  }\n  prepareSession(columnsToExport) {\n    return gridSerializingSession => {\n      gridSerializingSession.prepare(columnsToExport);\n      return gridSerializingSession;\n    };\n  }\n  exportColumnGroups(params, columnsToExport) {\n    return gridSerializingSession => {\n      if (!params.skipColumnGroupHeaders) {\n        const idCreator = new GroupInstanceIdCreator();\n        const {\n          colGroupSvc\n        } = this.beans;\n        const displayedGroups = colGroupSvc ? colGroupSvc.createColumnGroups({\n          columns: columnsToExport,\n          idCreator,\n          pinned: null,\n          isStandaloneStructure: true\n        }) : columnsToExport;\n        this.recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession, params.processGroupHeaderCallback);\n      }\n      return gridSerializingSession;\n    };\n  }\n  exportHeaders(params, columnsToExport) {\n    return gridSerializingSession => {\n      if (!params.skipColumnHeaders) {\n        const gridRowIterator = gridSerializingSession.onNewHeaderRow();\n        columnsToExport.forEach((column, index) => {\n          gridRowIterator.onColumn(column, index, void 0);\n        });\n      }\n      return gridSerializingSession;\n    };\n  }\n  processPinnedTopRows(params, columnsToExport) {\n    return gridSerializingSession => {\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      if (params.rowPositions) {\n        params.rowPositions.filter(position => position.rowPinned === \"top\").sort((a, b) => a.rowIndex - b.rowIndex).map(position => this.pinnedRowModel?.getPinnedTopRow(position.rowIndex)).forEach(processRow);\n      } else if (!this.pinnedRowModel?.isManual()) {\n        this.pinnedRowModel?.forEachPinnedRow(\"top\", processRow);\n      }\n      return gridSerializingSession;\n    };\n  }\n  processRows(params, columnsToExport) {\n    return gridSerializingSession => {\n      const rowModel = this.rowModel;\n      const usingCsrm = _isClientSideRowModel(this.gos, rowModel);\n      const usingSsrm = _isServerSideRowModel(this.gos, rowModel);\n      const onlySelectedNonStandardModel = !usingCsrm && params.onlySelected;\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      const {\n        exportedRows = \"filteredAndSorted\"\n      } = params;\n      if (params.rowPositions) {\n        params.rowPositions.filter(position => position.rowPinned == null).sort((a, b) => a.rowIndex - b.rowIndex).map(position => rowModel.getRow(position.rowIndex)).forEach(processRow);\n        return gridSerializingSession;\n      }\n      if (this.colModel.isPivotMode()) {\n        if (usingCsrm) {\n          rowModel.forEachPivotNode(processRow, true, exportedRows === \"filteredAndSorted\");\n        } else if (usingSsrm) {\n          rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n        } else {\n          rowModel.forEachNode(processRow);\n        }\n        return gridSerializingSession;\n      }\n      if (params.onlySelectedAllPages || onlySelectedNonStandardModel) {\n        const selectedNodes = this.beans.selectionSvc?.getSelectedNodes() ?? [];\n        this.replicateSortedOrder(selectedNodes);\n        selectedNodes.forEach(processRow);\n      } else {\n        if (exportedRows === \"all\") {\n          rowModel.forEachNode(processRow);\n        } else if (usingCsrm || usingSsrm) {\n          rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n        } else {\n          rowModel.forEachNode(processRow);\n        }\n      }\n      return gridSerializingSession;\n    };\n  }\n  replicateSortedOrder(rows) {\n    const {\n      sortSvc,\n      rowNodeSorter\n    } = this.beans;\n    if (!sortSvc || !rowNodeSorter) {\n      return;\n    }\n    const sortOptions = sortSvc.getSortOptions();\n    const compareNodes = (rowA, rowB) => {\n      if (rowA.rowIndex != null && rowB.rowIndex != null) {\n        return rowA.rowIndex - rowB.rowIndex;\n      }\n      if (rowA.level === rowB.level) {\n        if (rowA.parent?.id === rowB.parent?.id) {\n          return rowNodeSorter.compareRowNodes(sortOptions, {\n            rowNode: rowA,\n            currentPos: rowA.rowIndex ?? -1\n          }, {\n            rowNode: rowB,\n            currentPos: rowB.rowIndex ?? -1\n          });\n        }\n        return compareNodes(rowA.parent, rowB.parent);\n      }\n      if (rowA.level > rowB.level) {\n        return compareNodes(rowA.parent, rowB);\n      }\n      return compareNodes(rowA, rowB.parent);\n    };\n    rows.sort(compareNodes);\n  }\n  processPinnedBottomRows(params, columnsToExport) {\n    return gridSerializingSession => {\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      if (params.rowPositions) {\n        params.rowPositions.filter(position => position.rowPinned === \"bottom\").sort((a, b) => a.rowIndex - b.rowIndex).map(position => this.pinnedRowModel?.getPinnedBottomRow(position.rowIndex)).forEach(processRow);\n      } else if (!this.pinnedRowModel?.isManual()) {\n        this.pinnedRowModel?.forEachPinnedRow(\"bottom\", processRow);\n      }\n      return gridSerializingSession;\n    };\n  }\n  getColumnsToExport(params) {\n    const {\n      allColumns = false,\n      skipRowGroups = false,\n      exportRowNumbers = false,\n      columnKeys\n    } = params;\n    const {\n      colModel,\n      gos,\n      visibleCols\n    } = this;\n    const isPivotMode = colModel.isPivotMode();\n    const filterSpecialColumns = col => {\n      if (isColumnSelectionCol(col)) {\n        return false;\n      }\n      return !isRowNumberCol(col) || exportRowNumbers;\n    };\n    if (columnKeys && columnKeys.length) {\n      return colModel.getColsForKeys(columnKeys).filter(filterSpecialColumns);\n    }\n    const isTreeData = gos.get(\"treeData\");\n    let columnsToExport = [];\n    if (allColumns && !isPivotMode) {\n      columnsToExport = colModel.getCols();\n    } else {\n      columnsToExport = visibleCols.allCols;\n    }\n    columnsToExport = columnsToExport.filter(column => filterSpecialColumns(column) && (skipRowGroups && !isTreeData ? !isColumnGroupAutoCol(column) : true));\n    return columnsToExport;\n  }\n  recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession, processGroupHeaderCallback) {\n    const directChildrenHeaderGroups = [];\n    displayedGroups.forEach(columnGroupChild => {\n      const columnGroup = columnGroupChild;\n      if (!columnGroup.getChildren) {\n        return;\n      }\n      columnGroup.getChildren().forEach(it => directChildrenHeaderGroups.push(it));\n    });\n    if (displayedGroups.length > 0 && isColumnGroup(displayedGroups[0])) {\n      this.doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback);\n    }\n    if (directChildrenHeaderGroups && directChildrenHeaderGroups.length > 0) {\n      this.recursivelyAddHeaderGroups(directChildrenHeaderGroups, gridSerializingSession, processGroupHeaderCallback);\n    }\n  }\n  doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback) {\n    const gridRowIterator = gridSerializingSession.onNewHeaderGroupingRow();\n    let columnIndex = 0;\n    displayedGroups.forEach(columnGroupChild => {\n      const columnGroup = columnGroupChild;\n      let name;\n      if (processGroupHeaderCallback) {\n        name = processGroupHeaderCallback(_addGridCommonParams(this.gos, {\n          columnGroup\n        }));\n      } else {\n        name = this.beans.colNames.getDisplayNameForColumnGroup(columnGroup, \"header\");\n      }\n      const collapsibleGroupRanges = columnGroup.getLeafColumns().reduce((collapsibleGroups, currentColumn, currentIdx, arr) => {\n        let lastGroup = _last(collapsibleGroups);\n        const groupShow = currentColumn.getColumnGroupShow() === \"open\";\n        if (!groupShow) {\n          if (lastGroup && lastGroup[1] == null) {\n            lastGroup[1] = currentIdx - 1;\n          }\n        } else if (!lastGroup || lastGroup[1] != null) {\n          lastGroup = [currentIdx];\n          collapsibleGroups.push(lastGroup);\n        }\n        if (currentIdx === arr.length - 1 && lastGroup && lastGroup[1] == null) {\n          lastGroup[1] = currentIdx;\n        }\n        return collapsibleGroups;\n      }, []);\n      gridRowIterator.onColumn(columnGroup, name || \"\", columnIndex++, columnGroup.getLeafColumns().length - 1, collapsibleGroupRanges);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/export/exportModule.ts\nvar SharedExportModule = {\n  moduleName: \"SharedExport\",\n  version: VERSION,\n  beans: [GridSerializer]\n};\n\n// packages/ag-grid-community/src/csvExport/csvSerializingSession.ts\nvar LINE_SEPARATOR = \"\\r\\n\";\nvar CsvSerializingSession = class extends BaseGridSerializingSession {\n  constructor(config) {\n    super(config);\n    this.config = config;\n    this.isFirstLine = true;\n    this.result = \"\";\n    const {\n      suppressQuotes,\n      columnSeparator\n    } = config;\n    this.suppressQuotes = suppressQuotes;\n    this.columnSeparator = columnSeparator;\n  }\n  addCustomContent(content) {\n    if (!content) {\n      return;\n    }\n    if (typeof content === \"string\") {\n      if (!/^\\s*\\n/.test(content)) {\n        this.beginNewLine();\n      }\n      content = content.replace(/\\r?\\n/g, LINE_SEPARATOR);\n      this.result += content;\n    } else {\n      content.forEach(row => {\n        this.beginNewLine();\n        row.forEach((cell, index) => {\n          if (index !== 0) {\n            this.result += this.columnSeparator;\n          }\n          this.result += this.putInQuotes(cell.data.value || \"\");\n          if (cell.mergeAcross) {\n            this.appendEmptyCells(cell.mergeAcross);\n          }\n        });\n      });\n    }\n  }\n  onNewHeaderGroupingRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderGroupingRowColumn.bind(this)\n    };\n  }\n  onNewHeaderGroupingRowColumn(columnGroup, header, index, span) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    this.result += this.putInQuotes(header);\n    this.appendEmptyCells(span);\n  }\n  appendEmptyCells(count) {\n    for (let i = 1; i <= count; i++) {\n      this.result += this.columnSeparator + this.putInQuotes(\"\");\n    }\n  }\n  onNewHeaderRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderRowColumn.bind(this)\n    };\n  }\n  onNewHeaderRowColumn(column, index) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    this.result += this.putInQuotes(this.extractHeaderValue(column));\n  }\n  onNewBodyRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewBodyRowColumn.bind(this)\n    };\n  }\n  onNewBodyRowColumn(column, index, node) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    const rowCellValue = this.extractRowCellValue(column, index, index, \"csv\", node);\n    this.result += this.putInQuotes(rowCellValue.valueFormatted ?? rowCellValue.value);\n  }\n  putInQuotes(value) {\n    if (this.suppressQuotes) {\n      return value;\n    }\n    if (value === null || value === void 0) {\n      return '\"\"';\n    }\n    let stringValue;\n    if (typeof value === \"string\") {\n      stringValue = value;\n    } else if (typeof value.toString === \"function\") {\n      stringValue = value.toString();\n    } else {\n      _warn(53);\n      stringValue = \"\";\n    }\n    const valueEscaped = stringValue.replace(/\"/g, '\"\"');\n    return '\"' + valueEscaped + '\"';\n  }\n  parse() {\n    return this.result;\n  }\n  beginNewLine() {\n    if (!this.isFirstLine) {\n      this.result += LINE_SEPARATOR;\n    }\n    this.isFirstLine = false;\n  }\n};\n\n// packages/ag-grid-community/src/csvExport/csvCreator.ts\nvar CsvCreator = class extends BaseCreator {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"csvCreator\";\n  }\n  wireBeans(beans) {\n    this.colModel = beans.colModel;\n    this.colNames = beans.colNames;\n    this.rowGroupColsSvc = beans.rowGroupColsSvc;\n    this.valueSvc = beans.valueSvc;\n  }\n  getMergedParams(params) {\n    const baseParams5 = this.gos.get(\"defaultCsvExportParams\");\n    return Object.assign({}, baseParams5, params);\n  }\n  export(userParams) {\n    if (this.isExportSuppressed()) {\n      _warn(51);\n      return;\n    }\n    const mergedParams = this.getMergedParams(userParams);\n    const data = this.getData(mergedParams);\n    const packagedFile = new Blob([\"\\uFEFF\", data], {\n      type: \"text/plain\"\n    });\n    const fileName = typeof mergedParams.fileName === \"function\" ? mergedParams.fileName(_addGridCommonParams(this.gos, {})) : mergedParams.fileName;\n    _downloadFile(this.getFileName(fileName), packagedFile);\n  }\n  exportDataAsCsv(params) {\n    this.export(params);\n  }\n  getDataAsCsv(params, skipDefaultParams = false) {\n    const mergedParams = skipDefaultParams ? Object.assign({}, params) : this.getMergedParams(params);\n    return this.getData(mergedParams);\n  }\n  getDefaultFileExtension() {\n    return \"csv\";\n  }\n  createSerializingSession(params) {\n    const {\n      colModel,\n      colNames,\n      rowGroupColsSvc,\n      valueSvc,\n      gos\n    } = this;\n    const {\n      processCellCallback,\n      processHeaderCallback,\n      processGroupHeaderCallback,\n      processRowGroupCallback,\n      suppressQuotes,\n      columnSeparator\n    } = params;\n    return new CsvSerializingSession({\n      colModel,\n      colNames,\n      valueSvc,\n      gos,\n      processCellCallback: processCellCallback || void 0,\n      processHeaderCallback: processHeaderCallback || void 0,\n      processGroupHeaderCallback: processGroupHeaderCallback || void 0,\n      processRowGroupCallback: processRowGroupCallback || void 0,\n      suppressQuotes: suppressQuotes || false,\n      columnSeparator: columnSeparator || \",\",\n      rowGroupColsSvc\n    });\n  }\n  isExportSuppressed() {\n    return this.gos.get(\"suppressCsvExport\");\n  }\n};\n\n// packages/ag-grid-community/src/csvExport/csvExportApi.ts\nfunction getDataAsCsv(beans, params) {\n  return beans.csvCreator?.getDataAsCsv(params);\n}\nfunction exportDataAsCsv(beans, params) {\n  beans.csvCreator?.exportDataAsCsv(params);\n}\n\n// packages/ag-grid-community/src/csvExport/csvExportModule.ts\nvar CsvExportModule = {\n  moduleName: \"CsvExport\",\n  version: VERSION,\n  beans: [CsvCreator],\n  apiFunctions: {\n    getDataAsCsv,\n    exportDataAsCsv\n  },\n  dependsOn: [SharedExportModule]\n};\n\n// packages/ag-grid-community/src/infiniteRowModel/infiniteBlock.ts\nvar InfiniteBlock = class extends BeanStub {\n  constructor(id, parentCache, params) {\n    super();\n    this.id = id;\n    this.parentCache = parentCache;\n    this.params = params;\n    this.state = \"needsLoading\";\n    this.version = 0;\n    this.startRow = id * params.blockSize;\n    this.endRow = this.startRow + params.blockSize;\n  }\n  load() {\n    this.state = \"loading\";\n    this.loadFromDatasource();\n  }\n  setStateWaitingToLoad() {\n    this.version++;\n    this.state = \"needsLoading\";\n  }\n  pageLoadFailed(version) {\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\n    if (requestMostRecentAndLive) {\n      this.state = \"failed\";\n    }\n    this.dispatchLocalEvent({\n      type: \"loadComplete\"\n    });\n  }\n  pageLoaded(version, rows, lastRow) {\n    this.successCommon(version, {\n      rowData: rows,\n      rowCount: lastRow\n    });\n  }\n  isRequestMostRecentAndLive(version) {\n    const thisIsMostRecentRequest = version === this.version;\n    const weAreNotDestroyed = this.isAlive();\n    return thisIsMostRecentRequest && weAreNotDestroyed;\n  }\n  successCommon(version, params) {\n    this.dispatchLocalEvent({\n      type: \"loadComplete\"\n    });\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\n    if (requestMostRecentAndLive) {\n      this.state = \"loaded\";\n      this.processServerResult(params);\n    }\n  }\n  postConstruct() {\n    this.rowNodes = [];\n    const {\n      params: {\n        blockSize,\n        rowHeight\n      },\n      startRow,\n      beans,\n      rowNodes\n    } = this;\n    for (let i = 0; i < blockSize; i++) {\n      const rowIndex = startRow + i;\n      const rowNode = new RowNode(beans);\n      rowNode.setRowHeight(rowHeight);\n      rowNode.uiLevel = 0;\n      rowNode.setRowIndex(rowIndex);\n      rowNode.setRowTop(rowHeight * rowIndex);\n      rowNodes.push(rowNode);\n    }\n  }\n  getBlockStateJson() {\n    const {\n      id,\n      startRow,\n      endRow,\n      state: pageStatus\n    } = this;\n    return {\n      id: \"\" + id,\n      state: {\n        blockNumber: id,\n        startRow,\n        endRow,\n        pageStatus\n      }\n    };\n  }\n  setDataAndId(rowNode, data, index) {\n    if (_exists(data)) {\n      rowNode.setDataAndId(data, index.toString());\n    } else {\n      rowNode.setDataAndId(void 0, void 0);\n    }\n  }\n  loadFromDatasource() {\n    const params = this.createLoadParams();\n    if (_missing(this.params.datasource.getRows)) {\n      _warn(90);\n      return;\n    }\n    window.setTimeout(() => {\n      this.params.datasource.getRows(params);\n    }, 0);\n  }\n  createLoadParams() {\n    const {\n      startRow,\n      endRow,\n      version,\n      params: {\n        sortModel,\n        filterModel\n      },\n      gos\n    } = this;\n    const params = {\n      startRow,\n      endRow,\n      successCallback: this.pageLoaded.bind(this, version),\n      failCallback: this.pageLoadFailed.bind(this, version),\n      sortModel,\n      filterModel,\n      context: _addGridCommonParams(gos, {}).context\n    };\n    return params;\n  }\n  forEachNode(callback, sequence, rowCount) {\n    this.rowNodes.forEach((rowNode, index) => {\n      const rowIndex = this.startRow + index;\n      if (rowIndex < rowCount) {\n        callback(rowNode, sequence.value++);\n      }\n    });\n  }\n  getRow(rowIndex, dontTouchLastAccessed = false) {\n    if (!dontTouchLastAccessed) {\n      this.lastAccessed = this.params.lastAccessedSequence.value++;\n    }\n    const localIndex = rowIndex - this.startRow;\n    return this.rowNodes[localIndex];\n  }\n  processServerResult(params) {\n    const {\n      rowNodes,\n      beans\n    } = this;\n    rowNodes.forEach((rowNode, index) => {\n      const data = params.rowData ? params.rowData[index] : void 0;\n      if (!rowNode.id && rowNode.alreadyRendered && data) {\n        rowNodes[index] = new RowNode(beans);\n        rowNodes[index].setRowIndex(rowNode.rowIndex);\n        rowNodes[index].setRowTop(rowNode.rowTop);\n        rowNodes[index].setRowHeight(rowNode.rowHeight);\n        rowNode.clearRowTopAndRowIndex();\n      }\n      this.setDataAndId(rowNodes[index], data, this.startRow + index);\n    });\n    const finalRowCount = params.rowCount != null && params.rowCount >= 0 ? params.rowCount : void 0;\n    this.parentCache.pageLoaded(this, finalRowCount);\n  }\n  destroy() {\n    this.rowNodes.forEach(rowNode => {\n      rowNode.clearRowTopAndRowIndex();\n    });\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/infiniteRowModel/infiniteCache.ts\nvar MAX_EMPTY_BLOCKS_TO_KEEP = 2;\nvar InfiniteCache = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.params = params;\n    this.lastRowIndexKnown = false;\n    this.blocks = {};\n    this.blockCount = 0;\n    this.rowCount = params.initialRowCount;\n  }\n  // the rowRenderer will not pass dontCreatePage, meaning when rendering the grid,\n  // it will want new pages in the cache as it asks for rows. only when we are inserting /\n  // removing rows via the api is dontCreatePage set, where we move rows between the pages.\n  getRow(rowIndex, dontCreatePage = false) {\n    const blockId = Math.floor(rowIndex / this.params.blockSize);\n    let block = this.blocks[blockId];\n    if (!block) {\n      if (dontCreatePage) {\n        return void 0;\n      }\n      block = this.createBlock(blockId);\n    }\n    return block.getRow(rowIndex);\n  }\n  createBlock(blockNumber) {\n    const params = this.params;\n    const newBlock = this.createBean(new InfiniteBlock(blockNumber, this, params));\n    this.blocks[newBlock.id] = newBlock;\n    this.blockCount++;\n    this.purgeBlocksIfNeeded(newBlock);\n    params.rowNodeBlockLoader.addBlock(newBlock);\n    return newBlock;\n  }\n  // we have this on infinite row model only, not server side row model,\n  // because for server side, it would leave the children in inconsistent\n  // state - eg if a node had children, but after the refresh it had data\n  // for a different row, then the children would be with the wrong row node.\n  refreshCache() {\n    const nothingToRefresh = this.blockCount == 0;\n    if (nothingToRefresh) {\n      this.purgeCache();\n      return;\n    }\n    this.getBlocksInOrder().forEach(block => block.setStateWaitingToLoad());\n    this.params.rowNodeBlockLoader.checkBlockToLoad();\n  }\n  destroy() {\n    this.getBlocksInOrder().forEach(block => this.destroyBlock(block));\n    super.destroy();\n  }\n  getRowCount() {\n    return this.rowCount;\n  }\n  isLastRowIndexKnown() {\n    return this.lastRowIndexKnown;\n  }\n  // block calls this, when page loaded\n  pageLoaded(block, lastRow) {\n    if (!this.isAlive()) {\n      return;\n    }\n    _logIfDebug(this.gos, `InfiniteCache - onPageLoaded: page = ${block.id}, lastRow = ${lastRow}`);\n    this.checkRowCount(block, lastRow);\n    this.onCacheUpdated();\n  }\n  purgeBlocksIfNeeded(blockToExclude) {\n    const blocksForPurging = this.getBlocksInOrder().filter(b => b != blockToExclude);\n    const lastAccessedComparator = (a, b) => b.lastAccessed - a.lastAccessed;\n    blocksForPurging.sort(lastAccessedComparator);\n    const maxBlocksProvided = this.params.maxBlocksInCache > 0;\n    const blocksToKeep = maxBlocksProvided ? this.params.maxBlocksInCache - 1 : null;\n    const emptyBlocksToKeep = MAX_EMPTY_BLOCKS_TO_KEEP - 1;\n    blocksForPurging.forEach((block, index) => {\n      const purgeBecauseBlockEmpty = block.state === \"needsLoading\" && index >= emptyBlocksToKeep;\n      const purgeBecauseCacheFull = maxBlocksProvided ? index >= blocksToKeep : false;\n      if (purgeBecauseBlockEmpty || purgeBecauseCacheFull) {\n        if (this.isBlockCurrentlyDisplayed(block)) {\n          return;\n        }\n        if (this.isBlockFocused(block)) {\n          return;\n        }\n        this.removeBlockFromCache(block);\n      }\n    });\n  }\n  isBlockFocused(block) {\n    const focusedCell = this.beans.focusSvc.getFocusCellToUseAfterRefresh();\n    if (!focusedCell) {\n      return false;\n    }\n    if (focusedCell.rowPinned != null) {\n      return false;\n    }\n    const {\n      startRow,\n      endRow\n    } = block;\n    const hasFocus = focusedCell.rowIndex >= startRow && focusedCell.rowIndex < endRow;\n    return hasFocus;\n  }\n  isBlockCurrentlyDisplayed(block) {\n    const {\n      startRow,\n      endRow\n    } = block;\n    return this.beans.rowRenderer.isRangeInRenderedViewport(startRow, endRow - 1);\n  }\n  removeBlockFromCache(blockToRemove) {\n    if (!blockToRemove) {\n      return;\n    }\n    this.destroyBlock(blockToRemove);\n  }\n  checkRowCount(block, lastRow) {\n    if (typeof lastRow === \"number\" && lastRow >= 0) {\n      this.rowCount = lastRow;\n      this.lastRowIndexKnown = true;\n    } else if (!this.lastRowIndexKnown) {\n      const {\n        blockSize,\n        overflowSize\n      } = this.params;\n      const lastRowIndex = (block.id + 1) * blockSize;\n      const lastRowIndexPlusOverflow = lastRowIndex + overflowSize;\n      if (this.rowCount < lastRowIndexPlusOverflow) {\n        this.rowCount = lastRowIndexPlusOverflow;\n      }\n    }\n  }\n  setRowCount(rowCount, lastRowIndexKnown) {\n    this.rowCount = rowCount;\n    if (_exists(lastRowIndexKnown)) {\n      this.lastRowIndexKnown = lastRowIndexKnown;\n    }\n    if (!this.lastRowIndexKnown) {\n      if (this.rowCount % this.params.blockSize === 0) {\n        this.rowCount++;\n      }\n    }\n    this.onCacheUpdated();\n  }\n  forEachNodeDeep(callback) {\n    const sequence = {\n      value: 0\n    };\n    this.getBlocksInOrder().forEach(block => block.forEachNode(callback, sequence, this.rowCount));\n  }\n  getBlocksInOrder() {\n    const blockComparator = (a, b) => a.id - b.id;\n    const blocks = Object.values(this.blocks).sort(blockComparator);\n    return blocks;\n  }\n  destroyBlock(block) {\n    delete this.blocks[block.id];\n    this.destroyBean(block);\n    this.blockCount--;\n    this.params.rowNodeBlockLoader.removeBlock(block);\n  }\n  // gets called 1) row count changed 2) cache purged 3) items inserted\n  onCacheUpdated() {\n    if (this.isAlive()) {\n      this.destroyAllBlocksPastVirtualRowCount();\n      this.eventSvc.dispatchEvent({\n        type: \"storeUpdated\"\n      });\n    }\n  }\n  destroyAllBlocksPastVirtualRowCount() {\n    const blocksToDestroy = [];\n    this.getBlocksInOrder().forEach(block => {\n      const startRow = block.id * this.params.blockSize;\n      if (startRow >= this.rowCount) {\n        blocksToDestroy.push(block);\n      }\n    });\n    if (blocksToDestroy.length > 0) {\n      blocksToDestroy.forEach(block => this.destroyBlock(block));\n    }\n  }\n  purgeCache() {\n    this.getBlocksInOrder().forEach(block => this.removeBlockFromCache(block));\n    this.lastRowIndexKnown = false;\n    if (this.rowCount === 0) {\n      this.rowCount = this.params.initialRowCount;\n    }\n    this.onCacheUpdated();\n  }\n  getRowNodesInRange(firstInRange, lastInRange) {\n    const result = [];\n    let lastBlockId = -1;\n    let inActiveRange = false;\n    const numberSequence = {\n      value: 0\n    };\n    let foundGapInSelection = false;\n    this.getBlocksInOrder().forEach(block => {\n      if (foundGapInSelection) {\n        return;\n      }\n      if (inActiveRange && lastBlockId + 1 !== block.id) {\n        foundGapInSelection = true;\n        return;\n      }\n      lastBlockId = block.id;\n      block.forEachNode(rowNode => {\n        const hitFirstOrLast = rowNode === firstInRange || rowNode === lastInRange;\n        if (inActiveRange || hitFirstOrLast) {\n          result.push(rowNode);\n        }\n        if (hitFirstOrLast) {\n          inActiveRange = !inActiveRange;\n        }\n      }, numberSequence, this.rowCount);\n    });\n    const invalidRange = foundGapInSelection || inActiveRange;\n    return invalidRange ? [] : result;\n  }\n};\n\n// packages/ag-grid-community/src/infiniteRowModel/infiniteRowModel.ts\nvar InfiniteRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowModel\";\n  }\n  getRowBounds(index) {\n    return {\n      rowHeight: this.rowHeight,\n      rowTop: this.rowHeight * index\n    };\n  }\n  // we don't implement as lazy row heights is not supported in this row model\n  ensureRowHeightsValid() {\n    return false;\n  }\n  postConstruct() {\n    if (this.gos.get(\"rowModelType\") !== \"infinite\") {\n      return;\n    }\n    this.rowHeight = _getRowHeightAsNumber(this.beans);\n    this.addEventListeners();\n    this.addDestroyFunc(() => this.destroyCache());\n  }\n  start() {\n    this.setDatasource(this.gos.get(\"datasource\"));\n  }\n  destroy() {\n    this.destroyDatasource();\n    super.destroy();\n  }\n  destroyDatasource() {\n    if (this.datasource) {\n      this.destroyBean(this.datasource);\n      this.beans.rowRenderer.datasourceChanged();\n      this.datasource = null;\n    }\n  }\n  addEventListeners() {\n    this.addManagedEventListeners({\n      filterChanged: this.reset.bind(this),\n      sortChanged: this.reset.bind(this),\n      newColumnsLoaded: this.onColumnEverything.bind(this),\n      storeUpdated: this.dispatchModelUpdatedEvent.bind(this)\n    });\n    this.addManagedPropertyListener(\"datasource\", () => this.setDatasource(this.gos.get(\"datasource\")));\n    this.addManagedPropertyListener(\"cacheBlockSize\", () => this.resetCache());\n    this.addManagedPropertyListener(\"rowHeight\", () => {\n      this.rowHeight = _getRowHeightAsNumber(this.beans);\n      this.cacheParams.rowHeight = this.rowHeight;\n      this.updateRowHeights();\n    });\n  }\n  onColumnEverything() {\n    let resetRequired;\n    if (this.cacheParams) {\n      resetRequired = !_jsonEquals(this.cacheParams.sortModel, this.beans.sortSvc?.getSortModel() ?? []);\n    } else {\n      resetRequired = true;\n    }\n    if (resetRequired) {\n      this.reset();\n    }\n  }\n  getType() {\n    return \"infinite\";\n  }\n  setDatasource(datasource) {\n    this.destroyDatasource();\n    this.datasource = datasource;\n    if (datasource) {\n      this.reset();\n    }\n  }\n  isEmpty() {\n    return !this.infiniteCache;\n  }\n  isRowsToRender() {\n    return !!this.infiniteCache;\n  }\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\n    return this.infiniteCache?.getRowNodesInRange(firstInRange, lastInRange) ?? [];\n  }\n  reset() {\n    if (!this.datasource) {\n      return;\n    }\n    const getRowIdFunc = _getRowIdCallback(this.gos);\n    const userGeneratingIds = getRowIdFunc != null;\n    if (!userGeneratingIds) {\n      this.beans.selectionSvc?.reset(\"rowDataChanged\");\n    }\n    this.resetCache();\n  }\n  dispatchModelUpdatedEvent() {\n    this.eventSvc.dispatchEvent({\n      type: \"modelUpdated\",\n      // not sure if these should all be false - noticed if after implementing,\n      // maybe they should be true?\n      newPage: false,\n      newPageSize: false,\n      newData: false,\n      keepRenderedRows: true,\n      animate: false\n    });\n  }\n  resetCache() {\n    this.destroyCache();\n    const beans = this.beans;\n    const {\n      filterManager,\n      sortSvc,\n      rowNodeBlockLoader,\n      eventSvc,\n      gos\n    } = beans;\n    this.cacheParams = {\n      // the user provided datasource\n      datasource: this.datasource,\n      // sort and filter model\n      filterModel: filterManager?.getFilterModel() ?? {},\n      sortModel: sortSvc?.getSortModel() ?? [],\n      rowNodeBlockLoader,\n      // properties - this way we take a snapshot of them, so if user changes any, they will be\n      // used next time we create a new cache, which is generally after a filter or sort change,\n      // or a new datasource is set\n      initialRowCount: gos.get(\"infiniteInitialRowCount\"),\n      maxBlocksInCache: gos.get(\"maxBlocksInCache\"),\n      rowHeight: _getRowHeightAsNumber(beans),\n      // if user doesn't provide overflow, we use default overflow of 1, so user can scroll past\n      // the current page and request first row of next page\n      overflowSize: gos.get(\"cacheOverflowSize\"),\n      // page size needs to be 1 or greater. having it at 1 would be silly, as you would be hitting the\n      // server for one page at a time. so the default if not specified is 100.\n      blockSize: gos.get(\"cacheBlockSize\"),\n      // the cache could create this, however it is also used by the pages, so handy to create it\n      // here as the settings are also passed to the pages\n      lastAccessedSequence: {\n        value: 0\n      }\n    };\n    this.infiniteCache = this.createBean(new InfiniteCache(this.cacheParams));\n    eventSvc.dispatchEventOnce({\n      type: \"rowCountReady\"\n    });\n    this.dispatchModelUpdatedEvent();\n  }\n  updateRowHeights() {\n    this.forEachNode(node => {\n      node.setRowHeight(this.rowHeight);\n      node.setRowTop(this.rowHeight * node.rowIndex);\n    });\n    this.dispatchModelUpdatedEvent();\n  }\n  destroyCache() {\n    this.infiniteCache = this.destroyBean(this.infiniteCache);\n  }\n  getRow(rowIndex) {\n    const infiniteCache = this.infiniteCache;\n    if (!infiniteCache) {\n      return void 0;\n    }\n    if (rowIndex >= infiniteCache.getRowCount()) {\n      return void 0;\n    }\n    return infiniteCache.getRow(rowIndex);\n  }\n  getRowNode(id) {\n    let result;\n    this.forEachNode(rowNode => {\n      if (rowNode.id === id) {\n        result = rowNode;\n      }\n    });\n    return result;\n  }\n  forEachNode(callback) {\n    this.infiniteCache?.forEachNodeDeep(callback);\n  }\n  getTopLevelRowCount() {\n    return this.getRowCount();\n  }\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\n    return topLevelIndex;\n  }\n  getRowIndexAtPixel(pixel) {\n    if (this.rowHeight !== 0) {\n      const rowIndexForPixel = Math.floor(pixel / this.rowHeight);\n      const lastRowIndex = this.getRowCount() - 1;\n      if (rowIndexForPixel > lastRowIndex) {\n        return lastRowIndex;\n      }\n      return rowIndexForPixel;\n    }\n    return 0;\n  }\n  getRowCount() {\n    return this.infiniteCache ? this.infiniteCache.getRowCount() : 0;\n  }\n  isRowPresent(rowNode) {\n    return !!this.getRowNode(rowNode.id);\n  }\n  refreshCache() {\n    this.infiniteCache?.refreshCache();\n  }\n  purgeCache() {\n    this.infiniteCache?.purgeCache();\n  }\n  // for iRowModel\n  isLastRowIndexKnown() {\n    return this.infiniteCache?.isLastRowIndexKnown() ?? false;\n  }\n  setRowCount(rowCount, lastRowIndexKnown) {\n    this.infiniteCache?.setRowCount(rowCount, lastRowIndexKnown);\n  }\n};\n\n// packages/ag-grid-community/src/infiniteRowModel/infiniteRowModelApi.ts\nfunction refreshInfiniteCache(beans) {\n  _getInfiniteRowModel(beans)?.refreshCache();\n}\nfunction purgeInfiniteCache(beans) {\n  _getInfiniteRowModel(beans)?.purgeCache();\n}\nfunction getInfiniteRowCount(beans) {\n  return _getInfiniteRowModel(beans)?.getRowCount();\n}\n\n// packages/ag-grid-community/src/infiniteRowModel/rowNodeBlockLoader.ts\nvar RowNodeBlockLoader = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowNodeBlockLoader\";\n    this.activeBlockLoadsCount = 0;\n    this.blocks = [];\n    this.active = true;\n  }\n  postConstruct() {\n    this.maxConcurrentRequests = _getMaxConcurrentDatasourceRequests(this.gos);\n    const blockLoadDebounceMillis = this.gos.get(\"blockLoadDebounceMillis\");\n    if (blockLoadDebounceMillis && blockLoadDebounceMillis > 0) {\n      this.checkBlockToLoadDebounce = _debounce(this, this.performCheckBlocksToLoad.bind(this), blockLoadDebounceMillis);\n    }\n  }\n  addBlock(block) {\n    this.blocks.push(block);\n    block.addEventListener(\"loadComplete\", this.loadComplete.bind(this));\n    this.checkBlockToLoad();\n  }\n  removeBlock(block) {\n    _removeFromArray(this.blocks, block);\n  }\n  destroy() {\n    super.destroy();\n    this.active = false;\n  }\n  loadComplete() {\n    this.activeBlockLoadsCount--;\n    this.checkBlockToLoad();\n  }\n  checkBlockToLoad() {\n    if (this.checkBlockToLoadDebounce) {\n      this.checkBlockToLoadDebounce();\n    } else {\n      this.performCheckBlocksToLoad();\n    }\n  }\n  performCheckBlocksToLoad() {\n    if (!this.active) {\n      return;\n    }\n    this.printCacheStatus();\n    if (this.maxConcurrentRequests != null && this.activeBlockLoadsCount >= this.maxConcurrentRequests) {\n      _logIfDebug(this.gos, `RowNodeBlockLoader - checkBlockToLoad: max loads exceeded`);\n      return;\n    }\n    const loadAvailability = this.maxConcurrentRequests != null ? this.maxConcurrentRequests - this.activeBlockLoadsCount : 1;\n    const blocksToLoad = this.blocks.filter(block => block.state === \"needsLoading\").slice(0, loadAvailability);\n    this.activeBlockLoadsCount += blocksToLoad.length;\n    blocksToLoad.forEach(block => block.load());\n    this.printCacheStatus();\n  }\n  getBlockState() {\n    const result = {};\n    this.blocks.forEach(block => {\n      const {\n        id,\n        state\n      } = block.getBlockStateJson();\n      result[id] = state;\n    });\n    return result;\n  }\n  printCacheStatus() {\n    _logIfDebug(this.gos, `RowNodeBlockLoader - printCacheStatus: activePageLoadsCount = ${this.activeBlockLoadsCount}, blocks = ${JSON.stringify(this.getBlockState())}`);\n  }\n};\n\n// packages/ag-grid-community/src/infiniteRowModel/infiniteRowModelModule.ts\nvar InfiniteRowModelCoreModule = {\n  moduleName: \"InfiniteRowModelCore\",\n  version: VERSION,\n  rowModels: [\"infinite\"],\n  beans: [InfiniteRowModel, RowNodeBlockLoader]\n};\nvar InfiniteRowModelModule = {\n  moduleName: \"InfiniteRowModel\",\n  version: VERSION,\n  apiFunctions: {\n    refreshInfiniteCache,\n    purgeInfiniteCache,\n    getInfiniteRowCount\n  },\n  dependsOn: [InfiniteRowModelCoreModule, SsrmInfiniteSharedApiModule]\n};\n\n// packages/ag-grid-community/src/rendering/cellRenderers/animateShowChangeCellRenderer.ts\nvar ARROW_UP = \"\\u2191\";\nvar ARROW_DOWN = \"\\u2193\";\nvar AnimateShowChangeCellRendererElement = {\n  tag: \"span\",\n  children: [{\n    tag: \"span\",\n    ref: \"eDelta\",\n    cls: \"ag-value-change-delta\"\n  }, {\n    tag: \"span\",\n    ref: \"eValue\",\n    cls: \"ag-value-change-value\"\n  }]\n};\nvar AnimateShowChangeCellRenderer = class extends Component {\n  constructor() {\n    super(AnimateShowChangeCellRendererElement);\n    this.eValue = RefPlaceholder;\n    this.eDelta = RefPlaceholder;\n    this.refreshCount = 0;\n  }\n  init(params) {\n    this.refresh(params, true);\n  }\n  showDelta(params, delta) {\n    const absDelta = Math.abs(delta);\n    const valueFormatted = params.formatValue(absDelta);\n    const valueToUse = _exists(valueFormatted) ? valueFormatted : absDelta;\n    const deltaUp = delta >= 0;\n    const eDelta = this.eDelta;\n    if (deltaUp) {\n      eDelta.textContent = ARROW_UP + valueToUse;\n    } else {\n      eDelta.textContent = ARROW_DOWN + valueToUse;\n    }\n    eDelta.classList.toggle(\"ag-value-change-delta-up\", deltaUp);\n    eDelta.classList.toggle(\"ag-value-change-delta-down\", !deltaUp);\n  }\n  setTimerToRemoveDelta() {\n    this.refreshCount++;\n    const refreshCountCopy = this.refreshCount;\n    this.beans.frameworkOverrides.wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (refreshCountCopy === this.refreshCount) {\n          this.hideDeltaValue();\n        }\n      }, 2e3);\n    });\n  }\n  hideDeltaValue() {\n    this.eValue.classList.remove(\"ag-value-change-value-highlight\");\n    _clearElement(this.eDelta);\n  }\n  refresh(params, isInitialRender = false) {\n    const {\n      value,\n      valueFormatted\n    } = params;\n    const {\n      eValue,\n      lastValue,\n      beans\n    } = this;\n    if (value === lastValue) {\n      return false;\n    }\n    if (_exists(valueFormatted)) {\n      eValue.textContent = valueFormatted;\n    } else if (_exists(value)) {\n      eValue.textContent = value;\n    } else {\n      _clearElement(eValue);\n    }\n    if (beans.filterManager?.isSuppressFlashingCellsBecauseFiltering()) {\n      return false;\n    }\n    const numericValue = value && typeof value === \"object\" && \"toNumber\" in value ? value.toNumber() : value;\n    const numericLastValue = lastValue && typeof lastValue === \"object\" && \"toNumber\" in lastValue ? lastValue.toNumber() : lastValue;\n    if (numericValue === numericLastValue) {\n      return false;\n    }\n    if (typeof numericValue === \"number\" && typeof numericLastValue === \"number\") {\n      const delta = numericValue - numericLastValue;\n      this.showDelta(params, delta);\n    }\n    if (lastValue) {\n      eValue.classList.add(\"ag-value-change-value-highlight\");\n    }\n    if (!isInitialRender) {\n      this.setTimerToRemoveDelta();\n    }\n    this.lastValue = value;\n    return true;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cellRenderers/animateSlideCellRenderer.css-GENERATED.ts\nvar animateSlideCellRendererCSS = /*css*/\n`.ag-value-slide-out{opacity:1}:where(.ag-ltr) .ag-value-slide-out{margin-right:5px;transition:opacity 3s,margin-right 3s}:where(.ag-rtl) .ag-value-slide-out{margin-left:5px;transition:opacity 3s,margin-left 3s}:where(.ag-ltr,.ag-rtl) .ag-value-slide-out{transition-timing-function:linear}.ag-value-slide-out-end{opacity:0}:where(.ag-ltr) .ag-value-slide-out-end{margin-right:10px}:where(.ag-rtl) .ag-value-slide-out-end{margin-left:10px}`;\n\n// packages/ag-grid-community/src/rendering/cellRenderers/animateSlideCellRenderer.ts\nvar AnimateSlideCellRendererElement = {\n  tag: \"span\",\n  children: [{\n    tag: \"span\",\n    ref: \"eCurrent\",\n    cls: \"ag-value-slide-current\"\n  }]\n};\nvar AnimateSlideCellRenderer = class extends Component {\n  constructor() {\n    super(AnimateSlideCellRendererElement);\n    this.eCurrent = RefPlaceholder;\n    this.refreshCount = 0;\n    this.registerCSS(animateSlideCellRendererCSS);\n  }\n  init(params) {\n    this.refresh(params, true);\n  }\n  addSlideAnimation() {\n    this.refreshCount++;\n    const refreshCountCopy = this.refreshCount;\n    if (this.ePrevious) {\n      this.getGui().removeChild(this.ePrevious);\n    }\n    const {\n      beans,\n      eCurrent\n    } = this;\n    const prevElement = _createElement({\n      tag: \"span\",\n      cls: \"ag-value-slide-previous ag-value-slide-out\"\n    });\n    this.ePrevious = prevElement;\n    prevElement.textContent = eCurrent.textContent;\n    this.getGui().insertBefore(prevElement, eCurrent);\n    beans.frameworkOverrides.wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (refreshCountCopy !== this.refreshCount) {\n          return;\n        }\n        this.ePrevious.classList.add(\"ag-value-slide-out-end\");\n      }, 50);\n      window.setTimeout(() => {\n        if (refreshCountCopy !== this.refreshCount) {\n          return;\n        }\n        this.getGui().removeChild(this.ePrevious);\n        this.ePrevious = null;\n      }, 3e3);\n    });\n  }\n  refresh(params, isInitialRender = false) {\n    let value = params.value;\n    if (_missing(value)) {\n      value = \"\";\n    }\n    if (value === this.lastValue) {\n      return false;\n    }\n    if (this.beans.filterManager?.isSuppressFlashingCellsBecauseFiltering()) {\n      return false;\n    }\n    if (!isInitialRender) {\n      this.addSlideAnimation();\n    }\n    this.lastValue = value;\n    const eCurrent = this.eCurrent;\n    if (_exists(params.valueFormatted)) {\n      eCurrent.textContent = params.valueFormatted;\n    } else if (_exists(params.value)) {\n      eCurrent.textContent = value;\n    } else {\n      _clearElement(eCurrent);\n    }\n    return true;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cell/cellFlashService.ts\nvar CellFlashService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"cellFlashSvc\";\n    this.nextAnimationTime = null;\n    this.nextAnimationCycle = null;\n    this.animations = {\n      highlight: /* @__PURE__ */new Map(),\n      \"data-changed\": /* @__PURE__ */new Map()\n    };\n  }\n  animateCell(cellCtrl, cssName, flashDuration = this.beans.gos.get(\"cellFlashDuration\"), fadeDuration = this.beans.gos.get(\"cellFadeDuration\")) {\n    const animations = this.animations[cssName];\n    animations.delete(cellCtrl);\n    const time = Date.now();\n    const flashEndTime = time + flashDuration;\n    const fadeEndTime = time + flashDuration + fadeDuration;\n    const animState = {\n      phase: \"flash\",\n      flashEndTime,\n      fadeEndTime\n    };\n    animations.set(cellCtrl, animState);\n    const cssBase = `ag-cell-${cssName}`;\n    const cssAnimation = `${cssBase}-animation`;\n    const {\n      comp,\n      eGui: {\n        style\n      }\n    } = cellCtrl;\n    comp.toggleCss(cssBase, true);\n    comp.toggleCss(cssAnimation, false);\n    style.removeProperty(\"transition\");\n    style.removeProperty(\"transition-delay\");\n    if (this.nextAnimationTime && flashEndTime + 15 < this.nextAnimationTime) {\n      clearTimeout(this.nextAnimationCycle);\n      this.nextAnimationCycle = null;\n      this.nextAnimationTime = null;\n    }\n    if (!this.nextAnimationCycle) {\n      this.beans.frameworkOverrides.wrapIncoming(() => {\n        this.nextAnimationCycle = setTimeout(this.advanceAnimations.bind(this), flashDuration);\n      });\n      this.nextAnimationTime = flashEndTime;\n    }\n  }\n  advanceAnimations() {\n    const time = Date.now();\n    let nextAnimationTime = null;\n    for (const cssName of Object.keys(this.animations)) {\n      const animations = this.animations[cssName];\n      const cssBase = `ag-cell-${cssName}`;\n      const cssAnimation = `${cssBase}-animation`;\n      for (const [cell, animState] of animations) {\n        if (!cell.isAlive() || !cell.comp) {\n          animations.delete(cell);\n          continue;\n        }\n        const {\n          phase,\n          flashEndTime,\n          fadeEndTime\n        } = animState;\n        const nextActionableTime = phase === \"flash\" ? flashEndTime : fadeEndTime;\n        const requiresAction = time + 15 >= nextActionableTime;\n        if (!requiresAction) {\n          nextAnimationTime = Math.min(nextActionableTime, nextAnimationTime ?? Infinity);\n          continue;\n        }\n        const {\n          comp,\n          eGui: {\n            style\n          }\n        } = cell;\n        switch (phase) {\n          case \"flash\":\n            comp.toggleCss(cssBase, false);\n            comp.toggleCss(cssAnimation, true);\n            style.transition = `background-color ${fadeEndTime - flashEndTime}ms`;\n            style.transitionDelay = `${flashEndTime - time}ms`;\n            nextAnimationTime = Math.min(fadeEndTime, nextAnimationTime ?? Infinity);\n            animState.phase = \"fade\";\n            break;\n          case \"fade\":\n            comp.toggleCss(cssBase, false);\n            comp.toggleCss(cssAnimation, false);\n            style.removeProperty(\"transition\");\n            style.removeProperty(\"transition-delay\");\n            animations.delete(cell);\n            break;\n        }\n      }\n    }\n    if (nextAnimationTime == null) {\n      this.nextAnimationTime = null;\n      this.nextAnimationCycle = null;\n    } else if (nextAnimationTime) {\n      this.nextAnimationCycle = setTimeout(this.advanceAnimations.bind(this), nextAnimationTime - time);\n      this.nextAnimationTime = nextAnimationTime;\n    }\n  }\n  onFlashCells(cellCtrl, event) {\n    if (!cellCtrl.comp) {\n      return;\n    }\n    const cellId = _createCellId(cellCtrl.cellPosition);\n    const shouldFlash = event.cells[cellId];\n    if (shouldFlash) {\n      this.animateCell(cellCtrl, \"highlight\");\n    }\n  }\n  flashCell(cellCtrl, delays) {\n    this.animateCell(cellCtrl, \"data-changed\", delays?.flashDuration, delays?.fadeDuration);\n  }\n  destroy() {\n    for (const cssName of Object.keys(this.animations)) {\n      const animations = this.animations[cssName];\n      animations.clear();\n    }\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cell/highlightChangesApi.ts\nfunction flashCells(beans, params = {}) {\n  const {\n    cellFlashSvc\n  } = beans;\n  if (!cellFlashSvc) {\n    return;\n  }\n  beans.frameworkOverrides.wrapIncoming(() => {\n    beans.rowRenderer.getCellCtrls(params.rowNodes, params.columns).forEach(cellCtrl => cellFlashSvc.flashCell(cellCtrl, params));\n  });\n}\n\n// packages/ag-grid-community/src/rendering/cell/highlightChangesModule.ts\nvar HighlightChangesModule = {\n  moduleName: \"HighlightChanges\",\n  version: VERSION,\n  beans: [CellFlashService],\n  userComponents: {\n    agAnimateShowChangeCellRenderer: AnimateShowChangeCellRenderer,\n    agAnimateSlideCellRenderer: AnimateSlideCellRenderer\n  },\n  apiFunctions: {\n    flashCells\n  }\n};\n\n// packages/ag-grid-community/src/misc/state/stateApi.ts\nfunction getState(beans) {\n  return beans.stateSvc?.getState() ?? {};\n}\nfunction setState(beans, state, propertiesToIgnore) {\n  return beans.stateSvc?.setState(state, propertiesToIgnore);\n}\n\n// packages/ag-grid-community/src/misc/state/stateModelMigration.ts\nfunction migrateGridStateModel(state) {\n  state = {\n    ...state\n  };\n  if (!state.version) {\n    state.version = \"32.1.0\";\n  }\n  switch (state.version) {\n    case \"32.1.0\":\n      state = migrateV32_1(state);\n  }\n  state.version = VERSION;\n  return state;\n}\nfunction migrateV32_1(state) {\n  state.cellSelection = jsonGet(state, \"rangeSelection\");\n  return state;\n}\nfunction jsonGet(json, key) {\n  if (json && typeof json === \"object\") {\n    return json[key];\n  }\n}\n\n// packages/ag-grid-community/src/misc/state/stateService.ts\nvar StateService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"stateSvc\";\n    this.updateRowGroupExpansionStateTimer = 0;\n    this.suppressEvents = true;\n    this.queuedUpdateSources = /* @__PURE__ */new Set();\n    this.dispatchStateUpdateEventDebounced = _debounce(this, () => this.dispatchQueuedStateUpdateEvents(), 0);\n    // If user is doing a manual expand all node by node, we don't want to process one at a time.\n    // EVENT_ROW_GROUP_OPENED is already async, so no impact of making the state async here.\n    this.onRowGroupOpenedDebounced = _debounce(this, () => {\n      this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\n    }, 0);\n    // similar to row expansion, want to debounce. However, selection is synchronous, so need to mark as stale in case `getState` is called.\n    this.onRowSelectedDebounced = _debounce(this, () => {\n      this.staleStateKeys.delete(\"rowSelection\");\n      this.updateCachedState(\"rowSelection\", this.getRowSelectionState());\n    }, 0);\n    this.staleStateKeys = /* @__PURE__ */new Set();\n  }\n  postConstruct() {\n    this.isClientSideRowModel = _isClientSideRowModel(this.gos);\n    const initialState = migrateGridStateModel(this.gos.get(\"initialState\") ?? {});\n    const partialColumnState = initialState.partialColumnState;\n    delete initialState.partialColumnState;\n    this.cachedState = initialState;\n    const suppressEventsAndDispatchInitEvent = this.suppressEventsAndDispatchInitEvent.bind(this);\n    this.beans.ctrlsSvc.whenReady(this, () => suppressEventsAndDispatchInitEvent(() => this.setupStateOnGridReady(initialState)));\n    const [newColumnsLoadedDestroyFunc, rowCountReadyDestroyFunc, firstDataRenderedDestroyFunc] = this.addManagedEventListeners({\n      newColumnsLoaded: ({\n        source\n      }) => {\n        if (source === \"gridInitializing\") {\n          newColumnsLoadedDestroyFunc();\n          suppressEventsAndDispatchInitEvent(() => this.setupStateOnColumnsInitialised(initialState, !!partialColumnState));\n        }\n      },\n      rowCountReady: () => {\n        rowCountReadyDestroyFunc?.();\n        suppressEventsAndDispatchInitEvent(() => this.setupStateOnRowCountReady(initialState));\n      },\n      firstDataRendered: () => {\n        firstDataRenderedDestroyFunc?.();\n        suppressEventsAndDispatchInitEvent(() => this.setupStateOnFirstDataRendered(initialState));\n      }\n    });\n  }\n  destroy() {\n    super.destroy();\n    clearTimeout(this.updateRowGroupExpansionStateTimer);\n    this.queuedUpdateSources.clear();\n  }\n  getState() {\n    if (this.staleStateKeys.size) {\n      this.refreshStaleState();\n    }\n    return this.cachedState;\n  }\n  setState(providedState, propertiesToIgnore) {\n    const state = migrateGridStateModel(providedState);\n    delete state.partialColumnState;\n    this.cachedState = state;\n    this.startSuppressEvents();\n    const source = \"api\";\n    const ignoreSet = propertiesToIgnore ? new Set(propertiesToIgnore) : void 0;\n    this.setGridReadyState(state, source, ignoreSet);\n    this.setColumnsInitialisedState(state, source, false, ignoreSet);\n    this.setRowCountState(state, source, ignoreSet);\n    setTimeout(() => {\n      if (this.isAlive()) {\n        this.setFirstDataRenderedState(state, source, ignoreSet);\n      }\n      this.stopSuppressEvents(source);\n    });\n  }\n  setGridReadyState(state, source, ignoreSet) {\n    if (source === \"api\" && !ignoreSet?.has(\"sideBar\")) {\n      this.beans.sideBar?.comp?.setState(state.sideBar);\n    }\n    this.updateCachedState(\"sideBar\", this.getSideBarState());\n  }\n  setupStateOnGridReady(initialState) {\n    this.setGridReadyState(initialState, \"gridInitializing\");\n    const stateUpdater = () => this.updateCachedState(\"sideBar\", this.getSideBarState());\n    this.addManagedEventListeners({\n      toolPanelVisibleChanged: stateUpdater,\n      sideBarUpdated: stateUpdater\n    });\n  }\n  updateColumnAndGroupState() {\n    this.updateColumnState([\"aggregation\", \"columnOrder\", \"columnPinning\", \"columnSizing\", \"columnVisibility\", \"pivot\", \"rowGroup\", \"sort\"]);\n    this.updateCachedState(\"columnGroup\", this.getColumnGroupState());\n  }\n  setColumnsInitialisedState(state, source, partialColumnState, ignoreSet) {\n    this.setColumnState(state, source, partialColumnState, ignoreSet);\n    this.setColumnGroupState(state, source, ignoreSet);\n    this.updateColumnAndGroupState();\n  }\n  setupStateOnColumnsInitialised(initialState, partialColumnState) {\n    this.setColumnsInitialisedState(initialState, \"gridInitializing\", partialColumnState);\n    const onUpdate = state => () => this.updateColumnState([state]);\n    this.addManagedEventListeners({\n      columnValueChanged: onUpdate(\"aggregation\"),\n      columnMoved: onUpdate(\"columnOrder\"),\n      columnPinned: onUpdate(\"columnPinning\"),\n      columnResized: onUpdate(\"columnSizing\"),\n      columnVisible: onUpdate(\"columnVisibility\"),\n      columnPivotChanged: onUpdate(\"pivot\"),\n      columnPivotModeChanged: onUpdate(\"pivot\"),\n      columnRowGroupChanged: onUpdate(\"rowGroup\"),\n      sortChanged: onUpdate(\"sort\"),\n      newColumnsLoaded: this.updateColumnAndGroupState.bind(this),\n      columnGroupOpened: () => this.updateCachedState(\"columnGroup\", this.getColumnGroupState())\n    });\n  }\n  setRowCountState(state, source, ignoreSet) {\n    const {\n      filter: filterState,\n      rowGroupExpansion: rowGroupExpansionState,\n      rowSelection: rowSelectionState,\n      pagination: paginationState\n    } = state;\n    const shouldSetState = (prop, propState) => !ignoreSet?.has(prop) && (propState || source === \"api\");\n    if (shouldSetState(\"filter\", filterState)) {\n      this.setFilterState(filterState);\n    }\n    if (shouldSetState(\"rowGroupExpansion\", rowGroupExpansionState)) {\n      this.setRowGroupExpansionState(rowGroupExpansionState, source);\n    }\n    if (shouldSetState(\"rowSelection\", rowSelectionState)) {\n      this.setRowSelectionState(rowSelectionState, source);\n    }\n    if (shouldSetState(\"pagination\", paginationState)) {\n      this.setPaginationState(paginationState, source);\n    }\n    const updateCachedState = this.updateCachedState.bind(this);\n    updateCachedState(\"filter\", this.getFilterState());\n    updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\n    updateCachedState(\"rowSelection\", this.getRowSelectionState());\n    updateCachedState(\"pagination\", this.getPaginationState());\n  }\n  setupStateOnRowCountReady(initialState) {\n    this.setRowCountState(initialState, \"gridInitializing\");\n    const updateCachedState = this.updateCachedState.bind(this);\n    const updateRowGroupExpansionState = () => {\n      this.updateRowGroupExpansionStateTimer = 0;\n      updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\n    };\n    const updateFilterState = () => updateCachedState(\"filter\", this.getFilterState());\n    const {\n      gos,\n      colFilter\n    } = this.beans;\n    this.addManagedEventListeners({\n      filterChanged: updateFilterState,\n      rowGroupOpened: () => this.onRowGroupOpenedDebounced(),\n      expandOrCollapseAll: updateRowGroupExpansionState,\n      // `groupDefaultExpanded`/`isGroupOpenByDefault` updates expansion state without an expansion event\n      columnRowGroupChanged: updateRowGroupExpansionState,\n      rowDataUpdated: () => {\n        if (gos.get(\"groupDefaultExpanded\") !== 0 || gos.get(\"isGroupOpenByDefault\")) {\n          this.updateRowGroupExpansionStateTimer || (this.updateRowGroupExpansionStateTimer = setTimeout(updateRowGroupExpansionState));\n        }\n      },\n      selectionChanged: () => {\n        this.staleStateKeys.add(\"rowSelection\");\n        this.onRowSelectedDebounced();\n      },\n      paginationChanged: event => {\n        if (event.newPage || event.newPageSize) {\n          updateCachedState(\"pagination\", this.getPaginationState());\n        }\n      }\n    });\n    if (colFilter) {\n      this.addManagedListeners(colFilter, {\n        filterStateChanged: updateFilterState\n      });\n    }\n  }\n  setFirstDataRenderedState(state, source, ignoreSet) {\n    const {\n      scroll: scrollState,\n      cellSelection: cellSelectionState,\n      focusedCell: focusedCellState,\n      columnOrder: columnOrderState,\n      rowPinning\n    } = state;\n    const shouldSetState = (prop, propState) => !ignoreSet?.has(prop) && (propState || source === \"api\");\n    if (shouldSetState(\"focusedCell\", focusedCellState)) {\n      this.setFocusedCellState(focusedCellState);\n    }\n    if (shouldSetState(\"cellSelection\", cellSelectionState)) {\n      this.setCellSelectionState(cellSelectionState);\n    }\n    if (shouldSetState(\"scroll\", scrollState)) {\n      this.setScrollState(scrollState);\n    }\n    if (shouldSetState(\"rowPinning\", rowPinning)) {\n      this.setRowPinningState(rowPinning);\n    }\n    this.setColumnPivotState(!!columnOrderState?.orderedColIds, source);\n    const updateCachedState = this.updateCachedState.bind(this);\n    updateCachedState(\"sideBar\", this.getSideBarState());\n    updateCachedState(\"focusedCell\", this.getFocusedCellState());\n    const cellSelection = this.getRangeSelectionState();\n    updateCachedState(\"rangeSelection\", cellSelection);\n    updateCachedState(\"cellSelection\", cellSelection);\n    updateCachedState(\"scroll\", this.getScrollState());\n  }\n  setupStateOnFirstDataRendered(initialState) {\n    this.setFirstDataRenderedState(initialState, \"gridInitializing\");\n    const updateCachedState = this.updateCachedState.bind(this);\n    this.addManagedEventListeners({\n      cellFocused: () => updateCachedState(\"focusedCell\", this.getFocusedCellState()),\n      cellSelectionChanged: event => {\n        if (event.finished) {\n          const cellSelection = this.getRangeSelectionState();\n          updateCachedState(\"rangeSelection\", cellSelection);\n          updateCachedState(\"cellSelection\", cellSelection);\n        }\n      },\n      bodyScrollEnd: () => updateCachedState(\"scroll\", this.getScrollState()),\n      pinnedRowsChanged: () => updateCachedState(\"rowPinning\", this.getRowPinningState())\n    });\n  }\n  getColumnState() {\n    const beans = this.beans;\n    return convertColumnState(_getColumnState(beans), beans.colModel.isPivotMode());\n  }\n  setColumnState(state, source, partialColumnState, ignoreSet) {\n    const {\n      sort: sortState,\n      rowGroup: groupState,\n      aggregation: aggregationState,\n      pivot: pivotState,\n      columnPinning: columnPinningState,\n      columnVisibility: columnVisibilityState,\n      columnSizing: columnSizingState,\n      columnOrder: columnOrderState\n    } = state;\n    const shouldSetState = (prop, propState) => !ignoreSet?.has(prop) && (propState || source === \"api\");\n    const columnStateMap = {};\n    const getColumnState2 = colId => {\n      let columnState = columnStateMap[colId];\n      if (columnState) {\n        return columnState;\n      }\n      columnState = {\n        colId\n      };\n      columnStateMap[colId] = columnState;\n      return columnState;\n    };\n    const defaultState = {};\n    const shouldSetSortState = shouldSetState(\"sort\", sortState);\n    if (shouldSetSortState) {\n      sortState?.sortModel.forEach(({\n        colId,\n        sort\n      }, sortIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.sort = sort;\n        columnState.sortIndex = sortIndex;\n      });\n    }\n    if (shouldSetSortState || !partialColumnState) {\n      defaultState.sort = null;\n      defaultState.sortIndex = null;\n    }\n    const shouldSetGroupState = shouldSetState(\"rowGroup\", groupState);\n    if (shouldSetGroupState) {\n      groupState?.groupColIds.forEach((colId, rowGroupIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.rowGroup = true;\n        columnState.rowGroupIndex = rowGroupIndex;\n      });\n    }\n    if (shouldSetGroupState || !partialColumnState) {\n      defaultState.rowGroup = null;\n      defaultState.rowGroupIndex = null;\n    }\n    const shouldSetAggregationState = shouldSetState(\"aggregation\", aggregationState);\n    if (shouldSetAggregationState) {\n      aggregationState?.aggregationModel.forEach(({\n        colId,\n        aggFunc\n      }) => {\n        getColumnState2(colId).aggFunc = aggFunc;\n      });\n    }\n    if (shouldSetAggregationState || !partialColumnState) {\n      defaultState.aggFunc = null;\n    }\n    const shouldSetPivotState = shouldSetState(\"pivot\", pivotState);\n    if (shouldSetPivotState) {\n      pivotState?.pivotColIds.forEach((colId, pivotIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.pivot = true;\n        columnState.pivotIndex = pivotIndex;\n      });\n      this.gos.updateGridOptions({\n        options: {\n          pivotMode: !!pivotState?.pivotMode\n        },\n        source\n      });\n    }\n    if (shouldSetPivotState || !partialColumnState) {\n      defaultState.pivot = null;\n      defaultState.pivotIndex = null;\n    }\n    const shouldSetColumnPinningState = shouldSetState(\"columnPinning\", columnPinningState);\n    if (shouldSetColumnPinningState) {\n      columnPinningState?.leftColIds.forEach(colId => {\n        getColumnState2(colId).pinned = \"left\";\n      });\n      columnPinningState?.rightColIds.forEach(colId => {\n        getColumnState2(colId).pinned = \"right\";\n      });\n    }\n    if (shouldSetColumnPinningState || !partialColumnState) {\n      defaultState.pinned = null;\n    }\n    const shouldSetColumnVisibilityState = shouldSetState(\"columnVisibility\", columnVisibilityState);\n    if (shouldSetColumnVisibilityState) {\n      columnVisibilityState?.hiddenColIds.forEach(colId => {\n        getColumnState2(colId).hide = true;\n      });\n    }\n    if (shouldSetColumnVisibilityState || !partialColumnState) {\n      defaultState.hide = null;\n    }\n    const shouldSetColumnSizingState = shouldSetState(\"columnSizing\", columnSizingState);\n    if (shouldSetColumnSizingState) {\n      columnSizingState?.columnSizingModel.forEach(({\n        colId,\n        flex,\n        width\n      }) => {\n        const columnState = getColumnState2(colId);\n        columnState.flex = flex ?? null;\n        columnState.width = width;\n      });\n    }\n    if (shouldSetColumnSizingState || !partialColumnState) {\n      defaultState.flex = null;\n    }\n    const columns = columnOrderState?.orderedColIds;\n    const applyOrder = !!columns?.length && !ignoreSet?.has(\"columnOrder\");\n    const columnStates = applyOrder ? columns.map(colId => getColumnState2(colId)) : Object.values(columnStateMap);\n    if (columnStates.length) {\n      this.columnStates = columnStates;\n      _applyColumnState(this.beans, {\n        state: columnStates,\n        applyOrder,\n        defaultState\n      }, source);\n    }\n  }\n  setColumnPivotState(applyOrder, source) {\n    const columnStates = this.columnStates;\n    this.columnStates = void 0;\n    const columnGroupStates = this.columnGroupStates;\n    this.columnGroupStates = void 0;\n    const beans = this.beans;\n    const {\n      pivotResultCols,\n      colGroupSvc\n    } = beans;\n    if (!pivotResultCols?.isPivotResultColsPresent()) {\n      return;\n    }\n    if (columnStates) {\n      const secondaryColumnStates = [];\n      for (const columnState of columnStates) {\n        if (pivotResultCols.getPivotResultCol(columnState.colId)) {\n          secondaryColumnStates.push(columnState);\n        }\n      }\n      _applyColumnState(beans, {\n        state: secondaryColumnStates,\n        applyOrder\n      }, source);\n    }\n    if (columnGroupStates) {\n      colGroupSvc?.setColumnGroupState(columnGroupStates, source);\n    }\n  }\n  getColumnGroupState() {\n    const colGroupSvc = this.beans.colGroupSvc;\n    if (!colGroupSvc) {\n      return void 0;\n    }\n    const columnGroupState = colGroupSvc.getColumnGroupState();\n    return _convertColumnGroupState(columnGroupState);\n  }\n  setColumnGroupState(state, source, ignoreSet) {\n    const colGroupSvc = this.beans.colGroupSvc;\n    if (!colGroupSvc || ignoreSet?.has(\"columnGroup\") || source !== \"api\" && !Object.prototype.hasOwnProperty.call(state, \"columnGroup\")) {\n      return;\n    }\n    const openColumnGroups = new Set(state.columnGroup?.openColumnGroupIds);\n    const existingColumnGroupState = colGroupSvc.getColumnGroupState();\n    const stateItems = existingColumnGroupState.map(({\n      groupId\n    }) => {\n      const open = openColumnGroups.has(groupId);\n      if (open) {\n        openColumnGroups.delete(groupId);\n      }\n      return {\n        groupId,\n        open\n      };\n    });\n    openColumnGroups.forEach(groupId => {\n      stateItems.push({\n        groupId,\n        open: true\n      });\n    });\n    if (stateItems.length) {\n      this.columnGroupStates = stateItems;\n    }\n    colGroupSvc.setColumnGroupState(stateItems, source);\n  }\n  getFilterState() {\n    const filterManager = this.beans.filterManager;\n    let filterModel = filterManager?.getFilterModel();\n    if (filterModel && Object.keys(filterModel).length === 0) {\n      filterModel = void 0;\n    }\n    const columnFilterState = filterManager?.getFilterState();\n    const advancedFilterModel = filterManager?.getAdvFilterModel() ?? void 0;\n    return filterModel || advancedFilterModel || columnFilterState ? {\n      filterModel,\n      columnFilterState,\n      advancedFilterModel\n    } : void 0;\n  }\n  setFilterState(filterState) {\n    const filterManager = this.beans.filterManager;\n    const {\n      filterModel,\n      columnFilterState,\n      advancedFilterModel\n    } = filterState ?? {\n      filterModel: null,\n      columnFilterState: null,\n      advancedFilterModel: null\n    };\n    if (filterModel !== void 0 || columnFilterState !== void 0) {\n      filterManager?.setFilterState(filterModel ?? null, columnFilterState ?? null, \"columnFilter\");\n    }\n    if (advancedFilterModel !== void 0) {\n      filterManager?.setAdvFilterModel(advancedFilterModel ?? null, \"advancedFilter\");\n    }\n  }\n  getRangeSelectionState() {\n    const cellRanges = this.beans.rangeSvc?.getCellRanges().map(cellRange => {\n      const {\n        id,\n        type,\n        startRow,\n        endRow,\n        columns,\n        startColumn\n      } = cellRange;\n      return {\n        id,\n        type,\n        startRow,\n        endRow,\n        colIds: columns.map(column => column.getColId()),\n        startColId: startColumn.getColId()\n      };\n    });\n    return cellRanges?.length ? {\n      cellRanges\n    } : void 0;\n  }\n  setCellSelectionState(cellSelectionState) {\n    const {\n      gos,\n      rangeSvc,\n      colModel,\n      visibleCols\n    } = this.beans;\n    if (!_isCellSelectionEnabled(gos) || !rangeSvc) {\n      return;\n    }\n    const cellRanges = [];\n    cellSelectionState?.cellRanges.forEach(cellRange => {\n      const columns = [];\n      cellRange.colIds.forEach(colId => {\n        const column = colModel.getCol(colId);\n        if (column) {\n          columns.push(column);\n        }\n      });\n      if (!columns.length) {\n        return;\n      }\n      let startColumn = colModel.getCol(cellRange.startColId);\n      if (!startColumn) {\n        const allColumns = visibleCols.allCols;\n        const columnSet = new Set(columns);\n        startColumn = allColumns.find(column => columnSet.has(column));\n      }\n      cellRanges.push({\n        ...cellRange,\n        columns,\n        startColumn\n      });\n    });\n    rangeSvc.setCellRanges(cellRanges);\n  }\n  getScrollState() {\n    if (!this.isClientSideRowModel) {\n      return void 0;\n    }\n    const scrollFeature = this.beans.ctrlsSvc.getScrollFeature();\n    const {\n      left\n    } = scrollFeature?.getHScrollPosition() ?? {\n      left: 0\n    };\n    const {\n      top\n    } = scrollFeature?.getVScrollPosition() ?? {\n      top: 0\n    };\n    return top || left ? {\n      top,\n      left\n    } : void 0;\n  }\n  setScrollState(scrollState) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const {\n      top,\n      left\n    } = scrollState ?? {\n      top: 0,\n      left: 0\n    };\n    const {\n      frameworkOverrides,\n      rowRenderer,\n      animationFrameSvc,\n      ctrlsSvc\n    } = this.beans;\n    frameworkOverrides.wrapIncoming(() => {\n      ctrlsSvc.get(\"center\").setCenterViewportScrollLeft(left);\n      ctrlsSvc.getScrollFeature()?.setVerticalScrollPosition(top);\n      rowRenderer.redraw({\n        afterScroll: true\n      });\n      animationFrameSvc?.flushAllFrames();\n    });\n  }\n  getSideBarState() {\n    return this.beans.sideBar?.comp?.getState();\n  }\n  getFocusedCellState() {\n    if (!this.isClientSideRowModel) {\n      return void 0;\n    }\n    const focusedCell = this.beans.focusSvc.getFocusedCell();\n    if (focusedCell) {\n      const {\n        column,\n        rowIndex,\n        rowPinned\n      } = focusedCell;\n      return {\n        colId: column.getColId(),\n        rowIndex,\n        rowPinned\n      };\n    }\n    return void 0;\n  }\n  setFocusedCellState(focusedCellState) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const {\n      focusSvc,\n      colModel\n    } = this.beans;\n    if (!focusedCellState) {\n      focusSvc.clearFocusedCell();\n      return;\n    }\n    const {\n      colId,\n      rowIndex,\n      rowPinned\n    } = focusedCellState;\n    focusSvc.setFocusedCell({\n      column: colModel.getCol(colId),\n      rowIndex,\n      rowPinned,\n      forceBrowserFocus: true,\n      preventScrollOnBrowserFocus: true\n    });\n  }\n  getPaginationState() {\n    const {\n      pagination,\n      gos\n    } = this.beans;\n    if (!pagination) {\n      return void 0;\n    }\n    const page = pagination.getCurrentPage();\n    const pageSize = !gos.get(\"paginationAutoPageSize\") ? pagination.getPageSize() : void 0;\n    if (!page && !pageSize) {\n      return;\n    }\n    return {\n      page,\n      pageSize\n    };\n  }\n  setPaginationState(paginationState, source) {\n    const {\n      pagination,\n      gos\n    } = this.beans;\n    if (!pagination) {\n      return;\n    }\n    const {\n      pageSize,\n      page\n    } = paginationState ?? {\n      page: 0,\n      pageSize: gos.get(\"paginationPageSize\")\n    };\n    const isInit = source === \"gridInitializing\";\n    if (pageSize && !gos.get(\"paginationAutoPageSize\")) {\n      pagination.setPageSize(pageSize, isInit ? \"initialState\" : \"pageSizeSelector\");\n    }\n    if (typeof page === \"number\") {\n      if (isInit) {\n        pagination.setPage(page);\n      } else {\n        pagination.goToPage(page);\n      }\n    }\n  }\n  getRowSelectionState() {\n    const selectionSvc = this.beans.selectionSvc;\n    if (!selectionSvc) {\n      return void 0;\n    }\n    const selectionState = selectionSvc.getSelectionState();\n    const noSelections = !selectionState || !Array.isArray(selectionState) && (selectionState.selectAll === false || selectionState.selectAllChildren === false) && !selectionState?.toggledNodes?.length;\n    return noSelections ? void 0 : selectionState;\n  }\n  setRowSelectionState(rowSelectionState, source) {\n    this.beans.selectionSvc?.setSelectionState(rowSelectionState, source, source === \"api\");\n  }\n  getRowGroupExpansionState() {\n    const {\n      expansionSvc,\n      rowModel\n    } = this.beans;\n    if (!expansionSvc) {\n      return void 0;\n    }\n    const expandedRowGroups = [];\n    rowModel.forEachNode(({\n      expanded,\n      id\n    }) => {\n      if (expanded && id) {\n        expandedRowGroups.push(id);\n      }\n    });\n    return expandedRowGroups.length ? {\n      expandedRowGroupIds: expandedRowGroups\n    } : void 0;\n  }\n  getRowPinningState() {\n    return this.beans.pinnedRowModel?.getPinnedState();\n  }\n  setRowPinningState(state) {\n    const pinnedRowModel = this.beans.pinnedRowModel;\n    if (state) {\n      pinnedRowModel?.setPinnedState(state);\n    } else {\n      pinnedRowModel?.reset();\n    }\n  }\n  setRowGroupExpansionState(rowGroupExpansionState, source) {\n    const expansionSvc = this.beans.expansionSvc;\n    if (!expansionSvc) {\n      return;\n    }\n    const rowGroupIdsToExpand = rowGroupExpansionState?.expandedRowGroupIds ?? [];\n    let rowGroupIdsToCollapse;\n    if (source === \"api\") {\n      const oldExpandedRowGroupIds = this.getRowGroupExpansionState()?.expandedRowGroupIds;\n      if (oldExpandedRowGroupIds?.length) {\n        const oldExpandedRowGroupIdsSet = new Set(oldExpandedRowGroupIds);\n        for (const id of rowGroupIdsToExpand) {\n          oldExpandedRowGroupIdsSet.delete(id);\n        }\n        rowGroupIdsToCollapse = Array.from(oldExpandedRowGroupIdsSet);\n      }\n    }\n    expansionSvc.expandRows(rowGroupIdsToExpand, rowGroupIdsToCollapse);\n  }\n  updateColumnState(features) {\n    const newColumnState = this.getColumnState();\n    let hasChanged = false;\n    const cachedState = this.cachedState;\n    for (const key of Object.keys(newColumnState)) {\n      const value = newColumnState[key];\n      if (!_jsonEquals(value, cachedState[key])) {\n        hasChanged = true;\n      }\n    }\n    this.cachedState = {\n      ...cachedState,\n      ...newColumnState\n    };\n    if (hasChanged) {\n      this.dispatchStateUpdateEvent(features);\n    }\n  }\n  updateCachedState(key, value) {\n    const existingValue = this.cachedState[key];\n    this.setCachedStateValue(key, value);\n    if (!_jsonEquals(value, existingValue)) {\n      this.dispatchStateUpdateEvent([key]);\n    }\n  }\n  setCachedStateValue(key, value) {\n    this.cachedState = {\n      ...this.cachedState,\n      [key]: value\n    };\n  }\n  refreshStaleState() {\n    const staleStateKeys = this.staleStateKeys;\n    staleStateKeys.forEach(key => {\n      switch (key) {\n        case \"rowSelection\":\n          this.setCachedStateValue(key, this.getRowSelectionState());\n          break;\n      }\n    });\n    staleStateKeys.clear();\n  }\n  dispatchStateUpdateEvent(sources) {\n    if (this.suppressEvents) {\n      return;\n    }\n    sources.forEach(source => this.queuedUpdateSources.add(source));\n    this.dispatchStateUpdateEventDebounced();\n  }\n  dispatchQueuedStateUpdateEvents() {\n    const queuedUpdateSources = this.queuedUpdateSources;\n    const sources = Array.from(queuedUpdateSources);\n    queuedUpdateSources.clear();\n    this.eventSvc.dispatchEvent({\n      type: \"stateUpdated\",\n      sources,\n      state: this.cachedState\n    });\n  }\n  startSuppressEvents() {\n    this.suppressEvents = true;\n    this.beans.colAnimation?.setSuppressAnimation(true);\n  }\n  stopSuppressEvents(source) {\n    setTimeout(() => {\n      this.suppressEvents = false;\n      this.queuedUpdateSources.clear();\n      if (!this.isAlive()) {\n        return;\n      }\n      this.beans.colAnimation?.setSuppressAnimation(false);\n      this.dispatchStateUpdateEvent([source]);\n    });\n  }\n  suppressEventsAndDispatchInitEvent(updateFunc) {\n    this.startSuppressEvents();\n    updateFunc();\n    this.stopSuppressEvents(\"gridInitializing\");\n  }\n};\n\n// packages/ag-grid-community/src/misc/state/stateModule.ts\nvar GridStateModule = {\n  moduleName: \"GridState\",\n  version: VERSION,\n  beans: [StateService],\n  apiFunctions: {\n    getState,\n    setState\n  }\n};\n\n// packages/ag-grid-community/src/pagination/paginationApi.ts\nfunction paginationIsLastPageFound(beans) {\n  return beans.rowModel.isLastRowIndexKnown();\n}\nfunction paginationGetPageSize(beans) {\n  return beans.pagination?.getPageSize() ?? 100;\n}\nfunction paginationGetCurrentPage(beans) {\n  return beans.pagination?.getCurrentPage() ?? 0;\n}\nfunction paginationGetTotalPages(beans) {\n  return beans.pagination?.getTotalPages() ?? 1;\n}\nfunction paginationGetRowCount(beans) {\n  return beans.pagination ? beans.pagination.getMasterRowCount() : beans.rowModel.getRowCount();\n}\nfunction paginationGoToNextPage(beans) {\n  beans.pagination?.goToNextPage();\n}\nfunction paginationGoToPreviousPage(beans) {\n  beans.pagination?.goToPreviousPage();\n}\nfunction paginationGoToFirstPage(beans) {\n  beans.pagination?.goToFirstPage();\n}\nfunction paginationGoToLastPage(beans) {\n  beans.pagination?.goToLastPage();\n}\nfunction paginationGoToPage(beans, page) {\n  beans.pagination?.goToPage(page);\n}\n\n// packages/ag-grid-community/src/pagination/paginationAutoPageSizeService.ts\nvar PaginationAutoPageSizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"paginationAutoPageSizeSvc\";\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, p => {\n      this.centerRowsCtrl = p.center;\n      const listener = this.checkPageSize.bind(this);\n      this.addManagedEventListeners({\n        bodyHeightChanged: listener,\n        scrollVisibilityChanged: listener\n      });\n      this.addManagedPropertyListener(\"paginationAutoPageSize\", this.onPaginationAutoSizeChanged.bind(this));\n      this.checkPageSize();\n    });\n  }\n  notActive() {\n    return !this.gos.get(\"paginationAutoPageSize\") || this.centerRowsCtrl == null;\n  }\n  onPaginationAutoSizeChanged() {\n    if (this.notActive()) {\n      this.beans.pagination.unsetAutoCalculatedPageSize();\n    } else {\n      this.checkPageSize();\n    }\n  }\n  checkPageSize() {\n    if (this.notActive()) {\n      return;\n    }\n    const bodyHeight = this.centerRowsCtrl.viewportSizeFeature.getBodyHeight();\n    if (bodyHeight > 0) {\n      const beans = this.beans;\n      const update = () => {\n        const rowHeight = Math.max(_getRowHeightAsNumber(beans), 1);\n        const newPageSize = Math.floor(bodyHeight / rowHeight);\n        beans.pagination.setPageSize(newPageSize, \"autoCalculated\");\n      };\n      if (!this.isBodyRendered) {\n        update();\n        this.isBodyRendered = true;\n      } else {\n        _debounce(this, update, 50)();\n      }\n    } else {\n      this.isBodyRendered = false;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/pagination/pageSizeSelector/pageSizeSelectorComp.ts\nvar paginationPageSizeSelector = \"paginationPageSizeSelector\";\nvar PageSizeSelectorCompElement = {\n  tag: \"span\",\n  cls: \"ag-paging-page-size\"\n};\nvar PageSizeSelectorComp = class extends Component {\n  constructor() {\n    super(PageSizeSelectorCompElement);\n    this.hasEmptyOption = false;\n    this.handlePageSizeItemSelected = () => {\n      if (!this.selectPageSizeComp) {\n        return;\n      }\n      const newValue = this.selectPageSizeComp.getValue();\n      if (!newValue) {\n        return;\n      }\n      const paginationPageSize = Number(newValue);\n      if (isNaN(paginationPageSize) || paginationPageSize < 1 || paginationPageSize === this.pagination.getPageSize()) {\n        return;\n      }\n      this.pagination.setPageSize(paginationPageSize, \"pageSizeSelector\");\n      if (this.hasEmptyOption) {\n        this.toggleSelectDisplay(true);\n      }\n      this.selectPageSizeComp.getFocusableElement().focus();\n    };\n  }\n  wireBeans(beans) {\n    this.pagination = beans.pagination;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(paginationPageSizeSelector, () => {\n      this.onPageSizeSelectorValuesChange();\n    });\n    this.addManagedEventListeners({\n      paginationChanged: event => this.handlePaginationChanged(event)\n    });\n  }\n  handlePaginationChanged(paginationChangedEvent) {\n    if (!this.selectPageSizeComp || !paginationChangedEvent?.newPageSize) {\n      return;\n    }\n    const paginationPageSize = this.pagination.getPageSize();\n    if (this.getPageSizeSelectorValues().includes(paginationPageSize)) {\n      this.selectPageSizeComp.setValue(paginationPageSize.toString());\n    } else {\n      if (this.hasEmptyOption) {\n        this.selectPageSizeComp.setValue(\"\");\n      } else {\n        this.toggleSelectDisplay(true);\n      }\n    }\n  }\n  toggleSelectDisplay(show) {\n    if (this.selectPageSizeComp && !show) {\n      this.reset();\n    }\n    if (!show) {\n      return;\n    }\n    this.reloadPageSizesSelector();\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n  }\n  reset() {\n    _clearElement(this.getGui());\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    this.selectPageSizeComp = this.destroyBean(this.selectPageSizeComp);\n  }\n  onPageSizeSelectorValuesChange() {\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    if (this.shouldShowPageSizeSelector()) {\n      this.reloadPageSizesSelector();\n    }\n  }\n  shouldShowPageSizeSelector() {\n    return this.gos.get(\"pagination\") && !this.gos.get(\"suppressPaginationPanel\") && !this.gos.get(\"paginationAutoPageSize\") && this.gos.get(paginationPageSizeSelector) !== false;\n  }\n  reloadPageSizesSelector() {\n    const pageSizeOptions = this.getPageSizeSelectorValues();\n    const paginationPageSizeOption = this.pagination.getPageSize();\n    const shouldAddAndSelectEmptyOption = !paginationPageSizeOption || !pageSizeOptions.includes(paginationPageSizeOption);\n    if (shouldAddAndSelectEmptyOption) {\n      const pageSizeSet = this.gos.exists(\"paginationPageSize\");\n      const pageSizesSet = this.gos.get(paginationPageSizeSelector) !== true;\n      _warn(94, {\n        pageSizeSet,\n        pageSizesSet,\n        pageSizeOptions,\n        paginationPageSizeOption\n      });\n      if (!pageSizesSet) {\n        _warn(95, {\n          paginationPageSizeOption,\n          paginationPageSizeSelector\n        });\n      }\n      pageSizeOptions.unshift(\"\");\n    }\n    const value = String(shouldAddAndSelectEmptyOption ? \"\" : paginationPageSizeOption);\n    if (this.selectPageSizeComp) {\n      if (!_areEqual(this.pageSizeOptions, pageSizeOptions)) {\n        this.selectPageSizeComp.clearOptions().addOptions(this.createPageSizeSelectOptions(pageSizeOptions));\n        this.pageSizeOptions = pageSizeOptions;\n      }\n      this.selectPageSizeComp.setValue(value, true);\n    } else {\n      this.createPageSizeSelectorComp(pageSizeOptions, value);\n    }\n    this.hasEmptyOption = shouldAddAndSelectEmptyOption;\n  }\n  createPageSizeSelectOptions(pageSizeOptions) {\n    return pageSizeOptions.map(value => ({\n      value: String(value)\n    }));\n  }\n  createPageSizeSelectorComp(pageSizeOptions, value) {\n    const localeTextFunc = this.getLocaleTextFunc();\n    const localisedLabel = localeTextFunc(\"pageSizeSelectorLabel\", \"Page Size:\");\n    const localisedAriaLabel = localeTextFunc(\"ariaPageSizeSelectorLabel\", \"Page Size\");\n    this.selectPageSizeComp = this.createManagedBean(new AgSelect()).addOptions(this.createPageSizeSelectOptions(pageSizeOptions)).setValue(value).setAriaLabel(localisedAriaLabel).setLabel(localisedLabel).onValueChange(() => this.handlePageSizeItemSelected());\n    this.appendChild(this.selectPageSizeComp);\n  }\n  getPageSizeSelectorValues() {\n    const defaultValues = [20, 50, 100];\n    const paginationPageSizeSelectorValues = this.gos.get(paginationPageSizeSelector);\n    if (!Array.isArray(paginationPageSizeSelectorValues) || !paginationPageSizeSelectorValues?.length) {\n      return defaultValues;\n    }\n    return [...paginationPageSizeSelectorValues].sort((a, b) => a - b);\n  }\n  destroy() {\n    this.toggleSelectDisplay(false);\n    super.destroy();\n  }\n};\nvar PageSizeSelectorSelector = {\n  selector: \"AG-PAGE-SIZE-SELECTOR\",\n  component: PageSizeSelectorComp\n};\n\n// packages/ag-grid-community/src/pagination/paginationComp.css-GENERATED.ts\nvar paginationCompCSS = /*css*/\n`.ag-paging-panel{align-items:center;border-top:var(--ag-footer-row-border);display:flex;gap:calc(var(--ag-spacing)*4);height:var(--ag-pagination-panel-height);justify-content:flex-end;padding:0 var(--ag-cell-horizontal-padding)}:where(.ag-paging-page-size) .ag-wrapper{min-width:50px}.ag-paging-page-summary-panel{align-items:center;display:flex;gap:var(--ag-cell-widget-spacing);.ag-disabled &{pointer-events:none}}.ag-paging-button{cursor:pointer;position:relative;&.ag-disabled{cursor:default;opacity:.5}}.ag-paging-number,.ag-paging-row-summary-panel-number{font-weight:500}`;\n\n// packages/ag-grid-community/src/pagination/paginationComp.ts\nvar PaginationComp = class extends TabGuardComp {\n  constructor() {\n    super();\n    this.btFirst = RefPlaceholder;\n    this.btPrevious = RefPlaceholder;\n    this.btNext = RefPlaceholder;\n    this.btLast = RefPlaceholder;\n    this.lbRecordCount = RefPlaceholder;\n    this.lbFirstRowOnPage = RefPlaceholder;\n    this.lbLastRowOnPage = RefPlaceholder;\n    this.lbCurrent = RefPlaceholder;\n    this.lbTotal = RefPlaceholder;\n    this.pageSizeComp = RefPlaceholder;\n    this.previousAndFirstButtonsDisabled = false;\n    this.nextButtonDisabled = false;\n    this.lastButtonDisabled = false;\n    this.areListenersSetup = false;\n    this.allowFocusInnerElement = false;\n    this.registerCSS(paginationCompCSS);\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.pagination = beans.pagination;\n    this.ariaAnnounce = beans.ariaAnnounce;\n  }\n  postConstruct() {\n    const isRtl = this.gos.get(\"enableRtl\");\n    this.setTemplate(this.getTemplate(), [PageSizeSelectorSelector]);\n    const {\n      btFirst,\n      btPrevious,\n      btNext,\n      btLast\n    } = this;\n    this.activateTabIndex([btFirst, btPrevious, btNext, btLast]);\n    btFirst.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"last\" : \"first\", this.beans));\n    btPrevious.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"next\" : \"previous\", this.beans));\n    btNext.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"previous\" : \"next\", this.beans));\n    btLast.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"first\" : \"last\", this.beans));\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationChanged.bind(this));\n    this.addManagedPropertyListener(\"suppressPaginationPanel\", this.onPaginationChanged.bind(this));\n    this.addManagedPropertyListeners([\"paginationPageSizeSelector\", \"paginationAutoPageSize\", \"suppressPaginationPanel\"], () => this.onPageSizeRelatedOptionsChange());\n    this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector());\n    this.initialiseTabGuard({\n      // prevent tab guard default logic\n      onTabKeyDown: () => {},\n      focusInnerElement: fromBottom => {\n        if (this.allowFocusInnerElement) {\n          return this.tabGuardFeature.getTabGuardCtrl().focusInnerElement(fromBottom);\n        } else {\n          return _focusGridInnerElement(this.beans, fromBottom);\n        }\n      },\n      forceFocusOutWhenTabGuardsAreEmpty: true\n    });\n    this.onPaginationChanged();\n  }\n  setAllowFocus(allowFocus) {\n    this.allowFocusInnerElement = allowFocus;\n  }\n  onPaginationChanged() {\n    const isPaging = this.gos.get(\"pagination\");\n    const paginationPanelEnabled = isPaging && !this.gos.get(\"suppressPaginationPanel\");\n    this.setDisplayed(paginationPanelEnabled);\n    if (!paginationPanelEnabled) {\n      return;\n    }\n    this.setupListeners();\n    this.enableOrDisableButtons();\n    this.updateLabels();\n    this.onPageSizeRelatedOptionsChange();\n  }\n  onPageSizeRelatedOptionsChange() {\n    this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector());\n  }\n  setupListeners() {\n    if (!this.areListenersSetup) {\n      this.addManagedEventListeners({\n        paginationChanged: this.onPaginationChanged.bind(this)\n      });\n      [{\n        el: this.btFirst,\n        fn: this.onBtFirst.bind(this)\n      }, {\n        el: this.btPrevious,\n        fn: this.onBtPrevious.bind(this)\n      }, {\n        el: this.btNext,\n        fn: this.onBtNext.bind(this)\n      }, {\n        el: this.btLast,\n        fn: this.onBtLast.bind(this)\n      }].forEach(item => {\n        const {\n          el,\n          fn\n        } = item;\n        this.addManagedListeners(el, {\n          click: fn,\n          keydown: e => {\n            if (e.key === KeyCode.ENTER || e.key === KeyCode.SPACE) {\n              e.preventDefault();\n              fn();\n            }\n          }\n        });\n      });\n      _addFocusableContainerListener(this.beans, this, this.getGui());\n      this.areListenersSetup = true;\n    }\n  }\n  onBtFirst() {\n    if (!this.previousAndFirstButtonsDisabled) {\n      this.pagination.goToFirstPage();\n    }\n  }\n  formatNumber(value) {\n    const userFunc = this.gos.getCallback(\"paginationNumberFormatter\");\n    if (userFunc) {\n      const params = {\n        value\n      };\n      return userFunc(params);\n    }\n    return _formatNumberCommas(value, this.getLocaleTextFunc.bind(this));\n  }\n  getTemplate() {\n    const localeTextFunc = this.getLocaleTextFunc();\n    const idPrefix = `ag-${this.getCompId()}`;\n    return {\n      tag: \"div\",\n      cls: \"ag-paging-panel ag-unselectable\",\n      attrs: {\n        id: `${idPrefix}`\n      },\n      children: [{\n        tag: \"ag-page-size-selector\",\n        ref: \"pageSizeComp\"\n      }, {\n        tag: \"span\",\n        cls: \"ag-paging-row-summary-panel\",\n        children: [{\n          tag: \"span\",\n          ref: \"lbFirstRowOnPage\",\n          cls: \"ag-paging-row-summary-panel-number\",\n          attrs: {\n            id: `${idPrefix}-first-row`\n          }\n        }, {\n          tag: \"span\",\n          attrs: {\n            id: `${idPrefix}-to`\n          },\n          children: localeTextFunc(\"to\", \"to\")\n        }, {\n          tag: \"span\",\n          ref: \"lbLastRowOnPage\",\n          cls: \"ag-paging-row-summary-panel-number\",\n          attrs: {\n            id: `${idPrefix}-last-row`\n          }\n        }, {\n          tag: \"span\",\n          attrs: {\n            id: `${idPrefix}-of`\n          },\n          children: localeTextFunc(\"of\", \"of\")\n        }, {\n          tag: \"span\",\n          ref: \"lbRecordCount\",\n          cls: \"ag-paging-row-summary-panel-number\",\n          attrs: {\n            id: `${idPrefix}-row-count`\n          }\n        }]\n      }, {\n        tag: \"span\",\n        cls: \"ag-paging-page-summary-panel\",\n        role: \"presentation\",\n        children: [{\n          tag: \"div\",\n          ref: \"btFirst\",\n          cls: \"ag-button ag-paging-button\",\n          role: \"button\",\n          attrs: {\n            \"aria-label\": localeTextFunc(\"firstPage\", \"First Page\")\n          }\n        }, {\n          tag: \"div\",\n          ref: \"btPrevious\",\n          cls: \"ag-button ag-paging-button\",\n          role: \"button\",\n          attrs: {\n            \"aria-label\": localeTextFunc(\"previousPage\", \"Previous Page\")\n          }\n        }, {\n          tag: \"span\",\n          cls: \"ag-paging-description\",\n          children: [{\n            tag: \"span\",\n            attrs: {\n              id: `${idPrefix}-start-page`\n            },\n            children: localeTextFunc(\"page\", \"Page\")\n          }, {\n            tag: \"span\",\n            ref: \"lbCurrent\",\n            cls: \"ag-paging-number\",\n            attrs: {\n              id: `${idPrefix}-start-page-number`\n            }\n          }, {\n            tag: \"span\",\n            attrs: {\n              id: `${idPrefix}-of-page`\n            },\n            children: localeTextFunc(\"of\", \"of\")\n          }, {\n            tag: \"span\",\n            ref: \"lbTotal\",\n            cls: \"ag-paging-number\",\n            attrs: {\n              id: `${idPrefix}-of-page-number`\n            }\n          }]\n        }, {\n          tag: \"div\",\n          ref: \"btNext\",\n          cls: \"ag-button ag-paging-button\",\n          role: \"button\",\n          attrs: {\n            \"aria-label\": localeTextFunc(\"nextPage\", \"Next Page\")\n          }\n        }, {\n          tag: \"div\",\n          ref: \"btLast\",\n          cls: \"ag-button ag-paging-button\",\n          role: \"button\",\n          attrs: {\n            \"aria-label\": localeTextFunc(\"lastPage\", \"Last Page\")\n          }\n        }]\n      }]\n    };\n  }\n  onBtNext() {\n    if (!this.nextButtonDisabled) {\n      this.pagination.goToNextPage();\n    }\n  }\n  onBtPrevious() {\n    if (!this.previousAndFirstButtonsDisabled) {\n      this.pagination.goToPreviousPage();\n    }\n  }\n  onBtLast() {\n    if (!this.lastButtonDisabled) {\n      this.pagination.goToLastPage();\n    }\n  }\n  enableOrDisableButtons() {\n    const currentPage = this.pagination.getCurrentPage();\n    const maxRowFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.pagination.getTotalPages();\n    this.previousAndFirstButtonsDisabled = currentPage === 0;\n    this.toggleButtonDisabled(this.btFirst, this.previousAndFirstButtonsDisabled);\n    this.toggleButtonDisabled(this.btPrevious, this.previousAndFirstButtonsDisabled);\n    const zeroPagesToDisplay = this.isZeroPagesToDisplay();\n    const onLastPage = currentPage === totalPages - 1;\n    this.nextButtonDisabled = onLastPage || zeroPagesToDisplay;\n    this.lastButtonDisabled = !maxRowFound || zeroPagesToDisplay || currentPage === totalPages - 1;\n    this.toggleButtonDisabled(this.btNext, this.nextButtonDisabled);\n    this.toggleButtonDisabled(this.btLast, this.lastButtonDisabled);\n  }\n  toggleButtonDisabled(button, disabled) {\n    _setAriaDisabled(button, disabled);\n    button.classList.toggle(\"ag-disabled\", disabled);\n  }\n  isZeroPagesToDisplay() {\n    const maxRowFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.pagination.getTotalPages();\n    return maxRowFound && totalPages === 0;\n  }\n  updateLabels() {\n    const lastPageFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.pagination.getTotalPages();\n    const masterRowCount = this.pagination.getMasterRowCount();\n    const rowCount = lastPageFound ? masterRowCount : null;\n    const currentPage = this.pagination.getCurrentPage();\n    const pageSize = this.pagination.getPageSize();\n    let startRow;\n    let endRow;\n    if (this.isZeroPagesToDisplay()) {\n      startRow = endRow = 0;\n    } else {\n      startRow = pageSize * currentPage + 1;\n      endRow = startRow + pageSize - 1;\n      if (lastPageFound && endRow > rowCount) {\n        endRow = rowCount;\n      }\n    }\n    const theoreticalEndRow = startRow + pageSize - 1;\n    const isLoadingPageSize = !lastPageFound && masterRowCount < theoreticalEndRow;\n    const lbFirstRowOnPage = this.formatNumber(startRow);\n    this.lbFirstRowOnPage.textContent = lbFirstRowOnPage;\n    let lbLastRowOnPage;\n    const localeTextFunc = this.getLocaleTextFunc();\n    if (isLoadingPageSize) {\n      lbLastRowOnPage = localeTextFunc(\"pageLastRowUnknown\", \"?\");\n    } else {\n      lbLastRowOnPage = this.formatNumber(endRow);\n    }\n    this.lbLastRowOnPage.textContent = lbLastRowOnPage;\n    const pagesExist = totalPages > 0;\n    const toDisplay = pagesExist ? currentPage + 1 : 0;\n    const lbCurrent = this.formatNumber(toDisplay);\n    this.lbCurrent.textContent = lbCurrent;\n    let lbTotal;\n    let lbRecordCount;\n    if (lastPageFound) {\n      lbTotal = this.formatNumber(totalPages);\n      lbRecordCount = this.formatNumber(rowCount);\n    } else {\n      const moreText = localeTextFunc(\"more\", \"more\");\n      lbTotal = moreText;\n      lbRecordCount = moreText;\n    }\n    this.lbTotal.textContent = lbTotal;\n    this.lbRecordCount.textContent = lbRecordCount;\n    this.announceAriaStatus(lbFirstRowOnPage, lbLastRowOnPage, lbRecordCount, lbCurrent, lbTotal);\n  }\n  announceAriaStatus(lbFirstRowOnPage, lbLastRowOnPage, lbRecordCount, lbCurrent, lbTotal) {\n    const localeTextFunc = this.getLocaleTextFunc();\n    const strPage = localeTextFunc(\"page\", \"Page\");\n    const strTo = localeTextFunc(\"to\", \"to\");\n    const strOf = localeTextFunc(\"of\", \"of\");\n    const ariaRowStatus = `${lbFirstRowOnPage} ${strTo} ${lbLastRowOnPage} ${strOf} ${lbRecordCount}`;\n    const ariaPageStatus = `${strPage} ${lbCurrent} ${strOf} ${lbTotal}`;\n    if (ariaRowStatus !== this.ariaRowStatus) {\n      this.ariaRowStatus = ariaRowStatus;\n      this.ariaAnnounce?.announceValue(ariaRowStatus, \"paginationRow\");\n    }\n    if (ariaPageStatus !== this.ariaPageStatus) {\n      this.ariaPageStatus = ariaPageStatus;\n      this.ariaAnnounce?.announceValue(ariaPageStatus, \"paginationPage\");\n    }\n  }\n};\nvar PaginationSelector = {\n  selector: \"AG-PAGINATION\",\n  component: PaginationComp\n};\n\n// packages/ag-grid-community/src/pagination/paginationService.ts\nvar PaginationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pagination\";\n    this.currentPage = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = 0;\n    this.masterRowCount = 0;\n  }\n  postConstruct() {\n    const gos = this.gos;\n    this.active = gos.get(\"pagination\");\n    this.pageSizeFromGridOptions = gos.get(\"paginationPageSize\");\n    this.paginateChildRows = this.isPaginateChildRows();\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationGridOptionChanged.bind(this));\n    this.addManagedPropertyListener(\"paginationPageSize\", this.onPageSizeGridOptionChanged.bind(this));\n  }\n  getPaginationSelector() {\n    return PaginationSelector;\n  }\n  isPaginateChildRows() {\n    const gos = this.gos;\n    const shouldPaginate = gos.get(\"groupHideParentOfSingleChild\") ||\n    // following two properties deprecated v32.3.0\n    gos.get(\"groupRemoveSingleChildren\") || gos.get(\"groupRemoveLowestSingleChildren\");\n    if (shouldPaginate) {\n      return true;\n    }\n    return gos.get(\"paginateChildRows\");\n  }\n  onPaginationGridOptionChanged() {\n    this.active = this.gos.get(\"pagination\");\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({\n      keepRenderedRows: true\n    });\n  }\n  onPageSizeGridOptionChanged() {\n    this.setPageSize(this.gos.get(\"paginationPageSize\"), \"gridOptions\");\n  }\n  goToPage(page) {\n    const currentPage = this.currentPage;\n    if (!this.active || currentPage === page || typeof currentPage !== \"number\") {\n      return;\n    }\n    const {\n      editSvc\n    } = this.beans;\n    if (editSvc?.isEditing()) {\n      if (editSvc.isBatchEditing()) {\n        editSvc.cleanupEditors();\n      } else {\n        editSvc.stopEditing(void 0, {\n          source: \"api\"\n        });\n      }\n    }\n    this.currentPage = page;\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({\n      newPage: true\n    });\n  }\n  goToPageWithIndex(index) {\n    if (!this.active) {\n      return;\n    }\n    let adjustedIndex = index;\n    if (!this.paginateChildRows) {\n      adjustedIndex = this.beans.rowModel.getTopLevelIndexFromDisplayedIndex?.(index) ?? index;\n    }\n    this.goToPage(Math.floor(adjustedIndex / this.pageSize));\n  }\n  isRowInPage(rowIndex) {\n    if (!this.active) {\n      return true;\n    }\n    return rowIndex >= this.topDisplayedRowIndex && rowIndex <= this.bottomDisplayedRowIndex;\n  }\n  getCurrentPage() {\n    return this.currentPage;\n  }\n  goToNextPage() {\n    this.goToPage(this.currentPage + 1);\n  }\n  goToPreviousPage() {\n    this.goToPage(this.currentPage - 1);\n  }\n  goToFirstPage() {\n    this.goToPage(0);\n  }\n  goToLastPage() {\n    const rowCount = this.beans.rowModel.getRowCount();\n    const lastPage = Math.floor(rowCount / this.pageSize);\n    this.goToPage(lastPage);\n  }\n  getPageSize() {\n    return this.pageSize;\n  }\n  getTotalPages() {\n    return this.totalPages;\n  }\n  /** This is only for state setting before data has been loaded */\n  setPage(page) {\n    this.currentPage = page;\n  }\n  get pageSize() {\n    if (_exists(this.pageSizeAutoCalculated) && this.gos.get(\"paginationAutoPageSize\")) {\n      return this.pageSizeAutoCalculated;\n    }\n    if (_exists(this.pageSizeFromPageSizeSelector)) {\n      return this.pageSizeFromPageSizeSelector;\n    }\n    if (_exists(this.pageSizeFromInitialState)) {\n      return this.pageSizeFromInitialState;\n    }\n    if (_exists(this.pageSizeFromGridOptions)) {\n      return this.pageSizeFromGridOptions;\n    }\n    return this.defaultPageSize;\n  }\n  calculatePages() {\n    if (this.active) {\n      if (this.paginateChildRows) {\n        this.calculatePagesAllRows();\n      } else {\n        this.calculatePagesMasterRowsOnly();\n      }\n    } else {\n      this.calculatedPagesNotActive();\n    }\n    this.beans.pageBounds.calculateBounds(this.topDisplayedRowIndex, this.bottomDisplayedRowIndex);\n  }\n  unsetAutoCalculatedPageSize() {\n    if (this.pageSizeAutoCalculated === void 0) {\n      return;\n    }\n    const oldPageSize = this.pageSizeAutoCalculated;\n    this.pageSizeAutoCalculated = void 0;\n    if (this.pageSize === oldPageSize) {\n      return;\n    }\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({\n      newPageSize: true\n    });\n  }\n  setPageSize(size, source) {\n    const currentSize = this.pageSize;\n    switch (source) {\n      case \"autoCalculated\":\n        this.pageSizeAutoCalculated = size;\n        break;\n      case \"pageSizeSelector\":\n        this.pageSizeFromPageSizeSelector = size;\n        if (this.currentPage !== 0) {\n          this.goToFirstPage();\n        }\n        break;\n      case \"initialState\":\n        this.pageSizeFromInitialState = size;\n        break;\n      case \"gridOptions\":\n        this.pageSizeFromGridOptions = size;\n        this.pageSizeFromInitialState = void 0;\n        this.pageSizeFromPageSizeSelector = void 0;\n        if (this.currentPage !== 0) {\n          this.goToFirstPage();\n        }\n        break;\n    }\n    if (currentSize !== this.pageSize) {\n      this.calculatePages();\n      this.dispatchPaginationChangedEvent({\n        newPageSize: true,\n        keepRenderedRows: true\n      });\n    }\n  }\n  setZeroRows() {\n    this.masterRowCount = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = -1;\n    this.currentPage = 0;\n    this.totalPages = 0;\n  }\n  adjustCurrentPageIfInvalid() {\n    const totalPages = this.totalPages;\n    if (this.currentPage >= totalPages) {\n      this.currentPage = totalPages - 1;\n    }\n    const currentPage = this.currentPage;\n    if (!isFinite(currentPage) || isNaN(currentPage) || currentPage < 0) {\n      this.currentPage = 0;\n    }\n  }\n  calculatePagesMasterRowsOnly() {\n    const rowModel = this.beans.rowModel;\n    const masterRowCount = rowModel.getTopLevelRowCount();\n    this.masterRowCount = masterRowCount;\n    if (masterRowCount <= 0) {\n      this.setZeroRows();\n      return;\n    }\n    const pageSize = this.pageSize;\n    const masterLastRowIndex = masterRowCount - 1;\n    this.totalPages = Math.floor(masterLastRowIndex / pageSize) + 1;\n    this.adjustCurrentPageIfInvalid();\n    const currentPage = this.currentPage;\n    const masterPageStartIndex = pageSize * currentPage;\n    let masterPageEndIndex = pageSize * (currentPage + 1) - 1;\n    if (masterPageEndIndex > masterLastRowIndex) {\n      masterPageEndIndex = masterLastRowIndex;\n    }\n    this.topDisplayedRowIndex = rowModel.getTopLevelRowDisplayedIndex(masterPageStartIndex);\n    if (masterPageEndIndex === masterLastRowIndex) {\n      this.bottomDisplayedRowIndex = rowModel.getRowCount() - 1;\n    } else {\n      const firstIndexNotToShow = rowModel.getTopLevelRowDisplayedIndex(masterPageEndIndex + 1);\n      this.bottomDisplayedRowIndex = firstIndexNotToShow - 1;\n    }\n  }\n  getMasterRowCount() {\n    return this.masterRowCount;\n  }\n  calculatePagesAllRows() {\n    const masterRowCount = this.beans.rowModel.getRowCount();\n    this.masterRowCount = masterRowCount;\n    if (masterRowCount === 0) {\n      this.setZeroRows();\n      return;\n    }\n    const {\n      pageSize,\n      currentPage\n    } = this;\n    const maxRowIndex = masterRowCount - 1;\n    this.totalPages = Math.floor(maxRowIndex / pageSize) + 1;\n    this.adjustCurrentPageIfInvalid();\n    this.topDisplayedRowIndex = pageSize * currentPage;\n    this.bottomDisplayedRowIndex = pageSize * (currentPage + 1) - 1;\n    if (this.bottomDisplayedRowIndex > maxRowIndex) {\n      this.bottomDisplayedRowIndex = maxRowIndex;\n    }\n  }\n  calculatedPagesNotActive() {\n    this.setPageSize(void 0, \"autoCalculated\");\n    this.totalPages = 1;\n    this.currentPage = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = this.beans.rowModel.getRowCount() - 1;\n  }\n  dispatchPaginationChangedEvent(params) {\n    const {\n      keepRenderedRows = false,\n      newPage = false,\n      newPageSize = false\n    } = params;\n    this.eventSvc.dispatchEvent({\n      type: \"paginationChanged\",\n      animate: false,\n      newData: false,\n      newPage,\n      newPageSize,\n      keepRenderedRows\n    });\n  }\n};\n\n// packages/ag-grid-community/src/pagination/paginationModule.ts\nvar PaginationModule = {\n  moduleName: \"Pagination\",\n  version: VERSION,\n  beans: [PaginationService, PaginationAutoPageSizeService],\n  icons: {\n    // \"go to first\" button in pagination controls\n    first: \"first\",\n    // \"go to previous\" button in pagination controls\n    previous: \"previous\",\n    // \"go to next\" button in pagination controls\n    next: \"next\",\n    // \"go to last\" button in pagination controls\n    last: \"last\"\n  },\n  apiFunctions: {\n    paginationIsLastPageFound,\n    paginationGetPageSize,\n    paginationGetCurrentPage,\n    paginationGetTotalPages,\n    paginationGetRowCount,\n    paginationGoToNextPage,\n    paginationGoToPreviousPage,\n    paginationGoToFirstPage,\n    paginationGoToLastPage,\n    paginationGoToPage\n  },\n  dependsOn: [PopupModule]\n};\n\n// packages/ag-grid-community/src/api/rowApi.ts\nfunction redrawRows(beans, params = {}) {\n  const rowNodes = params ? params.rowNodes : void 0;\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.redrawRows(rowNodes));\n}\nfunction setRowNodeExpanded(beans, rowNode, expanded, expandParents, forceSync) {\n  if (rowNode) {\n    if (expandParents && rowNode.parent && rowNode.parent.level !== -1) {\n      setRowNodeExpanded(beans, rowNode.parent, expanded, expandParents, forceSync);\n    }\n    rowNode.setExpanded(expanded, void 0, forceSync);\n  }\n}\nfunction getRowNode(beans, id) {\n  return beans.rowModel.getRowNode(id);\n}\nfunction addRenderedRowListener(beans, eventName, rowIndex, callback) {\n  beans.rowRenderer.addRenderedRowListener(eventName, rowIndex, callback);\n}\nfunction getRenderedNodes(beans) {\n  return beans.rowRenderer.getRenderedNodes();\n}\nfunction forEachNode(beans, callback, includeFooterNodes) {\n  beans.rowModel.forEachNode(callback, includeFooterNodes);\n}\nfunction getFirstDisplayedRowIndex(beans) {\n  return beans.rowRenderer.firstRenderedRow;\n}\nfunction getLastDisplayedRowIndex(beans) {\n  return beans.rowRenderer.lastRenderedRow;\n}\nfunction getDisplayedRowAtIndex(beans, index) {\n  return beans.rowModel.getRow(index);\n}\nfunction getDisplayedRowCount(beans) {\n  return beans.rowModel.getRowCount();\n}\n\n// packages/ag-grid-community/src/api/apiModule.ts\nvar RowApiModule = {\n  moduleName: \"RowApi\",\n  version: VERSION,\n  apiFunctions: {\n    redrawRows,\n    setRowNodeExpanded,\n    getRowNode,\n    addRenderedRowListener,\n    getRenderedNodes,\n    forEachNode,\n    getFirstDisplayedRowIndex,\n    getLastDisplayedRowIndex,\n    getDisplayedRowAtIndex,\n    getDisplayedRowCount\n  }\n};\nvar ScrollApiModule = {\n  moduleName: \"ScrollApi\",\n  version: VERSION,\n  apiFunctions: {\n    getVerticalPixelRange,\n    getHorizontalPixelRange,\n    ensureColumnVisible,\n    ensureIndexVisible,\n    ensureNodeVisible\n  }\n};\n\n// packages/ag-grid-community/src/rendering/renderApi.ts\nfunction setGridAriaProperty(beans, property, value) {\n  if (!property) {\n    return;\n  }\n  const eGrid = beans.ctrlsSvc.getGridBodyCtrl().eGridBody;\n  const ariaProperty = `aria-${property}`;\n  if (value === null) {\n    eGrid.removeAttribute(ariaProperty);\n  } else {\n    eGrid.setAttribute(ariaProperty, value);\n  }\n}\nfunction refreshCells(beans, params = {}) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.refreshCells(params));\n}\nfunction refreshHeader(beans) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.ctrlsSvc.getHeaderRowContainerCtrls().forEach(c => c.refresh()));\n}\nfunction isAnimationFrameQueueEmpty(beans) {\n  return beans.animationFrameSvc?.isQueueEmpty() ?? true;\n}\nfunction flushAllAnimationFrames(beans) {\n  beans.animationFrameSvc?.flushAllFrames();\n}\nfunction getSizesForCurrentTheme(beans) {\n  return {\n    rowHeight: _getRowHeightAsNumber(beans),\n    headerHeight: getHeaderHeight(beans)\n  };\n}\nfunction getCellRendererInstances(beans, params = {}) {\n  const cellRenderers = [];\n  beans.rowRenderer.getCellCtrls(params.rowNodes, params.columns).forEach(cellCtrl => {\n    const cellRenderer = cellCtrl.getCellRenderer();\n    if (cellRenderer != null) {\n      cellRenderers.push(_unwrapUserComp(cellRenderer));\n    }\n  });\n  if (params.columns?.length) {\n    return cellRenderers;\n  }\n  const fullWidthRenderers = [];\n  const rowIdMap = mapRowNodes(params.rowNodes);\n  beans.rowRenderer.getAllRowCtrls().forEach(rowCtrl => {\n    if (rowIdMap && !isRowInMap(rowCtrl.rowNode, rowIdMap)) {\n      return;\n    }\n    if (!rowCtrl.isFullWidth()) {\n      return;\n    }\n    const renderers = rowCtrl.getFullWidthCellRenderers();\n    for (let i = 0; i < renderers.length; i++) {\n      const renderer = renderers[i];\n      if (renderer != null) {\n        fullWidthRenderers.push(_unwrapUserComp(renderer));\n      }\n    }\n  });\n  return [...fullWidthRenderers, ...cellRenderers];\n}\n\n// packages/ag-grid-community/src/rendering/renderModule.ts\nvar RenderApiModule = {\n  moduleName: \"RenderApi\",\n  version: VERSION,\n  apiFunctions: {\n    setGridAriaProperty,\n    refreshCells,\n    refreshHeader,\n    isAnimationFrameQueueEmpty,\n    flushAllAnimationFrames,\n    getSizesForCurrentTheme,\n    getCellRendererInstances\n  }\n};\n\n// packages/ag-grid-community/src/columnAutosize/columnAutosizeApi.ts\nfunction sizeColumnsToFit(beans, paramsOrGridWidth) {\n  if (typeof paramsOrGridWidth === \"number\") {\n    beans.colAutosize?.sizeColumnsToFit(paramsOrGridWidth, \"api\");\n  } else {\n    beans.colAutosize?.sizeColumnsToFitGridBody(paramsOrGridWidth);\n  }\n}\nfunction autoSizeColumns({\n  colAutosize,\n  visibleCols\n}, keysOrParams, skipHeader) {\n  if (Array.isArray(keysOrParams)) {\n    colAutosize?.autoSizeCols({\n      colKeys: keysOrParams,\n      skipHeader,\n      source: \"api\"\n    });\n  } else {\n    colAutosize?.autoSizeCols({\n      colKeys: keysOrParams.colIds ?? visibleCols.allCols,\n      skipHeader: keysOrParams.skipHeader,\n      defaultMaxWidth: keysOrParams.defaultMaxWidth,\n      defaultMinWidth: keysOrParams.defaultMinWidth,\n      columnLimits: keysOrParams.columnLimits,\n      source: \"api\"\n    });\n  }\n}\nfunction autoSizeAllColumns(beans, paramsOrSkipHeader) {\n  if (paramsOrSkipHeader && typeof paramsOrSkipHeader === \"object\") {\n    autoSizeColumns(beans, paramsOrSkipHeader);\n  } else {\n    beans.colAutosize?.autoSizeAllColumns({\n      source: \"api\",\n      skipHeader: paramsOrSkipHeader\n    });\n  }\n}\n\n// packages/ag-grid-community/src/columnAutosize/columnAutosizeService.ts\nvar ColumnAutosizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colAutosize\";\n    this.timesDelayed = 0;\n    // when we're waiting for cell data types to be inferred, we need to defer column resizing\n    this.shouldQueueResizeOperations = false;\n    this.resizeOperationQueue = [];\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      firstDataRendered: () => this.onFirstDataRendered()\n    });\n  }\n  autoSizeCols(params) {\n    if (this.shouldQueueResizeOperations) {\n      this.pushResizeOperation(() => this.autoSizeCols(params));\n      return;\n    }\n    const {\n      colKeys,\n      skipHeader,\n      skipHeaderGroups,\n      stopAtGroup,\n      defaultMaxWidth,\n      defaultMinWidth,\n      columnLimits = [],\n      source = \"api\"\n    } = params;\n    const {\n      animationFrameSvc,\n      renderStatus,\n      colModel,\n      autoWidthCalc,\n      visibleCols\n    } = this.beans;\n    animationFrameSvc?.flushAllFrames();\n    if (this.timesDelayed < 5 && renderStatus && !renderStatus.areHeaderCellsRendered()) {\n      this.timesDelayed++;\n      setTimeout(() => {\n        if (this.isAlive()) {\n          this.autoSizeCols(params);\n        }\n      });\n      return;\n    }\n    this.timesDelayed = 0;\n    const columnsAutoSized = [];\n    let changesThisTimeAround = -1;\n    const columnLimitsIndex = Object.fromEntries(columnLimits.map(({\n      colId,\n      maxWidth,\n      minWidth\n    }) => [colId, {\n      maxWidth,\n      minWidth\n    }]));\n    const shouldSkipHeader = skipHeader != null ? skipHeader : this.gos.get(\"skipHeaderOnAutoSize\");\n    const shouldSkipHeaderGroups = skipHeaderGroups != null ? skipHeaderGroups : shouldSkipHeader;\n    while (changesThisTimeAround !== 0) {\n      changesThisTimeAround = 0;\n      const updatedColumns = [];\n      colKeys.forEach(key => {\n        if (!key || isSpecialCol(key)) {\n          return;\n        }\n        const column = colModel.getCol(key);\n        if (!column) {\n          return;\n        }\n        if (columnsAutoSized.indexOf(column) >= 0) {\n          return;\n        }\n        const preferredWidth = autoWidthCalc.getPreferredWidthForColumn(column, shouldSkipHeader);\n        if (preferredWidth > 0) {\n          const columnLimit = columnLimitsIndex[column.colId] ?? {};\n          columnLimit.minWidth ?? (columnLimit.minWidth = defaultMinWidth);\n          columnLimit.maxWidth ?? (columnLimit.maxWidth = defaultMaxWidth);\n          const newWidth = normaliseColumnWidth(column, preferredWidth, columnLimit);\n          column.setActualWidth(newWidth, source);\n          columnsAutoSized.push(column);\n          changesThisTimeAround++;\n        }\n        updatedColumns.push(column);\n      });\n      if (!updatedColumns.length) {\n        continue;\n      }\n      visibleCols.refresh(source);\n    }\n    if (!shouldSkipHeaderGroups) {\n      this.autoSizeColumnGroupsByColumns(colKeys, source, stopAtGroup);\n    }\n    dispatchColumnResizedEvent(this.eventSvc, columnsAutoSized, true, \"autosizeColumns\");\n  }\n  autoSizeColumn(key, source, skipHeader) {\n    if (key) {\n      this.autoSizeCols({\n        colKeys: [key],\n        skipHeader,\n        skipHeaderGroups: true,\n        source\n      });\n    }\n  }\n  autoSizeColumnGroupsByColumns(keys, source, stopAtGroup) {\n    const {\n      colModel,\n      ctrlsSvc\n    } = this.beans;\n    const columnGroups = /* @__PURE__ */new Set();\n    const columns = colModel.getColsForKeys(keys);\n    columns.forEach(col => {\n      let parent = col.getParent();\n      while (parent && parent != stopAtGroup) {\n        if (!parent.isPadding()) {\n          columnGroups.add(parent);\n        }\n        parent = parent.getParent();\n      }\n    });\n    let headerGroupCtrl;\n    const resizedColumns = [];\n    for (const columnGroup of columnGroups) {\n      for (const headerContainerCtrl of ctrlsSvc.getHeaderRowContainerCtrls()) {\n        headerGroupCtrl = headerContainerCtrl.getHeaderCtrlForColumn(columnGroup);\n        if (headerGroupCtrl) {\n          break;\n        }\n      }\n      if (headerGroupCtrl) {\n        headerGroupCtrl.resizeLeafColumnsToFit(source);\n      }\n    }\n    return resizedColumns;\n  }\n  autoSizeAllColumns(params) {\n    if (this.shouldQueueResizeOperations) {\n      this.pushResizeOperation(() => this.autoSizeAllColumns(params));\n      return;\n    }\n    const allDisplayedColumns = this.beans.visibleCols.allCols;\n    this.autoSizeCols({\n      colKeys: allDisplayedColumns,\n      ...params\n    });\n  }\n  addColumnAutosize(element, column) {\n    const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\n    const autoSizeColListener = () => {\n      this.autoSizeColumn(column, \"uiColumnResized\", skipHeaderOnAutoSize);\n    };\n    element.addEventListener(\"dblclick\", autoSizeColListener);\n    const touchListener = new TouchListener(element);\n    touchListener.addEventListener(\"doubleTap\", autoSizeColListener);\n    return () => {\n      element.removeEventListener(\"dblclick\", autoSizeColListener);\n      touchListener.removeEventListener(\"doubleTap\", autoSizeColListener);\n      touchListener.destroy();\n    };\n  }\n  addColumnGroupResize(element, columnGroup, callback) {\n    const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\n    const listener = () => {\n      const keys = [];\n      const leafCols = columnGroup.getDisplayedLeafColumns();\n      leafCols.forEach(column => {\n        if (!column.getColDef().suppressAutoSize) {\n          keys.push(column.getColId());\n        }\n      });\n      if (keys.length > 0) {\n        this.autoSizeCols({\n          colKeys: keys,\n          skipHeader: skipHeaderOnAutoSize,\n          stopAtGroup: columnGroup,\n          source: \"uiColumnResized\"\n        });\n      }\n      callback();\n    };\n    element.addEventListener(\"dblclick\", listener);\n    return () => element.removeEventListener(\"dblclick\", listener);\n  }\n  // method will call itself if no available width. this covers if the grid\n  // isn't visible, but is just about to be visible.\n  sizeColumnsToFitGridBody(params, nextTimeout) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const {\n      ctrlsSvc,\n      scrollVisibleSvc\n    } = this.beans;\n    const gridBodyCtrl = ctrlsSvc.getGridBodyCtrl();\n    const removeScrollWidth = gridBodyCtrl.isVerticalScrollShowing();\n    const scrollWidthToRemove = removeScrollWidth ? scrollVisibleSvc.getScrollbarWidth() : 0;\n    const bodyViewportWidth = _getInnerWidth(gridBodyCtrl.eGridBody);\n    const availableWidth = bodyViewportWidth - scrollWidthToRemove;\n    if (availableWidth > 0) {\n      this.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\", false, params);\n      return;\n    }\n    if (nextTimeout === void 0) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFitGridBody(params, 100);\n      }, 0);\n    } else if (nextTimeout === 100) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFitGridBody(params, 500);\n      }, 100);\n    } else if (nextTimeout === 500) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFitGridBody(params, -1);\n      }, 500);\n    } else {\n      _warn(29);\n    }\n  }\n  // called from api\n  sizeColumnsToFit(gridWidth, source = \"sizeColumnsToFit\", silent, params) {\n    if (this.shouldQueueResizeOperations) {\n      this.pushResizeOperation(() => this.sizeColumnsToFit(gridWidth, source, silent, params));\n      return;\n    }\n    const limitsMap = {};\n    if (params) {\n      params?.columnLimits?.forEach(({\n        key,\n        ...dimensions\n      }) => {\n        limitsMap[typeof key === \"string\" ? key : key.getColId()] = dimensions;\n      });\n    }\n    const allDisplayedColumns = this.beans.visibleCols.allCols;\n    if (gridWidth <= 0 || !allDisplayedColumns.length) {\n      return;\n    }\n    const doColumnsAlreadyFit = gridWidth === getWidthOfColsInList(allDisplayedColumns);\n    if (doColumnsAlreadyFit) {\n      const doAllColumnsSatisfyConstraints = allDisplayedColumns.every(column => {\n        if (column.colDef.suppressSizeToFit) {\n          return true;\n        }\n        const widthOverride = limitsMap?.[column.getId()];\n        const minWidth = widthOverride?.minWidth ?? params?.defaultMinWidth;\n        const maxWidth = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\n        const colWidth = column.getActualWidth();\n        return (minWidth == null || colWidth >= minWidth) && (maxWidth == null || colWidth <= maxWidth);\n      });\n      if (doAllColumnsSatisfyConstraints) {\n        return;\n      }\n    }\n    const colsToSpread = [];\n    const colsToNotSpread = [];\n    allDisplayedColumns.forEach(column => {\n      if (column.getColDef().suppressSizeToFit === true) {\n        colsToNotSpread.push(column);\n      } else {\n        colsToSpread.push(column);\n      }\n    });\n    const colsToDispatchEventFor = colsToSpread.slice(0);\n    let finishedResizing = false;\n    const moveToNotSpread = column => {\n      _removeFromArray(colsToSpread, column);\n      colsToNotSpread.push(column);\n    };\n    colsToSpread.forEach(column => {\n      column.resetActualWidth(source);\n      const widthOverride = limitsMap?.[column.getId()];\n      const minOverride = widthOverride?.minWidth ?? params?.defaultMinWidth;\n      const maxOverride = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\n      const colWidth = column.getActualWidth();\n      if (typeof minOverride === \"number\" && colWidth < minOverride) {\n        column.setActualWidth(minOverride, source, true);\n      } else if (typeof maxOverride === \"number\" && colWidth > maxOverride) {\n        column.setActualWidth(maxOverride, source, true);\n      }\n    });\n    while (!finishedResizing) {\n      finishedResizing = true;\n      const availablePixels = gridWidth - getWidthOfColsInList(colsToNotSpread);\n      if (availablePixels <= 0) {\n        colsToSpread.forEach(column => {\n          const widthOverride = limitsMap?.[column.getId()]?.minWidth ?? params?.defaultMinWidth;\n          if (typeof widthOverride === \"number\") {\n            column.setActualWidth(widthOverride, source, true);\n            return;\n          }\n          column.setActualWidth(column.minWidth, source);\n        });\n      } else {\n        const scale = availablePixels / getWidthOfColsInList(colsToSpread);\n        let pixelsForLastCol = availablePixels;\n        for (let i = colsToSpread.length - 1; i >= 0; i--) {\n          const column = colsToSpread[i];\n          const widthOverride = limitsMap?.[column.getId()];\n          const minOverride = widthOverride?.minWidth ?? params?.defaultMinWidth;\n          const maxOverride = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\n          const colMinWidth = column.getMinWidth();\n          const colMaxWidth = column.getMaxWidth();\n          const minWidth = typeof minOverride === \"number\" && minOverride > colMinWidth ? minOverride : colMinWidth;\n          const maxWidth = typeof maxOverride === \"number\" && maxOverride < colMaxWidth ? maxOverride : colMaxWidth;\n          let newWidth = Math.round(column.getActualWidth() * scale);\n          if (newWidth < minWidth) {\n            newWidth = minWidth;\n            moveToNotSpread(column);\n            finishedResizing = false;\n          } else if (newWidth > maxWidth) {\n            newWidth = maxWidth;\n            moveToNotSpread(column);\n            finishedResizing = false;\n          } else if (i === 0) {\n            newWidth = pixelsForLastCol;\n          }\n          column.setActualWidth(newWidth, source, true);\n          pixelsForLastCol -= newWidth;\n        }\n      }\n    }\n    colsToDispatchEventFor.forEach(col => {\n      col.fireColumnWidthChangedEvent(source);\n    });\n    const visibleCols = this.beans.visibleCols;\n    visibleCols.setLeftValues(source);\n    visibleCols.updateBodyWidths();\n    if (silent) {\n      return;\n    }\n    dispatchColumnResizedEvent(this.eventSvc, colsToDispatchEventFor, true, source);\n  }\n  applyAutosizeStrategy() {\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\n    if (!autoSizeStrategy) {\n      return;\n    }\n    const {\n      type\n    } = autoSizeStrategy;\n    setTimeout(() => {\n      if (type === \"fitGridWidth\") {\n        const {\n          columnLimits: propColumnLimits,\n          defaultMinWidth,\n          defaultMaxWidth\n        } = autoSizeStrategy;\n        const columnLimits = propColumnLimits?.map(({\n          colId: key,\n          minWidth,\n          maxWidth\n        }) => ({\n          key,\n          minWidth,\n          maxWidth\n        }));\n        this.sizeColumnsToFitGridBody({\n          defaultMinWidth,\n          defaultMaxWidth,\n          columnLimits\n        });\n      } else if (type === \"fitProvidedWidth\") {\n        this.sizeColumnsToFit(autoSizeStrategy.width, \"sizeColumnsToFit\");\n      }\n    });\n  }\n  onFirstDataRendered() {\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\n    if (autoSizeStrategy?.type !== \"fitCellContents\") {\n      return;\n    }\n    const {\n      colIds: columns,\n      skipHeader,\n      defaultMaxWidth,\n      defaultMinWidth,\n      columnLimits\n    } = autoSizeStrategy;\n    setTimeout(() => {\n      const params = {\n        skipHeader,\n        source: \"autosizeColumns\",\n        defaultMaxWidth,\n        defaultMinWidth,\n        columnLimits\n      };\n      if (columns) {\n        this.autoSizeCols({\n          colKeys: columns,\n          ...params\n        });\n      } else {\n        this.autoSizeAllColumns(params);\n      }\n    });\n  }\n  processResizeOperations() {\n    this.shouldQueueResizeOperations = false;\n    this.resizeOperationQueue.forEach(resizeOperation => resizeOperation());\n    this.resizeOperationQueue = [];\n  }\n  pushResizeOperation(func) {\n    this.resizeOperationQueue.push(func);\n  }\n  destroy() {\n    this.resizeOperationQueue.length = 0;\n    super.destroy();\n  }\n};\nfunction normaliseColumnWidth(column, newWidth, limits = {}) {\n  const minWidth = limits.minWidth ?? column.getMinWidth();\n  if (newWidth < minWidth) {\n    newWidth = minWidth;\n  }\n  const maxWidth = limits.maxWidth ?? column.getMaxWidth();\n  if (newWidth > maxWidth) {\n    newWidth = maxWidth;\n  }\n  return newWidth;\n}\n\n// packages/ag-grid-community/src/columnAutosize/columnAutosizeModule.ts\nvar ColumnAutoSizeModule = {\n  moduleName: \"ColumnAutoSize\",\n  version: VERSION,\n  beans: [ColumnAutosizeService],\n  apiFunctions: {\n    sizeColumnsToFit,\n    autoSizeColumns,\n    autoSizeAllColumns\n  },\n  dependsOn: [AutoWidthModule]\n};\n\n// packages/ag-grid-community/src/pinnedRowModel/manualPinnedRow.css-GENERATED.ts\nvar manualPinnedRowCSS = /*css*/\n`.ag-row-pinned-source{background-color:var(--ag-pinned-source-row-background-color);color:var(--ag-pinned-source-row-text-color);font-weight:var(--ag-pinned-source-row-font-weight)}.ag-row-pinned-manual{background-color:var(--ag-pinned-row-background-color);color:var(--ag-pinned-row-text-color);font-weight:var(--ag-pinned-row-font-weight)}`;\n\n// packages/ag-grid-community/src/pinnedRowModel/pinnedRowApi.ts\nfunction getPinnedTopRowCount(beans) {\n  return beans.pinnedRowModel?.getPinnedTopRowCount() ?? 0;\n}\nfunction getPinnedBottomRowCount(beans) {\n  return beans.pinnedRowModel?.getPinnedBottomRowCount() ?? 0;\n}\nfunction getPinnedTopRow(beans, index) {\n  return beans.pinnedRowModel?.getPinnedTopRow(index);\n}\nfunction getPinnedBottomRow(beans, index) {\n  return beans.pinnedRowModel?.getPinnedBottomRow(index);\n}\nfunction forEachPinnedRow(beans, floating, callback) {\n  return beans.pinnedRowModel?.forEachPinnedRow(floating, callback);\n}\n\n// packages/ag-grid-community/src/pinnedRowModel/pinnedRowModule.ts\nvar PinnedRowModule = {\n  moduleName: \"PinnedRow\",\n  version: VERSION,\n  beans: [PinnedRowModel],\n  css: [manualPinnedRowCSS],\n  apiFunctions: {\n    getPinnedTopRowCount,\n    getPinnedBottomRowCount,\n    getPinnedTopRow,\n    getPinnedBottomRow,\n    forEachPinnedRow\n  },\n  icons: {\n    rowPin: \"pin\",\n    rowPinTop: \"pinned-top\",\n    rowPinBottom: \"pinned-bottom\",\n    rowUnpin: \"un-pin\"\n  }\n};\n\n// packages/ag-grid-community/src/rendering/spanning/spannedCellCtrl.ts\nvar SpannedCellCtrl = class extends CellCtrl {\n  constructor(cellSpan, rowCtrl, beans) {\n    super(cellSpan.col, cellSpan.firstNode, beans, rowCtrl);\n    this.cellSpan = cellSpan;\n    this.SPANNED_CELL_CSS_CLASS = \"ag-spanned-cell\";\n  }\n  setComp(comp, eCell, eWrapper, eCellWrapper, printLayout, startEditing, compBean) {\n    this.eWrapper = eWrapper;\n    super.setComp(comp, eCell, eWrapper, eCellWrapper, printLayout, startEditing, compBean);\n    this.setAriaRowSpan();\n    this.refreshAriaRowIndex();\n  }\n  isCellSpanning() {\n    return true;\n  }\n  getCellSpan() {\n    return this.cellSpan;\n  }\n  /**\n   * When cell is spanning, ensure row index is also available on the cell\n   */\n  refreshAriaRowIndex() {\n    if (this.rowNode.rowIndex == null) {\n      return;\n    }\n    _setAriaRowIndex(this.eGui, this.rowNode.rowIndex);\n  }\n  /**\n   * When cell is spanning, ensure row index is also available on the cell\n   */\n  setAriaRowSpan() {\n    _setAriaRowSpan(this.eGui, this.cellSpan.spannedNodes.size);\n  }\n  // not ideal, for tabbing need to force the focused position\n  setFocusedCellPosition(cellPos) {\n    this.focusedCellPosition = cellPos;\n  }\n  getFocusedCellPosition() {\n    return this.focusedCellPosition ?? this.cellPosition;\n  }\n  checkCellFocused() {\n    const focusedCell = this.beans.focusSvc.getFocusedCell();\n    return !!focusedCell && this.cellSpan.doesSpanContain(focusedCell);\n  }\n  applyStaticCssClasses() {\n    super.applyStaticCssClasses();\n    this.comp.toggleCss(this.SPANNED_CELL_CSS_CLASS, true);\n  }\n  onCellFocused(event) {\n    const {\n      beans\n    } = this;\n    if (_isCellFocusSuppressed(beans)) {\n      this.focusedCellPosition = void 0;\n      return;\n    }\n    const cellFocused = this.isCellFocused();\n    if (!cellFocused) {\n      this.focusedCellPosition = void 0;\n    }\n    if (event && cellFocused) {\n      this.focusedCellPosition = {\n        rowIndex: event.rowIndex,\n        rowPinned: event.rowPinned,\n        column: event.column\n        // fix\n      };\n    }\n    super.onCellFocused(event);\n  }\n  getRootElement() {\n    return this.eWrapper;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/spanning/spannedRowCtrl.ts\nvar SpannedRowCtrl = class extends RowCtrl {\n  onRowIndexChanged() {\n    super.onRowIndexChanged();\n    this.getAllCellCtrls().forEach(c => c.refreshAriaRowIndex());\n  }\n  getInitialRowClasses(_rowContainerType) {\n    return [\"ag-spanned-row\"];\n  }\n  getNewCellCtrl(col) {\n    const cellSpan = this.beans.rowSpanSvc?.getCellSpan(col, this.rowNode);\n    if (!cellSpan) {\n      return;\n    }\n    const firstRowOfSpan = cellSpan.firstNode !== this.rowNode;\n    if (firstRowOfSpan) {\n      return;\n    }\n    return new SpannedCellCtrl(cellSpan, this, this.beans);\n  }\n  isCorrectCtrlForSpan(cell) {\n    const cellSpan = this.beans.rowSpanSvc?.getCellSpan(cell.column, this.rowNode);\n    if (!cellSpan) {\n      return false;\n    }\n    const firstRowOfSpan = cellSpan.firstNode !== this.rowNode;\n    if (firstRowOfSpan) {\n      return false;\n    }\n    return cell.getCellSpan() === cellSpan;\n  }\n  /**\n   * Below overrides are explicitly disabling styling and other unwanted behaviours for spannedRowCtrl\n   */\n  // row height should be 0 in spanned row - they're only included for purpose of aria\n  onRowHeightChanged() {}\n  // no styling spanned rows\n  refreshFirstAndLastRowStyles() {}\n  // no hover functionality for spanned rows\n  addHoverFunctionality() {}\n  resetHoveredStatus() {}\n};\n\n// packages/ag-grid-community/src/rendering/spanning/spannedRowRenderer.ts\nvar SpannedRowRenderer = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"spannedRowRenderer\";\n    this.topCtrls = /* @__PURE__ */new Map();\n    this.bottomCtrls = /* @__PURE__ */new Map();\n    this.centerCtrls = /* @__PURE__ */new Map();\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      displayedRowsChanged: this.createAllCtrls.bind(this)\n    });\n  }\n  createAllCtrls() {\n    this.createCtrls(\"top\");\n    this.createCtrls(\"bottom\");\n    this.createCtrls(\"center\");\n  }\n  /**\n   * When displayed rows or cols change, the spanned cell ctrls need to update\n   */\n  createCtrls(ctrlsKey) {\n    const {\n      rowSpanSvc\n    } = this.beans;\n    const ctrlsName = `${ctrlsKey}Ctrls`;\n    const previousCtrls = this[ctrlsName];\n    const previousCtrlsSize = previousCtrls.size;\n    const rowCtrls = this.getAllRelevantRowControls(ctrlsKey);\n    const newRowCtrls = /* @__PURE__ */new Map();\n    let hasNewSpans = false;\n    for (const ctrl of rowCtrls) {\n      if (!ctrl.isAlive()) {\n        continue;\n      }\n      rowSpanSvc?.forEachSpannedColumn(ctrl.rowNode, (col, cellSpan) => {\n        if (newRowCtrls.has(cellSpan.firstNode)) {\n          return;\n        }\n        const existingCtrl = previousCtrls.get(cellSpan.firstNode);\n        if (existingCtrl) {\n          newRowCtrls.set(cellSpan.firstNode, existingCtrl);\n          previousCtrls.delete(cellSpan.firstNode);\n          return;\n        }\n        hasNewSpans = true;\n        const newCtrl = new SpannedRowCtrl(cellSpan.firstNode, this.beans, false, false, false);\n        newRowCtrls.set(cellSpan.firstNode, newCtrl);\n      });\n    }\n    this[ctrlsName] = newRowCtrls;\n    const sameCount = newRowCtrls.size === previousCtrlsSize;\n    if (!hasNewSpans && sameCount) return;\n    for (const oldCtrl of previousCtrls.values()) {\n      oldCtrl.destroyFirstPass(true);\n      oldCtrl.destroySecondPass();\n    }\n    this.dispatchLocalEvent({\n      type: `spannedRowsUpdated`,\n      ctrlsKey\n    });\n  }\n  // cannot use getAllRowCtrls as it returns this services row ctrls.\n  getAllRelevantRowControls(ctrlsKey) {\n    const {\n      rowRenderer\n    } = this.beans;\n    switch (ctrlsKey) {\n      case \"top\":\n        return rowRenderer.topRowCtrls;\n      case \"bottom\":\n        return rowRenderer.bottomRowCtrls;\n      case \"center\":\n        return rowRenderer.allRowCtrls;\n    }\n  }\n  getCellByPosition(cellPosition) {\n    const {\n      rowSpanSvc\n    } = this.beans;\n    const cellSpan = rowSpanSvc?.getCellSpanByPosition(cellPosition);\n    if (!cellSpan) {\n      return void 0;\n    }\n    const ctrlsName = `${_normalisePinnedValue(cellPosition.rowPinned)}Ctrls`;\n    const ctrl = this[ctrlsName].get(cellSpan.firstNode);\n    if (!ctrl) {\n      return void 0;\n    }\n    return ctrl.getAllCellCtrls().find(cellCtrl => cellCtrl.column === cellPosition.column);\n  }\n  getCtrls(container) {\n    const ctrlsName = `${container}Ctrls`;\n    return [...this[ctrlsName].values()];\n  }\n  destroyRowCtrls(container) {\n    const ctrlsName = `${container}Ctrls`;\n    for (const ctrl of this[ctrlsName].values()) {\n      ctrl.destroyFirstPass(true);\n      ctrl.destroySecondPass();\n    }\n    this[ctrlsName] = /* @__PURE__ */new Map();\n  }\n  destroy() {\n    super.destroy();\n    this.destroyRowCtrls(\"top\");\n    this.destroyRowCtrls(\"bottom\");\n    this.destroyRowCtrls(\"center\");\n  }\n};\nvar _normalisePinnedValue = pinned => {\n  return pinned ?? \"center\";\n};\n\n// packages/ag-grid-community/src/rendering/spanning/rowSpanCache.ts\nvar CellSpan = class {\n  constructor(col, firstNode) {\n    this.col = col;\n    this.firstNode = firstNode;\n    // used for distinguishing between types\n    this.cellSpan = true;\n    this.spannedNodes = /* @__PURE__ */new Set();\n    this.addSpannedNode(firstNode);\n  }\n  /**\n   * Reset the span leaving only the head.\n   * Head is used as a comparison as this is the row used to render this cell\n   * Even if the row data changes, the cell will properly reflect the correct value.\n   */\n  reset() {\n    this.spannedNodes.clear();\n    this.addSpannedNode(this.firstNode);\n  }\n  addSpannedNode(node) {\n    this.spannedNodes.add(node);\n    this.lastNode = node;\n  }\n  getLastNode() {\n    return this.lastNode;\n  }\n  getCellHeight() {\n    return this.lastNode.rowTop + this.lastNode.rowHeight - this.firstNode.rowTop - 1;\n  }\n  doesSpanContain(cellPosition) {\n    if (cellPosition.column !== this.col) {\n      return false;\n    }\n    if (cellPosition.rowPinned != this.firstNode.rowPinned) {\n      return false;\n    }\n    return this.firstNode.rowIndex <= cellPosition.rowIndex && cellPosition.rowIndex <= this.lastNode.rowIndex;\n  }\n  /**\n   * Gets the auto height value for last node in the spanned cell.\n   * The first node is used to store the auto height for the cell, but the additional height for this cell\n   * needs applied to the last row in the span.\n   */\n  getLastNodeAutoHeight() {\n    const autoHeight = this.firstNode.__autoHeights?.[this.col.getColId()];\n    if (autoHeight == null) {\n      return void 0;\n    }\n    let allButLastHeights = 0;\n    this.spannedNodes.forEach(node => {\n      if (node === this.lastNode) return;\n      allButLastHeights += node.rowHeight;\n    });\n    return autoHeight - allButLastHeights;\n  }\n};\nvar RowSpanCache = class extends BeanStub {\n  constructor(column) {\n    super();\n    this.column = column;\n  }\n  buildCache(pinned) {\n    const {\n      column,\n      beans: {\n        gos,\n        pinnedRowModel,\n        rowModel,\n        valueSvc,\n        pagination\n      }\n    } = this;\n    const {\n      colDef\n    } = column;\n    const oldMap = this[`${pinned}ValueNodeMap`];\n    const newMap = /* @__PURE__ */new Map();\n    const isFullWidthCellFunc = gos.getCallback(\"isFullWidthRow\");\n    const equalsFnc = colDef.equals;\n    const customCompare = colDef.spanRows;\n    const isCustomCompare = typeof customCompare === \"function\";\n    let lastNode = null;\n    let spanData = null;\n    let lastValue;\n    const setNewHead = (node, value) => {\n      lastNode = node;\n      spanData = null;\n      lastValue = value;\n    };\n    const checkNodeForCache = node => {\n      const doesNodeSupportSpanning = !node.isExpandable() && !node.group && !node.detail && (isFullWidthCellFunc ? !isFullWidthCellFunc({\n        rowNode: node\n      }) : true);\n      if (node.rowIndex == null || !doesNodeSupportSpanning) {\n        setNewHead(null, null);\n        return;\n      }\n      if (lastNode == null || node.level !== lastNode.level ||\n      // no span across groups\n      node.footer || spanData && node.rowIndex - 1 !== spanData?.getLastNode().rowIndex) {\n        setNewHead(node, valueSvc.getValue(column, node));\n        return;\n      }\n      const value = valueSvc.getValue(column, node);\n      if (isCustomCompare) {\n        const params = _addGridCommonParams(gos, {\n          valueA: lastValue,\n          nodeA: lastNode,\n          valueB: value,\n          nodeB: node,\n          column,\n          colDef\n        });\n        if (!customCompare(params)) {\n          setNewHead(node, value);\n          return;\n        }\n      } else {\n        if (equalsFnc ? !equalsFnc(lastValue, value) : lastValue !== value) {\n          setNewHead(node, value);\n          return;\n        }\n      }\n      if (!spanData) {\n        const oldSpan = oldMap?.get(lastNode);\n        if (oldSpan?.firstNode === lastNode) {\n          oldSpan.reset();\n          spanData = oldSpan;\n        } else {\n          spanData = new CellSpan(column, lastNode);\n        }\n        newMap.set(lastNode, spanData);\n      }\n      spanData.addSpannedNode(node);\n      newMap.set(node, spanData);\n    };\n    switch (pinned) {\n      case \"center\":\n        rowModel.forEachDisplayedNode?.(node => {\n          const isNodeInPage = !pagination || pagination.isRowInPage(node.rowIndex);\n          if (!isNodeInPage) {\n            return;\n          }\n          checkNodeForCache(node);\n        });\n        break;\n      case \"top\":\n        pinnedRowModel?.forEachPinnedRow(\"top\", checkNodeForCache);\n        break;\n      case \"bottom\":\n        pinnedRowModel?.forEachPinnedRow(\"bottom\", checkNodeForCache);\n        break;\n    }\n    this[`${pinned}ValueNodeMap`] = newMap;\n  }\n  isCellSpanning(node) {\n    return !!this.getCellSpan(node);\n  }\n  getCellSpan(node) {\n    const map = this[`${_normalisePinnedValue(node.rowPinned)}ValueNodeMap`];\n    return map.get(node);\n  }\n};\n\n// packages/ag-grid-community/src/rendering/spanning/rowSpanService.ts\nvar RowSpanService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowSpanSvc\";\n    this.spanningColumns = /* @__PURE__ */new Map();\n    // debounced to allow spannedRowRenderer to run first, removing any old spanned rows\n    this.debouncePinnedEvent = _debounce(this, this.dispatchCellsUpdatedEvent.bind(this, true), 0);\n    this.debounceModelEvent = _debounce(this, this.dispatchCellsUpdatedEvent.bind(this, false), 0);\n    this.pinnedTimeout = null;\n    this.modelTimeout = null;\n  }\n  postConstruct() {\n    const onRowDataUpdated = this.onRowDataUpdated.bind(this);\n    const buildPinnedCaches = this.buildPinnedCaches.bind(this);\n    this.addManagedEventListeners({\n      paginationChanged: this.buildModelCaches.bind(this),\n      pinnedRowDataChanged: buildPinnedCaches,\n      pinnedRowsChanged: buildPinnedCaches,\n      rowNodeDataChanged: onRowDataUpdated,\n      cellValueChanged: onRowDataUpdated\n    });\n  }\n  /**\n   * When a new column is created with spanning (or spanning changes for a column)\n   * @param column column that is now spanning\n   */\n  register(column) {\n    const {\n      gos\n    } = this.beans;\n    if (!gos.get(\"enableCellSpan\")) {\n      return;\n    }\n    if (this.spanningColumns.has(column)) {\n      return;\n    }\n    const cache = this.createManagedBean(new RowSpanCache(column));\n    this.spanningColumns.set(column, cache);\n    cache.buildCache(\"top\");\n    cache.buildCache(\"bottom\");\n    cache.buildCache(\"center\");\n    this.debouncePinnedEvent();\n    this.debounceModelEvent();\n  }\n  dispatchCellsUpdatedEvent(pinned) {\n    this.dispatchLocalEvent({\n      type: \"spannedCellsUpdated\",\n      pinned\n    });\n  }\n  /**\n   * When a new column is destroyed with spanning (or spanning changes for a column)\n   * @param column column that is now spanning\n   */\n  deregister(column) {\n    this.spanningColumns.delete(column);\n  }\n  // called when data changes, as this could be a hot path it's debounced\n  // it uses timeouts instead of debounce so that it can be cancelled by `modelUpdated`\n  // which is expected to run immediately (to exec before the rowRenderer)\n  onRowDataUpdated({\n    node\n  }) {\n    const {\n      spannedRowRenderer\n    } = this.beans;\n    if (node.rowPinned) {\n      if (this.pinnedTimeout != null) {\n        return;\n      }\n      this.pinnedTimeout = window.setTimeout(() => {\n        this.pinnedTimeout = null;\n        this.buildPinnedCaches();\n        spannedRowRenderer?.createCtrls(\"top\");\n        spannedRowRenderer?.createCtrls(\"bottom\");\n      }, 0);\n      return;\n    }\n    if (this.modelTimeout != null) {\n      return;\n    }\n    this.modelTimeout = window.setTimeout(() => {\n      this.modelTimeout = null;\n      this.buildModelCaches();\n      spannedRowRenderer?.createCtrls(\"center\");\n    }, 0);\n  }\n  buildModelCaches() {\n    if (this.modelTimeout != null) {\n      clearTimeout(this.modelTimeout);\n    }\n    this.spanningColumns.forEach(cache => cache.buildCache(\"center\"));\n    this.debounceModelEvent();\n  }\n  buildPinnedCaches() {\n    if (this.pinnedTimeout != null) {\n      clearTimeout(this.pinnedTimeout);\n    }\n    this.spanningColumns.forEach(cache => {\n      cache.buildCache(\"top\");\n      cache.buildCache(\"bottom\");\n    });\n    this.debouncePinnedEvent();\n  }\n  isCellSpanning(col, rowNode) {\n    const cache = this.spanningColumns.get(col);\n    if (!cache) {\n      return false;\n    }\n    return cache.isCellSpanning(rowNode);\n  }\n  getCellSpanByPosition(position) {\n    const {\n      pinnedRowModel,\n      rowModel\n    } = this.beans;\n    const col = position.column;\n    const index = position.rowIndex;\n    const cache = this.spanningColumns.get(col);\n    if (!cache) {\n      return void 0;\n    }\n    let node;\n    switch (position.rowPinned) {\n      case \"top\":\n        node = pinnedRowModel?.getPinnedTopRow(index);\n        break;\n      case \"bottom\":\n        node = pinnedRowModel?.getPinnedBottomRow(index);\n        break;\n      default:\n        node = rowModel.getRow(index);\n    }\n    if (!node) {\n      return void 0;\n    }\n    return cache.getCellSpan(node);\n  }\n  getCellStart(position) {\n    const span = this.getCellSpanByPosition(position);\n    if (!span) {\n      return position;\n    }\n    return {\n      ...position,\n      rowIndex: span.firstNode.rowIndex\n    };\n  }\n  getCellEnd(position) {\n    const span = this.getCellSpanByPosition(position);\n    if (!span) {\n      return position;\n    }\n    return {\n      ...position,\n      rowIndex: span.getLastNode().rowIndex\n    };\n  }\n  /**\n   * Look-up a spanned cell given a col and node as position indicators\n   *\n   * @param col a column to lookup a span at this position\n   * @param rowNode a node that may be spanned at this position\n   * @returns the CellSpan object if one exists\n   */\n  getCellSpan(col, rowNode) {\n    const cache = this.spanningColumns.get(col);\n    if (!cache) {\n      return void 0;\n    }\n    return cache.getCellSpan(rowNode);\n  }\n  forEachSpannedColumn(rowNode, callback) {\n    for (const [col, cache] of this.spanningColumns) {\n      if (cache.isCellSpanning(rowNode)) {\n        const spanningNode = cache.getCellSpan(rowNode);\n        callback(col, spanningNode);\n      }\n    }\n  }\n  destroy() {\n    super.destroy();\n    this.spanningColumns.clear();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/spanning/cellSpanModule.ts\nvar CellSpanModule = {\n  moduleName: \"CellSpan\",\n  version: VERSION,\n  beans: [RowSpanService, SpannedRowRenderer]\n};\n\n// packages/ag-grid-community/src/styling/cellCustomStyleFeature.ts\nvar CellCustomStyleFeature = class extends BeanStub {\n  constructor(cellCtrl, beans) {\n    super();\n    this.cellCtrl = cellCtrl;\n    this.staticClasses = [];\n    this.beans = beans;\n    this.column = cellCtrl.column;\n  }\n  setComp(comp) {\n    this.cellComp = comp;\n    this.applyUserStyles();\n    this.applyCellClassRules();\n    this.applyClassesFromColDef();\n  }\n  applyCellClassRules() {\n    const {\n      column,\n      cellComp\n    } = this;\n    const colDef = column.colDef;\n    const cellClassRules = colDef.cellClassRules;\n    const cellClassParams = this.getCellClassParams(column, colDef);\n    processClassRules(this.beans.expressionSvc,\n    // if current was previous, skip\n    cellClassRules === this.cellClassRules ? void 0 : this.cellClassRules, cellClassRules, cellClassParams, className => cellComp.toggleCss(className, true), className => cellComp.toggleCss(className, false));\n    this.cellClassRules = cellClassRules;\n  }\n  applyUserStyles() {\n    const column = this.column;\n    const colDef = column.colDef;\n    const cellStyle = colDef.cellStyle;\n    if (!cellStyle) {\n      return;\n    }\n    let styles;\n    if (typeof cellStyle === \"function\") {\n      const cellStyleParams = this.getCellClassParams(column, colDef);\n      styles = cellStyle(cellStyleParams);\n    } else {\n      styles = cellStyle;\n    }\n    if (styles) {\n      this.cellComp.setUserStyles(styles);\n    }\n  }\n  applyClassesFromColDef() {\n    const {\n      column,\n      cellComp\n    } = this;\n    const colDef = column.colDef;\n    const cellClassParams = this.getCellClassParams(column, colDef);\n    this.staticClasses.forEach(className => cellComp.toggleCss(className, false));\n    const newStaticClasses = this.beans.cellStyles.getStaticCellClasses(colDef, cellClassParams);\n    this.staticClasses = newStaticClasses;\n    newStaticClasses.forEach(className => cellComp.toggleCss(className, true));\n  }\n  getCellClassParams(column, colDef) {\n    const {\n      value,\n      rowNode\n    } = this.cellCtrl;\n    return _addGridCommonParams(this.beans.gos, {\n      value,\n      data: rowNode.data,\n      node: rowNode,\n      colDef,\n      column,\n      rowIndex: rowNode.rowIndex\n    });\n  }\n};\n\n// packages/ag-grid-community/src/styling/cellStyleService.ts\nvar CellStyleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"cellStyles\";\n  }\n  processAllCellClasses(colDef, params, onApplicableClass, onNotApplicableClass) {\n    processClassRules(this.beans.expressionSvc, void 0, colDef.cellClassRules, params, onApplicableClass, onNotApplicableClass);\n    this.processStaticCellClasses(colDef, params, onApplicableClass);\n  }\n  getStaticCellClasses(colDef, params) {\n    const {\n      cellClass\n    } = colDef;\n    if (!cellClass) {\n      return [];\n    }\n    let classOrClasses;\n    if (typeof cellClass === \"function\") {\n      const cellClassFunc = cellClass;\n      classOrClasses = cellClassFunc(params);\n    } else {\n      classOrClasses = cellClass;\n    }\n    if (typeof classOrClasses === \"string\") {\n      classOrClasses = [classOrClasses];\n    }\n    return classOrClasses || [];\n  }\n  createCellCustomStyleFeature(ctrl, beans) {\n    return new CellCustomStyleFeature(ctrl, beans);\n  }\n  processStaticCellClasses(colDef, params, onApplicableClass) {\n    const classOrClasses = this.getStaticCellClasses(colDef, params);\n    classOrClasses.forEach(cssClassItem => {\n      onApplicableClass(cssClassItem);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/styling/stylingModule.ts\nvar CellStyleModule = {\n  moduleName: \"CellStyle\",\n  version: VERSION,\n  beans: [CellStyleService]\n};\nvar RowStyleModule = {\n  moduleName: \"RowStyle\",\n  version: VERSION,\n  beans: [RowStyleService]\n};\n\n// packages/ag-grid-community/src/columns/columnHover/columnHoverApi.ts\nfunction isColumnHovered(beans, column) {\n  return !!beans.colHover?.isHovered(column);\n}\n\n// packages/ag-grid-community/src/columns/columnHover/hoverFeature.ts\nvar HoverFeature = class extends BeanStub {\n  constructor(columns, element) {\n    super();\n    this.columns = columns;\n    this.element = element;\n    this.destroyManagedListeners = [];\n    this.enableFeature = enabled => {\n      const {\n        beans,\n        gos,\n        element,\n        columns\n      } = this;\n      const colHover = beans.colHover;\n      const active = enabled ?? !!gos.get(\"columnHoverHighlight\");\n      if (active) {\n        this.destroyManagedListeners = this.addManagedElementListeners(element, {\n          mouseover: colHover.setMouseOver.bind(colHover, columns),\n          mouseout: colHover.clearMouseOver.bind(colHover)\n        });\n      } else {\n        this.destroyManagedListeners.forEach(fn => fn());\n        this.destroyManagedListeners = [];\n      }\n    };\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"columnHoverHighlight\", ({\n      currentValue\n    }) => {\n      this.enableFeature(currentValue);\n    });\n    this.enableFeature();\n  }\n  destroy() {\n    super.destroy();\n    this.destroyManagedListeners = null;\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnHover/columnHoverService.ts\nvar CSS_COLUMN_HOVER = \"ag-column-hover\";\nvar ColumnHoverService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colHover\";\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"columnHoverHighlight\", ({\n      currentValue\n    }) => {\n      if (!currentValue) {\n        this.clearMouseOver();\n      }\n    });\n  }\n  setMouseOver(columns) {\n    this.updateState(columns);\n  }\n  clearMouseOver() {\n    this.updateState(null);\n  }\n  isHovered(column) {\n    if (!this.gos.get(\"columnHoverHighlight\")) {\n      return false;\n    }\n    const selectedColumns = this.selectedColumns;\n    return !!selectedColumns && selectedColumns.indexOf(column) >= 0;\n  }\n  addHeaderColumnHoverListener(compBean, comp, column) {\n    const listener = () => {\n      const isHovered = this.isHovered(column);\n      comp.toggleCss(\"ag-column-hover\", isHovered);\n    };\n    compBean.addManagedEventListeners({\n      columnHoverChanged: listener\n    });\n    listener();\n  }\n  onCellColumnHover(column, cellComp) {\n    if (!cellComp) {\n      return;\n    }\n    const isHovered = this.isHovered(column);\n    cellComp.toggleCss(CSS_COLUMN_HOVER, isHovered);\n  }\n  addHeaderFilterColumnHoverListener(compBean, comp, column, eGui) {\n    this.createHoverFeature(compBean, [column], eGui);\n    const listener = () => {\n      const hovered = this.isHovered(column);\n      comp.toggleCss(\"ag-column-hover\", hovered);\n    };\n    compBean.addManagedEventListeners({\n      columnHoverChanged: listener\n    });\n    listener();\n  }\n  createHoverFeature(compBean, columns, eGui) {\n    compBean.createManagedBean(new HoverFeature(columns, eGui));\n  }\n  updateState(columns) {\n    this.selectedColumns = columns;\n    this.eventSvc.dispatchEvent({\n      type: \"columnHoverChanged\"\n    });\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnHover/columnHoverModule.ts\nvar ColumnHoverModule = {\n  moduleName: \"ColumnHover\",\n  version: VERSION,\n  beans: [ColumnHoverService],\n  apiFunctions: {\n    isColumnHovered\n  }\n};\n\n// packages/ag-grid-community/src/misc/apiEvents/apiEventService.ts\nvar ApiEventService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"apiEventSvc\";\n    this.syncListeners = /* @__PURE__ */new Map();\n    this.asyncListeners = /* @__PURE__ */new Map();\n    this.syncGlobalListeners = /* @__PURE__ */new Set();\n    this.globalListenerPairs = /* @__PURE__ */new Map();\n  }\n  postConstruct() {\n    this.wrapSvc = this.beans.frameworkOverrides.createGlobalEventListenerWrapper?.();\n  }\n  addEventListener(eventType, userListener) {\n    const listener = this.wrapSvc?.wrap(eventType, userListener) ?? userListener;\n    const async = !ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType);\n    const listeners = async ? this.asyncListeners : this.syncListeners;\n    if (!listeners.has(eventType)) {\n      listeners.set(eventType, /* @__PURE__ */new Set());\n    }\n    listeners.get(eventType).add(listener);\n    this.eventSvc.addEventListener(eventType, listener, async);\n  }\n  removeEventListener(eventType, userListener) {\n    const listener = this.wrapSvc?.unwrap(eventType, userListener) ?? userListener;\n    const asyncListeners = this.asyncListeners.get(eventType);\n    const hasAsync = !!asyncListeners?.delete(listener);\n    if (!hasAsync) {\n      this.syncListeners.get(eventType)?.delete(listener);\n    }\n    this.eventSvc.removeEventListener(eventType, listener, hasAsync);\n  }\n  addGlobalListener(userListener) {\n    const listener = this.wrapSvc?.wrapGlobal(userListener) ?? userListener;\n    const syncListener = (eventType, event) => {\n      if (ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\n        listener(eventType, event);\n      }\n    };\n    const asyncListener = (eventType, event) => {\n      if (!ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\n        listener(eventType, event);\n      }\n    };\n    this.globalListenerPairs.set(userListener, {\n      syncListener,\n      asyncListener\n    });\n    const eventSvc = this.eventSvc;\n    eventSvc.addGlobalListener(syncListener, false);\n    eventSvc.addGlobalListener(asyncListener, true);\n  }\n  removeGlobalListener(userListener) {\n    const {\n      eventSvc,\n      wrapSvc,\n      globalListenerPairs\n    } = this;\n    const listener = wrapSvc?.unwrapGlobal(userListener) ?? userListener;\n    const hasAsync = globalListenerPairs.has(listener);\n    if (hasAsync) {\n      const {\n        syncListener,\n        asyncListener\n      } = globalListenerPairs.get(listener);\n      eventSvc.removeGlobalListener(syncListener, false);\n      eventSvc.removeGlobalListener(asyncListener, true);\n      globalListenerPairs.delete(userListener);\n    } else {\n      this.syncGlobalListeners.delete(listener);\n      eventSvc.removeGlobalListener(listener, false);\n    }\n  }\n  destroyEventListeners(map, async) {\n    map.forEach((listeners, eventType) => {\n      listeners.forEach(listener => this.eventSvc.removeEventListener(eventType, listener, async));\n      listeners.clear();\n    });\n    map.clear();\n  }\n  destroyGlobalListeners(set, async) {\n    set.forEach(listener => this.eventSvc.removeGlobalListener(listener, async));\n    set.clear();\n  }\n  destroy() {\n    super.destroy();\n    this.destroyEventListeners(this.syncListeners, false);\n    this.destroyEventListeners(this.asyncListeners, true);\n    this.destroyGlobalListeners(this.syncGlobalListeners, false);\n    const {\n      globalListenerPairs,\n      eventSvc\n    } = this;\n    globalListenerPairs.forEach(({\n      syncListener,\n      asyncListener\n    }) => {\n      eventSvc.removeGlobalListener(syncListener, false);\n      eventSvc.removeGlobalListener(asyncListener, true);\n    });\n    globalListenerPairs.clear();\n  }\n};\n\n// packages/ag-grid-community/src/misc/apiEvents/eventApi.ts\nfunction addEventListener(beans, eventType, listener) {\n  beans.apiEventSvc?.addEventListener(eventType, listener);\n}\nfunction removeEventListener(beans, eventType, listener) {\n  beans.apiEventSvc?.removeEventListener(eventType, listener);\n}\nfunction addGlobalListener(beans, listener) {\n  beans.apiEventSvc?.addGlobalListener(listener);\n}\nfunction removeGlobalListener(beans, listener) {\n  beans.apiEventSvc?.removeGlobalListener(listener);\n}\n\n// packages/ag-grid-community/src/misc/apiEvents/apiEventModule.ts\nvar EventApiModule = {\n  moduleName: \"EventApi\",\n  version: VERSION,\n  apiFunctions: {\n    addEventListener,\n    addGlobalListener,\n    removeEventListener,\n    removeGlobalListener\n  },\n  beans: [ApiEventService]\n};\n\n// packages/ag-grid-community/src/misc/locale/localeModule.ts\nvar LocaleModule = {\n  moduleName: \"Locale\",\n  version: VERSION,\n  beans: [LocaleService]\n};\n\n// packages/ag-grid-community/src/rendering/row/rowAutoHeightService.ts\nvar RowAutoHeightService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowAutoHeight\";\n    this.wasEverActive = false;\n    this._debouncedCalculateRowHeights = _debounce(this, this.calculateRowHeights.bind(this), 1);\n  }\n  /**\n   * If row height has been active, request a refresh of the row heights.\n   */\n  requestCheckAutoHeight() {\n    if (!this.wasEverActive) {\n      return;\n    }\n    this._debouncedCalculateRowHeights();\n  }\n  calculateRowHeights() {\n    const {\n      visibleCols,\n      rowModel,\n      rowSpanSvc,\n      pinnedRowModel\n    } = this.beans;\n    const displayedAutoHeightCols = visibleCols.autoHeightCols;\n    let anyNodeChanged = false;\n    const updateDisplayedRowHeights = row => {\n      const autoHeights = row.__autoHeights;\n      let newRowHeight = _getRowHeightForNode(this.beans, row).height;\n      for (const col of displayedAutoHeightCols) {\n        let cellHeight = autoHeights?.[col.getColId()];\n        const spannedCell = rowSpanSvc?.getCellSpan(col, row);\n        if (spannedCell) {\n          if (spannedCell.getLastNode() !== row) {\n            continue;\n          }\n          cellHeight = rowSpanSvc?.getCellSpan(col, row)?.getLastNodeAutoHeight();\n          if (!cellHeight) {\n            return;\n          }\n        }\n        if (cellHeight == null) {\n          if (this.colSpanSkipCell(col, row)) {\n            continue;\n          }\n          return;\n        }\n        newRowHeight = Math.max(cellHeight, newRowHeight);\n      }\n      if (newRowHeight !== row.rowHeight) {\n        row.setRowHeight(newRowHeight);\n        anyNodeChanged = true;\n      }\n    };\n    pinnedRowModel?.forEachPinnedRow?.(\"top\", updateDisplayedRowHeights);\n    pinnedRowModel?.forEachPinnedRow?.(\"bottom\", updateDisplayedRowHeights);\n    rowModel.forEachDisplayedNode?.(updateDisplayedRowHeights);\n    if (anyNodeChanged) {\n      rowModel.onRowHeightChanged?.();\n    }\n  }\n  /**\n   * Set the cell height into the row node, and request a refresh of the row heights if there's been a change.\n   * @param rowNode the node to set the auto height on\n   * @param cellHeight the height to set, undefined if the cell has just been destroyed\n   * @param column the column of the cell\n   */\n  setRowAutoHeight(rowNode, cellHeight, column) {\n    rowNode.__autoHeights ?? (rowNode.__autoHeights = {});\n    if (cellHeight == void 0) {\n      delete rowNode.__autoHeights[column.getId()];\n      return;\n    }\n    const previousCellHeight = rowNode.__autoHeights[column.getId()];\n    rowNode.__autoHeights[column.getId()] = cellHeight;\n    if (previousCellHeight !== cellHeight) {\n      this.requestCheckAutoHeight();\n    }\n  }\n  /**\n   * If using col span, then cells which have been spanned over do not need an auto height value\n   * @param col the column of the cell\n   * @param node the node of the cell\n   * @returns whether the row needs auto height value for that column\n   */\n  colSpanSkipCell(col, node) {\n    const {\n      colModel,\n      colViewport,\n      visibleCols\n    } = this.beans;\n    if (!colModel.colSpanActive) {\n      return false;\n    }\n    let activeColsForRow = [];\n    switch (col.getPinned()) {\n      case \"left\":\n        activeColsForRow = visibleCols.getLeftColsForRow(node);\n        break;\n      case \"right\":\n        activeColsForRow = visibleCols.getRightColsForRow(node);\n        break;\n      case null:\n        activeColsForRow = colViewport.getColsWithinViewport(node);\n        break;\n    }\n    return !activeColsForRow.includes(col);\n  }\n  /**\n   * If required, sets up observers to continuously measure changes in the cell height.\n   * @param cellCtrl the cellCtrl of the cell\n   * @param eCellWrapper the HTMLElement to track the height of\n   * @param compBean the component bean to add the destroy/cleanup function to\n   * @returns whether or not auto height has been set up on this cell\n   */\n  setupCellAutoHeight(cellCtrl, eCellWrapper, compBean) {\n    if (!cellCtrl.column.isAutoHeight() || !eCellWrapper) {\n      return false;\n    }\n    this.wasEverActive = true;\n    const eParentCell = eCellWrapper.parentElement;\n    const {\n      rowNode,\n      column\n    } = cellCtrl;\n    const beans = this.beans;\n    const measureHeight = timesCalled => {\n      if (this.beans.editSvc?.isEditing(cellCtrl)) {\n        return;\n      }\n      if (!cellCtrl.isAlive() || !compBean.isAlive()) {\n        return;\n      }\n      const {\n        paddingTop,\n        paddingBottom,\n        borderBottomWidth,\n        borderTopWidth\n      } = _getElementSize(eParentCell);\n      const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\n      const wrapperHeight = eCellWrapper.offsetHeight;\n      const autoHeight = wrapperHeight + extraHeight;\n      if (timesCalled < 5) {\n        const doc = _getDocument(beans);\n        const notYetInDom = !doc || !doc.contains(eCellWrapper);\n        const possiblyNoContentYet = autoHeight == 0;\n        if (notYetInDom || possiblyNoContentYet) {\n          window.setTimeout(() => measureHeight(timesCalled + 1), 0);\n          return;\n        }\n      }\n      this.setRowAutoHeight(rowNode, autoHeight, column);\n    };\n    const listener = () => measureHeight(0);\n    listener();\n    const destroyResizeObserver = _observeResize(beans, eCellWrapper, listener);\n    compBean.addDestroyFunc(() => {\n      destroyResizeObserver();\n      this.setRowAutoHeight(rowNode, void 0, column);\n    });\n    return true;\n  }\n  setAutoHeightActive(cols) {\n    this.active = cols.list.some(col => col.isVisible() && col.isAutoHeight());\n  }\n  /**\n   * Determines if the row auto height service has cells to grow.\n   * @returns true if all of the rendered rows are at least as tall as their rendered cells.\n   */\n  areRowsMeasured() {\n    if (!this.active) {\n      return true;\n    }\n    const rowCtrls = this.beans.rowRenderer.getAllRowCtrls();\n    let renderedAutoHeightCols = null;\n    for (const {\n      rowNode\n    } of rowCtrls) {\n      if (!renderedAutoHeightCols || this.beans.colModel.colSpanActive) {\n        const renderedCols = this.beans.colViewport.getColsWithinViewport(rowNode);\n        renderedAutoHeightCols = renderedCols.filter(col => col.isAutoHeight());\n      }\n      if (renderedAutoHeightCols.length === 0) {\n        continue;\n      }\n      if (!rowNode.__autoHeights) {\n        return false;\n      }\n      for (const col of renderedAutoHeightCols) {\n        const cellHeight = rowNode.__autoHeights[col.getColId()];\n        if (!cellHeight || rowNode.rowHeight < cellHeight) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/row/rowAutoHeightModule.ts\nvar RowAutoHeightModule = {\n  moduleName: \"RowAutoHeight\",\n  version: VERSION,\n  beans: [RowAutoHeightService]\n};\n\n// packages/ag-grid-community/src/allCommunityModule.ts\nvar AllCommunityModule = {\n  moduleName: \"AllCommunity\",\n  version: VERSION,\n  dependsOn: [ClientSideRowModelModule, CsvExportModule, InfiniteRowModelModule, ValidationModule, TextEditorModule, NumberEditorModule, DateEditorModule, CheckboxEditorModule, SelectEditorModule, LargeTextEditorModule, CustomEditorModule, UndoRedoEditModule, TextFilterModule, NumberFilterModule, DateFilterModule, CustomFilterModule, QuickFilterModule, ExternalFilterModule, GridStateModule, AlignedGridsModule, PaginationModule, ColumnApiModule, RowApiModule, ScrollApiModule, RenderApiModule, ColumnAutoSizeModule, RowDragModule, PinnedRowModule, RowSelectionModule, ValueCacheModule, CellStyleModule, ColumnHoverModule, RowStyleModule, EventApiModule, CellApiModule, HighlightChangesModule, TooltipModule, LocaleModule, RowAutoHeightModule, DragAndDropModule, ClientSideRowModelApiModule, CellSpanModule]\n};\n\n// packages/ag-grid-community/src/testing/testIdUtils.ts\nfunction formatTestId(name, attributes = {}) {\n  const params = Object.keys(attributes).map(k => {\n    const v = attributes[k];\n    return v != null ? `${k}=${v}` : null;\n  }).filter(Boolean).join(\";\");\n  return [name, params].filter(s => s.length > 0).join(\":\");\n}\nvar agTestIdFor = {\n  grid(gridId) {\n    return formatTestId(\"ag-grid-root\", {\n      gridId\n    });\n  },\n  /** Headers */\n  headerGroupCell(colId) {\n    return formatTestId(\"ag-header-group-cell\", {\n      colId\n    });\n  },\n  headerCell(colId) {\n    return formatTestId(\"ag-header-cell\", {\n      colId\n    });\n  },\n  headerCheckbox(colId) {\n    return formatTestId(\"ag-header-selection-checkbox\", {\n      colId\n    });\n  },\n  headerFilterButton(colId) {\n    return formatTestId(\"ag-header-cell-filter-button\", {\n      colId\n    });\n  },\n  floatingFilterButton(colId) {\n    return formatTestId(\"ag-floating-filter-button\", {\n      colId\n    });\n  },\n  headerCellMenuButton(colId) {\n    return formatTestId(\"ag-header-cell-menu-button\", {\n      colId\n    });\n  },\n  headerResizeHandle(colId) {\n    return formatTestId(\"ag-header-cell-resize\", {\n      colId\n    });\n  },\n  /** Column Filters */\n  filterInstancePickerDisplay(spec) {\n    return formatTestId(`ag-${spec.source}-picker-display`, spec.source === \"filter-toolpanel\" ? {\n      label: spec.colLabel\n    } : {\n      colId: spec.colId\n    });\n  },\n  numberFilterInstanceInput(spec) {\n    return formatTestId(`ag-${spec.source}-number-input`, spec.source === \"filter-toolpanel\" ? {\n      label: spec.colLabel\n    } : {\n      colId: spec.colId\n    });\n  },\n  textFilterInstanceInput(spec) {\n    return formatTestId(`ag-${spec.source}-text-input`, spec.source === \"filter-toolpanel\" ? {\n      label: spec.colLabel\n    } : {\n      colId: spec.colId\n    });\n  },\n  dateFilterInstanceInput(spec) {\n    return formatTestId(`ag-${spec.source}-date-input`, spec.source === \"filter-toolpanel\" ? {\n      label: spec.colLabel\n    } : {\n      colId: spec.colId\n    });\n  },\n  setFilterInstanceMiniFilterInput(spec) {\n    return formatTestId(`ag-${spec.source}-set-filter-mini-filter-input`, spec.source === \"filter-toolpanel\" ? {\n      label: spec.colLabel\n    } : {\n      colId: spec.colId\n    });\n  },\n  setFilterInstanceItem(spec, itemLabel) {\n    return formatTestId(`ag-${spec.source}-set-filter-item`, spec.source === \"filter-toolpanel\" ? {\n      colLabel: spec.colLabel,\n      itemLabel\n    } : {\n      colId: spec.colId,\n      itemLabel\n    });\n  },\n  setFilterApplyPanelButton(spec, buttonLabel) {\n    return formatTestId(`ag-${spec.source}-set-filter-apply-panel-button`, spec.source === \"filter-toolpanel\" ? {\n      colLabel: spec.colLabel,\n      buttonLabel\n    } : {\n      colId: spec.colId,\n      buttonLabel\n    });\n  },\n  filterConditionRadioButton(spec, buttonLabel) {\n    return formatTestId(`ag-${spec.source}-filter-condition-radio-button`, spec.source === \"filter-toolpanel\" ? {\n      colLabel: spec.colLabel,\n      buttonLabel\n    } : {\n      colId: spec.colId,\n      buttonLabel\n    });\n  },\n  /** Advanced Filter */\n  advancedFilterInput() {\n    return formatTestId(\"ag-advanced-filter-input\");\n  },\n  advancedFilterButton(label) {\n    return formatTestId(\"ag-advanced-filter-button\", {\n      label\n    });\n  },\n  advancedFilterBuilderButton() {\n    return formatTestId(\"ag-advanced-filter-builder-button\");\n  },\n  advancedFilterPanelMaximiseButton() {\n    return formatTestId(\"ag-advanced-filter-builder-panel-maximise\");\n  },\n  advancedFilterPanelCloseButton() {\n    return formatTestId(\"ag-advanced-filter-builder-panel-close\");\n  },\n  advancedFilterPill(label) {\n    return formatTestId(\"ag-advanced-filter-builder-pill\", {\n      label\n    });\n  },\n  advancedFilterBuilderAddItemButton() {\n    return formatTestId(\"ag-advanced-filter-builder-add-item-button\");\n  },\n  /** Rows */\n  rowNode(rowId) {\n    return formatTestId(\"ag-row\", {\n      [\"row-id\"]: rowId\n    });\n  },\n  /** Cells */\n  cell(rowId, colId) {\n    return formatTestId(\"ag-cell\", {\n      [\"row-id\"]: rowId,\n      colId\n    });\n  },\n  autoGroupCell(rowId) {\n    return agTestIdFor.cell(rowId, GROUP_AUTO_COLUMN_ID);\n  },\n  checkbox(rowId, colId) {\n    return formatTestId(\"ag-selection-checkbox\", {\n      [\"row-id\"]: rowId,\n      colId\n    });\n  },\n  selectionColumnCheckbox(rowId) {\n    return agTestIdFor.checkbox(rowId, SELECTION_COLUMN_ID);\n  },\n  autoGroupColumnCheckbox(rowId) {\n    return agTestIdFor.checkbox(rowId, GROUP_AUTO_COLUMN_ID);\n  },\n  dragHandle(rowId, colId) {\n    return formatTestId(\"ag-drag-handle\", {\n      [\"row-id\"]: rowId,\n      colId\n    });\n  },\n  groupContracted(rowId, colId) {\n    return formatTestId(\"ag-group-contracted\", {\n      [\"row-id\"]: rowId,\n      colId\n    });\n  },\n  groupExpanded(rowId, colId) {\n    return formatTestId(\"ag-group-expanded\", {\n      [\"row-id\"]: rowId,\n      colId\n    });\n  },\n  autoGroupContracted(rowId) {\n    return agTestIdFor.groupContracted(rowId, GROUP_AUTO_COLUMN_ID);\n  },\n  autoGroupExpanded(rowId) {\n    return agTestIdFor.groupExpanded(rowId, GROUP_AUTO_COLUMN_ID);\n  },\n  rowNumber(rowId) {\n    return agTestIdFor.cell(rowId, ROW_NUMBERS_COLUMN_ID);\n  },\n  /** Menu */\n  menu() {\n    return formatTestId(\"ag-menu\");\n  },\n  menuOption(option) {\n    return formatTestId(\"ag-menu-option\", {\n      [\"option\"]: option\n    });\n  },\n  /** SideBar */\n  sideBar() {\n    return formatTestId(\"ag-side-bar\");\n  },\n  sideBarButton(label) {\n    return formatTestId(\"ag-side-button\", {\n      label\n    });\n  },\n  /** Column Tool Panel */\n  columnToolPanel() {\n    return formatTestId(\"ag-column-panel\");\n  },\n  pivotModeSelect() {\n    return formatTestId(\"ag-pivot-mode-select\");\n  },\n  columnPanelSelectHeaderCheckbox() {\n    return formatTestId(\"ag-column-panel-select-header-checkbox\");\n  },\n  columnPanelSelectHeaderFilter() {\n    return formatTestId(\"ag-column-panel-select-header-filter\");\n  },\n  columnSelectListItemGroupClosedIcon(label) {\n    return formatTestId(\"ag-column-select-list-item-group-closed-icon\", {\n      label\n    });\n  },\n  columnSelectListItemCheckbox(label) {\n    return formatTestId(\"ag-column-select-list-item-checkbox\", {\n      label\n    });\n  },\n  columnSelectListItemDragHandle(label) {\n    return formatTestId(\"ag-column-select-list-item-drag-handle\", {\n      label\n    });\n  },\n  columnDropCellDragHandle(source, area, label) {\n    return formatTestId(\"ag-column-drop-cell-drag-handle\", {\n      source,\n      area,\n      label\n    });\n  },\n  columnDropCellCancelButton(source, area, label) {\n    return formatTestId(\"ag-column-drop-cell-cancel\", {\n      source,\n      area,\n      label\n    });\n  },\n  columnDropArea(source, name) {\n    return formatTestId(\"ag-column-drop-area\", {\n      source,\n      name\n    });\n  },\n  /** Filter Tool Panel (New) */\n  filterToolPanel() {\n    return formatTestId(\"ag-filter-panel\");\n  },\n  filterToolPanelAddFilterButton() {\n    return formatTestId(\"ag-filter-panel-add-filter-button\");\n  },\n  filterToolPanelFilterTypeSelector(colLabel) {\n    return formatTestId(\"ag-filter-panel-filter-type-selector\", {\n      colLabel\n    });\n  },\n  /** Filter Tool Panel (Old) */\n  filterToolPanelSearchInput() {\n    return formatTestId(\"ag-filter-toolpanel-search-input\");\n  },\n  filterToolPanelGroup(title) {\n    return formatTestId(\"ag-filter-toolpanel-group\", {\n      title\n    });\n  },\n  filterToolPanelGroupCollapsedIcon(title) {\n    return formatTestId(\"ag-filter-toolpanel-group-collapsed-icon\", {\n      title\n    });\n  },\n  /** Status Bar */\n  statusBarTotalAndFilteredRowCount() {\n    return formatTestId(\"ag-status-bar-total-and-filtered-row-count\");\n  },\n  statusBarTotalRowCount() {\n    return formatTestId(\"ag-status-bar-total-row-count\");\n  },\n  statusBarFilteredRowCount() {\n    return formatTestId(\"ag-status-bar-filtered-row-count\");\n  },\n  statusBarSelectedRowCount() {\n    return formatTestId(\"ag-status-bar-selected-row-count\");\n  },\n  statusBarAggregations() {\n    return formatTestId(\"ag-status-bar-aggregations\");\n  },\n  /** Pagination */\n  paginationPanelSizePickerDisplay(value) {\n    return formatTestId(\"ag-pagination-page-size-picker-field-display\", {\n      value\n    });\n  },\n  paginationPanelFirstRowOnPage(value) {\n    return formatTestId(\"ag-paging-row-summary-panel-first-row-on-page\", {\n      value\n    });\n  },\n  paginationPanelLastRowOnPage(value) {\n    return formatTestId(\"ag-paging-row-summary-panel-last-row-on-page\", {\n      value\n    });\n  },\n  paginationPanelRecordCount(value) {\n    return formatTestId(\"ag-paging-row-summary-panel-record-count\", {\n      value\n    });\n  },\n  paginationSummaryPanelButton(label) {\n    return formatTestId(\"ag-paging-page-summary-panel-btn\", {\n      label\n    });\n  },\n  paginationSummaryPanelCurrentPage(value) {\n    return formatTestId(\"ag-paging-page-summary-panel-current-page\", {\n      value\n    });\n  },\n  paginationSummaryPanelTotalPage(value) {\n    return formatTestId(\"ag-paging-page-summary-panel-total-page\", {\n      value\n    });\n  },\n  /** Fill Handle */\n  fillHandle() {\n    return formatTestId(\"ag-fill-handle\");\n  },\n  /** Column Chooser */\n  columnChooserCloseButton() {\n    return formatTestId(\"ag-column-chooser-close-button\");\n  },\n  columnChooserSearchBarCheckbox() {\n    return formatTestId(\"ag-column-chooser-header-checkbox\");\n  },\n  columnChooserSearchBarFilter() {\n    return formatTestId(\"ag-column-chooser-searchbar-filter\");\n  },\n  columnChooserListItemGroupClosedIcon(label) {\n    return formatTestId(\"ag-column-chooser-list-item-group-closed-icon\", {\n      label\n    });\n  },\n  columnChooserListItemCheckbox(label) {\n    return formatTestId(\"ag-column-chooser-list-item-checkbox\", {\n      label\n    });\n  },\n  columnChooserListItemDragHandle(label) {\n    return formatTestId(\"ag-column-chooser-list-item-drag-handle\", {\n      label\n    });\n  },\n  /** Overlay */\n  overlay() {\n    return formatTestId(\"ag-overlay\");\n  }\n};\nvar wrapAgTestIdFor = fn => {\n  const locators = {};\n  const keys = Object.keys(agTestIdFor);\n  keys.forEach(k => {\n    locators[k] = (...args) => {\n      return fn(agTestIdFor[k](...args));\n    };\n  });\n  return locators;\n};\n\n// packages/ag-grid-community/src/testing/testIdService.ts\nvar TEST_ID_ATTR = \"data-testid\";\nfunction setTestId(element, testId) {\n  element?.setAttribute(TEST_ID_ATTR, testId);\n}\nfunction setTestIdAttribute(attr) {\n  TEST_ID_ATTR = attr;\n}\nvar TestIdService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"testIdSvc\";\n  }\n  postConstruct() {\n    const setup = _debounce(this, () => this.setupAllTestIds(), 0);\n    this.addManagedEventListeners({\n      firstDataRendered: setup,\n      displayedRowsChanged: setup,\n      displayedColumnsChanged: setup,\n      displayedColumnsWidthChanged: setup,\n      virtualColumnsChanged: setup,\n      columnMenuVisibleChanged: setup,\n      contextMenuVisibleChanged: setup,\n      advancedFilterBuilderVisibleChanged: setup,\n      fieldPickerValueSelected: setup,\n      modelUpdated: setup,\n      sideBarUpdated: setup,\n      pinnedHeightChanged: setup,\n      gridReady: setup,\n      overlayExclusiveChanged: setup,\n      rowGroupOpened: setup,\n      scrollVisibilityChanged: setup,\n      gridSizeChanged: setup,\n      filterOpened: setup,\n      filterChanged: setup,\n      cellSelectionChanged: setup\n    });\n  }\n  setupAllTestIds() {\n    const root = _getRootNode(this.beans);\n    const gridId = getGridId(this.beans);\n    const gridWrapper = root.querySelector(`[grid-id=\"${gridId}\"]`);\n    setTestId(gridWrapper, agTestIdFor.grid(gridId));\n    root.querySelectorAll(\".ag-header-group-cell\").forEach(groupCell => {\n      setTestId(groupCell, agTestIdFor.headerGroupCell(groupCell.getAttribute(\"col-id\")));\n    });\n    root.querySelectorAll(\".ag-header-cell\").forEach(cell => {\n      const colId = cell.getAttribute(\"col-id\");\n      setTestId(cell, agTestIdFor.headerCell(colId));\n      setTestId(cell.querySelector(\".ag-header-cell-filter-button\"), agTestIdFor.headerFilterButton(colId));\n      setTestId(cell.querySelector(\".ag-header-cell-menu-button\"), agTestIdFor.headerCellMenuButton(colId));\n      setTestId(cell.querySelector(\".ag-header-cell-resize\"), agTestIdFor.headerResizeHandle(colId));\n      setTestId(cell.querySelector(\".ag-checkbox input[type=checkbox]\"), agTestIdFor.headerCheckbox(colId));\n      setTestId(cell.querySelector(\".ag-floating-filter-button button\"), agTestIdFor.floatingFilterButton(colId));\n      this.setupFilterInstance(cell.querySelector(\".ag-floating-filter-body\"), {\n        source: \"floating-filter\",\n        colId\n      });\n    });\n    const filterMenu = root.querySelector(\".ag-filter-menu\");\n    this.setupFilterInstance(filterMenu, {\n      source: \"column-filter\"\n    });\n    setTestId(root.querySelector(\".ag-advanced-filter input[type=text]\"), agTestIdFor.advancedFilterInput());\n    root.querySelectorAll(\".ag-advanced-filter-buttons button\").forEach(button => {\n      setTestId(button, agTestIdFor.advancedFilterButton(button.textContent));\n    });\n    setTestId(root.querySelector(\"button.ag-advanced-filter-builder-button\"), agTestIdFor.advancedFilterBuilderButton());\n    root.querySelectorAll('.ag-panel[aria-label=\"Advanced Filter\"] .ag-panel-title-bar-button').forEach((button, i) => {\n      setTestId(button, i === 0 ? agTestIdFor.advancedFilterPanelMaximiseButton() : agTestIdFor.advancedFilterPanelCloseButton());\n    });\n    root.querySelectorAll('.ag-panel[aria-lable=\"Advanced Filter\"] .ag-advanced-filter-builder-pill').forEach(pill => {\n      setTestId(pill, agTestIdFor.advancedFilterPill(pill.querySelector(\".ag-picker-field-display\")?.textContent));\n    });\n    setTestId(root.querySelector('.ag-panel[aria-label=\"Advanced Filter\"] .ag-advanced-filter-builder-item-button'), agTestIdFor.advancedFilterBuilderAddItemButton());\n    root.querySelectorAll(\".ag-row\").forEach(row => {\n      const rowId = row.getAttribute(\"row-id\");\n      setTestId(row, agTestIdFor.rowNode(rowId));\n      row.querySelectorAll(\".ag-cell\").forEach(cell => {\n        const colId = cell.getAttribute(\"col-id\");\n        setTestId(cell, agTestIdFor.cell(rowId, colId));\n        setTestId(cell.querySelector(\".ag-selection-checkbox input[type=checkbox]\"), agTestIdFor.checkbox(rowId, colId));\n        setTestId(cell.querySelector(\".ag-drag-handle\"), agTestIdFor.dragHandle(rowId, colId));\n        setTestId(cell.querySelector(\".ag-group-contracted\"), agTestIdFor.groupContracted(rowId, colId));\n        setTestId(cell.querySelector(\".ag-group-expanded\"), agTestIdFor.groupExpanded(rowId, colId));\n      });\n    });\n    root.querySelectorAll(\".ag-menu-list\").forEach(menu => {\n      setTestId(menu, agTestIdFor.menu());\n      menu.querySelectorAll(\".ag-menu-option\").forEach(option => {\n        setTestId(option, agTestIdFor.menuOption(option.querySelector(\".ag-menu-option-text\")?.textContent));\n      });\n    });\n    root.querySelectorAll(\".ag-side-bar\").forEach(sideBar => {\n      setTestId(sideBar, agTestIdFor.sideBar());\n      sideBar.querySelectorAll(\".ag-side-button button\").forEach(button => {\n        setTestId(button, agTestIdFor.sideBarButton(button.querySelector(\".ag-side-button-label\")?.textContent));\n      });\n      sideBar.querySelectorAll(\".ag-column-panel\").forEach(panel => {\n        setTestId(panel, agTestIdFor.columnToolPanel());\n        setTestId(panel.querySelector(\".ag-pivot-mode-select input[type=checkbox]\"), agTestIdFor.pivotModeSelect());\n        setTestId(panel.querySelector(\".ag-column-select-header-checkbox input[type=checkbox]\"), agTestIdFor.columnPanelSelectHeaderCheckbox());\n        setTestId(panel.querySelector(\".ag-column-select-header-filter-wrapper input[type=text]\"), agTestIdFor.columnPanelSelectHeaderFilter());\n        panel.querySelectorAll(\".ag-column-select-list\").forEach(list => {\n          list.querySelectorAll(\".ag-column-select-virtual-list-item\").forEach(item => {\n            const label = item.getAttribute(\"aria-label\");\n            setTestId(item.querySelector(\".ag-column-group-closed-icon\"), agTestIdFor.columnSelectListItemGroupClosedIcon(label));\n            setTestId(item.querySelector(\".ag-column-select-checkbox input[type=checkbox]\"), agTestIdFor.columnSelectListItemCheckbox(label));\n            setTestId(item.querySelector(\".ag-drag-handle\"), agTestIdFor.columnSelectListItemDragHandle(label));\n          });\n        });\n        this.setupColumnDropArea(panel, \"toolbar\");\n      });\n      sideBar.querySelectorAll(\".ag-filter-panel\").forEach(panel => {\n        setTestId(panel, agTestIdFor.filterToolPanel());\n        setTestId(panel.querySelector(\"button.ag-filter-add-button\"), agTestIdFor.filterToolPanelAddFilterButton());\n        panel.querySelectorAll(\".ag-filter-card\").forEach(filterCard => {\n          const colLabel = filterCard.querySelector(\".ag-filter-card-title\")?.textContent;\n          const typeSelector = filterCard.querySelector(\".ag-filter-type-select\");\n          setTestId(typeSelector, agTestIdFor.filterToolPanelFilterTypeSelector(colLabel));\n          filterCard.querySelectorAll(\".ag-filter\").forEach(filter => this.setupFilterInstance(filter, {\n            source: \"filter-toolpanel\",\n            colLabel\n          }));\n        });\n      });\n      sideBar.querySelectorAll(\".ag-filter-toolpanel\").forEach(panel => {\n        setTestId(panel.querySelector(\".ag-filter-toolpanel-search-input input[type=text]\"), agTestIdFor.filterToolPanelSearchInput());\n        panel.querySelectorAll(\".ag-filter-toolpanel-group\").forEach(group => {\n          const title = group.querySelector(\".ag-filter-toolpanel-group-title\")?.textContent;\n          setTestId(group, agTestIdFor.filterToolPanelGroup(title));\n          setTestId(group.querySelector(\".ag-filter-toolpanel-group-title-bar-icon .ag-icon-tree-closed\"), agTestIdFor.filterToolPanelGroupCollapsedIcon(title));\n          const filterRoot = group.querySelector(\".ag-filter-toolpanel-instance-filter\");\n          if (filterRoot) {\n            this.setupFilterInstance(filterRoot, {\n              source: \"filter-toolpanel\",\n              colLabel: title\n            });\n          }\n        });\n      });\n    });\n    setTestId(root.querySelector(\".ag-status-bar .ag-status-panel-total-and-filtered-row-count\"), agTestIdFor.statusBarTotalAndFilteredRowCount());\n    setTestId(root.querySelector(\".ag-status-bar .ag-status-panel-total-row-count\"), agTestIdFor.statusBarTotalRowCount());\n    setTestId(root.querySelector(\".ag-status-bar .ag-status-panel-filtered-row-count\"), agTestIdFor.statusBarFilteredRowCount());\n    setTestId(root.querySelector(\".ag-status-bar .ag-status-panel-selected-row-count\"), agTestIdFor.statusBarSelectedRowCount());\n    setTestId(root.querySelector(\".ag-status-bar .ag-status-panel-filtered-row-count\"), agTestIdFor.statusBarAggregations());\n    root.querySelectorAll(\".ag-paging-panel\").forEach(pagingPanel => {\n      setTestId(pagingPanel.querySelector(\".ag-paging-page-size .ag-picker-field-display\"), agTestIdFor.paginationPanelSizePickerDisplay(pagingPanel.querySelector(\".ag-paging-page-size .ag-picker-field-display\")?.textContent));\n      pagingPanel.querySelectorAll(\".ag-paging-row-summary-panel-number\").forEach(panelNumber => {\n        const dataRef = panelNumber.getAttribute(\"data-ref\");\n        switch (dataRef) {\n          case \"lbFirstRowOnPage\":\n            setTestId(panelNumber, agTestIdFor.paginationPanelFirstRowOnPage(panelNumber.textContent));\n            break;\n          case \"lbLastRowOnPage\":\n            setTestId(panelNumber, agTestIdFor.paginationPanelLastRowOnPage(panelNumber.textContent));\n            break;\n          case \"lbRecordCount\":\n            setTestId(panelNumber, agTestIdFor.paginationPanelRecordCount(panelNumber.textContent));\n            break;\n        }\n      });\n      pagingPanel.querySelectorAll(\".ag-paging-page-summary-panel .ag-button\").forEach(pagingButton => {\n        setTestId(pagingButton, agTestIdFor.paginationSummaryPanelButton(pagingButton.getAttribute(\"aria-label\")?.toLowerCase()));\n      });\n      pagingPanel.querySelectorAll(\".ag-paging-page-summary-panel .ag-paging-number\").forEach(pagingNumber => {\n        const dataRef = pagingNumber.getAttribute(\"data-ref\");\n        switch (dataRef) {\n          case \"lbCurrent\":\n            setTestId(pagingNumber, agTestIdFor.paginationSummaryPanelCurrentPage(pagingNumber.textContent));\n            break;\n          case \"lbTotal\":\n            setTestId(pagingNumber, agTestIdFor.paginationSummaryPanelTotalPage(pagingNumber.textContent));\n            break;\n        }\n      });\n    });\n    setTestId(root.querySelector(\".ag-fill-handle\"), agTestIdFor.fillHandle());\n    root.querySelectorAll('.ag-panel[aria-label=\"Choose Columns\"]').forEach(panel => {\n      setTestId(panel.querySelector(\".ag-panel-title-bar-button-icon\"), agTestIdFor.columnChooserCloseButton());\n      setTestId(panel.querySelector('.ag-column-select-header-checkbox input[type=\"checkbox\"]'), agTestIdFor.columnChooserSearchBarCheckbox());\n      setTestId(panel.querySelector('.ag-column-select-header-filter-wrapper input[type=\"text\"]'), agTestIdFor.columnChooserSearchBarFilter());\n      panel.querySelectorAll(\".ag-column-select-list\").forEach(list => {\n        list.querySelectorAll(\".ag-column-select-virtual-list-item\").forEach(item => {\n          const label = item.getAttribute(\"aria-label\");\n          setTestId(item.querySelector(\".ag-column-group-closed-icon\"), agTestIdFor.columnChooserListItemGroupClosedIcon(label));\n          setTestId(item.querySelector(\".ag-column-select-checkbox input[type=checkbox]\"), agTestIdFor.columnChooserListItemCheckbox(label));\n          setTestId(item.querySelector(\".ag-drag-handle\"), agTestIdFor.columnChooserListItemDragHandle(label));\n        });\n      });\n    });\n    setTestId(root.querySelector(\".ag-overlay-wrapper\"), agTestIdFor.overlay());\n    this.setupColumnDropArea(root, \"panel\");\n  }\n  setupFilterInstance(filterRoot, spec) {\n    if (!filterRoot) {\n      return;\n    }\n    filterRoot.querySelectorAll(\".ag-filter-select .ag-picker-field-display\").forEach(fieldDisplay => {\n      setTestId(fieldDisplay, agTestIdFor.filterInstancePickerDisplay(spec));\n    });\n    const numberInput = filterRoot.querySelector('.ag-filter-body input[type=\"number\"]');\n    setTestId(numberInput, agTestIdFor.numberFilterInstanceInput(spec));\n    const textInput = filterRoot.querySelector('.ag-filter-body input[type=\"text\"]');\n    setTestId(textInput, agTestIdFor.textFilterInstanceInput(spec));\n    const dateInput = filterRoot.querySelector('.ag-filter-body input[type=\"date\"]');\n    setTestId(dateInput, agTestIdFor.dateFilterInstanceInput(spec));\n    const setMiniFilterInput = filterRoot.querySelector('.ag-mini-filter input[type=\"text\"]');\n    setTestId(setMiniFilterInput, agTestIdFor.setFilterInstanceMiniFilterInput(spec));\n    filterRoot.querySelectorAll(\".ag-set-filter-list .ag-set-filter-item\").forEach(item => {\n      const label = item.querySelector(\".ag-checkbox-label\")?.textContent;\n      const checkbox = item.querySelector('input[type=\"checkbox\"]');\n      setTestId(checkbox, agTestIdFor.setFilterInstanceItem(spec, label));\n    });\n    filterRoot.querySelectorAll(\".ag-filter-apply-panel button\").forEach(button => {\n      setTestId(button, agTestIdFor.setFilterApplyPanelButton(spec, button.textContent));\n    });\n    filterRoot.querySelectorAll(\".ag-filter-condition .ag-radio-button\").forEach(radioButton => {\n      const label = radioButton.querySelector(\".ag-radio-button-label\")?.textContent;\n      setTestId(radioButton.querySelector(\"input[type=radio]\"), agTestIdFor.filterConditionRadioButton(spec, label));\n    });\n  }\n  setupColumnDropArea(root, source) {\n    root.querySelectorAll(\".ag-column-drop\").forEach(columnDrop => {\n      const dropAreaName = columnDrop.querySelector(\".ag-column-drop-list\")?.getAttribute(\"aria-label\");\n      setTestId(columnDrop.querySelector(\".ag-column-drop-empty-message\"), agTestIdFor.columnDropArea(source, dropAreaName));\n      columnDrop.querySelectorAll(\".ag-column-drop-cell\").forEach(columnDropCell => {\n        const label = columnDropCell.querySelector(\".ag-column-drop-cell-text\")?.textContent;\n        setTestId(columnDropCell.querySelector(\".ag-drag-handle\"), agTestIdFor.columnDropCellDragHandle(source, dropAreaName, label));\n        setTestId(columnDropCell.querySelector(\".ag-column-drop-cell-button .ag-icon-cancel\"), agTestIdFor.columnDropCellCancelButton(source, dropAreaName, label));\n      });\n    });\n  }\n};\n\n// packages/ag-grid-community/src/testing/testingModule.ts\nvar TestingModule = {\n  moduleName: \"Testing\",\n  version: VERSION,\n  beans: [TestIdService]\n};\nfunction setupAgTestIds({\n  testIdAttribute\n} = {}) {\n  if (testIdAttribute) {\n    setTestIdAttribute(testIdAttribute);\n  }\n  ModuleRegistry.registerModules([TestingModule]);\n}\nexport { ALWAYS_SYNC_GLOBAL_EVENTS, AbstractClientSideNodeManager, AgAbstractCellEditor, AgAbstractInputField, AgAbstractLabel, AgCheckbox, AgCheckboxSelector, AgColumn, AgColumnGroup, AgFilterButtonSelector, AgInputDateField, AgInputNumberField, AgInputNumberFieldSelector, AgInputTextArea, AgInputTextField, AgInputTextFieldSelector, AgPickerField, AgPromise, AgProvidedColumnGroup, AgRadioButton, AgSelect, AgSelectSelector, AgToggleButton, AgToggleButtonSelector, AlignedGridsModule, AllCommunityModule, AutoScrollService, BaseColsService, BaseComponentWrapper, BaseCreator, BaseGridSerializingSession, BaseSelectionService, BeanStub, CellApiModule, CellRangeType, CellSpanModule, CellStyleModule, ChangedPath, CheckboxEditorModule, ClientSideRowModelApiModule, ClientSideRowModelModule, ColumnApiModule, ColumnAutoSizeModule, ColumnHoverModule, ColumnKeyCreator, Component, CssClassManager, CsvExportModule, CustomEditorModule, CustomFilterModule, DateEditorModule, DateFilterModule, Direction, DragAndDropModule, DragSourceType, EventApiModule, ExternalFilterModule, FakeHScrollComp, FakeVScrollComp, FilterButtonComp, FilterComp, FilterWrapperComp, GROUP_AUTO_COLUMN_ID, GridBodyCtrl, GridCoreCreator, GridCtrl, GridHeaderCtrl, GridStateModule, GroupInstanceIdCreator, HeaderRowContainerCtrl, HighlightChangesModule, InfiniteRowModelModule, KeyCode, LargeTextEditorModule, LocalEventService, LocaleModule, LocaleService, ManagedFocusFeature, ModuleRegistry, NumberEditorModule, NumberFilterModule, PaginationModule, PinnedRowModel, PinnedRowModule, PopupComponent, PositionableFeature, ProvidedFilter, QuickFilterModule, ROW_NUMBERS_COLUMN_ID, RefPlaceholder, RenderApiModule, RowApiModule, RowAutoHeightModule, RowContainerCtrl, RowDragModule, RowNode, RowSelectionModule, RowStyleModule, SELECTION_COLUMN_ID, ScrollApiModule, SelectEditorModule, ServerSideTransactionResultStatus, TabGuardClassNames, TabGuardComp, TabGuardCtrl, TabGuardFeature, TextEditorModule, TextFilterModule, TooltipFeature, TooltipModule, TouchListener, UndoRedoEditModule, ValidationModule, ValueCacheModule, VanillaFrameworkOverrides, _BOOLEAN_MIXED_GRID_OPTIONS, ColumnFilterModule as _ColumnFilterModule, ColumnGroupModule as _ColumnGroupModule, ColumnMoveModule as _ColumnMoveModule, CsrmSsrmSharedApiModule as _CsrmSsrmSharedApiModule, DragModule as _DragModule, EditCoreModule as _EditCoreModule, _EmptyArray, EmptyBean as _EmptyBean, FOCUS_MANAGED_CLASS as _FOCUS_MANAGED_CLASS, FilterCoreModule as _FilterCoreModule, FilterValueModule as _FilterValueModule, _GET_ALL_EVENTS, _GET_ALL_GRID_OPTIONS, HeaderComp as _HeaderComp, HorizontalResizeModule as _HorizontalResizeModule, KeyboardNavigationModule as _KeyboardNavigationModule, _PUBLIC_EVENTS, _PUBLIC_EVENT_HANDLERS_MAP, PopupModule as _PopupModule, ROW_ID_PREFIX_BOTTOM_PINNED as _ROW_ID_PREFIX_BOTTOM_PINNED, ROW_ID_PREFIX_ROW_GROUP as _ROW_ID_PREFIX_ROW_GROUP, ROW_ID_PREFIX_TOP_PINNED as _ROW_ID_PREFIX_TOP_PINNED, SharedDragAndDropModule as _SharedDragAndDropModule, SharedExportModule as _SharedExportModule, SharedMenuModule as _SharedMenuModule, SharedRowSelectionModule as _SharedRowSelectionModule, SortModule as _SortModule, SsrmInfiniteSharedApiModule as _SsrmInfiniteSharedApiModule, _addColumnDefaultAndTypes, _addFocusableContainerListener, _addGridCommonParams, _anchorElementToMouseMoveEvent, _applyColumnState, _areCellsEqual, _areColIdsEqual, _areEqual, _asThemeImpl, _batchCall, _canSkipShowingRowGroup, _clearElement, _columnsMatch, _combineAttributesAndGridOptions, _convertColumnEventSourceType, _createCellId, _createColumnTree, _createColumnTreeWithIds, _createElement, _createGlobalRowEvent, _createIcon, _createIconNoSpan, _createRowNodeSibling, _debounce, _defaultComparator, _destroyColumnTree, _doOnce, _downloadFile, _errMsg, _error, _escapeString, _exists, _findFocusableElements, _findNextFocusableElement, _findTabbableParent, _flatten, _focusGridInnerElement, _focusInto, _focusNextGridCoreContainer, _formatNumberCommas, _fuzzySuggestions, _getAbsoluteHeight, _getAbsoluteWidth, _getActiveDomElement, _getAriaPosInSet, _getCallbackForEvent, _getCellByPosition, _getCellCtrlForEventTarget, _getCellPositionForEvent, _getCellRendererDetails, _getCheckboxLocation, _getCheckboxes, _getClientSideRowModel, _getColumnState, _getColumnsFromTree, _getDateParts, _getDefaultFloatingFilterType, _getDefaultSimpleFilter, _getDocument, _getEditorRendererDetails, _getFillHandle, _getFilterDetails, _getFilterModel, _getFilterParamsForDataType, _getFloatingFilterCompDetails, getFloatingFiltersHeight as _getFloatingFiltersHeight, _getGlobalGridOption, _getGrandTotalRow, _getGridOption, _getGridRegisteredModules, _getGroupAggFiltering, _getGroupSelection, _getGroupSelectsDescendants, _getGroupTotalRowCallback, _getGroupingApproach, _getHeaderCheckbox, _getHeaderClassesFromColDef, getHeaderRowCount as _getHeaderRowCount, _getInnerCellRendererDetails, _getInnerHeight, _getInnerWidth, _getIsRowSelectable, _getLastRow, _getLocaleTextFunc, _getMaxConcurrentDatasourceRequests, _getNormalisedMousePosition, _getPageBody, _getRootNode, _getRowAbove, _getRowBelow, _getRowContainerClass, _getRowContainerOptions, _getRowHeightAsNumber, _getRowHeightForNode, _getRowIdCallback, _getRowNode, _getRowSelectionMode, _getRowSpanContainerClass, _getRowViewportClass, _getServerSideRowModel, _getShouldDisplayTooltip, _getSuppressMultiRanges, _getToolPanelClassesFromColDef, _interpretAsRightClick, _isAnimateRows, _isCellSelectionEnabled, _isClientSideRowModel, _isColumnMenuAnchoringEnabled, _isColumnsSortingCoupledToGroup, _isDomLayout, _isElementInEventPath, _isElementOverflowingCallback, _isEventFromPrintableCharacter, _isFullWidthGroupRow, _isGetRowHeightFunction, _isGroupMultiAutoColumn, _isGroupRowsSticky, _isGroupUseEntireRow, _isIOSUserAgent, _isKeyboardMode, _isLegacyMenuEnabled, _isMultiRowSelection, _isNodeOrElement, _isNothingFocused, _isPromise, _isRowBefore, _isRowSelection, _isSameRow, _isServerSideRowModel, _isSetFilterByDefault, _isShowTooltipWhenTruncated, _isStopPropagationForAgGrid, _isUseApplyButton, _isUsingNewCellSelectionAPI, _isUsingNewRowSelectionAPI, _isVisible, _jsonEquals, _last, _loadTemplate, _makeNull, _mergeDeep, _missing, _observeResize, _parseDateTimeFromString, _preInitErrMsg, _preserveRangesWhile, _processOnChange, _radioCssClass, _refreshFilterUi, _refreshHandlerAndUi, _registerModule, _removeAriaExpanded, _removeAriaSort, _removeFromArray, _removeFromParent, _requestAnimationFrame, _resetColumnState, _selectAllCells, _serialiseDate, _setAriaActiveDescendant, _setAriaChecked, _setAriaColCount, _setAriaColIndex, _setAriaColSpan, _setAriaControls, _setAriaControlsAndLabel, _setAriaDescribedBy, _setAriaDisabled, _setAriaExpanded, _setAriaHasPopup, _setAriaHidden, _setAriaInvalid, _setAriaLabel, _setAriaLabelledBy, _setAriaLevel, _setAriaPosInSet, _setAriaRole, _setAriaRowCount, _setAriaRowIndex, _setAriaSelected, _setAriaSetSize, _setAriaSort, _setColMenuVisible, _setDisabled, _setDisplayed, _setFixedWidth, _setUmd, _setVisible, _shouldUpdateColVisibilityAfterGroup, _stopPropagationForAgGrid, _toString, _toStringOrNull, _translate, translateForFilter as _translateForFilter, _unwrapUserComp, _updateColsMap, _updateColumnState, _updateFilterModel, _waitUntil, _warn, _warnOnce, agTestIdFor, buttonStyleAlpine, buttonStyleBalham, buttonStyleBase, buttonStyleQuartz, checkboxStyleDefault, colorSchemeDark, colorSchemeDarkBlue, colorSchemeDarkWarm, colorSchemeLight, colorSchemeLightCold, colorSchemeLightWarm, colorSchemeVariable, columnDropStyleBordered, columnDropStylePlain, convertColumnGroupState, convertColumnState, createGrid, createPart, createTheme, getGridApi, getGridElement, iconOverrides, iconSetAlpine, iconSetMaterial, iconSetQuartz, iconSetQuartzBold, iconSetQuartzLight, iconSetQuartzRegular, inputStyleBase, inputStyleBordered, inputStyleUnderlined, isColumn, isColumnGroup, isColumnGroupAutoCol, isColumnSelectionCol, isCombinedFilterModel, isProvidedColumnGroup, isRowNumberCol, isSpecialCol, provideGlobalGridOptions, setupAgTestIds, styleMaterial, tabStyleAlpine, tabStyleBase, tabStyleMaterial, tabStyleQuartz, tabStyleRolodex, themeAlpine, themeBalham, themeMaterial, themeQuartz, wrapAgTestIdFor };","import * as i0 from '@angular/core';\nimport { inject, ViewContainerRef, Component, Injectable, NgZone, EventEmitter, booleanAttribute, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { _removeFromParent, BaseComponentWrapper, VanillaFrameworkOverrides, _combineAttributesAndGridOptions, createGrid, _processOnChange, _BOOLEAN_MIXED_GRID_OPTIONS } from 'ag-grid-community';\n\n// To speed up the removal of custom components we create a number of shards to contain them.\n// Removing a single component calls a function within Angular called removeFromArray.\n// This is a lot faster if the array is smaller.\nlet AgComponentContainer = /*#__PURE__*/(() => {\n  class AgComponentContainer {\n    constructor() {\n      this.vcr = inject(ViewContainerRef);\n    }\n    static {\n      this.ɵfac = function AgComponentContainer_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AgComponentContainer)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: AgComponentContainer,\n        selectors: [[\"ag-component-container\"]],\n        standalone: false,\n        decls: 0,\n        vars: 0,\n        template: function AgComponentContainer_Template(rf, ctx) {},\n        encapsulation: 2\n      });\n    }\n  }\n  return AgComponentContainer;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NUM_SHARDS = 16;\nlet shardIdx = 0;\nfunction createComponentContainers(vcr) {\n  const containerMap = new Map();\n  for (let i = 0; i < NUM_SHARDS; i++) {\n    const container = vcr.createComponent(AgComponentContainer);\n    containerMap.set(i, container);\n    _removeFromParent(container.location.nativeElement);\n  }\n  return containerMap;\n}\n/**\n * These methods are called on a hot path for every row so we do not want to enter / exit NgZone each time.\n * Also these methods should not be used to update the UI, so we don't need to run them inside Angular.\n */\nconst runOutsideMethods = new Set(['doesFilterPass', 'isFilterActive']);\nlet AngularFrameworkComponentWrapper = /*#__PURE__*/(() => {\n  class AngularFrameworkComponentWrapper extends BaseComponentWrapper {\n    setViewContainerRef(viewContainerRef, angularFrameworkOverrides) {\n      this.viewContainerRef = viewContainerRef;\n      this.angularFrameworkOverrides = angularFrameworkOverrides;\n    }\n    createWrapper(OriginalConstructor) {\n      const angularFrameworkOverrides = this.angularFrameworkOverrides;\n      const that = this;\n      that.compShards ??= createComponentContainers(this.viewContainerRef);\n      class DynamicAgNg2Component extends BaseGuiComponent {\n        init(params) {\n          angularFrameworkOverrides.runInsideAngular(() => {\n            super.init(params);\n            this._componentRef.changeDetectorRef.detectChanges();\n          });\n        }\n        createComponent() {\n          return that.createComponent(OriginalConstructor);\n        }\n        hasMethod(name) {\n          return wrapper.getFrameworkComponentInstance()[name] != null;\n        }\n        callMethod(name, args) {\n          const componentRef = this.getFrameworkComponentInstance();\n          const methodCall = componentRef[name];\n          if (runOutsideMethods.has(name)) {\n            return methodCall.apply(componentRef, args);\n          }\n          return angularFrameworkOverrides.runInsideAngular(() => methodCall.apply(componentRef, args));\n        }\n        addMethod(name, callback) {\n          wrapper[name] = callback;\n        }\n      }\n      const wrapper = new DynamicAgNg2Component();\n      return wrapper;\n    }\n    createComponent(componentType) {\n      shardIdx = (shardIdx + 1) % NUM_SHARDS;\n      const container = this.compShards.get(shardIdx);\n      return container.instance.vcr.createComponent(componentType);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵAngularFrameworkComponentWrapper_BaseFactory;\n        return function AngularFrameworkComponentWrapper_Factory(__ngFactoryType__) {\n          return (ɵAngularFrameworkComponentWrapper_BaseFactory || (ɵAngularFrameworkComponentWrapper_BaseFactory = i0.ɵɵgetInheritedFactory(AngularFrameworkComponentWrapper)))(__ngFactoryType__ || AngularFrameworkComponentWrapper);\n        };\n      })();\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AngularFrameworkComponentWrapper,\n        factory: AngularFrameworkComponentWrapper.ɵfac\n      });\n    }\n  }\n  return AngularFrameworkComponentWrapper;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass BaseGuiComponent {\n  init(params) {\n    this._params = params;\n    this._componentRef = this.createComponent();\n    this._agAwareComponent = this._componentRef.instance;\n    this._frameworkComponentInstance = this._componentRef.instance;\n    this._eGui = this._componentRef.location.nativeElement;\n    // Angular appends the component to the DOM, so remove it\n    _removeFromParent(this._eGui);\n    this._agAwareComponent.agInit(this._params);\n  }\n  getGui() {\n    return this._eGui;\n  }\n  /** `getGui()` returns the `ng-component` element. This returns the actual root element. */\n  getRootElement() {\n    const firstChild = this._eGui.firstChild;\n    return firstChild;\n  }\n  destroy() {\n    if (this._frameworkComponentInstance && typeof this._frameworkComponentInstance.destroy === 'function') {\n      this._frameworkComponentInstance.destroy();\n    }\n    this._componentRef?.destroy();\n  }\n  getFrameworkComponentInstance() {\n    return this._frameworkComponentInstance;\n  }\n}\nclass AngularFrameworkEventListenerService {\n  constructor(frameworkOverrides) {\n    this.frameworkOverrides = frameworkOverrides;\n    // Map from user listener to wrapped listener so we can remove listener provided by user\n    this.wrappedListeners = new Map();\n    this.wrappedGlobalListeners = new Map();\n  }\n  wrap(eventType, userListener) {\n    const {\n      frameworkOverrides,\n      wrappedListeners\n    } = this;\n    let listener = userListener;\n    if (frameworkOverrides.shouldWrapOutgoing) {\n      listener = event => {\n        frameworkOverrides.wrapOutgoing(() => userListener(event));\n      };\n      let eventListeners = wrappedListeners.get(eventType);\n      if (!eventListeners) {\n        eventListeners = new Map();\n        wrappedListeners.set(eventType, eventListeners);\n      }\n      eventListeners.set(userListener, listener);\n    }\n    return listener;\n  }\n  wrapGlobal(userListener) {\n    const {\n      frameworkOverrides,\n      wrappedGlobalListeners\n    } = this;\n    let listener = userListener;\n    if (frameworkOverrides.shouldWrapOutgoing) {\n      listener = (eventType, event) => {\n        frameworkOverrides.wrapOutgoing(() => userListener(eventType, event));\n      };\n      wrappedGlobalListeners.set(userListener, listener);\n    }\n    return listener;\n  }\n  unwrap(eventType, userListener) {\n    const {\n      wrappedListeners\n    } = this;\n    const eventListeners = wrappedListeners.get(eventType);\n    if (eventListeners) {\n      const wrapped = eventListeners.get(userListener);\n      if (wrapped) {\n        eventListeners.delete(userListener);\n        if (eventListeners.size === 0) {\n          wrappedListeners.delete(eventType);\n        }\n        return wrapped;\n      }\n    }\n    return userListener;\n  }\n  unwrapGlobal(userListener) {\n    const {\n      wrappedGlobalListeners\n    } = this;\n    const wrapped = wrappedGlobalListeners.get(userListener);\n    if (wrapped) {\n      wrappedGlobalListeners.delete(userListener);\n      return wrapped;\n    }\n    return userListener;\n  }\n}\nlet AngularFrameworkOverrides = /*#__PURE__*/(() => {\n  class AngularFrameworkOverrides extends VanillaFrameworkOverrides {\n    constructor(_ngZone) {\n      super('angular');\n      this._ngZone = _ngZone;\n      this.batchFrameworkComps = true;\n      // Flag used to control Zone behaviour when running tests as many test features rely on Zone.\n      this.isRunningWithinTestZone = false;\n      // Make all events run outside Angular as they often trigger the setup of event listeners\n      // By having the event listeners outside Angular we can avoid triggering change detection\n      // This also means that if a user calls an AG Grid API method from within their component\n      // the internal side effects will not trigger change detection. Without this the events would\n      // run inside Angular and trigger change detection as the source of the event was within the angular zone.\n      this.wrapIncoming = (callback, source) => this.runOutside(callback, source);\n      /**\n       * Make sure that any code that is executed outside of AG Grid is running within the Angular zone.\n       * This means users can update templates and use binding without having to do anything extra.\n       */\n      this.wrapOutgoing = callback => this.runInsideAngular(callback);\n      this.isRunningWithinTestZone = window?.AG_GRID_UNDER_TEST ?? !!window?.Zone?.AsyncTestZoneSpec;\n      if (!this._ngZone) {\n        this.runOutside = callback => callback();\n      } else if (this.isRunningWithinTestZone) {\n        this.runOutside = (callback, source) => {\n          if (source === 'resize-observer' || source === 'popupPositioning') {\n            // ensure resize observer callbacks are run outside of Angular even under test due to Jest not supporting ResizeObserver\n            // which means it just loops continuously with a setTimeout with no way to flush the queue or have fixture.whenStable() resolve.\n            return this._ngZone.runOutsideAngular(callback);\n          }\n          // When under test run inside Angular so that tests can use fixture.whenStable() to wait for async operations to complete.\n          return callback();\n        };\n      } else {\n        this.runOutside = callback => this._ngZone.runOutsideAngular(callback);\n      }\n    }\n    /**\n     * The shouldWrapOutgoing property is used to determine if events should be run outside of Angular or not.\n     * If an event handler is registered outside of Angular then we should not wrap the event handler\n     * with runInsideAngular() as the user may not have wanted this.\n     * This is also used to not wrap internal event listeners that are registered with RowNodes and Columns.\n     */\n    get shouldWrapOutgoing() {\n      return this._ngZone && NgZone.isInAngularZone();\n    }\n    createLocalEventListenerWrapper(existingFrameworkEventListenerService, localEventService) {\n      if (this.shouldWrapOutgoing) {\n        return existingFrameworkEventListenerService ?? (() => {\n          localEventService.setFrameworkOverrides(this);\n          return new AngularFrameworkEventListenerService(this);\n        })();\n      }\n      return undefined;\n    }\n    createGlobalEventListenerWrapper() {\n      return new AngularFrameworkEventListenerService(this);\n    }\n    isFrameworkComponent(comp) {\n      if (!comp) {\n        return false;\n      }\n      const prototype = comp.prototype;\n      return prototype && 'agInit' in prototype;\n    }\n    runInsideAngular(callback) {\n      if (!this._ngZone || NgZone.isInAngularZone()) {\n        return callback();\n      }\n      // Check for _ngZone existence as it is not present when Zoneless\n      return this._ngZone.run(callback);\n    }\n    runOutsideAngular(callback, source) {\n      return this.runOutside(callback, source);\n    }\n    static {\n      this.ɵfac = function AngularFrameworkOverrides_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AngularFrameworkOverrides)(i0.ɵɵinject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AngularFrameworkOverrides,\n        factory: AngularFrameworkOverrides.ɵfac\n      });\n    }\n  }\n  return AngularFrameworkOverrides;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// False positive lint error, ElementRef and co can't be type imports\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nlet AgGridAngular = /*#__PURE__*/(() => {\n  class AgGridAngular {\n    constructor(elementDef, _viewContainerRef, _angularFrameworkOverrides, _frameworkCompWrapper) {\n      this._viewContainerRef = _viewContainerRef;\n      this._angularFrameworkOverrides = _angularFrameworkOverrides;\n      this._frameworkCompWrapper = _frameworkCompWrapper;\n      this._initialised = false;\n      this._destroyed = false;\n      // in order to ensure firing of gridReady is deterministic\n      this._holdEvents = true;\n      this._fullyReady = new Promise(resolve => {\n        this._resolveFullyReady = resolve;\n      });\n      // @START@\n      /** Specifies the status bar components to use in the status bar.\n       * @agModule `StatusBarModule`\n       */\n      this.statusBar = undefined;\n      /** Specifies the side bar components.\n       * @agModule `SideBarModule`\n       */\n      this.sideBar = undefined;\n      /** Set to `true` to not show the context menu. Use if you don't want to use the default 'right click' context menu.\n       * @default false\n       */\n      this.suppressContextMenu = undefined;\n      /** When using `suppressContextMenu`, you can use the `onCellContextMenu` function to provide your own code to handle cell `contextmenu` events.\n       * This flag is useful to prevent the browser from showing its default context menu.\n       * @default false\n       */\n      this.preventDefaultOnContextMenu = undefined;\n      /** Allows context menu to show, even when `Ctrl` key is held down.\n       * @default false\n       * @agModule `ContextMenuModule`\n       */\n      this.allowContextMenuWithControlKey = undefined;\n      /** Changes the display type of the column menu.\n       * `'new'` just displays the main list of menu items. `'legacy'` displays a tabbed menu.\n       * @default 'new'\n       * @initial\n       */\n      this.columnMenu = undefined;\n      /** Only recommended for use if `columnMenu = 'legacy'`.\n       * When `true`, the column menu button will always be shown.\n       * When `false`, the column menu button will only show when the mouse is over the column header.\n       * When using `columnMenu = 'legacy'`, this will default to `false` instead of `true`.\n       * @default true\n       */\n      this.suppressMenuHide = undefined;\n      /** Set to `true` to use the browser's default tooltip instead of using the grid's Tooltip Component.\n       * @default false\n       * @initial\n       * @agModule `TooltipModule`\n       */\n      this.enableBrowserTooltips = undefined;\n      /** The trigger that will cause tooltips to show and hide.\n       *  - `hover` - The tooltip will show/hide when a cell/header is hovered.\n       *  - `focus` - The tooltip will show/hide when a cell/header is focused.\n       * @default 'hover'\n       * @initial\n       * @agModule `TooltipModule`\n       */\n      this.tooltipTrigger = undefined;\n      /** The delay in milliseconds that it takes for tooltips to show up once an element is hovered over.\n       *     **Note:** This property does not work if `enableBrowserTooltips` is `true`.\n       * @default 2000\n       * @agModule `TooltipModule`\n       */\n      this.tooltipShowDelay = undefined;\n      /** The delay in milliseconds that it takes for tooltips to hide once they have been displayed.\n       *     **Note:** This property does not work if `enableBrowserTooltips` is `true` and `tooltipHideTriggers` includes `timeout`.\n       * @default 10000\n       * @agModule `TooltipModule`\n       */\n      this.tooltipHideDelay = undefined;\n      /** Set to `true` to have tooltips follow the cursor once they are displayed.\n       * @default false\n       * @initial\n       * @agModule `TooltipModule`\n       */\n      this.tooltipMouseTrack = undefined;\n      /** This defines when tooltip will show up for Cells, Headers and SetFilter Items.\n       *  - `standard` - The tooltip always shows up when the items configured with Tooltips are hovered.\n       * - `whenTruncated` - The tooltip will only be displayed when the items hovered have truncated (showing ellipsis) values. This property does not work when `enableBrowserTooltips={true}`.\n       * @default `standard`\n       * @agModule `TooltipModule`\n       */\n      this.tooltipShowMode = undefined;\n      /** Set to `true` to enable tooltip interaction. When this option is enabled, the tooltip will not hide while the\n       * tooltip itself it being hovered or has focus.\n       * @default false\n       * @initial\n       * @agModule `TooltipModule`\n       */\n      this.tooltipInteraction = undefined;\n      /** DOM element to use as the popup parent for grid popups (context menu, column menu etc).\n       */\n      this.popupParent = undefined;\n      /** Set to `true` to also include headers when copying to clipboard using `Ctrl + C` clipboard.\n       * @default false\n       * @agModule `ClipboardModule`\n       */\n      this.copyHeadersToClipboard = undefined;\n      /** Set to `true` to also include group headers when copying to clipboard using `Ctrl + C` clipboard.\n       * @default false\n       * @agModule `ClipboardModule`\n       */\n      this.copyGroupHeadersToClipboard = undefined;\n      /** Specify the delimiter to use when copying to clipboard.\n       * @default '\\t'\n       * @agModule `ClipboardModule`\n       */\n      this.clipboardDelimiter = undefined;\n      /** Set to `true` to copy the cell range or focused cell to the clipboard and never the selected rows.\n       * @default false\n       * @deprecated v32.2 Use `rowSelection.copySelectedRows` instead.\n       */\n      this.suppressCopyRowsToClipboard = undefined;\n      /** Set to `true` to copy rows instead of ranges when a range with only a single cell is selected.\n       * @default false\n       * @deprecated v32.2 Use `rowSelection.copySelectedRows` instead.\n       */\n      this.suppressCopySingleCellRanges = undefined;\n      /** Set to `true` to work around a bug with Excel (Windows) that adds an extra empty line at the end of ranges copied to the clipboard.\n       * @default false\n       * @agModule `ClipboardModule`\n       */\n      this.suppressLastEmptyLineOnPaste = undefined;\n      /** Set to `true` to turn off paste operations within the grid.\n       * @default false\n       * @agModule `ClipboardModule`\n       */\n      this.suppressClipboardPaste = undefined;\n      /** Set to `true` to stop the grid trying to use the Clipboard API, if it is blocked, and immediately fallback to the workaround.\n       * @default false\n       * @agModule `ClipboardModule`\n       */\n      this.suppressClipboardApi = undefined;\n      /** Set to `true` to block     **cut** operations within the grid.\n       * @default false\n       * @agModule `ClipboardModule`\n       */\n      this.suppressCutToClipboard = undefined;\n      /** Array of Column / Column Group definitions.\n       */\n      this.columnDefs = undefined;\n      /** A default column definition. Items defined in the actual column definitions get precedence.\n       */\n      this.defaultColDef = undefined;\n      /** A default column group definition. All column group definitions will use these properties. Items defined in the actual column group definition get precedence.\n       * @initial\n       */\n      this.defaultColGroupDef = undefined;\n      /** An object map of custom column types which contain groups of properties that column definitions can reuse by referencing in their `type` property.\n       */\n      this.columnTypes = undefined;\n      /** An object map of cell data types to their definitions.\n       * Cell data types can either override/update the pre-defined data types\n       * (`'text'`, `'number'`, `'boolean'`, `'date'`, `'dateString'`, `'dateTime'`, `'dateTimeString'` or `'object'`),\n       * or can be custom data types.\n       */\n      this.dataTypeDefinitions = undefined;\n      /** Keeps the order of Columns maintained after new Column Definitions are updated.\n       *\n       * @default false\n       */\n      this.maintainColumnOrder = undefined;\n      /** Resets pivot column order when impacted by filters, data or configuration changes\n       *\n       * @default false\n       * @agModule `PivotModule`\n       */\n      this.enableStrictPivotColumnOrder = undefined;\n      /** If `true`, then dots in field names (e.g. `'address.firstLine'`) are not treated as deep references. Allows you to use dots in your field name if you prefer.\n       * @default false\n       */\n      this.suppressFieldDotNotation = undefined;\n      /** The height in pixels for the row containing the column label header. If not specified, it uses the theme value of `header-height`.\n       */\n      this.headerHeight = undefined;\n      /** The height in pixels for the rows containing header column groups. If not specified, it uses `headerHeight`.\n       */\n      this.groupHeaderHeight = undefined;\n      /** The height in pixels for the row containing the floating filters. If not specified, it uses the theme value of `header-height`.\n       */\n      this.floatingFiltersHeight = undefined;\n      /** The height in pixels for the row containing the columns when in pivot mode. If not specified, it uses `headerHeight`.\n       */\n      this.pivotHeaderHeight = undefined;\n      /** The height in pixels for the row containing header column groups when in pivot mode. If not specified, it uses `groupHeaderHeight`.\n       */\n      this.pivotGroupHeaderHeight = undefined;\n      /** Hide any column header rows that would only contain padded groups.\n       */\n      this.hidePaddedHeaderRows = undefined;\n      /** Allow reordering and pinning columns by dragging columns from the Columns Tool Panel to the grid.\n       * @default false\n       * @agModule `ColumnsToolPanelModule`\n       */\n      this.allowDragFromColumnsToolPanel = undefined;\n      /** Set to `true` to suppress column moving, i.e. to make the columns fixed position.\n       * @default false\n       */\n      this.suppressMovableColumns = undefined;\n      /** If `true`, the `ag-column-moving` class is not added to the grid while columns are moving. In the default themes, this results in no animation when moving columns.\n       * @default false\n       */\n      this.suppressColumnMoveAnimation = undefined;\n      /** Set to `true` to suppress moving columns while dragging the Column Header. This option highlights the position where the column will be placed and it will only move it on mouse up.\n       * @default false\n       */\n      this.suppressMoveWhenColumnDragging = undefined;\n      /** If `true`, when you drag a column out of the grid (e.g. to the group zone) the column is not hidden.\n       * @default false\n       */\n      this.suppressDragLeaveHidesColumns = undefined;\n      /** Enable to prevent column visibility changing when grouped columns are changed.\n       * @default false\n       */\n      this.suppressGroupChangesColumnVisibility = undefined;\n      /** By default, when a column is un-grouped, i.e. using the Row Group Panel, it is made visible in the grid. This property stops the column becoming visible again when un-grouping.\n       * @default false\n       * @deprecated v33.0.0 - Use `suppressGroupChangesColumnVisibility: 'suppressShowOnUngroup'` instead.\n       */\n      this.suppressMakeColumnVisibleAfterUnGroup = undefined;\n      /** If `true`, when you drag a column into a row group panel the column is not hidden.\n       * @default false\n       * @deprecated v33.0.0 - Use `suppressGroupChangesColumnVisibility: 'suppressHideOnGroup'` instead.\n       */\n      this.suppressRowGroupHidesColumns = undefined;\n      /** Set to `'shift'` to have shift-resize as the default resize operation (same as user holding down `Shift` while resizing).\n       */\n      this.colResizeDefault = undefined;\n      /** Suppresses auto-sizing columns for columns. In other words, double clicking a column's header's edge will not auto-size.\n       * @default false\n       * @initial\n       */\n      this.suppressAutoSize = undefined;\n      /** Number of pixels to add to a column width after the [auto-sizing](./column-sizing/#auto-size-columns-to-fit-cell-contents) calculation.\n       * Set this if you want to add extra room to accommodate (for example) sort icons, or some other dynamic nature of the header.\n       * @default 20\n       */\n      this.autoSizePadding = undefined;\n      /** Set this to `true` to skip the `headerName` when `autoSize` is called by default.\n       * @default false\n       * @initial\n       * @agModule `ColumnAutoSizeModule`\n       */\n      this.skipHeaderOnAutoSize = undefined;\n      /** Auto-size the columns when the grid is loaded. Can size to fit the grid width, fit a provided width, or fit the cell contents.\n       * @initial\n       * @agModule `ColumnAutoSizeModule`\n       */\n      this.autoSizeStrategy = undefined;\n      /** A map of component names to components.\n       * @initial\n       */\n      this.components = undefined;\n      /** Set to `'fullRow'` to enable Full Row Editing. Otherwise leave blank to edit one cell at a time.\n       * @agModule `TextEditorModule` / `LargeTextEditorModule` / `NumberEditorModule` / `DateEditorModule` / `CheckboxEditorModule` / `CustomEditorModule` / `SelectEditorModule` / `RichSelectModule`\n       */\n      this.editType = undefined;\n      /** Determine the behavior when navigating to the next/previous editable cell. Default is to begin editing the cell.\n       */\n      this.suppressStartEditOnTab = undefined;\n      /** Validates the Full Row Edit. Only relevant when `editType=\"fullRow\"`.\n       * @agModule `TextEditorModule` / `LargeTextEditorModule` / `NumberEditorModule` / `DateEditorModule` / `CheckboxEditorModule` / `CustomEditorModule` / `SelectEditorModule` / `RichSelectModule`\n       */\n      this.getFullRowEditValidationErrors = undefined;\n      /** Set to `block` to block the commit of invalid cell edits, keeping editors open.\n       */\n      this.invalidEditValueMode = undefined;\n      /** Set to `true` to enable Single Click Editing for cells, to start editing with a single click.\n       * @default false\n       * @agModule `TextEditorModule` / `LargeTextEditorModule` / `NumberEditorModule` / `DateEditorModule` / `CheckboxEditorModule` / `CustomEditorModule` / `SelectEditorModule` / `RichSelectModule`\n       */\n      this.singleClickEdit = undefined;\n      /** Set to `true` so that neither single nor double click starts editing.\n       * @default false\n       * @agModule `TextEditorModule` / `LargeTextEditorModule` / `NumberEditorModule` / `DateEditorModule` / `CheckboxEditorModule` / `CustomEditorModule` / `SelectEditorModule` / `RichSelectModule`\n       */\n      this.suppressClickEdit = undefined;\n      /** Set to `true` to stop the grid updating data after `Edit`, `Clipboard` and `Fill Handle` operations. When this is set, it is intended the application will update the data, eg in an external immutable store, and then pass the new dataset to the grid. <br />**Note:** `rowNode.setDataValue()` does not update the value of the cell when this is `True`, it fires `onCellEditRequest` instead.\n       * @default false\n       * @agModule `TextEditorModule` / `LargeTextEditorModule` / `NumberEditorModule` / `DateEditorModule` / `CheckboxEditorModule` / `CustomEditorModule` / `SelectEditorModule` / `RichSelectModule`\n       */\n      this.readOnlyEdit = undefined;\n      /** Set this to `true` to stop cell editing when grid loses focus.\n       * The default is that the grid stays editing until focus goes onto another cell.\n       * @default false\n       * @initial\n       * @agModule `TextEditorModule` / `LargeTextEditorModule` / `NumberEditorModule` / `DateEditorModule` / `CheckboxEditorModule` / `CustomEditorModule` / `SelectEditorModule` / `RichSelectModule`\n       */\n      this.stopEditingWhenCellsLoseFocus = undefined;\n      /** Set to `true` along with `enterNavigatesVerticallyAfterEdit` to have Excel-style behaviour for the `Enter` key.\n       * i.e. pressing the `Enter` key will move down to the cell beneath and `Shift+Enter` will move up to the cell above.\n       * @default false\n       * @agModule `TextEditorModule` / `LargeTextEditorModule` / `NumberEditorModule` / `DateEditorModule` / `CheckboxEditorModule` / `CustomEditorModule` / `SelectEditorModule` / `RichSelectModule`\n       */\n      this.enterNavigatesVertically = undefined;\n      /** Set to `true` along with `enterNavigatesVertically` to have Excel-style behaviour for the 'Enter' key.\n       * i.e. pressing the Enter key will move down to the cell beneath and Shift+Enter key will move up to the cell above.\n       * @default false\n       * @agModule `TextEditorModule` / `LargeTextEditorModule` / `NumberEditorModule` / `DateEditorModule` / `CheckboxEditorModule` / `CustomEditorModule` / `SelectEditorModule` / `RichSelectModule`\n       */\n      this.enterNavigatesVerticallyAfterEdit = undefined;\n      /** Forces Cell Editing to start when backspace is pressed. This is only relevant for MacOS users.\n       * @agModule `TextEditorModule` / `LargeTextEditorModule` / `NumberEditorModule` / `DateEditorModule` / `CheckboxEditorModule` / `CustomEditorModule` / `SelectEditorModule` / `RichSelectModule`\n       */\n      this.enableCellEditingOnBackspace = undefined;\n      /** Set to `true` to enable Undo / Redo while editing.\n       * @initial\n       * @agModule `UndoRedoEditModule`\n       */\n      this.undoRedoCellEditing = undefined;\n      /** Set the size of the undo / redo stack.\n       * @default 10\n       * @initial\n       * @agModule `UndoRedoEditModule`\n       */\n      this.undoRedoCellEditingLimit = undefined;\n      /** A default configuration object used to export to CSV.\n       * @agModule `CsvExportModule`\n       */\n      this.defaultCsvExportParams = undefined;\n      /** Prevents the user from exporting the grid to CSV.\n       * @default false\n       */\n      this.suppressCsvExport = undefined;\n      /** A default configuration object used to export to Excel.\n       * @agModule `ExcelExportModule`\n       */\n      this.defaultExcelExportParams = undefined;\n      /** Prevents the user from exporting the grid to Excel.\n       * @default false\n       */\n      this.suppressExcelExport = undefined;\n      /** A list (array) of Excel styles to be used when exporting to Excel with styles.\n       * @initial\n       * @agModule `ExcelExportModule`\n       */\n      this.excelStyles = undefined;\n      /** Text to find within the grid.\n       * @agModule `FindModule`\n       */\n      this.findSearchValue = undefined;\n      /** Options for the Find feature.\n       * @agModule `FindModule`\n       */\n      this.findOptions = undefined;\n      /** Rows are filtered using this text as a Quick Filter.\n       * Only supported for Client-Side Row Model.\n       * @agModule `QuickFilterModule`\n       */\n      this.quickFilterText = undefined;\n      /** Set to `true` to turn on the Quick Filter cache, used to improve performance when using the Quick Filter.\n       * @default false\n       * @initial\n       * @agModule `QuickFilterModule`\n       */\n      this.cacheQuickFilter = undefined;\n      /** Hidden columns are excluded from the Quick Filter by default.\n       * To include hidden columns, set to `true`.\n       * @default false\n       * @agModule `QuickFilterModule`\n       */\n      this.includeHiddenColumnsInQuickFilter = undefined;\n      /** Changes how the Quick Filter splits the Quick Filter text into search terms.\n       * @agModule `QuickFilterModule`\n       */\n      this.quickFilterParser = undefined;\n      /** Changes the matching logic for whether a row passes the Quick Filter.\n       * @agModule `QuickFilterModule`\n       */\n      this.quickFilterMatcher = undefined;\n      /** When pivoting, Quick Filter is only applied on the pivoted data\n       * (or aggregated data if `groupAggFiltering = true`).\n       * Set to `true` to apply Quick Filter before pivoting (/aggregating) instead.\n       * @default false\n       * @agModule `QuickFilterModule`\n       */\n      this.applyQuickFilterBeforePivotOrAgg = undefined;\n      /** Set to `true` to override the default tree data filtering behaviour to instead exclude child nodes from filter results.\n       * @default false\n       * @agModule `TreeDataModule`\n       */\n      this.excludeChildrenWhenTreeDataFiltering = undefined;\n      /** Set to true to enable the Advanced Filter.\n       * @default false\n       * @agModule `AdvancedFilterModule`\n       */\n      this.enableAdvancedFilter = undefined;\n      /** Allows rows to always be displayed, even if they don't match the applied filtering.\n       * Return `true` for the provided row to always be displayed.\n       * Only works with the Client-Side Row Model.\n       * @agModule `TextFilterModule` / `NumberFilterModule` / `DateFilterModule` / `SetFilterModule` / `MultiFilterModule` / `CustomFilterModule` / `QuickFilterModule` / `ExternalFilterModule` / `AdvancedFilterModule`\n       */\n      this.alwaysPassFilter = undefined;\n      /** Hidden columns are excluded from the Advanced Filter by default.\n       * To include hidden columns, set to `true`.\n       * @default false\n       * @agModule `AdvancedFilterModule`\n       */\n      this.includeHiddenColumnsInAdvancedFilter = undefined;\n      /** DOM element to use as the parent for the Advanced Filter to allow it to appear outside of the grid.\n       * Set to `null` or `undefined` to appear inside the grid.\n       * @agModule `AdvancedFilterModule`\n       */\n      this.advancedFilterParent = undefined;\n      /** Customise the parameters passed to the Advanced Filter Builder.\n       * @agModule `AdvancedFilterModule`\n       */\n      this.advancedFilterBuilderParams = undefined;\n      /** Customise the parameters passed to the Advanced Filter\n       * @agModule `AdvancedFilterModule`\n       */\n      this.advancedFilterParams = undefined;\n      /** @deprecated As of v34, advanced filter no longer uses function evaluation, so this option has no effect.\n       * @default true\n       * @agModule `AdvancedFilterModule`\n       */\n      this.suppressAdvancedFilterEval = undefined;\n      /** When using AG Grid Enterprise, the Set Filter is used by default when `filter: true` is set on column definitions.\n       * Set to `true` to prevent this and instead use the Text Filter, Number Filter or Date Filter based on the cell data type,\n       * the same as when using AG Grid Community.\n       * @default false\n       * @initial\n       * @agModule TextFilterModule / NumberFilterModule / DateFilterModule / MultiFilterModule / CustomFilterModule\n       */\n      this.suppressSetFilterByDefault = undefined;\n      /** Enable filter handlers for custom filter components.\n       * Requires all custom filters to be implemented using handlers.\n       *\n       * Note that grid-provided filters (except for the Multi Filter) always use filter handlers.\n       * The Multi Filter will also use a filter handler if this is enabled.\n       * @initial\n       */\n      this.enableFilterHandlers = undefined;\n      /** A map of filter handler key to filter handler function.\n       * Allows for filter handler keys to be used in `colDef.filter.handler`.\n       * @initial\n       */\n      this.filterHandlers = undefined;\n      /** Set to `true` to Enable Charts.\n       * @default false\n       * @agModule `IntegratedChartsModule`\n       */\n      this.enableCharts = undefined;\n      /** The list of chart themes that a user can choose from in the chart panel.\n       * @default ['ag-default', 'ag-material', 'ag-sheets', 'ag-polychroma', 'ag-vivid'];\n       * @initial\n       * @agModule `IntegratedChartsModule`\n       */\n      this.chartThemes = undefined;\n      /** A map containing custom chart themes.\n       * @initial\n       * @agModule `IntegratedChartsModule`\n       */\n      this.customChartThemes = undefined;\n      /** Chart theme overrides applied to all themes.\n       * @initial\n       * @agModule `IntegratedChartsModule`\n       */\n      this.chartThemeOverrides = undefined;\n      /** Allows customisation of the Chart Tool Panels, such as changing the tool panels visibility and order, as well as choosing which charts should be displayed in the chart panel.\n       * @initial\n       * @agModule `IntegratedChartsModule`\n       */\n      this.chartToolPanelsDef = undefined;\n      /** Get chart menu items. Only applies when using AG Charts Enterprise.\n       * @agModule `IntegratedChartsModule`\n       */\n      this.chartMenuItems = undefined;\n      /** Provide your own loading cell renderer to use when data is loading via a DataSource or when a cell renderer is deferred.\n       * See [Loading Cell Renderer](https://www.ag-grid.com/javascript-data-grid/component-loading-cell-renderer/) for framework specific implementation details.\n       */\n      this.loadingCellRenderer = undefined;\n      /** Params to be passed to the `loadingCellRenderer` component.\n       */\n      this.loadingCellRendererParams = undefined;\n      /** Callback to select which loading cell renderer to be used when data is loading via a DataSource or when a cell renderer is deferred.\n       * @initial\n       */\n      this.loadingCellRendererSelector = undefined;\n      /** A map of key->value pairs for localising text within the grid.\n       * @initial\n       * @agModule `LocaleModule`\n       */\n      this.localeText = undefined;\n      /** Set to `true` to enable Master Detail.\n       * @default false\n       * @agModule `MasterDetailModule`\n       */\n      this.masterDetail = undefined;\n      /** Set to `true` to keep detail rows for when they are displayed again.\n       * @default false\n       * @initial\n       * @agModule `MasterDetailModule`\n       */\n      this.keepDetailRows = undefined;\n      /** Sets the number of details rows to keep.\n       * @default 10\n       * @initial\n       * @agModule `MasterDetailModule`\n       */\n      this.keepDetailRowsCount = undefined;\n      /** Provide a custom `detailCellRenderer` to use when a master row is expanded.\n       * See [Detail Cell Renderer](https://www.ag-grid.com/javascript-data-grid/master-detail-custom-detail/) for framework specific implementation details.\n       * @agModule `MasterDetailModule`\n       */\n      this.detailCellRenderer = undefined;\n      /** Specifies the params to be used by the Detail Cell Renderer. Can also be a function that provides the params to enable dynamic definitions of the params.\n       * @agModule `MasterDetailModule`\n       */\n      this.detailCellRendererParams = undefined;\n      /** Set fixed height in pixels for each detail row.\n       * @initial\n       * @agModule `MasterDetailModule`\n       */\n      this.detailRowHeight = undefined;\n      /** Set to `true` to have the detail grid dynamically change it's height to fit it's rows.\n       * @initial\n       * @agModule `MasterDetailModule`\n       */\n      this.detailRowAutoHeight = undefined;\n      /** Provides a context object that is provided to different callbacks the grid uses. Used for passing additional information to the callbacks used by your application.\n       * @initial\n       */\n      this.context = undefined;\n      /**\n       * A list of grids to treat as Aligned Grids.\n       * Provide a list if the grids / apis already exist or return via a callback to allow the aligned grids to be retrieved asynchronously.\n       * If grids are aligned then the columns and horizontal scrolling will be kept in sync.\n       * @agModule `AlignedGridsModule`\n       */\n      this.alignedGrids = undefined;\n      /** Change this value to set the tabIndex order of the Grid within your application.\n       * @default 0\n       * @initial\n       */\n      this.tabIndex = undefined;\n      /** The number of rows rendered outside the viewable area the grid renders.\n       * Having a buffer means the grid will have rows ready to show as the user slowly scrolls vertically.\n       * @default 10\n       */\n      this.rowBuffer = undefined;\n      /** Set to `true` to turn on the value cache.\n       * @default false\n       * @initial\n       * @agModule `ValueCacheModule`\n       */\n      this.valueCache = undefined;\n      /** Set to `true` to configure the value cache to not expire after data updates.\n       * @default false\n       * @initial\n       * @agModule `ValueCacheModule`\n       */\n      this.valueCacheNeverExpires = undefined;\n      /** Set to `true` to allow cell expressions.\n       * @default false\n       * @initial\n       */\n      this.enableCellExpressions = undefined;\n      /** Disables touch support (but does not remove the browser's efforts to simulate mouse events on touch).\n       * @default false\n       * @initial\n       */\n      this.suppressTouch = undefined;\n      /** Set to `true` to not set focus back on the grid after a refresh. This can avoid issues where you want to keep the focus on another part of the browser.\n       * @default false\n       */\n      this.suppressFocusAfterRefresh = undefined;\n      /** @deprecated As of v32.2 the grid always uses the browser's ResizeObserver, this grid option has no effect\n       * @default false\n       * @initial\n       */\n      this.suppressBrowserResizeObserver = undefined;\n      /** @deprecated As of v33 `gridOptions` and `columnDefs` both have a `context` property that should be used for arbitrary user data. This means that column definitions and gridOptions should only contain valid properties making this property redundant.\n       * @default false\n       * @initial\n       */\n      this.suppressPropertyNamesCheck = undefined;\n      /** Disables change detection.\n       * @default false\n       */\n      this.suppressChangeDetection = undefined;\n      /** Set this to `true` to enable debug information from the grid and related components. Will result in additional logging being output, but very useful when investigating problems.\n       * It is also recommended to register the `ValidationModule` to identify any misconfigurations.\n       * @default false\n       * @initial\n       */\n      this.debug = undefined;\n      /** Show or hide the loading overlay.\n       */\n      this.loading = undefined;\n      /** Provide a HTML string to override the default loading overlay. Supports non-empty plain text or HTML with a single root element.\n       */\n      this.overlayLoadingTemplate = undefined;\n      /** Provide a custom loading overlay component.\n       * @initial\n       */\n      this.loadingOverlayComponent = undefined;\n      /** Customise the parameters provided to the loading overlay component.\n       */\n      this.loadingOverlayComponentParams = undefined;\n      /** Disables the 'loading' overlay.\n       * @deprecated v32 - Deprecated. Use `loading=false` instead.\n       * @default false\n       * @initial\n       */\n      this.suppressLoadingOverlay = undefined;\n      /** Provide a HTML string to override the default no-rows overlay. Supports non-empty plain text or HTML with a single root element.\n       */\n      this.overlayNoRowsTemplate = undefined;\n      /** Provide a custom no-rows overlay component.\n       * @initial\n       */\n      this.noRowsOverlayComponent = undefined;\n      /** Customise the parameters provided to the no-rows overlay component.\n       */\n      this.noRowsOverlayComponentParams = undefined;\n      /** Set to `true` to prevent the no-rows overlay being shown when there is no row data.\n       * @default false\n       * @initial\n       */\n      this.suppressNoRowsOverlay = undefined;\n      /** Set whether pagination is enabled.\n       * @default false\n       * @agModule `PaginationModule`\n       */\n      this.pagination = undefined;\n      /** How many rows to load per page. If `paginationAutoPageSize` is specified, this property is ignored.\n       * @default 100\n       * @agModule `PaginationModule`\n       */\n      this.paginationPageSize = undefined;\n      /** Determines if the page size selector is shown in the pagination panel or not.\n       * Set to an array of values to show the page size selector with custom list of possible page sizes.\n       * Set to `true` to show the page size selector with the default page sizes `[20, 50, 100]`.\n       * Set to `false` to hide the page size selector.\n       * @default true\n       * @initial\n       * @agModule `PaginationModule`\n       */\n      this.paginationPageSizeSelector = undefined;\n      /** Set to `true` so that the number of rows to load per page is automatically adjusted by the grid so each page shows enough rows to just fill the area designated for the grid. If `false`, `paginationPageSize` is used.\n       * @default false\n       * @agModule `PaginationModule`\n       */\n      this.paginationAutoPageSize = undefined;\n      /** Set to `true` to have pages split children of groups when using Row Grouping or detail rows with Master Detail.\n       * @default false\n       * @initial\n       * @agModule `PaginationModule`\n       */\n      this.paginateChildRows = undefined;\n      /** If `true`, the default grid controls for navigation are hidden.\n       * This is useful if `pagination=true` and you want to provide your own pagination controls.\n       * Otherwise, when `pagination=true` the grid automatically shows the necessary controls at the bottom so that the user can navigate through the different pages.\n       * @default false\n       * @agModule `PaginationModule`\n       */\n      this.suppressPaginationPanel = undefined;\n      /** Set to `true` to enable pivot mode.\n       * @default false\n       * @agModule `PivotModule`\n       */\n      this.pivotMode = undefined;\n      /** When to show the 'pivot panel' (where you drag rows to pivot) at the top. Note that the pivot panel will never show if `pivotMode` is off.\n       * @default 'never'\n       * @initial\n       * @agModule `RowGroupingPanelModule`\n       */\n      this.pivotPanelShow = undefined;\n      /** The maximum number of generated columns before the grid halts execution. Upon reaching this number, the grid halts generation of columns\n       * and triggers a `pivotMaxColumnsExceeded` event. `-1` for no limit.\n       * @default -1\n       * @agModule `PivotModule`\n       */\n      this.pivotMaxGeneratedColumns = undefined;\n      /** If pivoting, set to the number of column group levels to expand by default, e.g. `0` for none, `1` for first level only, etc. Set to `-1` to expand everything.\n       * @default 0\n       * @agModule `PivotModule`\n       */\n      this.pivotDefaultExpanded = undefined;\n      /** When set and the grid is in pivot mode, automatically calculated totals will appear within the Pivot Column Groups, in the position specified.\n       * @agModule `PivotModule`\n       */\n      this.pivotColumnGroupTotals = undefined;\n      /** When set and the grid is in pivot mode, automatically calculated totals will appear for each value column in the position specified.\n       * @agModule `PivotModule`\n       */\n      this.pivotRowTotals = undefined;\n      /** If `true`, the grid will not swap in the grouping column when pivoting. Useful if pivoting using Server Side Row Model or Viewport Row Model and you want full control of all columns including the group column.\n       * @default false\n       * @initial\n       * @agModule `PivotModule`\n       */\n      this.pivotSuppressAutoColumn = undefined;\n      /** When enabled, pivot column groups will appear 'fixed', without the ability to expand and collapse the column groups.\n       * @default false\n       * @initial\n       * @agModule `PivotModule`\n       */\n      this.suppressExpandablePivotGroups = undefined;\n      /** If `true`, then row group, pivot and value aggregation will be read-only from the GUI. The grid will display what values are used for each, but will not allow the user to change the selection.\n       * @default false\n       * @agModule `RowGroupingModule` / `PivotModule` / `TreeDataModule` / `ServerSideRowModelModule`\n       */\n      this.functionsReadOnly = undefined;\n      /** A map of 'function name' to 'function' for custom aggregation functions.\n       * @initial\n       * @agModule `RowGroupingModule` / `PivotModule` / `TreeDataModule` / `ServerSideRowModelModule`\n       */\n      this.aggFuncs = undefined;\n      /** When `true`, column headers won't include the `aggFunc` name, e.g. `'sum(Bank Balance)`' will just be `'Bank Balance'`.\n       * @default false\n       * @agModule `RowGroupingModule` / `PivotModule` / `TreeDataModule` / `ServerSideRowModelModule`\n       */\n      this.suppressAggFuncInHeader = undefined;\n      /** When using aggregations, the grid will always calculate the root level aggregation value.\n       * @default false\n       * @agModule `RowGroupingModule` / `PivotModule` / `TreeDataModule` / `ServerSideRowModelModule`\n       */\n      this.alwaysAggregateAtRootLevel = undefined;\n      /** When using change detection, only the updated column will be re-aggregated.\n       * @default false\n       * @agModule `RowGroupingModule` / `PivotModule` / `TreeDataModule` / `ServerSideRowModelModule`\n       */\n      this.aggregateOnlyChangedColumns = undefined;\n      /** Set to `true` so that aggregations are not impacted by filtering.\n       * @default false\n       * @agModule `RowGroupingModule` / `PivotModule` / `TreeDataModule` / `ServerSideRowModelModule`\n       */\n      this.suppressAggFilteredOnly = undefined;\n      /** Set to `true` to omit the value Column header when there is only a single value column.\n       * @default false\n       * @agModule `PivotModule`\n       */\n      this.removePivotHeaderRowWhenSingleValueColumn = undefined;\n      /** Set to `false` to disable Row Animation which is enabled by default.\n       * @default true\n       */\n      this.animateRows = undefined;\n      /** Sets the duration in milliseconds of how long a cell should remain in its \"flashed\" state.\n       * If `0`, the cell will not flash.\n       * @default 500\n       */\n      this.cellFlashDuration = undefined;\n      /** Sets the duration in milliseconds of how long the \"flashed\" state animation takes to fade away after the timer set by `cellFlashDuration` has completed.\n       * @default 1000\n       */\n      this.cellFadeDuration = undefined;\n      /** Set to `true` to have cells flash after data changes even when the change is due to filtering.\n       * @default false\n       * @initial\n       */\n      this.allowShowChangeAfterFilter = undefined;\n      /** Switch between layout options: `normal`, `autoHeight`, `print`.\n       * @default 'normal'\n       */\n      this.domLayout = undefined;\n      /** When `true`, the order of rows and columns in the DOM are consistent with what is on screen.\n       * Disables row animations.\n       * @default false\n       * @initial\n       */\n      this.ensureDomOrder = undefined;\n      /** When `true`, enables the cell span feature allowing for the use of the `colDef.spanRows` property.\n       * @default false\n       * @initial\n       * @agModule `CellSpanModule`\n       */\n      this.enableCellSpan = undefined;\n      /** Set to `true` to operate the grid in RTL (Right to Left) mode.\n       * @default false\n       * @initial\n       */\n      this.enableRtl = undefined;\n      /** Set to `true` so that the grid doesn't virtualise the columns. For example, if you have 100 columns, but only 10 visible due to scrolling, all 100 will always be rendered.\n       *     **It is not recommended to set this to `true` as it may cause performance issues.**\n       * @default false\n       * @initial\n       */\n      this.suppressColumnVirtualisation = undefined;\n      /** By default the grid has a limit of rendering a maximum of 500 rows at once (remember the grid only renders rows you can see, so unless your display shows more than 500 rows without vertically scrolling this will never be an issue).\n       * <br />**This is only relevant if you are manually setting `rowBuffer` to a high value (rendering more rows than can be seen), or `suppressRowVirtualisation` is true, or if your grid height is able to display more than 500 rows at once.**\n       * @default false\n       * @initial\n       */\n      this.suppressMaxRenderedRowRestriction = undefined;\n      /** Set to `true` so that the grid doesn't virtualise the rows. For example, if you have 100 rows, but only 10 visible due to scrolling, all 100 will always be rendered.\n       *     **It is not recommended to set this to `true` as it may cause performance issues.**\n       * @default false\n       * @initial\n       */\n      this.suppressRowVirtualisation = undefined;\n      /** Set to `true` to enable Managed Row Dragging.\n       * @default false\n       * @agModule `RowDragModule`\n       */\n      this.rowDragManaged = undefined;\n      /** Used if rowDragManaged is enabled and treeData is enabled,\n       * - If the row is already a group, but is not expanded, it will be expanded after rowDragInsertDelay milliseconds of dragging over it.\n       * - If the row is a leaf (no children), it will be converted to a group and the row inserted into it after rowDragInsertDelay milliseconds of dragging over it.\n       * @default 500\n       * @agModule `RowDragModule`\n       */\n      this.rowDragInsertDelay = undefined;\n      /** Set to `true` to suppress row dragging.\n       * @default false\n       */\n      this.suppressRowDrag = undefined;\n      /** Set to `true` to suppress moving rows while dragging the `rowDrag` waffle. This option highlights the position where the row will be placed and it will only move the row on mouse up.\n       * @default false\n       * @agModule `RowDragModule`\n       */\n      this.suppressMoveWhenRowDragging = undefined;\n      /** Set to `true` to enable clicking and dragging anywhere on the row without the need for a drag handle.\n       * @default false\n       * @agModule `RowDragModule`\n       */\n      this.rowDragEntireRow = undefined;\n      /** Set to `true` to enable dragging multiple rows at the same time.\n       * @default false\n       * @agModule `RowDragModule`\n       */\n      this.rowDragMultiRow = undefined;\n      /** A callback that should return a string to be displayed by the `rowDragComp` while dragging a row.\n       * If this callback is not set, the current cell value will be used.\n       * If the `rowDragText` callback is set in the ColDef it will take precedence over this, except when\n       * `rowDragEntireRow=true`.\n       * @initial\n       * @agModule `RowDragModule`\n       */\n      this.rowDragText = undefined;\n      /** Provide a custom drag and drop image component.\n       * @initial\n       * @agModule `RowDragModule`\n       */\n      this.dragAndDropImageComponent = undefined;\n      /** Customise the parameters provided to the Drag and Drop Image Component.\n       * @agModule `RowDragModule`\n       */\n      this.dragAndDropImageComponentParams = undefined;\n      /** Provide your own cell renderer component to use for full width rows.\n       * See [Full Width Rows](https://www.ag-grid.com/javascript-data-grid/full-width-rows/) for framework specific implementation details.\n       */\n      this.fullWidthCellRenderer = undefined;\n      /** Customise the parameters provided to the `fullWidthCellRenderer` component.\n       */\n      this.fullWidthCellRendererParams = undefined;\n      /** Set to `true` to have the Full Width Rows embedded in grid's main container so they can be scrolled horizontally.\n       */\n      this.embedFullWidthRows = undefined;\n      /** Specifies how the results of row grouping should be displayed.\n       *\n       *  The options are:\n       *\n       * - `'singleColumn'`: single group column automatically added by the grid.\n       * - `'multipleColumns'`: a group column per row group is added automatically.\n       * - `'groupRows'`: group rows are automatically added instead of group columns.\n       * - `'custom'`: informs the grid that group columns will be provided.\n       * @agModule `RowGroupingModule`\n       */\n      this.groupDisplayType = undefined;\n      /** If grouping, set to the number of levels to expand by default, e.g. `0` for none, `1` for first level only, etc. Set to `-1` to expand everything.\n       * @default 0\n       * @agModule `RowGroupingModule` / `TreeDataModule`\n       */\n      this.groupDefaultExpanded = undefined;\n      /** Allows specifying the group 'auto column' if you are not happy with the default. If grouping, this column definition is included as the first column in the grid. If not grouping, this column is not included.\n       * @agModule `RowGroupingModule` / `TreeDataModule`\n       */\n      this.autoGroupColumnDef = undefined;\n      /** When `true`, preserves the current group order when sorting on non-group columns.\n       * @default false\n       * @agModule `RowGroupingModule`\n       */\n      this.groupMaintainOrder = undefined;\n      /** When `true`, if you select a group, the children of the group will also be selected.\n       * @default false\n       * @deprecated v32.2 Use `rowSelection.groupSelects` instead\n       */\n      this.groupSelectsChildren = undefined;\n      /** If grouping, locks the group settings of a number of columns, e.g. `0` for no group locking. `1` for first group column locked, `-1` for all group columns locked.\n       * @default 0\n       * @initial\n       * @agModule `RowGroupingModule`\n       */\n      this.groupLockGroupColumns = undefined;\n      /** Set to determine whether filters should be applied on aggregated group values.\n       * @default false\n       * @agModule `RowGroupingModule`\n       */\n      this.groupAggFiltering = undefined;\n      /** When provided, an extra row group total row will be inserted into row groups at the specified position, to display\n       * when the group is expanded. This row will contain the aggregate values for the group. If a callback function is\n       * provided, it can be used to selectively determine which groups will have a total row added.\n       * @agModule `RowGroupingModule` / `ServerSideRowModelModule`\n       */\n      this.groupTotalRow = undefined;\n      /** When provided, an extra grand total row will be inserted into the grid at the specified position.\n       * This row displays the aggregate totals of all rows in the grid.\n       * @agModule `RowGroupingModule` / `ServerSideRowModelModule`\n       */\n      this.grandTotalRow = undefined;\n      /** Suppress the sticky behaviour of the total rows, can be suppressed individually by passing `'grand'` or `'group'`.\n       * @agModule `RowGroupingModule` / `ServerSideRowModelModule`\n       */\n      this.suppressStickyTotalRow = undefined;\n      /** If `true`, and showing footer, aggregate data will always be displayed at both the header and footer levels. This stops the possibly undesirable behaviour of the header details 'jumping' to the footer on expand.\n       * @default false\n       * @agModule `RowGroupingModule` / `PivotModule` / `TreeDataModule` / `ServerSideRowModelModule`\n       */\n      this.groupSuppressBlankHeader = undefined;\n      /** If using `groupSelectsChildren`, then only the children that pass the current filter will get selected.\n       * @default false\n       * @deprecated v32.2 Use `rowSelection.groupSelects` instead\n       */\n      this.groupSelectsFiltered = undefined;\n      /** Shows the open group in the group column for non-group rows.\n       * @default false\n       * @agModule `RowGroupingModule`\n       */\n      this.showOpenedGroup = undefined;\n      /** Enable to display the child row in place of the group row when the group only has a single child.\n       * @default false\n       * @agModule `RowGroupingModule`\n       */\n      this.groupHideParentOfSingleChild = undefined;\n      /** Set to `true` to collapse groups that only have one child.\n       * @default false\n       * @deprecated v33.0.0 - use `groupHideParentOfSingleChild` instead.\n       */\n      this.groupRemoveSingleChildren = undefined;\n      /** Set to `true` to collapse lowest level groups that only have one child.\n       * @default false\n       * @deprecated v33.0.0 - use `groupHideParentOfSingleChild: 'leafGroupsOnly'` instead.\n       */\n      this.groupRemoveLowestSingleChildren = undefined;\n      /** Set to `true` to hide parents that are open. When used with multiple columns for showing groups, it can give a more pleasing user experience.\n       * @default false\n       * @agModule `RowGroupingModule`\n       */\n      this.groupHideOpenParents = undefined;\n      /** Set to `true` to prevent the grid from creating a '(Blanks)' group for nodes which do not belong to a group, and display the unbalanced nodes alongside group nodes.\n       * @default false\n       * @agModule `RowGroupingModule`\n       */\n      this.groupAllowUnbalanced = undefined;\n      /** When to show the 'row group panel' (where you drag rows to group) at the top.\n       * @default 'never'\n       * @agModule `RowGroupingPanelModule`\n       */\n      this.rowGroupPanelShow = undefined;\n      /** Provide the Cell Renderer to use when `groupDisplayType = 'groupRows'`.\n       * See [Group Row Cell Renderer](https://www.ag-grid.com/javascript-data-grid/grouping-group-rows/#providing-cell-renderer) for framework specific implementation details.\n       * @agModule `RowGroupingModule`\n       */\n      this.groupRowRenderer = undefined;\n      /** Customise the parameters provided to the `groupRowRenderer` component.\n       * @agModule `RowGroupingModule`\n       */\n      this.groupRowRendererParams = undefined;\n      /** Set to `true` to enable the Grid to work with Tree Data.\n       * You must also implement the `getDataPath(data)` callback.\n       * @default false\n       * @agModule `TreeDataModule`\n       */\n      this.treeData = undefined;\n      /** The name of the field to use in a data item to retrieve the array of children nodes of a node when while using treeData=true.\n       * It supports accessing nested fields using the dot notation.\n       * @agModule `TreeDataModule`\n       */\n      this.treeDataChildrenField = undefined;\n      /** The name of the field to use in a data item to find the parent node of a node when using treeData=true.\n       * The tree will be constructed via relationships between nodes using this field.\n       * getRowId callback need to be provided as well for this to work.\n       * It supports accessing nested fields using the dot notation.\n       * @agModule `TreeDataModule`\n       */\n      this.treeDataParentIdField = undefined;\n      /** Set to `true` to suppress sort indicators and actions from the row group panel.\n       * @default false\n       * @agModule `RowGroupingPanelModule`\n       */\n      this.rowGroupPanelSuppressSort = undefined;\n      /** Set to `true` prevent Group Rows from sticking to the top of the grid.\n       * @default false\n       * @initial\n       * @agModule `RowGroupingModule` / `TreeDataModule`\n       */\n      this.suppressGroupRowsSticky = undefined;\n      /** Data to be displayed as pinned top rows in the grid.\n       * @agModule `PinnedRowModule`\n       */\n      this.pinnedTopRowData = undefined;\n      /** Data to be displayed as pinned bottom rows in the grid.\n       * @agModule `PinnedRowModule`\n       */\n      this.pinnedBottomRowData = undefined;\n      /** Determines whether manual row pinning is enabled via the row context menu.\n       *\n       * Set to `true` to allow pinning rows to top or bottom.\n       * Set to `'top'` to allow pinning rows to the top only.\n       * Set to `'bottom'` to allow pinning rows to the bottom only.\n       * @agModule `PinnedRowModule`\n       */\n      this.enableRowPinning = undefined;\n      /** Return `true` if the grid should allow the row to be manually pinned.\n       * Return `false` if the grid should prevent the row from being pinned\n       *\n       * When not defined, all rows default to pinnable.\n       * @agModule `PinnedRowModule`\n       */\n      this.isRowPinnable = undefined;\n      /** Called for every row in the grid.\n       *\n       * Return \"top\", \"bottom\" if the row should be initially pinned to the top or bottom respectively.\n       * Return `null` or `undefined` otherwise.\n       * User interactions can subsequently still change the pinned state of a row.\n       * @agModule `PinnedRowModule`\n       */\n      this.isRowPinned = undefined;\n      /** Sets the row model type.\n       * @default 'clientSide'\n       * @initial\n       * @agModule `ClientSideRowModelModule` / `InfiniteRowModelModule` / `ServerSideRowModelModule` / `ViewportRowModelModule`\n       */\n      this.rowModelType = undefined;\n      /** Set the data to be displayed as rows in the grid.\n       * @agModule `ClientSideRowModelModule`\n       */\n      this.rowData = undefined;\n      /** How many milliseconds to wait before executing a batch of async transactions.\n       */\n      this.asyncTransactionWaitMillis = undefined;\n      /** Prevents Transactions changing sort, filter, group or pivot state when transaction only contains updates.\n       * @default false\n       */\n      this.suppressModelUpdateAfterUpdateTransaction = undefined;\n      /** Provide the datasource for infinite scrolling.\n       * @agModule `InfiniteRowModelModule`\n       */\n      this.datasource = undefined;\n      /** How many extra blank rows to display to the user at the end of the dataset, which sets the vertical scroll and then allows the grid to request viewing more rows of data.\n       * @default 1\n       * @initial\n       * @agModule `InfiniteRowModelModule`\n       */\n      this.cacheOverflowSize = undefined;\n      /** How many extra blank rows to display to the user at the end of the dataset, which sets the vertical scroll and then allows the grid to request viewing more rows of data.\n       * @default 1\n       * @initial\n       * @agModule `InfiniteRowModelModule`\n       */\n      this.infiniteInitialRowCount = undefined;\n      /** Set how many loading rows to display to the user for the root level group.\n       * @default 1\n       * @initial\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.serverSideInitialRowCount = undefined;\n      /** When `true`, the Server-side Row Model will not use a full width loading renderer, instead using the colDef `loadingCellRenderer` if present.\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.suppressServerSideFullWidthLoadingRow = undefined;\n      /** How many rows for each block in the store, i.e. how many rows returned from the server at a time.\n       * @default 100\n       * @agModule `ServerSideRowModelModule` / `InfiniteRowModelModule`\n       */\n      this.cacheBlockSize = undefined;\n      /** How many blocks to keep in the store. Default is no limit, so every requested block is kept. Use this if you have memory concerns, and blocks that were least recently viewed will be purged when the limit is hit. The grid will additionally make sure it has all the blocks needed to display what is currently visible, in case this property is set to a low value.\n       * @initial\n       * @agModule `ServerSideRowModelModule` / `InfiniteRowModelModule`\n       */\n      this.maxBlocksInCache = undefined;\n      /** How many requests to hit the server with concurrently. If the max is reached, requests are queued.\n       * Set to `-1` for no maximum restriction on requests.\n       * @default 2\n       * @initial\n       * @agModule `ServerSideRowModelModule` / `InfiniteRowModelModule`\n       */\n      this.maxConcurrentDatasourceRequests = undefined;\n      /** How many milliseconds to wait before loading a block. Useful when scrolling over many blocks, as it prevents blocks loading until scrolling has settled.\n       * @initial\n       * @agModule `ServerSideRowModelModule` / `InfiniteRowModelModule`\n       */\n      this.blockLoadDebounceMillis = undefined;\n      /** When enabled, closing group rows will remove children of that row. Next time the row is opened, child rows will be read from the datasource again. This property only applies when there is Row Grouping or Tree Data.\n       * @default false\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.purgeClosedRowNodes = undefined;\n      /** Provide the `serverSideDatasource` for server side row model.\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.serverSideDatasource = undefined;\n      /** When enabled, always refreshes top level groups regardless of which column was sorted. This property only applies when there is Row Grouping & sorting is handled on the server.\n       * @default false\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.serverSideSortAllLevels = undefined;\n      /** When enabled, sorts fully loaded groups in the browser instead of requesting from the server.\n       * @default false\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.serverSideEnableClientSideSort = undefined;\n      /** When enabled, only refresh groups directly impacted by a filter. This property only applies when there is Row Grouping & filtering is handled on the server.\n       * @default false\n       * @initial\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.serverSideOnlyRefreshFilteredGroups = undefined;\n      /** Used to split pivot field strings for generating pivot result columns when `pivotResultFields` is provided as part of a `getRows` success.\n       * @default '_'\n       * @initial\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.serverSidePivotResultFieldSeparator = undefined;\n      /** To use the viewport row model you need to provide the grid with a `viewportDatasource`.\n       * @agModule `ViewportRowModelModule`\n       */\n      this.viewportDatasource = undefined;\n      /** When using viewport row model, sets the page size for the viewport.\n       * @initial\n       * @agModule `ViewportRowModelModule`\n       */\n      this.viewportRowModelPageSize = undefined;\n      /** When using viewport row model, sets the buffer size for the viewport.\n       * @initial\n       * @agModule `ViewportRowModelModule`\n       */\n      this.viewportRowModelBufferSize = undefined;\n      /** Set to `true` to always show the horizontal scrollbar.\n       * @default false\n       */\n      this.alwaysShowHorizontalScroll = undefined;\n      /** Set to `true` to always show the vertical scrollbar.\n       * @default false\n       */\n      this.alwaysShowVerticalScroll = undefined;\n      /** Set to `true` to debounce the vertical scrollbar. Can provide smoother scrolling on slow machines.\n       * @default false\n       * @initial\n       */\n      this.debounceVerticalScrollbar = undefined;\n      /** Set to `true` to never show the horizontal scroll. This is useful if the grid is aligned with another grid and will scroll when the other grid scrolls. (Should not be used in combination with `alwaysShowHorizontalScroll`.)\n       * @default false\n       */\n      this.suppressHorizontalScroll = undefined;\n      /** When `true`, the grid will not scroll to the top when new row data is provided. Use this if you don't want the default behaviour of scrolling to the top every time you load new data.\n       * @default false\n       */\n      this.suppressScrollOnNewData = undefined;\n      /** When `true`, the grid will not allow mousewheel / touchpad scroll when popup elements are present.\n       * @default false\n       */\n      this.suppressScrollWhenPopupsAreOpen = undefined;\n      /** When `true`, the grid will not use animation frames when drawing rows while scrolling. Use this if and only if the grid is working fast enough on all users machines and you want to avoid the temporarily empty rows.\n       *     **Note:** It is not recommended to set suppressAnimationFrame to `true` in most use cases as this can seriously degrade the user experience as all cells are rendered synchronously blocking the UI thread from scrolling.\n       * @default false\n       * @initial\n       */\n      this.suppressAnimationFrame = undefined;\n      /** If `true`, middle clicks will result in `click` events for cells and rows. Otherwise the browser will use middle click to scroll the grid.<br />**Note:** Not all browsers fire `click` events with the middle button. Most will fire only `mousedown` and `mouseup` events, which can be used to focus a cell, but will not work to call the `onCellClicked` function.\n       * @default false\n       */\n      this.suppressMiddleClickScrolls = undefined;\n      /** If `true`, mouse wheel events will be passed to the browser. Useful if your grid has no vertical scrolls and you want the mouse to scroll the browser page.\n       * @default false\n       * @initial\n       */\n      this.suppressPreventDefaultOnMouseWheel = undefined;\n      /** Tell the grid how wide in pixels the scrollbar is, which is used in grid width calculations. Set only if using non-standard browser-provided scrollbars, so the grid can use the non-standard size in its calculations.\n       * @initial\n       */\n      this.scrollbarWidth = undefined;\n      /** Use the `RowSelectionOptions` object to configure row selection. The string values `'single'` and `'multiple'` are deprecated.\n       * @agModule `RowSelectionModule`\n       */\n      this.rowSelection = undefined;\n      /** Configure cell selection.\n       * @agModule `CellSelectionModule`\n       */\n      this.cellSelection = undefined;\n      /** Set to `true` to allow multiple rows to be selected using single click.\n       * @default false\n       * @deprecated v32.2 Use `rowSelection.enableSelectionWithoutKeys` instead\n       */\n      this.rowMultiSelectWithClick = undefined;\n      /** If `true`, rows will not be deselected if you hold down `Ctrl` and click the row or press `Space`.\n       * @default false\n       * @deprecated v32.2 Use `rowSelection.enableClickSelection` instead\n       */\n      this.suppressRowDeselection = undefined;\n      /** If `true`, row selection won't happen when rows are clicked. Use when you only want checkbox selection.\n       * @default false\n       * @deprecated v32.2 Use `rowSelection.enableClickSelection` instead\n       */\n      this.suppressRowClickSelection = undefined;\n      /** If `true`, cells won't be focusable. This means keyboard navigation will be disabled for grid cells, but remain enabled in other elements of the grid such as column headers, floating filters, tool panels.\n       * @default false\n       */\n      this.suppressCellFocus = undefined;\n      /** If `true`, header cells won't be focusable. This means keyboard navigation will be disabled for grid header cells, but remain enabled in other elements of the grid such as grid cells and tool panels.\n       * @default false\n       */\n      this.suppressHeaderFocus = undefined;\n      /** Configure the selection column, used for displaying checkboxes.\n       *\n       * Note that due to the nature of this column, this type is a subset of `ColDef`, which does not support several normal column features such as editing, pivoting and grouping.\n       */\n      this.selectionColumnDef = undefined;\n      /** Configure the Row Numbers Feature.\n       * @default false\n       * @agModule `RowNumbersModule`\n       */\n      this.rowNumbers = undefined;\n      /** If `true`, only a single range can be selected.\n       * @default false\n       * @deprecated v32.2 Use `cellSelection.suppressMultiRanges` instead\n       */\n      this.suppressMultiRangeSelection = undefined;\n      /** Set to `true` to be able to select the text within cells.\n       *\n       *     **Note:** When this is set to `true`, the clipboard service is disabled and only selected text is copied.\n       * @default false\n       */\n      this.enableCellTextSelection = undefined;\n      /** Set to `true` to enable Range Selection.\n       * @default false\n       * @deprecated v32.2 Use `cellSelection = true` instead\n       * @agModule `CellSelectionModule`\n       */\n      this.enableRangeSelection = undefined;\n      /** Set to `true` to enable the Range Handle.\n       * @default false\n       * @deprecated v32.2 Use `cellSelection.handle` instead\n       */\n      this.enableRangeHandle = undefined;\n      /** Set to `true` to enable the Fill Handle.\n       * @default false\n       * @deprecated v32.2 Use `cellSelection.handle` instead\n       */\n      this.enableFillHandle = undefined;\n      /** Set to `'x'` to force the fill handle direction to horizontal, or set to `'y'` to force the fill handle direction to vertical.\n       * @default 'xy'\n       * @deprecated v32.2 Use `cellSelection.handle.direction` instead\n       */\n      this.fillHandleDirection = undefined;\n      /** Set this to `true` to prevent cell values from being cleared when the Range Selection is reduced by the Fill Handle.\n       * @default false\n       * @deprecated v32.2 Use `cellSelection.suppressClearOnFillReduction` instead\n       */\n      this.suppressClearOnFillReduction = undefined;\n      /** Array defining the order in which sorting occurs (if sorting is enabled). Values can be `'asc'`, `'desc'` or `null`. For example: `sortingOrder: ['asc', 'desc']`.\n       * @default [null, 'asc', 'desc']\n       * @deprecated v33 Use `defaultColDef.sortingOrder` instead\n       */\n      this.sortingOrder = undefined;\n      /** Set to `true` to specify that the sort should take accented characters into account. If this feature is turned on the sort will be slower.\n       * @default false\n       */\n      this.accentedSort = undefined;\n      /** Set to `true` to show the 'no sort' icon.\n       * @default false\n       * @deprecated v33 Use `defaultColDef.unSortIcon` instead\n       */\n      this.unSortIcon = undefined;\n      /** Set to `true` to suppress multi-sort when the user shift-clicks a column header.\n       * @default false\n       */\n      this.suppressMultiSort = undefined;\n      /** Set to `true` to always multi-sort when the user clicks a column header, regardless of key presses.\n       * @default false\n       */\n      this.alwaysMultiSort = undefined;\n      /** Set to `'ctrl'` to have multi sorting by clicking work using the `Ctrl` (or `Command ⌘` for Mac) key.\n       */\n      this.multiSortKey = undefined;\n      /** Set to `true` to suppress sorting of un-sorted data to match original row data.\n       * @default false\n       */\n      this.suppressMaintainUnsortedOrder = undefined;\n      /** Icons to use inside the grid instead of the grid's default icons.\n       * @initial\n       */\n      this.icons = undefined;\n      /** Default row height in pixels.\n       * @default 25\n       */\n      this.rowHeight = undefined;\n      /** The style properties to apply to all rows. Set to an object of key (style names) and values (style values).\n       * @agModule `RowStyleModule`\n       */\n      this.rowStyle = undefined;\n      /** CSS class(es) for all rows. Provide either a string (class name) or array of strings (array of class names).\n       * @agModule `RowStyleModule`\n       */\n      this.rowClass = undefined;\n      /** Rules which can be applied to include certain CSS classes.\n       * @agModule `RowStyleModule`\n       */\n      this.rowClassRules = undefined;\n      /** Set to `true` to not highlight rows by adding the `ag-row-hover` CSS class.\n       * @default false\n       */\n      this.suppressRowHoverHighlight = undefined;\n      /** Uses CSS `top` instead of CSS `transform` for positioning rows. Useful if the transform function is causing issues such as used in row spanning.\n       * @default false\n       * @initial\n       */\n      this.suppressRowTransform = undefined;\n      /** Set to `true` to highlight columns by adding the `ag-column-hover` CSS class.\n       * @default false\n       * @agModule `ColumnHoverModule`\n       */\n      this.columnHoverHighlight = undefined;\n      /** Provide a custom `gridId` for this instance of the grid. Value will be set on the root DOM node using the attribute `grid-id` as well as being accessible via the `gridApi.getGridId()` method.\n       * @initial\n       */\n      this.gridId = undefined;\n      /** When enabled, sorts only the rows added/updated by a transaction.\n       * @default false\n       */\n      this.deltaSort = undefined;\n      /**/\n      this.treeDataDisplayType = undefined;\n      /** @initial\n       */\n      this.enableGroupEdit = undefined;\n      /** Initial state for the grid. Only read once on initialization. Can be used in conjunction with `api.getState()` to save and restore grid state.\n       * @initial\n       * @agModule `GridStateModule`\n       */\n      this.initialState = undefined;\n      /** Theme to apply to the grid, or the string \"legacy\" to opt back into the\n       * v32 style of theming where themes were imported as CSS files and applied\n       * by setting a class name on the parent element.\n       *\n       * @default themeQuartz\n       */\n      this.theme = undefined;\n      /** If your theme uses a font that is available on Google Fonts, pass true to load it from Google's CDN.\n       */\n      this.loadThemeGoogleFonts = undefined;\n      /** The CSS layer that this theme should be rendered onto. If your\n       * application loads its styles into a CSS layer, use this to load the grid\n       * styles into a previous layer so that application styles can override grid\n       * styles.\n       *\n       * @see https://developer.mozilla.org/en-US/docs/Web/CSS/@layer\n       */\n      this.themeCssLayer = undefined;\n      /** The nonce attribute to set on style elements added to the document by\n       * themes. If \"foo\" is passed to this property, the grid can use the Content\n       * Security Policy `style-src 'nonce-foo'`, instead of the less secure\n       * `style-src 'unsafe-inline'`.\n       *\n       * Note: CSP nonces are global to a page, where a page has multiple grids,\n       * every one must have the same styleNonce set.\n       */\n      this.styleNonce = undefined;\n      /** An element to insert style elements into when injecting styles into the\n       * grid. If undefined, styles will be added to the document head for grids\n       * rendered in the main document fragment, or to the grid wrapper element\n       * for other grids (e.g. those rendered in a shadow DOM or detached from the\n       * document).\n       *\n       * @initial\n       */\n      this.themeStyleContainer = undefined;\n      /** For customising the context menu.\n       * @agModule `ContextMenuModule`\n       */\n      this.getContextMenuItems = undefined;\n      /** For customising the main 'column header' menu.\n       * @initial\n       * @agModule `ColumnMenuModule`\n       */\n      this.getMainMenuItems = undefined;\n      /** Allows user to process popups after they are created. Applications can use this if they want to, for example, reposition the popup.\n       */\n      this.postProcessPopup = undefined;\n      /** Allows the user to process the columns being removed from the pinned section because the viewport is too small to accommodate them.\n       * Returns an array of columns to be removed from the pinned areas.\n       * @initial\n       */\n      this.processUnpinnedColumns = undefined;\n      /** Allows you to process cells for the clipboard. Handy if for example you have `Date` objects that need to have a particular format if importing into Excel.\n       * @agModule `ClipboardModule`\n       */\n      this.processCellForClipboard = undefined;\n      /** Allows you to process header values for the clipboard.\n       * @agModule `ClipboardModule`\n       */\n      this.processHeaderForClipboard = undefined;\n      /** Allows you to process group header values for the clipboard.\n       * @agModule `ClipboardModule`\n       */\n      this.processGroupHeaderForClipboard = undefined;\n      /** Allows you to process cells from the clipboard. Handy if for example you have number fields and want to block non-numbers from getting into the grid.\n       * @agModule `ClipboardModule`\n       */\n      this.processCellFromClipboard = undefined;\n      /** Allows you to get the data that would otherwise go to the clipboard. To be used when you want to control the 'copy to clipboard' operation yourself.\n       * @agModule `ClipboardModule`\n       */\n      this.sendToClipboard = undefined;\n      /** Allows complete control of the paste operation, including cancelling the operation (so nothing happens) or replacing the data with other data.\n       * @agModule `ClipboardModule`\n       */\n      this.processDataFromClipboard = undefined;\n      /** Grid calls this method to know if an external filter is present.\n       * @agModule `ExternalFilterModule`\n       */\n      this.isExternalFilterPresent = undefined;\n      /** Should return `true` if external filter passes, otherwise `false`.\n       * @agModule `ExternalFilterModule`\n       */\n      this.doesExternalFilterPass = undefined;\n      /** Callback to be used to customise the chart toolbar items.\n       * @initial\n       * @agModule `IntegratedChartsModule`\n       */\n      this.getChartToolbarItems = undefined;\n      /** Callback to enable displaying the chart in an alternative chart container.\n       * @initial\n       * @agModule `IntegratedChartsModule`\n       */\n      this.createChartContainer = undefined;\n      /** Allows overriding the element that will be focused when the grid receives focus from outside elements (tabbing into the grid).\n       * @returns `True` if this function should override the grid's default behavior, `False` to allow the grid's default behavior.\n       */\n      this.focusGridInnerElement = undefined;\n      /** Allows overriding the default behaviour for when user hits navigation (arrow) key when a header is focused. Return the next Header position to navigate to or `null` to stay on current header.\n       */\n      this.navigateToNextHeader = undefined;\n      /** Allows overriding the default behaviour for when user hits `Tab` key when a header is focused.\n       * Return the next header position to navigate to, `true` to stay on the current header,\n       * or `false` to let the browser handle the tab behaviour.\n       */\n      this.tabToNextHeader = undefined;\n      /** Allows overriding the default behaviour for when user hits navigation (arrow) key when a cell is focused. Return the next Cell position to navigate to or `null` to stay on current cell.\n       */\n      this.navigateToNextCell = undefined;\n      /** Allows overriding the default behaviour for when user hits `Tab` key when a cell is focused.\n       * Return the next cell position to navigate to, `true` to stay on the current cell,\n       * or `false` to let the browser handle the tab behaviour.\n       */\n      this.tabToNextCell = undefined;\n      /** A callback for localising text within the grid.\n       * @initial\n       * @agModule `LocaleModule`\n       */\n      this.getLocaleText = undefined;\n      /** Allows overriding what `document` is used. Currently used by Drag and Drop (may extend to other places in the future). Use this when you want the grid to use a different `document` than the one available on the global scope. This can happen if docking out components (something which Electron supports)\n       */\n      this.getDocument = undefined;\n      /** Allows user to format the numbers in the pagination panel, i.e. 'row count' and 'page number' labels. This is for pagination panel only, to format numbers inside the grid's cells (i.e. your data), then use `valueFormatter` in the column definitions.\n       * @initial\n       * @agModule `PaginationModule`\n       */\n      this.paginationNumberFormatter = undefined;\n      /** Callback to use when you need access to more then the current column for aggregation.\n       * @agModule `RowGroupingModule` / `PivotModule` / `TreeDataModule` / `ServerSideRowModelModule`\n       */\n      this.getGroupRowAgg = undefined;\n      /** (Client-side Row Model only) Allows groups to be open by default.\n       * @agModule `RowGroupingModule` / `TreeDataModule`\n       */\n      this.isGroupOpenByDefault = undefined;\n      /** Allows default sorting of groups.\n       * @agModule `RowGroupingModule`\n       */\n      this.initialGroupOrderComparator = undefined;\n      /** Callback for the mutation of the generated pivot result column definitions\n       * @agModule `PivotModule`\n       */\n      this.processPivotResultColDef = undefined;\n      /** Callback for the mutation of the generated pivot result column group definitions\n       * @agModule `PivotModule`\n       */\n      this.processPivotResultColGroupDef = undefined;\n      /** Callback to be used when working with Tree Data when `treeData = true`.\n       * @initial\n       * @agModule `TreeDataModule`\n       */\n      this.getDataPath = undefined;\n      /** Allows setting the child count for a group row.\n       * @initial\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.getChildCount = undefined;\n      /** Allows providing different params for different levels of grouping.\n       * @initial\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.getServerSideGroupLevelParams = undefined;\n      /** Allows groups to be open by default.\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.isServerSideGroupOpenByDefault = undefined;\n      /** Allows cancelling transactions.\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.isApplyServerSideTransaction = undefined;\n      /** SSRM Tree Data: Allows specifying which rows are expandable.\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.isServerSideGroup = undefined;\n      /** SSRM Tree Data: Allows specifying group keys.\n       * @agModule `ServerSideRowModelModule`\n       */\n      this.getServerSideGroupKey = undefined;\n      /** Return a business key for the node. If implemented, each row in the DOM will have an attribute `row-business-key='abc'` where `abc` is what you return as the business key.\n       * This is useful for automated testing, as it provides a way for your tool to identify rows based on unique business keys.\n       */\n      this.getBusinessKeyForNode = undefined;\n      /** Provide a pure function that returns a string ID to uniquely identify a given row. This enables the grid to work optimally with data changes and updates.\n       * @initial\n       */\n      this.getRowId = undefined;\n      /** When enabled, getRowId() callback is implemented and new Row Data is set, the grid will disregard all previous rows and treat the new Row Data as new data. As a consequence, all Row State (eg selection, rendered rows) will be reset.\n       * @default false\n       * @agModule `ClientSideRowModelModule`\n       */\n      this.resetRowDataOnUpdate = undefined;\n      /** Callback fired after the row is rendered into the DOM. Should not be used to initiate side effects.\n       */\n      this.processRowPostCreate = undefined;\n      /** Callback to be used to determine which rows are selectable. By default rows are selectable, so return `false` to make a row un-selectable.\n       * @deprecated v32.2 Use `rowSelection.isRowSelectable` instead\n       */\n      this.isRowSelectable = undefined;\n      /** Callback to be used with Master Detail to determine if a row should be a master row. If `false` is returned no detail row will exist for this row.\n       * @agModule `MasterDetailModule`\n       */\n      this.isRowMaster = undefined;\n      /** Callback to fill values instead of simply copying values or increasing number values using linear progression.\n       * @deprecated v32.2 Use `cellSelection.handle.setFillValue` instead\n       */\n      this.fillOperation = undefined;\n      /** Callback to perform additional sorting after the grid has sorted the rows.\n       */\n      this.postSortRows = undefined;\n      /** Callback version of property `rowStyle` to set style for each row individually. Function should return an object of CSS values or undefined for no styles.\n       * @agModule `RowStyleModule`\n       */\n      this.getRowStyle = undefined;\n      /** Callback version of property `rowClass` to set class(es) for each row individually. Function should return either a string (class name), array of strings (array of class names) or undefined for no class.\n       * @agModule `RowStyleModule`\n       */\n      this.getRowClass = undefined;\n      /** Callback version of property `rowHeight` to set height for each row individually. Function should return a positive number of pixels, or return `null`/`undefined` to use the default row height.\n       */\n      this.getRowHeight = undefined;\n      /** Tells the grid if this row should be rendered as full width.\n       */\n      this.isFullWidthRow = undefined;\n      /** Called by managed drag and drop when rows are dropped on another row.\n       * The user can cancel the drop by returning `false` or customize the operation by returning a `IsRowValidDropPositionResult`.\n       * @agModule `RowDragModule`\n       */\n      this.isRowValidDropPosition = undefined;\n      /** The tool panel visibility has changed. Fires twice if switching between panels - once with the old panel and once with the new panel.\n       */\n      this.toolPanelVisibleChanged = new EventEmitter();\n      /** The tool panel size has been changed.\n       */\n      this.toolPanelSizeChanged = new EventEmitter();\n      /** The column menu visibility has changed. Fires twice if switching between tabs - once with the old tab and once with the new tab.\n       */\n      this.columnMenuVisibleChanged = new EventEmitter();\n      /** The context menu visibility has changed (opened or closed).\n       */\n      this.contextMenuVisibleChanged = new EventEmitter();\n      /** Cut operation has started.\n       */\n      this.cutStart = new EventEmitter();\n      /** Cut operation has ended.\n       */\n      this.cutEnd = new EventEmitter();\n      /** Paste operation has started.\n       */\n      this.pasteStart = new EventEmitter();\n      /** Paste operation has ended.\n       */\n      this.pasteEnd = new EventEmitter();\n      /** A column, or group of columns, was hidden / shown.\n       */\n      this.columnVisible = new EventEmitter();\n      /** A column, or group of columns, was pinned / unpinned.\n       */\n      this.columnPinned = new EventEmitter();\n      /** A column was resized.\n       */\n      this.columnResized = new EventEmitter();\n      /** A column was moved.\n       */\n      this.columnMoved = new EventEmitter();\n      /** A value column was added or removed.\n       */\n      this.columnValueChanged = new EventEmitter();\n      /** The pivot mode flag was changed.\n       */\n      this.columnPivotModeChanged = new EventEmitter();\n      /** A pivot column was added, removed or order changed.\n       */\n      this.columnPivotChanged = new EventEmitter();\n      /** A column group was opened / closed.\n       */\n      this.columnGroupOpened = new EventEmitter();\n      /** User set new columns.\n       */\n      this.newColumnsLoaded = new EventEmitter();\n      /** The list of grid columns changed.\n       */\n      this.gridColumnsChanged = new EventEmitter();\n      /** The list of displayed columns changed. This can result from columns open / close, column move, pivot, group, etc.\n       */\n      this.displayedColumnsChanged = new EventEmitter();\n      /** The list of rendered columns changed (only columns in the visible scrolled viewport are rendered by default).\n       */\n      this.virtualColumnsChanged = new EventEmitter();\n      /** @deprecated v32.2 Either use `onDisplayedColumnsChanged` which is fired at the same time,\n       * or use one of the more specific column events.\n       */\n      this.columnEverythingChanged = new EventEmitter();\n      /** Columns have been reset to their default state as reflected by the colDefs.\n       */\n      this.columnsReset = new EventEmitter();\n      /** A mouse cursor is initially moved over a column header.\n       */\n      this.columnHeaderMouseOver = new EventEmitter();\n      /** A mouse cursor is moved out of a column header.\n       */\n      this.columnHeaderMouseLeave = new EventEmitter();\n      /** A click is performed on a column header.\n       */\n      this.columnHeaderClicked = new EventEmitter();\n      /** A context menu action, such as right-click or context menu key press, is performed on a column header.\n       */\n      this.columnHeaderContextMenu = new EventEmitter();\n      /** Only used by Angular, React and VueJS AG Grid components (not used if doing plain JavaScript).\n       * If the grid receives changes due to bound properties, this event fires after the grid has finished processing the change.\n       */\n      this.componentStateChanged = new EventEmitter();\n      /** Cell value has changed. This occurs after the following scenarios:\n       * - Editing. Will not fire if any of the following are true:\n       *     new value is the same as old value;\n       *     `readOnlyEdit = true`;\n       *     editing was cancelled (e.g. Escape key was pressed);\n       *     or new value is of the wrong cell data type for the column.\n       *  - Cut.\n       *  - Paste.\n       *  - Cell clear (pressing Delete key).\n       *  - Fill handle.\n       *  - Copy range down.\n       *  - Undo and redo.\n       */\n      this.cellValueChanged = new EventEmitter();\n      /** Value has changed after editing. Only fires when `readOnlyEdit=true`.\n       */\n      this.cellEditRequest = new EventEmitter();\n      /** A cell's value within a row has changed. This event corresponds to Full Row Editing only.\n       */\n      this.rowValueChanged = new EventEmitter();\n      /** Editing a cell has started.\n       */\n      this.cellEditingStarted = new EventEmitter();\n      /** Editing a cell has stopped.\n       */\n      this.cellEditingStopped = new EventEmitter();\n      /** Editing a row has started (when row editing is enabled). When row editing, this event will be fired once and `cellEditingStarted` will be fired for each individual cell. Only fires when doing Full Row Editing.\n       */\n      this.rowEditingStarted = new EventEmitter();\n      /** Editing a row has stopped (when row editing is enabled). When row editing, this event will be fired once and `cellEditingStopped` will be fired for each individual cell. Only fires when doing Full Row Editing.\n       */\n      this.rowEditingStopped = new EventEmitter();\n      /** Bulk editing has started.\n       */\n      this.bulkEditingStarted = new EventEmitter();\n      /** Bulk editing has stopped.\n       */\n      this.bulkEditingStopped = new EventEmitter();\n      /** Batch editing has started (when batch editing is enabled).\n       */\n      this.batchEditingStarted = new EventEmitter();\n      /** Batch editing has stopped (when batch editing is enabled).\n       */\n      this.batchEditingStopped = new EventEmitter();\n      /** Undo operation has started.\n       */\n      this.undoStarted = new EventEmitter();\n      /** Undo operation has ended.\n       */\n      this.undoEnded = new EventEmitter();\n      /** Redo operation has started.\n       */\n      this.redoStarted = new EventEmitter();\n      /** Redo operation has ended.\n       */\n      this.redoEnded = new EventEmitter();\n      /** Cell selection delete operation (cell clear) has started.\n       */\n      this.cellSelectionDeleteStart = new EventEmitter();\n      /** Cell selection delete operation (cell clear) has ended.\n       */\n      this.cellSelectionDeleteEnd = new EventEmitter();\n      /** Range delete operation (cell clear) has started.\n       *\n       * @deprecated v32.2 Use `onCellSelectionDeleteStart` instead\n       */\n      this.rangeDeleteStart = new EventEmitter();\n      /** Range delete operation (cell clear) has ended.\n       *\n       * @deprecated v32.2 Use `onCellSelectionDeleteEnd` instead\n       */\n      this.rangeDeleteEnd = new EventEmitter();\n      /** Fill operation has started.\n       */\n      this.fillStart = new EventEmitter();\n      /** Fill operation has ended.\n       */\n      this.fillEnd = new EventEmitter();\n      /** Filter has been opened.\n       */\n      this.filterOpened = new EventEmitter();\n      /** Filter has been modified and applied.\n       */\n      this.filterChanged = new EventEmitter();\n      /** Filter was modified but not applied  (when using `enableFilterHandlers = false`). Used when filters have 'Apply' buttons.\n       */\n      this.filterModified = new EventEmitter();\n      /** Filter UI was modified (when using `enableFilterHandlers = true`).\n       */\n      this.filterUiChanged = new EventEmitter();\n      /** Floating filter UI modified (when using `enableFilterHandlers = true`).\n       */\n      this.floatingFilterUiChanged = new EventEmitter();\n      /** Advanced Filter Builder visibility has changed (opened or closed).\n       */\n      this.advancedFilterBuilderVisibleChanged = new EventEmitter();\n      /** Find details have changed (e.g. Find search value, active match, or updates to grid cells).\n       */\n      this.findChanged = new EventEmitter();\n      /** A chart has been created.\n       */\n      this.chartCreated = new EventEmitter();\n      /** The data range for the chart has been changed.\n       */\n      this.chartRangeSelectionChanged = new EventEmitter();\n      /** Formatting changes have been made by users through the Customize Panel.\n       */\n      this.chartOptionsChanged = new EventEmitter();\n      /** A chart has been destroyed.\n       */\n      this.chartDestroyed = new EventEmitter();\n      /** DOM event `keyDown` happened on a cell.\n       */\n      this.cellKeyDown = new EventEmitter();\n      /** The grid has initialised and is ready for most api calls, but may not be fully rendered yet      */\n      this.gridReady = new EventEmitter();\n      /** Fired the first time data is rendered into the grid. Use this event if you want to auto resize columns based on their contents     */\n      this.firstDataRendered = new EventEmitter();\n      /** The size of the grid `div` has changed. In other words, the grid was resized.\n       */\n      this.gridSizeChanged = new EventEmitter();\n      /** Displayed rows have changed. Triggered after sort, filter or tree expand / collapse events.\n       */\n      this.modelUpdated = new EventEmitter();\n      /** A row was removed from the DOM, for any reason. Use to clean up resources (if any) used by the row.\n       */\n      this.virtualRowRemoved = new EventEmitter();\n      /** Which rows are rendered in the DOM has changed.\n       */\n      this.viewportChanged = new EventEmitter();\n      /** The body was scrolled horizontally or vertically.\n       */\n      this.bodyScroll = new EventEmitter();\n      /** Main body of the grid has stopped scrolling, either horizontally or vertically.\n       */\n      this.bodyScrollEnd = new EventEmitter();\n      /** When dragging starts. This could be any action that uses the grid's Drag and Drop service, e.g. Column Moving, Column Resizing, Range Selection, Fill Handle, etc.\n       */\n      this.dragStarted = new EventEmitter();\n      /** When dragging stops. This could be any action that uses the grid's Drag and Drop service, e.g. Column Moving, Column Resizing, Range Selection, Fill Handle, etc.\n       */\n      this.dragStopped = new EventEmitter();\n      /** When dragging is cancelled stops. This is caused by pressing `Escape` while dragging elements within the grid that uses the grid's Drag and Drop service, e.g. Column Moving, Column Resizing, Range Selection, Fill Handle, etc.\n       */\n      this.dragCancelled = new EventEmitter();\n      /** Grid state has been updated.\n       */\n      this.stateUpdated = new EventEmitter();\n      /** Triggered every time the paging state changes. Some of the most common scenarios for this event to be triggered are:\n       *\n       *  - The page size changes.\n       *  - The current shown page is changed.\n       *  - New data is loaded onto the grid.\n       */\n      this.paginationChanged = new EventEmitter();\n      /** A drag has started, or dragging was already started and the mouse has re-entered the grid having previously left the grid.\n       */\n      this.rowDragEnter = new EventEmitter();\n      /** The mouse has moved while dragging.\n       */\n      this.rowDragMove = new EventEmitter();\n      /** The mouse has left the grid while dragging.\n       */\n      this.rowDragLeave = new EventEmitter();\n      /** The drag has finished over the grid.\n       */\n      this.rowDragEnd = new EventEmitter();\n      /** The drag has been cancelled over the grid.\n       */\n      this.rowDragCancel = new EventEmitter();\n      /** The row resize has started (Row Numbers Feature)\n       */\n      this.rowResizeStarted = new EventEmitter();\n      /** The row resize has ended (Row Numbers Feature)\n       */\n      this.rowResizeEnded = new EventEmitter();\n      /** A row group column was added, removed or reordered.\n       */\n      this.columnRowGroupChanged = new EventEmitter();\n      /** A row group was opened or closed.\n       */\n      this.rowGroupOpened = new EventEmitter();\n      /** Fired when calling either of the API methods `expandAll()` or `collapseAll()`.\n       */\n      this.expandOrCollapseAll = new EventEmitter();\n      /** Exceeded the `pivotMaxGeneratedColumns` limit when generating columns.\n       */\n      this.pivotMaxColumnsExceeded = new EventEmitter();\n      /** The client has set new pinned row data into the grid.\n       */\n      this.pinnedRowDataChanged = new EventEmitter();\n      /** A row has been pinned to top or bottom, or unpinned.\n       */\n      this.pinnedRowsChanged = new EventEmitter();\n      /** Client-Side Row Model only. The client has updated data for the grid by either a) setting new Row Data or b) Applying a Row Transaction.\n       */\n      this.rowDataUpdated = new EventEmitter();\n      /** Async transactions have been applied. Contains a list of all transaction results.\n       */\n      this.asyncTransactionsFlushed = new EventEmitter();\n      /** A server side store has finished refreshing.\n       */\n      this.storeRefreshed = new EventEmitter();\n      /** Header is focused.\n       */\n      this.headerFocused = new EventEmitter();\n      /** Cell is clicked.\n       */\n      this.cellClicked = new EventEmitter();\n      /** Cell is double clicked.\n       */\n      this.cellDoubleClicked = new EventEmitter();\n      /** Cell is focused.\n       */\n      this.cellFocused = new EventEmitter();\n      /** Mouse entered cell.\n       */\n      this.cellMouseOver = new EventEmitter();\n      /** Mouse left cell.\n       */\n      this.cellMouseOut = new EventEmitter();\n      /** Mouse down on cell.\n       */\n      this.cellMouseDown = new EventEmitter();\n      /** Row is clicked.\n       */\n      this.rowClicked = new EventEmitter();\n      /** Row is double clicked.\n       */\n      this.rowDoubleClicked = new EventEmitter();\n      /** Row is selected or deselected. The event contains the node in question, so call the node's `isSelected()` method to see if it was just selected or deselected.\n       */\n      this.rowSelected = new EventEmitter();\n      /** Row selection is changed. Use the `selectedNodes` field to get the list of selected nodes at the time of the event. When using the SSRM, `selectedNodes` will be `null`\n       * when selecting all nodes. Instead, refer to the `serverSideState` field.\n       */\n      this.selectionChanged = new EventEmitter();\n      /** Cell is right clicked.\n       */\n      this.cellContextMenu = new EventEmitter();\n      /** A change to range selection has occurred.\n       *\n       * @deprecated v32.2 Use `onCellSelectionChanged` instead\n       */\n      this.rangeSelectionChanged = new EventEmitter();\n      /** A change to cell selection has occurred.\n       */\n      this.cellSelectionChanged = new EventEmitter();\n      /** A tooltip has been displayed     */\n      this.tooltipShow = new EventEmitter();\n      /** A tooltip was hidden     */\n      this.tooltipHide = new EventEmitter();\n      /** Sort has changed. The grid also listens for this and updates the model.\n       */\n      this.sortChanged = new EventEmitter();\n      this._nativeElement = elementDef.nativeElement;\n      this._fullyReady.then(() => {\n        // Register the status flag reset before any events are fired\n        // so that we can swap to synchronous event firing as soon as the grid is ready\n        this._holdEvents = false;\n      });\n    }\n    ngAfterViewInit() {\n      // Run the setup outside of angular so all the event handlers that are created do not trigger change detection\n      this._angularFrameworkOverrides.runOutsideAngular(() => {\n        this._frameworkCompWrapper.setViewContainerRef(this._viewContainerRef, this._angularFrameworkOverrides);\n        // Get all the inputs that are valid GridOptions\n        const gridOptionKeys = Object.keys(this).filter(key => !(key.startsWith('_') || key == 'gridOptions' || key == 'modules' || this[key] instanceof EventEmitter));\n        const coercedGridOptions = {};\n        gridOptionKeys.forEach(key => {\n          const valueToUse = getValueOrCoercedValue(key, this[key]);\n          coercedGridOptions[key] = valueToUse;\n        });\n        const mergedGridOps = _combineAttributesAndGridOptions(this.gridOptions, coercedGridOptions, gridOptionKeys);\n        const gridParams = {\n          globalListener: this.globalListener.bind(this),\n          frameworkOverrides: this._angularFrameworkOverrides,\n          providedBeanInstances: {\n            frameworkCompWrapper: this._frameworkCompWrapper\n          },\n          modules: this.modules || [],\n          setThemeOnGridDiv: true\n        };\n        const api = createGrid(this._nativeElement, mergedGridOps, gridParams);\n        if (api) {\n          this.api = api;\n        }\n        this._initialised = true;\n        // sometimes, especially in large client apps gridReady can fire before ngAfterViewInit\n        // this ties these together so that gridReady will always fire after agGridAngular's ngAfterViewInit\n        // the actual containing component's ngAfterViewInit will fire just after agGridAngular's\n        this._resolveFullyReady();\n      });\n    }\n    ngOnChanges(changes) {\n      if (this._initialised) {\n        // Run the changes outside of angular so any event handlers that are created do not trigger change detection\n        this._angularFrameworkOverrides.runOutsideAngular(() => {\n          const gridOptions = {};\n          for (const key of Object.keys(changes)) {\n            const value = changes[key];\n            gridOptions[key] = value.currentValue;\n          }\n          _processOnChange(gridOptions, this.api);\n        });\n      }\n    }\n    ngOnDestroy() {\n      if (this._initialised) {\n        // need to do this before the destroy, so we know not to emit any events\n        // while tearing down the grid.\n        this._destroyed = true;\n        // could be null if grid failed to initialise\n        this.api?.destroy();\n      }\n    }\n    // we'll emit the emit if a user is listening for a given event either on the component via normal angular binding\n    // or via gridOptions\n    isEmitterUsed(eventType) {\n      const emitter = this[eventType];\n      // For RxJs compatibility we need to check for observed v7+ or observers v6\n      const emitterAny = emitter;\n      const hasEmitter = emitterAny?.observed ?? emitterAny?.observers?.length > 0;\n      // gridReady => onGridReady\n      const asEventName = `on${eventType.charAt(0).toUpperCase()}${eventType.substring(1)}`;\n      const hasGridOptionListener = !!this.gridOptions && !!this.gridOptions[asEventName];\n      return hasEmitter || hasGridOptionListener;\n    }\n    globalListener(eventType, event) {\n      // if we are tearing down, don't emit angular events, as this causes\n      // problems with the angular router\n      if (this._destroyed) {\n        return;\n      }\n      // generically look up the eventType\n      const emitter = this[eventType];\n      if (emitter && this.isEmitterUsed(eventType)) {\n        // Make sure we emit within the angular zone, so change detection works properly\n        const fireEmitter = () => this._angularFrameworkOverrides.runInsideAngular(() => emitter.emit(event));\n        if (this._holdEvents) {\n          // if the user is listening to events, wait for ngAfterViewInit to fire first, then emit the grid events\n          this._fullyReady.then(() => fireEmitter());\n        } else {\n          fireEmitter();\n        }\n      }\n    }\n    static {\n      this.ɵfac = function AgGridAngular_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AgGridAngular)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(AngularFrameworkOverrides), i0.ɵɵdirectiveInject(AngularFrameworkComponentWrapper));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: AgGridAngular,\n        selectors: [[\"ag-grid-angular\"]],\n        inputs: {\n          gridOptions: \"gridOptions\",\n          modules: \"modules\",\n          statusBar: \"statusBar\",\n          sideBar: \"sideBar\",\n          suppressContextMenu: [2, \"suppressContextMenu\", \"suppressContextMenu\", booleanAttribute],\n          preventDefaultOnContextMenu: [2, \"preventDefaultOnContextMenu\", \"preventDefaultOnContextMenu\", booleanAttribute],\n          allowContextMenuWithControlKey: [2, \"allowContextMenuWithControlKey\", \"allowContextMenuWithControlKey\", booleanAttribute],\n          columnMenu: \"columnMenu\",\n          suppressMenuHide: [2, \"suppressMenuHide\", \"suppressMenuHide\", booleanAttribute],\n          enableBrowserTooltips: [2, \"enableBrowserTooltips\", \"enableBrowserTooltips\", booleanAttribute],\n          tooltipTrigger: \"tooltipTrigger\",\n          tooltipShowDelay: \"tooltipShowDelay\",\n          tooltipHideDelay: \"tooltipHideDelay\",\n          tooltipMouseTrack: [2, \"tooltipMouseTrack\", \"tooltipMouseTrack\", booleanAttribute],\n          tooltipShowMode: \"tooltipShowMode\",\n          tooltipInteraction: [2, \"tooltipInteraction\", \"tooltipInteraction\", booleanAttribute],\n          popupParent: \"popupParent\",\n          copyHeadersToClipboard: [2, \"copyHeadersToClipboard\", \"copyHeadersToClipboard\", booleanAttribute],\n          copyGroupHeadersToClipboard: [2, \"copyGroupHeadersToClipboard\", \"copyGroupHeadersToClipboard\", booleanAttribute],\n          clipboardDelimiter: \"clipboardDelimiter\",\n          suppressCopyRowsToClipboard: [2, \"suppressCopyRowsToClipboard\", \"suppressCopyRowsToClipboard\", booleanAttribute],\n          suppressCopySingleCellRanges: [2, \"suppressCopySingleCellRanges\", \"suppressCopySingleCellRanges\", booleanAttribute],\n          suppressLastEmptyLineOnPaste: [2, \"suppressLastEmptyLineOnPaste\", \"suppressLastEmptyLineOnPaste\", booleanAttribute],\n          suppressClipboardPaste: [2, \"suppressClipboardPaste\", \"suppressClipboardPaste\", booleanAttribute],\n          suppressClipboardApi: [2, \"suppressClipboardApi\", \"suppressClipboardApi\", booleanAttribute],\n          suppressCutToClipboard: [2, \"suppressCutToClipboard\", \"suppressCutToClipboard\", booleanAttribute],\n          columnDefs: \"columnDefs\",\n          defaultColDef: \"defaultColDef\",\n          defaultColGroupDef: \"defaultColGroupDef\",\n          columnTypes: \"columnTypes\",\n          dataTypeDefinitions: \"dataTypeDefinitions\",\n          maintainColumnOrder: [2, \"maintainColumnOrder\", \"maintainColumnOrder\", booleanAttribute],\n          enableStrictPivotColumnOrder: [2, \"enableStrictPivotColumnOrder\", \"enableStrictPivotColumnOrder\", booleanAttribute],\n          suppressFieldDotNotation: [2, \"suppressFieldDotNotation\", \"suppressFieldDotNotation\", booleanAttribute],\n          headerHeight: \"headerHeight\",\n          groupHeaderHeight: \"groupHeaderHeight\",\n          floatingFiltersHeight: \"floatingFiltersHeight\",\n          pivotHeaderHeight: \"pivotHeaderHeight\",\n          pivotGroupHeaderHeight: \"pivotGroupHeaderHeight\",\n          hidePaddedHeaderRows: [2, \"hidePaddedHeaderRows\", \"hidePaddedHeaderRows\", booleanAttribute],\n          allowDragFromColumnsToolPanel: [2, \"allowDragFromColumnsToolPanel\", \"allowDragFromColumnsToolPanel\", booleanAttribute],\n          suppressMovableColumns: [2, \"suppressMovableColumns\", \"suppressMovableColumns\", booleanAttribute],\n          suppressColumnMoveAnimation: [2, \"suppressColumnMoveAnimation\", \"suppressColumnMoveAnimation\", booleanAttribute],\n          suppressMoveWhenColumnDragging: [2, \"suppressMoveWhenColumnDragging\", \"suppressMoveWhenColumnDragging\", booleanAttribute],\n          suppressDragLeaveHidesColumns: [2, \"suppressDragLeaveHidesColumns\", \"suppressDragLeaveHidesColumns\", booleanAttribute],\n          suppressGroupChangesColumnVisibility: \"suppressGroupChangesColumnVisibility\",\n          suppressMakeColumnVisibleAfterUnGroup: [2, \"suppressMakeColumnVisibleAfterUnGroup\", \"suppressMakeColumnVisibleAfterUnGroup\", booleanAttribute],\n          suppressRowGroupHidesColumns: [2, \"suppressRowGroupHidesColumns\", \"suppressRowGroupHidesColumns\", booleanAttribute],\n          colResizeDefault: \"colResizeDefault\",\n          suppressAutoSize: [2, \"suppressAutoSize\", \"suppressAutoSize\", booleanAttribute],\n          autoSizePadding: \"autoSizePadding\",\n          skipHeaderOnAutoSize: [2, \"skipHeaderOnAutoSize\", \"skipHeaderOnAutoSize\", booleanAttribute],\n          autoSizeStrategy: \"autoSizeStrategy\",\n          components: \"components\",\n          editType: \"editType\",\n          suppressStartEditOnTab: [2, \"suppressStartEditOnTab\", \"suppressStartEditOnTab\", booleanAttribute],\n          getFullRowEditValidationErrors: \"getFullRowEditValidationErrors\",\n          invalidEditValueMode: \"invalidEditValueMode\",\n          singleClickEdit: [2, \"singleClickEdit\", \"singleClickEdit\", booleanAttribute],\n          suppressClickEdit: [2, \"suppressClickEdit\", \"suppressClickEdit\", booleanAttribute],\n          readOnlyEdit: [2, \"readOnlyEdit\", \"readOnlyEdit\", booleanAttribute],\n          stopEditingWhenCellsLoseFocus: [2, \"stopEditingWhenCellsLoseFocus\", \"stopEditingWhenCellsLoseFocus\", booleanAttribute],\n          enterNavigatesVertically: [2, \"enterNavigatesVertically\", \"enterNavigatesVertically\", booleanAttribute],\n          enterNavigatesVerticallyAfterEdit: [2, \"enterNavigatesVerticallyAfterEdit\", \"enterNavigatesVerticallyAfterEdit\", booleanAttribute],\n          enableCellEditingOnBackspace: [2, \"enableCellEditingOnBackspace\", \"enableCellEditingOnBackspace\", booleanAttribute],\n          undoRedoCellEditing: [2, \"undoRedoCellEditing\", \"undoRedoCellEditing\", booleanAttribute],\n          undoRedoCellEditingLimit: \"undoRedoCellEditingLimit\",\n          defaultCsvExportParams: \"defaultCsvExportParams\",\n          suppressCsvExport: [2, \"suppressCsvExport\", \"suppressCsvExport\", booleanAttribute],\n          defaultExcelExportParams: \"defaultExcelExportParams\",\n          suppressExcelExport: [2, \"suppressExcelExport\", \"suppressExcelExport\", booleanAttribute],\n          excelStyles: \"excelStyles\",\n          findSearchValue: \"findSearchValue\",\n          findOptions: \"findOptions\",\n          quickFilterText: \"quickFilterText\",\n          cacheQuickFilter: [2, \"cacheQuickFilter\", \"cacheQuickFilter\", booleanAttribute],\n          includeHiddenColumnsInQuickFilter: [2, \"includeHiddenColumnsInQuickFilter\", \"includeHiddenColumnsInQuickFilter\", booleanAttribute],\n          quickFilterParser: \"quickFilterParser\",\n          quickFilterMatcher: \"quickFilterMatcher\",\n          applyQuickFilterBeforePivotOrAgg: [2, \"applyQuickFilterBeforePivotOrAgg\", \"applyQuickFilterBeforePivotOrAgg\", booleanAttribute],\n          excludeChildrenWhenTreeDataFiltering: [2, \"excludeChildrenWhenTreeDataFiltering\", \"excludeChildrenWhenTreeDataFiltering\", booleanAttribute],\n          enableAdvancedFilter: [2, \"enableAdvancedFilter\", \"enableAdvancedFilter\", booleanAttribute],\n          alwaysPassFilter: \"alwaysPassFilter\",\n          includeHiddenColumnsInAdvancedFilter: [2, \"includeHiddenColumnsInAdvancedFilter\", \"includeHiddenColumnsInAdvancedFilter\", booleanAttribute],\n          advancedFilterParent: \"advancedFilterParent\",\n          advancedFilterBuilderParams: \"advancedFilterBuilderParams\",\n          advancedFilterParams: \"advancedFilterParams\",\n          suppressAdvancedFilterEval: [2, \"suppressAdvancedFilterEval\", \"suppressAdvancedFilterEval\", booleanAttribute],\n          suppressSetFilterByDefault: [2, \"suppressSetFilterByDefault\", \"suppressSetFilterByDefault\", booleanAttribute],\n          enableFilterHandlers: [2, \"enableFilterHandlers\", \"enableFilterHandlers\", booleanAttribute],\n          filterHandlers: \"filterHandlers\",\n          enableCharts: [2, \"enableCharts\", \"enableCharts\", booleanAttribute],\n          chartThemes: \"chartThemes\",\n          customChartThemes: \"customChartThemes\",\n          chartThemeOverrides: \"chartThemeOverrides\",\n          chartToolPanelsDef: \"chartToolPanelsDef\",\n          chartMenuItems: \"chartMenuItems\",\n          loadingCellRenderer: \"loadingCellRenderer\",\n          loadingCellRendererParams: \"loadingCellRendererParams\",\n          loadingCellRendererSelector: \"loadingCellRendererSelector\",\n          localeText: \"localeText\",\n          masterDetail: [2, \"masterDetail\", \"masterDetail\", booleanAttribute],\n          keepDetailRows: [2, \"keepDetailRows\", \"keepDetailRows\", booleanAttribute],\n          keepDetailRowsCount: \"keepDetailRowsCount\",\n          detailCellRenderer: \"detailCellRenderer\",\n          detailCellRendererParams: \"detailCellRendererParams\",\n          detailRowHeight: \"detailRowHeight\",\n          detailRowAutoHeight: [2, \"detailRowAutoHeight\", \"detailRowAutoHeight\", booleanAttribute],\n          context: \"context\",\n          alignedGrids: \"alignedGrids\",\n          tabIndex: \"tabIndex\",\n          rowBuffer: \"rowBuffer\",\n          valueCache: [2, \"valueCache\", \"valueCache\", booleanAttribute],\n          valueCacheNeverExpires: [2, \"valueCacheNeverExpires\", \"valueCacheNeverExpires\", booleanAttribute],\n          enableCellExpressions: [2, \"enableCellExpressions\", \"enableCellExpressions\", booleanAttribute],\n          suppressTouch: [2, \"suppressTouch\", \"suppressTouch\", booleanAttribute],\n          suppressFocusAfterRefresh: [2, \"suppressFocusAfterRefresh\", \"suppressFocusAfterRefresh\", booleanAttribute],\n          suppressBrowserResizeObserver: [2, \"suppressBrowserResizeObserver\", \"suppressBrowserResizeObserver\", booleanAttribute],\n          suppressPropertyNamesCheck: [2, \"suppressPropertyNamesCheck\", \"suppressPropertyNamesCheck\", booleanAttribute],\n          suppressChangeDetection: [2, \"suppressChangeDetection\", \"suppressChangeDetection\", booleanAttribute],\n          debug: [2, \"debug\", \"debug\", booleanAttribute],\n          loading: [2, \"loading\", \"loading\", booleanAttribute],\n          overlayLoadingTemplate: \"overlayLoadingTemplate\",\n          loadingOverlayComponent: \"loadingOverlayComponent\",\n          loadingOverlayComponentParams: \"loadingOverlayComponentParams\",\n          suppressLoadingOverlay: [2, \"suppressLoadingOverlay\", \"suppressLoadingOverlay\", booleanAttribute],\n          overlayNoRowsTemplate: \"overlayNoRowsTemplate\",\n          noRowsOverlayComponent: \"noRowsOverlayComponent\",\n          noRowsOverlayComponentParams: \"noRowsOverlayComponentParams\",\n          suppressNoRowsOverlay: [2, \"suppressNoRowsOverlay\", \"suppressNoRowsOverlay\", booleanAttribute],\n          pagination: [2, \"pagination\", \"pagination\", booleanAttribute],\n          paginationPageSize: \"paginationPageSize\",\n          paginationPageSizeSelector: \"paginationPageSizeSelector\",\n          paginationAutoPageSize: [2, \"paginationAutoPageSize\", \"paginationAutoPageSize\", booleanAttribute],\n          paginateChildRows: [2, \"paginateChildRows\", \"paginateChildRows\", booleanAttribute],\n          suppressPaginationPanel: [2, \"suppressPaginationPanel\", \"suppressPaginationPanel\", booleanAttribute],\n          pivotMode: [2, \"pivotMode\", \"pivotMode\", booleanAttribute],\n          pivotPanelShow: \"pivotPanelShow\",\n          pivotMaxGeneratedColumns: \"pivotMaxGeneratedColumns\",\n          pivotDefaultExpanded: \"pivotDefaultExpanded\",\n          pivotColumnGroupTotals: \"pivotColumnGroupTotals\",\n          pivotRowTotals: \"pivotRowTotals\",\n          pivotSuppressAutoColumn: [2, \"pivotSuppressAutoColumn\", \"pivotSuppressAutoColumn\", booleanAttribute],\n          suppressExpandablePivotGroups: [2, \"suppressExpandablePivotGroups\", \"suppressExpandablePivotGroups\", booleanAttribute],\n          functionsReadOnly: [2, \"functionsReadOnly\", \"functionsReadOnly\", booleanAttribute],\n          aggFuncs: \"aggFuncs\",\n          suppressAggFuncInHeader: [2, \"suppressAggFuncInHeader\", \"suppressAggFuncInHeader\", booleanAttribute],\n          alwaysAggregateAtRootLevel: [2, \"alwaysAggregateAtRootLevel\", \"alwaysAggregateAtRootLevel\", booleanAttribute],\n          aggregateOnlyChangedColumns: [2, \"aggregateOnlyChangedColumns\", \"aggregateOnlyChangedColumns\", booleanAttribute],\n          suppressAggFilteredOnly: [2, \"suppressAggFilteredOnly\", \"suppressAggFilteredOnly\", booleanAttribute],\n          removePivotHeaderRowWhenSingleValueColumn: [2, \"removePivotHeaderRowWhenSingleValueColumn\", \"removePivotHeaderRowWhenSingleValueColumn\", booleanAttribute],\n          animateRows: [2, \"animateRows\", \"animateRows\", booleanAttribute],\n          cellFlashDuration: \"cellFlashDuration\",\n          cellFadeDuration: \"cellFadeDuration\",\n          allowShowChangeAfterFilter: [2, \"allowShowChangeAfterFilter\", \"allowShowChangeAfterFilter\", booleanAttribute],\n          domLayout: \"domLayout\",\n          ensureDomOrder: [2, \"ensureDomOrder\", \"ensureDomOrder\", booleanAttribute],\n          enableCellSpan: [2, \"enableCellSpan\", \"enableCellSpan\", booleanAttribute],\n          enableRtl: [2, \"enableRtl\", \"enableRtl\", booleanAttribute],\n          suppressColumnVirtualisation: [2, \"suppressColumnVirtualisation\", \"suppressColumnVirtualisation\", booleanAttribute],\n          suppressMaxRenderedRowRestriction: [2, \"suppressMaxRenderedRowRestriction\", \"suppressMaxRenderedRowRestriction\", booleanAttribute],\n          suppressRowVirtualisation: [2, \"suppressRowVirtualisation\", \"suppressRowVirtualisation\", booleanAttribute],\n          rowDragManaged: [2, \"rowDragManaged\", \"rowDragManaged\", booleanAttribute],\n          rowDragInsertDelay: \"rowDragInsertDelay\",\n          suppressRowDrag: [2, \"suppressRowDrag\", \"suppressRowDrag\", booleanAttribute],\n          suppressMoveWhenRowDragging: [2, \"suppressMoveWhenRowDragging\", \"suppressMoveWhenRowDragging\", booleanAttribute],\n          rowDragEntireRow: [2, \"rowDragEntireRow\", \"rowDragEntireRow\", booleanAttribute],\n          rowDragMultiRow: [2, \"rowDragMultiRow\", \"rowDragMultiRow\", booleanAttribute],\n          rowDragText: \"rowDragText\",\n          dragAndDropImageComponent: \"dragAndDropImageComponent\",\n          dragAndDropImageComponentParams: \"dragAndDropImageComponentParams\",\n          fullWidthCellRenderer: \"fullWidthCellRenderer\",\n          fullWidthCellRendererParams: \"fullWidthCellRendererParams\",\n          embedFullWidthRows: [2, \"embedFullWidthRows\", \"embedFullWidthRows\", booleanAttribute],\n          groupDisplayType: \"groupDisplayType\",\n          groupDefaultExpanded: \"groupDefaultExpanded\",\n          autoGroupColumnDef: \"autoGroupColumnDef\",\n          groupMaintainOrder: [2, \"groupMaintainOrder\", \"groupMaintainOrder\", booleanAttribute],\n          groupSelectsChildren: [2, \"groupSelectsChildren\", \"groupSelectsChildren\", booleanAttribute],\n          groupLockGroupColumns: \"groupLockGroupColumns\",\n          groupAggFiltering: \"groupAggFiltering\",\n          groupTotalRow: \"groupTotalRow\",\n          grandTotalRow: \"grandTotalRow\",\n          suppressStickyTotalRow: \"suppressStickyTotalRow\",\n          groupSuppressBlankHeader: [2, \"groupSuppressBlankHeader\", \"groupSuppressBlankHeader\", booleanAttribute],\n          groupSelectsFiltered: [2, \"groupSelectsFiltered\", \"groupSelectsFiltered\", booleanAttribute],\n          showOpenedGroup: [2, \"showOpenedGroup\", \"showOpenedGroup\", booleanAttribute],\n          groupHideParentOfSingleChild: \"groupHideParentOfSingleChild\",\n          groupRemoveSingleChildren: [2, \"groupRemoveSingleChildren\", \"groupRemoveSingleChildren\", booleanAttribute],\n          groupRemoveLowestSingleChildren: [2, \"groupRemoveLowestSingleChildren\", \"groupRemoveLowestSingleChildren\", booleanAttribute],\n          groupHideOpenParents: [2, \"groupHideOpenParents\", \"groupHideOpenParents\", booleanAttribute],\n          groupAllowUnbalanced: [2, \"groupAllowUnbalanced\", \"groupAllowUnbalanced\", booleanAttribute],\n          rowGroupPanelShow: \"rowGroupPanelShow\",\n          groupRowRenderer: \"groupRowRenderer\",\n          groupRowRendererParams: \"groupRowRendererParams\",\n          treeData: [2, \"treeData\", \"treeData\", booleanAttribute],\n          treeDataChildrenField: \"treeDataChildrenField\",\n          treeDataParentIdField: \"treeDataParentIdField\",\n          rowGroupPanelSuppressSort: [2, \"rowGroupPanelSuppressSort\", \"rowGroupPanelSuppressSort\", booleanAttribute],\n          suppressGroupRowsSticky: [2, \"suppressGroupRowsSticky\", \"suppressGroupRowsSticky\", booleanAttribute],\n          pinnedTopRowData: \"pinnedTopRowData\",\n          pinnedBottomRowData: \"pinnedBottomRowData\",\n          enableRowPinning: \"enableRowPinning\",\n          isRowPinnable: \"isRowPinnable\",\n          isRowPinned: \"isRowPinned\",\n          rowModelType: \"rowModelType\",\n          rowData: \"rowData\",\n          asyncTransactionWaitMillis: \"asyncTransactionWaitMillis\",\n          suppressModelUpdateAfterUpdateTransaction: [2, \"suppressModelUpdateAfterUpdateTransaction\", \"suppressModelUpdateAfterUpdateTransaction\", booleanAttribute],\n          datasource: \"datasource\",\n          cacheOverflowSize: \"cacheOverflowSize\",\n          infiniteInitialRowCount: \"infiniteInitialRowCount\",\n          serverSideInitialRowCount: \"serverSideInitialRowCount\",\n          suppressServerSideFullWidthLoadingRow: [2, \"suppressServerSideFullWidthLoadingRow\", \"suppressServerSideFullWidthLoadingRow\", booleanAttribute],\n          cacheBlockSize: \"cacheBlockSize\",\n          maxBlocksInCache: \"maxBlocksInCache\",\n          maxConcurrentDatasourceRequests: \"maxConcurrentDatasourceRequests\",\n          blockLoadDebounceMillis: \"blockLoadDebounceMillis\",\n          purgeClosedRowNodes: [2, \"purgeClosedRowNodes\", \"purgeClosedRowNodes\", booleanAttribute],\n          serverSideDatasource: \"serverSideDatasource\",\n          serverSideSortAllLevels: [2, \"serverSideSortAllLevels\", \"serverSideSortAllLevels\", booleanAttribute],\n          serverSideEnableClientSideSort: [2, \"serverSideEnableClientSideSort\", \"serverSideEnableClientSideSort\", booleanAttribute],\n          serverSideOnlyRefreshFilteredGroups: [2, \"serverSideOnlyRefreshFilteredGroups\", \"serverSideOnlyRefreshFilteredGroups\", booleanAttribute],\n          serverSidePivotResultFieldSeparator: \"serverSidePivotResultFieldSeparator\",\n          viewportDatasource: \"viewportDatasource\",\n          viewportRowModelPageSize: \"viewportRowModelPageSize\",\n          viewportRowModelBufferSize: \"viewportRowModelBufferSize\",\n          alwaysShowHorizontalScroll: [2, \"alwaysShowHorizontalScroll\", \"alwaysShowHorizontalScroll\", booleanAttribute],\n          alwaysShowVerticalScroll: [2, \"alwaysShowVerticalScroll\", \"alwaysShowVerticalScroll\", booleanAttribute],\n          debounceVerticalScrollbar: [2, \"debounceVerticalScrollbar\", \"debounceVerticalScrollbar\", booleanAttribute],\n          suppressHorizontalScroll: [2, \"suppressHorizontalScroll\", \"suppressHorizontalScroll\", booleanAttribute],\n          suppressScrollOnNewData: [2, \"suppressScrollOnNewData\", \"suppressScrollOnNewData\", booleanAttribute],\n          suppressScrollWhenPopupsAreOpen: [2, \"suppressScrollWhenPopupsAreOpen\", \"suppressScrollWhenPopupsAreOpen\", booleanAttribute],\n          suppressAnimationFrame: [2, \"suppressAnimationFrame\", \"suppressAnimationFrame\", booleanAttribute],\n          suppressMiddleClickScrolls: [2, \"suppressMiddleClickScrolls\", \"suppressMiddleClickScrolls\", booleanAttribute],\n          suppressPreventDefaultOnMouseWheel: [2, \"suppressPreventDefaultOnMouseWheel\", \"suppressPreventDefaultOnMouseWheel\", booleanAttribute],\n          scrollbarWidth: \"scrollbarWidth\",\n          rowSelection: \"rowSelection\",\n          cellSelection: \"cellSelection\",\n          rowMultiSelectWithClick: [2, \"rowMultiSelectWithClick\", \"rowMultiSelectWithClick\", booleanAttribute],\n          suppressRowDeselection: [2, \"suppressRowDeselection\", \"suppressRowDeselection\", booleanAttribute],\n          suppressRowClickSelection: [2, \"suppressRowClickSelection\", \"suppressRowClickSelection\", booleanAttribute],\n          suppressCellFocus: [2, \"suppressCellFocus\", \"suppressCellFocus\", booleanAttribute],\n          suppressHeaderFocus: [2, \"suppressHeaderFocus\", \"suppressHeaderFocus\", booleanAttribute],\n          selectionColumnDef: \"selectionColumnDef\",\n          rowNumbers: \"rowNumbers\",\n          suppressMultiRangeSelection: [2, \"suppressMultiRangeSelection\", \"suppressMultiRangeSelection\", booleanAttribute],\n          enableCellTextSelection: [2, \"enableCellTextSelection\", \"enableCellTextSelection\", booleanAttribute],\n          enableRangeSelection: [2, \"enableRangeSelection\", \"enableRangeSelection\", booleanAttribute],\n          enableRangeHandle: [2, \"enableRangeHandle\", \"enableRangeHandle\", booleanAttribute],\n          enableFillHandle: [2, \"enableFillHandle\", \"enableFillHandle\", booleanAttribute],\n          fillHandleDirection: \"fillHandleDirection\",\n          suppressClearOnFillReduction: [2, \"suppressClearOnFillReduction\", \"suppressClearOnFillReduction\", booleanAttribute],\n          sortingOrder: \"sortingOrder\",\n          accentedSort: [2, \"accentedSort\", \"accentedSort\", booleanAttribute],\n          unSortIcon: [2, \"unSortIcon\", \"unSortIcon\", booleanAttribute],\n          suppressMultiSort: [2, \"suppressMultiSort\", \"suppressMultiSort\", booleanAttribute],\n          alwaysMultiSort: [2, \"alwaysMultiSort\", \"alwaysMultiSort\", booleanAttribute],\n          multiSortKey: \"multiSortKey\",\n          suppressMaintainUnsortedOrder: [2, \"suppressMaintainUnsortedOrder\", \"suppressMaintainUnsortedOrder\", booleanAttribute],\n          icons: \"icons\",\n          rowHeight: \"rowHeight\",\n          rowStyle: \"rowStyle\",\n          rowClass: \"rowClass\",\n          rowClassRules: \"rowClassRules\",\n          suppressRowHoverHighlight: [2, \"suppressRowHoverHighlight\", \"suppressRowHoverHighlight\", booleanAttribute],\n          suppressRowTransform: [2, \"suppressRowTransform\", \"suppressRowTransform\", booleanAttribute],\n          columnHoverHighlight: [2, \"columnHoverHighlight\", \"columnHoverHighlight\", booleanAttribute],\n          gridId: \"gridId\",\n          deltaSort: [2, \"deltaSort\", \"deltaSort\", booleanAttribute],\n          treeDataDisplayType: \"treeDataDisplayType\",\n          enableGroupEdit: [2, \"enableGroupEdit\", \"enableGroupEdit\", booleanAttribute],\n          initialState: \"initialState\",\n          theme: \"theme\",\n          loadThemeGoogleFonts: [2, \"loadThemeGoogleFonts\", \"loadThemeGoogleFonts\", booleanAttribute],\n          themeCssLayer: \"themeCssLayer\",\n          styleNonce: \"styleNonce\",\n          themeStyleContainer: \"themeStyleContainer\",\n          getContextMenuItems: \"getContextMenuItems\",\n          getMainMenuItems: \"getMainMenuItems\",\n          postProcessPopup: \"postProcessPopup\",\n          processUnpinnedColumns: \"processUnpinnedColumns\",\n          processCellForClipboard: \"processCellForClipboard\",\n          processHeaderForClipboard: \"processHeaderForClipboard\",\n          processGroupHeaderForClipboard: \"processGroupHeaderForClipboard\",\n          processCellFromClipboard: \"processCellFromClipboard\",\n          sendToClipboard: \"sendToClipboard\",\n          processDataFromClipboard: \"processDataFromClipboard\",\n          isExternalFilterPresent: \"isExternalFilterPresent\",\n          doesExternalFilterPass: \"doesExternalFilterPass\",\n          getChartToolbarItems: \"getChartToolbarItems\",\n          createChartContainer: \"createChartContainer\",\n          focusGridInnerElement: \"focusGridInnerElement\",\n          navigateToNextHeader: \"navigateToNextHeader\",\n          tabToNextHeader: \"tabToNextHeader\",\n          navigateToNextCell: \"navigateToNextCell\",\n          tabToNextCell: \"tabToNextCell\",\n          getLocaleText: \"getLocaleText\",\n          getDocument: \"getDocument\",\n          paginationNumberFormatter: \"paginationNumberFormatter\",\n          getGroupRowAgg: \"getGroupRowAgg\",\n          isGroupOpenByDefault: \"isGroupOpenByDefault\",\n          initialGroupOrderComparator: \"initialGroupOrderComparator\",\n          processPivotResultColDef: \"processPivotResultColDef\",\n          processPivotResultColGroupDef: \"processPivotResultColGroupDef\",\n          getDataPath: \"getDataPath\",\n          getChildCount: \"getChildCount\",\n          getServerSideGroupLevelParams: \"getServerSideGroupLevelParams\",\n          isServerSideGroupOpenByDefault: \"isServerSideGroupOpenByDefault\",\n          isApplyServerSideTransaction: \"isApplyServerSideTransaction\",\n          isServerSideGroup: \"isServerSideGroup\",\n          getServerSideGroupKey: \"getServerSideGroupKey\",\n          getBusinessKeyForNode: \"getBusinessKeyForNode\",\n          getRowId: \"getRowId\",\n          resetRowDataOnUpdate: [2, \"resetRowDataOnUpdate\", \"resetRowDataOnUpdate\", booleanAttribute],\n          processRowPostCreate: \"processRowPostCreate\",\n          isRowSelectable: \"isRowSelectable\",\n          isRowMaster: \"isRowMaster\",\n          fillOperation: \"fillOperation\",\n          postSortRows: \"postSortRows\",\n          getRowStyle: \"getRowStyle\",\n          getRowClass: \"getRowClass\",\n          getRowHeight: \"getRowHeight\",\n          isFullWidthRow: \"isFullWidthRow\",\n          isRowValidDropPosition: \"isRowValidDropPosition\"\n        },\n        outputs: {\n          toolPanelVisibleChanged: \"toolPanelVisibleChanged\",\n          toolPanelSizeChanged: \"toolPanelSizeChanged\",\n          columnMenuVisibleChanged: \"columnMenuVisibleChanged\",\n          contextMenuVisibleChanged: \"contextMenuVisibleChanged\",\n          cutStart: \"cutStart\",\n          cutEnd: \"cutEnd\",\n          pasteStart: \"pasteStart\",\n          pasteEnd: \"pasteEnd\",\n          columnVisible: \"columnVisible\",\n          columnPinned: \"columnPinned\",\n          columnResized: \"columnResized\",\n          columnMoved: \"columnMoved\",\n          columnValueChanged: \"columnValueChanged\",\n          columnPivotModeChanged: \"columnPivotModeChanged\",\n          columnPivotChanged: \"columnPivotChanged\",\n          columnGroupOpened: \"columnGroupOpened\",\n          newColumnsLoaded: \"newColumnsLoaded\",\n          gridColumnsChanged: \"gridColumnsChanged\",\n          displayedColumnsChanged: \"displayedColumnsChanged\",\n          virtualColumnsChanged: \"virtualColumnsChanged\",\n          columnEverythingChanged: \"columnEverythingChanged\",\n          columnsReset: \"columnsReset\",\n          columnHeaderMouseOver: \"columnHeaderMouseOver\",\n          columnHeaderMouseLeave: \"columnHeaderMouseLeave\",\n          columnHeaderClicked: \"columnHeaderClicked\",\n          columnHeaderContextMenu: \"columnHeaderContextMenu\",\n          componentStateChanged: \"componentStateChanged\",\n          cellValueChanged: \"cellValueChanged\",\n          cellEditRequest: \"cellEditRequest\",\n          rowValueChanged: \"rowValueChanged\",\n          cellEditingStarted: \"cellEditingStarted\",\n          cellEditingStopped: \"cellEditingStopped\",\n          rowEditingStarted: \"rowEditingStarted\",\n          rowEditingStopped: \"rowEditingStopped\",\n          bulkEditingStarted: \"bulkEditingStarted\",\n          bulkEditingStopped: \"bulkEditingStopped\",\n          batchEditingStarted: \"batchEditingStarted\",\n          batchEditingStopped: \"batchEditingStopped\",\n          undoStarted: \"undoStarted\",\n          undoEnded: \"undoEnded\",\n          redoStarted: \"redoStarted\",\n          redoEnded: \"redoEnded\",\n          cellSelectionDeleteStart: \"cellSelectionDeleteStart\",\n          cellSelectionDeleteEnd: \"cellSelectionDeleteEnd\",\n          rangeDeleteStart: \"rangeDeleteStart\",\n          rangeDeleteEnd: \"rangeDeleteEnd\",\n          fillStart: \"fillStart\",\n          fillEnd: \"fillEnd\",\n          filterOpened: \"filterOpened\",\n          filterChanged: \"filterChanged\",\n          filterModified: \"filterModified\",\n          filterUiChanged: \"filterUiChanged\",\n          floatingFilterUiChanged: \"floatingFilterUiChanged\",\n          advancedFilterBuilderVisibleChanged: \"advancedFilterBuilderVisibleChanged\",\n          findChanged: \"findChanged\",\n          chartCreated: \"chartCreated\",\n          chartRangeSelectionChanged: \"chartRangeSelectionChanged\",\n          chartOptionsChanged: \"chartOptionsChanged\",\n          chartDestroyed: \"chartDestroyed\",\n          cellKeyDown: \"cellKeyDown\",\n          gridReady: \"gridReady\",\n          firstDataRendered: \"firstDataRendered\",\n          gridSizeChanged: \"gridSizeChanged\",\n          modelUpdated: \"modelUpdated\",\n          virtualRowRemoved: \"virtualRowRemoved\",\n          viewportChanged: \"viewportChanged\",\n          bodyScroll: \"bodyScroll\",\n          bodyScrollEnd: \"bodyScrollEnd\",\n          dragStarted: \"dragStarted\",\n          dragStopped: \"dragStopped\",\n          dragCancelled: \"dragCancelled\",\n          stateUpdated: \"stateUpdated\",\n          paginationChanged: \"paginationChanged\",\n          rowDragEnter: \"rowDragEnter\",\n          rowDragMove: \"rowDragMove\",\n          rowDragLeave: \"rowDragLeave\",\n          rowDragEnd: \"rowDragEnd\",\n          rowDragCancel: \"rowDragCancel\",\n          rowResizeStarted: \"rowResizeStarted\",\n          rowResizeEnded: \"rowResizeEnded\",\n          columnRowGroupChanged: \"columnRowGroupChanged\",\n          rowGroupOpened: \"rowGroupOpened\",\n          expandOrCollapseAll: \"expandOrCollapseAll\",\n          pivotMaxColumnsExceeded: \"pivotMaxColumnsExceeded\",\n          pinnedRowDataChanged: \"pinnedRowDataChanged\",\n          pinnedRowsChanged: \"pinnedRowsChanged\",\n          rowDataUpdated: \"rowDataUpdated\",\n          asyncTransactionsFlushed: \"asyncTransactionsFlushed\",\n          storeRefreshed: \"storeRefreshed\",\n          headerFocused: \"headerFocused\",\n          cellClicked: \"cellClicked\",\n          cellDoubleClicked: \"cellDoubleClicked\",\n          cellFocused: \"cellFocused\",\n          cellMouseOver: \"cellMouseOver\",\n          cellMouseOut: \"cellMouseOut\",\n          cellMouseDown: \"cellMouseDown\",\n          rowClicked: \"rowClicked\",\n          rowDoubleClicked: \"rowDoubleClicked\",\n          rowSelected: \"rowSelected\",\n          selectionChanged: \"selectionChanged\",\n          cellContextMenu: \"cellContextMenu\",\n          rangeSelectionChanged: \"rangeSelectionChanged\",\n          cellSelectionChanged: \"cellSelectionChanged\",\n          tooltipShow: \"tooltipShow\",\n          tooltipHide: \"tooltipHide\",\n          sortChanged: \"sortChanged\"\n        },\n        features: [i0.ɵɵProvidersFeature([AngularFrameworkOverrides, AngularFrameworkComponentWrapper]), i0.ɵɵNgOnChangesFeature],\n        decls: 0,\n        vars: 0,\n        template: function AgGridAngular_Template(rf, ctx) {},\n        encapsulation: 2\n      });\n    }\n  }\n  return AgGridAngular;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst booleanMixedGridOptions = new Set(_BOOLEAN_MIXED_GRID_OPTIONS);\n/**\n * Used to support the user setting combined boolean and string / object properties\n * as plain HTML attributes and us correctly mapping that to true.\n * For example cellSection can be boolean or an object\n */\nfunction getValueOrCoercedValue(key, valueToUse) {\n  if (booleanMixedGridOptions.has(key)) {\n    // Handle plain HTML boolean attributes and convert them to boolean values\n    // Also handle the false string case to match Angular boolean attributes\n    return valueToUse === '' ? true : valueToUse === 'false' ? false : valueToUse;\n  }\n  return valueToUse;\n}\nlet AgGridModule = /*#__PURE__*/(() => {\n  class AgGridModule {\n    static {\n      this.ɵfac = function AgGridModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AgGridModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: AgGridModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return AgGridModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgComponentContainer, AgGridAngular, AgGridModule, AngularFrameworkComponentWrapper, AngularFrameworkOverrides };\n","import { CUSTOM_ELEMENTS_SCHEMA, Component, DestroyRef, OnInit, inject, viewChild } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { IOption, SortDirection } from '@tylertech/forge';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport {\r\n  ForgeIconButtonModule,\r\n  ForgeIconModule,\r\n  ForgeOptionModule,\r\n  ForgePaginatorModule,\r\n  ForgeSelectDropdownModule,\r\n  ForgeToolbarModule\r\n} from '@tylertech/forge-angular';\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\nimport {\r\n  AllCommunityModule,\r\n  ColDef,\r\n  ColumnMovedEvent,\r\n  ColumnResizedEvent,\r\n  ColumnVisibleEvent,\r\n  GridOptions,\r\n  GridReadyEvent,\r\n  ICellRendererComp,\r\n  ICellRendererParams,\r\n  ModuleRegistry,\r\n  SortChangedEvent\r\n} from 'ag-grid-community';\r\nimport { finalize } from 'rxjs';\r\n\r\nimport { IPerson } from 'src/app/shared/interfaces';\r\nimport { Utils } from 'src/utils';\r\nimport { AppDataService } from '../app-data.service';\r\n\r\n@Component({\r\n  selector: 'app-ag-grid-demo',\r\n  imports: [\r\n    CommonModule,\r\n    ForgeIconButtonModule,\r\n    ForgeIconModule,\r\n    ForgeOptionModule,\r\n    ForgePaginatorModule,\r\n    ForgeSelectDropdownModule,\r\n    ForgeToolbarModule,\r\n    AgGridAngular\r\n  ],\r\n  templateUrl: './ag-grid-demo.component.html',\r\n  styleUrls: ['./ag-grid-demo.component.scss'],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AgGridDemoComponent implements OnInit {\r\n  private destroyRef = inject(DestroyRef);\r\n  private appDataService = inject(AppDataService);\r\n\r\n  private readonly agGrid = viewChild('agGrid', { read: AgGridAngular });\r\n  private storageKey = 'ag-grid-demo';\r\n\r\n  public isBusy = false;\r\n  public filterCache = {\r\n    sort: {\r\n      property: 'lastName',\r\n      direction: SortDirection.Ascending\r\n    },\r\n    filters: [],\r\n    skip: 0,\r\n    take: 25\r\n  };\r\n  public recordset: IPerson[] = [];\r\n  public recordCount = 0;\r\n\r\n  public gridOptions: GridOptions = {\r\n    domLayout: 'normal'\r\n  };\r\n  public defaultColDef: ColDef = {\r\n    sortable: true,\r\n    resizable: true\r\n  };\r\n  public columnDefs: ColDef[] = [\r\n    {\r\n      field: 'image',\r\n      headerName: '',\r\n      cellRenderer: ImageCellRendererComponent,\r\n      sortable: false,\r\n      width: 80,\r\n      suppressSizeToFit: true,\r\n      suppressAutoSize: false,\r\n      resizable: false\r\n    },\r\n    { field: 'firstName', headerName: 'First', filter: true },\r\n    { field: 'lastName', headerName: 'Last' },\r\n    { field: 'gender', headerName: 'Gender' },\r\n    { field: 'occupation', headerName: 'Occupation' }\r\n  ];\r\n\r\n  public get optionalTableColumns(): IOption[] {\r\n    return this.columnDefs\r\n      .filter((c) => c.field)\r\n      .map((c) => ({\r\n        value: c.field,\r\n        label: c.headerName || c.field\r\n      })) as IOption[];\r\n  }\r\n  public selectedTableColumns?: (string | undefined)[];\r\n\r\n  public ngOnInit() {\r\n    ModuleRegistry.registerModules([AllCommunityModule]);\r\n    this.getRecords();\r\n  }\r\n\r\n  public onGridReady(event: GridReadyEvent) {\r\n    const agGrid = this.agGrid();\r\n    agGrid?.api.sizeColumnsToFit();\r\n    const columnState = localStorage.getItem(this.storageKey);\r\n    if (columnState?.length) {\r\n      agGrid?.api.applyColumnState({\r\n        state: JSON.parse(columnState),\r\n        applyOrder: true\r\n      });\r\n    }\r\n    this.selectedTableColumns = agGrid?.api.getAllDisplayedColumns().map((c) => c.getColDef().field);\r\n  }\r\n\r\n  public onTableSort(event: SortChangedEvent) {\r\n    localStorage.setItem(this.storageKey, JSON.stringify(event.api.getColumnState()));\r\n  }\r\n\r\n  public onTableStateChange(event: ColumnResizedEvent | ColumnMovedEvent | ColumnVisibleEvent) {\r\n    if (isDefined((event as ColumnResizedEvent).finished) && !(event as ColumnResizedEvent).finished) {\r\n      return;\r\n    }\r\n\r\n    const eventSources = ['uiColumnResized', 'uiColumnMoved'];\r\n    if (eventSources.includes(event.source) || event.type === 'columnVisible') {\r\n      localStorage.setItem(this.storageKey, JSON.stringify(event.api.getColumnState()));\r\n    }\r\n  }\r\n\r\n  public onTableColumnOptionSelected(columnFields: string[]) {\r\n    this.selectedTableColumns = columnFields;\r\n    const agGrid = this.agGrid();\r\n    agGrid?.api.setColumnsVisible(columnFields, true);\r\n    agGrid?.api.setColumnsVisible(this.columnDefs.map((c) => c.field).filter((c) => !columnFields.includes(c as string)) as string[], false);\r\n  }\r\n\r\n  public onTablePaginatorChange(detail: { pageIndex: number; pageSize: number }) {\r\n    this.filterCache.skip = detail.pageIndex * detail.pageSize;\r\n    this.filterCache.take = detail.pageSize;\r\n    this.getRecords();\r\n  }\r\n\r\n  private getRecords() {\r\n    this.isBusy = true;\r\n    this.appDataService\r\n      .getPeople({\r\n        sort: this.filterCache.sort,\r\n        filters: this.filterCache.filters,\r\n        skip: this.filterCache.skip,\r\n        take: this.filterCache.take\r\n      })\r\n      .pipe(\r\n        takeUntilDestroyed(this.destroyRef),\r\n        finalize(() => (this.isBusy = false))\r\n      )\r\n      .subscribe({\r\n        next: (result) => {\r\n          this.recordset = result.data;\r\n          this.recordCount = result.count;\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nclass ImageCellRendererComponent implements ICellRendererComp {\r\n  private cellElement?: HTMLImageElement;\r\n\r\n  getGui(): HTMLElement {\r\n    return this.cellElement as HTMLElement;\r\n  }\r\n\r\n  init?(params: ICellRendererParams<any, any, any>) {\r\n    this.cellElement = document.createElement('img');\r\n    this.cellElement.src = `mock-data/${Utils.formatNumber(params.data.id, '2.0-0')}-small.png`;\r\n    this.cellElement.classList.add('table-cell__image');\r\n  }\r\n\r\n  refresh(params: ICellRendererParams<any, any, any>): boolean {\r\n    this.cellElement!.src = `mock-data/${Utils.formatNumber(params.data.id, '2.0-0')}-small.png`;\r\n\r\n    return true;\r\n  }\r\n}\r\n","<forge-toolbar class=\"header\">\n  <h2 slot=\"start\" class=\"forge-typography--subheading4\">Ag Grid Demo</h2>\n  <div slot=\"end\">\n    <forge-icon-button id=\"ag-grid-demo--column-select\" class=\"table__header__columns\" aria-label=\"Choose table columns\">\n      <forge-icon name=\"view_column\"></forge-icon>\n    </forge-icon-button>\n    <forge-select-dropdown target=\"#ag-grid-demo--column-select\" multiple [value]=\"selectedTableColumns\" (change)=\"onTableColumnOptionSelected($event.detail)\">\n      @for (column of optionalTableColumns; track i; let i = $index) {\n        <forge-option [value]=\"column.value\">\n          {{ column.label }}\n        </forge-option>\n      }\n    </forge-select-dropdown>\n  </div>\n</forge-toolbar>\n<div class=\"body\">\n  <ag-grid-angular\n    #agGrid\n    class=\"ag-theme-material\"\n    [columnDefs]=\"columnDefs\"\n    [gridOptions]=\"gridOptions\"\n    [defaultColDef]=\"defaultColDef\"\n    [rowData]=\"recordset\"\n    (gridReady)=\"onGridReady($event)\"\n    (sortChanged)=\"onTableSort($event)\"\n    (columnResized)=\"onTableStateChange($event)\"\n    (columnMoved)=\"onTableStateChange($event)\"\n    (columnVisible)=\"onTableStateChange($event)\"\n  ></ag-grid-angular>\n\n  @if (recordCount) {\n    <forge-toolbar inverted=\"true\">\n      <forge-paginator slot=\"end\" [pageIndex]=\"filterCache.skip / filterCache.take\" [pageSize]=\"filterCache.take\" [total]=\"recordCount\" (forge-paginator-change)=\"onTablePaginatorChange($event.detail)\"></forge-paginator>\n    </forge-toolbar>\n  }\n</div>\n"],"mappings":"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","names":["LocalEventService","frameworkOverrides","eventType","async","autoCreateListenerCollection","listenerMap","listeners","listener","event","browserEvent","runCallback","func","callback","originalListeners","globalListenersSrc","globalListeners","flush","queueCopy","defaultLocaleTextFunc","_key","defaultValue","_getLocaleTextFunc","localeSvc","_translate","bean","localeValues","key","variableValues","_makeNull","value","_exists","_missing","_toStringOrNull","_jsonEquals","val1","val2","val1Json","val2Json","_defaultComparator","valueA","valueB","accentedCompare","valueAMissing","valueBMissing","doQuickCompare","a","b","SKIP_JS_BUILTINS","_iterateObject","object","key2","_mergeDeep","dest","source","copyUndefined","makeCopyOfSimpleObjects","sourceValue","destValue","_isNonNullObject","_getValueUsingField","data","field","fieldContainsDots","fields","currentObject","i","_GlobalGridOptions","providedOptions","__spreadValues","mergedGridOps","GlobalGridOptions","GRID_OPTION_DEFAULTS","_toggleAriaAttribute","element","attribute","value","_removeAriaAttribute","_setAriaAttribute","_ariaAttributeName","_setAriaRole","role","_getAriaSortState","sortDirection","sort","_getAriaLabel","element","_setAriaLabel","label","_toggleAriaAttribute","_setAriaLabelledBy","labelledBy","_setAriaLive","element","live","_toggleAriaAttribute","_setAriaAtomic","atomic","_setAriaRelevant","relevant","_setAriaInvalid","invalid","_setAriaDisabled","element","disabled","_toggleAriaAttribute","_setAriaHidden","hidden","_setAriaExpanded","element","expanded","_setAriaAttribute","_setAriaSetSize","element","setsize","_setAriaAttribute","_setAriaPosInSet","position","_setAriaMultiSelectable","multiSelectable","_setAriaRowCount","rowCount","_setAriaRowIndex","rowIndex","_setAriaRowSpan","spanCount","_setAriaColCount","colCount","_setAriaColIndex","colIndex","_setAriaColSpan","colSpan","_setAriaSort","sort","_removeAriaSort","_removeAriaAttribute","_setAriaSelected","selected","_toggleAriaAttribute","_setAriaControls","controllerElement","controlledId","_toggleAriaAttribute","_setAriaControlsAndLabel","controlledElement","_setAriaLabelledBy","_setAriaOwns","ownerElement","ownedId","_getAriaCheckboxStateName","translate","state","isSafari","isFirefox","isMacOs","isIOS","invisibleScrollbar","browserScrollbarWidth","maxDivHeight","_isBrowserSafari","_isBrowserFirefox","_isMacOsUserAgent","_isIOSUserAgent","_getTabIndex","el","numberTabIndex","tabIndex","_getMaxDivHeight","res","testUpTo","div","test","_getScrollbarWidth","initScrollbarWidthAndVisibility","body","width","_isInvisibleScrollbar","FOCUSABLE_SELECTOR","FOCUSABLE_EXCLUDE","_isFocusableFormField","element","matches","isFocusable","isNotFocusable","isElementVisible","_isVisible","_setDisplayed","displayed","options","skipAriaHidden","_setAriaHidden","_setVisible","visible","_setDisabled","disabled","attributeName","addOrRemoveDisabledAttribute","e","inputs","input","_isElementChildOfClass","cls","maxNest","counter","_getElementSize","el","height","width","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","paddingTop","paddingRight","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","boxSizing","_getInnerHeight","size","_getInnerWidth","_getAbsoluteHeight","_getAbsoluteWidth","_getElementRectWithOffset","offsetElementRect","_getScrollLeft","rtl","scrollLeft","_setScrollLeft","value","_clearElement","_removeFromParent","node","_isInDOM","_loadTemplate","template","tempDiv","_ensureDomOrder","eContainer","eChild","eChildBefore","_setDomChildOrder","orderedChildren","correctCellAtIndex","actualCellAtIndex","_camelCaseToHyphenated","camelCase","s","_addStylesToElement","eElement","styles","key","parsedKey","valueAsString","parsedValue","priority","_isElementOverflowingCallback","getElement2","_isHorizontalScrollShowing","_isVerticalScrollShowing","_setElementWidth","_setFixedWidth","_formatSize","_setFixedHeight","_isNodeOrElement","o","_addOrRemoveAttribute","name","_observeResize","beans","callback","ResizeObserverImpl","_getWindow","resizeObserver","_requestAnimationFrame","beans","callback","win","_getWindow","DataRefAttribute","whitespaceNode","getWhitespaceNode","_createElement","params","attrs","children","cls","ref","role","tag","element","key","addFirstWhitespace","child","doOnceFlags","_doOnce","func","_logIfDebug","gos","message","args","_warnOnce","msg","_errorOnce","batchedCallsSetTimeout","batchedCallsRaf","_batchCall","mode","batch","runBatch","funcsCopy","func2","_debounce","bean","delay","timeout","context","_throttle","wait","previousCall","currentCall","_waitUntil","condition","timeoutMessage","timeStamp","interval","executed","internalCallback","reachedTimeout","BASE_URL","VERSION","MAX_URL_LENGTH","MIN_PARAM_LENGTH","VERSION_PARAM_NAME","validation","baseDocLink","provideValidationServiceLogger","logger","setValidationDocLink","docLink","getErrorParts","id","defaultMessage","minifiedLog","getMsgOrDefault","stringifyObject","inputObj","object","prop","stringifyValue","value","output","toStringWithNullUndefined","str","getParamsUrl","baseUrl","truncateUrl","maxLength","sortedParams","a","b","url","excessLength","ellipse","truncateAmount","truncatedValue","getErrorLink","errorNum","errorLink","_warn","_error","_logPreInitErr","getErrMsg","_errMsg","isRowModelType","gos","rowModelType","_isClientSideRowModel","rowModel","_isServerSideRowModel","_isDomLayout","domLayout","_isRowSelection","_getRowSelectionMode","_isGetRowHeightFunction","_shouldMaintainColumnOrder","isPivotColumns","_getRowHeightForNode","beans","rowNode","allowEstimate","defaultRowHeight","environment","params","height","isNumeric","_warn","getMasterDetailRowHeight","gridOptionsRowHeight","_getRowHeightAsNumber","_missing","rowHeight","value","_getDomData","element","key","domData","_setDomData","domDataKey","_getDocument","eGridDiv","result","gridOptionsGetDocument","_exists","_getWindow","_getRootNode","_getActiveDomElement","_getPageBody","rootNode","targetEl","body","_getBodyWidth","_getBodyHeight","_anchorElementToMouseMoveEvent","mouseMoveEvent","browserWidth","browserHeight","offsetParentSize","_getElementRectWithOffset","clientY","clientX","top","left","eDocument","win","windowScrollY","windowScrollX","_isNothingFocused","activeEl","_isAnimateRows","_isGroupRowsSticky","_isColumnsSortingCoupledToGroup","_getGroupAggFiltering","userValue","_getGrandTotalRow","_isGroupUseEntireRow","gos","pivotMode","_isFullWidthGroupRow","node","_getRowIdCallback","getRowId","params","id","_doOnce","_warn","_canSkipShowingRowGroup","isSkippingGroups","_getMaxConcurrentDatasourceRequests","res","_getCheckboxes","selection","_getHeaderCheckbox","_getCheckboxLocation","rowSelection","_getHideDisabledCheckboxes","_isUsingNewRowSelectionAPI","gos","_isCellSelectionEnabled","gos","selection","_getEnableClickSelection","gos","selection","suppressRowClickSelection","suppressRowDeselection","_getEnableSelection","enableClickSelection","_getEnableDeselection","_getIsRowSelectable","_getRowSelectionMode","arg","_isMultiRowSelection","_getEnableSelectionWithoutKeys","_getGroupSelection","groupSelectsChildren","groupSelectsFiltered","_getSelectAll","defaultValue","rowSelection","_getGroupSelectsDescendants","groupSelection","_getMasterSelects","_isSetFilterByDefault","_isLegacyMenuEnabled","_isColumnMenuAnchoringEnabled","_getCallbackForEvent","eventName","_combineAttributesAndGridOptions","gridOptions","component","gridOptionsKeys","mergedOptions","__spreadValues","key","value","_processOnChange","changes","api","gridChanges","hasChanges","internalUpdateEvent","event","_addGridCommonParams","params","_getGroupingApproach","AG_GRID_STOP_PROPAGATION","PASSIVE_EVENTS","NON_PASSIVE_EVENTS","supports","_stopPropagationForAgGrid","event","_isStopPropagationForAgGrid","_isEventSupported","tags","eventName","el","_getCtrlForEventTarget","gos","eventTarget","type","sourceElement","renderedComp","_getDomData","_isElementInEventPath","element","_getEventPath","_createEventPath","res","pointer","eventNoType","_addSafePassiveEventListener","frameworkOverrides","eElement","listener","passive","getPassiveStateForEvent","options","isPassive","isNonPassive","BeanStub","beans","destroyFunctions","i","eventType","async","LocalEventService","object","handlers","destroyFuncs","k","handler","destroyFunc","isAgEventEmitter","fn","events","eventsKey","wrappedListener","propertiesChangeEvent","_getLocaleTextFunc","func","bean","context","afterPreCreateCallback","reUnescapedHtml","HTML_ESCAPES","_toString","toEscape","_escapeString","chr","COL_DEF_DEFAULTS","instanceIdSequence","getNextColInstanceId","isColumn","col","AgColumn","colDef","userProvidedColDef","colId","primary","sortSvc","pinnedCols","colFlex","hide","source","colSpanChanged","field","tooltipField","suppressDotNotation","_exists","pivotColDefSvc","pivotValueColumn","evt","initialWidth","width","colDefWidth","colDefInitialWidth","userListener","rowNode","_addGridCommonParams","key","value","params","_missing","left","_warn","firstRightPinned","lastLeftPinned","visible","newValue","parent","numberOfParents","isSpanningTotal","height","changed","colSpan","rowSpan","actualWidth","silent","additionalEventAttributes","colEvent","_mergeDeep","isProvidedColumnGroup","AgProvidedColumnGroup","colGroupDef","groupId","padding","level","child","expanded","children","result","callback","leafColumns","atLeastOneShowingWhenOpen","atLeastOneShowingWhenClosed","atLeastOneChangeable","j","abstractColumn","headerGroupShow","expandable","process","items","item","DefaultColumnTypes","createMergedColGroupDef","colGroupDefMerged","ColumnKeyCreator","keys","colField","_toStringOrNull","count","idToTry","usedId","_EmptyArray","_last","arr","_areEqual","a","b","comparator","index","_forAll","array","_removeFromArray","_moveInArray","objectsToMove","toIndex","GROUP_AUTO_COLUMN_ID","SELECTION_COLUMN_ID","ROW_NUMBERS_COLUMN_ID","_getColumnsFromTree","rootColumns","result","recursiveFindColumns","childColumns","i","child","isColumn","isProvidedColumnGroup","getWidthOfColsInList","columnList","width","col","_destroyColumnTree","beans","oldTree","newTree","oldObjectsById","depthFirstOriginalTreeSearch","colsToDestroy","item","isColumnGroupAutoCol","isColumnSelectionCol","isRowNumberCol","isSpecialCol","convertColumnTypes","type","typeKeys","_areColIdsEqual","colsA","colsB","_areEqual","a","b","_updateColsMap","cols","_convertColumnEventSourceType","source","_columnsMatch","column","key","columnMatches","colDefMatches","idMatches","getValueFactory","stateItem","defaultState","key1","key2","obj","calculated","_exists","_createColumnTree","beans","defs","primaryColumns","existingTree","source","columnKeyCreator","ColumnKeyCreator","existingCols","existingGroups","existingColKeys","extractExistingTreeData","unbalancedTree","_recursivelyCreateColumns","colGroupSvc","treeDepth","columnTree","depthFirstOriginalTreeSearch","child","parent","isProvidedColumnGroup","item","group","col","level","existingColsCopy","result","i","def","isColumnGroupDef","createColumn","colDef","existingColAndIndex","findExistingColumn","column","colDefMerged","_addColumnDefaultAndTypes","_updateColumnState","colId","AgColumn","updateSomeColumnState","hide","sort","sortIndex","pinned","flex","sortSvc","pinnedCols","colFlex","widthBeforeUpdate","newColDef","isAutoCol","gos","dataTypeSvc","res","defaultColDef","_mergeDeep","columnType","updateColDefAndGetColumnType","assignColumnTypes","cellDataType","autoGroupColDef","isSortingCoupled","_isColumnsSortingCoupledToGroup","userColDef","dataTypeDefinitionColumnType","columnTypes","convertColumnTypes","typeKeys","allColumnTypes","DefaultColumnTypes","userTypes","key","value","_warn","t","typeColDef","abstractColDef","tree","callback","placeLockedColumns","cols","left","normal","right","position","doesMovePassMarryChildren","allColumnsCopy","gridBalancedTree","rulePassed","columnGroup","colGroupDef","newIndexes","newColIndex","maxIndex","minIndex","spread","maxSpread","getCommonValue","valueGetter","firstValue","dispatchColumnPinnedEvent","eventSvc","changedColumns","dispatchColumnVisibleEvent","visible","dispatchColumnChangedEvent","type","columns","dispatchColumnResizedEvent","finished","flexColumns","_applyColumnState","params","colModel","rowGroupColsSvc","pivotColsSvc","autoColSvc","selectionColSvc","colAnimation","visibleCols","pivotResultCols","environment","valueColsSvc","providedCols","selectionCols","syncColumnWithStateItem","stateItem","rowGroupIndexes","pivotIndexes","autoCol","getValue","getValueFactory","width","minColWidth","applyStates","states","existingColumns","getById2","dispatchEventsFunc","_compareColumnStatesAndDispatchEvents","columnsWithNoState","autoColStates","selectionColStates","unmatchedAndAutoStates2","unmatchedCount2","previousRowGroupCols","previousPivotCols","state","GROUP_AUTO_COLUMN_ID","isColumnSelectionCol","_removeFromArray","applyDefaultsFunc","comparatorByIndex","syncColStates","getCol","colStates","orderLiveColsLikeState","unmatchedAndAutoStates","unmatchedCount","id","_exists","pivotResultColsList","_resetColumnState","primaryCols","primaryColumnTree","_getColumnsFromTree","columnStates","letRowGroupIndex","letPivotIndex","addColState","getColumnStateFromColDef","_missing","autoCols","orderedColState","_addGridCommonParams","startState","columnStateBefore","_getColumnState","columnStateBeforeMap","dispatchWhenListsDifferent","eventType","colsBefore","colsAfter","idMapper","beforeList","afterList","_areEqual","changes","changesArr","getChangedColumns","changedPredicate","changedColumns2","colStateBefore","columnIdMapper","c","changedValues","cs","oldActive","activeChanged","aggFuncChanged","colStateAfter","normaliseColumnMovedEventForColumnState","rowGroupColumns","pivotColumns","createStateItemFromColumn","rowGroupIndex","pivotIndex","aggFunc","colIdToGridIndexMap","index","itemA","itemB","posA","posB","getValueOrNull","a","b","rowGroup","pivot","colIds","sortColsLikeKeys","newOrder","processedColIds","autoGroupInsertIndex","colStateAfterMapped","s","colsIntersectIds","beforeFiltered","afterFiltered","movedColumns","csAfter","csBefore","gridCol","indexes","oldList","colA","colB","indexA","indexB","aHasIndex","bHasIndex","oldIndexA","oldIndexB","aHasOldIndex","bHasOldIndex","ColumnModel","BeanStub","event","_convertColumnEventSourceType","valueCache","colAutosize","oldCols","oldTree","newTree","_destroyColumnTree","list","map","newColDefs","prevColTree","rowNumbersSvc","quickFilter","showRowGroupCols","rowAutoHeight","colViewport","shouldSortNewColDefs","_shouldMaintainColumnOrder","services","service","updateOrder","pivotResultColsSvc","colDefCols","__spreadValues","showAutoGroupAndValuesOnly","showSelectionColumn","showRowNumbers","valueColumns","isAutoGroupCol","isColumnGroupAutoCol","isValueCol","isRowNumberCol","keys","lastOrder","preservedOrder","hasSiblings","ancestor","preservedOrderSet","colPositionMap","additionalCols","getPreviousSibling","highestIdx","highestSibling","colIdx","leafCol","noSiblingsAvailable","previousSiblingPosMap","prevSiblingIdx","prev","resultPointer","nextCol","extraCols","x","pivotMode","columnDefs","_forAll","_columnsMatch","GroupInstanceIdCreator","key","lastResult","result","setupCompBean","ctrl","ctx","compBean","CssClassManager","getGui","className","addOrRemove","list","cls","compIdSequence","RefPlaceholder","Component","BeanStub","templateOrParams","componentSelectors","comp","debugId","css","element","paramsMap","DataRefAttribute","elementRef","newComponent","current","usedAsParamRef","parentNode","childNodeList","childNode","childComp","childComp2","childGui","attr","items","afterPreCreateCallback","key","isAgGridComponent","componentSelector","componentParams","eComponent","elements","tabIndex","el","eGui","_loadTemplate","_createElement","components","suppressDataRefValidation","i","component","cssSelector","newChild","container","parent","_isNodeOrElement","visible","options","skipAriaHidden","_setVisible","displayed","_setDisplayed","event","listener","isColumnFilterComp","filter","AgPromise","_AgPromise","callback","value","params","promises","resolve","remainingToResolve","combinedValues","promise","index","func","waiter","_","doesImplementIComponent","candidate","_getUserCompKeys","frameworkOverrides","defObject","type","name","compName","jsComp","fwComp","paramsFromSelector","popupFromSelector","popupPositionFromSelector","defObjectAny","selectorFunc","selectorRes","assignComp","providedJsComp","UserComponentFactory","BeanStub","beans","defaultName","mandatory","cellRenderer","defaultCompParams","defaultCompProcessParams","lookupFromRegistry","key","item","validation2","_error","__spreadProps","__spreadValues","paramsMerged","componentFromFramework","componentClass","ComponentClass","jsComponent","instance","deferredInit","paramsFromGrid","userParams","userParamsFromFunc","_mergeDeep","DateComponent","DragAndDropImageComponent","HeaderComponent","InnerHeaderComponent","InnerHeaderGroupComponent","HeaderGroupComponent","CellRendererComponent","LoadingCellRendererComponent","CellEditorComponent","LoadingOverlayComponent","NoRowsOverlayComponent","TooltipComponent","FilterComponent","FloatingFilterComponent","FullWidth","FullWidthLoading","FullWidthGroup","FullWidthDetail","_getDragAndDropImageCompDetails","userCompFactory","params","DragAndDropImageComponent","_getHeaderCompDetails","userCompFactory","colDef","params","HeaderComponent","_getInnerHeaderCompDetails","headerCompParams","InnerHeaderComponent","_getHeaderGroupCompDetails","colGroupDef","HeaderGroupComponent","_getInnerHeaderGroupCompDetails","headerGroupCompParams","InnerHeaderGroupComponent","_getFullWidthCellRendererDetails","FullWidth","_getFullWidthLoadingCellRendererDetails","FullWidthLoading","_getFullWidthGroupCellRendererDetails","FullWidthGroup","_getFullWidthDetailCellRendererDetails","FullWidthDetail","_getCellRendererDetails","def","CellRendererComponent","_getLoadingCellRendererDetails","userCompFactory","def","params","LoadingCellRendererComponent","_getCellEditorDetails","CellEditorComponent","_getFilterDetails","defaultFilter","filter","isColumnFilterComp","FilterComponent","_getDateCompDetails","DateComponent","_getLoadingOverlayCompDetails","LoadingOverlayComponent","_getNoRowsOverlayCompDetails","NoRowsOverlayComponent","_getTooltipCompDetails","TooltipComponent","_getFloatingFilterCompDetails","defaultFloatingFilter","FloatingFilterComponent","_getFilterCompKeys","frameworkOverrides","_getUserCompKeys","_mergeFilterParamsWithApplicationProvidedParams","defObject","paramsFromGrid","_unwrapUserComp","comp","compAsAny","allRegisteredModules","globalModulesMap","gridModulesMap","currentModuleVersion","userHasRegistered","areGridScopedModules","isUmd","isValidModuleVersion","module","moduleMajor","moduleMinor","currentModuleMajor","currentModuleMinor","runVersionChecks","errorMsg","details","_errorOnce","result","_registerModule","gridId","isInternalRegistration","rowModels","moduleStore","rowModel","dependency","_unRegisterGridModules","_isModuleRegistered","moduleName","isRegisteredForRowModel","model","_areModulesGridScoped","_getRegisteredModules","gridModules","_getAllRegisteredModules","_hasUserRegistered","userHasRegistered","_isUmd","isUmd","ModuleRegistry","module","_registerModule","modules","GenericContext","params","beanName","BeanClass","instance","beanFunc","bean","afterPreCreateCallback","beanInstances","name","beans","i","isComponentMetaFunc","componentMeta","Context","_unRegisterGridModules","EditModelService","BeanStub","EditCellValidationModel","EditRowValidationModel","suspend","rowNode","column","editRow","edits","pinnedSibling","checkSiblings","siblingRow","data","applyEdits","data2","pendingValue","UNEDITED","position","copy","edit","__spreadValues","map","newEdits","newRow","cellData","currentEdit","editMap","positions","withOpenEditor","rowEdits","state","pendingRowEdits","model","validation2","validationMap","rowValidation","_createCellId","cellPosition","rowIndex","rowPinned","_areCellsEqual","cellA","cellB","colsMatch","floatingMatch","indexMatch","_isRowBefore","rowA","rowB","_exists","_isSameRow","_getFirstRow","pinnedRowModel","rowModel","pageBounds","_getLastRow","pinnedBottomCount","pinnedTopCount","_getRowNode","gridRow","_getCellByPosition","spannedCellCtrl","rowCtrl","_getRowById","rowId","rm","prm","node","_getRowAbove","rowPosition","index","pinned","getNextStickyPosition","_getRowBelow","isLastRowInContainer","up","gos","rowRenderer","_isGroupRowsSticky","stickyTopCtrls","stickyBottomCtrls","isStickyTop","ctrl","stickyRowCtrls","increment","nextCtrl","_getRowCtrl","inputs","_getCellCtrl","cellCtrl","colId","columnId","actualColumn","_getColId","result","_stopEditing","editSvc","_destroyEditors","_addStopEditingWhenGridLosesFocus","viewports","popupSvc","focusOutListener","event","elementWithFocus","_getTabIndex","clickInsideGrid","viewport","_isElementInThisGrid","popup","getCellEditorInstanceMap","res","ctrls","cellEditor","_unwrapUserComp","getCellEditorInstances","_setupEditors","editingCells","key","cellStartedEdit","_setupEditor","valueSvc","editModelSvc","cellRowNode","cellColumn","curCellCtrl","oldValue","newValue","shouldStartEditing","_sourceAndPendingDiffer","sourceValue","silent","editorComp","editorParams","_createEditorParams","previousEdit","colDef","compDetails","_getCellEditorDetails","popupLocation","checkAndPreventDefault","_valueFromEditor","noValueResult","batchEdit","agColumn","editor","initialNewValue","value","_addGridCommonParams","suppressNavigateAfterEdit","_destroyEditor","_purgeUnchangedEdits","includeEditing","_refreshEditorOnColDefChanged","eventKey","_syncFromEditors","persist","cellId","editorValue","editorValueExists","_syncFromEditor","_source","valueSameAsSource","hasEditor","_persistEditorValue","comp","errorMessages","cellValidationModel","latest","_populateModelValidationErrors","mappedEditors","ariaAnnounce","localeSvc","includeRows","ariaValidationErrorPrefix","_getLocaleTextFunc","mappedEditor","el","isInvalid","invalidMessage","_setAriaInvalid","rowCtrlSet","rowValidations","_generateRowValidationErrors","rowValidationModel","getFullRowEditValidationErrors","rowEditMap","editorsState","editValue","_validateEdit","validations","CSS_FIRST_COLUMN","CSS_LAST_COLUMN","_getHeaderClassesFromColDef","abstractColDef","columnGroup","_missing","getColumnClassesFromCollDef","refreshFirstAndLastStyles","comp","column","presentedColsService","CSS_FIRST_COLUMN","CSS_LAST_COLUMN","getClassParams","abstractColDef","gos","columnGroup","_addGridCommonParams","getColumnClassesFromCollDef","classesOrFunc","_missing","classToUse","params","_isManualPinnedRow","rowNode","_getNodesInRangeForSelection","rowModel","float","start","end","isTop","count","started","finished","range","node","KeyCode","keyboardModeActive","instanceCount","addKeyboardModeEvents","doc","toggleKeyboardMode","removeKeyboardModeEvents","event","isKeyboardActive","isKeyboardEvent","_registerKeyboardFocusEvents","beans","eDocument","_getDocument","_isKeyboardMode","_addFocusableContainerListener","eGui","e","backwards","_findNextFocusableElement","_focusNextGridCoreContainer","_findFocusableElements","rootNode","exclude","onlyUnmanaged","focusableString","FOCUSABLE_SELECTOR","excludeString","FOCUSABLE_EXCLUDE","nodes","_isVisible","excludeNodes","a","b","element","_focusInto","up","excludeTabGuards","focusableElements","toFocus","_last","onlyManaged","focusable","activeEl","_getActiveDomElement","currentIndex","el","nextIndex","_findTabbableParent","limit","counter","_getTabIndex","_focusGridInnerElement","fromBottom","_isHeaderFocusSuppressed","_isCellFocusSuppressed","forceOut","gridCtrl","_createCellEvent","domEvent","eventType","value","_isDeleteKey","key","alwaysReturnFalseOnBackspace","_isMacOsUserAgent","CellKeyboardListenerFeature","BeanStub","cellCtrl","rowCtrl","currentCellPosition","rangeSvc","navigation","endCell","eventSvc","editSvc","_isCellSelectionEnabled","emptyValue","cellEditing","rowEditing","startEditingAction","cellCtrl2","_populateModelValidationErrors","eventOnChildComponent","_isRowSelection","_areEventsNear","e1","e2","pixelCount","diffX","diffY","_interpretAsRightClick","CellMouseListenerFeature","eventName","mouseEvent","_isStopPropagationForAgGrid","editModelSvc","frameworkOverrides","isMultiKey","cellPosition","cellClickedEvent","colDef","editing","cellValidations","rowValidations","cellDoubleClickedEvent","ctrlKey","metaKey","shiftKey","target","rowNumbersSvc","focusSvc","hasRanges","containsWidget","isRowNumberColumn","isRowNumberCol","shouldFocus","forceBrowserFocus","_isBrowserSafari","_isFocusableFormField","focusedCell","column2","rowIndex","rowPinned","hasRightClickedOnRowNumber","cellInRange","isRightClick","_isElementChildOfClass","colHover","eCell","cellContainsTarget","cellContainsRelatedTarget","CellPositionFeature","cellSpan","refreshSpanHeight","spanHeight","rowSpan","colsSpanning","_areEqual","width","col","colSpan","pointer","pinned","i","left","mostLeftCol","leftPosition","visibleCols","leftWidth","bodyWidth","force","totalRowHeight","_getRowHeightAsNumber","CSS_CELL","CSS_AUTO_HEIGHT","CSS_NORMAL_HEIGHT","CSS_CELL_FOCUS","CSS_CELL_FIRST_RIGHT_PINNED","CSS_CELL_LAST_LEFT_PINNED","CSS_CELL_NOT_INLINE_EDITING","CSS_CELL_WRAP_TEXT","DOM_DATA_KEY_CELL_CTRL","_getCellCtrlForEventTarget","eventTarget","_getCtrlForEventTarget","instanceIdSequence2","CellCtrl","colId","context","shouldDisplayTooltip","editor","_eWrapper","eCellWrapper","printLayout","startEditing","compBean","func","userCompFactory","ctrlsSvc","loadingDetails","_getLoadingCellRendererDetails","resolver","onReady","AgPromise","resolve","forceNewCellRendererInstance","skipRangeHandleRefresh","rangeFeature","valueToDisplay","compDetails","isSsrmLoading","_getCellRendererDetails","__spreadProps","__spreadValues","result","_requestAnimationFrame","allowManuallyPinned","rowSelection","groupDisplayType","checkboxLocation","_getCheckboxLocation","isSelectionColumn","isColumnSelectionCol","_getCheckboxes","selectionChanged","rowDragChanged","dndSourceChanged","autoHeightChanged","cancel","valueFormatted","valueSvc","value2","rowDraggerElement","dragStartPixels","suppressVisibilityChange","suppressFlash","newData","noValueProvided","forceRefresh","isCellCompReady","valuesDifferent","dataNeedsUpdating","processingFilterChange","compareValues","oldValue","oldValueFormatted","val1","val2","_setDomData","colIdx","_setAriaColIndex","sourceEvent","allowedTarget","waitForRender","focus","focusableElement","suppressCellFocus","_addOrRemoveAttribute","firstRightPinned","lastLeftPinned","isFocused","cellFocused","focusEl","focusableEls","_makeNull","autoHeight","cellContextMenuEvent","cbSelectionComponent","dndSourceComp","customElement","newComp","rowDragComp","_cellPosition","GRID_DOM_KEY","_stampTopLevelGridCompWithGridInstance","eGridDiv","_isEventFromThisGrid","_isElementInThisGrid","instanceId","_exists","_getCellPositionForEvent","_getNormalisedMousePosition","gridPanelHasScrolls","_isDomLayout","x","y","pageFirstPixel","scrollFeature","vRange","hRange","DragAndDropService","BeanStub","beans","dragSource","allowTouch","params","dragAndDropImageComp","dragSourceAndParamsList","dragSvc","sourceAndParams","item","_removeFromArray","dropTargets","mouseEvent","lastDropTarget","draggingEvent","fromNudge","hDirection","vDirection","validDropTargets","target","dropTarget","dragItem","comp","promise","resolvedComponent","secondaryContainers","containers","allContainersFromDropTarget","mouseOverTarget","allContainersIntersect","mouseEvent2","container","width","height","left","right","top","bottom","horizontalFit","verticalFit","currentContainers","eElement","type","len","elementStack","_getRootNode","el","a","dragEnterEvent","dragLeaveEvent","dragAndDropImageComponent","zones","zone","gridGui","dropZoneTarget","event","clientX","eClientX","clientY","eClientY","rect","gos","x","y","_addGridCommonParams","_anchorElementToMouseMoveEvent","eGui","userCompFactory","userCompDetails","_getDragAndDropImageCompDetails","environment","_stampTopLevelGridCompWithGridInstance","dragItemName","targetEl","_getPageBody","_warn","elementFn","ctrl","DragService","dragSources","dragSourceAndListener","element","mouseDownListener","touchStartListener","mouseListener","includeTouch","stopPropagationForTouch","touchListener","suppressTouch","touchEvent","_isFocusableFormField","touch","touchMoveEvent","e","touchEndEvent","documentTouchMove","events","mouseMoveEvent","mouseUpEvent","contextEvent","keydownEvent","KeyCode","currentEvent","listener","options","startEvent","dragStartPixels","requiredPixelDiff","_exists","_areEventsNear","touchList","i","_isBrowserSafari","_getDocument","isEnableCellTextSelect","isMouseMove","isOverFormFieldElement","_isEventFromThisGrid","eventOrTouch","dragEndFunctions","func","createUniqueColumnGroupId","groupId","instanceId","isColumnGroup","col","AgColumnGroup","providedColumnGroup","partId","pinned","allLeafColumns","child","lastChildLeft","_last","firstChildLeft","groupActualWidth","result","groupChild","expanded","changed","leafColumns","isColumn","parent","parentWithExpansion","ROW_ID_PREFIX_ROW_GROUP","ROW_ID_PREFIX_TOP_PINNED","ROW_ID_PREFIX_BOTTOM_PINNED","OBJECT_ID_SEQUENCE","RowNode","data","update","valueCache","eventSvc","oldData","event2","pinnedSibling","newData","_error","id","selectionSvc","oldNode","getRowIdFunc","_getRowIdCallback","parentKeys","rowTop","hovered","rowHeight","estimated","forceSync","colKey","newValue","eventSource","colModel","valueSvc","editSvc","column","oldValue","rowIndex","rowPinned","valueChanged","rowChildrenSvc","cellChangedEvent","callback","clearSelection","source","eventType","LocalEventService","userListener","isFullWidthCellFunc","res","pointer","firstChild","displayed","allChildrenCount","uiLevel","_createGlobalRowEvent","rowNode","IGNORED_SIBLING_PROPERTIES","_createRowNodeSibling","sibling","key","FILTER_HANDLER_MAP","FILTER_HANDLERS","getFilterUiFromWrapper","filterWrapper","skipCreate","filterUi","createdFilterUi","_refreshHandlerAndUi","getFilterUi","handler","handlerParams","model","state","__spreadProps","__spreadValues","filter","filterParams","_refreshFilterUi","getAndRefreshFilterUi","getModel","getState2","_updateFilterModel","action","updateState","updateModel","shouldUpdateModel","oldState","_getFilterModel","colId","getElement","className","FilterButtonComp","Component","config","buttons","useForm","oldButtons","_clearElement","eApplyButton","fragment","addButton","label","clickListener","isApply","button","_createElement","keydownListener","listeners","tooltip","valid","message","_setDisabled","destroyFunc","FILTER_LOCALE_TEXT","variableValues","translateForFilter","bean","key","_translate","getDebounceMs","params","debounceDefault","debounceMs","_isUseApplyButton","_warn","FilterWrapperComp","Component","column","wrapper","eventParent","updateModel","isGlobalButtons","enableGlobalButtonCheck","comp","originalParams","useForm","tag","e","__spreadValues","eventParams","state","action","keyboardEvent","isGlobal","currentParams","newParams","oldParams","forceUpdate","oldButtons","oldReadOnly","newButtons","readOnly","_jsonEquals","hasButtons","eButtonsPanel","buttons","type","localeKey","FilterButtonComp","getListener","event","_removeFromParent","hidePopup","KeyCode","applyActive","closeOnApply","FilterElement","FilterComp","source","AgPromise","init","colFilter","filterPromise","isHandler","filterGui","displayComp","_exists","_clearElement","DATE_TIME_SEPARATOR","DATE_TIME_REGEXP","_padStartWidthZeros","value","totalStringSize","_serialiseDate","date","includeTime","separator","serialised","part","_getDateParts","d","calculateOrdinal","_dateToFormattedString","format","fullYear","months","days","replace","regexp","match","_isValidDate","bailIfInvalidTime","_parseDateTimeFromString","_isValidDateTime","dateStr","timeStr","fields","f","year","month","day","hours","minutes","seconds","MONTH_LOCALE_TEXT","MONTH_KEYS","setFilterNumberComparator","a","b","isValidDate","filterParamsForEachDataType","_filterValues","cellValue","dataTypeDefinition","filterDate","cellAsDate","args","setFilterParamsForEachDataType","t","formatValue","valueFormatted","pathKey","level","monthKey","convertToDate","_getFilterParamsForDataType","filter","existingFilterParams","existingFilterValueGetter","beans","translate","filterParams","filterValueGetter","usingSetFilter","node","filterParamsGetter","newFilterParams","defaultFilters","defaultFloatingFilters","_getDefaultSimpleFilter","cellDataType","isFloating","RESIZE_CONTAINER_STYLE","makeDiv","dataRefPrefix","classSuffix","RESIZE_TEMPLATE","PositionableFeature","BeanStub","element","config","postProcessCallback","clientHeight","clientWidth","x","y","centered","forcePopupParentAsOffsetParent","minWidth","width","minHeight","height","computedMinHeight","computedMinWidth","isElementVisible","_isVisible","boundaryEl","offsetParentComputedStyles","paddingWidth","paddingHeight","initialisedDuringPositioning","top","left","movable","moveElement","resizable","side","isSideResizable","resizerEl","popup","eGui","isPercent","_setFixedHeight","_getAbsoluteHeight","availableHeight","elRect","offsetParentRect","yPosition","parentTop","additionalHeight","parentEl","bottom","_setFixedWidth","_getAbsoluteWidth","xPosition","ePopup","constrain","applyMaxHeightToElement","_observeResize","isLeft","isTop","anywhereWithin","topBuffer","xDiff","yDiff","movementX","movementY","diff","parentRect","boundaryElRect","skipX","skipY","getElement2","ref","_createElement","parent","el","siblings","i","currentEl","isFlex","nextHeight","nextWidth","computedStyle","vertical","containerToFlex","isRight","isBottom","isHorizontal","isVertical","offsetLeft","offsetTop","direction","oldWidth","newWidth","skipWidth","oldHeight","newHeight","skipHeight","FOCUS_MANAGED_CLASS","ManagedFocusFeature","eFocusable","callbacks","nextRoot","_findNextFocusableElement","onFocusIn","onFocusOut","_isStopPropagationForAgGrid","_stopPropagationForAgGrid","ProvidedFilter","filterNameKey","cssIdentifier","_e","legacyParams","legacyNewParams","newState","oldState","_oldParams","getHandler","model","__spreadProps","debounceFunc","_debounce","_source","_model","additionalEventAttributes","changed","apply","afterFloatingFilter","containerType","positionableFeature","gos","isResizable","isCombinedFilterModel","_getDefaultFloatingFilterType","frameworkOverrides","def","getFromDefault","defaultFloatingFilterType","compName","jsComp","fwComp","_getFilterCompKeys","LayoutCssClasses","LayoutFeature","view","domLayout","cssClass","VIEWPORT","FAKE_V_SCROLLBAR","HORIZONTAL_SOURCES","SCROLL_DEBOUNCE_TIMEOUT","SCROLL_END_TIMEOUT","GridBodyScrollFeature","BeanStub","eBodyViewport","_debounce","beans","invalidateVerticalScroll","invalidateHorizontalScroll","p","source","scrollPartner","fakeVScrollComp","isDebounce","onVScroll","onFakeVScroll","comp","callback","scrollLeft","container","viewport","_setScrollLeft","direction","centerContainerViewport","newScrollLeft","_getScrollLeft","scrollTop","animationFrameSvc","fakeScrollLeft","bodyScrollEvent","__spreadProps","__spreadValues","scrollTo","touchOnly","_isIOSUserAgent","clientHeight","_getInnerHeight","scrollHeight","clientWidth","scrollWidth","hasHorizontalScrollersOutOfSync","suppressedAnimationFrame","frameNeeded","hScrollPosition","fromAlignedGridsService","maxScrollLeft","vScrollPosition","lastOffsetHeight","lastScrollTop","offsetHeight","pixels","oldScrollPosition","comparator","position","rowModel","rowCount","indexToSelect","i","node","index","retry","_isDomLayout","_warn","frameworkOverrides","pageBounds","heightScaler","rowRenderer","gridBodyCtrl","rowNode","rowGotShiftedDuringOperation","stickyHeightsChanged","attempt","stickyTopHeight","stickyBottomHeight","startingRowTop","startingRowHeight","paginationOffset","rowTopPixel","rowBottomPixel","scrollPosition","heightOffset","vScrollTop","vScrollBottom","viewportHeight","pxTop","pxBottom","pxMiddle","rowAboveViewport","rowBelowViewport","newScrollPosition","newScrollTop","key","colModel","column","newHorizontalScroll","columnBeforeStart","columnAfterEnd","viewportTooSmallForColumn","viewportWidth","isRtl","alignColToStart","alignColToEnd","isMiddle","colLeft","colMiddle","colRight","viewportStart","viewportEnd","bodyWidth","colWidth","multiplier","colLeftPixel","colRightPixel","colMidPixel","viewportStartPixel","viewportEndPixel","CenterWidthFeature","addSpacer","listener","printLayout","visibleCols","scrollVisibleSvc","centerWidth","leftWidth","rightWidth","totalWidth","ViewportSizeFeature","centerContainerCtrl","_requestAnimationFrame","pinnedCols","colFlex","newWidth","bodyHeight","params","processClassRules","expressionSvc","previousClassRules","classRules","onApplicableClass","onNotApplicableClass","classesToApply","classesToRemove","forEachSingleClass","className","singleClass","classNames","rule","resultOfRule","calculateRowLevel","parent","RowStyleService","classes","gos","process","rowCls","e","rowClass","rowClassFunc","rowClassFuncResult","rowClassParams","_addGridCommonParams","rowStyle","rowStyleFunc","rowStyleFuncResult","instanceIdSequence3","DOM_DATA_KEY_ROW_CTRL","RowCtrl","animateIn","useAnimationFrameForCreate","_escapeString","businessKey","containerType","gui","rowComp","element","compBean","context","focusSvc","setupCompBean","isSsrmLoadingRow","isIrmLoadingRow","focusableElement","rowGui","cached","displayValue","rg","_isRowSelection","name","_setAriaExpanded","_setDomData","rowId","_batchCall","rowDragComp","rowDragBean","r","pinned","compDetails","func","leftGui","centerGui","rightGui","isLeftReady","isCenterReady","isRightReady","isFullWidthCellFunc","isStub","isFullWidthCell","isDetailCell","pivotMode","isFullWidthGroup","_isFullWidthGroupRow","suppressAnimationFrame","useFlushSync","col","CellCtrl","cell","prev","cols","res","addCell","colInstanceId","cellCtrl","colsFromPrev","prevCellCtrl","ctrl","normalisedIndex","focusedCell","focusedColInstanceId","rowSpanSvc","focusedSpan","item","cellControls","colViewport","presentedColsService","centerCols","leftCols","rightCols","nextContainerPinned","editSvc","editing","focused","oldRowTopExists","_exists","pinningLeft","pinningRight","slideInAnimation","fadeInAnimation","tryRefresh","fullWidthSuccess","centerSuccess","leftSuccess","rightSuccess","expansionSvc","eventSvc","event","rowDropHighlightSvc","highlighted","aboveOn","insideOn","belowOn","indented","uiLevel","dragging","_makeNull","keyboardEvent","groupInfo","navigation","lastFocusedCell","cellPosition","_isStopPropagationForAgGrid","currentFullWidthComp","c","currentFullWidthContainer","isFullWidthContainerFocused","activeEl","_getActiveDomElement","isDetailGridCellFocused","nextEl","_findNextFocusableElement","displayedEl","el","_isVisible","suppressCellFocus","tabIndex","_addOrRemoveAttribute","isFocused","cellCtrlToRemove","eventName","mouseEvent","type","domEvent","target","fullWidthRowGui","_isElementChildOfClass","rangeSvc","forceBrowserFocus","_isBrowserSafari","_isFocusableFormField","selectionSvc","eDetailGui","eRow","rowDraggerElement","dragStartPixels","value","suppressVisibilityChange","shouldDisplayTooltip","compFactory","_getFullWidthDetailCellRendererDetails","valueFormatted","_getFullWidthGroupCellRendererDetails","_getFullWidthLoadingCellRendererDetails","_getFullWidthCellRendererDetails","rowDragSvc","newLevel","classToAdd","classToRemove","newFirst","newLast","cssClasses","classStr","updateStyles","gui2","rowContainerType","fullWidthRow","rowStyleSvc","eGui","elements","rowTop","range","minPixel","maxPixel","rowHeight","defaultRowHeight","heightFromFunc","_isGetRowHeightFunction","_getRowHeightForNode","lineHeight","suppressAnimation","_isAnimateRows","destroyCellCtrls","ctrls","rowFocused","currentPage","topPx","reverse","pixelOffset","afterPaginationPixels","skipColSpanSearch","rowIndexStr","headerRowCount","rowIsEven","ariaRowIndex","_setAriaRowIndex","_isEventFromPrintableCharacter","_isUserSuppressingKeyboardEvent","colDefFunc","_selectAllCells","pinnedRowModel","isEmptyPinnedTop","isEmptyPinnedBottom","floatingStart","floatingEnd","rowEnd","allDisplayedColumns","A_KEYCODE","C_KEYCODE","V_KEYCODE","D_KEYCODE","Z_KEYCODE","Y_KEYCODE","_normaliseQwertyAzerty","keyCode","code","KeyCode","RowContainerEventsFeature","_isEventSupported","_isEventFromThisGrid","rowCtrl","_getCellCtrlForEventTarget","_getCtrlForEventTarget","clipboardSvc","undoRedo","_isCellSelectionEnabled","_getSelectAll","SetHeightFeature","eContainer","eViewport","maxDivHeightScaler","height","heightString","getTopRowCtrls","getStickyTopRowCtrls","getStickyBottomRowCtrls","getBottomRowCtrls","getCentreRowCtrls","getSpannedTopRowCtrls","getSpannedCenterRowCtrls","getSpannedBottomRowCtrls","ContainerCssClasses","_getRowViewportClass","_getRowContainerOptions","_getRowContainerClass","options","_getRowSpanContainerClass","allTopNoFW","allBottomNoFW","allMiddleNoFW","allMiddle","allCenter","allLeft","allRight","allStickyTopNoFW","allStickyBottomNoFW","allStickyContainers","allNoFW","RowContainerCtrl","names","view","eSpannedContainer","pinnedWidthChanged","width","fn","spannedRowRenderer","onDisplayedColumnsChanged","spannedCtrls","isEnsureDomOrder","isPrintLayout","dragSvc","preventScroll","afterScroll","_getInnerWidth","unsubscribeFromResize","_observeResize","_isInDOM","_isHorizontalScrollShowing","offset","visible","rows","embedFW","rowsThisContainer","CSS_CLASS_FORCE_VERTICAL_SCROLL","CSS_CLASS_CELL_SELECTABLE","CSS_CLASS_COLUMN_MOVING","GridBodyCtrl","eGridBody","eTop","eBottom","eStickyTop","eStickyBottom","props","LayoutFeature","setFloatingHeights","setGridRootRole","toggleRowResizeStyle","isResizingRow","columns","scrollbarWidth","pad","_isInvisibleScrollbar","rowGroupColsSvc","isTreeGrid","isPivotActive","isFocusedElementNested","relatedTarget","gridContainRelatedTarget","isNestedRelatedTarget","moving","selectable","classList","headerCount","total","overflowY","show","cssClass","allowVerticalScroll","_isVerticalScrollShowing","rowContainerHeight","environment","initialSizeMeasurementComplete","updateAnimationClass","animateRows","animateRowsCssClass","popupSvc","touchSvc","onStickyWheel","onHorizontalWheel","deltaX","deltaY","shiftKey","touch","touchEvent","floatingTopHeight","floatingBottomHeight","pinnedBorderWidth","rowBorderWidth","additionalHeight","normalisedFloatingTopHeight","normalisedFloatingBottomHeight","vScrollVisible","headerHeight","pinnedTopHeight","pinnedBottomHeight","AbstractFakeScrollComp","Component","template","RefPlaceholder","_isMacOsUserAgent","onActivate","onDeactivate","_waitUntil","FakeHScrollElement","FakeHScrollComp","spacerWidthsListener","bottomPinnedHeight","vScrollShowing","rightSpacing","scrollOnRight","_setFixedWidth","leftSpacing","hScrollShowing","invisibleScrollbar2","isSuppressHorizontalScroll","scrollContainerSize","apply","_setFixedHeight","FakeHScrollSelector","FakeVScrollElement","FakeVScrollComp","ctrlsSvc","adjustedScrollbarWidth","gridBodyViewportEl","eViewportScrollTop","gridBodyViewportScrollTop","force","FakeVScrollSelector","getFocusHeaderRowCount","beans","getGroupRowsHeight","heights","headerRowContainerCtrls","headerRowContainerCtrl","groupRowCount","i","headerRowCtrl","currentHeightAtPos","newHeight","getColumnGroupHeaderRowHeight","maxDisplayedHeight","getPivotGroupHeaderHeight","getGroupHeaderHeight","headerRowCellCtrls","headerCellCtrl","column","height","getColumnHeaderRowHeight","getPivotHeaderHeight","getHeaderHeight","col","getFloatingFiltersHeight","GridHeaderCtrl","BeanStub","comp","eGui","eFocusableElement","headerNavigation","touchSvc","ctrlsSvc","ManagedFocusFeature","listener","_requestAnimationFrame","totalHeaderHeight","groupHeight","prev","curr","headerHeight","px","pivotMode","shouldAllowOverflow","isRtl","backwards","direction","focusSvc","_focusNextGridCoreContainer","KeyCode","_exists","relatedTarget","_getActiveDomElement","mouseEvent","touch","touchEvent","menuSvc","target","AbstractHeaderCellComp","Component","template","ctrl","HeaderCellElement","HeaderCellComp","RefPlaceholder","setAttribute","name","value","refreshSelectAllGui","selectAllGui","compProxy","width","cssClassName","on","styles","_addStylesToElement","sort","_setAriaSort","_removeAriaSort","compDetails","versionCopy","version","headerComp","HeaderGroupCellCompElement","HeaderGroupCellComp","key","hidden","displayed","_setDisplayed","expanded","details","headerGroupComp","destroyFunc","eHeaderGroupGui","HeaderFilterCellCompElement","HeaderFilterCellComp","eIcon","HeaderRowComp","_setAriaRowIndex","top","ctrls","forceOrder","rowIndex","oldComps","id","comps","a","b","leftA","leftB","elementsInOrder","c","_setDomChildOrder","headerCtrl","result","SetLeftFeature","columnOrGroup","eCell","colsSpanning","_last","onLeftChanged","gos","colAnimation","suppressMoveAnimation","oldLeftExists","colOrGroup","oldActualLeft","actualLeft","left","leftPosition","visibleCols","_isDomLayout","leftWidth","bodyWidth","isColumnGroup","children","_setAriaColSpan","instanceIdSequence4","DOM_DATA_KEY_HEADER_CTRL","AbstractHeaderCellCtrl","rowCtrl","refreshTabIndex","event","headerRowIndex","colDef","colDefFunc","params","_addGridCommonParams","compBean","headerStyle","cellStyleParams","wrapperElement","checkMeasuringCallback","measureHeight","timesCalled","paddingTop","paddingBottom","borderBottomWidth","borderTopWidth","_getElementSize","extraHeight","autoHeight","doc","_getDocument","notYetInDom","possiblyNoContentYet","_batchCall","isMeasuring","stopResizeObserver","checkMeasuring","newValue","startMeasuring","stopMeasuring","_observeResize","refreshFirstAndLastStyles","_setAriaColIndex","suppressHeaderFocus","_isHeaderFocusSuppressed","_addOrRemoveAttribute","activeEl","isLeftOrRight","diff","hDirection","pinnedCols","isLeft","pinned","wrapperHasFocus","_setDomData","eventType","eventSvc","HeaderCellCtrl","eResize","eHeaderCompWrapper","compBeanInput","colResize","context","colHover","rangeSvc","setupCompBean","e","delta","shiftKey","_getHeaderCompDetails","sortSvc","colFilter","_isLegacyMenuEnabled","buttonElement","onClosedCallback","multiSort","shouldDisplayTooltip","selectionSvc","selectAllFeature","isFilterShortcut","isHeaderComp","_isKeyboardMode","refreshHeaderClasses","classes","_getHeaderClassesFromColDef","oldClasses","eSource","func","f","newCompDetails","columnWidth","updateSortableCssClass","isFilterActive","wrapText","highlighted","beforeOn","afterOn","groupHeaderHeight","isZeroGroupHeight","total","next","numberOfParents","isSpanningTotal","indexToStartSpanning","rowsToSpan","translate","_getAriaSortState","property","ariaDescription","clickListener","contextMenuListener","isMouseOver","active","isFilter","instanceIdSequence5","HeaderRowCtrl","type","typeClass","initCompState","onHeightChanged","onDisplayedColumnsChanged","topOffset","rowHeight","groupHeadersHeight","filterHeight","afterScroll","ctrlsToDisplay","oldCtrls","columns","child","isFocusedAndDisplayed","oldCtrl","headerColumn","currCtrls","idOfChild","viewportColumns","ctrl2","HeaderRowContainerCtrl","colModel","colMoves","onDisplayedColsChanged","headerType","res","keepColumns","filterManager","sequence","focusedHeaderPosition","refreshColumnGroups","currentGroupCount","refreshColumns","refreshFilters","destroyPreviousComp","allCtrls","findCtrl","isColumn","index","offset","fn","dropContainer","bodyDropTarget","position","CenterWidthFeature","MenuService","enterpriseMenuFactory","filterMenuFactory","getFilterMenuFactory","suppressHeaderMenuButton","menuHides","_isIOSUserAgent","suppressMenuHide","menuFactory","containerType","filtersOnly","positionBy","_setColMenuVisible","visible","source","PopupComponent","container","parentComp","AgAbstractCellEditor","OverlayComponent","LoadingOverlayElement","LoadingOverlayComponent2","customTemplate","_makeNull","localeTextFunc","NoRowsOverlayElement","NoRowsOverlayComponent2","_createIcon","iconName","iconContents","_createIconNoSpan","className","eResult","_createElement","userProvidedIcon","_warn","icons","optionsIcons","rendererResult","_loadTemplate","_isNodeOrElement","iconValue","dragAndDropImageComponentCSS","DragAndDropElement","DragAndDropImageComponent2","create","shake","dragSource","dropIconMap","_clearElement","eIconChild","label","agAbstractLabelCSS","AgAbstractLabel","config","components","labelSeparator","labelWidth","labelAlignment","disabled","eLabel","_setAriaRole","alignment","eGuiClassList","hasEllipsis","_setElementWidth","element","_setDisabled","AgAbstractField","onValueChange","ariaEl","labelId","_getAriaLabel","_setAriaLabelledBy","_setAriaLabel","callbackFn","_setFixedWidth","silent","buildTemplate","displayFieldTag","AgAbstractInputField","inputType","eWrapper","eInput","inputName","inputWidth","length","placeholder","autoCompleteValue","AgCheckbox","readOnly","passive","previousValue","nextValue","input","selected","classList","AgCheckboxSelector","checkboxCellRendererCSS","CheckboxCellRendererElement","CheckboxCellRenderer","eCheckbox","inputEl","_setAriaLive","_stopPropagationForAgGrid","isSelected","node","colId","GROUP_AUTO_COLUMN_ID","stateName","_getAriaCheckboxStateName","ariaLabel","valueChanged","PinnedRows","floating","all","order","item","_removeFromArray","queued","rowNodeSorter","sortOptions","grandTotalNode","_removeGrandTotalRow","grandTotalRow","_getGrandTotalRow","shouldHide","_isDisplayedAfterFilterCSRM","parent","_shouldHidePinnedRows","rowModel","_isServerSideRowModel","_isNodeGrandTotal","_isPinnedNodeGrandTotal","ManualPinnedRowModel","runIsRowPinned","isRowPinned","keepRenderedRows","removeGroupRows","currentValue","dispatch","nodesToUnpin","n","rowNode","float","refreshCSRM","currentFloat","spannedRows","getSpannedRows","found","_destroyRowNodeSibling","sibling","_createPinnedSibling","anyChange","rowTop","updateRowHeight","_getRowHeightForNode","getTotalHeight","callback","buildState","list","state","nodesToPin","_isClientSideRowModel","pinnedSibling","newPinnedSibling","refreshAll","refreshRowPositions","_createRowNodeSibling","prefix","ROW_ID_PREFIX_TOP_PINNED","ROW_ID_PREFIX_BOTTOM_PINNED","mainNode","set","rowsToRemove","rowSpanSvc","isCellSpanning","size","StaticPinnedRowModel","_node","_container","estimateRowHeight","forEach","rowData","allData","nodes","getRowId","_getRowIdCallback","idPrefix","nodesToRemove","newOrder","dataIds","nextRowTop","data","existingNode","getById","RowNode","getTotalHeight2","getSize","getByIndex","rowNodes","cache","PinnedRowModel","initialiseRowModel","enableRowPinning","useManualPinnedRowModel","shouldDestroy","ROOT_NODE_ID","AbstractClientSideNodeManager","rootNode","dataItem","getRowIdFunc","reorder","changedRowNodes","processedNodes","oldAllLeafChildren","oldAllLeafChildrenLen","nodesAdded","nodesRemoved","nodesUpdated","orderChanged","prevSourceRowIndex","len","sourceRowIndex","nodesToUnselect","newAllLeafChildren","writeIdx","allNodesMap","rowDataTran","updateRowDataResult","add","allLeafChildren","addIndex","addLength","newNodes","newNode","nodesBeforeIndex","nodesAfterIndex","nodesAfterIndexFirstIndex","rowNodeTransaction","remove","rowIdsRemoved","idx","update","selectionChanged","allChildrenCount","_error","CheckboxSelectionComponentElement","CheckboxSelectionComponent","Component","AgCheckboxSelector","RefPlaceholder","translate","rowNode","eCheckbox","state","stateName","_getAriaCheckboxStateName","ariaKey","ariaLabel","translatedLabel","params","_stopPropagationForAgGrid","event","currentValue","previousValue","curr","_getHideDisabledCheckboxes","prev","_getIsRowSelectable","showOrHideSelectListener","column","overrides","gos","selectable","isVisible","checkboxes","extraParams","__spreadProps","__spreadValues","disabled","visible","so","showDisabledCheckboxes","_getCheckboxes","RowRangeSelectionContext","rowModel","pinnedRowModel","node","end","root","nodeInRange","fallback","id","range","discardAfter","idx","above","below","groupSelectsChildren","keep","node2","newRange","newRangeNode","discard","start","_getNodesInRangeForSelection","pinnedRange","count","lastMain","top","bottom","first","last","pinned","SelectAllFeature","BeanStub","checkbox","_getActiveDomElement","ctrl","cbSelectAll","AgCheckbox","_setAriaRole","updateStateOfCheckbox","getSelectAll","rowSelection","fromColumnMoved","cbSelectAllVisible","selectAllMode","selectionSvc","allSelected","hasNodesToSelect","headerCellCtrl","checked","ariaStatus","feature","_isMultiRowSelection","_warn","_isClientSideRowModel","_isServerSideRowModel","value","selectAll2","source","beans","featureName","isCheckboxSelection","_getSelectAll","headerCheckboxSelectionCurrentPageOnly","headerCheckboxSelectionFilteredOnly","selectionColSvc","colDef","headerCheckboxSelection","result","isSelectionCol","isColumnSelectionCol","isAutoCol","isColumnGroupAutoCol","_getCheckboxLocation","_getHeaderCheckbox","_addGridCommonParams","BaseSelectionService","callback","e","rowCtrl","hasFocusFunc","gui","selected","gui2","element","_setAriaSelected","label","_isManualPinnedRow","_isRowSelection","suppressSelectionUpdate","newVal","_getGroupSelectsDescendants","atLeastOneSelected","atLeastOneDeSelected","i","child","childState","newValue","selectionNotAllowed","selectionNotChanged","sibling","pinnedSibling","_createGlobalRowEvent","shiftKey","metaKey","selectionCtx","currentSelection","groupSelectsDescendants","enableClickSelection","_getEnableSelection","enableDeselection","_getEnableDeselection","isMultiSelect","isRowClicked","partition","enableSelectionWithoutKeys","_getEnableSelectionWithoutKeys","groupSelectsFiltered","_getGroupSelection","shouldClear","AgRadioButton","config","eInput","AgInputTextField","AgAbstractInputField","config","className","inputType","value","silent","eInput","_exists","pattern","preventCharacters","event","_isEventFromPrintableCharacter","e","text","c","AgInputTextFieldSelector","AgInputTextArea","ret","cols","rows","AgInputTextAreaSelector","AgInputNumberField","floatedValue","precision","min","max","step","_getActiveDomElement","isScientificNotation","floatString","parts","_addOrRemoveAttribute","v","setValueFunc","setInputValueOnlyFunc","setInputValueOnly","normalizedValue","inputValue","AgInputNumberFieldSelector","AgInputDateField","usingSafari","_isBrowserSafari","minDate","_serialiseDate","maxDate","includeTime","_parseDateTimeFromString","date","AgInputDateFieldSelector","AgList","Component","cssIdentifier","unFocusable","eGui","key","KeyCode","pos","isDown","itemToHighlight","itemEls","highlightedEl","nextPos","currentIdx","rowCount","itemHeight","pageSize","newIndex","listOptions","listOption","valueToRender","itemEl","_removeFromParent","_setAriaRole","options","option","idx","_setAriaPosInSet","_setAriaSetSize","_createElement","span","el","_isVisible","_setAriaSelected","scrollTop","clientHeight","offsetTop","offsetHeight","agPickerFieldCSS","AgPickerFieldElement","AgPickerField","AgAbstractField","RefPlaceholder","pickerGap","maxPickerHeight","variableWidth","minPickerWidth","maxPickerWidth","displayId","ariaEl","pickerIcon","inputWidth","icon","_createIconNoSpan","_setAriaExpanded","focusableEl","pickerGui","ePicker","translate","pickerAriaLabelKey","pickerAriaLabelValue","modalPicker","beans","eWrapper","popupParams","shouldRestoreFocus","_isNothingFocused","popupSvc","addPopupRes","_formatSize","_getAbsoluteWidth","_setElementWidth","maxHeight","_getInnerHeight","pickerType","gos","pickerComponent","alignSide","expanded","classList","focused","width","gap","height","agSelectCSS","AgSelect","__spreadValues","_isElementOverflowingCallback","placeholder","listComponent","eListAriaEl","listId","_setAriaControlsAndLabel","fromPicker","eDisplayField","tooltipFeature","displayValue","AgSelectSelector","TabGuardClassNames","TabGuardCtrl","BeanStub","params","comp","eTopGuard","eBottomGuard","focusTrapActive","forceFocusOutWhenTabGuardsAreEmpty","isFocusableContainer","focusInnerElement","onFocusIn","onFocusOut","shouldStopEventPropagation","onTabKeyDown","handleKeyDown","isEmpty","eFocusableElement","ManagedFocusFeature","guard","tabIndex","_findFocusableElements","fromBottom","up","eDocument","_getDocument","focusableEls","index","start","end","focusableRange","targetTabIndex","a","b","indexA","indexB","tabGuardsAreActive","nextRoot","focusable","backwards","_findNextFocusableElement","tabGuardToFocus","element","bottom","allowFocus","TabGuardFeature","tabGuards","compProxy","tabGuard","side","cls","topTabGuard","bottomTabGuard","_clearElement","appendChild","newChild","container","_isNodeOrElement","TabGuardComp","TouchListener","eElement","preventMouseClick","LocalEventService","startListener","moveListener","endListener","touchList","i","eventType","listener","touchEvent","touchStartCopy","touchesMatch","touch","_areEventsNear","now","func","AutoScrollService","params","mouseEvent","forceSkipVerticalScroll","skipVerticalScroll","rect","scrollTick","tickAmount","vScrollPosition","hScrollPosition","VanillaFrameworkOverrides","frameworkName","callback","BASE_URL","setValidationDocLink","action","timeout","AgPromise","resolve","element","type","listener","options","eventListenerOptions","passive","getPassiveStateForEvent","_","path","createGridApi","context","orderedCoreBeans","beanNamePosition","beanName","index","gridBeanInitComparator","bean1","bean2","index1","index2","gridBeanDestroyComparator","PinnedLeftElement","PinnedRightElement","CenterElement","HeaderRowContainerComp","Component","pinned","RefPlaceholder","compProxy","displayed","ctrls","width","left","eGui","HeaderRowContainerCtrl","pinnedLeft","pinnedRight","template","rowComp","oldRowComps","prevGui","appendEnsuringDomOrder","_ensureDomOrder","ctrl","ctrlId","existingComp","HeaderRowComp","c","GridHeaderElement","GridHeaderComp","cssClassName","on","height","GridHeaderCtrl","addContainer","container","GridHeaderSelector","CellComp","beans","cellCtrl","printLayout","eRow","editingCell","cellDiv","_createElement","wrapperDiv","CssClassManager","styles","_addStylesToElement","include","compDetails","valueToDisplay","force","popup","position","editing","isPopup","forceNewCellRendererInstance","controlWrapperChanged","providingControls","usingWrapper","putWrapperIn","takeWrapperOut","_removeFromParent","usingCellValue","putCellValueIn","takeCellValueOut","templateChanged","eCellWrapper","eCellValue","includeRowDrag","includeDndSource","includeSelection","insertBefore","comp","versionCopy","cellEditorPromise","_missing","eParent","_clearElement","escapedValue","_toString","_getActiveDomElement","compClassAndParams","result","displayComponentVersionCopy","createCellRendererFunc","details","componentPromise","animationFrameSvc","createTask","isDeferred","loadingComp","onReady","cellRendererVersion","cellRendererClass","cellRenderer","cellGui","requestVersion","cellEditor","staleComp","_warn","cellEditorInPopup","cellCssManager","eCell","gos","popupSvc","editSvc","cellEditorPopupWrapper","cellEditorGui","rowNode","column","ePopupGui","useModelPopup","positionToUse","isRtl","positionParams","positionCallback","addPopupRes","RowComp","containerType","rowDiv","style","domOrder","cellCtrls","name","top","transform","rowIndex","rowId","businessKey","getUpdatedParams","cellsToRemove","key","elementsInOrder","cellComp","_setDomChildOrder","fullWidthRowComponent","cellComps","instanceId","getElementParams","isCellSpanning","eContainerElement","_getRowContainerClass","eSpannedContainerElement","_getRowSpanContainerClass","_getRowViewportClass","RowContainerComp","_getRowContainerOptions","offset","rowCtrls","RowContainerCtrl","spanContainer","oldRows","__spreadValues","newComps","orderedRows","rowCtrl","existingRowComp","rows","isNew","rowComps","oldRowComp","RowContainerSelector","makeRowContainers","paramsMap","names","refName","getGridBodyTemplate","includeOverlay","elementParams","GridBodyComp","overlays","rangeSvc","overlaySelector","FakeHScrollSelector","FakeVScrollSelector","setHeight","heightString","cssClass","animate","count","_setAriaColCount","_setAriaRowCount","invisible","bottom","flag","classLists","classList","LayoutCssClasses","CSS_CLASS_FORCE_VERTICAL_SCROLL","unsubscribeFromResize","_observeResize","overflow","selectable","ct","role","_setAriaRole","GridBodyCtrl","_isCellSelectionEnabled","_isMultiRowSelection","_setAriaMultiSelectable","animateRows","bodyViewportClassList","GridBodySelector","GridCtrl","BeanStub","view","eGridDiv","dragAndDrop","ctrlsSvc","_stampTopLevelGridCompWithGridInstance","LayoutFeature","_findTabbableParent","direction","cursor","backwards","focusableContainers","indexWithFocus","nextIndex","visibleCols","focusSvc","allColumns","lastColumn","_last","fromBottom","userCallbackFunction","_isHeaderFocusSuppressed","i","_focusInto","up","coreContainers","_isCellFocusSuppressed","activeEl","GridComp","TabGuardComp","value","comps","requiredComps","_logIfDebug","eRootWrapperBodyClassList","AUTO_HEIGHT","NORMAL","PRINT","autoHeight","normal","print","dropZones","sideBar","statusBar","watermark","pagination","el","_isVisible","mod","moduleName","input","gridApiFunctionsMap","defaultFns","dispatchEvent","event","GridApiClass","ApiFunctionService","__spreadProps","api","functionName","func","fns","apiName","args","fn","fnName","preDestroyLink","module","getGridId","destroy","isDestroyed","getGridOption","setGridOption","updateGridOptions","isModuleRegistered","withoutSuffix","DndSourceElement","DndSourceComp","_createIconNoSpan","e","dragEvent","providedOnRowDrag","dataTransfer","_addGridCommonParams","jsonData","visible","addRowDropZone","removeRowDropZone","activeDropTarget","getRowDropZoneParams","events","getRowDropPositionIndicator","rowDropHighlightSvc","setRowDropPositionIndicator","HorizontalResizeService","dragSource","dragSvc","shiftKey","RowDragElement","RowDragComp","cellValueFn","customGui","dragStartPixels","suppressVisibilityChange","strategy","ManagedVisibilityStrategy","NonManagedVisibilityStrategy","dragElement","selection","colDef","translate","dragItem","dragItemCount","rowDragText","VisibilityStrategy","parent","neverDisplayed","alwaysHidden","displayedOptions","shown","isShownSometimes","rowDrag","rowDragSvc","rowDragFeature","shouldPreventRowMove","suppressRowDrag","hasExternalDropZones","ChangedPath","keepingColumns","rootNode","pathItem","children","traverseEverything","childrenAfterGroup","len","childNode","traverseLeafNodes","includeUnchangedNodes","pointer","newEntryCount","newEntry","columns","col","thisItem","parentItem","valueColumns","colsForThisNode","RowDragFeature","eContainer","rowModel","_isClientSideRowModel","p","gridBodyCon","oldVScroll","getVScroll2","newVScroll","lastDraggingEvent","autoScrollService","rowGroupColsSvc","filterManager","sortSvc","draggingEvent","currentNode","selectedNodes","a","b","dragSourceDomDataKey","throttleMakeGroup","isFromThisGrid","rowsDrop","target","rowIndexStr","source","clientSideRowModel","y","_getNormalisedMousePosition","targetRowIndex","moved","yDelta","sameGrid","canSetParent","_getGroupingApproach","newParent","found","getPrevOrNext","above","targetInRows","newTarget","getRowsPrevOrNext","makeGroupThrottleTarget","inside","firstRow","current","rowsHaveSameParent","customPosition","isRowValidDropPosition","canDropResult","_EmptyArray","timer","INSIDE_THRESHOLD","nextRow","nextRowIndex","rowsSet","child","processedParams","dropTarget","getContainer","onDragEnter","onDragLeave","onDragging","onDragStop","onDragCancel","pageBounds","mouseIsPastLastRow","overIndex","overNode","dragging","getRowIdFunc","_getRowIdCallback","add","data","rowPinned","addIndex","getLeafSourceRowIndex","changed","leafs","row","wouldFormCycle","leafRow","getLeafRow","cellPosition","_getCellByPosition","totalRows","targetPositionIdx","firstAffectedLeafIdx","lastAffectedLeafIndex","sourceRowIndex","orderChanged","allLeafChildren","writeIdxLeft","readIdx","writeIdxRight","increment","initialRow","rowCount","leaf","RowDragService","RowDropHighlightService","last","dropIndicatorPosition","nodeChanged","uiLevel","highlightChanged","uiLevelChanged","DragModule","VERSION","DragService","DragAndDropModule","SharedDragAndDropModule","DragAndDropService","DragAndDropImageComponent2","RowDragModule","HorizontalResizeModule","columnMovingCSS","ColumnAnimationService","suppress","animationThreadCountCopy","gridBodyCtrl","callbackNext","callbackLater","executeNextFuncs","executeLaterFuncs","runFuncs","queue","moveColumnByIndex","fromIndex","toIndex","moveColumns","columnsToMoveKeys","BodyDropPivotTarget","dragColumns","valueColsSvc","pivotColsSvc","sortColsLikeCols","colsList","cols","indexA","indexB","getColsToMove","allMovingColumns","newCols","movingGroup","newCol","getLowestFragMove","validMoves","allMovingColumnsOrdered","colMoves","displayedCols","lowestFragMove","targetOrder","move","order","displayedOrder","_areEqual","fragCount","groupFragCount","getBestColumnMoveIndexFromXPosition","isFromHeader","fromLeft","xPosition","fromEnter","fakeEvent","colModel","calculateValidMoves","oldIndex","calculateOldIndex","firstValidMove","attemptMoveColumns","finished","movingCols","gridCols","indexes","firstIndex","parents","getDisplayedColumns","draggingRight","allDisplayedCols","allGridCols","movingDisplayedCols","otherDisplayedCols","otherGridCols","displayIndex","availableWidth","widthOfMovingDisplayedCols","leftColumn","numberComparator","lastIndex","displacedCol","firstDisplayIndex","normaliseX","fromKeyboard","useHeaderRow","skipScrollPadding","eViewport","x","setColumnsMoving","isMoving","MOVE_FAIL_THRESHOLD","SCROLL_MOVE_WIDTH","SCROLL_GAP_NEEDED_BEFORE_MOVE","SCROLL_ACCELERATION_RATE","SCROLL_TIME_INTERVAL","MoveColumnFeature","_exists","colPinned","initialPinnedState","visibleState","visibleColumns","isSuppressMoveWhenDragging","mouseX","allowedCols","lastMovedInfo","isAttemptingToPin","useSplit","conditionCallback","movingColumns","consideredColumns","start","targetColumn","end","currentColumn","leafDisplayedCols","setColumnHighlighted","firstMovingCol","movingColIndex","targetIndex","isBefore","diff","lastHighlightedColumn","lastMovingCol","findFirstAndLastMovingColumns","isLeft","hDirection","padding","isMovingHorizontally","isFailedMoreThanThreshold","columnMoveParams","xAdjustedForScroll","centerCtrl","firstVisiblePixel","lastVisiblePixel","needToMoveRight","needToMoveLeft","pixelsToMove","pixelsMoved","scrollFeature","pinnedCols","fromMoving","highlighted","moveLen","leftCol","rightCol","BodyDropTarget","eSecondaryContainers","eBodyViewport","ColumnMoveService","gridColumns","colAnimation","eventSvc","movedColumns","_moveInArray","columnsToMove","proposedColumnOrder","gridOrder","doesMovePassMarryChildren","lockPositionToPlacement","lastPlacement","rulePassed","placement","dropContainer","bean","isGroup","isColumnGroup","headerPosition","displayedLeafColumns","restoreFocusColumn","groupId","leafCols","findGroupWidthId","eSource","displayName","hideColumnOnExit","createDragItemForGroup","createDragItem","columns2","hasVisibleState","unlockedColumns","columnGroup","id","allCols","allColumnsOriginalOrder","allColumnsCurrentOrder","_removeFromArray","columnsInSplit","columnGroupColumns","ColumnMoveModule","AutoWidthCalculator","skipHeader","eHeaderCell","elements","extraPadding","eDummyContainer","eBodyContainer","dummyContainerWidth","res","eCellClone","eCloneParent","eCloneParentClassList","cls","item","AutoWidthModule","setColumnWidths","columnWidths","GroupResizeFeature","eResize","horizontalResizeSvc","colAutosize","finishedWithResizeFunc","columnsToResize","resizeStartWidth","resizeRatios","groupAfterColumns","groupAfterStartWidth","groupAfterRatios","resizeAmount","resizeAmountNormalised","getInitialSizeOfColumns","totalWidth","getSizeRatiosOfColumns","initialSizeOfColumns","columnSizeAndRatios","groupAfter","takeFromLeafCols","preferredSize","initialValues","resizeSets","resizing","dragChange","ResizeFeature","destroyResizeFuncs","canResize","canAutosize","addResize","_setDisplayed","removeResize","f","refresh","resize","autoSize","lastResizeAmount","newWidth","colResize","leftWidth","rightWidth","bodyWidth","_getInnerWidth","notPinningLeft","pinningRight","ColumnResizeService","sets","columnWidth","otherCol","widthDiff","otherColWidth","columnResizeSet","checkMinAndMaxWidthsForSet","dispatchColumnResizedEvent","changedCols","allResizedCols","set","ratios","newWidths","finishedCols","finishedColsGrew","loopCount","_error","subsetCols","subsetRatioTotal","pixelsToDistribute","ratioThisCol","ratioScale","lastCol","colNewWidth","minWidth","maxWidth","atLeastOneColChanged","flexedCols","colFlex","colViewport","colsForEvent","delta","actualWidth","minWidthAccumulated","maxWidthAccumulated","maxWidthActive","minWidthPasses","maxWidthPasses","ColumnResizeModule","GroupWidthFeature","widthChangedListener","HeaderGroupCellCtrl","AbstractHeaderCellCtrl","eHeaderCompWrapper","compBean","colNames","colHover","setupCompBean","SetLeftFeature","ManagedFocusFeature","groupHeaderHeight","displayedColumns","isFirst","isLast","isColumnMoveAtThisLevel","beforeOn","afterOn","isHighlightAfter","isHighlightBefore","resizeFeature","colGroupSvc","userCompFactory","enterpriseMenuFactory","providedColumnGroup","expanded","shouldDisplayTooltip","buttonElement","onClosedCallback","_getHeaderGroupCompDetails","clickListener","contextMenuListener","isMouseOver","providedColGroup","colGroupDef","classes","_getHeaderClassesFromColDef","leafColumns","wrapperHasFocus","KeyCode","newExpandedValue","eHeaderGroup","setColumnGroupOpened","group","newValue","getColumnGroup","getProvidedColumnGroup","getDisplayNameForColumnGroup","location","getColumnGroupState","setColumnGroupState","stateItems","resetColumnGroupState","getLeftDisplayedColumnGroups","getCenterDisplayedColumnGroups","getRightDisplayedColumnGroups","getAllDisplayedColumnGroups","_removeAllFromUnorderedArray","array","toRemove","VisibleColsService","skipTreeBuild","selectionColSvc","pickDisplayedCols","headerGroupRowCount","level","newBodyWidth","getWidthOfColsInList","newLeftWidth","newRightWidth","leftCols","rightCols","lastLeft","firstRight","columnGroupSvc","centerCols","idCreator","GroupInstanceIdCreator","createGroups","center","colOrGroup","doingRtl","filterCallback","emptySpaceBeforeColumn","lastConsideredCol","maxAllowedColSpan","colSpan","columnsToCheckFilter","colsToRemove","j","filterPasses","colForFilter","allDisplayedColumns","depthFirstAllColumnTreeSearch","queryOrder","edge","columnToCompare","tree","useDisplayedChildren","childTree","isColumn","ColumnGroupService","columnGroupState","gridBalancedTree","depthFirstOriginalTreeSearch","node","isProvidedColumnGroup","primaryColumnTree","groupState","impactedGroups","stateItem","groupKey","keyAsString","requiredLevel","colGroupLeafColumns","getDisplayColMethod","groupPointer","originalGroupLevel","groupPointerLevel","allColumnGroups","colId","partId","checkPartId","matched","oldDisplayedGroups","isStandaloneStructure","oldColumnsMapped","topLevelResultCols","groupsOrColsAtCurrentLevel","currentlyIterating","lastGroupedColIdx","createGroupToIndex","to","from","previousNode","previousNodeParent","newGroup","thisNode","thisNodeParent","primaryColumns","existingColumns","columnKeyCreator","existingGroups","colGroupDefMerged","createMergedColGroupDef","providedGroup","AgProvidedColumnGroup","existingGroupAndIndex","existingGroup","_recursivelyCreateColumns","unbalancedTree","currentDepth","columnDepth","originalGroup","newChildren","firstPaddedGroup","currentPaddedGroup","newColId","paddedGroup","balancedColumnTree","depth","treeChildren","maxDepthThisLevel","abstractColumn","newDepth","autoCols","nextChild","autoGroup","newGroupDef","groupInstanceIdCreator","uniqueId","createUniqueColumnGroupId","AgColumnGroup","displayedGroups","recursive","columnsOrGroups","columnOrGroup","columnsOrGroup","ColumnGroupModule","SkeletonCellRendererElement","SkeletonCellRenderer","_setAriaLabelledBy","localeTextFunc","ariaFailed","_setAriaLabel","skeletonEffect","ariaLoading","_params","CheckboxCellRendererModule","CheckboxCellRenderer","SkeletonCellRendererModule","getColumnDef","getColumnDefs","getDisplayNameForColumn","getColumn","getColumns","applyColumnState","_applyColumnState","getColumnState","_getColumnState","resetColumnState","_resetColumnState","isPinning","isPinningLeft","isPinningRight","getDisplayedColAfter","getDisplayedColBefore","setColumnsVisible","keys","setColumnsPinned","getAllGridColumns","getDisplayedLeftColumns","getDisplayedCenterColumns","getDisplayedRightColumns","getAllDisplayedColumns","getAllDisplayedVirtualColumns","_deepCloneDefinition","object","keysToSkip","obj","SKIP_JS_BUILTINS","ColumnDefFactory","colDefColsList","showingPivotResult","lastOrder","rowGroupColumns","pivotColumns","colGroupDefs","addToResult","childDef","lastPointer","parentDef","existingParentDef","defCloned","colDefCloned","ColumnFlexService","totalSpace","visibleCenterCols","flexAfterDisplayIndex","allResizingCols","hasFlexItems","items","flex","isFlex","unfrozenItemCount","unfrozenFlex","acc","unfrozenSpace","freeze","isFrozen","spaceToFill","lastUnfrozenItem","actualLeft","idealRight","idealSize","roundedSize","totalViolation","unclampedSize","clampedSize","freezeType","unconstrainedFlexColumns","changedColumns","flexingColumns","initialFlex","SORTED_CELL_DATA_TYPES_FOR_MATCHING","DataTypeService","formatValue","valA","valB","defaultDataTypes","newDataTypeDefinitions","newFormatValueFuncs","generateFormatValueFunc","dataTypeDefinition","valueFormatter","cellDataType","defaultDataTypeDef","mergedDataTypeDefinition","createGroupSafeValueFormatter","userDataTypeDefs","newDataTypeMatchers","userDataTypeDef","defaultValueParser","defaultValueFormatter","userValueParser","userValueFormatter","matchers","dataTypes","sortedMatchers","alreadyProcessedDataTypes","extendsCellDataType","baseDataTypeDefinition","overriddenBaseDataTypeDefinition","validateDataTypeDefinition","mergeDataTypeDefinitions","extendedDataTypeDefinition","mergedExtendedDataTypeDefinition","userColDef","field","columnStateUpdates","columnListener","propsToCheckForInference","doColDefPropsPreventInference","columnTypes","columnTypeDefs","convertColumnTypes","columnType","columnTypeDef","initialData","fieldContainsDots","_getValueUsingField","_cellDataType","rowData","rowNodes","columnTypeOverridesExist","destroyFunc","firstRowData","state","newRowGroupColumnStateWithoutIndex","newPivotColumnStateWithoutIndex","oldColDef","newColDef","updatedColumnState","getUpdatedColumnState","updatedRowGroupColumnState","updatedPivotColumnState","existingColumnStateUpdates","_addColumnDefaultAndTypes","dateString","dataTypeMatcher","warning","property","dataTypeDefinitions","formatValueFuncs","partialColDef","baseDataType","includeTime","_parseDateTimeFromString","_serialiseDate","_isValidDate","_toStringOrNull","_isValidDateTime","parentDataTypeDefinition","childDataTypeDefinition","parentCellDataType","aggFunc","doesColDefPropPreventInference","checkProps","prop","comparisonValue","columnState","getColumnStateFromColDef","DataTypeModule","ColumnFlexModule","ColumnApiModule","_camelCaseToHumanText","camelCase","rex","rexCaps","word","ColumnNameService","includeAggFunc","headerName","aggColNameSvc","headerValueGetter","ColumnViewportService","scrollWidth","scrollPosition","afterScroll","bodyWidthDirty","displayedColumnsCenter","isAnyParentAutoHeaderHeight","columnLeft","columnRight","leftBounds","rightBounds","columnToMuchLeft","columnToMuchRight","inViewportCallback","workOutGroupsToRender","groupsToRenderSet","groupsToRender","skipFillers","hashColumn","newHash","AgComponentUtils","jsCompFunc","Adapter","callbackResult","type2","_loadTemplate","CellRendererFunctionModule","Registry","icons","userComponents","dynamicBeans","selectors","registerUserComponent","component","processParams","isComponentMetaFunc","classImp","selector","propertyName","createResult","componentFromFramework","frameworkOverrides","registeredViaFrameworkComp","jsComponent","isFwkComp","defaultComponent","overrides","mandatory","_errMsg","BeanClass","NUM_CTRLS","CtrlsService","values","caller","ctrlType","leftHeader","centerHeader","rightHeader","coreCSS","IS_SSR","_injectGlobalCSS","css","styleContainer","debugId","layer","priority","nonce","FORCE_LEGACY_THEMES","injections","injectionState","newInjection","insertAfter","injection","_injectCoreAndModuleCSS","_getAllRegisteredModules","_registerGridUsingThemingAPI","environment","_unregisterGridUsingThemingAPI","_a","createPart","PartImpl","defaultModeName","partCounter","feature","modeParams","cssImports","inject","className","cssImport","kebabCase","str","m","paramToVariableName","paramName","paramToVariableExpression","clamp","min","max","memoize","accentMix","mix","foregroundMix","foregroundBackgroundMix","foregroundHeaderBackgroundMix","backgroundColor","foregroundColor","accentColor","defaultLightColorSchemeParams","coreDefaults","batchEditStyleDefaultCSS","baseParams","baseDarkBatchEditParams","makeBatchEditStyleBaseTreeShakeable","batchEditStyleBase","buttonStyleBaseCSS","baseParams2","makeButtonStyleQuartzTreeShakeable","createPart","__spreadProps","__spreadValues","baseParams2","backgroundColor","accentColor","buttonStyleBaseCSS","buttonStyleQuartz","columnDropStyleBorderedCSS","makeColumnDropStyleBorderedTreeShakeable","createPart","columnDropStyleBorderedCSS","columnDropStyleBordered","paramTypes","getParamType","memoize","param","type","literalToCSS","value","paramToVariableExpression","colorValueToCss","colorExpr","clamp","colorSchemeValueToCss","lengthValueToCss","p","scaleValueToCss","borderValueToCss","borderStyleValueToCss","shadowValueToCss","fontFamilyValueToCss","quoteUnsafeChars","font","fontWeightValueToCss","imageValueToCss","durationValueToCss","_error","paramValidators","paramValueToCss","FORCE_LEGACY_THEMES","createTheme","ThemeImpl","buttonStyleQuartz","columnDropStyleBordered","batchEditStyleBase","_ThemeImpl","parts","part","PartImpl","_logPreInitErr","feature","createPart","params","mode","defaultModeName","styleContainer","cssLayer","nonce","loadThemeGoogleFonts","IS_SSR","FORCE_LEGACY_THEMES","uninstallLegacyCSS","_injectCoreAndModuleCSS","googleFontsUsed","getGoogleFontsUsed","googleFont","loadGoogleFont","deduplicatePartsByFeature","paramsCache","mergedModeParams","__spreadValues","coreDefaults","partMode","partParams","mergedParams","partParamNames","partParamName","partParamValue","mergedMode","mergedParams2","className","selectorPlaceholder","innerParamsCss","variablesCss","inheritanceCss","modeParams","wrapPrefix","key","value","cssValue","paramValueToCss","_error","cssName","paramToVariableName","inheritedName","css","lastPartByFeature","result","theme","visitParamValue","paramValue","mv","uninstalledLegacyCSS","style","googleFontsLoaded","font","__async","googleFontsDomain","_injectGlobalCSS","checkboxStyleDefaultCSS","makeCheckboxStyleDefaultTreeShakeable","backgroundColor","foregroundBackgroundMix","accentColor","checkboxStyleDefault","darkParams","__spreadProps","__spreadValues","defaultLightColorSchemeParams","baseDarkBatchEditParams","foregroundBackgroundMix","accentMix","foregroundColor","backgroundColor","darkBlueParams","__spreadProps","__spreadValues","darkParams","makeColorSchemeVariableTreeShakeable","createPart","defaultLightColorSchemeParams","darkParams","darkBlueParams","colorSchemeVariable","iconNameToSvgFragment","iconNameToFullSvg","getQuartzIconsCss","args","result","iconName","iconSvg","quartzIconSvg","name","strokeWidth","fullSVG","svgFragment","iconSetQuartz","createPart","iconSetQuartzRegular","iconSetQuartz","inputStyleBaseCSS","inputStyleBorderedCSS","baseParams3","makeInputStyleBorderedTreeShakeable","createPart","__spreadProps","__spreadValues","baseParams3","backgroundColor","accentColor","foregroundBackgroundMix","inputStyleBaseCSS","inputStyleBorderedCSS","inputStyleBordered","tabStyleBaseCSS","baseParams4","makeTabStyleQuartzTreeShakeable","createPart","__spreadProps","__spreadValues","baseParams4","foregroundMix","backgroundColor","tabStyleBaseCSS","tabStyleQuartz","makeThemeQuartzTreeShakeable","createTheme","checkboxStyleDefault","colorSchemeVariable","iconSetQuartzRegular","tabStyleQuartz","inputStyleBordered","columnDropStyleBordered","themeQuartz","CELL_HORIZONTAL_PADDING","INDENTATION_LEVEL","ROW_GROUP_INDENT_SIZE","ROW_HEIGHT","HEADER_HEIGHT","LIST_ITEM_HEIGHT","ROW_BORDER_WIDTH","PINNED_BORDER_WIDTH","paramsId","Environment","BeanStub","beans","eGridDiv","gridOptions","_unregisterGridUsingThemingAPI","cellHorizontalPadding","indentationLevel","rowGroupIndentSize","cellPaddingRight","el","gridTheme","themeClass","node","isThemeEl","className","oldClass","oldRowHeight","height","newRowHeight","css","debugId","_injectGlobalCSS","variable","cached","measurement","sizeEl","newSize","NO_VALUE_SENTINEL","container","_createElement","border","noWarn","lastMeasurement","_warn","unsubscribe","_observeResize","newMeasurement","change","width","gos","globalCSS","oldGridTheme","themeGridOption","newGridTheme","themeOrDefault","themeQuartz","ThemeImpl","_error","_registerGridUsingThemingAPI","_injectCoreAndModuleCSS","eParamsStyle","styleNonce","IS_SSR","EventService","LocalEventService","globalListener","globalSyncListener","eventType","listener","async","event","_addGridCommonParams","getHeaderIndexToFocus","column","level","columnRowIndex","parent","isColSpanning","HeaderNavigationService","p","eDocument","_getDocument","colKey","floatingFilter","colModel","colGroupSvc","ctrlsSvc","allCtrls","isFloatingFilterVisible","_last","headerRowCount","getFocusHeaderRowCount","row","col","headerRowIndex","direction","focusSvc","visibleCols","focusedHeader","rowLen","currentRowType","columnHeaderRowIndex","nextRow","nextFocusColumn","headerRowIndexWithoutSpan","getColumnVisibleParent","getColumnVisibleChild","skipColumn","fromTab","__spreadValues","nextHeader","normalisedDirection","userFunc","wasFocusedFromUserFunc","currentIndex","nextFocusedCol","nextRowIndex","allVisibleCols","columnToScrollTo","isColumnGroup","columns","currentFocusedColumn","AgColumnGroup","leafChildren","headerGroupRowIndex","groupAtLevel","AgColumn","rowIndex","centerHeaderContainer","currentColumn","optimisticNextIndex","isSpanningCol","nextVisibleParent","result","firstChild","firstCol","FocusService","clearFocusedCellListener","_registerKeyboardFocusEvents","colFromColumnModel","focusedCell","_getActiveDomElement","DOM_DATA_KEY_HEADER_CTRL","activeElement","DOM_DATA_KEY_CELL_CTRL","DOM_DATA_KEY_ROW_CTRL","eBrowserCell","key","ePointer","_getDomData","focusedCellPosition","rowPinned","params","rowCtrl","focusEventParams","forceBrowserFocus","preventScrollOnBrowserFocus","sourceEvent","gridColumn","_makeNull","__spreadProps","cellPosition","_areCellsEqual","headerCtrl","pinned","focusedColumn","focusedHeaderRowIndex","_isHeaderFocusSuppressed","allowUserOverride","fromCell","rowWithoutSpanValue","headerPosition","currentPosition","params2","newHeaderPosition","userResult","filterManager","headerNavigation","focusSuccess","firstColumn","rowPinnedType","backwards","overlayGui","_focusInto","canFocusOverlay","_isCellFocusSuppressed","_focusNextGridCoreContainer","_getLastRow","_getFirstRow","rowNode","_getRowNode","isRtl","KeyCode","position","forceFirstColumn","ScrollVisibleService","colAnimation","centerRowCtrl","horizontalGap","verticalGap","gridOptionsScrollbarWidth","scrollbarWidth","_getScrollbarWidth","GridDestroyService","stateSvc","context","ALWAYS_SYNC_GLOBAL_EVENTS","_PUBLIC_EVENTS","_PUBLIC_EVENT_HANDLERS_MAP","_PUBLIC_EVENTS","mem","ev","_getCallbackForEvent","makeIconParams","dataRefSuffix","classSuffix","SortIndicatorElement","SortIndicatorComp","Component","skipTemplate","RefPlaceholder","eSortOrder","eSortAsc","eSortDesc","eSortMixed","eSortNone","column","suppressOrder","updateIcons","sortUpdated","iconName","eParent","eIcon","_createIconNoSpan","gos","beans","sortDirection","_setDisplayed","alwaysHideNoSort","isNone","isColumnShowingRowGroup","_isColumnsSortingCoupledToGroup","isMixedSort","sortSvc","allColumnsWithSorting","indexThisCol","moreThanOneColSorting","col","showIndex","_clearElement","SortIndicatorSelector","DEFAULT_SORTING_ORDER","SortService","BeanStub","multiSort","source","nextDirection","event","sort","showRowGroupCols","isColumnsSortingCoupledToGroup","columnsToUpdate","sortableRowGroupColumns","doingMultiSort","updatedColumns","clearedColumns","lastColToChange","colModel","isCoupled","groupParent","lastSortIndexCol","allSortedCols","allSortedColsWithoutChangesOrGroups","idx","columns","isSorting","columnsToSkip","columnToClear","sortingOrder","currentIndex","notInArray","lastItemInArray","rowGroupColsSvc","isSortingLinked","isAggregated","isSecondary","isGroup","sortedRowGroupCols","allColsIndexes","index","a","b","iA","iB","posA","posB","isSortLinked","indexMap","groupDisplayCol","idx1","idx2","isColumnSortCouplingActive","isGroupDisplayColumn","linkedColumns","sortableColumns","firstSort","comp","clickElement","lastMovingChanged","moving","movedRecently","onSortingChanged","isMultiSorting","sourceCol","initialSort","sortIndex","initialSortIndex","sortOrder","USER_COMP_MODULES","COLUMN_DEFINITION_DEPRECATIONS","COLUMN_DEFINITION_MOD_VALIDATIONS","cellEditor","editable","cellRenderer","filter","options","enterpriseMenuTabs","tab","COLUMN_DEFINITION_VALIDATIONS","_colDef","paginationAutoPageSize","colDef","_options","gridOptions","rowSelection","headerValueGetter","icons","_errMsg","invalidItems","toStringWithNullUndefined","type","suppressRowTransform","cellSelection","enableCellSpan","rowDragEntireRow","enableCellTextSelection","colDefPropertyMap","ALL_PROPERTIES","COL_DEF_VALIDATORS","STRING_GRID_OPTIONS","OBJECT_GRID_OPTIONS","ARRAY_GRID_OPTIONS","_NUMBER_GRID_OPTIONS","OTHER_GRID_OPTIONS","_BOOLEAN_MIXED_GRID_OPTIONS","_BOOLEAN_GRID_OPTIONS","_FUNCTION_GRID_OPTIONS","_GET_ALL_GRID_OPTIONS","GRID_OPTION_DEPRECATIONS","toConstrainedNum","key","value","min","GRID_OPTIONS_MODULES","GRID_OPTION_VALIDATIONS","definedValidations","autoSizePadding","cacheBlockSize","cacheOverflowSize","domLayout","validLayouts","enableRowPinning","pinnedTopRowData","pinnedBottomRowData","isRowPinnable","isRowPinned","infiniteInitialRowCount","keepDetailRowsCount","paginationPageSize","values","rowBuffer","rowStyle","serverSideInitialRowCount","rowModel","treeDataChildrenField","treeDataParentIdField","getDataPath","getRowId","ssrmWarning","viewportRowModelBufferSize","viewportRowModelPageSize","autoGroupColumnDef","showOpenedGroup","renderingMode","validModes","validations","_mergeDeep","GRID_OPTIONS_VALIDATORS","changeSetId","gridInstanceSequence","GridOptionsService","LocalEventService","restrictToSyncOnly","eventName","alwaysSync","ALWAYS_SYNC_GLOBAL_EVENTS","isPublicEventHandler","fireEvent","name","e","eventHandlerName","eventHandler","q","property","GRID_OPTION_DEFAULTS","_exists","callback","callbackParams","force","changeSet","events","validation2","shouldForce","previousValue","_logIfDebug","listener","params","modValidations","moduleToCheck","colId","skipInferenceCheck","moduleName","reasonOrId","registered","modName","_error","__spreadProps","__spreadValues","_areModulesGridScoped","_isUmd","_isModuleRegistered","getHeaderCompElementParams","includeSortIndicator","hiddenAttrs","HeaderCompElement","HeaderCompElementNoSort","HeaderComp","oldParams","mergedParams","paramsTemplate","touchSvc","rowNumbersSvc","userCompFactory","sortComp","userCompDetails","_getInnerHeaderCompDetails","displayName","oldDisplayName","_toString","_removeFromParent","eMenu","isLegacyMenu","_isLegacyMenuEnabled","currentSuppressMenuHide","alwaysShow","element","isFilterShortcut","eFilterButton","isLegacyMenuEnabled","enableSorting","eSortIndicator","eFilter","onFilterChangedIcon","filterPresent","enabled","filterChangedCallback","icon","isFilter","HeaderGroupCompElement","HeaderGroupComp","_warn","_getInnerHeaderGroupCompDetails","agOpened","agClosed","columnGroup","expandAction","_isStopPropagationForAgGrid","newExpandedValue","stopPropagationAction","_stopPropagationForAgGrid","providedColumnGroup","updateIcon","eElement","action","expanded","hasInnerComponent","ColumnHeaderCompModule","VERSION","ColumnGroupHeaderCompModule","AnimationFrameService","scrollTop","task","list","isFramework","isDeferred","taskList","taskItem","millis","p1","p2","f1","destroyTasks","ctrlsSvc","frameworkOverrides","p1Tasks","p2Tasks","f1Tasks","frameStart","duration","noMaxMillis","scrollFeature","_requestAnimationFrame","AnimationFrameModule","TouchService","ctrl","_isIOSUserAgent","mouseListener","touch","touchEvent","rowCtrl","cellCtrl","mouseEvent","_isEventSupported","nowMillis","res","menuSvc","touchListener","TouchListener","suppressMenuHide","tapMenuButton","menuTouchListener","eventType","showMenuFn","tapListener","target","filterButtonTouchListener","longTapListener","_isEventFromThisGrid","TouchModule","CellNavigationService","focusedCell","ctrlPressed","upKey","KeyCode","downKey","leftKey","rowIndex","pageBounds","visibleCols","pinnedRowModel","rowPinned","isRtl","pointer","finished","gridCell","rowNode","lastCell","colToLeft","colToRight","adjustedLastCell","rowBelow","_getRowBelow","rowAbove","_getRowAbove","backwards","pagination","displayedColumns","newRowIndex","newFloating","newColumn","_missing","_last","suppressNavigable","getFocusedCell","clearFocusedCell","setFocusedCell","colKey","tabToNextCell","tabToPreviousCell","setFocusedHeader","floatingFilter","headerPosition","NavigationService","_throttle","p","fromFullWidth","alt","rangeServiceShouldHandleShift","currentCell","_getCellPositionForEvent","processed","scrollIndex","scrollType","scrollColumn","focusIndex","focusColumn","isAsync","focusSvc","rangeSvc","scrollPosition","getVScroll","pixelsInOnePage","rowAutoHeight","pagingPixelOffset","currentPageBottomPixel","currentPageBottomRow","currentPageTopPixel","currentPageTopRow","up","firstRow","lastRow","currentRowNode","rowPixelDiff","nextCellPixel","diff","step","lastRowIndex","pixelSum","currentCellHeight","scrollbarWidth","rowHeight","cellToFocus","homeKey","allColumns","columnToSelect","previous","keyboardEvent","movedToNextCell","_isHeaderFocusSuppressed","_focusNextGridCoreContainer","CellCtrl","rowRenderer","cellOrRow","_getCellByPosition","editSvc","previousCell","cellPos","RowCtrl","focusedContainer","nextCell","previousPosition","startEditing","skipToNextEditableCell","nextPosition","cellNavigation","userFunc","userResult","headerLen","getFocusHeaderRowCount","fullRowEdit","row","cell","allowUserOverride","hitEdgeOfGrid","userCell","normalisedPosition","cellPosition","position","eventSvc","rowComp","currentCellFocused","fromBelow","_isRowBefore","_getRowNode","colSpanningList","isGroupStickyEnabled","_isGroupRowsSticky","skipScrollToRow","KeyboardNavigationModule","HeaderNavigationService","PageBoundsListener","modelUpdatedEvent","PageBoundsService","topRowBounds","bottomRowBounds","pageFirstPixel","pageLastPixel","topDisplayedRowIndex","bottomDisplayedRowIndex","pinnedColumnModuleCSS","SetPinnedWidthFeature","isLeft","elements","width","displayed","_setFixedWidth","PinnedColumnService","printLayout","_isDomLayout","newLeftWidth","newRightWidth","eBodyViewport","bodyWidth","_getInnerWidth","processedColumnsToRemove","processUnpinnedColumns","hasLockedPinned","columnsToRemove","isRowNumberCol","keys","pinned","colAnimation","actualPinned","updatedCols","dispatchColumnPinnedEvent","initialPinned","scrollVisibleSvc","pinningLeft","pinningRight","hidden","hiddenChanged","widthWithPadding","leftWidth","rightWidth","viewportWidth","pinnedRightWidth","pinnedLeftWidth","totalPinnedWidth","pinnedLeftColumns","pinnedRightColumns","indexRight","indexLeft","totalWidthRemoved","spaceNecessary","currentColumn","PinnedColumnModule","AriaAnnouncementService","_debounce","eDocument","_getDocument","div","_setAriaLive","_setAriaRelevant","_setAriaAtomic","valueToAnnounce","descriptionContainer","AriaModule","showLoadingOverlay","showNoRowsOverlay","hideOverlay","overlayWrapperComponentCSS","OverlayWrapperElement","OverlayWrapperComponent","_findNextFocusableElement","isFocused","cssClass","overlayWrapperClassList","AUTO_HEIGHT","NORMAL","PRINT","LayoutCssClasses","LayoutFeature","overlayWrapperCssClass","overlayComponentPromise","exclusive","gridOption","activeElement","_getActiveDomElement","_isNothingFocused","component","currentValue","_addGridCommonParams","_focusInto","padding","activeOverlay","elementToFocus","updateListenerDestroyFunc","activeEl","OverlayWrapperSelector","OverlayService","_isClientSideRowModel","_isServerSideRowModel","updateOverlayVisibility","overlayWrapperComp","loading","state","isClientSide","isServerSide","_getLoadingOverlayCompDetails","_getNoRowsOverlayCompDetails","compDetails","wrapperCssClass","promise","wasExclusive","eWrapper","newPadding","OverlayModule","LoadingOverlayComponent2","NoRowsOverlayComponent2","RowContainerHeightService","_getMaxDivHeight","newScrollY","newBodyHeight","scrollPercent","divStretchOffset","height","newOffset","newOffsetFloor","modelHeight","modelPixel","pos","rowTop","modelMaxScroll","ROW_ANIMATION_TIMEOUT","RowRenderer","onCellSelectionChanged","onColumnMovedPinnedVisible","addCellSelectionListeners","removeCellSelectionListeners","_isCellSelectionEnabled","stickyRowSvc","gridBodyCtrl","countProp","count","RowCtrlCache","liveList","zombieList","cachedList","suppressCellFocus","cellFlashSvc","func","forEachCellWithThisCol","leftChangedListener","widthChangedListener","firstRightPinnedChangedListener","lastLeftPinnedChangedListener","colDefChangedListener","embedFullWidthRows","destroyRows","rowIndexesToRemove","eCell","recycleRows","rowCtrls","floating","rowCtrlMap","node","i","rowNodeCount","suppressEvent","destroyAndRecreateCtrl","dataStruct","rowNodes","animate","_isAnimateRows","rowsToRecycle","stickyRowFeature","extraHeight","scrollToTop","suppressScrollToTop","additionalHeight","rowContainerHeight","containerHeight","rowPosition","rowCtrlsLength","cellCtrls","cellCtrlsLength","j","spannedRowRenderer","stickyTopRowCtrls","stickyBottomRowCtrls","suppressFlash","refreshCellParams","rowRedrawn","rowIdsMap","mapRowNodes","allRowCtrls","isRowInMap","colIdsMap","suppressAnimation","stubNodeIndexes","ctrlsByIdMap","rowsToRemove","indexToRemove","animationFrameSvc","afterScroll","cellFocused","oldFirstRow","oldLastRow","hasStickyRowChanges","rangeChanged","newFocusedCell","indexesToDraw","indexesToDrawMap","indexesNotToDraw","focusedRowIndex","checkRowToDraw","ret","currRow","fullWidthCtrl","rowNodesMap","rowCtrlsMap","executeInAWhileFuncs","instanceId","rowsToBuffer","defaultRowHeight","_getRowHeightAsNumber","newFirst","newLast","bufferPixels","suppressRowVirtualisation","rowHeightsChanged","firstPixel","lastPixel","paginationOffset","bodyVRange","bodyTopPixel","bodyBottomPixel","firstRowIndex","pageFirstRow","pageLastRow","rowLayoutNormal","suppressRowCountRestriction","rowBufferMaxSize","firstDiffers","lastDiffers","topPixel","bottomPixel","pinnedRowHeightsChanged","stickyHeightsChanged","rowModelHeightsChanged","rowHasFocus","rowIsEditing","rowIsDetail","rowCtrlFromCache","useAnimationFrameForCreate","viewportRows","stickyTopRows","stickyBottomRows","startIndex","endIndex","blockAfterViewport","maxCount","rowCtrlToDestroy","rowNodeId","_removeFromArray","id","RowNodeSorter","propChange","sortOptions","sortedRowNodes","currentPos","item","sortedNodeA","sortedNodeB","nodeA","nodeB","len","sortOption","isDescending","valueA","valueB","comparatorResult","providedComparator","_defaultComparator","comparatorOnCol","groupLeafField","primaryColumn","valueSvc","_isGroupUseEntireRow","leafChild","displayCol","onSortChanged","SortModule","SyncService","columnDefs","_convertColumnEventSourceType","expireValueCache","getCellValue","useFormatter","result","SOURCE_PASTE","ChangeDetectionService","nodesToRefresh","clientSideRowModel","rootNode","onlyChangedColumns","changedPath","ChangedPath","rowNode2","ExpressionService","expression","expressionToFunctionCache","functionBody","theFunction","ValueCache","cacheVersion","ValueCacheModule","ExpressionModule","ChangeDetectionModule","CellApiModule","EDITING_CHECK_SIBLINGS","ValueService","includeValueFormatted","exporting","showRowGroupColValueSvc","isFullWidthGroup","isGroupCol","processTreeDataAsGroup","groupValue","valueFormatted","isPivotLeaf","isOpenedGroup","groupShowsAggData","ignoreAggData","format","field","data","newValue","rowGroupColId","allowUserValuesForCell","groupDataExists","aggDataExists","ignoreSsrmAggData","ssrmFooterGroupCol","_getValueUsingField","cellValueGetter","oldValue","valueParser","suppliedFormatter","useFormatterFromColumn","expressionSvc","formatter","eventSource","valueSetter","valueWasDifferent","savedValue","onCellValueChanged","isFieldContainsDots","valuesAreSame","fieldPieces","currentObject","fieldPiece","valueGetter","valueFromCache","otherColumn","keyCreator","keyParams","CommunityCoreModule","GridDestroyService","ApiFunctionService","Registry","UserComponentFactory","VisibleColsService","EventService","ColumnModel","FocusService","Environment","ScrollVisibleService","CtrlsService","ColumnNameService","ColumnViewportService","getGridId","destroy","isDestroyed","getGridOption","setGridOption","updateGridOptions","isModuleRegistered","DataTypeModule","ColumnMoveModule","ColumnResizeModule","ColumnGroupModule","CellRendererFunctionModule","ColumnFlexModule","SkeletonCellRendererModule","_fuzzySuggestions","inputValue","allSuggestions","hideIrrelevant","filterByPercentageOfBestMatch","thisSuggestions","text","_getLevenshteinSimilarityDistance","suggestion","limit","indices","inputText","previousRow","currentRow","sourceLength","targetLength","secondaryScore","sourceChar","targetChar","insertCost","deleteCost","replaceCost","ENTERPRISE_MODULE_NAMES","ALL_COLUMN_FILTERS","RESOLVABLE_MODULE_NAMES","MODULES_FOR_ROW_MODELS","resolveModuleNames","rowModelType","resolvedModuleNames","resolved","resolvedModName","rowModelForModule","NoModulesRegisteredError","moduleImportMsg","moduleNames","imports","convertToUserModuleName","m","baseDocLink","inModuleRegistration","umdMissingModule","chartModules","message","missingRowModelTypeError","missingModule","gridScoped","gridId","additionalText","isUmd2","reason","MISSING_MODULE_REASONS","chartImportRequired","missingChartsWithModule","gridModule","clipboardApiError","method","AG_GRID_ERRORS","nodeId","variable","groupPrefix","fnName","preDestroyLink","module","toIndex","t","parentCellDataType","cellDataType","methodName","compName","guiFromFilter","newFilter","filterModelType","param","paginationPageSizeOption","pageSizeSet","pageSizesSet","pageSizeOptions","paginationPageSizeSelector2","propertyName","componentName","agGridDefaults","jsComps","textOutput","validComponents","k","suggestions","chartId","allRange","feature","currentChartType","chartType","customThemeName","panel","group","chartDataType","option","unrecognisedGroupIds","dataType","featureName","unrecognisedColIds","providedStrategy","menuTabName","itemsToConsider","parentGroupData","childNodeData","rowId","rowData","duplicateRowsData","firstData","secondData","startRow","rowGroupId","justCurrentPage","duplicateIdText","defaultByKey","invalidColIds","defaultOffset","lineDash","menuItemOrString","theme","version","point","part","propName","parentId","providedId","usedId","prop","msg","_","getError","errorId","args","msgOrFunc","errorBody","errorSuffix","getErrorLink","_gridApiCache","_gridElementCache","createGrid","eGridDiv","gridParams","destroyCallback","newGridDiv","_createElement","GridCoreCreator","context","gridComp","GridComp","nextGridId","providedOptions","createUi","acceptChanges","_destroyCallback","GlobalGridOptions","registeredModules","beanClasses","providedBeanInstances","contextParams","gridBeanInitComparator","gridBeanDestroyComparator","createGridApi","api","Context","_registerModule","_getRegisteredModules","getDefaultRowModelType","registry","apiFunctionSvc","apiFunctions","VanillaFrameworkOverrides","seed","userProvidedRowModelType","rowModelModuleNames","rowModuleModelName","_logPreInitErr","_hasUserRegistered","registeredRowModelModules","rowModelType2","userRowModelType","bean","passedRowModelType","_getClientSideRowModel","beans","rowModel","_getInfiniteRowModel","_getServerSideRowModel","LocaleService","BeanStub","gos","getLocaleText","key","defaultValue","variableValues","localeText","localisedText","found","convertColumnState","columnState","enablePivotMode","sortColumns","groupColIds","aggregationColumns","pivotColIds","leftColIds","rightColIds","hiddenColIds","columnSizes","columns","defaultSortIndex","i","colId","sort","sortIndex","rowGroup","rowGroupIndex","aggFunc","pivot","pivotIndex","pinned","hide","width","flex","_convertColumnGroupState","columnGroupState","openColumnGroups","groupId","open","BaseComponentWrapper","OriginalConstructor","mandatoryMethods","optionalMethods","componentType","wrapper","methodName","mandatory","_warn","TooltipComponentElement","TooltipComponent2","PopupComponent","params","value","eGui","_toString","locationKebabCase","SHOW_QUICK_TOOLTIP_DIFF","FADE_OUT_TOOLTIP_TIMEOUT","INTERACTIVE_HIDE_DELAY","lastTooltipHideTime","isLocked","TooltipStateManager","BeanStub","tooltipCtrl","getTooltipValue","beans","el","delayOption","delay","type","trigger","_isIOSUserAgent","relatedTarget","parentCompGui","tooltipGui","mouseEvent","fromHideTooltip","ctrl","_exists","rowNode","_addGridCommonParams","__spreadValues","callback","_getTooltipCompDetails","forceHide","tooltipInstanceCopy","tooltipComp","translate","addPopupRes","listener","_getDocument","e","activeEl","_getActiveDomElement","parentGui","__spreadProps","tooltipPopupDestroyFunc","_isShowTooltipWhenTruncated","gos","TooltipFeature","BeanStub","ctrl","beans","tooltip","allowEmptyString","name","eGui","getTooltipValue","TooltipStateManager","clearWithEmptyString","_formatNumberCommas","value","getLocaleTextFunc","localeTextFunc","thousandSeparator","decimalSeparator","BaseCreator","fileName","extension","params","serializingSession","BaseGridSerializingSession","config","colModel","rowGroupColsSvc","colNames","valueSvc","gos","processCellCallback","processHeaderCallback","processGroupHeaderCallback","processRowGroupCallback","_columnsToExport","column","currentColumnIndex","accumulatedRowIndex","type","node","isFullWidthGroup","_isFullWidthGroupRow","_addGridCommonParams","valueToParse","valueToFormat","isTreeData","valueService","isGrandTotalRow","isMultiAutoCol","concatenatedGroupValue","pointer","value2","valueFormatted2","valueFormatted","callback","_downloadFile","content","win","_warn","element","url","INITIAL_GRID_OPTION_KEYS","clientSide","serverSide","infinite","functionRowModels","deprecatedFunctions","validateApiFunction","functionName","apiFunction","deprecation","version","replacement","old","message","apiMethod","args","replacementMessage","_warnOnce","rowModels","rowModel","_errorOnce","DYNAMIC_BEAN_MODULES","ICON_VALUES","ICON_MODULES","DEPRECATED_ICONS_V33","ValidationService","provideValidationServiceLogger","source","key","options","GRID_OPTIONS_VALIDATORS","propertyName","componentName","agGridDefaults","jsComps","moduleForComponent","USER_COMP_MODULES","beanName","moduleName","_errMsg","__spreadProps","__spreadValues","eventType","DEPRECATED_ROW_NODE_EVENTS","iconName","_error","_areModulesGridScoped","compName","colDef","COL_DEF_VALIDATORS","validator","validations","deprecations","allProperties","propertyExceptions","objectName","docsUrl","warnings","rules","dependencies","validate","supportedRowModels","expectedType","actualType","warning","failedOptions","key2","gridOptionValue","failedKey","possibleOptions","o","object","exceptions","validProperties","containerName","VUE_FRAMEWORK_PROPS","invalidProperties","_fuzzyCheckStrings","invalidPropertiesKeys","id","getError","inputValues","validValues","allSuggestions","fuzzyMatches","invalidInputs","inputValue","validValue","invalidInput","_fuzzySuggestions","ValidationModule","VERSION","updateRowNodeAfterFilter","rowNode","FilterStage","changedPath","filterActive","filterCallback","includeChildNodes","childNode","passBecauseChildren","passBecauseDataPasses","treeDataDepthFirstFilter","alreadyFoundInParent","i","foundInParent","treeDataFilterCallback","defaultFilterCallback","HeaderFilterCellCtrl","AbstractHeaderCellCtrl","comp","eButtonShowMainFilter","eFloatingFilterBody","compBeanInput","compBean","setupCompBean","colDefChanged","filterExists","floatingFilterExists","eMenuIcon","_createIconNoSpan","ManagedFocusFeature","_setAriaLabel","_getActiveDomElement","nextFocusableEl","_findNextFocusableElement","nextFocusableColumn","backwards","presentedColsService","nextCol","wrapperHasFocus","KeyCode","_stopPropagationForAgGrid","_focusInto","notFromHeaderWrapper","fromWithinHeader","_isElementChildOfClass","lastFocusEvent","fromTab","shouldFocusLast","setLeftFeature","SetLeftFeature","_isLegacyMenuEnabled","compDetails","eventSource","colFilter","syncWithFilter","event","compPromise","eventWithParams","parentModel","filterChangedEvent","listener","width","isFilterAllowed","wasActive","becomeActive","newCompDetails","compInstance","userCompDetails","floatingFilter","_getFilterModel","showColumnMenu","colKey","hidePopupMenu","SharedMenuModule","MenuService","instanceIdSeq","WAIT_FOR_POPUP_CONTENT_RESIZE","PopupService","p","ePopupParent","ePopup","sourceRect","parentRect","minWidthSet","updatePosition","y","minWidth","maxX","x","xLeftPosition","xRightPosition","nudgeX","nudgeY","skipObserver","keepWithinBounds","alignSide","position","targetCompRect","spaceAvailableUnder","spaceAvailableAbove","spaceRequired","positioned","popupIdx","popup","alignedToElement","mouseEvent","lastSize","updatePopupPosition","fromResizeObserver","resizeObserverDestroyFunc","_observeResize","eDocument","_getDocument","popupParent","_getElementRectWithOffset","direction","isVertical","sizeProperty","anchorProperty","offsetProperty","scrollPositionProperty","docElement","popupRect","documentRect","isBody","offsetSize","sizeOfParent","_getAbsoluteHeight","_getAbsoluteWidth","max","eChild","ariaLabel","ariaOwns","alwaysOnTop","positionCallback","anchorToElement","pos","wrapperEl","removeListeners","ePopupParentRect","_exists","environment","eWrapper","_createElement","_setAriaRole","_setAriaOwns","popupEl","closedCallback","afterGuiAttached","closeOnEsc","modal","popupHidden","hidePopupOnKeyboardEvent","_isStopPropagationForAgGrid","hidePopupOnMouseEvent","hidePopupOnTouchEvent","popupParams","touchEvent","keyboardEvent","forceHide","el","relativeElement","popupIndex","destroyFunc","destroyPositionTracker","eParent","extractFromPixelValue","pxSize","createPosition","prop","initialDiff","initial","topPosition","leftPosition","fwOverrides","AgPromise","resolve","pRect","sRect","calculateNewPosition","current","currentDiff","newValue","intervalId","target","indexOfThisChild","_isElementInEventPath","parent","popupList","popupLen","standardPopupList","alwaysOnTopList","innerElsScrollMap","onTopLength","targetList","currentPopup","currentEl","PopupModule","columnFiltersCSS","isColumnFilterPresent","filterManager","getColumnFilterInstance","destroyFilter","setFilterModel","model","getFilterModel","getColumnFilterModel","useUnapplied","setColumnFilterModel","showColumnFilter","hideColumnFilter","getColumnFilterHandler","doFilterAction","colId","action","DUMMY_HANDLER","ColumnFilterService","FILTER_HANDLER_MAP","initialFilterModel","dataTypeSvc","allPromises","previousModel","modelKeys","filterWrapper","newModel","currentModel","columns","before","after","_jsonEquals","excludeInitialState","result","allColumnFilters","initialModel","state","newState","hasNewState","colState","actualState","filter","isFilterActive","groupFilterEnabled","_getGroupAggFiltering","isAggFilter","isShowingPrimaryColumns","activeAggregateFilters","activeColumnFilters","addFilter","doesFilterPassWrapper","promises","promise","getFilterUiFromWrapper","additionalEventAttributes","colIdToSkip","targetAggregates","data","aggData","targetedFilters","targetedData","isHandler","handler","handlerParams","wrapper","rowRenderer","filterColumn","filterValueGetterOverride","filterValueSvc","columnToUse","active","groupFilter","createIfMissing","isFloating","getCellDataType","_isSetFilterByDefault","_getDefaultSimpleFilter","filterDef","defaultFilter","getFilterParams","createFilterCompDetails","updatedParams","_getFilterDetails","update","selectableFilter","handlerGenerator","filterCompDetails","createFilterUi","forFloatingFilter","useHandler","filterChangedCallback","displayParams","model2","updateInstanceCallback","filterUi","filterComp","frameworkOverrides","registry","doesFilterPass","getFilterHandlerFromDef","filterDef2","isColumnFilterComp","providedFilterHandler","resolveProvidedFilterHandler","handlerName2","filterHandler","handlerName","userFilterHandler","FILTER_HANDLERS","filterName","jsComp","fwComp","_getFilterCompKeys","handlerFunc","_isClientSideRowModel","filterParams","_mergeFilterParamsWithApplicationProvidedParams","handlerNameOrCallback","currentColumn","allFiltersAreGroupFilters","col","showParentFilter","userCompFactory","parentFilterInstance","filterComponent","instance","_unwrapUserComp","defaultFloatingFilterType","_getDefaultFloatingFilterType","isReactive","_getFloatingFilterCompDetails","newFilterUi","columnListener","isActive","removeFilter","wasHandler","newFilterParams","existingModel","oldHandler","_refreshHandlerAndUi","created","oldCompDetails","oldComponentClass","newComponentClass","filterPromise","res","dataTypeDefinition","formatValue","providedFilter","filterValueGetter","colDefFilterParams","colDefFilterValueGetter","_getFilterParamsForDataType","justCreated","uiPromise","oldState","filterInstance","getFilterUi","_updateFilterModel","getAndRefreshFilterUi","activeFilterComps","hasChanges","isGlobal","lastContainerType","filterPanelSvc","isAnyFilterPresent","onFilterChanged","FilterManager","refreshFiltersForAggregations","updateAdvFilterColumns","enabled","isFilterPresent","skipWarning","_mergeDeep","expression","show","eCompToInsertBefore","FilterMenuFactory","containerType","onClosedCallback","eMenu","multiplier","isLegacyMenuEnabled","FilterComp","e","hidePopup","afterGuiDetached","_isColumnMenuAnchoringEnabled","_setColMenuVisible","isKeyboardEvent","_isVisible","_findTabbableParent","translate","addPopupRes","menu","visible","FilterValueService","valueGetter","expressionSvc","ReadOnlyFloatingFilterElement","ReadOnlyFloatingFilter","Component","AgInputTextFieldSelector","RefPlaceholder","displayName","reactiveParams","modelAsString","OptionsFactory","defaultOptions","filterOptions","filterOption","requiredProperties","propertyCheck","keys","v","defaultOption","firstFilterOption","removeItems","items","startPosition","deleteCount","isBlank","cellValue","getDefaultJoinOperator","defaultJoinOperator","evaluateCustomFilter","customFilterOption","values","predicate","validateAndUpdateConditions","conditions","maxNumConditions","numConditions","getNumberOfInputs","optionsFactory","customOpts","numberOfInputs","SimpleFilter","ProvidedFilter","filterNameKey","mapValuesFromModel","newParams","oldParams","eType","eJoinOperatorsOr","a","b","aIsSimple","bIsSimple","aSimple","bSimple","aCombined","bCombined","_areEqual","aModel","bModel","isInitialLoad","combinedModel","numPrevConditions","orChecked","eJoinOperatorAnd","eJoinOperatorOr","condition","simpleModel","numAlwaysVisibleConditions","AgSelect","eConditionBody","eJoinOperatorPanel","index","uniqueGroupId","eJoinOperators","andOr","eJoinOperator","AgRadioButton","baseClass","option","filterListOptions","listOption","displayKey","customOption","joinOperator","lastUiCompletePosition","areAllConditionsUiComplete","activePosition","removeStartPosition","numConditionsToRemove","disabled","_setDisabled","_setDisplayed","eTypes","eConditionBodies","eJoinOperatorPanels","eJoinOperatorsAnd","joinOperatorIndex","elements","_removeFromParent","components","elementToFocus","firstInput","AgAbstractInputField","updatedLastUiCompletePosition","conditionsRemoved","shouldRemovePositionAtEnd","positionBeforeLastUiCompletePosition","shouldUpdateConditionStatusesAndValues","defaultPlaceholder","placeholder","filterOptionKey","globalTranslate","fromFloatingFilter","displayed","cb","inputs","input","silent","filteringLabel","label","updater","elPosition","DateCompWrapper","context","dateComponentParams","onReady","_getDateCompDetails","dateComp","tempValue","DEFAULT_DATE_FILTER_OPTIONS","mapValuesFromDateFilterModel","filterModel","dateFrom","dateTo","_parseDateTimeFromString","DEFAULT_MIN_YEAR","DEFAULT_MAX_YEAR","DateFilter","yearParser","param","fallback","minValidYear","maxValidYear","minValidDate","maxValidDate","parsedMinValidDate","parsedMaxValidDate","dateCompWrapper","eCondition","eConditionPanels","dateConditionComps","fromTo","eConditionPanel","valid","_serialiseDate","dateConditionFromComps","dateConditionToComps","_elPosition","SimpleFilterHandler","operator","models","combineFunction","m","isCombinedFilterModel","newOptionsList","needsUpdate","filterType","updatedModel","customFilterResult","ScalarFilterHandler","includeBlanksInEquals","includeBlanksInNotEqual","includeBlanksInGreaterThan","includeBlanksInLessThan","includeBlanksInRange","comparator","compareResult","compareToResult","SCALAR_FILTER_TYPE_KEYS","TEXT_FILTER_TYPE_KEYS","SimpleFilterModelFormatter","valueFormatter","forToolPanel","translateForFilter","customOptions","joinOperatorTranslateKey","isRange","getFilter","getFilterTo","customDisplayKey","customDisplayName","typeValue","typeKey","suffix","DateFilterModelFormatter","dateStringStringValue","format","formatDate","_dateToFormattedString","formattedFrom","formattedTo","valueForToolPanel","defaultDateComparator","filterDate","cellAsDate","DateFilterHandler","isValidDate2","SimpleFloatingFilter","isCombined","reactive","editable","uneditableTypes","DateFloatingFilterElement","DateFloatingFilter","allowEditing","dateModel","filterValueDate","filterValueText","debounceMs","getDebounceMs","_debounce","eDateWrapper","DefaultDateElement","DefaultDateComponent","inputElement","isChange","shouldUseBrowserDatePicker","_isBrowserSafari","buttons","includeTime","shouldUseDateTimeLocal","date","colType","DEFAULT_NUMBER_FILTER_OPTIONS","getAllowedCharPattern","allowedCharPattern","processNumberFilterValue","mapValuesFromNumberFilterModel","filterTo","NumberFilter","numberFormatter","valueToSet","eValues","eValue","AgInputTextField","AgInputNumberField","removeComps","filterText","_makeNull","numberParser","eValuesFrom","eValuesTo","NumberFilterModelFormatter","NumberFilterHandler","left","right","FloatingFilterTextInputService","parentElement","eInput","autoComplete","trimInputForFilter","trimmedInput","mapValuesFromTextFilterModel","TextInputFloatingFilterElement","TextInputFloatingFilter","inputSvc","defaultDebounceMs","readOnly","_isUseApplyButton","toDebounce","_clearElement","isEnterKey","lastType","parsedValue","FloatingFilterNumberInputService","eNumberInput","eTextInput","NumberFloatingFilter","DEFAULT_TEXT_FILTER_OPTIONS","TextFilter","applySideEffects","TextFilterModelFormatter","getValueFunc","defaultMatcher","defaultFormatter","from","defaultLowercaseFormatter","TextFilterHandler","formattedValues","cellValueFormatted","api","textFormatter","matcherParams","TextFloatingFilter","isQuickFilterPresent","getQuickFilter","resetQuickFilter","QuickFilterService","resetListener","autoColSvc","pivotResultCols","pivotMode","groupAutoCols","providedCols","columnsForQuickFilter","usingCache","part","quickFilter","parser","newFilter","parsedFilter","matcher","hasChanged","filterPart","quickFilterAggregateText","quickFilterParts","stringParts","ClientSideRowModelFilterModule","FilterCoreModule","FilterValueModule","ColumnFilterModule","CustomFilterModule","TextFilterModule","NumberFilterModule","DateFilterModule","QuickFilterCoreModule","QuickFilterModule","ExternalFilterModule","tooltipCSS","getEditErrorsForPosition","cellCtrl","editModelSvc","cellValidationErrors","rowValidationErrors","errors","TooltipService","existingTooltipFeature","shouldDisplayTooltip","isTooltipWhenTruncated","_isShowTooltipWhenTruncated","_isElementOverflowingCallback","tooltipCtrl","tooltipFeature","colGroupDef","editSvc","location","errorMessages","_getValueUsingField","isEditing2","isElementOverflowing","eCell","tooltipParams","editor","rowValidationMap","cellValidationMap","hasRowValidationErrors","hasCellValidationErrors","TooltipModule","TooltipComponent2","UndoRedoAction","cellValueChanges","RangeUndoRedoAction","initialRange","finalRange","ranges","DEFAULT_STACK_SIZE","UndoRedoStack","maxStackSize","item","UndoRedoService","eventCell","isCellEditing","_areCellsEqual","isRowEditing","_isSameRow","rowPinned","rowIndex","oldValue","cellValueChange","ctrlsSvc","undoRedoLimit","eventSvc","undoStack","redoStack","operationPerformed","undoRedoStack","opposingUndoRedoStack","rangeProperty","cellValueChangeProperty","undoRedoAction","valueExtractor","columnId","rowPosition","currentRow","_getRowNode","lastFocusedCell","rangeSvc","range","idx","startRow","endRow","cellRangeParams","row","focusSvc","scrollFeature","cellPosition","_isCellSelectionEnabled","changes","cellEditingCSS","CheckboxCellEditorElement","CheckboxCellEditor","AgAbstractCellEditor","AgCheckboxSelector","isSelected","eEditor","stateName","_getAriaCheckboxStateName","getValidationErrors","SimpleCellEditor","cellEditorInput","cellStartedEdit","eventKey","suppressPreventDefault","startValue","shouldSetStartValue","inputEl","focusEl","DateCellElement","DateCellEditorInput","getDataTypeService","AgInputDateFieldSelector","min","step","internalErrors","minValue","minDateString","maxValue","maxDateString","DateCellEditor","DateStringCellElement","DateStringCellEditorInput","raw","minDate","maxDate","DateStringCellEditor","LargeTextCellElement","LargeTextCellEditor","AgInputTextAreaSelector","maxLength","cols","rows","focusAfterAttached","highlightAllOnFocus","editorValue","NumberCellElement","NumberCellEditorInput","AgInputNumberFieldSelector","precision","editorEl","NumberCellEditor","SelectCellElement","SelectCellEditor","AgSelectSelector","_missing","hasValue","currentValue","valueFormattedExits","valueListGap","valueListMaxWidth","valueListMaxHeight","TextCellEditorElement","TextCellEditorInput","len","TextCellEditor","getVerticalPixelRange","getHorizontalPixelRange","ensureColumnVisible","ensureIndexVisible","ensureNodeVisible","nodeSelector","undoCellEditing","redoCellEditing","getEditingCells","edits","positions","editRow","editValue","pendingValue","diff","_sourceAndPendingDiffer","UNEDITED","edit","stopEditing","cancel","_syncFromEditors","_destroyEditors","isEditing","_getCellCtrl","startEditingCell","validateEdit","getCurrentUndoSize","getCurrentRedoSize","PopupEditorElement","PopupEditorWrapper","PopupComponent","_setDomData","_isUserSuppressingKeyboardEvent","editHighlightFn","includeEditing","_hasEdits","_hasLeafEdits","_hasPinnedEdits","CellEditStyleFeature","hasErrors","RowEditStyleFeature","rowCtrl","editing","batchEdit","fullRow","rowComp","purgeRows","pinnedRowModel","rowNodes","found","purgeCells","_","_refreshEditCells","updates","KEEP_EDITOR_SOURCES","STOP_EDIT_SOURCE_TRANSFORM","STOP_EDIT_SOURCE_TRANSFORM_KEYS","SET_DATA_SOURCE_AS_API","CANCEL_PARAMS","COMMIT_PARAMS","CHECK_SIBLING","FORCE_REFRESH","EditService","stopInvalidEdits","hasCellValidation","hasRowValidation","editType","strategy","_validateEdit","startedEdit","ignoreEventKey","suppressNavigateAfterEdit","willStop","willCancel","freshEdits","isEnter","isEscape","isTab","_purgeUnchangedEdits","shiftKey","hasValidationErrors","editsToDelete","valueChanged","isCancelAfterEnd","refreshCell","success","sourceValue","editMap","updatedNodes","refreshNodes","pinnedSibling","sibling","focus","_setupEditor","_populateModelValidationErrors","invalid","prev","preventNavigation","CellCtrl","preferEditor","siblingEdit","viewports","_addStopEditingWhenGridLosesFocus","_syncFromEditor","existing","_refreshEditorOnColDefChanged","valueToDisplay","params2","payload","rowNode2","column2","cells","BaseEditStrategy","previous","sourceEvent","isFocusCleared","cellPositionFromEvent","isBlock","shouldRevert","hasError","shouldCancel","_source","editingCells","results","cell","_destroyEditor","actions","discard","isFullRow","_setupEditors","_getRowCtrl","clickCount","_position","batch","cellData","FullRowEditStrategy","position2","changedRows","rowEdits","prevCell","prevPos","nextCell","nextPos","prevEditable","nextEditable","rowsMatch","suppressStartEditOnTab","SingleCellEditStrategy","_type","curColId","_getColId","curCol","prevColId","shouldSuspend","EditCoreModule","EditModelService","getCellEditorInstances","UndoRedoEditModule","TextEditorModule","NumberEditorModule","DateEditorModule","CheckboxEditorModule","SelectEditorModule","LargeTextEditorModule","CustomEditorModule","SelectionColService","_convertColumnEventSourceType","selectionCols","_updateColsMap","updateOrders","destroyCollection","_destroyColumnTree","newTreeDepth","treeDepthSame","list","_areColIdsEqual","colGroupSvc","treeDepth","tree","cols2","colsFiltered","isColumnSelectionCol","newColDef","_applyColumnState","_columnsMatch","rowSelection","_isRowSelection","hasAutoCols","checkboxes","_getCheckboxes","headerCheckbox","_getHeaderCheckbox","def","selectionColumnDef","enableRTL","_a","__","filteredSelColDef","__objRest","valueA","valueB","nodeA","nodeB","aSelected","bSelected","SELECTION_COLUMN_ID","AgColumn","prevCheckbox","currCheckbox","checkboxHasChanged","prevHeaderCheckbox","currHeaderCheckbox","headerCheckboxHasChanged","currLocation","_getCheckboxLocation","prevLocation","leftCols","centerCols","rightCols","numVisibleCols","hideSelectionCol","_removeFromArray","ROW_NUMBERS_COLUMN_ID","setNodesSelected","_isManualPinnedRow","nodes","selectAll","selectAll2","deselectAll","selectAllFiltered","deselectAllFiltered","selectAllOnCurrentPage","deselectAllOnCurrentPage","getSelectedNodes","getSelectedRows","SelectionService","BaseSelectionService","_getRowSelectionMode","_getGroupSelectsDescendants","_getGroupSelection","_getMasterSelects","groupSelectsDescendants","selectionMode","groupSelectsFiltered","selection","clearSelection","suppressFinishActions","keepDescendants","updatedCount","_normaliseSiblingRef","skipThisNode","nodesToSelect","children","selectedRows","newSelectedNodes","rootNode","ChangedPath","selectionChanged","selected","rowNodeToKeepSelected","groupsToRefresh","otherRowNode","isNodeToKeep","isDescendantOf","group","oldNode","RowNode","selectionCount","topLevelNodes","traverse","l","rowModelClientSide","updated","selectedCount","notSelectedCount","_calculateSelectAllState","addToResult","recursivelyAddChildren","child","clientSideRowModel","pageBounds","firstRow","lastRow","selectionCtx","_isUsingNewRowSelectionAPI","_isMultiRowSelection","rowIds","skipLeafNodes","isCSRMGroupSelectsDescendants","nodesToDeselect","nodeCallback","hasSelectableChild","detailApi","isSelectAll","_isAllSelected","detailSelected","n","masterNode","detailGridOptions","selectedIds","notSelected","root","SharedRowSelectionModule","RowSelectionModule","expandAll","collapseAll","onRowHeightChanged","_getClientSideRowModel","serverSideRowModel","_getServerSideRowModel","setRowCount","rowCount","maxRowFound","infiniteRowModel","_getInfiniteRowModel","getCacheBlockState","_isServerSideRowModel","isLastRowIndexKnown","CsrmSsrmSharedApiModule","SsrmInfiniteSharedApiModule","AlignedGridsService","alignedGrids","isCallbackConfig","alignedGrid","refOrComp","ref","fireColumnEvent","columnEvent","scrollEvent","func","groupOpenedEvent","masterGroup","otherColumnGroup","colEvent","masterColumn","otherColumn","colResize","masterColumns","destColState","s","resizedEvent","columnWidths","isVerticalScrollShowing","AlignedGridsModule","ColumnApiModule","ClientSideNodeManager","AbstractClientSideNodeManager","ChangedRowNodes","updateChildIndexes","listToSort","firstChild","lastChild","updateRowNodeAfterSort","SortStage","sortOptions","sortActive","deltaSort","sortContainsGroupColumns","_isColumnsSortingCoupledToGroup","useDeltaSort","changedRowNodes","rowNodeSorter","showRowGroupCols","groupMaintainOrder","groupColumnsPresent","c","isPivotMode","postSortFunc","hasAnyFirstChildChanged","skipSortingPivotLeafs","skipSortingGroups","newChildrenAfterSort","wasSortExplicitlyRemoved","childrenToBeSorted","indexedOrders","row1","row2","doDeltaSort","unsortedRows","oldSortedRows","untouchedRows","touchedRows","adds","sortedUntouchedRows","currentPos","mergeSortedArrays","arr1","arr2","j","arr1Length","arr2Length","chosen","ClientSideRowModel","stage","refreshEverythingFunc","refreshEverythingAfterColsChangedFunc","nodeManager","_getGroupingApproach","allProps","refreshProps","properties","startPixel","endPixel","startLimitIndex","endLimitIndex","atLeastOneChange","rowAtStartPixel","rowAtEndPixel","rowHeight","_getRowHeightForNode","changedProps","rowDataChanged","oldNodeManager","reset","newRowData","selectionSvc","rowsToDisplay","defaultRowHeight","nextRowTop","displayedRowsMapped","allowEstimate","_isDomLayout","changedPathActive","clearIfNotDisplayed","recurse","isRootNode","filteredChildren","totalFooterInc","topLevelIndex","childrenAfterSort","getDefaultIndex","adjustedIndex","footerSvc","displayedIndex","animate","_isAnimateRows","newData","rowDataUpdated","displayedNodesMapped","firstInRange","lastInRange","started","finished","groupsSelectChildren","pixelToMatch","bottomPointer","topPointer","_last","oldBottomPointer","oldTopPointer","midPointer","currentRowNode","topPixel","bottomPixel","includeFooterNodes","afterSort","childrenField","getChildren","node2","startIndex","groupStageExecuted","ROW_ID_PREFIX_ROW_GROUP","rowDataTransaction","waitMillis","callbackFuncsBound","rowNodeTrans","orderChanged","tranItem","rowNodeTransaction","rowsInserted","rowDataTran","rowNodesOrderChanged","flattenStage","atLeastOne","detailNode","_EmptyArray","onGroupExpandedOrCollapsed","refreshClientSideRowModel","isRowDataEmpty","forEachLeafNode","forEachNodeAfterFilter","forEachNodeAfterFilterAndSort","resetRowHeights","applyTransaction","applyTransactionAsync","flushAsyncTransactions","getBestCostNodeSelection","ClientSideRowModelModule","SortModule","ClientSideRowModelApiModule","GridSerializer","gridSerializingSession","allColumns","columnKeys","skipRowGroups","exportRowNumbers","columnsToExport","composed","f","rowSkipper","isExplicitExportSelection","hideOpenParents","isLeafNode","isFooter","shouldSkipCurrentGroup","_canSkipShowingRowGroup","rowAccumulator","appendContent","prependContent","idCreator","GroupInstanceIdCreator","displayedGroups","gridRowIterator","processRow","usingCsrm","usingSsrm","onlySelectedNonStandardModel","exportedRows","selectedNodes","sortSvc","compareNodes","rowA","rowB","visibleCols","filterSpecialColumns","isRowNumberCol","isColumnGroupAutoCol","directChildrenHeaderGroups","columnGroupChild","columnGroup","it","isColumnGroup","columnIndex","collapsibleGroupRanges","collapsibleGroups","currentIdx","arr","lastGroup","SharedExportModule","LINE_SEPARATOR","CsvSerializingSession","suppressQuotes","columnSeparator","header","span","count","rowCellValue","stringValue","CsvCreator","baseParams5","userParams","mergedParams","packagedFile","skipDefaultParams","getDataAsCsv","exportDataAsCsv","CsvExportModule","InfiniteBlock","parentCache","thisIsMostRecentRequest","weAreNotDestroyed","blockSize","pageStatus","sortModel","sequence","dontTouchLastAccessed","localIndex","finalRowCount","MAX_EMPTY_BLOCKS_TO_KEEP","InfiniteCache","dontCreatePage","blockId","block","blockNumber","newBlock","_logIfDebug","blockToExclude","blocksForPurging","lastAccessedComparator","maxBlocksProvided","blocksToKeep","emptyBlocksToKeep","purgeBecauseBlockEmpty","purgeBecauseCacheFull","focusedCell","blockToRemove","overflowSize","lastRowIndexPlusOverflow","lastRowIndexKnown","blockComparator","blocksToDestroy","lastBlockId","inActiveRange","numberSequence","foundGapInSelection","hitFirstOrLast","InfiniteRowModel","_getRowHeightAsNumber","resetRequired","datasource","_getRowIdCallback","rowNodeBlockLoader","infiniteCache","pixel","rowIndexForPixel","lastRowIndex","refreshInfiniteCache","purgeInfiniteCache","getInfiniteRowCount","RowNodeBlockLoader","_getMaxConcurrentDatasourceRequests","blockLoadDebounceMillis","loadAvailability","blocksToLoad","InfiniteRowModelCoreModule","InfiniteRowModelModule","ARROW_UP","ARROW_DOWN","AnimateShowChangeCellRendererElement","AnimateShowChangeCellRenderer","delta","absDelta","valueToUse","deltaUp","eDelta","refreshCountCopy","isInitialRender","lastValue","numericValue","numericLastValue","animateSlideCellRendererCSS","AnimateSlideCellRendererElement","AnimateSlideCellRenderer","eCurrent","prevElement","CellFlashService","cssName","flashDuration","fadeDuration","animations","time","flashEndTime","fadeEndTime","animState","cssBase","cssAnimation","style","nextAnimationTime","phase","nextActionableTime","cellId","_createCellId","delays","flashCells","cellFlashSvc","HighlightChangesModule","getState","setState","propertiesToIgnore","migrateGridStateModel","migrateV32_1","jsonGet","json","StateService","initialState","partialColumnState","suppressEventsAndDispatchInitEvent","newColumnsLoadedDestroyFunc","rowCountReadyDestroyFunc","firstDataRenderedDestroyFunc","providedState","ignoreSet","stateUpdater","onUpdate","filterState","rowGroupExpansionState","rowSelectionState","paginationState","shouldSetState","propState","updateCachedState","updateRowGroupExpansionState","updateFilterState","scrollState","cellSelectionState","focusedCellState","columnOrderState","rowPinning","cellSelection","convertColumnState","_getColumnState","sortState","groupState","aggregationState","pivotState","columnPinningState","columnVisibilityState","columnSizingState","columnStateMap","getColumnState2","columnState","defaultState","shouldSetSortState","sort","sortIndex","shouldSetGroupState","rowGroupIndex","shouldSetAggregationState","aggFunc","shouldSetPivotState","pivotIndex","shouldSetColumnPinningState","shouldSetColumnVisibilityState","shouldSetColumnSizingState","flex","applyOrder","columnStates","columnGroupStates","secondaryColumnStates","columnGroupState","_convertColumnGroupState","openColumnGroups","stateItems","groupId","open","columnFilterState","advancedFilterModel","cellRanges","cellRange","startColumn","columnSet","top","animationFrameSvc","pagination","page","pageSize","isInit","selectionState","expansionSvc","expandedRowGroups","expanded","rowGroupIdsToExpand","rowGroupIdsToCollapse","oldExpandedRowGroupIds","oldExpandedRowGroupIdsSet","features","newColumnState","cachedState","existingValue","staleStateKeys","sources","queuedUpdateSources","updateFunc","GridStateModule","paginationIsLastPageFound","paginationGetPageSize","paginationGetCurrentPage","paginationGetTotalPages","paginationGetRowCount","paginationGoToNextPage","paginationGoToPreviousPage","paginationGoToFirstPage","paginationGoToLastPage","paginationGoToPage","PaginationAutoPageSizeService","bodyHeight","newPageSize","paginationPageSizeSelector","PageSizeSelectorCompElement","PageSizeSelectorComp","paginationPageSize","paginationChangedEvent","pageSizeOptions","paginationPageSizeOption","shouldAddAndSelectEmptyOption","pageSizeSet","pageSizesSet","localisedLabel","localisedAriaLabel","defaultValues","paginationPageSizeSelectorValues","PageSizeSelectorSelector","paginationCompCSS","PaginationComp","TabGuardComp","isRtl","btFirst","btPrevious","btNext","btLast","fromBottom","_focusGridInnerElement","allowFocus","paginationPanelEnabled","fn","_addFocusableContainerListener","userFunc","idPrefix","currentPage","totalPages","zeroPagesToDisplay","onLastPage","button","_setAriaDisabled","lastPageFound","masterRowCount","theoreticalEndRow","isLoadingPageSize","lbFirstRowOnPage","lbLastRowOnPage","toDisplay","lbCurrent","lbTotal","lbRecordCount","moreText","strPage","strTo","strOf","ariaRowStatus","ariaPageStatus","PaginationSelector","PaginationService","lastPage","oldPageSize","size","currentSize","masterLastRowIndex","masterPageStartIndex","masterPageEndIndex","firstIndexNotToShow","maxRowIndex","keepRenderedRows","newPage","PaginationModule","redrawRows","setRowNodeExpanded","expandParents","forceSync","getRowNode","addRenderedRowListener","eventName","getRenderedNodes","forEachNode","getFirstDisplayedRowIndex","getLastDisplayedRowIndex","getDisplayedRowAtIndex","getDisplayedRowCount","RowApiModule","ScrollApiModule","setGridAriaProperty","property","eGrid","ariaProperty","refreshCells","refreshHeader","isAnimationFrameQueueEmpty","flushAllAnimationFrames","getSizesForCurrentTheme","getHeaderHeight","getCellRendererInstances","cellRenderers","cellRenderer","fullWidthRenderers","rowIdMap","mapRowNodes","isRowInMap","renderers","renderer","RenderApiModule","sizeColumnsToFit","paramsOrGridWidth","autoSizeColumns","colAutosize","keysOrParams","skipHeader","autoSizeAllColumns","paramsOrSkipHeader","ColumnAutosizeService","colKeys","skipHeaderGroups","stopAtGroup","defaultMaxWidth","defaultMinWidth","columnLimits","renderStatus","autoWidthCalc","columnsAutoSized","changesThisTimeAround","columnLimitsIndex","maxWidth","shouldSkipHeader","shouldSkipHeaderGroups","updatedColumns","isSpecialCol","preferredWidth","columnLimit","newWidth","normaliseColumnWidth","dispatchColumnResizedEvent","columnGroups","headerGroupCtrl","resizedColumns","headerContainerCtrl","allDisplayedColumns","skipHeaderOnAutoSize","autoSizeColListener","touchListener","TouchListener","nextTimeout","scrollVisibleSvc","gridBodyCtrl","scrollWidthToRemove","availableWidth","_getInnerWidth","gridWidth","limitsMap","_b","dimensions","getWidthOfColsInList","widthOverride","colWidth","colsToSpread","colsToNotSpread","colsToDispatchEventFor","finishedResizing","moveToNotSpread","minOverride","maxOverride","availablePixels","scale","pixelsForLastCol","colMinWidth","colMaxWidth","autoSizeStrategy","propColumnLimits","resizeOperation","limits","ColumnAutoSizeModule","AutoWidthModule","manualPinnedRowCSS","getPinnedTopRowCount","getPinnedBottomRowCount","getPinnedTopRow","getPinnedBottomRow","forEachPinnedRow","floating","PinnedRowModule","PinnedRowModel","SpannedCellCtrl","cellSpan","eCellWrapper","printLayout","startEditing","_setAriaRowIndex","_setAriaRowSpan","cellPos","_isCellFocusSuppressed","cellFocused","SpannedRowCtrl","RowCtrl","_rowContainerType","SpannedRowRenderer","ctrlsKey","rowSpanSvc","ctrlsName","previousCtrls","previousCtrlsSize","rowCtrls","newRowCtrls","hasNewSpans","existingCtrl","newCtrl","sameCount","oldCtrl","_normalisePinnedValue","container","pinned","CellSpan","firstNode","autoHeight","allButLastHeights","RowSpanCache","oldMap","newMap","isFullWidthCellFunc","equalsFnc","customCompare","isCustomCompare","lastNode","spanData","setNewHead","checkNodeForCache","doesNodeSupportSpanning","oldSpan","RowSpanService","onRowDataUpdated","buildPinnedCaches","cache","spannedRowRenderer","spanningNode","CellSpanModule","CellCustomStyleFeature","cellComp","cellClassRules","cellClassParams","processClassRules","className","cellStyle","styles","cellStyleParams","newStaticClasses","CellStyleService","onApplicableClass","onNotApplicableClass","cellClass","classOrClasses","cssClassItem","CellStyleModule","RowStyleModule","RowStyleService","isColumnHovered","HoverFeature","colHover","CSS_COLUMN_HOVER","ColumnHoverService","selectedColumns","isHovered","hovered","ColumnHoverModule","ApiEventService","userListener","async","ALWAYS_SYNC_GLOBAL_EVENTS","listeners","hasAsync","syncListener","asyncListener","wrapSvc","globalListenerPairs","map","set","addEventListener","removeEventListener","addGlobalListener","removeGlobalListener","EventApiModule","LocaleModule","LocaleService","RowAutoHeightService","displayedAutoHeightCols","anyNodeChanged","updateDisplayedRowHeights","autoHeights","newRowHeight","cellHeight","spannedCell","previousCellHeight","colViewport","activeColsForRow","eParentCell","measureHeight","timesCalled","paddingTop","paddingBottom","borderBottomWidth","borderTopWidth","_getElementSize","extraHeight","doc","notYetInDom","possiblyNoContentYet","destroyResizeObserver","renderedAutoHeightCols","RowAutoHeightModule","AllCommunityModule","RowDragModule","ValueCacheModule","CellApiModule","DragAndDropModule","AgComponentContainer","_AgComponentContainer","inject","ViewContainerRef","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","NUM_SHARDS","shardIdx","createComponentContainers","vcr","containerMap","container","_removeFromParent","runOutsideMethods","AngularFrameworkComponentWrapper","_AngularFrameworkComponentWrapper","BaseComponentWrapper","viewContainerRef","angularFrameworkOverrides","OriginalConstructor","that","DynamicAgNg2Component","BaseGuiComponent","params","name","wrapper","args","componentRef","methodCall","callback","componentType","ɵAngularFrameworkComponentWrapper_BaseFactory","ɵɵgetInheritedFactory","ɵɵdefineInjectable","AngularFrameworkEventListenerService","frameworkOverrides","eventType","userListener","wrappedListeners","listener","event","eventListeners","wrappedGlobalListeners","wrapped","AngularFrameworkOverrides","_AngularFrameworkOverrides","VanillaFrameworkOverrides","_ngZone","source","NgZone","existingFrameworkEventListenerService","localEventService","comp","prototype","ɵɵinject","AgGridAngular","_AgGridAngular","elementDef","_viewContainerRef","_angularFrameworkOverrides","_frameworkCompWrapper","resolve","EventEmitter","gridOptionKeys","key","coercedGridOptions","valueToUse","getValueOrCoercedValue","mergedGridOps","_combineAttributesAndGridOptions","gridParams","api","createGrid","changes","gridOptions","value","_processOnChange","emitterAny","hasEmitter","asEventName","hasGridOptionListener","emitter","fireEmitter","ɵɵdirectiveInject","ElementRef","booleanAttribute","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","booleanMixedGridOptions","_BOOLEAN_MIXED_GRID_OPTIONS","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","column_r2","value","ɵɵadvance","ɵɵtextInterpolate1","label","ɵɵlistener","$event","ɵɵrestoreView","_r3","ctx_r3","ɵɵnextContext","ɵɵresetView","onTablePaginatorChange","detail","filterCache","skip","take","recordCount","AgGridDemoComponent","constructor","destroyRef","inject","DestroyRef","appDataService","AppDataService","agGrid","viewChild","read","AgGridAngular","storageKey","isBusy","sort","property","direction","SortDirection","Ascending","filters","recordset","gridOptions","domLayout","defaultColDef","sortable","resizable","columnDefs","field","headerName","cellRenderer","ImageCellRendererComponent","width","suppressSizeToFit","suppressAutoSize","filter","optionalTableColumns","c","map","ngOnInit","ModuleRegistry","registerModules","AllCommunityModule","getRecords","onGridReady","event","api","sizeColumnsToFit","columnState","localStorage","getItem","length","applyColumnState","state","JSON","parse","applyOrder","selectedTableColumns","getAllDisplayedColumns","getColDef","onTableSort","setItem","stringify","getColumnState","onTableStateChange","isDefined","finished","includes","source","type","onTableColumnOptionSelected","columnFields","setColumnsVisible","pageIndex","pageSize","getPeople","pipe","takeUntilDestroyed","finalize","subscribe","next","result","data","count","selectors","viewQuery","rf","ctx","ɵɵelement","i0","_r1","ɵɵrepeaterCreate","AgGridDemoComponent_For_8_Template","ɵɵrepeaterTrackByIndex","ɵɵconditionalCreate","AgGridDemoComponent_Conditional_12_Template","ɵɵrepeater","ɵɵconditional","CommonModule","ForgeIconButtonModule","IconButtonComponent","IconComponent","ForgeIconModule","ForgeOptionModule","OptionComponent","ForgePaginatorModule","PaginatorComponent","ForgeSelectDropdownModule","SelectDropdownComponent","ForgeToolbarModule","ToolbarComponent","styles","_AgGridDemoComponent","getGui","cellElement","init","params","document","createElement","src","Utils","formatNumber","id","classList","add","refresh"],"x_google_ignoreList":[0,1]}