{"version":3,"file":"8053.03b31c27ed7b8f2b.js","mappings":"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","names":["AppDataService","constructor","httpClient","this","getProfile","get","getPeople","filter","pipe","map","r","count","length","filters","Utils","f","key","property","value","strict","sort","direction","isNumber","skip","take","slice","data","getPerson","id","find","p","toString","getSearches","Observable","o","searches","localStorage","getItem","isDefined","JSON","parse","next","complete","saveSearches","setItem","stringify","getLongRequest","t","i0","i1","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Yz7","factory","Éµfac","providedIn","CallbackPipe","transform","callback","args","core","Yjl","pure","standalone","col_r5","sortDirection","_r11","ctx_r10","onColumnHeaderDragStart","$implicit","_r7","ctx_r12","close","onTableSort","$event","ctx_r13","onColumnHeaderRightClick","TableDemoComponent_th_10_forge_icon_5_Template","restoredCtx","i_r6","index","ctx_r14","onColumnHeaderResize","width","ctx_r1","parent","_r3","header","record_r15","col_r17","TableDemoComponent_tr_13_td_1_Template","ctx_r2","tableColumns","visibleColumns","column_r20","hidden","_r22","ctx_r21","onColumnPopupItemSelected","detail","TableDemoComponent_ng_template_17_forge_list_item_1_Template","ctx_r4","routes","path","component","TableDemoComponent","appDataService","tableColumnResize$","Subject","isColumnResizing","isBusy","filterCache","SortDirection","recordset","recordset$","BehaviorSubject","recordCount","tableHeaderOffset","columns","c","recordsetTrackBy","person","ngOnInit","getRecords","ngAfterViewInit","virtualScrollViewport","renderedRangeStream","subscribe","start","end","finalize","result","startId","i","ngOnDestroy","scrollToOffset","onColumnHeaderDragDrop","event","moveItemInArray","previousIndex","currentIndex","columnIndex","column","stopPropagation","preventDefault","columnHeaderElement","tableElementRef","nativeElement","querySelectorAll","columnElements","positionX","clientX","querySelector","classList","add","forEach","fromEvent","document","body","takeUntil","tap","offsetWidth","theadElement","merge","requestAnimationFrame","undefined","remove","columnHeaderPopupDirective","popupElement","open","tableColumn","onTablePaginatorChange","pageIndex","pageSize","Xpm","selectors","viewQuery","rf","ctx","PopupDirective","CdkVirtualScrollViewport","TableDemoComponent_th_10_Template","TableDemoComponent_tr_13_Template","TableDemoComponent_ng_template_17_Template","TableDemoModule","oAB","cJS","CommonModule","RouterModule","DragDropModule","ScrollingModule","ForgeModule"],"sourceRoot":"webpack:///","sources":["./src/app/app-data.service.ts","./src/app/shared/pipes/callback.pipe.ts","./src/app/table-demo/table-demo.component.html","./src/app/table-demo/table-demo.module.ts","./src/app/table-demo/table-demo.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, delay } from 'rxjs/operators';\r\nimport { isDefined, isNumber } from '@tylertech/forge-core';\r\nimport { IPerson, IProfile } from 'src/app/shared/interfaces/person.interface';\r\nimport { ISearch } from 'src/app/shared/interfaces/search.interface';\r\nimport { IFilterParameter } from 'src/app/shared/interfaces/filter.interface';\r\nimport { Utils } from 'src/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppDataService {\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getProfile(): Observable<IProfile> {\r\n    return this.httpClient.get<IProfile>('mock-data/profile.json');\r\n  }\r\n\r\n  public getPeople(filter?: IFilterParameter): Observable<{ count: number; data: Array<IPerson> }> {\r\n    return this.httpClient.get<Array<IPerson>>('mock-data/people.json').pipe(\r\n      // delay(2000),\r\n      map((r) => {\r\n        let count = r.length;\r\n        if (filter) {\r\n          if (filter.filters?.length) {\r\n            r = Utils.filterData(\r\n              r,\r\n              filter.filters.map((f) => ({ key: f.property, value: f.value, strict: f.property === 'gender' || f.property === 'id' }))\r\n            );\r\n            count = r.length;\r\n          }\r\n\r\n          if (filter.sort) {\r\n            r = Utils.sortData(r, filter.sort.property, 'string', filter.sort.direction);\r\n          }\r\n\r\n          if (isNumber(filter.skip) && isNumber(filter.take)) {\r\n            r = r.slice(filter.skip, filter.skip + filter.take);\r\n          }\r\n        }\r\n        return { count, data: r };\r\n      })\r\n    );\r\n  }\r\n\r\n  public getPerson(id: number): Observable<IPerson | undefined> {\r\n    return this.httpClient.get('mock-data/people.json').pipe(map((r) => (r as IPerson[]).find((p) => p.id.toString() === id.toString())));\r\n  }\r\n\r\n  public getSearches(key: string): Observable<ISearch[]> {\r\n    return new Observable<ISearch[]>((o) => {\r\n      let searches = localStorage.getItem(key);\r\n      if (isDefined(searches)) {\r\n        searches = JSON.parse(searches as string);\r\n      }\r\n      o.next(searches as any);\r\n      o.complete();\r\n    });\r\n  }\r\n\r\n  public saveSearches(key: string, searches: ISearch[]): Observable<boolean> {\r\n    return new Observable<boolean>((o) => {\r\n      localStorage.setItem(key, JSON.stringify(searches));\r\n      o.next(true);\r\n      o.complete();\r\n    });\r\n  }\r\n\r\n  public getLongRequest(): Observable<string> {\r\n    return this.httpClient.get<string>('http://localhost:5000/long-request');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'appCallback',\r\n  standalone: true\r\n})\r\nexport class CallbackPipe implements PipeTransform {\r\n  transform(value: any, callback: (value: any, ...args: any[]) => boolean, ...args: any[]): any {\r\n    return callback(value, ...args);\r\n  }\r\n}","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--title\">Table demo</h2>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <div class=\"body__table\">\r\n    <cdk-virtual-scroll-viewport itemSize=\"48\">\r\n      <table #table class=\"forge-table forge-table--fixed\">\r\n        <thead [style.--table-header-offset]=\"tableHeaderOffset\" [style.--table-header-translate-y]=\"(tableHeaderOffset * -48) + 'px'\">\r\n          <tr class=\"forge-table-row forge-table-head__row\" cdkDropList (cdkDropListDropped)=\"onColumnHeaderDragDrop($event)\" cdkDropListOrientation=\"horizontal\">\r\n            <th *ngFor=\"let col of tableColumns | appCallback:visibleColumns; index as i\" scope=\"col\" class=\"forge-table-cell forge-table-head__cell forge-table-head__cell--sortable\" cdkDrag cdkDragLockAxis=\"x\" [cdkDragPreviewContainer]=\"parent\" (cdkDragStarted)=\"onColumnHeaderDragStart()\" (click)=\"columnHeaderPopup.close(); onTableSort(col)\" #columnHeaderPopup=\"forgePopup\" [forgePopup]=\"columnHeaderPopupTemplate\" (contextmenu)=\"onColumnHeaderRightClick($event)\" placement=\"right-end\" tabindex=\"-1\" [style.--table-column-width]=\"col.width\">\r\n              <div class=\"forge-table-head__cell-container\">\r\n                <span class=\"forge-table-head__cell-text\">{{col.header}}</span>\r\n                <forge-icon *ngIf=\"col.sortDirection?.length\" [name]=\"col.sortDirection === 'DESC' ? 'arrow_downward' : col.sortDirection === 'ASC' ? 'arrow_upward' : ''\" class=\"forge-table-head__cell-sort-icon\" aria-hidden=\"true\"></forge-icon>\r\n              </div>\r\n              <div class=\"forge-table-head__cell-actions\">\r\n                <div class=\"forge-table-head__cell-dragger\" cdkDragHandle></div>\r\n                <div class=\"forge-table-head__cell-resizer\" (mousedown)=\"onColumnHeaderResize($event, i, col)\"></div>\r\n              </div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *cdkVirtualFor=\"let record of recordset$; trackBy: recordsetTrackBy\" class=\"forge-table-row forge-table-body__row\">\r\n            <td *ngFor=\"let col of tableColumns | appCallback:visibleColumns\" class=\"forge-table-cell forge-table-body__cell\">\r\n              <div class=\"forge-table-cell__container\">\r\n                {{record[col.property]}}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </cdk-virtual-scroll-viewport>\r\n  </div>\r\n\r\n  <forge-toolbar inverted=\"true\">\r\n    <span slot=\"end\" class=\"forge-typography--caption\">Records: {{recordCount}}</span>\r\n    <!-- <forge-paginator slot=\"end\" [pageIndex]=\"filterCache.skip / filterCache.take\" [pageSize]=\"filterCache.take\" [total]=\"recordCount\" (forge-paginator-change)=\"onTablePaginatorChange($event.detail)\"></forge-paginator> -->\r\n  </forge-toolbar>\r\n</div>\r\n\r\n<ng-template #columnHeaderPopupTemplate>\r\n  <forge-list class=\"column-popup\" (forge-list-item-select)=\"onColumnPopupItemSelected($event.detail.value)\">\r\n    <forge-list-item *ngFor=\"let column of tableColumns\" [value]=\"column\">\r\n      <forge-checkbox slot=\"leading\">\r\n        <input type=\"checkbox\" checked aria-label=\"Show/hide table column\" [checked]=\"!column.hidden\" />\r\n      </forge-checkbox>\r\n      <span>{{column.header}}</span>\r\n    </forge-list-item>\r\n    <forge-divider></forge-divider>\r\n    <forge-list-item value=\"reset-column-width\">\r\n      <span>Reset column widths</span>\r\n    </forge-list-item>\r\n    <forge-list-item value=\"freeze-column\">\r\n      <span>Freeze column</span>\r\n    </forge-list-item>\r\n  </forge-list>\r\n</ng-template>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { TableDemoComponent } from './table-demo.component';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { ForgeModule } from '@tylertech/forge-angular';\r\nimport { AutoFocusDirective } from '../shared/directives/auto-focus/auto-focus.directive';\r\nimport { CallbackPipe } from '../shared/pipes/callback.pipe';\r\n\r\nconst routes: Routes = [\r\n  { path: '**', component: TableDemoComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TableDemoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    DragDropModule,\r\n    ScrollingModule,\r\n    ForgeModule,\r\n    AutoFocusDirective,\r\n    CallbackPipe\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class TableDemoModule { }","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { finalize, fromEvent, tap, Subject, takeUntil, merge, delay, BehaviorSubject } from 'rxjs';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\r\nimport { IColumnConfiguration, SortDirection } from '@tylertech/forge';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { PopupDirective } from '@tylertech/forge-angular';\r\n\r\nimport { IPerson } from 'src/app/shared/interfaces/person.interface';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\n\r\n@Component({\r\n  selector: 'app-table-demo',\r\n  templateUrl: './table-demo.component.html',\r\n  styleUrls: ['./table-demo.component.scss']\r\n})\r\nexport class TableDemoComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('table', { static: true })\r\n  private tableElementRef: ElementRef;\r\n  @ViewChild('columnHeaderPopup', { read: PopupDirective })\r\n  private columnHeaderPopupDirective: PopupDirective;\r\n  @ViewChild(CdkVirtualScrollViewport)\r\n  public virtualScrollViewport: CdkVirtualScrollViewport;\r\n  private tableColumnResize$ = new Subject<void>();\r\n  private isColumnResizing = false;\r\n\r\n  public isBusy = false;\r\n  public filterCache = {\r\n    sort: {\r\n      property: 'lastName',\r\n      direction: SortDirection.Ascending\r\n    },\r\n    filters: [] as any[],\r\n    skip: 0,\r\n    take: 25\r\n  }\r\n  public recordset: IPerson[] = [];\r\n  public recordset$ = new BehaviorSubject<IPerson[]>([]);\r\n  public recordCount = 0;\r\n  public tableColumns: IColumnConfiguration[] = [\r\n    { header: 'Id', property: 'id' },\r\n    { header: 'First', property: 'firstName', width: 400 },\r\n    { header: 'Last', property: 'lastName' },\r\n    { header: 'Gender', property: 'gender' },\r\n    { header: 'Occupation', property: 'occupation' }\r\n  ];\r\n  public tableHeaderOffset = 0;\r\n\r\n  public visibleColumns = (columns: IColumnConfiguration[]) => {\r\n    return columns.filter(c => c.hidden !== true);\r\n  }\r\n\r\n  public recordsetTrackBy = (index: number, person: IPerson) => {\r\n    return person.id;\r\n  }\r\n\r\n  constructor(\r\n    private appDataService: AppDataService\r\n  ) { }\r\n\r\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method\r\n  public ngOnInit() {\r\n    this.getRecords();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.virtualScrollViewport.renderedRangeStream.subscribe(o => {\r\n      this.tableHeaderOffset = o.start;\r\n      if (!this.isBusy && o.start > 0 && o.end + 67 > this.recordCount) {\r\n        this.isBusy = true;\r\n        this.appDataService\r\n          .getPeople({\r\n            sort: this.filterCache.sort\r\n          }).pipe(\r\n            // delay(1000),\r\n            finalize(() => this.isBusy = false)\r\n          )\r\n          .subscribe((result) => {\r\n            const startId = this.recordset.length + 1;\r\n            this.recordset = [...this.recordset, ...result.data.map((p, i) => {\r\n              p.id = startId + p.id;\r\n              return p;\r\n            })];\r\n            this.recordCount = this.recordset.length;\r\n            this.recordset$.next(this.recordset);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.tableColumnResize$.next();\r\n    this.tableColumnResize$.complete();\r\n  }\r\n\r\n  public onColumnHeaderDragStart() {\r\n    this.virtualScrollViewport.scrollToOffset(0);\r\n  }\r\n\r\n  public onColumnHeaderDragDrop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.tableColumns, event.previousIndex, event.currentIndex);\r\n    this.tableColumns = [...this.tableColumns];\r\n  }\r\n\r\n  public onColumnHeaderResize(event: MouseEvent, columnIndex: number, column: IColumnConfiguration) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    this.tableColumnResize$.next();\r\n\r\n    let columnHeaderElement = (this.tableElementRef.nativeElement as HTMLTableElement).querySelectorAll('thead tr th')[columnIndex] as HTMLTableCellElement;\r\n    let columnElements = (this.tableElementRef.nativeElement as HTMLTableElement).querySelectorAll(`tbody tr td:nth-child(${columnIndex + 1})`);\r\n\r\n    let positionX = event.clientX;\r\n    if (columnHeaderElement) {\r\n      this.isColumnResizing = true;\r\n      this.tableElementRef.nativeElement.querySelector('.forge-table-head__row')?.classList.add('forge-table-head__row--resizing');\r\n      columnHeaderElement.classList.add('forge-table-head__cell--resizing');\r\n      columnElements.forEach(c => c.classList.add('forge-table-body__cell--resizing'));\r\n\r\n      fromEvent(document.body, 'mousemove')\r\n        .pipe(\r\n          takeUntil(this.tableColumnResize$),\r\n          tap((event: MouseEvent) => {\r\n            column.width = columnHeaderElement.offsetWidth + (event.clientX - positionX);\r\n            positionX = event.clientX;\r\n          })\r\n        ).subscribe();\r\n\r\n      const theadElement = this.tableElementRef.nativeElement.querySelector('thead');\r\n      merge(\r\n        fromEvent(theadElement, 'mouseup'),\r\n        fromEvent(theadElement, 'mouseleave')\r\n      )\r\n        .pipe(\r\n          finalize(() =>\r\n            requestAnimationFrame(() => {\r\n              this.isColumnResizing = false;\r\n              columnHeaderElement = undefined;\r\n              columnElements = undefined;\r\n            })\r\n          ),\r\n          takeUntil(this.tableColumnResize$),\r\n          tap((event: MouseEvent) => {\r\n            this.tableColumnResize$.next();\r\n            this.tableElementRef.nativeElement.querySelector('.forge-table-head__row')?.classList.remove('forge-table-head__row--resizing');\r\n            columnHeaderElement.classList.remove('forge-table-head__cell--resizing');\r\n            columnElements.forEach(c => c.classList.remove('forge-table-body__cell--resizing'));\r\n          })\r\n        ).subscribe();\r\n    }\r\n  }\r\n\r\n  public onColumnHeaderRightClick(event: PointerEvent) {\r\n    event.preventDefault();\r\n    if (this.columnHeaderPopupDirective.popupElement) {\r\n      this.columnHeaderPopupDirective.close();\r\n    } else {\r\n      this.columnHeaderPopupDirective.open();\r\n    }\r\n  }\r\n\r\n  public onColumnPopupItemSelected(value: any) {\r\n    switch (value) {\r\n      case 'reset-column-width':\r\n        this.tableColumns.forEach(c => c.width = undefined);\r\n        break;\r\n      case 'freeze-column': {\r\n        let columnHeaderElement = (this.tableElementRef.nativeElement as HTMLTableElement).querySelectorAll('thead tr th')[0];\r\n        let columnElements = (this.tableElementRef.nativeElement as HTMLTableElement).querySelectorAll(`tbody tr td:nth-child(${1})`);\r\n        columnHeaderElement.classList.add('forge-table-head__cell--frozen');\r\n        columnElements.forEach(c => c.classList.add('forge-table-body__cell--frozen'));\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        const tableColumn = this.tableColumns.find(c => c.property === value.property);\r\n        if (tableColumn) {\r\n          // prevent hiding all columns\r\n          if (this.tableColumns.filter(c => !c.hidden).length) {\r\n            tableColumn.hidden = isDefined(tableColumn.hidden) ? !tableColumn.hidden : true;\r\n            tableColumn.sortDirection = undefined;\r\n            this.tableColumns = [...this.tableColumns];\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.columnHeaderPopupDirective.close();\r\n  }\r\n\r\n  public onTableSort(column: IColumnConfiguration) {\r\n    if (!this.isColumnResizing) {\r\n      this.tableColumns.filter(c => c.property !== column.property).forEach(c => c.sortDirection = undefined);\r\n      if (column.sortDirection === SortDirection.Ascending) {\r\n        column.sortDirection = SortDirection.Descending;\r\n      } else if (column.sortDirection === SortDirection.Descending) {\r\n        column.sortDirection = undefined;\r\n      } else {\r\n        column.sortDirection = SortDirection.Ascending;\r\n      }\r\n\r\n      this.filterCache.sort = column.sortDirection ? { property: column.property, direction: column.sortDirection } : undefined;\r\n      this.filterCache.skip = 0;\r\n      this.virtualScrollViewport.scrollToOffset(0);\r\n      this.getRecords();\r\n    }\r\n  }\r\n\r\n  public onTablePaginatorChange(detail: { pageIndex: number; pageSize: number }) {\r\n    this.filterCache.skip = detail.pageIndex * detail.pageSize;\r\n    this.filterCache.take = detail.pageSize;\r\n    this.getRecords();\r\n  }\r\n\r\n  private getRecords() {\r\n    this.isBusy = true;\r\n    this.appDataService\r\n      .getPeople({\r\n        sort: this.filterCache.sort\r\n      }).pipe(\r\n        finalize(() => this.isBusy = false)\r\n      )\r\n      .subscribe((result) => {\r\n        this.recordset = result.data;\r\n        this.recordCount = result.count;\r\n        this.recordset$.next(this.recordset);\r\n      });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}