{"version":3,"file":"7605.80feffc216db2ce5.js","mappings":"qTAIw8B,MAAMA,EAAEC,uBAAuBC,GAAG,MAAMC,EAAEC,aAAWF,EAAEG,YAAYC,KAAEC,MAAEJ,EAAED,EAAEM,MAAM,OAAOC,QAAQC,WAAQC,MAAEL,GAAGA,EAAEM,SAAS,KAAK,CAAOC,OAAOF,GAAE,SAAAG,KAAA,YAAC,MAAMZ,QAAC,EAAOI,KAAEK,EAAEI,KAAKJ,EAAEK,SAAS,OAAOd,GAAGA,EAAEU,QAAQ,EAAvD,EAAuD,CAACK,UAAUf,GAAGA,EAAEG,WAAWD,aAAWF,EAAEG,YAAYH,EAAEgB,OAAOhB,EAAEgB,OAAOC,aAAWjB,EAAEgB,QAAQ,KAAK,MAAMf,EAAEiB,KAAKC,WAAWJ,UAAUf,GAAG,OAAOO,QAAQC,WAAQC,MAAER,GAAGA,EAAES,SAAS,KAAK,CAAOU,iBAAiBX,GAAE,IAAAY,EAAAH,KAAA,SAAAN,KAAA,YAACS,EAAKF,WAAWG,aAAWb,EAAEc,gBAAgBd,EAAEe,YAAY,kBAAkBH,EAAKF,YAAYM,aAAanB,OAAOe,EAAKF,WAAWM,aAAaD,WAAWf,EAAEe,WAAW,EAAxK,EAAwK,CAAOE,qBAAqBjB,GAAE,IAAAkB,EAAAT,KAAA,SAAAN,KAAA,YAACe,EAAKC,kBAAeC,MAAEpB,EAAEqB,mBAAmB,EAA5C,EAA4C,CAAOC,QAAQ/B,GAAE,IAAAgC,EAAAd,KAAA,SAAAN,KAAA,YAAC,MAAMX,EAAE+B,EAAKJ,eAAeG,QAAQ,CAACf,OAAOC,aAAWjB,EAAEgB,QAAQiB,mBAAmBjC,EAAEiC,mBAAmBC,IAAKlC,MAAGS,MAAET,GAAGE,aAAWF,GAAG,MAAOmC,iBAAiBnC,EAAEmC,mBAAmB,SAAO1B,MAAER,GAAGA,EAAES,SAAS,IAAI,EAA7M,EAA6M,CAAC0B,QAAQpC,GAAG,MAAMC,EAAEiB,KAAKC,WAAWkB,cAAcnC,aAAWF,EAAEsC,eAAetC,EAAEuC,eAAe,OAAOhC,QAAQC,WAAQC,MAAER,IAAIA,EAAES,SAAS,CAAC8B,6BAA6B/B,GAAG,MAAMT,KAAEyC,MAAEvC,aAAWO,EAAE6B,gBAAgB,OAAO/B,QAAQC,QAAQR,EAAE,CAAC0C,MAAMjC,GAAG,MAAMT,KAAE2C,MAAEzC,aAAWO,EAAE6B,eAAe7B,EAAEmC,SAASnC,EAAEoC,qBAAqB,OAAO7C,GAAGA,EAAE8C,QAAS,CAACrC,EAAER,KAAKD,EAAE+C,IAAI9C,EAAEQ,GAAGC,SAAQ,GAAKH,QAAQC,QAAQR,EAAE,CAAOgD,mBAAmBvC,GAAE,SAAAG,KAAA,YAAC,MAAMX,EAAEQ,EAAEwC,eAAef,IAAKzB,GAAGA,EAAE,IAAIP,IAAEO,GAAG,MAAOL,KAAE8C,MAAEjD,EAAEQ,EAAE0C,cAAc,CAACC,YAAY3C,EAAE2C,YAAYC,cAAc5C,EAAE4C,cAAcC,WAAW7C,EAAE6C,WAAWC,SAAS9C,EAAE8C,WAAW,IAAIZ,EAAEd,EAAEzB,EAAE,OAAOK,EAAE+C,QAAQ3B,KAAE4B,MAAErD,EAAEK,EAAEiD,cAAcjD,EAAE+C,MAAM/C,EAAEkD,cAAclD,EAAEmD,gBAAgBnD,EAAEoD,mBAAmBpD,EAAEqD,UAAUnB,KAAEoB,MAAEtD,EAAEiD,cAAcjD,EAAEqD,SAASjC,KAAE7B,SAAEgE,MAAEnC,EAAEpB,EAAEwD,KAAK,YAAY,gBAAgBtB,KAAK,CAACxC,WAAW0B,GAAGnB,SAASwD,qBAAqBvB,EAAE,EAA3a,EAA2a,CAAOwB,eAAe1D,EAAET,GAAE,SAAAY,KAAA,YAAC,MAAMX,EAAE,CAACY,KAAK,IAAIuD,aAAa3D,EAAE4D,SAASC,QAAQC,KAAK,IAAIC,WAAW/D,EAAE4D,SAASI,YAAYC,MAAMjE,EAAE4D,SAASK,MAAMC,OAAOlE,EAAE4D,SAASM,SAASC,WAAW1E,EAAE2E,UAAUzE,SAAE,EAAO0E,MAAErE,EAAEsE,SAAStE,EAAEuE,mBAAmB/E,EAAED,EAAEiF,QAAQ,MAAM,CAACC,OAAO,CAACC,aAAajF,EAAEoE,OAAOc,YAAYhF,EAAEkE,QAAQe,aAAa,CAACnF,EAAEoE,OAAOlE,EAAEkE,QAAQ,EAA1T,EAA0T,CAAOgB,wBAAwB7E,GAAE,SAAAG,KAAA,YAAC,MAAMZ,EAAEiB,aAAWR,EAAE8E,iBAAiBrF,EAAEe,aAAWR,EAAE+E,iBAAiB,IAAIpF,EAAE,KAAKK,EAAEgF,2BAA2BrF,EAAE,IAAIH,IAAE,CAACyF,MAAMjF,EAAEgF,6BAA6BhF,EAAEkF,mBAAgBC,MAAE5F,EAAE6F,iBAAiB3F,EAAE2F,iBAAiBzF,YAAE,EAAS0F,SAAI,MAAMnD,EAAElC,EAAEsF,mBAAgBC,KAAEvF,EAAEsF,iBAAiB,KAAK,SAAOE,MAAE,IAAIxF,EAAE8E,gBAAgBvF,EAAEwF,gBAAgBtF,EAAEgG,oBAAoB9F,EAAE2F,gBAAgBpD,GAAG,EAAtX,EAAsX","names":["N","convertVectorFieldData","e","t","s","pixelBlock","o","d","type","Promise","resolve","r","toJSON","decode","_asyncToGenerator","data","options","symbolize","extent","O","this","symbolizer","updateSymbolizer","_this","h","symbolizerJSON","histograms","rendererJSON","updateRasterFunction","_this2","rasterFunction","l","rasterFunctionJSON","process","_this3","primaryPixelBlocks","map","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","u","split","i","tileSize","maximumPyramidLevel","forEach","set","mosaicAndTransform","srcPixelBlocks","n","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","coefs","a","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","m","S","isUV","localNorthDirections","createFlowMesh","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","x","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","getProjectionOffsetGrid","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","c","spatialReference","f","rasterTransform","y","p","datumTransformation"],"sourceRoot":"webpack:///","sources":["./node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as r,unwrap as e}from\"../../core/maybe.js\";import t from\"../../geometry/support/GeographicTransformation.js\";import s from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{split as i,mosaic as n,approximateTransform as a,getLocalArithmeticNorthRotations as m}from\"./rasterFunctions/pixelUtils.js\";import{create as l}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as c,load as f,getProjectionOffsetGrid as p}from\"./rasterFunctions/rasterProjectionHelper.js\";import{estimateStatisticsHistograms as u}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as d,convertToLocalDirections as S}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as y}from\"./rasterTransforms/utils.js\";import h from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as x}from\"../../views/2d/engine/flow/dataUtils.js\";import O from\"../../geometry/Extent.js\";class N{convertVectorFieldData(e){const t=s.fromJSON(e.pixelBlock),o=d(t,e.type);return Promise.resolve(r(o)?o.toJSON():null)}async decode(r){const e=await o(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=s.fromJSON(e.pixelBlock),e.extent=e.extent?O.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(r(t)?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=h.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=l(r.rasterFunctionJSON)}async process(e){const t=this.rasterFunction.process({extent:O.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>r(e)?s.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds});return r(t)?t.toJSON():null}stretch(e){const t=this.symbolizer.simpleStretch(s.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r(t)&&t.toJSON())}estimateStatisticsHistograms(r){const e=u(s.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=i(s.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return e&&e.forEach(((r,t)=>{e.set(t,r?.toJSON())})),Promise.resolve(e)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new s(r):null)),o=n(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let i,l=o;return r.coefs&&(l=a(o,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(i=m(r.destDimension,r.gcsGrid),l=e(S(l,r.isUV?\"vector-uv\":\"vector-magdir\",i))),{pixelBlock:l?.toJSON(),localNorthDirections:i}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await x(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(r){const e=O.fromJSON(r.projectedExtent),s=O.fromJSON(r.srcBufferExtent);let o=null;r.datumTransformationSteps&&(o=new t({steps:r.datumTransformationSteps})),(r.includeGCSGrid||c(e.spatialReference,s.spatialReference,o))&&await f();const i=r.rasterTransform?y(r.rasterTransform):null;return p({...r,projectedExtent:e,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{N as default};\n"],"x_google_ignoreList":[0]}