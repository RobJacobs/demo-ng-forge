{"version":3,"file":"491.1f05e9ef2e276e64.js","mappings":"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","names":["AppDataService","constructor","httpClient","this","getProfile","get","getPeople","filter","pipe","map","r","count","length","filters","Utils","filterData","f","key","property","value","strict","sort","sortData","direction","isNumber","skip","take","slice","data","getPerson","id","find","p","toString","getSearches","Observable","o","searches","localStorage","getItem","isDefined","JSON","parse","next","complete","saveSearches","setItem","stringify","getLongRequest","t","i0","i1","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Yz7","factory","Éµfac","providedIn","TestComponent","core","Xpm","selectors","decls","vars","template","rf","ctx","col_r3","title","_r11","rec_r4","$implicit","ctx_r9","toggleLeaf","isExpanded","ChildComponent_tr_15_td_1_forge_icon_button_2_Template","i_r7","col_r6","ChildComponent_tr_15_td_1_Template","level","ctx_r2","tableDef","columns","routes","path","component","children","ParentComponent","router","appDataService","appCache","recordset","signal","description","record","recordset$","BehaviorSubject","record$","recordsetTotal","recordsetTotalComputed","computed","console","log","effect","startWith","undefined","pairwise","prev","curr","subscribe","onNavigate","route","navigate","onMakeRequest","records","startIndex","endIndex","i","push","tap","result","error","takeUntil","cancelHttpRequests","i2","i3","consts","ChildComponent","getRecords","spliceIndex","indexOf","deleteCount","splice","leafRecords","expandable","ChildComponent_th_13_Template","ChildComponent_tr_15_Template","redirectTo","pathMatch","TestModule","oAB","cJS","CommonModule","RouterModule","forChild","ScrollingModule"],"sourceRoot":"webpack:///","sources":["./src/app/app-data.service.ts","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/app/test/child/child.component.html","./src/app/test/test.module.ts","./src/app/test/parent/parent.component.ts","./src/app/test/parent/parent.component.html","./src/app/test/child/child.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, delay } from 'rxjs/operators';\r\nimport { isDefined, isNumber } from '@tylertech/forge-core';\r\nimport { IPerson, IProfile } from 'src/app/shared/interfaces/person.interface';\r\nimport { ISearch } from 'src/app/shared/interfaces/search.interface';\r\nimport { IFilterParameter } from 'src/app/shared/interfaces/filter.interface';\r\nimport { Utils } from 'src/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppDataService {\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getProfile(): Observable<IProfile> {\r\n    return this.httpClient.get<IProfile>('mock-data/profile.json');\r\n  }\r\n\r\n  public getPeople(filter?: IFilterParameter): Observable<{ count: number; data: Array<IPerson> }> {\r\n    return this.httpClient.get<Array<IPerson>>('mock-data/people.json').pipe(\r\n      // delay(2000),\r\n      map((r) => {\r\n        let count = r.length;\r\n        if (filter) {\r\n          if (filter.filters?.length) {\r\n            r = Utils.filterData(\r\n              r,\r\n              filter.filters.map((f) => ({ key: f.property, value: f.value, strict: f.property === 'gender' || f.property === 'id' }))\r\n            );\r\n            count = r.length;\r\n          }\r\n\r\n          if (filter.sort) {\r\n            r = Utils.sortData(r, filter.sort.property, 'string', filter.sort.direction);\r\n          }\r\n\r\n          if (isNumber(filter.skip) && isNumber(filter.take)) {\r\n            r = r.slice(filter.skip, filter.skip + filter.take);\r\n          }\r\n        }\r\n        return { count, data: r };\r\n      })\r\n    );\r\n  }\r\n\r\n  public getPerson(id: number): Observable<IPerson | undefined> {\r\n    return this.httpClient.get('mock-data/people.json').pipe(map((r) => (r as IPerson[]).find((p) => p.id.toString() === id.toString())));\r\n  }\r\n\r\n  public getSearches(key: string): Observable<ISearch[]> {\r\n    return new Observable<ISearch[]>((o) => {\r\n      let searches = localStorage.getItem(key);\r\n      if (isDefined(searches)) {\r\n        searches = JSON.parse(searches as string);\r\n      }\r\n      o.next(searches as any);\r\n      o.complete();\r\n    });\r\n  }\r\n\r\n  public saveSearches(key: string, searches: ISearch[]): Observable<boolean> {\r\n    return new Observable<boolean>((o) => {\r\n      localStorage.setItem(key, JSON.stringify(searches));\r\n      o.next(true);\r\n      o.complete();\r\n    });\r\n  }\r\n\r\n  public getLongRequest(): Observable<string> {\r\n    return this.httpClient.get<string>('http://localhost:5000/long-request');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<router-outlet></router-outlet>","<forge-toolbar class=\"header\">\r\n  <div slot=\"start\">\r\n    <forge-icon-button>\r\n      <button type=\"button\" (click)=\"onNavigate('test/parent')\">\r\n        <forge-icon name=\"arrow_back\"></forge-icon>\r\n      </button>\r\n    </forge-icon-button>\r\n    <h2 class=\"forge-typography--title\">Child</h2>\r\n  </div>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <cdk-virtual-scroll-viewport itemSize=\"48\">\r\n    <table #table class=\"forge-table\">\r\n      <thead>\r\n        <tr class=\"forge-table-row forge-table-head__row\">\r\n          <th *ngFor=\"let col of tableDef.columns\" class=\"forge-table-cell forge-table-head__cell\">\r\n            <div class=\"forge-table-head__cell-container\">\r\n              <span class=\"forge-table-head__cell-text\">{{col.title}}</span>\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *cdkVirtualFor=\"let rec of recordset$\" class=\"forge-table-row forge-table-body__row\" [style.--level]=\"rec.level\">\r\n          <td *ngFor=\"let col of tableDef.columns; index as i\" class=\"forge-table-cell forge-table-body__cell\">\r\n            <div class=\"forge-table-cell__container\">\r\n              <forge-icon-button *ngIf=\"i === 0\" dense>\r\n                <button type=\"button\" (click)=\"toggleLeaf(rec)\">\r\n                  <forge-icon [name]=\"rec.isExpanded ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\"></forge-icon>\r\n                </button>\r\n              </forge-icon-button>\r\n              {{rec[col.key]}}\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </cdk-virtual-scroll-viewport>\r\n  <!-- <cdk-tree [dataSource]=\"recordset$\" [treeControl]=\"treeControl\">\r\n    <cdk-tree-node *cdkTreeNodeDef=\"let node\" [style.display]=\"shouldRender(node) ? 'flex' : 'none'\" cdkTreeNodePadding style=\"display: flex; align-items: center;\">\r\n      {{node.description}}\r\n    </cdk-tree-node>\r\n    <cdk-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\" cdkTreeNodePadding style=\"display: flex; align-items: center;\">\r\n      <forge-icon-button [style.visibility]=\"node.expandable ? 'visible' : 'hidden'\" dense>\r\n        <button type=\"button\" (click)=\"node.isExpanded = !node.isExpanded\">\r\n          <forge-icon [name]=\"node.isExpanded ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\"></forge-icon>\r\n        </button>\r\n      </forge-icon-button>\r\n      {{node.description}}\r\n    </cdk-tree-node>\r\n  </cdk-tree> -->\r\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\n\r\nimport { TestComponent } from './test.component';\r\nimport { ParentComponent } from './parent/parent.component';\r\nimport { ChildComponent } from './child/child.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: TestComponent,\r\n    children: [\r\n      { path: 'parent', component: ParentComponent },\r\n      { path: 'child', component: ChildComponent },\r\n      { path: '', redirectTo: 'parent', pathMatch: 'full' }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TestComponent,\r\n    ParentComponent,\r\n    ChildComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ScrollingModule\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class TestModule { }\r\n","import { Component, computed, effect, signal } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, tap, takeUntil, Subject, BehaviorSubject, startWith, pairwise, map } from 'rxjs';\r\nimport { AppCacheService } from 'src/app/app-cache.service';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\n\r\n@Component({\r\n  selector: 'app-test-parent',\r\n  templateUrl: './parent.component.html',\r\n  styleUrls: ['./parent.component.scss']\r\n})\r\nexport class ParentComponent {\r\n  public recordset = signal<{ id: number; description: string; }[]>([{ id: -1, description: '' }]);\r\n  public record = signal<{ id: number; description?: string; }>({ id: -1 });\r\n  public recordset$ = new BehaviorSubject<{ id: number; description: string; }[]>([]);\r\n  public record$ = new BehaviorSubject<{ id: number; description?: string; }>({ id: -1 });\r\n  public recordsetTotal = 0;\r\n  public recordsetTotalComputed = computed(() => {\r\n    console.log('computed');\r\n    return this.recordset().length;\r\n  });\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private appDataService: AppDataService,\r\n    private appCache: AppCacheService\r\n  ) {\r\n    effect(() => {\r\n      console.log('effect');\r\n      this.recordsetTotal = this.recordset().length;\r\n    });\r\n\r\n    this.recordset$.pipe(\r\n      startWith(undefined),\r\n      pairwise(),\r\n      map(([prev, curr]) => ({ prev, curr }))\r\n    ).subscribe((o) => {\r\n      console.log(o);\r\n    });\r\n\r\n    this.record$.pipe(\r\n      startWith(undefined),\r\n      pairwise(),\r\n      map(([prev, curr]) => ({ prev, curr }))\r\n    ).subscribe((o) => {\r\n      console.log(o);\r\n    });\r\n  }\r\n\r\n  public onNavigate(route: string) {\r\n    this.router.navigate([route]);\r\n  }\r\n\r\n  public onMakeRequest() {\r\n    // this.getLongRequest().subscribe();\r\n\r\n    this.recordset()[0].description = 'description';\r\n    this.record().description = 'description';\r\n    // this.recordset.update(v => v);\r\n    // this.recordset.mutate(v => {\r\n    //   const startIndex = v.length;\r\n    //   const endIndex = startIndex + 100;\r\n    //   for (let i = startIndex; i < endIndex; i++) {\r\n    //     v.push({ id: i, description: `${i} - Description` });\r\n    //   }\r\n    // });\r\n\r\n    const records = [...this.recordset$.value];\r\n    const startIndex = this.recordset$.value.length;\r\n    const endIndex = startIndex + 100;\r\n    for (let i = startIndex; i < endIndex; i++) {\r\n      records.push({ id: i, description: `${i} - Description` });\r\n    }\r\n    this.recordset$.next(records);\r\n    const record = { id: startIndex, description: `${startIndex} - Description` };\r\n    this.record$.next(record);\r\n  }\r\n\r\n  private getLongRequest(): Observable<any> {\r\n    return this.appDataService.getLongRequest().pipe(\r\n      tap({\r\n        next: result => console.log(result),\r\n        error: error => console.log(error)\r\n      }),\r\n      takeUntil(this.appCache.cancelHttpRequests)\r\n    );\r\n  }\r\n\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--title\">Parent</h2>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <p>Parent content</p>\r\n  <forge-button type=\"raised\">\r\n    <button type=\"button\" (click)=\"onNavigate('test/child')\">View child</button>\r\n  </forge-button>\r\n  <forge-button type=\"raised\" style=\"margin: 16px;\">\r\n    <button type=\"button\" (click)=\"onMakeRequest()\">Make request</button>\r\n  </forge-button>\r\n\r\n  <p>\r\n    {{recordsetTotal}}\r\n  </p>\r\n  <p>\r\n    {{recordset() | json}}\r\n  </p>\r\n  <p>\r\n    {{record() | json}}\r\n  </p>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface IRecord {\r\n  id: string;\r\n  description: string;\r\n  expandable: boolean;\r\n  level: number;\r\n  isExpanded?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-test-child',\r\n  templateUrl: './child.component.html',\r\n  styleUrls: ['./child.component.scss']\r\n})\r\nexport class ChildComponent {\r\n  public tableRowHeight: 48;\r\n  public tableDef = {\r\n    columns: [\r\n      { title: 'Id', key: 'id' },\r\n      { title: 'Description', key: 'description' }\r\n    ]\r\n  };\r\n  public recordset$ = new BehaviorSubject<IRecord[]>([]);\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) {\r\n    this.getRecords();\r\n  }\r\n\r\n  public onNavigate(route: string) {\r\n    this.router.navigate([route]);\r\n  }\r\n\r\n  public toggleLeaf(record: IRecord) {\r\n    const spliceIndex = this.recordset$.value.indexOf(record) + 1;\r\n    const records = [...this.recordset$.value];\r\n\r\n    if (!record.isExpanded) {\r\n      const level = record.level + 1;\r\n      const leafRecords: IRecord[] = [];\r\n      for (let i = 0; i < 10; i++) {\r\n        leafRecords.push({ id: `${level}-${i}`, description: `${level}-${i} description`, expandable: true, level });\r\n      }\r\n      records.splice(spliceIndex, 0, ...leafRecords);\r\n    } else {\r\n      let deleteCount = 0;\r\n      for (let i = spliceIndex; i < records.length; i++) {\r\n        if (records[i].level <= record.level) {\r\n          break;\r\n        }\r\n        deleteCount += 1;\r\n      }\r\n      records.splice(spliceIndex, deleteCount);\r\n    }\r\n    record.isExpanded = !record.isExpanded;\r\n    this.recordset$.next(records);\r\n  }\r\n\r\n  private getRecords() {\r\n    const startIndex = this.recordset$.value.length;\r\n    const records = [...this.recordset$.value];\r\n    for (let i = startIndex; i < startIndex + 10; i++) {\r\n      records.push({ id: `0-${i}`, description: `0-${i} description`, expandable: true, level: 0 });\r\n    }\r\n    this.recordset$.next(records);\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[]}