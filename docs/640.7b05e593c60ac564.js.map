{"version":3,"file":"640.7b05e593c60ac564.js","mappings":"6LAaO,IAAMA,EAAc,MAArB,MAAOA,EAHbC,cAIUC,KAAAC,cAAaC,OAAOC,MAErBC,aACL,OAAOJ,KAAKC,WAAWI,IAAc,yBACvC,CAEOC,UAAUC,GACf,OAAOP,KAAKC,WAAWI,IAAoB,yBAAyBG,QAElEC,KAAKC,IACH,IAAIC,EAAQD,EAAEE,OACd,OAAIL,IACEA,EAAOM,SAASD,SAKlBD,GAJAD,EAAII,IAAMC,WACRL,EACAH,EAAOM,QAAQJ,IAAKO,KAASC,IAAKD,EAAEE,SAAUC,MAAOH,EAAEG,MAAOC,OAAuB,WAAfJ,EAAEE,UAAwC,OAAfF,EAAEE,cAE3FN,QAGRL,EAAOc,OACTX,EAAII,IAAMQ,SAASZ,EAAGH,EAAOc,KAAKH,SAAU,SAAUX,EAAOc,KAAKE,aAAS,EAGzEC,MAASjB,EAAOkB,QAAI,EAAKD,MAASjB,EAAOmB,QAC3ChB,EAAIA,EAAEiB,MAAMpB,EAAOkB,KAAMlB,EAAOkB,KAAOlB,EAAOmB,QAG3C,CAAEf,QAAOiB,KAAMlB,EAAC,GAG7B,CAEOmB,UAAUC,GACf,OAAO9B,KAAKC,WAAWI,IAAI,yBAAyBG,QAAKC,KAAKC,GAAOA,EAAgBqB,KAAMC,GAAMA,EAAEF,GAAGG,aAAeH,EAAGG,aAC1H,CAEOC,YAAYjB,GACjB,OAAO,IAAIkB,IAAuBC,IAChC,IAAIC,EAAWC,aAAaC,QAAQtB,IACpC,EAAIuB,MAAUH,KACZA,EAAWI,KAAKC,MAAML,IAExBD,EAAEO,KAAKN,GACPD,EAAEQ,UAAQ,EAEd,CAEOC,aAAa5B,EAAaoB,GAC/B,OAAO,IAAIF,IAAqBC,IAC9BE,aAAaQ,QAAQ7B,EAAKwB,KAAKM,UAAUV,IACzCD,EAAEO,MAAK,GACPP,EAAEQ,UAAQ,EAEd,CAEOI,iBACL,OAAOhD,KAAKC,WAAWI,IAAY,qCACrC,CAAC4C,SAAAjD,KAAA,mBAAAkD,iBA3DUpD,EAAc,EAAAmD,SAAAjD,KAAA,WAAAmD,EAAAC,IAAA,OAAdtD,EAAcuD,QAAdvD,EAAcwD,UAAAC,WAFb,gBAEDzD,CAAc,kSCEX0D,MAAA,kDAAYA,MAAA,gBAAAC,EAAAC,cAAA,yBAAAD,EAAAC,cAAA,4DAJhBF,MAAA,cAA6HA,MAAA,4BAAAA,MAAAG,GAAA,MAAAC,EAAAJ,QAAA,OAAkBA,MAAAI,EAAAC,0BAAyB,EAA3CL,CAA4C,yBAAAC,EAAAD,MAAAG,GAAAG,UAAAC,EAAAP,MAAA,GAAAQ,EAAAR,QAAUO,SAAAE,QAA2BT,MAAAQ,EAAAE,YAAAT,GAAgB,EAAjGD,CAA4C,uBAAAW,GAAAX,MAAAG,GAAA,MAAAS,EAAAZ,QAAA,OAAmLA,MAAAY,EAAAC,yBAAAF,GAAsC,GAChYX,MAAA,WAAAA,CAA8C,aACFA,MAAA,GAAcA,QACxDA,MAAA,EAAAc,EAAA,qBAGFd,QACAA,MAAA,YACEA,MAAA,YACAA,MAAA,YAA4CA,MAAA,qBAAAW,GAAA,MAAAI,EAAAf,MAAAG,GAAAa,EAAAD,EAAAE,OAAAhB,EAAAc,EAAAT,UAAAY,EAAAlB,QAAA,OAAaA,MAAAkB,EAAAC,qBAAAR,EAAAK,EAAAf,GAAoC,GAAED,kEAT+SA,MAAA,uBAAAC,EAAAmB,OAAlJpB,MAAA,aAAAqB,EAAArB,CAAwC,mCAE1PA,MAAA,GAAAA,MAAAC,EAAAqB,QAC1CtB,cAAA,QAAAC,EAAAC,eAAAD,EAAAC,cAAA9C,OAAA,gCAeJ4C,MAAA,UAAAA,CAAoD,YAEhDA,MAAA,GACFA,wDADEA,MAAA,GAAAA,MAAA,IAAAuB,EAAAC,EAAA9D,UAAA,+BAJNsC,MAAA,WACEA,MAAA,EAAAyB,EAAA,YAAAzB,8BAOFA,8BAPEA,oBAAA,IAAA0B,EAAAC,aAAAD,EAAAE,2CAsBR5B,MAAA,uBAAAA,CAAkC,uBAE9BA,MAAA,cACFA,QACAA,MAAA,UAAMA,MAAA,GAAiBA,oCAJRA,MAAA,QAAA6B,GAEsD7B,MAAA,GAAAA,MAAA,WAAA6B,EAAAC,QAE/D9B,MAAA,GAAAA,MAAA6B,EAAAP,iDANVtB,MAAA,mBAAiCA,MAAA,kCAAAW,GAAAX,MAAA+B,GAAA,MAAAC,EAAAhC,QAAA,OAA0BA,MAAAgC,EAAAC,0BAAAtB,EAAAuB,OAAAvE,OAA8C,GACvGqC,MAAA,EAAAmC,EAAA,yBAAAnC,OAQAA,MAAA,mBACAA,MAAA,uBAAAA,CAA4C,UACpCA,MAAA,yBAAmBA,UAE3BA,MAAA,uBAAAA,CAAuC,UAC/BA,MAAA,mBAAaA,oCAbrBA,cAAAoC,EAAAT,eCfG,IAAMU,EAAkB,MAAzB,MAAOA,EApBb9F,cAqBUC,KAAA8F,kBAAiB5F,OAAOJ,KAQxBE,KAAA+F,mBAAqB,IAAIC,IACzBhG,KAAAiG,kBAAmB,EAEpBjG,KAAAkG,QAAS,EACTlG,KAAAmG,YAAc,CACnB9E,KAAM,CACJH,SAAU,WACVK,UAAW6E,KAAcC,WAE3BxF,QAAS,GACTY,KAAM,EACNC,KAAM,IAED1B,KAAAsG,UAAuB,GACvBtG,KAAAuG,WAAa,IAAIC,IAA2B,IAC5CxG,KAAAyG,YAAc,EACdzG,KAAAmF,aAAuC,CAC5C,CAAEL,OAAQ,KAAM5D,SAAU,MAC1B,CAAE4D,OAAQ,QAAS5D,SAAU,YAAa0D,MAAO,KACjD,CAAEE,OAAQ,OAAQ5D,SAAU,YAC5B,CAAE4D,OAAQ,SAAU5D,SAAU,UAC9B,CAAE4D,OAAQ,aAAc5D,SAAU,eAE7BlB,KAAA0G,kBAAoB,EAEpB1G,KAAAoF,eAAkBuB,GAChBA,EAAQpG,OAAOqG,IAAkB,IAAbA,EAAEtB,QAGxBtF,KAAA6G,iBAAmB,CAACC,EAAeC,IACjCA,EAAOjF,GAGTkF,WACLhH,KAAKiH,YACP,CAEOC,kBACLlH,KAAKmH,uBAAuBC,oBAAoBC,UAAUjF,IACxDpC,KAAK0G,kBAAoBtE,EAAEkF,OACtBtH,KAAKkG,QAAU9D,EAAEkF,MAAQ,GAAKlF,EAAEmF,IAAM,GAAKvH,KAAKyG,cACnDzG,KAAKkG,QAAS,EACdlG,KAAK8F,eACFxF,UAAU,CACTe,KAAMrB,KAAKmG,YAAY9E,OACtBb,QACDgH,KAAS,IAAMxH,KAAKkG,QAAS,IAE9BmB,UAAWI,IACV,MAAMC,EAAU1H,KAAKsG,UAAU1F,OAAS,EACxCZ,KAAKsG,UAAY,IAAItG,KAAKsG,aAAcmB,EAAO7F,KAAKnB,IAAI,CAACuB,EAAG2F,KAC1D3F,EAAEF,GAAK4F,EAAU1F,EAAEF,GACZE,KAEThC,KAAKyG,YAAczG,KAAKsG,UAAU1F,OAClCZ,KAAKuG,WAAW5D,KAAK3C,KAAKsG,UAAS,GACpC,EAGT,CAEOsB,cACL5H,KAAK+F,mBAAmBpD,OACxB3C,KAAK+F,mBAAmBnD,UAC1B,CAEOiB,0BACL7D,KAAKmH,uBAAuBU,eAAe,EAC7C,CAEOC,uBAAuBC,IAC5BC,QAAgBhI,KAAKmF,aAAc4C,EAAME,cAAeF,EAAMG,cAC9DlI,KAAKmF,aAAe,IAAInF,KAAKmF,aAC/B,CAEOR,qBAAqBoD,EAAmBI,EAAqBC,GAClEL,EAAMM,kBACNN,EAAMO,iBACNtI,KAAK+F,mBAAmBpD,OAExB,IAAI4F,GAAuBvI,KAAKwI,iBAAiBC,eAAmCC,iBAAiB,eAAeP,GAChHQ,GAAkB3I,KAAKwI,iBAAiBC,eAAmCC,iBAAiB,yBAAyBP,EAAc,MAEnIS,EAAYb,EAAMc,QACtB,GAAIN,EAAqB,CACvBvI,KAAKiG,kBAAmB,EACxBjG,KAAKwI,iBAAiBC,cAAcK,cAAc,2BAA2BC,UAAUC,IAAI,mCAC3FT,EAAoBQ,UAAUC,IAAI,oCAClCL,EAAeM,QAAQrC,GAAKA,EAAEmC,UAAUC,IAAI,sCAAmC,EAE/EE,KAAsBC,SAASC,KAAM,aAClC5I,QACC6I,KAAUrJ,KAAK+F,qBAAkB,EACjCuD,KAAKvB,IACHK,EAAOxD,MAAQ2D,EAAoBgB,aAAexB,EAAMc,QAAUD,GAClEA,EAAYb,EAAMc,WAEpBxB,YAEJ,MAAMmC,EAAexJ,KAAKwI,iBAAiBC,cAAcK,cAAc,UACvEW,UACEP,KAAUM,EAAc,YAAS,EACjCN,KAAUM,EAAc,eAEvBhJ,QACCgH,KAAS,IACPkC,sBAAsB,KACpB1J,KAAKiG,kBAAmB,EACvBsC,OAA8BoB,EAC9BhB,OAAyBgB,MAC1B,EAEJN,KAAUrJ,KAAK+F,qBAAkB,EACjCuD,KAAKvB,IACH/H,KAAK+F,mBAAmBpD,OACxB3C,KAAKwI,iBAAiBC,cAAcK,cAAc,2BAA2BC,UAAUa,OAAO,mCAC9FrB,EAAoBQ,UAAUa,OAAO,oCACrCjB,EAAeM,QAAQrC,GAAKA,EAAEmC,UAAUa,OAAO,oCAAmC,IAEpFvC,WACN,CACF,CAEOhD,yBAAyB0D,GAC9BA,EAAMO,iBACFtI,KAAK6J,4BAA4BC,aACnC9J,KAAK6J,2BAA2B5F,QAEhCjE,KAAK6J,4BAA4BE,MAErC,CAEOtE,0BAA0BtE,GAC/B,OAAQA,GACN,IAAK,qBACHnB,KAAKmF,aAAa8D,QAAQrC,GAAKA,EAAEhC,WAAQ+E,GACzC,MACF,IAAK,gBAAiB,CACpB,MAAMpB,GAAuBvI,KAAKwI,iBAAiBC,eAAmCC,iBAAiB,eAAe,GAChHC,GAAkB3I,KAAKwI,iBAAiBC,eAAmCC,iBAAiB,4BAClGH,EAAoBQ,UAAUC,IAAI,kCAClCL,EAAeM,QAAQrC,GAAKA,EAAEmC,UAAUC,IAAI,mCAC5C,KACF,CAEA,QAAS,CACP,MAAMgB,EAAchK,KAAKmF,aAAapD,KAAK6E,GAAKA,EAAE1F,WAAaC,EAAMD,UACjE8I,GAEEhK,KAAKmF,aAAa5E,OAAOqG,IAAMA,EAAEtB,QAAQ1E,SAC3CoJ,EAAY1E,WAAS9C,MAAUwH,EAAY1E,UAAW0E,EAAY1E,OAClE0E,EAAYtG,mBAAgBiG,EAC5B3J,KAAKmF,aAAe,IAAInF,KAAKmF,eAGjC,KACF,EAEFnF,KAAK6J,4BAA4B5F,OACnC,CAEOC,YAAYkE,GACZpI,KAAKiG,mBACRjG,KAAKmF,aAAa5E,OAAOqG,GAAKA,EAAE1F,WAAakH,EAAOlH,UAAU+H,QAAQrC,GAAKA,EAAElD,mBAAgBiG,GAE3FvB,EAAO1E,cADL0E,EAAO1E,gBAAkB0C,KAAcC,UAClBD,KAAc6D,WAC5B7B,EAAO1E,gBAAkB0C,KAAc6D,gBACzBN,EAEAvD,KAAcC,UAGtCrG,KAAKmG,YAAoB9E,KAAO+G,EAAO1E,cAAgB,CAAExC,SAAUkH,EAAOlH,SAAUK,UAAW6G,EAAO1E,oBAAkBiG,EACzH3J,KAAKmG,YAAY1E,KAAO,EACxBzB,KAAKmH,uBAAuBU,eAAe,GAC3C7H,KAAKiH,aAET,CAEOiD,uBAAuBxE,GAC5B1F,KAAKmG,YAAY1E,KAAOiE,EAAOyE,UAAYzE,EAAO0E,SAClDpK,KAAKmG,YAAYzE,KAAOgE,EAAO0E,SAC/BpK,KAAKiH,YACP,CAEQA,aACNjH,KAAKkG,QAAS,EACdlG,KAAK8F,eACFxF,UAAU,CACTe,KAAMrB,KAAKmG,YAAY9E,OACtBb,QACDgH,KAAS,IAAMxH,KAAKkG,QAAS,IAE9BmB,UAAWI,IACVzH,KAAKsG,UAAYmB,EAAO7F,KACxB5B,KAAKyG,YAAcgB,EAAO9G,MAC1BX,KAAKuG,WAAW5D,KAAK3C,KAAKsG,UAAS,EAEzC,CAACrD,SAAAjD,KAAA,mBAAAkD,iBA/MU2C,EAAkB,EAAA5C,SAAAjD,KAAA,UAAAmD,EAAAkH,IAAA,MAAlBxE,EAAkByE,UAAA,qBAAAC,UAAA,SAAAC,EAAAC,MAAA,EAAAD,yBAKWE,aAE7BC,KAAwB,q7DDzCrCnH,MAAA,oBAAAA,CAA8B,UACqBA,MAAA,gBAAUA,UAG7DA,MAAA,UAAAA,CAAkB,UAAlBA,CAAkB,kCAAlBA,CAAkB,cAAlBA,CAAkB,UAAlBA,CAAkB,UAKsDA,MAAA,8BAAAW,GAAA,OAAsBsG,EAAA3C,uBAAA3D,EAA8B,GAChHX,MAAA,GAAAoH,EAAA,YAAApH,+BAcFA,UAEFA,MAAA,YACEA,MAAA,GAAAqH,EAAA,YASFrH,cAKNA,MAAA,qBAAAA,CAA+B,cACsBA,MAAA,IAAwBA,YAK/EA,MAAA,GAAAsH,EAAA,2BAAAtH,cAvCeA,MAAA,GAAAA,MAAA,wBAAAiH,EAAA/D,kBAAAlD,CAAiD,iCAAAiH,EAAA/D,kBAAA,MAEpDlD,MAAA,GAAAA,YAAA,KAAAiH,EAAAtF,aAAAsF,EAAArF,iBAiB6B5B,MAAA,GAAAA,MAAA,kBAAAiH,EAAAlE,WAAA/C,CAAe,uBAAAiH,EAAA5D,kBAeDrD,MAAA,GAAAA,MAAA,YAAAiH,EAAAhE,YAAA,oBCxBnDsE,KACAC,KAAcC,eACdC,KAAeC,eACfC,MAAmBC,MACnBC,MAAkBD,MAClBE,MAAeF,MACfG,MAAmBH,MACnBI,MAAeJ,MACfK,MAAgBL,MAChBM,MAAkBN,MAElBO,KAAYC,OAAA,k0JAKHhG,CAAkB","names":["AppDataService","constructor","this","httpClient","inject","HttpClient","getProfile","get","getPeople","filter","pipe","map","r","count","length","filters","Utils","filterData","f","key","property","value","strict","sort","sortData","direction","isNumber","skip","take","slice","data","getPerson","id","find","p","toString","getSearches","Observable","o","searches","localStorage","getItem","isDefined","JSON","parse","next","complete","saveSearches","setItem","stringify","getLongRequest","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","wxM","factory","Éµfac","providedIn","i0","col_r5","sortDirection","_r14","ctx_r13","onColumnHeaderDragStart","$implicit","_r10","ctx_r15","close","onTableSort","$event","ctx_r16","onColumnHeaderRightClick","TableDemoComponent_For_11_Conditional_5_Template","restoredCtx","i_r6","$index","ctx_r17","onColumnHeaderResize","width","_r4","header","record_r18","col_r20","TableDemoComponent_tr_14_For_2_Template","ctx_r2","tableColumns","visibleColumns","column_r27","hidden","_r33","ctx_r32","onColumnPopupItemSelected","detail","TableDemoComponent_ng_template_18_For_2_Template","ctx_r3","TableDemoComponent","appDataService","tableColumnResize$","Subject","isColumnResizing","isBusy","filterCache","SortDirection","Ascending","recordset","recordset$","BehaviorSubject","recordCount","tableHeaderOffset","columns","c","recordsetTrackBy","index","person","ngOnInit","getRecords","ngAfterViewInit","virtualScrollViewport","renderedRangeStream","subscribe","start","end","finalize","result","startId","i","ngOnDestroy","scrollToOffset","onColumnHeaderDragDrop","event","moveItemInArray","previousIndex","currentIndex","columnIndex","column","stopPropagation","preventDefault","columnHeaderElement","tableElementRef","nativeElement","querySelectorAll","columnElements","positionX","clientX","querySelector","classList","add","forEach","fromEvent","document","body","takeUntil","tap","offsetWidth","theadElement","merge","requestAnimationFrame","undefined","remove","columnHeaderPopupDirective","popupElement","open","tableColumn","Descending","onTablePaginatorChange","pageIndex","pageSize","In1","selectors","viewQuery","rf","ctx","PopupDirective","CdkVirtualScrollViewport","TableDemoComponent_For_11_Template","TableDemoComponent_tr_14_Template","TableDemoComponent_ng_template_18_Template","CommonModule","DragDropModule","i1","ScrollingModule","i2","ForgeCheckboxModule","i3","ForgeDividerModule","ForgeIconModule","ForgeListItemModule","ForgeListModule","ForgePopupModule","ForgeToolbarModule","CallbackPipe","styles"],"sourceRoot":"webpack:///","sources":["./src/app/app-data.service.ts","./src/app/table-demo/table-demo.component.html","./src/app/table-demo/table-demo.component.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, delay } from 'rxjs/operators';\r\nimport { isDefined, isNumber } from '@tylertech/forge-core';\r\nimport { IPerson, IProfile } from 'src/app/shared/interfaces/person.interface';\r\nimport { ISearch } from 'src/app/shared/interfaces/search.interface';\r\nimport { IFilterParameter } from 'src/app/shared/interfaces/filter.interface';\r\nimport { Utils } from 'src/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppDataService {\r\n  private httpClient = inject(HttpClient);\r\n\r\n  public getProfile(): Observable<IProfile> {\r\n    return this.httpClient.get<IProfile>('mock-data/profile.json');\r\n  }\r\n\r\n  public getPeople(filter?: IFilterParameter): Observable<{ count: number; data: Array<IPerson> }> {\r\n    return this.httpClient.get<Array<IPerson>>('mock-data/people.json').pipe(\r\n      // delay(2000),\r\n      map((r) => {\r\n        let count = r.length;\r\n        if (filter) {\r\n          if (filter.filters?.length) {\r\n            r = Utils.filterData(\r\n              r,\r\n              filter.filters.map((f) => ({ key: f.property, value: f.value, strict: f.property === 'gender' || f.property === 'id' }))\r\n            );\r\n            count = r.length;\r\n          }\r\n\r\n          if (filter.sort) {\r\n            r = Utils.sortData(r, filter.sort.property, 'string', filter.sort.direction);\r\n          }\r\n\r\n          if (isNumber(filter.skip) && isNumber(filter.take)) {\r\n            r = r.slice(filter.skip, filter.skip + filter.take);\r\n          }\r\n        }\r\n        return { count, data: r };\r\n      })\r\n    );\r\n  }\r\n\r\n  public getPerson(id: number): Observable<IPerson | undefined> {\r\n    return this.httpClient.get('mock-data/people.json').pipe(map((r) => (r as IPerson[]).find((p) => p.id.toString() === id.toString())));\r\n  }\r\n\r\n  public getSearches(key: string): Observable<ISearch[]> {\r\n    return new Observable<ISearch[]>((o) => {\r\n      let searches = localStorage.getItem(key);\r\n      if (isDefined(searches)) {\r\n        searches = JSON.parse(searches as string);\r\n      }\r\n      o.next(searches as any);\r\n      o.complete();\r\n    });\r\n  }\r\n\r\n  public saveSearches(key: string, searches: ISearch[]): Observable<boolean> {\r\n    return new Observable<boolean>((o) => {\r\n      localStorage.setItem(key, JSON.stringify(searches));\r\n      o.next(true);\r\n      o.complete();\r\n    });\r\n  }\r\n\r\n  public getLongRequest(): Observable<string> {\r\n    return this.httpClient.get<string>('http://localhost:5000/long-request');\r\n  }\r\n}\r\n","<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--title\">Table demo</h2>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <div class=\"body__table\">\r\n    <cdk-virtual-scroll-viewport itemSize=\"48\">\r\n      <table #table class=\"forge-table forge-table--fixed\">\r\n        <thead [style.--table-header-offset]=\"tableHeaderOffset\" [style.--table-header-translate-y]=\"(tableHeaderOffset * -48) + 'px'\">\r\n          <tr class=\"forge-table-row forge-table-head__row\" cdkDropList (cdkDropListDropped)=\"onColumnHeaderDragDrop($event)\" cdkDropListOrientation=\"horizontal\">\r\n            @for (col of tableColumns | appCallback:$any(visibleColumns); track i; let i = $index) {\r\n            <th scope=\"col\" class=\"forge-table-cell forge-table-head__cell forge-table-head__cell--sortable\" cdkDrag cdkDragLockAxis=\"x\" (cdkDragStarted)=\"onColumnHeaderDragStart()\" (click)=\"columnHeaderPopup.close(); onTableSort(col)\" #columnHeaderPopup=\"forgePopup\" [forgePopup]=\"columnHeaderPopupTemplate\" [forgePopupPlacement]=\"'right-end'\" (contextmenu)=\"onColumnHeaderRightClick($any($event))\" tabindex=\"-1\" [style.--table-column-width]=\"col.width\">\r\n              <div class=\"forge-table-head__cell-container\">\r\n                <span class=\"forge-table-head__cell-text\">{{col.header}}</span>\r\n                @if (col.sortDirection?.length) {\r\n                <forge-icon [name]=\"col.sortDirection === 'DESC' ? 'arrow_downward' : col.sortDirection === 'ASC' ? 'arrow_upward' : ''\" class=\"forge-table-head__cell-sort-icon\" aria-hidden=\"true\"></forge-icon>\r\n                }\r\n              </div>\r\n              <div class=\"forge-table-head__cell-actions\">\r\n                <div class=\"forge-table-head__cell-dragger\" cdkDragHandle></div>\r\n                <div class=\"forge-table-head__cell-resizer\" (mousedown)=\"onColumnHeaderResize($event, i, col)\"></div>\r\n              </div>\r\n            </th>\r\n            }\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *cdkVirtualFor=\"let record of recordset$; trackBy: recordsetTrackBy\" class=\"forge-table-row forge-table-body__row\">\r\n            @for (col of tableColumns | appCallback:$any(visibleColumns); track i; let i = $index) {\r\n            <td class=\"forge-table-cell forge-table-body__cell\">\r\n              <div class=\"forge-table-cell__container\">\r\n                {{record[col.property]}}\r\n              </div>\r\n            </td>\r\n            }\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </cdk-virtual-scroll-viewport>\r\n  </div>\r\n\r\n  <forge-toolbar inverted=\"true\">\r\n    <span slot=\"end\" class=\"forge-typography--caption\">Records: {{recordCount}}</span>\r\n    <!-- <forge-paginator slot=\"end\" [pageIndex]=\"filterCache.skip / filterCache.take\" [pageSize]=\"filterCache.take\" [total]=\"recordCount\" (forge-paginator-change)=\"onTablePaginatorChange($event.detail)\"></forge-paginator> -->\r\n  </forge-toolbar>\r\n</div>\r\n\r\n<ng-template #columnHeaderPopupTemplate>\r\n  <forge-list class=\"column-popup\" (forge-list-item-select)=\"onColumnPopupItemSelected($event.detail.value)\">\r\n    @for (column of tableColumns; track i; let i = $index) {\r\n    <forge-list-item [value]=\"column\">\r\n      <forge-checkbox slot=\"leading\">\r\n        <input type=\"checkbox\" checked aria-label=\"Show/hide table column\" [checked]=\"!column.hidden\" />\r\n      </forge-checkbox>\r\n      <span>{{column.header}}</span>\r\n    </forge-list-item>\r\n    }\r\n    <forge-divider></forge-divider>\r\n    <forge-list-item value=\"reset-column-width\">\r\n      <span>Reset column widths</span>\r\n    </forge-list-item>\r\n    <forge-list-item value=\"freeze-column\">\r\n      <span>Freeze column</span>\r\n    </forge-list-item>\r\n  </forge-list>\r\n</ng-template>","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { finalize, fromEvent, tap, Subject, takeUntil, merge, BehaviorSubject } from 'rxjs';\r\nimport { CdkDragDrop, DragDropModule, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { IColumnConfiguration, SortDirection } from '@tylertech/forge';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { ForgeCheckboxModule, ForgeDividerModule, ForgeIconModule, ForgeListItemModule, ForgeListModule, ForgePopupModule, ForgeToolbarModule, PopupDirective } from '@tylertech/forge-angular';\r\n\r\nimport { IPerson } from 'src/app/shared/interfaces/person.interface';\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { AutoFocusDirective } from 'src/app/shared/directives/auto-focus/auto-focus.directive';\r\nimport { CallbackPipe } from 'src/app/shared/pipes/callback.pipe';\r\n\r\n@Component({\r\n  selector: 'app-table-demo',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    DragDropModule,\r\n    ScrollingModule,\r\n    ForgeCheckboxModule,\r\n    ForgeDividerModule,\r\n    ForgeIconModule,\r\n    ForgeListItemModule,\r\n    ForgeListModule,\r\n    ForgePopupModule,\r\n    ForgeToolbarModule,\r\n    AutoFocusDirective,\r\n    CallbackPipe\r\n  ],\r\n  templateUrl: './table-demo.component.html',\r\n  styleUrls: ['./table-demo.component.scss']\r\n})\r\nexport class TableDemoComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  private appDataService = inject(AppDataService);\r\n\r\n  @ViewChild('table', { static: true })\r\n  private tableElementRef?: ElementRef;\r\n  @ViewChild('columnHeaderPopup', { read: PopupDirective })\r\n  private columnHeaderPopupDirective?: PopupDirective;\r\n  @ViewChild(CdkVirtualScrollViewport)\r\n  public virtualScrollViewport?: CdkVirtualScrollViewport;\r\n  private tableColumnResize$ = new Subject<void>();\r\n  private isColumnResizing = false;\r\n\r\n  public isBusy = false;\r\n  public filterCache = {\r\n    sort: {\r\n      property: 'lastName',\r\n      direction: SortDirection.Ascending\r\n    },\r\n    filters: [] as any[],\r\n    skip: 0,\r\n    take: 25\r\n  }\r\n  public recordset: IPerson[] = [];\r\n  public recordset$ = new BehaviorSubject<IPerson[]>([]);\r\n  public recordCount = 0;\r\n  public tableColumns: IColumnConfiguration[] = [\r\n    { header: 'Id', property: 'id' },\r\n    { header: 'First', property: 'firstName', width: 400 },\r\n    { header: 'Last', property: 'lastName' },\r\n    { header: 'Gender', property: 'gender' },\r\n    { header: 'Occupation', property: 'occupation' }\r\n  ];\r\n  public tableHeaderOffset = 0;\r\n\r\n  public visibleColumns = (columns: IColumnConfiguration[]) => {\r\n    return columns.filter(c => c.hidden !== true);\r\n  }\r\n\r\n  public recordsetTrackBy = (index: number, person: IPerson) => {\r\n    return person.id;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.getRecords();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.virtualScrollViewport?.renderedRangeStream.subscribe(o => {\r\n      this.tableHeaderOffset = o.start;\r\n      if (!this.isBusy && o.start > 0 && o.end + 67 > this.recordCount) {\r\n        this.isBusy = true;\r\n        this.appDataService\r\n          .getPeople({\r\n            sort: this.filterCache.sort\r\n          }).pipe(\r\n            finalize(() => this.isBusy = false)\r\n          )\r\n          .subscribe((result) => {\r\n            const startId = this.recordset.length + 1;\r\n            this.recordset = [...this.recordset, ...result.data.map((p, i) => {\r\n              p.id = startId + p.id;\r\n              return p;\r\n            })];\r\n            this.recordCount = this.recordset.length;\r\n            this.recordset$.next(this.recordset);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.tableColumnResize$.next();\r\n    this.tableColumnResize$.complete();\r\n  }\r\n\r\n  public onColumnHeaderDragStart() {\r\n    this.virtualScrollViewport?.scrollToOffset(0);\r\n  }\r\n\r\n  public onColumnHeaderDragDrop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.tableColumns, event.previousIndex, event.currentIndex);\r\n    this.tableColumns = [...this.tableColumns];\r\n  }\r\n\r\n  public onColumnHeaderResize(event: MouseEvent, columnIndex: number, column: IColumnConfiguration) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    this.tableColumnResize$.next();\r\n\r\n    let columnHeaderElement = (this.tableElementRef?.nativeElement as HTMLTableElement).querySelectorAll('thead tr th')[columnIndex] as HTMLTableCellElement;\r\n    let columnElements = (this.tableElementRef?.nativeElement as HTMLTableElement).querySelectorAll(`tbody tr td:nth-child(${columnIndex + 1})`);\r\n\r\n    let positionX = event.clientX;\r\n    if (columnHeaderElement) {\r\n      this.isColumnResizing = true;\r\n      this.tableElementRef?.nativeElement.querySelector('.forge-table-head__row')?.classList.add('forge-table-head__row--resizing');\r\n      columnHeaderElement.classList.add('forge-table-head__cell--resizing');\r\n      columnElements.forEach(c => c.classList.add('forge-table-body__cell--resizing'));\r\n\r\n      fromEvent<MouseEvent>(document.body, 'mousemove')\r\n        .pipe(\r\n          takeUntil(this.tableColumnResize$),\r\n          tap((event) => {\r\n            column.width = columnHeaderElement.offsetWidth + (event.clientX - positionX);\r\n            positionX = event.clientX;\r\n          })\r\n        ).subscribe();\r\n\r\n      const theadElement = this.tableElementRef?.nativeElement.querySelector('thead');\r\n      merge(\r\n        fromEvent(theadElement, 'mouseup'),\r\n        fromEvent(theadElement, 'mouseleave')\r\n      )\r\n        .pipe(\r\n          finalize(() =>\r\n            requestAnimationFrame(() => {\r\n              this.isColumnResizing = false;\r\n              (columnHeaderElement as any) = undefined;\r\n              (columnElements as any) = undefined;\r\n            })\r\n          ),\r\n          takeUntil(this.tableColumnResize$),\r\n          tap((event) => {\r\n            this.tableColumnResize$.next();\r\n            this.tableElementRef?.nativeElement.querySelector('.forge-table-head__row')?.classList.remove('forge-table-head__row--resizing');\r\n            columnHeaderElement.classList.remove('forge-table-head__cell--resizing');\r\n            columnElements.forEach(c => c.classList.remove('forge-table-body__cell--resizing'));\r\n          })\r\n        ).subscribe();\r\n    }\r\n  }\r\n\r\n  public onColumnHeaderRightClick(event: PointerEvent) {\r\n    event.preventDefault();\r\n    if (this.columnHeaderPopupDirective?.popupElement) {\r\n      this.columnHeaderPopupDirective.close();\r\n    } else {\r\n      this.columnHeaderPopupDirective?.open();\r\n    }\r\n  }\r\n\r\n  public onColumnPopupItemSelected(value: any) {\r\n    switch (value) {\r\n      case 'reset-column-width':\r\n        this.tableColumns.forEach(c => c.width = undefined);\r\n        break;\r\n      case 'freeze-column': {\r\n        const columnHeaderElement = (this.tableElementRef?.nativeElement as HTMLTableElement).querySelectorAll('thead tr th')[0];\r\n        const columnElements = (this.tableElementRef?.nativeElement as HTMLTableElement).querySelectorAll(`tbody tr td:nth-child(${1})`);\r\n        columnHeaderElement.classList.add('forge-table-head__cell--frozen');\r\n        columnElements.forEach(c => c.classList.add('forge-table-body__cell--frozen'));\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        const tableColumn = this.tableColumns.find(c => c.property === value.property);\r\n        if (tableColumn) {\r\n          // prevent hiding all columns\r\n          if (this.tableColumns.filter(c => !c.hidden).length) {\r\n            tableColumn.hidden = isDefined(tableColumn.hidden) ? !tableColumn.hidden : true;\r\n            tableColumn.sortDirection = undefined;\r\n            this.tableColumns = [...this.tableColumns];\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.columnHeaderPopupDirective?.close();\r\n  }\r\n\r\n  public onTableSort(column: IColumnConfiguration) {\r\n    if (!this.isColumnResizing) {\r\n      this.tableColumns.filter(c => c.property !== column.property).forEach(c => c.sortDirection = undefined);\r\n      if (column.sortDirection === SortDirection.Ascending) {\r\n        column.sortDirection = SortDirection.Descending;\r\n      } else if (column.sortDirection === SortDirection.Descending) {\r\n        column.sortDirection = undefined;\r\n      } else {\r\n        column.sortDirection = SortDirection.Ascending;\r\n      }\r\n\r\n      (this.filterCache as any).sort = column.sortDirection ? { property: column.property, direction: column.sortDirection } : undefined;\r\n      this.filterCache.skip = 0;\r\n      this.virtualScrollViewport?.scrollToOffset(0);\r\n      this.getRecords();\r\n    }\r\n  }\r\n\r\n  public onTablePaginatorChange(detail: { pageIndex: number; pageSize: number }) {\r\n    this.filterCache.skip = detail.pageIndex * detail.pageSize;\r\n    this.filterCache.take = detail.pageSize;\r\n    this.getRecords();\r\n  }\r\n\r\n  private getRecords() {\r\n    this.isBusy = true;\r\n    this.appDataService\r\n      .getPeople({\r\n        sort: this.filterCache.sort\r\n      }).pipe(\r\n        finalize(() => this.isBusy = false)\r\n      )\r\n      .subscribe((result) => {\r\n        this.recordset = result.data;\r\n        this.recordCount = result.count;\r\n        this.recordset$.next(this.recordset);\r\n      });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}