{"version":3,"file":"810.739f3e793b502011.js","mappings":"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","names":["SearchSaveComponent","constructor","this","dialogConfig","inject","DIALOG_DATA","dialogRef","DialogRef","formGroup","FormGroup","name","FormControl","validators","Validators","required","description","isDefault","isPublic","record","patchValue","onSave","close","getRawValue","onCancel","markAsPristine","static","t","core","VBU","selectors","standalone","features","i0","decls","vars","consts","template","rf","ctx","controls","invalid","dirty","CommonModule","ReactiveFormsModule","i1","ForgeButtonModule","i2","ForgeCheckboxModule","ForgeIconButtonModule","ForgeIconModule","ForgeTextFieldModule","FormControlInvalidDirective","DialogComponent","styles","CHECKBOX_INDETERMINATE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CheckboxIndeterminateComponent","multi","renderer","Renderer2","elementRef","ElementRef","onChange","_","onTouched","forgeCheckBox","nativeElement","querySelector","elementBlur","ngOnInit","addEventListener","value","setCheckboxState","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","setProperty","requestAnimationFrame","hostBindings","ngContentSelectors","_c0","ctx_r1","searchName","searchDescription","$event","search_r6","_r5","$implicit","onSearchAction","id","_r4","detail","SearchComponent_ng_template_17_For_6_Template","_forTrack0","searchCache","searches","name_r8","_r7","operatorPopup_r9","onOperatorPopupOpen","_c4","tmp_7_0","get","operator","operatorPopupTemplate_r10","SearchComponent_ng_template_51_For_2_Conditional_3_Template","option_r12","operatorPopupFormGroup","label","_r11","onOperatorSelected","SearchComponent_ng_template_51_For_2_Template","operatorOptions","SearchComponent","dialogService","DialogService","toastService","ToastService","dataService","AppDataService","storageKey","activeSearchId","undefined","dateOfBirth","address","include","facet","facetOptions","nameFilter","filter","lastValueFrom","getPeople","pipe","map","r","data","p","firstName","toLocaleLowerCase","includes","lastName","facetFilter","of","getSearches","subscribe","result","activeSearch","find","s","isDefined","filters","index","push","onSearch","onSaveSearch","search","open","options","persistent","afterClosed","searchIndex","findIndex","length","Math","max","saveSearches","next","show","message","error","onClearSearch","setValue","reset","event","action","stopPropagation","searchesPopup","copySearch","JSON","parse","stringify","splice","popup","operatorPopup","parseInt","viewQuery","SearchComponent_Conditional_4_Template","_r1","searchesPopup_r3","SearchComponent_ng_template_17_Template","SearchComponent_ng_container_28_Template","SearchComponent_ng_container_35_Template","SearchComponent_ng_container_41_Template","SearchComponent_ng_template_49_Template","SearchComponent_ng_template_51_Template","searchesPopupTemplate_r13","opertatorAddonTemplate_r14","_c1","_c2","_c3","ForgeAutocompleteModule","i3","ForgeDatePickerModule","ForgeDividerModule","ForgeListItemModule","ForgeListModule","ForgePopoverModule","ForgeToolbarModule","AutocompleteRangeComponent"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/search/save/search-save.component.ts","./src/app/search/save/search-save.component.html","./src/app/shared/components/checkbox-indeterminate/checkbox-indeterminate.component.ts","./src/app/shared/components/checkbox-indeterminate/checkbox-indeterminate.component.html","./src/app/search/search.component.html","./src/app/search/search.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { DIALOG_DATA, DialogRef, ForgeButtonModule, ForgeCheckboxModule, ForgeIconButtonModule, ForgeIconModule, ForgeTextFieldModule } from '@tylertech/forge-angular';\r\n\r\nimport { AutoFocusDirective } from 'src/app/shared/directives/auto-focus/auto-focus.directive';\r\nimport { FormControlInvalidDirective } from 'src/app/shared/directives/form-control-invalid/form-control-invalid.directive';\r\nimport { DialogComponent } from 'src/app/shared/components/dialog/dialog.component';\r\n\r\nexport interface ISearchSaveDialogData {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  isDefault: boolean;\r\n  isPublic: boolean;\r\n  filters: { property: string; value: string }[];\r\n}\r\n@Component({\r\n  selector: 'app-search-save',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ForgeButtonModule,\r\n    ForgeCheckboxModule,\r\n    ForgeIconButtonModule,\r\n    ForgeIconModule,\r\n    ForgeTextFieldModule,\r\n    AutoFocusDirective,\r\n    FormControlInvalidDirective,\r\n    DialogComponent\r\n  ],\r\n  templateUrl: './search-save.component.html',\r\n  styleUrls: ['./search-save.component.scss']\r\n})\r\nexport class SearchSaveComponent {\r\n  private dialogConfig = inject<ISearchSaveDialogData>(DIALOG_DATA);\r\n  private dialogRef = inject(DialogRef);\r\n\r\n  public record: ISearchSaveDialogData;\r\n  public formGroup = new FormGroup({\r\n    name: new FormControl<string | null>(null, { validators: [Validators.required] }),\r\n    description: new FormControl(),\r\n    isDefault: new FormControl(),\r\n    isPublic: new FormControl()\r\n  });\r\n\r\n  constructor() {\r\n    this.record = this.dialogConfig;\r\n    this.formGroup.patchValue(this.record);\r\n  }\r\n\r\n  public onSave() {\r\n    this.dialogRef.close({ ...this.record, ...this.formGroup.getRawValue() });\r\n  }\r\n\r\n  public onCancel() {\r\n    this.formGroup.markAsPristine();\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<app-dialog dialogTitle=\"Save search\">\r\n  <form class=\"form-grid\" novalidate autocomplete=\"off\" [formGroup]=\"formGroup\">\r\n    <forge-text-field required [appFormControlInvalid]=\"formGroup.controls.name\">\r\n      <input type=\"text\" id=\"search-save--name\" formControlName=\"name\" autofocus>\r\n      <label for=\"search-save--name\" slot=\"label\">Name</label>\r\n      <span slot=\"support-text\" class=\"app-form-control-invalid\">A name is required</span>\r\n    </forge-text-field>\r\n    <forge-text-field>\r\n      <input type=\"text\" id=\"search-save--description\" formControlName=\"description\">\r\n      <label for=\"search-save--description\" slot=\"label\">Description</label>\r\n    </forge-text-field>\r\n    <div>\r\n      <forge-checkbox formControlName=\"isDefault\">\r\n        Make this your default search\r\n      </forge-checkbox>\r\n      <forge-checkbox formControlName=\"isPublic\">\r\n        Make this search public\r\n      </forge-checkbox>\r\n    </div>\r\n  </form>\r\n\r\n  <ng-container app-dialog-footer>\r\n    <forge-button slot=\"end\" variant=\"outlined\" (click)=\"onCancel()\">\r\n      Cancel\r\n    </forge-button>\r\n    <forge-button slot=\"end\" variant=\"raised\" (click)=\"onSave()\" [disabled]=\"formGroup.invalid || !formGroup.dirty\">\r\n      Save\r\n    </forge-button>\r\n  </ng-container>\r\n</app-dialog>\r\n","import { Component, ElementRef, HostListener, OnInit, Renderer2, StaticProvider, forwardRef, inject } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { CheckboxComponent } from '@tylertech/forge';\r\n\r\nexport const CHECKBOX_INDETERMINATE_VALUE_ACCESSOR: StaticProvider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => CheckboxIndeterminateComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'app-checkbox-indeterminate',\r\n  standalone: true,\r\n  imports: [],\r\n  providers: [CHECKBOX_INDETERMINATE_VALUE_ACCESSOR],\r\n  templateUrl: './checkbox-indeterminate.component.html',\r\n  styleUrl: './checkbox-indeterminate.component.scss'\r\n})\r\nexport class CheckboxIndeterminateComponent implements OnInit, ControlValueAccessor {\r\n  private renderer = inject(Renderer2);\r\n  private elementRef = inject(ElementRef);\r\n  private get forgeCheckBox(): CheckboxComponent {\r\n    return this.elementRef.nativeElement.querySelector('forge-checkbox') as CheckboxComponent;\r\n  }\r\n  private value?: boolean | null;\r\n\r\n  @HostListener('blur')\r\n  public elementBlur() {\r\n    this.onTouched();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.forgeCheckBox.addEventListener('change', () => {\r\n      this.value = this.value === true ? false : this.value === false ? null : true;\r\n      this.setCheckboxState();\r\n      this.onChange(this.value);\r\n      this.onTouched();\r\n    });\r\n  }\r\n\r\n  public onChange = (_: any) => { };\r\n  public onTouched = () => { };\r\n\r\n  public writeValue(value: boolean | null) {\r\n    this.value = value;\r\n    this.setCheckboxState();\r\n  }\r\n\r\n  public registerOnChange(fn: any) {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: any) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public setDisabledState?(isDisabled: boolean) {\r\n    this.forgeCheckBox.disabled = isDisabled;\r\n  }\r\n\r\n  private setCheckboxState() {\r\n    if (this.value === true) {\r\n      this.renderer.setProperty(this.forgeCheckBox, 'checked', true);\r\n      this.renderer.setProperty(this.forgeCheckBox, 'indeterminate', false);\r\n    } else if (this.value === false) {\r\n      this.renderer.setProperty(this.forgeCheckBox, 'checked', false);\r\n      this.renderer.setProperty(this.forgeCheckBox, 'indeterminate', false);\r\n    } else {\r\n      requestAnimationFrame(() => {\r\n        this.renderer.setProperty(this.forgeCheckBox, 'checked', false);\r\n        requestAnimationFrame(() => {\r\n          this.renderer.setProperty(this.forgeCheckBox, 'indeterminate', true);\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n","<ng-content></ng-content>","<forge-toolbar class=\"header\">\r\n  <div slot=\"start\">\r\n    <h2 class=\"forge-typography--subheading4\">Search</h2>\r\n    @if (searchCache.activeSearchId) {\r\n    <forge-divider vertical></forge-divider>\r\n    <span class=\"forge-typography--heading2\">{{searchName}}</span>\r\n    <span class=\"forge-typography--subheading1\">{{searchDescription}}</span>\r\n    }\r\n  </div>\r\n  <div slot=\"end\">\r\n    <forge-button variant=\"outlined\" (click)=\"onSaveSearch()\">\r\n      Save search\r\n    </forge-button>\r\n    <forge-button variant=\"outlined\" #searchesPopup=\"forgePopover\" [forgePopover]=\"searchesPopupTemplate\" [forgePopoverPlacement]=\"'bottom-start'\" (click)=\"searchesPopup.open()\">\r\n      <span>Saved searches</span>\r\n      <forge-icon name=\"arrow_drop_down\"></forge-icon>\r\n    </forge-button>\r\n    <forge-button variant=\"outlined\" (click)=\"onClearSearch()\">\r\n      Clear all\r\n    </forge-button>\r\n    <forge-button variant=\"raised\" (click)=\"onSearch()\">\r\n      Search\r\n    </forge-button>\r\n  </div>\r\n</forge-toolbar>\r\n\r\n<ng-template #searchesPopupTemplate>\r\n  <forge-list class=\"searches-popup\" (forge-list-item-select)=\"onSearchAction($event, 'search', $any($event.detail.value))\">\r\n    <forge-list-item>\r\n      <button type=\"button\">Add new search</button>\r\n    </forge-list-item>\r\n    <forge-divider></forge-divider>\r\n    @for (search of searchCache.searches; track search.id) {\r\n    <forge-list-item [value]=\"search.id\">\r\n      <button type=\"button\">{{search.name}}</button>\r\n      <div slot=\"end\">\r\n        <forge-icon-button (mousedown)=\"onSearchAction($any($event), 'edit', search.id)\" aria-label=\"Edit\">\r\n          <forge-icon name=\"edit\"></forge-icon>\r\n        </forge-icon-button>\r\n        <forge-icon-button (mousedown)=\"onSearchAction($any($event), 'delete', search.id)\" aria-label=\"Delete\">\r\n          <forge-icon name=\"delete\"></forge-icon>\r\n        </forge-icon-button>\r\n      </div>\r\n    </forge-list-item>\r\n    }\r\n  </forge-list>\r\n</ng-template>\r\n\r\n<div class=\"body\">\r\n  <form novalidate autocomplete=\"off\" [formGroup]=\"formGroup\" class=\"form\" (ngSubmit)=\"onSearch()\">\r\n    <ng-container formGroupName=\"name\">\r\n      <forge-autocomplete multiple=\"true\" formControlName=\"value\" [filter]=\"nameFilter\" allow-unmatched=\"true\">\r\n        <forge-text-field>\r\n          <input type=\"text\" id=\"search--name\">\r\n          <label for=\"search--name\">Name</label>\r\n          <forge-icon slot=\"end\" class=\"forge-dropdown-icon\" name=\"arrow_drop_down\"></forge-icon>\r\n          <ng-container *ngTemplateOutlet=\"opertatorAddonTemplate, context: { name: 'name' }\"></ng-container>\r\n        </forge-text-field>\r\n      </forge-autocomplete>\r\n    </ng-container>\r\n\r\n    <ng-container formGroupName=\"dateOfBirth\">\r\n      <forge-date-picker formControlName=\"value\">\r\n        <forge-text-field>\r\n          <input type=\"text\" id=\"search--date-of-birth\">\r\n          <label for=\"search--date-of-birth\">Date</label>\r\n          <ng-container *ngTemplateOutlet=\"opertatorAddonTemplate, context: { name: 'dateOfBirth' }\"></ng-container>\r\n        </forge-text-field>\r\n      </forge-date-picker>\r\n    </ng-container>\r\n\r\n    <ng-container formGroupName=\"address\">\r\n      <forge-text-field>\r\n        <input type=\"text\" id=\"search--address\" formControlName=\"value\">\r\n        <label for=\"search--address\" slot=\"label\">Address</label>\r\n        <ng-container *ngTemplateOutlet=\"opertatorAddonTemplate, context: { name: 'address' }\"></ng-container>\r\n      </forge-text-field>\r\n    </ng-container>\r\n\r\n    <app-autocomplete-range [optionFilter]=\"facetFilter\" formControlName=\"facet\" label=\"Facet\"></app-autocomplete-range>\r\n\r\n    <app-checkbox-indeterminate formControlName=\"include\">\r\n      <forge-checkbox id=\"search--include\">\r\n        Include\r\n      </forge-checkbox>\r\n    </app-checkbox-indeterminate>\r\n  </form>\r\n\r\n  <p>{{formGroup.getRawValue() | json}}</p>\r\n</div>\r\n\r\n<ng-template #opertatorAddonTemplate let-name=\"name\">\r\n  <forge-icon-button slot=\"addon-end\" class=\"operator__addon\" [ngClass]=\"{'operator__addon--selected': formGroup.get(name)?.value.operator}\" #operatorPopup=\"forgePopover\" [forgePopover]=\"operatorPopupTemplate\" (click)=\"onOperatorPopupOpen($event, operatorPopup, name)\" aria-label=\"Filter operator\">\r\n    <forge-icon name=\"bolt\"></forge-icon>\r\n  </forge-icon-button>\r\n</ng-template>\r\n\r\n<ng-template #operatorPopupTemplate>\r\n  <forge-list class=\"operator-popup\" (forge-list-item-select)=\"onOperatorSelected($any($event.detail.value))\">\r\n    @for (option of operatorOptions; track i; let i = $index) {\r\n    <forge-list-item [value]=\"option.value\" [selected]=\"operatorPopupFormGroup?.value.operator === option.value\">\r\n      <button type=\"button\">{{option.label}}</button>\r\n      @if (operatorPopupFormGroup?.value.operator === option.value) {\r\n      <forge-icon name=\"check\" slot=\"end\"></forge-icon>\r\n      }\r\n    </forge-list-item>\r\n    }\r\n  </forge-list>\r\n</ng-template>","import { Component, ViewChild, OnInit, inject } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { AutocompleteFilterCallback, IOption } from '@tylertech/forge';\r\nimport { PopoverDirective, DialogService, ToastService, ForgeToolbarModule, ForgeDividerModule, ForgeButtonModule, ForgeIconModule, ForgeListModule, ForgeListItemModule, ForgeIconButtonModule, ForgeAutocompleteModule, ForgeTextFieldModule, ForgeDatePickerModule, ForgeCheckboxModule, ForgePopoverModule } from '@tylertech/forge-angular';\r\nimport { Observable, lastValueFrom, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AppDataService } from 'src/app/app-data.service';\r\nimport { ISearch } from 'src/app/shared/interfaces/search.interface';\r\nimport { SearchSaveComponent } from './save/search-save.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AutocompleteRangeComponent } from 'src/app/shared/components/autocomplete-range/autocomplete-range.component';\r\nimport { IndeterminateDirective } from '../shared/directives/indeterminate/indeterminate.directive';\r\nimport { CheckboxIndeterminateComponent } from '../shared/components/checkbox-indeterminate/checkbox-indeterminate.component';\r\n// import { IndeterminateDirective } from 'src/app/shared/directives/indeterminate/indeterminate.directive';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ForgeAutocompleteModule,\r\n    ForgeButtonModule,\r\n    ForgeCheckboxModule,\r\n    ForgeDatePickerModule,\r\n    ForgeDividerModule,\r\n    ForgeIconButtonModule,\r\n    ForgeIconModule,\r\n    ForgeListItemModule,\r\n    ForgeListModule,\r\n    ForgePopoverModule,\r\n    ForgeTextFieldModule,\r\n    ForgeToolbarModule,\r\n    AutocompleteRangeComponent,\r\n    CheckboxIndeterminateComponent\r\n  ],\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  private dialogService = inject(DialogService);\r\n  private toastService = inject(ToastService);\r\n  private dataService = inject(AppDataService);\r\n\r\n  @ViewChild('searchesPopup', { static: false })\r\n  private searchesPopup?: PopoverDirective;\r\n  private storageKey = 'search-searches';\r\n  private operatorPopup?: PopoverDirective;\r\n\r\n  public searchName?: string;\r\n  public searchDescription?: string;\r\n  // TODO consider moving to a cache service\r\n  public searchCache: { activeSearchId?: number; searches: ISearch[] } = {\r\n    activeSearchId: undefined,\r\n    searches: []\r\n  };\r\n  // TODO consider moving to a cache service\r\n  public formGroup = new FormGroup({\r\n    name: new FormGroup({\r\n      value: new FormControl(),\r\n      operator: new FormControl()\r\n    }),\r\n    dateOfBirth: new FormGroup({\r\n      value: new FormControl(),\r\n      operator: new FormControl()\r\n    }),\r\n    address: new FormGroup({\r\n      value: new FormControl(),\r\n      operator: new FormControl()\r\n    }),\r\n    include: new FormControl(),\r\n    facet: new FormControl()\r\n  });\r\n  public facetOptions: { label: string; value: number }[] = [];\r\n  public operatorOptions = [\r\n    { value: null, label: 'None' },\r\n    { value: 0, label: 'Equal' },\r\n    { value: 1, label: 'Not equal' },\r\n    { value: 2, label: 'Greater than' },\r\n    { value: 3, label: 'Less than' },\r\n    { value: 4, label: 'Greater than equal to' },\r\n    { value: 5, label: 'Less than equal to' },\r\n    { value: 6, label: 'Range' },\r\n    { value: 7, label: 'Contains' },\r\n    { value: 8, label: 'Not contains' },\r\n    { value: 9, label: 'Empty' }\r\n  ];\r\n  public operatorPopupFormGroup?: FormGroup;\r\n  public nameFilter: AutocompleteFilterCallback = (filter: string) => lastValueFrom(this.dataService.getPeople().pipe(\r\n    map(r => r.data\r\n      .filter(p => p.firstName.toLocaleLowerCase().includes(filter.toLocaleLowerCase()) || p.lastName.toLocaleLowerCase().includes(filter.toLocaleLowerCase()))\r\n      .map(p => ({ label: `${p.firstName} ${p.lastName}`, value: p.id }))\r\n    )\r\n  ));\r\n  public facetFilter = (filter: string): Observable<IOption[]> => {\r\n    return of(this.facetOptions);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.dataService.getSearches(this.storageKey).subscribe((result) => {\r\n      this.searchCache.searches = result || [];\r\n\r\n      const activeSearch = this.searchCache.searches.find((s) => s.id === this.searchCache.activeSearchId);\r\n      if (isDefined(activeSearch)) {\r\n        this.searchName = activeSearch?.name;\r\n        this.searchDescription = activeSearch?.description;\r\n        this.formGroup.patchValue(activeSearch?.filters);\r\n      }\r\n    });\r\n    for (let index = 0; index < 20; index++) {\r\n      this.facetOptions.push({ value: index, label: `Facet Option ${index}` });\r\n    }\r\n  }\r\n\r\n  public onSearch() {\r\n    // TODO implement search action\r\n  }\r\n\r\n  public onSaveSearch(search?: {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    isDefault: boolean;\r\n    isPublic: boolean;\r\n    filters: { property: string; value: string }[];\r\n  }) {\r\n    const activeSearch = isDefined(search) ? search : this.searchCache.searches.find((s) => s.id === this.searchCache.activeSearchId);\r\n    const record = {\r\n      id: activeSearch?.id,\r\n      name: activeSearch?.name,\r\n      description: activeSearch?.description,\r\n      isDefault: activeSearch?.isDefault,\r\n      isPublic: activeSearch?.isPublic,\r\n      filters: this.formGroup.value\r\n    };\r\n\r\n    this.dialogService.open(SearchSaveComponent, { data: record, options: { persistent: true } }).afterClosed.subscribe(result => {\r\n      if (result) {\r\n        if (isDefined(result.id)) {\r\n          const searchIndex = this.searchCache.searches.findIndex((s) => s.id === result.id);\r\n          if (searchIndex !== -1) {\r\n            this.searchCache.searches[searchIndex] = result;\r\n          }\r\n        } else {\r\n          result.id = this.searchCache.searches.length ? Math.max(...this.searchCache.searches.map((s) => s.id)) + 1 : 1;\r\n          this.searchCache.searches.push(result);\r\n        }\r\n\r\n        this.dataService.saveSearches(this.storageKey, this.searchCache.searches).subscribe(\r\n          {\r\n            next: () => {\r\n              this.searchCache.activeSearchId = result.id;\r\n              this.searchName = result.name;\r\n              this.searchDescription = result.description;\r\n              this.toastService.show({ message: 'Search saved' });\r\n            },\r\n            error: () => this.toastService.show({ message: 'Search save failed' })\r\n          }\r\n        );\r\n      }\r\n    })\r\n  }\r\n\r\n  public onClearSearch() {\r\n    this.formGroup.controls.include.setValue(null);\r\n    this.formGroup.reset();\r\n  }\r\n\r\n  public onSearchAction(event: CustomEvent, action: string, id: number) {\r\n    event.stopPropagation();\r\n    this.searchesPopup?.close();\r\n\r\n    if (!isDefined(id)) {\r\n      this.searchCache.activeSearchId = undefined;\r\n      this.searchName = '';\r\n      this.searchDescription = '';\r\n      this.formGroup.reset();\r\n    } else {\r\n      const search = this.searchCache.searches.find((s) => s.id === id);\r\n      if (isDefined(search)) {\r\n        switch (action) {\r\n          case 'search':\r\n            this.searchCache.activeSearchId = search?.id;\r\n            this.searchName = search?.name;\r\n            this.searchDescription = search?.description;\r\n            this.formGroup.patchValue(search?.filters);\r\n            this.onSearch();\r\n            break;\r\n          case 'edit':\r\n            this.searchCache.activeSearchId = search?.id;\r\n            this.searchName = search?.name;\r\n            this.searchDescription = search?.description;\r\n            this.formGroup.patchValue(search?.filters);\r\n            break;\r\n          case 'copy': {\r\n            const copySearch = JSON.parse(JSON.stringify(search));\r\n            copySearch.id = undefined;\r\n            copySearch.name = `${copySearch.name} copy`;\r\n            copySearch.isDefault = false;\r\n            this.onSaveSearch(copySearch);\r\n            break;\r\n          }\r\n          case 'delete': {\r\n            const searchIndex = this.searchCache.searches.findIndex((s) => s.id === search?.id);\r\n            if (searchIndex !== -1) {\r\n              this.searchCache.searches.splice(searchIndex, 1);\r\n              this.dataService.saveSearches(this.storageKey, this.searchCache.searches).subscribe((result) => { });\r\n            }\r\n\r\n            if (this.searchCache.activeSearchId === search?.id) {\r\n              this.searchCache.activeSearchId = undefined;\r\n              this.searchName = '';\r\n              this.searchDescription = '';\r\n            }\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public onOperatorPopupOpen(event: Event, popup: PopoverDirective, name: string) {\r\n    event.stopPropagation();\r\n    this.operatorPopupFormGroup = this.formGroup.get(name) as FormGroup;\r\n    this.operatorPopup = popup;\r\n    this.operatorPopup.open();\r\n  }\r\n\r\n  public onOperatorSelected(value: string | number) {\r\n    value = parseInt(value as string, 10);\r\n    this.operatorPopupFormGroup?.get('operator')?.setValue(value);\r\n    this.operatorPopup?.close();\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[]}