{"version":3,"sources":["src/app/formly-demo/formly-demo.service.ts","src/app/formly-demo/formly-demo.constants.ts","node_modules/@ngx-formly/core/fesm2020/ngx-formly-core.mjs","src/app/formly-demo/formly-demo.component.ts","src/app/formly-demo/formly-demo.component.html","src/app/formly-demo/components/formly-field.component.ts","src/app/formly-demo/components/formly-field.directive.ts","src/app/formly-demo/components/group-type.component.ts","src/app/formly-demo/components/checkbox-type.component.ts","src/app/formly-demo/components/date-picker-type.component.ts","src/app/formly-demo/components/textarea-type.component.ts","src/app/formly-demo/components/tab-type.component.ts","src/app/formly-demo/components/table-type.component.ts","src/app/formly-demo/components/field-help-dialog/field-help-dialog.component.ts","src/app/formly-demo/components/field-help-dialog/field-help-dialog.component.html","src/app/formly-demo/components/input-help-type.component.ts","src/app/formly-demo/components/label-type.component.ts","src/app/formly-demo/components/radio-type.component.ts","src/app/formly-demo/components/select-type.component.ts","src/app/formly-demo/components/formly-field.extension.ts","src/app/formly-demo/components/button-type.component.ts","src/app/formly-demo/components/container-type.component.ts","src/app/formly-demo/components/input-type.component.ts","src/app/formly-demo/components/formly-config.module.ts","src/app/formly-demo/formly-demo.module.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { IFilterParameter, IFilterResponse } from '../shared/interfaces/filter.interface';\n\n@Injectable()\nexport class FormlyDemoService {\n  public formMessage = new Subject<{ id: string; message: string }>();\n\n  public validateField(field: string, value: any): Observable<{ invalid: boolean; message: string }> {\n    const validation = {\n      invalid: false,\n      message: `Error from server: ${field}`\n    };\n\n    return of(validation).pipe(delay(1000));\n  }\n\n  public getFieldHelp(field: string, param: IFilterParameter): Observable<IFilterResponse<any>> {\n    if (param.filters?.length) {\n      return of({ count: 0, data: [] }).pipe(delay(1000));\n    } else {\n      const result = [];\n      for (let index = param.skip as number; index < <number>param.skip + <number>param.take; index++) {\n        result.push({\n          id: index,\n          address: `${index} street`,\n          city: `${index} city`,\n          state: `${index} state`\n        });\n      }\n\n      return of({ count: 75, data: result }).pipe(delay(1000));\n    }\n  }\n}\n","const formDefinitionBasic = [\n  {\n    // type: 'container',\n    props: {\n      label: 'Container',\n      type: 'grid',\n      attributes: {\n        columns: 2\n      }\n    },\n    fieldGroup: [\n      {\n        key: 'name',\n        type: 'input',\n        props: {\n          label: 'Name',\n          type: 'string',\n          format: '###-##-####',\n          required: true,\n          description: 'Persons name',\n          attributes: {\n            width: 480\n          }\n        }\n      },\n      {\n        key: 'age',\n        type: 'input',\n        props: {\n          label: 'Age',\n          type: 'number',\n          format: '#,###,###,##&.&&',\n          required: true,\n          description: 'Persons age',\n          attributes: {\n            width: 480\n          }\n        }\n      }\n    ]\n  }\n];\n\nconst formDefinitionAll = [\n  {\n    // type: 'container',\n    props: {\n      label: 'Container',\n      type: 'grid',\n      attributes: {\n        columns: 2\n      }\n    },\n    fieldGroup: [\n      {\n        key: 'firstName',\n        type: 'input',\n        defaultValue: 0,\n        props: {\n          label: 'First name',\n          required: true,\n          description: 'Persons first name',\n          attributes: {\n            width: 480\n          }\n        }\n      },\n      {\n        key: 'lastName',\n        type: 'input',\n        props: {\n          label: 'Last name',\n          description: 'Persons last name',\n          attributes: {\n            width: 320,\n            column: 1,\n            row: 2\n          }\n        }\n      },\n      {\n        key: 'age',\n        type: 'input',\n        defaultValue: 18,\n        props: {\n          label: 'Age',\n          type: 'number'\n        }\n      },\n      {\n        key: 'isActive',\n        type: 'checkbox',\n        props: {\n          label: 'Is active'\n        }\n      },\n      {\n        key: 'birthDate',\n        type: 'date-picker',\n        props: {\n          label: 'DOB',\n          description: 'Persons date of birth',\n          required: true\n        }\n      },\n      {\n        key: 'gender',\n        type: 'select',\n        props: {\n          label: 'Gender',\n          options: [\n            { label: 'Male', value: 'M' },\n            { label: 'Female', value: 'F' },\n            { label: 'Other', value: 'O' }\n          ]\n        }\n      },\n      {\n        key: 'comment',\n        type: 'textarea',\n        props: {\n          label: 'Comment',\n          required: true\n        }\n      },\n      {\n        key: 'size',\n        type: 'radio',\n        props: {\n          label: 'Size',\n          description: 'What is your size?',\n          options: [\n            { label: 'Small', value: 'sm' },\n            { label: 'Medium', value: 'md' },\n            { label: 'Large', value: 'lg' }\n          ],\n          required: true\n        }\n      },\n      {\n        key: 'officeLocation',\n        type: 'input-help',\n        props: {\n          label: 'Office location',\n          description: 'What is your office location',\n          optionsKey: 'id',\n          options: [\n            { label: 'Address', property: 'address' },\n            { label: 'City', property: 'city' },\n            { label: 'State', property: 'state' }\n          ]\n        }\n      }\n    ]\n  },\n  {\n    className: 'form-divider',\n    template: '<forge-divider style=\"margin: 16px 0\"></forge-divider>',\n    props: {\n      safeHtml: true\n    }\n  },\n  {\n    // type: 'container',\n    props: {\n      type: 'group',\n      label: 'Address'\n    },\n    fieldGroup: [\n      {\n        props: {\n          type: 'hbox'\n        },\n        fieldGroup: [\n          {\n            key: 'address.street',\n            type: 'input',\n            props: {\n              label: 'Street'\n            }\n          },\n          {\n            key: 'address.city',\n            type: 'input',\n            props: {\n              label: 'City'\n            }\n          },\n          {\n            key: 'address.state',\n            type: 'input',\n            props: {\n              label: 'State'\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'tab',\n    fieldGroup: [\n      {\n        props: {\n          label: 'Tab 1'\n        },\n        fieldGroup: [\n          {\n            props: {\n              type: 'hbox'\n            },\n            fieldGroup: [\n              {\n                key: 'tab.field1',\n                type: 'input',\n                props: {\n                  label: 'Field 1'\n                }\n              },\n              {\n                key: 'tab.field2',\n                type: 'input',\n                props: {\n                  label: 'Field 2'\n                }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        props: {\n          label: 'Tab 2'\n        },\n        fieldGroup: [\n          {\n            props: {\n              type: 'vbox'\n            },\n            fieldGroup: [\n              {\n                key: 'tab.field3',\n                type: 'input',\n                props: {\n                  label: 'Field 3'\n                }\n              },\n              {\n                key: 'tab.field4',\n                type: 'input',\n                props: {\n                  label: 'Field 4'\n                }\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  {\n    key: 'children',\n    type: 'table',\n    props: {\n      columns: [\n        {\n          label: 'First name',\n          key: 'firstName',\n          defaultValue: null\n        },\n        {\n          label: 'Last name',\n          key: 'lastName',\n          defaultValue: null\n        }\n      ]\n    },\n    fieldArray: {\n      fieldGroup: [\n        {\n          key: 'firstName',\n          type: 'input',\n          props: {\n            required: true\n          }\n        },\n        {\n          key: 'lastName',\n          type: 'input'\n        }\n      ]\n    }\n  }\n];\n\nconst formDefinitionLayout = [\n  {\n    props: {\n      type: 'vbox'\n    },\n    fieldGroup: [\n      {\n        props: {\n          type: 'grid',\n          attributes: {\n            width: 83,\n            height: 10\n          }\n        },\n        fieldGroup: [\n          {\n            props: {\n              type: 'group',\n              attributes: {\n                posX: 1,\n                posY: 1,\n                gridWidth: 83,\n                gridHeight: 6\n              }\n            },\n            fieldGroup: [\n              {\n                type: 'label',\n                props: {\n                  label: 'Year',\n                  attributes: {\n                    posX: 2,\n                    posY: 2,\n                    gridWidth: 4\n                  }\n                }\n              },\n              {\n                key: 'tax_year',\n                type: 'input',\n                defaultValue: '2023',\n                props: {\n                  type: 'number',\n                  disabled: true,\n                  attributes: {\n                    posX: 20,\n                    posY: 2,\n                    gridWidth: 4,\n                    width: 4\n                  }\n                }\n              },\n              {\n                key: 'which_value',\n                type: 'radio',\n                props: {\n                  description: 'Value to use on report.',\n                  options: [\n                    { label: 'Original full value', value: 'O' },\n                    { label: 'Current full value', value: 'C' }\n                  ],\n                  required: true,\n                  attributes: {\n                    posX: 2,\n                    posY: 3,\n                    gridWidth: 31,\n                    width: 31\n                  }\n                }\n              },\n              {\n                type: 'label',\n                props: {\n                  label: 'Minimum value',\n                  required: true,\n                  attributes: {\n                    posX: 2,\n                    posY: 4,\n                    gridWidth: 13\n                  }\n                }\n              },\n              {\n                key: 'min_val',\n                type: 'input',\n                props: {\n                  type: 'number',\n                  required: true,\n                  attributes: {\n                    posX: 20,\n                    posY: 4,\n                    gridWidth: 13,\n                    width: 13\n                  }\n                }\n              },\n              {\n                type: 'label',\n                props: {\n                  label: 'Sort vehicles by',\n                  required: true,\n                  attributes: {\n                    posX: 2,\n                    posY: 5,\n                    gridWidth: 17\n                  }\n                }\n              },\n              {\n                key: 'seq_sw',\n                type: 'select',\n                props: {\n                  required: true,\n                  options: [\n                    { label: 'Sequence number', value: 'S' },\n                    { label: 'Owner name', value: 'O' }\n                  ],\n                  attributes: {\n                    posX: 20,\n                    posY: 5,\n                    gridWidth: 17,\n                    width: 15\n                  }\n                }\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\n\nexport const formlyDemoConstants = {\n  formDefinitionBasic,\n  formDefinitionAll,\n  formDefinitionLayout\n};\n","import * as i0 from '@angular/core';\nimport { Type, TemplateRef, ComponentRef, ChangeDetectorRef, ɵNoopNgZone, VERSION, InjectionToken, Injectable, Optional, Directive, Input, ViewContainerRef, Component, ViewChild, EventEmitter, ChangeDetectionStrategy, Output, ContentChildren, Inject, ViewChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { AbstractControl, FormGroup, FormArray, FormControl, NgControl, Validators } from '@angular/forms';\nimport { isObservable, of, merge, Observable, Subject } from 'rxjs';\nimport { map, distinctUntilChanged, startWith, debounceTime, filter, switchMap, take, tap } from 'rxjs/operators';\nimport * as i2$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/platform-browser';\nconst _c0 = [\"container\"];\nfunction FormlyField_ng_template_0_Template(rf, ctx) {}\nconst _c1 = [\"*\"];\nfunction FormlyGroup_formly_field_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"formly-field\", 1);\n  }\n  if (rf & 2) {\n    const f_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"field\", f_r1);\n  }\n}\nconst _c2 = [\"fieldComponent\"];\nfunction disableTreeValidityCall(form, callback) {\n  const _updateTreeValidity = form._updateTreeValidity.bind(form);\n  form._updateTreeValidity = () => {};\n  callback();\n  form._updateTreeValidity = _updateTreeValidity;\n}\nfunction getFieldId(formId, field, index) {\n  if (field.id) {\n    return field.id;\n  }\n  let type = field.type;\n  if (!type && field.template) {\n    type = 'template';\n  }\n  if (type instanceof Type) {\n    type = type.prototype.constructor.name;\n  }\n  return [formId, type, field.key, index].join('_');\n}\nfunction hasKey(field) {\n  return !isNil(field.key) && field.key !== '' && (!Array.isArray(field.key) || field.key.length > 0);\n}\nfunction getKeyPath(field) {\n  if (!hasKey(field)) {\n    return [];\n  }\n  /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n  if (field._keyPath?.key !== field.key) {\n    let path = [];\n    if (typeof field.key === 'string') {\n      const key = field.key.indexOf('[') === -1 ? field.key : field.key.replace(/\\[(\\w+)\\]/g, '.$1');\n      path = key.indexOf('.') !== -1 ? key.split('.') : [key];\n    } else if (Array.isArray(field.key)) {\n      path = field.key.slice(0);\n    } else {\n      path = [`${field.key}`];\n    }\n    defineHiddenProp(field, '_keyPath', {\n      key: field.key,\n      path\n    });\n  }\n  return field._keyPath.path.slice(0);\n}\nconst FORMLY_VALIDATORS = ['required', 'pattern', 'minLength', 'maxLength', 'min', 'max'];\nfunction assignFieldValue(field, value) {\n  let paths = getKeyPath(field);\n  if (paths.length === 0) {\n    return;\n  }\n  let root = field;\n  while (root.parent) {\n    root = root.parent;\n    paths = [...getKeyPath(root), ...paths];\n  }\n  if (value === undefined && field.resetOnHide) {\n    const k = paths.pop();\n    const m = paths.reduce((model, path) => model[path] || {}, root.model);\n    delete m[k];\n    return;\n  }\n  assignModelValue(root.model, paths, value);\n}\nfunction assignModelValue(model, paths, value) {\n  for (let i = 0; i < paths.length - 1; i++) {\n    const path = paths[i];\n    if (!model[path] || !isObject(model[path])) {\n      model[path] = /^\\d+$/.test(paths[i + 1]) ? [] : {};\n    }\n    model = model[path];\n  }\n  model[paths[paths.length - 1]] = clone(value);\n}\nfunction getFieldValue(field) {\n  let model = field.parent ? field.parent.model : field.model;\n  for (const path of getKeyPath(field)) {\n    if (!model) {\n      return model;\n    }\n    model = model[path];\n  }\n  return model;\n}\nfunction reverseDeepMerge(dest, ...args) {\n  args.forEach(src => {\n    for (const srcArg in src) {\n      if (isNil(dest[srcArg]) || isBlankString(dest[srcArg])) {\n        dest[srcArg] = clone(src[srcArg]);\n      } else if (objAndSameType(dest[srcArg], src[srcArg])) {\n        reverseDeepMerge(dest[srcArg], src[srcArg]);\n      }\n    }\n  });\n  return dest;\n}\n// check a value is null or undefined\nfunction isNil(value) {\n  return value == null;\n}\nfunction isUndefined(value) {\n  return value === undefined;\n}\nfunction isBlankString(value) {\n  return value === '';\n}\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\nfunction objAndSameType(obj1, obj2) {\n  return isObject(obj1) && isObject(obj2) && Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2) && !(Array.isArray(obj1) || Array.isArray(obj2));\n}\nfunction isObject(x) {\n  return x != null && typeof x === 'object';\n}\nfunction isPromise(obj) {\n  return !!obj && typeof obj.then === 'function';\n}\nfunction clone(value) {\n  if (!isObject(value) || isObservable(value) || value instanceof TemplateRef || /* instanceof SafeHtmlImpl */value.changingThisBreaksApplicationSecurity || ['RegExp', 'FileList', 'File', 'Blob'].indexOf(value.constructor?.name) !== -1) {\n    return value;\n  }\n  if (value instanceof Set) {\n    return new Set(value);\n  }\n  if (value instanceof Map) {\n    return new Map(value);\n  }\n  if (value instanceof Uint8Array) {\n    return new Uint8Array(value);\n  }\n  if (value instanceof Uint16Array) {\n    return new Uint16Array(value);\n  }\n  if (value instanceof Uint32Array) {\n    return new Uint32Array(value);\n  }\n  // https://github.com/moment/moment/blob/master/moment.js#L252\n  if (value._isAMomentObject && isFunction(value.clone)) {\n    return value.clone();\n  }\n  if (value instanceof AbstractControl) {\n    return null;\n  }\n  if (value instanceof Date) {\n    return new Date(value.getTime());\n  }\n  if (Array.isArray(value)) {\n    return value.slice(0).map(v => clone(v));\n  }\n  // best way to clone a js object maybe\n  // https://stackoverflow.com/questions/41474986/how-to-clone-a-javascript-es6-class-instance\n  const proto = Object.getPrototypeOf(value);\n  let c = Object.create(proto);\n  c = Object.setPrototypeOf(c, proto);\n  // need to make a deep copy so we dont use Object.assign\n  // also Object.assign wont copy property descriptor exactly\n  return Object.keys(value).reduce((newVal, prop) => {\n    const propDesc = Object.getOwnPropertyDescriptor(value, prop);\n    if (propDesc.get) {\n      Object.defineProperty(newVal, prop, propDesc);\n    } else {\n      newVal[prop] = clone(value[prop]);\n    }\n    return newVal;\n  }, c);\n}\nfunction defineHiddenProp(field, prop, defaultValue) {\n  Object.defineProperty(field, prop, {\n    enumerable: false,\n    writable: true,\n    configurable: true\n  });\n  field[prop] = defaultValue;\n}\nfunction observeDeep(source, paths, setFn) {\n  let observers = [];\n  const unsubscribe = () => {\n    observers.forEach(observer => observer());\n    observers = [];\n  };\n  const observer = observe(source, paths, ({\n    firstChange,\n    currentValue\n  }) => {\n    !firstChange && setFn();\n    unsubscribe();\n    if (isObject(currentValue) && currentValue.constructor.name === 'Object') {\n      Object.keys(currentValue).forEach(prop => {\n        observers.push(observeDeep(source, [...paths, prop], setFn));\n      });\n    }\n  });\n  return () => {\n    observer.unsubscribe();\n    unsubscribe();\n  };\n}\nfunction observe(o, paths, setFn) {\n  if (!o._observers) {\n    defineHiddenProp(o, '_observers', {});\n  }\n  let target = o;\n  for (let i = 0; i < paths.length - 1; i++) {\n    if (!target[paths[i]] || !isObject(target[paths[i]])) {\n      target[paths[i]] = /^\\d+$/.test(paths[i + 1]) ? [] : {};\n    }\n    target = target[paths[i]];\n  }\n  const key = paths[paths.length - 1];\n  const prop = paths.join('.');\n  if (!o._observers[prop]) {\n    o._observers[prop] = {\n      value: target[key],\n      onChange: []\n    };\n  }\n  const state = o._observers[prop];\n  if (target[key] !== state.value) {\n    state.value = target[key];\n  }\n  if (setFn && state.onChange.indexOf(setFn) === -1) {\n    state.onChange.push(setFn);\n    setFn({\n      currentValue: state.value,\n      firstChange: true\n    });\n    if (state.onChange.length >= 1 && isObject(target)) {\n      const {\n        enumerable\n      } = Object.getOwnPropertyDescriptor(target, key) || {\n        enumerable: true\n      };\n      Object.defineProperty(target, key, {\n        enumerable,\n        configurable: true,\n        get: () => state.value,\n        set: currentValue => {\n          if (currentValue !== state.value) {\n            const previousValue = state.value;\n            state.value = currentValue;\n            state.onChange.forEach(changeFn => changeFn({\n              previousValue,\n              currentValue,\n              firstChange: false\n            }));\n          }\n        }\n      });\n    }\n  }\n  return {\n    setValue(currentValue, emitEvent = true) {\n      if (currentValue === state.value) {\n        return;\n      }\n      const previousValue = state.value;\n      state.value = currentValue;\n      state.onChange.forEach(changeFn => {\n        if (changeFn !== setFn && emitEvent) {\n          changeFn({\n            previousValue,\n            currentValue,\n            firstChange: false\n          });\n        }\n      });\n    },\n    unsubscribe() {\n      state.onChange = state.onChange.filter(changeFn => changeFn !== setFn);\n      if (state.onChange.length === 0) {\n        delete o._observers[prop];\n      }\n    }\n  };\n}\nfunction getField(f, key) {\n  key = Array.isArray(key) ? key.join('.') : key;\n  if (!f.fieldGroup) {\n    return undefined;\n  }\n  for (let i = 0, len = f.fieldGroup.length; i < len; i++) {\n    const c = f.fieldGroup[i];\n    const k = Array.isArray(c.key) ? c.key.join('.') : c.key;\n    if (k === key) {\n      return c;\n    }\n    if (c.fieldGroup && (isNil(k) || key.indexOf(`${k}.`) === 0)) {\n      const field = getField(c, isNil(k) ? key : key.slice(k.length + 1));\n      if (field) {\n        return field;\n      }\n    }\n  }\n  return undefined;\n}\nfunction markFieldForCheck(field) {\n  field._componentRefs?.forEach(ref => {\n    // NOTE: we cannot use ref.changeDetectorRef, see https://github.com/ngx-formly/ngx-formly/issues/2191\n    if (ref instanceof ComponentRef) {\n      const changeDetectorRef = ref.injector.get(ChangeDetectorRef);\n      changeDetectorRef.markForCheck();\n    } else {\n      ref.markForCheck();\n    }\n  });\n}\nfunction isNoopNgZone(ngZone) {\n  return ngZone instanceof ɵNoopNgZone;\n}\nfunction isHiddenField(field) {\n  const isHidden = f => f.hide || f.expressions?.hide || f.hideExpression;\n  let setDefaultValue = !field.resetOnHide || !isHidden(field);\n  if (!isHidden(field) && field.resetOnHide) {\n    let parent = field.parent;\n    while (parent && !isHidden(parent)) {\n      parent = parent.parent;\n    }\n    setDefaultValue = !parent || !isHidden(parent);\n  }\n  return !setDefaultValue;\n}\nfunction isSignalRequired() {\n  return +VERSION.major > 18 || +VERSION.major >= 18 && +VERSION.minor >= 1;\n}\n\n/**\n * An InjectionToken for registering additional formly config options (types, wrappers ...).\n */\nconst FORMLY_CONFIG = new InjectionToken('FORMLY_CONFIG');\n/**\n * Maintains list of formly config options. This can be used to register new field type.\n */\nlet FormlyConfig = /*#__PURE__*/(() => {\n  class FormlyConfig {\n    constructor() {\n      this.types = {};\n      this.validators = {};\n      this.wrappers = {};\n      this.messages = {};\n      this.extras = {\n        checkExpressionOn: 'modelChange',\n        lazyRender: true,\n        resetFieldOnHide: true,\n        renderFormlyFieldElement: true,\n        showError(field) {\n          return field.formControl?.invalid && (field.formControl?.touched || field.options.parentForm?.submitted || !!field.field.validation?.show);\n        }\n      };\n      this.extensions = {};\n      this.presets = {};\n      this.extensionsByPriority = {};\n    }\n    addConfig(config) {\n      if (config.types) {\n        config.types.forEach(type => this.setType(type));\n      }\n      if (config.validators) {\n        config.validators.forEach(validator => this.setValidator(validator));\n      }\n      if (config.wrappers) {\n        config.wrappers.forEach(wrapper => this.setWrapper(wrapper));\n      }\n      if (config.validationMessages) {\n        config.validationMessages.forEach(validation => this.addValidatorMessage(validation.name, validation.message));\n      }\n      if (config.extensions) {\n        this.setSortedExtensions(config.extensions);\n      }\n      if (config.extras) {\n        this.extras = {\n          ...this.extras,\n          ...config.extras\n        };\n      }\n      if (config.presets) {\n        this.presets = {\n          ...this.presets,\n          ...config.presets.reduce((acc, curr) => ({\n            ...acc,\n            [curr.name]: curr.config\n          }), {})\n        };\n      }\n    }\n    /**\n     * Allows you to specify a custom type which you can use in your field configuration.\n     * You can pass an object of options, or an array of objects of options.\n     */\n    setType(options) {\n      if (Array.isArray(options)) {\n        options.forEach(option => this.setType(option));\n      } else {\n        if (!this.types[options.name]) {\n          this.types[options.name] = {\n            name: options.name\n          };\n        }\n        ['component', 'extends', 'defaultOptions', 'wrappers'].forEach(prop => {\n          if (options.hasOwnProperty(prop)) {\n            this.types[options.name][prop] = options[prop];\n          }\n        });\n      }\n    }\n    getType(name, throwIfNotFound = false) {\n      if (name instanceof Type) {\n        return {\n          component: name,\n          name: name.prototype.constructor.name\n        };\n      }\n      if (!this.types[name]) {\n        if (throwIfNotFound) {\n          throw new Error(`[Formly Error] The type \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n        }\n        return null;\n      }\n      this.mergeExtendedType(name);\n      return this.types[name];\n    }\n    /** @ignore */\n    getMergedField(field = {}) {\n      const type = this.getType(field.type);\n      if (!type) {\n        return;\n      }\n      if (type.defaultOptions) {\n        reverseDeepMerge(field, type.defaultOptions);\n      }\n      const extendDefaults = type.extends && this.getType(type.extends).defaultOptions;\n      if (extendDefaults) {\n        reverseDeepMerge(field, extendDefaults);\n      }\n      if (field?.optionsTypes) {\n        field.optionsTypes.forEach(option => {\n          const defaultOptions = this.getType(option).defaultOptions;\n          if (defaultOptions) {\n            reverseDeepMerge(field, defaultOptions);\n          }\n        });\n      }\n      const componentRef = this.resolveFieldTypeRef(field);\n      if (componentRef?.instance?.defaultOptions) {\n        reverseDeepMerge(field, componentRef.instance.defaultOptions);\n      }\n      if (!field.wrappers && type.wrappers) {\n        field.wrappers = [...type.wrappers];\n      }\n    }\n    /** @ignore @internal */\n    resolveFieldTypeRef(field = {}) {\n      const type = this.getType(field.type);\n      if (!type) {\n        return null;\n      }\n      if (!type.component || type._componentRef) {\n        return type._componentRef;\n      }\n      const {\n        _viewContainerRef,\n        _injector\n      } = field.options;\n      if (!_viewContainerRef || !_injector) {\n        return null;\n      }\n      const componentRef = _viewContainerRef.createComponent(type.component, {\n        injector: _injector\n      });\n      defineHiddenProp(type, '_componentRef', componentRef);\n      try {\n        componentRef.destroy();\n      } catch (e) {\n        console.error(`An error occurred while destroying the Formly component type \"${field.type}\"`, e);\n      }\n      return type._componentRef;\n    }\n    setWrapper(options) {\n      this.wrappers[options.name] = options;\n      if (options.types) {\n        options.types.forEach(type => {\n          this.setTypeWrapper(type, options.name);\n        });\n      }\n    }\n    getWrapper(name) {\n      if (name instanceof Type) {\n        return {\n          component: name,\n          name: name.prototype.constructor.name\n        };\n      }\n      if (!this.wrappers[name]) {\n        throw new Error(`[Formly Error] The wrapper \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n      }\n      return this.wrappers[name];\n    }\n    /** @ignore */\n    setTypeWrapper(type, name) {\n      if (!this.types[type]) {\n        this.types[type] = {};\n      }\n      if (!this.types[type].wrappers) {\n        this.types[type].wrappers = [];\n      }\n      if (this.types[type].wrappers.indexOf(name) === -1) {\n        this.types[type].wrappers.push(name);\n      }\n    }\n    setValidator(options) {\n      this.validators[options.name] = options;\n    }\n    getValidator(name) {\n      if (!this.validators[name]) {\n        throw new Error(`[Formly Error] The validator \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n      }\n      return this.validators[name];\n    }\n    addValidatorMessage(name, message) {\n      this.messages[name] = message;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        const deprecated = {\n          minlength: 'minLength',\n          maxlength: 'maxLength'\n        };\n        if (deprecated[name]) {\n          console.warn(`Formly deprecation: passing validation messages key '${name}' is deprecated since v6.0, use '${deprecated[name]}' instead.`);\n          this.messages[deprecated[name]] = message;\n        }\n      }\n    }\n    getValidatorMessage(name) {\n      return this.messages[name];\n    }\n    setSortedExtensions(extensionOptions) {\n      // insert new extensions, grouped by priority\n      extensionOptions.forEach(extensionOption => {\n        const priority = extensionOption.priority ?? 1;\n        this.extensionsByPriority[priority] = {\n          ...this.extensionsByPriority[priority],\n          [extensionOption.name]: extensionOption.extension\n        };\n      });\n      // flatten extensions object with sorted keys\n      this.extensions = Object.keys(this.extensionsByPriority).map(Number).sort((a, b) => a - b).reduce((acc, prio) => ({\n        ...acc,\n        ...this.extensionsByPriority[prio]\n      }), {});\n    }\n    mergeExtendedType(name) {\n      if (!this.types[name].extends) {\n        return;\n      }\n      const extendedType = this.getType(this.types[name].extends);\n      if (!this.types[name].component) {\n        this.types[name].component = extendedType.component;\n      }\n      if (!this.types[name].wrappers) {\n        this.types[name].wrappers = extendedType.wrappers;\n      }\n    }\n  }\n  FormlyConfig.ɵfac = function FormlyConfig_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormlyConfig)();\n  };\n  FormlyConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FormlyConfig,\n    factory: FormlyConfig.ɵfac,\n    providedIn: 'root'\n  });\n  return FormlyConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FormlyFormBuilder = /*#__PURE__*/(() => {\n  class FormlyFormBuilder {\n    constructor(config, injector, viewContainerRef, parentForm) {\n      this.config = config;\n      this.injector = injector;\n      this.viewContainerRef = viewContainerRef;\n      this.parentForm = parentForm;\n    }\n    buildForm(form, fieldGroup = [], model, options) {\n      this.build({\n        fieldGroup,\n        model,\n        form,\n        options\n      });\n    }\n    build(field) {\n      if (!this.config.extensions.core) {\n        throw new Error('NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.');\n      }\n      if (!field.parent) {\n        this._setOptions(field);\n      }\n      disableTreeValidityCall(field.form, () => {\n        this._build(field);\n        // TODO: add test for https://github.com/ngx-formly/ngx-formly/issues/3910\n        if (!field.parent || field.fieldArray) {\n          // detect changes early to avoid reset value by hidden fields\n          const options = field.options;\n          if (field.parent && isHiddenField(field)) {\n            // when hide is used in expression set defaul value will not be set until detect hide changes\n            // which causes default value not set on new item is added\n            options._hiddenFieldsForCheck?.push({\n              field,\n              default: false\n            });\n          }\n          options.checkExpressions?.(field, true);\n          options._detectChanges?.(field);\n        }\n      });\n    }\n    _build(field) {\n      if (!field) {\n        return;\n      }\n      const extensions = Object.values(this.config.extensions);\n      extensions.forEach(extension => extension.prePopulate?.(field));\n      extensions.forEach(extension => extension.onPopulate?.(field));\n      field.fieldGroup?.forEach(f => this._build(f));\n      extensions.forEach(extension => extension.postPopulate?.(field));\n    }\n    _setOptions(field) {\n      field.form = field.form || new FormGroup({});\n      field.model = field.model || {};\n      field.options = field.options || {};\n      const options = field.options;\n      if (!options._viewContainerRef) {\n        defineHiddenProp(options, '_viewContainerRef', this.viewContainerRef);\n      }\n      if (!options._injector) {\n        defineHiddenProp(options, '_injector', this.injector);\n      }\n      if (!options.build) {\n        options._buildForm = () => {\n          console.warn(`Formly: 'options._buildForm' is deprecated since v6.0, use 'options.build' instead.`);\n          this.build(field);\n        };\n        options.build = (f = field) => {\n          this.build(f);\n          return f;\n        };\n      }\n      if (!options.parentForm && this.parentForm) {\n        defineHiddenProp(options, 'parentForm', this.parentForm);\n        if (!isSignalRequired()) {\n          observe(options, ['parentForm', 'submitted'], ({\n            firstChange\n          }) => {\n            if (!firstChange) {\n              options.detectChanges(field);\n            }\n          });\n        }\n      }\n    }\n  }\n  FormlyFormBuilder.ɵfac = function FormlyFormBuilder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormlyFormBuilder)(i0.ɵɵinject(FormlyConfig), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.ViewContainerRef, 8), i0.ɵɵinject(i2.FormGroupDirective, 8));\n  };\n  FormlyFormBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FormlyFormBuilder,\n    factory: FormlyFormBuilder.ɵfac,\n    providedIn: 'root'\n  });\n  return FormlyFormBuilder;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction unregisterControl(field, emitEvent = false) {\n  const control = field.formControl;\n  const fieldIndex = control._fields ? control._fields.indexOf(field) : -1;\n  if (fieldIndex !== -1) {\n    control._fields.splice(fieldIndex, 1);\n  }\n  const form = control.parent;\n  if (!form) {\n    return;\n  }\n  const opts = {\n    emitEvent\n  };\n  if (form instanceof FormArray) {\n    const key = form.controls.findIndex(c => c === control);\n    if (key !== -1) {\n      form.removeAt(key, opts);\n    }\n  } else if (form instanceof FormGroup) {\n    const paths = getKeyPath(field);\n    const key = paths[paths.length - 1];\n    if (form.get([key]) === control) {\n      form.removeControl(key, opts);\n    }\n  }\n  control.setParent(null);\n}\nfunction findControl(field) {\n  if (field.formControl) {\n    return field.formControl;\n  }\n  if (field.shareFormControl === false) {\n    return null;\n  }\n  return field.form?.get(getKeyPath(field));\n}\nfunction registerControl(field, control, emitEvent = false) {\n  control = control || field.formControl;\n  if (!control._fields) {\n    defineHiddenProp(control, '_fields', []);\n  }\n  if (control._fields.indexOf(field) === -1) {\n    control._fields.push(field);\n  }\n  if (!field.formControl && control) {\n    defineHiddenProp(field, 'formControl', control);\n    control.setValidators(null);\n    control.setAsyncValidators(null);\n    field.props.disabled = !!field.props.disabled;\n    const disabledObserver = observe(field, ['props', 'disabled'], ({\n      firstChange,\n      currentValue\n    }) => {\n      if (!firstChange) {\n        currentValue ? field.formControl.disable() : field.formControl.enable();\n      }\n    });\n    if (control instanceof FormControl) {\n      control.registerOnDisabledChange(disabledObserver.setValue);\n    }\n  }\n  if (!field.form || !hasKey(field)) {\n    return;\n  }\n  let form = field.form;\n  const paths = getKeyPath(field);\n  const value = getFieldValue(field);\n  if (!(isNil(control.value) && isNil(value)) && control.value !== value && control instanceof FormControl) {\n    control.patchValue(value);\n  }\n  for (let i = 0; i < paths.length - 1; i++) {\n    const path = paths[i];\n    if (!form.get([path])) {\n      form.setControl(path, new FormGroup({}), {\n        emitEvent\n      });\n    }\n    form = form.get([path]);\n  }\n  const key = paths[paths.length - 1];\n  if (!field._hide && form.get([key]) !== control) {\n    form.setControl(key, control, {\n      emitEvent\n    });\n  }\n}\nfunction updateValidity(c, onlySelf = false) {\n  const status = c.status;\n  const value = c.value;\n  c.updateValueAndValidity({\n    emitEvent: false,\n    onlySelf\n  });\n  if (status !== c.status) {\n    c.statusChanges.emit(c.status);\n  }\n  if (value !== c.value) {\n    c.valueChanges.emit(c.value);\n  }\n}\nfunction clearControl(form) {\n  delete form?._fields;\n  form.setValidators(null);\n  form.setAsyncValidators(null);\n  if (form instanceof FormGroup || form instanceof FormArray) {\n    Object.values(form.controls).forEach(c => clearControl(c));\n  }\n}\nlet FormlyTemplate = /*#__PURE__*/(() => {\n  class FormlyTemplate {\n    constructor(ref) {\n      this.ref = ref;\n    }\n    ngOnChanges() {\n      this.name = this.name || 'formly-group';\n    }\n  }\n  FormlyTemplate.ɵfac = function FormlyTemplate_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormlyTemplate)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  FormlyTemplate.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FormlyTemplate,\n    selectors: [[\"\", \"formlyTemplate\", \"\"]],\n    inputs: {\n      name: [0, \"formlyTemplate\", \"name\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return FormlyTemplate;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// workarround for https://github.com/angular/angular/issues/43227#issuecomment-904173738\nlet FormlyFieldTemplates = /*#__PURE__*/(() => {\n  class FormlyFieldTemplates {}\n  FormlyFieldTemplates.ɵfac = function FormlyFieldTemplates_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormlyFieldTemplates)();\n  };\n  FormlyFieldTemplates.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FormlyFieldTemplates,\n    factory: FormlyFieldTemplates.ɵfac\n  });\n  return FormlyFieldTemplates;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The `<formly-field>` component is used to render the UI widget (layout + type) of a given `field`.\n */\nlet FormlyField = /*#__PURE__*/(() => {\n  class FormlyField {\n    constructor(config, renderer, _elementRef, hostContainerRef, form) {\n      this.config = config;\n      this.renderer = renderer;\n      this._elementRef = _elementRef;\n      this.hostContainerRef = hostContainerRef;\n      this.form = form;\n      this.hostObservers = [];\n      this.componentRefs = [];\n      this.hooksObservers = [];\n      this.detectFieldBuild = false;\n      this.valueChangesUnsubscribe = () => {};\n    }\n    get containerRef() {\n      return this.config.extras.renderFormlyFieldElement ? this.viewContainerRef : this.hostContainerRef;\n    }\n    get elementRef() {\n      if (this.config.extras.renderFormlyFieldElement) {\n        return this._elementRef;\n      }\n      if (this.componentRefs?.[0] instanceof ComponentRef) {\n        return this.componentRefs[0].location;\n      }\n      return null;\n    }\n    ngAfterContentInit() {\n      this.triggerHook('afterContentInit');\n    }\n    ngAfterViewInit() {\n      this.triggerHook('afterViewInit');\n    }\n    ngDoCheck() {\n      if (this.detectFieldBuild && this.field && this.field.options) {\n        this.render();\n      }\n    }\n    ngOnInit() {\n      this.triggerHook('onInit');\n    }\n    ngOnChanges(changes) {\n      this.triggerHook('onChanges', changes);\n    }\n    ngOnDestroy() {\n      this.resetRefs(this.field);\n      this.hostObservers.forEach(hostObserver => hostObserver.unsubscribe());\n      this.hooksObservers.forEach(unsubscribe => unsubscribe());\n      this.valueChangesUnsubscribe();\n      this.triggerHook('onDestroy');\n    }\n    renderField(containerRef, f, wrappers = []) {\n      if (this.containerRef === containerRef) {\n        this.resetRefs(this.field);\n        this.containerRef.clear();\n        wrappers = this.field?.wrappers;\n      }\n      if (wrappers?.length > 0) {\n        const [wrapper, ...wps] = wrappers;\n        const {\n          component\n        } = this.config.getWrapper(wrapper);\n        const ref = containerRef.createComponent(component);\n        this.attachComponentRef(ref, f);\n        observe(ref.instance, ['fieldComponent'], ({\n          currentValue,\n          previousValue,\n          firstChange\n        }) => {\n          if (currentValue) {\n            if (previousValue && previousValue._lContainer === currentValue._lContainer) {\n              return;\n            }\n            const viewRef = previousValue ? previousValue.detach() : null;\n            if (viewRef && !viewRef.destroyed) {\n              currentValue.insert(viewRef);\n            } else {\n              this.renderField(currentValue, f, wps);\n            }\n            !firstChange && ref.changeDetectorRef.detectChanges();\n          }\n        });\n      } else if (f?.type) {\n        const inlineType = this.form?.templates?.find(ref => ref.name === f.type);\n        let ref;\n        if (inlineType) {\n          ref = containerRef.createEmbeddedView(inlineType.ref, {\n            $implicit: f\n          });\n        } else {\n          const {\n            component\n          } = this.config.getType(f.type, true);\n          ref = containerRef.createComponent(component);\n        }\n        this.attachComponentRef(ref, f);\n      }\n    }\n    triggerHook(name, changes) {\n      if (name === 'onInit' || name === 'onChanges' && changes.field && !changes.field.firstChange) {\n        this.valueChangesUnsubscribe();\n        this.valueChangesUnsubscribe = this.fieldChanges(this.field);\n      }\n      if (this.field?.hooks?.[name]) {\n        if (!changes || changes.field) {\n          const r = this.field.hooks[name](this.field);\n          if (isObservable(r) && ['onInit', 'afterContentInit', 'afterViewInit'].indexOf(name) !== -1) {\n            const sub = r.subscribe();\n            this.hooksObservers.push(() => sub.unsubscribe());\n          }\n        }\n      }\n      if (name === 'onChanges' && changes.field) {\n        this.resetRefs(changes.field.previousValue);\n        this.render();\n      }\n    }\n    attachComponentRef(ref, field) {\n      this.componentRefs.push(ref);\n      field._componentRefs.push(ref);\n      if (ref instanceof ComponentRef) {\n        Object.assign(ref.instance, {\n          field\n        });\n      }\n    }\n    render() {\n      if (!this.field) {\n        return;\n      }\n      // require Formly build\n      if (!this.field.options) {\n        this.detectFieldBuild = true;\n        return;\n      }\n      this.detectFieldBuild = false;\n      this.hostObservers.forEach(hostObserver => hostObserver.unsubscribe());\n      this.hostObservers = [observe(this.field, ['hide'], ({\n        firstChange,\n        currentValue\n      }) => {\n        const containerRef = this.containerRef;\n        if (this.config.extras.lazyRender === false) {\n          firstChange && this.renderField(containerRef, this.field);\n          if (!firstChange || firstChange && currentValue) {\n            this.elementRef && this.renderer.setStyle(this.elementRef.nativeElement, 'display', currentValue ? 'none' : '');\n          }\n        } else {\n          if (currentValue) {\n            containerRef.clear();\n            if (this.field.className) {\n              this.renderer.removeAttribute(this.elementRef.nativeElement, 'class');\n            }\n          } else {\n            this.renderField(containerRef, this.field);\n            if (this.field.className) {\n              this.renderer.setAttribute(this.elementRef.nativeElement, 'class', this.field.className);\n            }\n          }\n        }\n        !firstChange && this.field.options.detectChanges(this.field);\n      }), observe(this.field, ['className'], ({\n        firstChange,\n        currentValue\n      }) => {\n        if ((!firstChange || firstChange && currentValue) && (!this.config.extras.lazyRender || this.field.hide !== true)) {\n          this.elementRef && this.renderer.setAttribute(this.elementRef.nativeElement, 'class', currentValue);\n        }\n      })];\n      if (!isSignalRequired()) {\n        ['touched', 'pristine', 'status'].forEach(prop => this.hostObservers.push(observe(this.field, ['formControl', prop], ({\n          firstChange\n        }) => !firstChange && markFieldForCheck(this.field))));\n      } else if (this.field.formControl) {\n        const events = this.field.formControl.events.subscribe(() => markFieldForCheck(this.field));\n        this.hostObservers.push(events);\n      }\n    }\n    resetRefs(field) {\n      if (field) {\n        if (field._localFields) {\n          field._localFields = [];\n        } else {\n          defineHiddenProp(this.field, '_localFields', []);\n        }\n        if (field._componentRefs) {\n          field._componentRefs = field._componentRefs.filter(ref => this.componentRefs.indexOf(ref) === -1);\n        } else {\n          defineHiddenProp(this.field, '_componentRefs', []);\n        }\n      }\n      this.componentRefs = [];\n    }\n    fieldChanges(field) {\n      if (!field) {\n        return () => {};\n      }\n      const propsObserver = observeDeep(field, ['props'], () => field.options.detectChanges(field));\n      let subscribes = [() => {\n        propsObserver();\n      }];\n      for (const key of Object.keys(field._expressions || {})) {\n        const expressionObserver = observe(field, ['_expressions', key], ({\n          currentValue,\n          previousValue\n        }) => {\n          if (previousValue?.subscription) {\n            previousValue.subscription.unsubscribe();\n            previousValue.subscription = null;\n          }\n          if (isObservable(currentValue.value$)) {\n            currentValue.subscription = currentValue.value$.subscribe();\n          }\n        });\n        subscribes.push(() => {\n          if (field._expressions[key]?.subscription) {\n            field._expressions[key].subscription.unsubscribe();\n          }\n          expressionObserver.unsubscribe();\n        });\n      }\n      for (const path of [['focus'], ['template'], ['fieldGroupClassName'], ['validation', 'show']]) {\n        const fieldObserver = observe(field, path, ({\n          firstChange\n        }) => !firstChange && field.options.detectChanges(field));\n        subscribes.push(() => fieldObserver.unsubscribe());\n      }\n      if (field.formControl && !field.fieldGroup) {\n        const control = field.formControl;\n        let valueChanges = control.valueChanges.pipe(map(value => {\n          field.parsers?.map(parserFn => value = parserFn(value, field));\n          if (!Object.is(value, field.formControl.value)) {\n            field.formControl.setValue(value);\n          }\n          return value;\n        }), distinctUntilChanged((x, y) => {\n          if (x !== y || Array.isArray(x) || isObject(x)) {\n            return false;\n          }\n          return true;\n        }));\n        if (control.value !== getFieldValue(field)) {\n          valueChanges = valueChanges.pipe(startWith(control.value));\n        }\n        const {\n          updateOn,\n          debounce\n        } = field.modelOptions;\n        if ((!updateOn || updateOn === 'change') && debounce?.default > 0) {\n          valueChanges = control.valueChanges.pipe(debounceTime(debounce.default));\n        }\n        const sub = valueChanges.subscribe(value => {\n          // workaround for https://github.com/angular/angular/issues/13792\n          if (control._fields?.length > 1 && control instanceof FormControl) {\n            control.patchValue(value, {\n              emitEvent: false,\n              onlySelf: true\n            });\n          }\n          if (hasKey(field)) {\n            assignFieldValue(field, value);\n          }\n          field.options.fieldChanges.next({\n            value,\n            field,\n            type: 'valueChanges'\n          });\n        });\n        subscribes.push(() => sub.unsubscribe());\n      }\n      let templateFieldsSubs = [];\n      observe(field, ['_localFields'], ({\n        currentValue\n      }) => {\n        templateFieldsSubs.forEach(unsubscribe => unsubscribe());\n        templateFieldsSubs = (currentValue || []).map(f => this.fieldChanges(f));\n      });\n      return () => {\n        subscribes.forEach(unsubscribe => unsubscribe());\n        templateFieldsSubs.forEach(unsubscribe => unsubscribe());\n      };\n    }\n  }\n  FormlyField.ɵfac = function FormlyField_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormlyField)(i0.ɵɵdirectiveInject(FormlyConfig), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(FormlyFieldTemplates, 8));\n  };\n  FormlyField.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormlyField,\n    selectors: [[\"formly-field\"]],\n    viewQuery: function FormlyField_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewContainerRef = _t.first);\n      }\n    },\n    inputs: {\n      field: \"field\"\n    },\n    standalone: false,\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"container\", \"\"]],\n    template: function FormlyField_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FormlyField_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]:empty{display:none}\"]\n  });\n  return FormlyField;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The `<form-form>` component is the main container of the form,\n * which takes care of managing the form state\n * and delegates the rendering of each field to `<formly-field>` component.\n */\nlet FormlyForm = /*#__PURE__*/(() => {\n  class FormlyForm {\n    constructor(builder, config, ngZone, fieldTemplates) {\n      this.builder = builder;\n      this.config = config;\n      this.ngZone = ngZone;\n      this.fieldTemplates = fieldTemplates;\n      /** Event that is emitted when the model value is changed */\n      this.modelChange = new EventEmitter();\n      this.field = {\n        type: 'formly-group'\n      };\n      this._modelChangeValue = {};\n      this.valueChangesUnsubscribe = () => {};\n    }\n    /** The form instance which allow to track model value and validation status. */\n    set form(form) {\n      this.field.form = form;\n    }\n    get form() {\n      return this.field.form;\n    }\n    /** The model to be represented by the form. */\n    set model(model) {\n      if (this.config.extras.immutable && this._modelChangeValue === model) {\n        return;\n      }\n      this.setField({\n        model\n      });\n    }\n    get model() {\n      return this.field.model;\n    }\n    /** The field configurations for building the form. */\n    set fields(fieldGroup) {\n      this.setField({\n        fieldGroup\n      });\n    }\n    get fields() {\n      return this.field.fieldGroup;\n    }\n    /** Options for the form. */\n    set options(options) {\n      this.setField({\n        options\n      });\n    }\n    get options() {\n      return this.field.options;\n    }\n    set templates(templates) {\n      this.fieldTemplates.templates = templates;\n    }\n    ngDoCheck() {\n      if (this.config.extras.checkExpressionOn === 'changeDetectionCheck') {\n        this.checkExpressionChange();\n      }\n    }\n    ngOnChanges(changes) {\n      if (changes.fields && this.form) {\n        clearControl(this.form);\n      }\n      if (changes.fields || changes.form || changes.model && this._modelChangeValue !== changes.model.currentValue) {\n        this.valueChangesUnsubscribe();\n        this.builder.build(this.field);\n        this.valueChangesUnsubscribe = this.valueChanges();\n      }\n    }\n    ngOnDestroy() {\n      this.valueChangesUnsubscribe();\n    }\n    checkExpressionChange() {\n      this.field.options.checkExpressions?.(this.field);\n    }\n    valueChanges() {\n      this.valueChangesUnsubscribe();\n      let formEvents = null;\n      if (isSignalRequired()) {\n        let submitted = this.options?.parentForm?.submitted;\n        formEvents = this.form.events.subscribe(() => {\n          if (submitted !== this.options?.parentForm?.submitted) {\n            this.options.detectChanges(this.field);\n            submitted = this.options?.parentForm?.submitted;\n          }\n        });\n      }\n      let fieldChangesDetection = [observeDeep(this.field.options, ['formState'], () => this.field.options.detectChanges(this.field))];\n      const valueChanges = this.field.options.fieldChanges.pipe(filter(({\n        field,\n        type\n      }) => hasKey(field) && type === 'valueChanges'), switchMap(() => isNoopNgZone(this.ngZone) ? of(null) : this.ngZone.onStable.asObservable().pipe(take(1)))).subscribe(() => this.ngZone.runGuarded(() => {\n        // runGuarded is used to keep in sync the expression changes\n        // https://github.com/ngx-formly/ngx-formly/issues/2095\n        this.checkExpressionChange();\n        this.modelChange.emit(this._modelChangeValue = clone(this.model));\n      }));\n      return () => {\n        fieldChangesDetection.forEach(fnc => fnc());\n        formEvents?.unsubscribe();\n        valueChanges.unsubscribe();\n      };\n    }\n    setField(field) {\n      if (this.config.extras.immutable) {\n        this.field = {\n          ...this.field,\n          ...clone(field)\n        };\n      } else {\n        Object.keys(field).forEach(p => this.field[p] = field[p]);\n      }\n    }\n  }\n  FormlyForm.ɵfac = function FormlyForm_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormlyForm)(i0.ɵɵdirectiveInject(FormlyFormBuilder), i0.ɵɵdirectiveInject(FormlyConfig), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(FormlyFieldTemplates));\n  };\n  FormlyForm.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormlyForm,\n    selectors: [[\"formly-form\"]],\n    contentQueries: function FormlyForm_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, FormlyTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    inputs: {\n      form: \"form\",\n      model: \"model\",\n      fields: \"fields\",\n      options: \"options\"\n    },\n    outputs: {\n      modelChange: \"modelChange\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([FormlyFormBuilder, FormlyFieldTemplates]), i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"field\"]],\n    template: function FormlyForm_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"formly-field\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"field\", ctx.field);\n      }\n    },\n    dependencies: [FormlyField],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return FormlyForm;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Allow to link the `field` HTML attributes (`id`, `name` ...) and Event attributes (`focus`, `blur` ...) to an element in the DOM.\n */\nlet FormlyAttributes = /*#__PURE__*/(() => {\n  class FormlyAttributes {\n    constructor(renderer, elementRef, _document) {\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n      this.uiAttributesCache = {};\n      /**\n       * HostBinding doesn't register listeners conditionally which may produce some perf issues.\n       *\n       * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1991\n       */\n      this.uiEvents = {\n        listeners: [],\n        events: ['click', 'keyup', 'keydown', 'keypress', 'focus', 'blur', 'change'],\n        callback: (eventName, $event) => {\n          switch (eventName) {\n            case 'focus':\n              return this.onFocus($event);\n            case 'blur':\n              return this.onBlur($event);\n            case 'change':\n              return this.onChange($event);\n            default:\n              return this.props[eventName](this.field, $event);\n          }\n        }\n      };\n      this.document = _document;\n    }\n    get props() {\n      return this.field.props || {};\n    }\n    get fieldAttrElements() {\n      return this.field?.['_elementRefs'] || [];\n    }\n    ngOnChanges(changes) {\n      if (changes.field) {\n        this.field.name && this.setAttribute('name', this.field.name);\n        this.uiEvents.listeners.forEach(listener => listener());\n        this.uiEvents.events.forEach(eventName => {\n          if (this.props?.[eventName] || ['focus', 'blur', 'change'].indexOf(eventName) !== -1) {\n            this.uiEvents.listeners.push(this.renderer.listen(this.elementRef.nativeElement, eventName, e => this.uiEvents.callback(eventName, e)));\n          }\n        });\n        if (this.props?.attributes) {\n          observe(this.field, ['props', 'attributes'], ({\n            currentValue,\n            previousValue\n          }) => {\n            if (previousValue) {\n              Object.keys(previousValue).forEach(attr => this.removeAttribute(attr));\n            }\n            if (currentValue) {\n              Object.keys(currentValue).forEach(attr => {\n                if (currentValue[attr] != null) {\n                  this.setAttribute(attr, currentValue[attr]);\n                }\n              });\n            }\n          });\n        }\n        this.detachElementRef(changes.field.previousValue);\n        this.attachElementRef(changes.field.currentValue);\n        if (this.fieldAttrElements.length === 1) {\n          !this.id && this.field.id && this.setAttribute('id', this.field.id);\n          this.focusObserver = observe(this.field, ['focus'], ({\n            currentValue\n          }) => {\n            this.toggleFocus(currentValue);\n          });\n        }\n      }\n      if (changes.id) {\n        this.setAttribute('id', this.id);\n      }\n    }\n    /**\n     * We need to re-evaluate all the attributes on every change detection cycle, because\n     * by using a HostBinding we run into certain edge cases. This means that whatever logic\n     * is in here has to be super lean or we risk seriously damaging or destroying the performance.\n     *\n     * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1317\n     * Material issue: https://github.com/angular/components/issues/14024\n     */\n    ngDoCheck() {\n      if (!this.uiAttributes) {\n        const element = this.elementRef.nativeElement;\n        this.uiAttributes = [...FORMLY_VALIDATORS, 'tabindex', 'placeholder', 'readonly', 'disabled', 'step'].filter(attr => !element.hasAttribute || !element.hasAttribute(attr));\n      }\n      for (let i = 0; i < this.uiAttributes.length; i++) {\n        const attr = this.uiAttributes[i];\n        const value = this.props[attr];\n        if (this.uiAttributesCache[attr] !== value && (!this.props.attributes || !this.props.attributes.hasOwnProperty(attr.toLowerCase()))) {\n          this.uiAttributesCache[attr] = value;\n          if (value || value === 0) {\n            this.setAttribute(attr, value === true ? attr : `${value}`);\n          } else {\n            this.removeAttribute(attr);\n          }\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.uiEvents.listeners.forEach(listener => listener());\n      this.detachElementRef(this.field);\n      this.focusObserver?.unsubscribe();\n    }\n    toggleFocus(value) {\n      const element = this.fieldAttrElements ? this.fieldAttrElements[0] : null;\n      if (!element || !element.nativeElement.focus) {\n        return;\n      }\n      const isFocused = !!this.document.activeElement && this.fieldAttrElements.some(({\n        nativeElement\n      }) => this.document.activeElement === nativeElement || nativeElement.contains(this.document.activeElement));\n      if (value && !isFocused) {\n        Promise.resolve().then(() => element.nativeElement.focus());\n      } else if (!value && isFocused) {\n        Promise.resolve().then(() => element.nativeElement.blur());\n      }\n    }\n    onFocus($event) {\n      this.focusObserver?.setValue(true);\n      this.props.focus?.(this.field, $event);\n    }\n    onBlur($event) {\n      this.focusObserver?.setValue(false);\n      this.props.blur?.(this.field, $event);\n    }\n    // handle custom `change` event, for regular ones rely on DOM listener\n    onHostChange($event) {\n      if ($event instanceof Event) {\n        return;\n      }\n      this.onChange($event);\n    }\n    onChange($event) {\n      this.props.change?.(this.field, $event);\n      this.field.formControl?.markAsDirty();\n    }\n    attachElementRef(f) {\n      if (!f) {\n        return;\n      }\n      if (f['_elementRefs']?.indexOf(this.elementRef) === -1) {\n        f['_elementRefs'].push(this.elementRef);\n      } else {\n        defineHiddenProp(f, '_elementRefs', [this.elementRef]);\n      }\n    }\n    detachElementRef(f) {\n      const index = f?.['_elementRefs'] ? this.fieldAttrElements.indexOf(this.elementRef) : -1;\n      if (index !== -1) {\n        f['_elementRefs'].splice(index, 1);\n      }\n    }\n    setAttribute(attr, value) {\n      this.renderer.setAttribute(this.elementRef.nativeElement, attr, value);\n    }\n    removeAttribute(attr) {\n      this.renderer.removeAttribute(this.elementRef.nativeElement, attr);\n    }\n  }\n  FormlyAttributes.ɵfac = function FormlyAttributes_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormlyAttributes)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n  FormlyAttributes.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FormlyAttributes,\n    selectors: [[\"\", \"formlyAttributes\", \"\"]],\n    hostBindings: function FormlyAttributes_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function FormlyAttributes_change_HostBindingHandler($event) {\n          return ctx.onHostChange($event);\n        });\n      }\n    },\n    inputs: {\n      field: [0, \"formlyAttributes\", \"field\"],\n      id: \"id\"\n    },\n    standalone: false,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return FormlyAttributes;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FieldType = /*#__PURE__*/(() => {\n  class FieldType {\n    constructor() {\n      this.field = {};\n    }\n    set _formlyControls(controls) {\n      const f = this.field;\n      f._localFields = controls.map(c => c.control._fields || []).flat().filter(f => f.formControl !== this.field.formControl);\n    }\n    get model() {\n      return this.field.model;\n    }\n    get form() {\n      return this.field.form;\n    }\n    get options() {\n      return this.field.options;\n    }\n    get key() {\n      return this.field.key;\n    }\n    get formControl() {\n      return this.field.formControl;\n    }\n    get props() {\n      return this.field.props || {};\n    }\n    /** @deprecated Use `props` instead. */\n    get to() {\n      return this.props;\n    }\n    get showError() {\n      return this.options.showError(this);\n    }\n    get id() {\n      return this.field.id;\n    }\n    get formState() {\n      return this.options?.formState || {};\n    }\n  }\n  FieldType.ɵfac = function FieldType_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FieldType)();\n  };\n  FieldType.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FieldType,\n    viewQuery: function FieldType_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(NgControl, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._formlyControls = _t);\n      }\n    },\n    inputs: {\n      field: \"field\"\n    },\n    standalone: false\n  });\n  return FieldType;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** @ignore */\nlet FormlyGroup = /*#__PURE__*/(() => {\n  class FormlyGroup extends FieldType {}\n  FormlyGroup.ɵfac = /* @__PURE__ */(() => {\n    let ɵFormlyGroup_BaseFactory;\n    return function FormlyGroup_Factory(__ngFactoryType__) {\n      return (ɵFormlyGroup_BaseFactory || (ɵFormlyGroup_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyGroup)))(__ngFactoryType__ || FormlyGroup);\n    };\n  })();\n  FormlyGroup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormlyGroup,\n    selectors: [[\"formly-group\"]],\n    hostVars: 2,\n    hostBindings: function FormlyGroup_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.field.fieldGroupClassName || \"\");\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"field\", 4, \"ngFor\", \"ngForOf\"], [3, \"field\"]],\n    template: function FormlyGroup_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, FormlyGroup_formly_field_0_Template, 1, 1, \"formly-field\", 0);\n        i0.ɵɵprojection(1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.field.fieldGroup);\n      }\n    },\n    dependencies: [FormlyField, i2$1.NgForOf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return FormlyGroup;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The `<formly-validation-message>` component renders the error message of a given `field`.\n */\nlet FormlyValidationMessage = /*#__PURE__*/(() => {\n  class FormlyValidationMessage {\n    constructor(config) {\n      this.config = config;\n    }\n    ngOnChanges() {\n      const EXPR_VALIDATORS = FORMLY_VALIDATORS.map(v => `templateOptions.${v}`);\n      this.errorMessage$ = merge(this.field.formControl.statusChanges, !this.field.options ? of(null) : this.field.options.fieldChanges.pipe(filter(({\n        field,\n        type,\n        property\n      }) => {\n        return field === this.field && type === 'expressionChanges' && (property.indexOf('validation') !== -1 || EXPR_VALIDATORS.indexOf(property) !== -1);\n      }))).pipe(startWith(null), switchMap(() => isObservable(this.errorMessage) ? this.errorMessage : of(this.errorMessage)));\n    }\n    get errorMessage() {\n      const fieldForm = this.field.formControl;\n      for (const error in fieldForm.errors) {\n        if (fieldForm.errors.hasOwnProperty(error)) {\n          let message = this.config.getValidatorMessage(error);\n          if (isObject(fieldForm.errors[error])) {\n            if (fieldForm.errors[error].errorPath) {\n              return undefined;\n            }\n            if (fieldForm.errors[error].message) {\n              message = fieldForm.errors[error].message;\n            }\n          }\n          if (this.field.validation?.messages?.[error]) {\n            message = this.field.validation.messages[error];\n          }\n          if (this.field.validators?.[error]?.message) {\n            message = this.field.validators[error].message;\n          }\n          if (this.field.asyncValidators?.[error]?.message) {\n            message = this.field.asyncValidators[error].message;\n          }\n          if (typeof message === 'function') {\n            return message(fieldForm.errors[error], this.field);\n          }\n          return message;\n        }\n      }\n      return undefined;\n    }\n  }\n  FormlyValidationMessage.ɵfac = function FormlyValidationMessage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormlyValidationMessage)(i0.ɵɵdirectiveInject(FormlyConfig));\n  };\n  FormlyValidationMessage.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormlyValidationMessage,\n    selectors: [[\"formly-validation-message\"]],\n    inputs: {\n      field: \"field\"\n    },\n    standalone: false,\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 3,\n    template: function FormlyValidationMessage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(1, 1, ctx.errorMessage$));\n      }\n    },\n    dependencies: [i2$1.AsyncPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return FormlyValidationMessage;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FieldArrayType = /*#__PURE__*/(() => {\n  class FieldArrayType extends FieldType {\n    onPopulate(field) {\n      if (hasKey(field)) {\n        const control = findControl(field);\n        registerControl(field, control ? control : new FormArray([], {\n          updateOn: field.modelOptions.updateOn\n        }));\n      }\n      field.fieldGroup = field.fieldGroup || [];\n      const length = Array.isArray(field.model) ? field.model.length : 0;\n      if (field.fieldGroup.length > length) {\n        for (let i = field.fieldGroup.length - 1; i >= length; --i) {\n          unregisterControl(field.fieldGroup[i], true);\n          field.fieldGroup.splice(i, 1);\n        }\n      }\n      for (let i = field.fieldGroup.length; i < length; i++) {\n        const f = {\n          ...clone(typeof field.fieldArray === 'function' ? field.fieldArray(field) : field.fieldArray)\n        };\n        if (f.key !== null) {\n          f.key = `${i}`;\n        }\n        field.fieldGroup.push(f);\n      }\n    }\n    add(i, initialModel, {\n      markAsDirty\n    } = {\n      markAsDirty: true\n    }) {\n      markAsDirty && this.formControl.markAsDirty();\n      i = i == null ? this.field.fieldGroup.length : i;\n      if (!this.model) {\n        assignFieldValue(this.field, []);\n      }\n      this.model.splice(i, 0, initialModel ? clone(initialModel) : undefined);\n      this.markFieldForCheck(this.field.fieldGroup[i]);\n      this._build();\n    }\n    remove(i, {\n      markAsDirty\n    } = {\n      markAsDirty: true\n    }) {\n      markAsDirty && this.formControl.markAsDirty();\n      this.model.splice(i, 1);\n      const field = this.field.fieldGroup[i];\n      this.field.fieldGroup.splice(i, 1);\n      this.field.fieldGroup.forEach((f, key) => this.updateArrayElementKey(f, `${key}`));\n      unregisterControl(field, true);\n      this._build();\n    }\n    _build() {\n      const fields = this.field.formControl._fields ?? [this.field];\n      fields.forEach(f => this.options.build(f));\n      this.options.fieldChanges.next({\n        field: this.field,\n        value: getFieldValue(this.field),\n        type: 'valueChanges'\n      });\n    }\n    updateArrayElementKey(f, newKey) {\n      if (hasKey(f)) {\n        f.key = newKey;\n        return;\n      }\n      if (!f.fieldGroup?.length) {\n        return;\n      }\n      for (let i = 0; i < f.fieldGroup.length; i++) {\n        this.updateArrayElementKey(f.fieldGroup[i], newKey);\n      }\n    }\n    markFieldForCheck(f) {\n      if (!f) {\n        return;\n      }\n      f.fieldGroup?.forEach(c => this.markFieldForCheck(c));\n      if (f.hide === false) {\n        this.options._hiddenFieldsForCheck.push({\n          field: f\n        });\n      }\n    }\n  }\n  FieldArrayType.ɵfac = /* @__PURE__ */(() => {\n    let ɵFieldArrayType_BaseFactory;\n    return function FieldArrayType_Factory(__ngFactoryType__) {\n      return (ɵFieldArrayType_BaseFactory || (ɵFieldArrayType_BaseFactory = i0.ɵɵgetInheritedFactory(FieldArrayType)))(__ngFactoryType__ || FieldArrayType);\n    };\n  })();\n  FieldArrayType.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FieldArrayType,\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return FieldArrayType;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FieldWrapper = /*#__PURE__*/(() => {\n  class FieldWrapper extends FieldType {\n    set _formlyControls(_) {}\n    set _staticContent(content) {\n      this.fieldComponent = content;\n    }\n  }\n  FieldWrapper.ɵfac = /* @__PURE__ */(() => {\n    let ɵFieldWrapper_BaseFactory;\n    return function FieldWrapper_Factory(__ngFactoryType__) {\n      return (ɵFieldWrapper_BaseFactory || (ɵFieldWrapper_BaseFactory = i0.ɵɵgetInheritedFactory(FieldWrapper)))(__ngFactoryType__ || FieldWrapper);\n    };\n  })();\n  FieldWrapper.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FieldWrapper,\n    viewQuery: function FieldWrapper_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 5, ViewContainerRef);\n        i0.ɵɵviewQuery(_c2, 7, ViewContainerRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fieldComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._staticContent = _t.first);\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return FieldWrapper;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** @ignore */\nlet FormlyTemplateType = /*#__PURE__*/(() => {\n  class FormlyTemplateType extends FieldType {\n    constructor(sanitizer) {\n      super();\n      this.sanitizer = sanitizer;\n      this.innerHtml = {};\n    }\n    get template() {\n      if (this.field && this.field.template !== this.innerHtml.template) {\n        this.innerHtml = {\n          template: this.field.template,\n          content: this.props.safeHtml ? this.sanitizer.bypassSecurityTrustHtml(this.field.template) : this.field.template\n        };\n      }\n      return this.innerHtml.content;\n    }\n  }\n  FormlyTemplateType.ɵfac = function FormlyTemplateType_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormlyTemplateType)(i0.ɵɵdirectiveInject(i1.DomSanitizer));\n  };\n  FormlyTemplateType.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormlyTemplateType,\n    selectors: [[\"formly-template\"]],\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"innerHtml\"]],\n    template: function FormlyTemplateType_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"innerHtml\", ctx.template, i0.ɵɵsanitizeHtml);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return FormlyTemplateType;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction evalStringExpression(expression, argNames) {\n  try {\n    return Function(...argNames, `return ${expression};`);\n  } catch (error) {\n    console.error(error);\n  }\n}\nfunction evalExpression(expression, thisArg, argVal) {\n  if (typeof expression === 'function') {\n    return expression.apply(thisArg, argVal);\n  } else {\n    return expression ? true : false;\n  }\n}\nclass FieldExpressionExtension {\n  onPopulate(field) {\n    if (field._expressions) {\n      return;\n    }\n    // cache built expression\n    defineHiddenProp(field, '_expressions', {});\n    observe(field, ['hide'], ({\n      currentValue,\n      firstChange\n    }) => {\n      defineHiddenProp(field, '_hide', !!currentValue);\n      if (!firstChange || firstChange && currentValue === true) {\n        field.props.hidden = currentValue;\n        field.options._hiddenFieldsForCheck.push({\n          field\n        });\n      }\n    });\n    if (field.hideExpression) {\n      observe(field, ['hideExpression'], ({\n        currentValue: expr\n      }) => {\n        field._expressions.hide = this.parseExpressions(field, 'hide', typeof expr === 'boolean' ? () => expr : expr);\n      });\n    }\n    const evalExpr = (key, expr) => {\n      if (typeof expr === 'string' || isFunction(expr)) {\n        field._expressions[key] = this.parseExpressions(field, key, expr);\n      } else if (expr instanceof Observable) {\n        field._expressions[key] = {\n          value$: expr.pipe(tap(v => {\n            this.evalExpr(field, key, v);\n            field.options._detectChanges(field);\n          }))\n        };\n      }\n    };\n    field.expressions = field.expressions || {};\n    for (const key of Object.keys(field.expressions)) {\n      observe(field, ['expressions', key], ({\n        currentValue: expr\n      }) => {\n        evalExpr(key, isFunction(expr) ? (...args) => expr(field, args[3]) : expr);\n      });\n    }\n    field.expressionProperties = field.expressionProperties || {};\n    for (const key of Object.keys(field.expressionProperties)) {\n      observe(field, ['expressionProperties', key], ({\n        currentValue\n      }) => evalExpr(key, currentValue));\n    }\n  }\n  postPopulate(field) {\n    if (field.parent) {\n      return;\n    }\n    if (!field.options.checkExpressions) {\n      let checkLocked = false;\n      field.options.checkExpressions = (f, ignoreCache) => {\n        if (checkLocked) {\n          return;\n        }\n        checkLocked = true;\n        const fieldChanged = this.checkExpressions(f, ignoreCache);\n        const options = field.options;\n        options._hiddenFieldsForCheck.sort(f => f.field.hide ? -1 : 1).forEach(f => this.changeHideState(f.field, f.field.hide ?? f.default, !ignoreCache));\n        options._hiddenFieldsForCheck = [];\n        if (fieldChanged) {\n          this.checkExpressions(field);\n        }\n        checkLocked = false;\n      };\n      field.options._checkField = (f, ignoreCache) => {\n        console.warn(`Formly: 'options._checkField' is deprecated since v6.0, use 'options.checkExpressions' instead.`);\n        field.options.checkExpressions(f, ignoreCache);\n      };\n    }\n  }\n  parseExpressions(field, path, expr) {\n    let parentExpression;\n    if (field.parent && ['hide', 'props.disabled'].includes(path)) {\n      const rootValue = f => {\n        return path === 'hide' ? f.hide : f.props.disabled;\n      };\n      parentExpression = () => {\n        let root = field.parent;\n        while (root.parent && !rootValue(root)) {\n          root = root.parent;\n        }\n        return rootValue(root);\n      };\n    }\n    expr = expr || (() => false);\n    if (typeof expr === 'string') {\n      expr = evalStringExpression(expr, ['model', 'formState', 'field']);\n    }\n    let currentValue;\n    return {\n      callback: ignoreCache => {\n        try {\n          const exprValue = evalExpression(parentExpression ? (...args) => parentExpression(field) || expr(...args) : expr, {\n            field\n          }, [field.model, field.options.formState, field, ignoreCache]);\n          if (ignoreCache || currentValue !== exprValue && (!isObject(exprValue) || isObservable(exprValue) || JSON.stringify(exprValue) !== JSON.stringify(currentValue))) {\n            currentValue = exprValue;\n            this.evalExpr(field, path, exprValue);\n            return true;\n          }\n          return false;\n        } catch (error) {\n          error.message = `[Formly Error] [Expression \"${path}\"] ${error.message}`;\n          throw error;\n        }\n      }\n    };\n  }\n  checkExpressions(field, ignoreCache = false) {\n    if (!field) {\n      return false;\n    }\n    let fieldChanged = false;\n    if (field._expressions) {\n      for (const key of Object.keys(field._expressions)) {\n        field._expressions[key].callback?.(ignoreCache) && (fieldChanged = true);\n      }\n    }\n    field.fieldGroup?.forEach(f => this.checkExpressions(f, ignoreCache) && (fieldChanged = true));\n    return fieldChanged;\n  }\n  changeDisabledState(field, value) {\n    if (field.fieldGroup) {\n      field.fieldGroup.filter(f => !f._expressions.hasOwnProperty('props.disabled')).forEach(f => this.changeDisabledState(f, value));\n    }\n    if (hasKey(field) && field.props.disabled !== value) {\n      field.props.disabled = value;\n    }\n  }\n  changeHideState(field, hide, resetOnHide) {\n    if (field.fieldGroup) {\n      field.fieldGroup.filter(f => f && !f._expressions.hide).forEach(f => this.changeHideState(f, hide, resetOnHide));\n    }\n    if (field.formControl && hasKey(field)) {\n      defineHiddenProp(field, '_hide', !!(hide || field.hide));\n      const c = field.formControl;\n      if (c._fields?.length > 1) {\n        updateValidity(c);\n      }\n      if (hide === true && (!c._fields || c._fields.every(f => !!f._hide))) {\n        unregisterControl(field, true);\n        if (resetOnHide && field.resetOnHide) {\n          assignFieldValue(field, undefined);\n          field.formControl.reset({\n            value: undefined,\n            disabled: field.formControl.disabled\n          });\n          field.options.fieldChanges.next({\n            value: undefined,\n            field,\n            type: 'valueChanges'\n          });\n          if (field.fieldGroup && field.formControl instanceof FormArray) {\n            field.fieldGroup.length = 0;\n          }\n        }\n      } else if (hide === false) {\n        if (field.resetOnHide && !isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\n          assignFieldValue(field, field.defaultValue);\n        }\n        registerControl(field, undefined, true);\n        if (field.resetOnHide && field.fieldArray && field.fieldGroup?.length !== field.model?.length) {\n          field.options.build(field);\n        }\n      }\n    }\n    if (field.options.fieldChanges) {\n      field.options.fieldChanges.next({\n        field,\n        type: 'hidden',\n        value: hide\n      });\n    }\n  }\n  evalExpr(field, prop, value) {\n    if (prop.indexOf('model.') === 0) {\n      const key = prop.replace(/^model\\./, ''),\n        parent = field.fieldGroup ? field : field.parent;\n      let control = field?.key === key ? field.formControl : field.form.get(key);\n      if (!control && field.get(key)) {\n        control = field.get(key).formControl;\n      }\n      assignFieldValue({\n        key,\n        parent,\n        model: field.model\n      }, value);\n      if (control && !(isNil(control.value) && isNil(value)) && control.value !== value) {\n        control.patchValue(value);\n      }\n    } else {\n      try {\n        let target = field;\n        const paths = this._evalExpressionPath(field, prop);\n        const lastIndex = paths.length - 1;\n        for (let i = 0; i < lastIndex; i++) {\n          target = target[paths[i]];\n        }\n        target[paths[lastIndex]] = value;\n      } catch (error) {\n        error.message = `[Formly Error] [Expression \"${prop}\"] ${error.message}`;\n        throw error;\n      }\n      if (['templateOptions.disabled', 'props.disabled'].includes(prop) && hasKey(field)) {\n        this.changeDisabledState(field, value);\n      }\n    }\n    this.emitExpressionChanges(field, prop, value);\n  }\n  emitExpressionChanges(field, property, value) {\n    if (!field.options.fieldChanges) {\n      return;\n    }\n    field.options.fieldChanges.next({\n      field,\n      type: 'expressionChanges',\n      property,\n      value\n    });\n  }\n  _evalExpressionPath(field, prop) {\n    if (field._expressions[prop] && field._expressions[prop].paths) {\n      return field._expressions[prop].paths;\n    }\n    let paths = [];\n    if (prop.indexOf('[') === -1) {\n      paths = prop.split('.');\n    } else {\n      prop.split(/[[\\]]{1,2}/) // https://stackoverflow.com/a/20198206\n      .filter(p => p).forEach(path => {\n        const arrayPath = path.match(/['|\"](.*?)['|\"]/);\n        if (arrayPath) {\n          paths.push(arrayPath[1]);\n        } else {\n          paths.push(...path.split('.').filter(p => p));\n        }\n      });\n    }\n    if (field._expressions[prop]) {\n      field._expressions[prop].paths = paths;\n    }\n    return paths;\n  }\n}\nclass FieldValidationExtension {\n  constructor(config) {\n    this.config = config;\n  }\n  onPopulate(field) {\n    this.initFieldValidation(field, 'validators');\n    this.initFieldValidation(field, 'asyncValidators');\n  }\n  initFieldValidation(field, type) {\n    const validators = [];\n    if (type === 'validators' && !(field.hasOwnProperty('fieldGroup') && !hasKey(field))) {\n      validators.push(this.getPredefinedFieldValidation(field));\n    }\n    if (field[type]) {\n      for (const validatorName of Object.keys(field[type])) {\n        validatorName === 'validation' ? validators.push(...field[type].validation.map(v => this.wrapNgValidatorFn(field, v))) : validators.push(this.wrapNgValidatorFn(field, field[type][validatorName], validatorName));\n      }\n    }\n    defineHiddenProp(field, '_' + type, validators);\n  }\n  getPredefinedFieldValidation(field) {\n    let VALIDATORS = [];\n    FORMLY_VALIDATORS.forEach(opt => observe(field, ['props', opt], ({\n      currentValue,\n      firstChange\n    }) => {\n      VALIDATORS = VALIDATORS.filter(o => o !== opt);\n      if (opt === 'required' && currentValue != null && typeof currentValue !== 'boolean') {\n        console.warn(`Formly: Invalid prop 'required' of type '${typeof currentValue}', expected 'boolean' (Field:${field.key}).`);\n      }\n      if (currentValue != null && currentValue !== false) {\n        VALIDATORS.push(opt);\n      }\n      if (!firstChange && field.formControl) {\n        updateValidity(field.formControl);\n      }\n    }));\n    return control => {\n      if (VALIDATORS.length === 0) {\n        return null;\n      }\n      return Validators.compose(VALIDATORS.map(opt => () => {\n        const value = field.props[opt];\n        switch (opt) {\n          case 'required':\n            return Validators.required(control);\n          case 'pattern':\n            return Validators.pattern(value)(control);\n          case 'minLength':\n            const minLengthResult = Validators.minLength(value)(control);\n            const minLengthKey = this.config.getValidatorMessage('minlength') || field.validation?.messages?.minlength ? 'minlength' : 'minLength';\n            return minLengthResult ? {\n              [minLengthKey]: minLengthResult.minlength\n            } : null;\n          case 'maxLength':\n            const maxLengthResult = Validators.maxLength(value)(control);\n            const maxLengthKey = this.config.getValidatorMessage('maxlength') || field.validation?.messages?.maxlength ? 'maxlength' : 'maxLength';\n            return maxLengthResult ? {\n              [maxLengthKey]: maxLengthResult.maxlength\n            } : null;\n          case 'min':\n            return Validators.min(value)(control);\n          case 'max':\n            return Validators.max(value)(control);\n          default:\n            return null;\n        }\n      }))(control);\n    };\n  }\n  wrapNgValidatorFn(field, validator, validatorName) {\n    let validatorOption;\n    if (typeof validator === 'string') {\n      validatorOption = clone(this.config.getValidator(validator));\n    }\n    if (typeof validator === 'object' && validator.name) {\n      validatorOption = clone(this.config.getValidator(validator.name));\n      if (validator.options) {\n        validatorOption.options = validator.options;\n      }\n    }\n    if (typeof validator === 'object' && validator.expression) {\n      const {\n        expression,\n        ...options\n      } = validator;\n      validatorOption = {\n        name: validatorName,\n        validation: expression,\n        options: Object.keys(options).length > 0 ? options : null\n      };\n    }\n    if (typeof validator === 'function') {\n      validatorOption = {\n        name: validatorName,\n        validation: validator\n      };\n    }\n    return control => {\n      const errors = validatorOption.validation(control, field, validatorOption.options);\n      if (isPromise(errors)) {\n        return errors.then(v => this.handleResult(field, validatorName ? !!v : v, validatorOption));\n      }\n      if (isObservable(errors)) {\n        return errors.pipe(map(v => this.handleResult(field, validatorName ? !!v : v, validatorOption)));\n      }\n      return this.handleResult(field, validatorName ? !!errors : errors, validatorOption);\n    };\n  }\n  handleResult(field, errors, {\n    name,\n    options\n  }) {\n    if (typeof errors === 'boolean') {\n      errors = errors ? null : {\n        [name]: options ? options : true\n      };\n    }\n    const ctrl = field.formControl;\n    ctrl?._childrenErrors?.[name]?.();\n    if (isObject(errors)) {\n      Object.keys(errors).forEach(name => {\n        const errorPath = errors[name].errorPath ? errors[name].errorPath : options?.errorPath;\n        const childCtrl = errorPath ? field.formControl.get(errorPath) : null;\n        if (childCtrl) {\n          const {\n            errorPath: _errorPath,\n            ...opts\n          } = errors[name];\n          childCtrl.setErrors({\n            ...(childCtrl.errors || {}),\n            [name]: opts\n          });\n          !ctrl._childrenErrors && defineHiddenProp(ctrl, '_childrenErrors', {});\n          ctrl._childrenErrors[name] = () => {\n            const {\n              [name]: _toDelete,\n              ...childErrors\n            } = childCtrl.errors || {};\n            childCtrl.setErrors(Object.keys(childErrors).length === 0 ? null : childErrors);\n          };\n        }\n      });\n    }\n    return errors;\n  }\n}\nclass FieldFormExtension {\n  prePopulate(field) {\n    if (!this.root) {\n      this.root = field;\n    }\n    if (field.parent) {\n      Object.defineProperty(field, 'form', {\n        get: () => field.parent.formControl,\n        configurable: true\n      });\n    }\n  }\n  onPopulate(field) {\n    if (field.hasOwnProperty('fieldGroup') && !hasKey(field)) {\n      defineHiddenProp(field, 'formControl', field.form);\n    } else {\n      this.addFormControl(field);\n    }\n  }\n  postPopulate(field) {\n    if (this.root !== field) {\n      return;\n    }\n    this.root = null;\n    const markForCheck = this.setValidators(field);\n    if (markForCheck && field.parent) {\n      let parent = field.parent;\n      while (parent) {\n        if (hasKey(parent) || !parent.parent) {\n          updateValidity(parent.formControl, true);\n        }\n        parent = parent.parent;\n      }\n    }\n  }\n  addFormControl(field) {\n    let control = findControl(field);\n    if (field.fieldArray) {\n      return;\n    }\n    if (!control) {\n      const controlOptions = {\n        updateOn: field.modelOptions.updateOn\n      };\n      if (field.fieldGroup) {\n        control = new FormGroup({}, controlOptions);\n      } else {\n        const value = hasKey(field) ? getFieldValue(field) : field.defaultValue;\n        control = new FormControl({\n          value,\n          disabled: !!field.props.disabled\n        }, {\n          ...controlOptions,\n          initialValueIsDefault: true\n        });\n      }\n    } else {\n      if (control instanceof FormControl) {\n        const value = hasKey(field) ? getFieldValue(field) : field.defaultValue;\n        control.defaultValue = value;\n      }\n    }\n    registerControl(field, control);\n  }\n  setValidators(field, disabled = false) {\n    if (disabled === false && hasKey(field) && field.props?.disabled) {\n      disabled = true;\n    }\n    let markForCheck = false;\n    field.fieldGroup?.forEach(f => f && this.setValidators(f, disabled) && (markForCheck = true));\n    if (hasKey(field) || !field.parent || !hasKey(field) && !field.fieldGroup) {\n      const {\n        formControl: c\n      } = field;\n      if (c) {\n        if (hasKey(field) && c instanceof FormControl) {\n          if (disabled && c.enabled) {\n            c.disable({\n              emitEvent: false,\n              onlySelf: true\n            });\n            markForCheck = true;\n          }\n          if (!disabled && c.disabled) {\n            c.enable({\n              emitEvent: false,\n              onlySelf: true\n            });\n            markForCheck = true;\n          }\n        }\n        if (null === c.validator && this.hasValidators(field, '_validators')) {\n          c.setValidators(() => {\n            const v = Validators.compose(this.mergeValidators(field, '_validators'));\n            return v ? v(c) : null;\n          });\n          markForCheck = true;\n        }\n        if (null === c.asyncValidator && this.hasValidators(field, '_asyncValidators')) {\n          c.setAsyncValidators(() => {\n            const v = Validators.composeAsync(this.mergeValidators(field, '_asyncValidators'));\n            return v ? v(c) : of(null);\n          });\n          markForCheck = true;\n        }\n        if (markForCheck) {\n          updateValidity(c, true);\n          // update validity of `FormGroup` instance created by field with nested key.\n          let parent = c.parent;\n          for (let i = 1; i < getKeyPath(field).length; i++) {\n            if (parent) {\n              updateValidity(parent, true);\n              parent = parent.parent;\n            }\n          }\n        }\n      }\n    }\n    return markForCheck;\n  }\n  hasValidators(field, type) {\n    const c = field.formControl;\n    if (c?._fields?.length > 1 && c._fields.some(f => f[type].length > 0)) {\n      return true;\n    } else if (field[type].length > 0) {\n      return true;\n    }\n    return field.fieldGroup?.some(f => f?.fieldGroup && !hasKey(f) && this.hasValidators(f, type));\n  }\n  mergeValidators(field, type) {\n    const validators = [];\n    const c = field.formControl;\n    if (c?._fields?.length > 1) {\n      c._fields.filter(f => !f._hide).forEach(f => validators.push(...f[type]));\n    } else if (field[type]) {\n      validators.push(...field[type]);\n    }\n    if (field.fieldGroup) {\n      field.fieldGroup.filter(f => f?.fieldGroup && !hasKey(f)).forEach(f => validators.push(...this.mergeValidators(f, type)));\n    }\n    return validators;\n  }\n}\nclass CoreExtension {\n  constructor(config) {\n    this.config = config;\n    this.formId = 0;\n  }\n  prePopulate(field) {\n    const root = field.parent;\n    this.initRootOptions(field);\n    this.initFieldProps(field);\n    if (root) {\n      Object.defineProperty(field, 'options', {\n        get: () => root.options,\n        configurable: true\n      });\n      Object.defineProperty(field, 'model', {\n        get: () => hasKey(field) && field.fieldGroup ? getFieldValue(field) : root.model,\n        configurable: true\n      });\n    }\n    Object.defineProperty(field, 'get', {\n      value: key => getField(field, key),\n      configurable: true\n    });\n    this.getFieldComponentInstance(field).prePopulate?.(field);\n  }\n  onPopulate(field) {\n    this.initFieldOptions(field);\n    this.getFieldComponentInstance(field).onPopulate?.(field);\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f, index) => {\n        if (f) {\n          Object.defineProperty(f, 'parent', {\n            get: () => field,\n            configurable: true\n          });\n          Object.defineProperty(f, 'index', {\n            get: () => index,\n            configurable: true\n          });\n        }\n        this.formId++;\n      });\n    }\n  }\n  postPopulate(field) {\n    this.getFieldComponentInstance(field).postPopulate?.(field);\n  }\n  initFieldProps(field) {\n    field.props ?? (field.props = field.templateOptions);\n    Object.defineProperty(field, 'templateOptions', {\n      get: () => field.props,\n      set: props => field.props = props,\n      configurable: true\n    });\n  }\n  initRootOptions(field) {\n    if (field.parent) {\n      return;\n    }\n    const options = field.options;\n    field.options.formState = field.options.formState || {};\n    if (!options.showError) {\n      options.showError = this.config.extras.showError;\n    }\n    if (!options.fieldChanges) {\n      defineHiddenProp(options, 'fieldChanges', new Subject());\n    }\n    if (!options._hiddenFieldsForCheck) {\n      options._hiddenFieldsForCheck = [];\n    }\n    options._markForCheck = f => {\n      console.warn(`Formly: 'options._markForCheck' is deprecated since v6.0, use 'options.detectChanges' instead.`);\n      options.detectChanges(f);\n    };\n    options._detectChanges = f => {\n      if (f._componentRefs) {\n        markFieldForCheck(f);\n      }\n      f.fieldGroup?.forEach(f => f && options._detectChanges(f));\n    };\n    options.detectChanges = f => {\n      f.options.checkExpressions?.(f);\n      options._detectChanges(f);\n    };\n    options.resetModel = model => {\n      model = clone(model ?? options._initialModel);\n      if (field.model) {\n        Object.keys(field.model).forEach(k => delete field.model[k]);\n        Object.assign(field.model, model || {});\n      }\n      if (!isSignalRequired()) {\n        observe(options, ['parentForm', 'submitted']).setValue(false, false);\n      }\n      options.build(field);\n      field.form.reset(field.model);\n    };\n    options.updateInitialValue = model => options._initialModel = clone(model ?? field.model);\n    field.options.updateInitialValue();\n  }\n  initFieldOptions(field) {\n    reverseDeepMerge(field, {\n      id: getFieldId(`formly_${this.formId}`, field, field.index),\n      hooks: {},\n      modelOptions: {},\n      validation: {\n        messages: {}\n      },\n      props: !field.type || !hasKey(field) ? {} : {\n        label: '',\n        placeholder: '',\n        disabled: false\n      }\n    });\n    if (this.config.extras.resetFieldOnHide && field.resetOnHide !== false) {\n      field.resetOnHide = true;\n    }\n    if (field.type !== 'formly-template' && (field.template || field.expressions?.template || field.expressionProperties?.template)) {\n      field.type = 'formly-template';\n    }\n    if (!field.type && field.fieldGroup) {\n      field.type = 'formly-group';\n    }\n    if (field.type) {\n      this.config.getMergedField(field);\n    }\n    if (hasKey(field) && !isUndefined(field.defaultValue) && isUndefined(getFieldValue(field)) && !isHiddenField(field)) {\n      assignFieldValue(field, field.defaultValue);\n    }\n    field.wrappers = field.wrappers || [];\n  }\n  getFieldComponentInstance(field) {\n    const componentRefInstance = () => {\n      let componentRef = this.config.resolveFieldTypeRef(field);\n      const fieldComponentRef = field._componentRefs?.slice(-1)[0];\n      if (fieldComponentRef instanceof ComponentRef && fieldComponentRef?.componentType === componentRef?.componentType) {\n        componentRef = fieldComponentRef;\n      }\n      return componentRef?.instance;\n    };\n    if (!field._proxyInstance) {\n      defineHiddenProp(field, '_proxyInstance', new Proxy({}, {\n        get: (_, prop) => componentRefInstance()?.[prop],\n        set: (_, prop, value) => componentRefInstance()[prop] = value\n      }));\n    }\n    return field._proxyInstance;\n  }\n}\nfunction defaultFormlyConfig(config) {\n  return {\n    types: [{\n      name: 'formly-group',\n      component: FormlyGroup\n    }, {\n      name: 'formly-template',\n      component: FormlyTemplateType\n    }],\n    extensions: [{\n      name: 'core',\n      extension: new CoreExtension(config),\n      priority: -250\n    }, {\n      name: 'field-validation',\n      extension: new FieldValidationExtension(config),\n      priority: -200\n    }, {\n      name: 'field-form',\n      extension: new FieldFormExtension(),\n      priority: -150\n    }, {\n      name: 'field-expression',\n      extension: new FieldExpressionExtension(),\n      priority: -100\n    }]\n  };\n}\nlet FormlyModule = /*#__PURE__*/(() => {\n  class FormlyModule {\n    constructor(configService, configs = []) {\n      if (!configs) {\n        return;\n      }\n      configs.forEach(config => configService.addConfig(config));\n    }\n    static forRoot(config = {}) {\n      return {\n        ngModule: FormlyModule,\n        providers: [{\n          provide: FORMLY_CONFIG,\n          multi: true,\n          useFactory: defaultFormlyConfig,\n          deps: [FormlyConfig]\n        }, {\n          provide: FORMLY_CONFIG,\n          useValue: config,\n          multi: true\n        }, FormlyConfig, FormlyFormBuilder]\n      };\n    }\n    static forChild(config = {}) {\n      return {\n        ngModule: FormlyModule,\n        providers: [{\n          provide: FORMLY_CONFIG,\n          multi: true,\n          useFactory: defaultFormlyConfig,\n          deps: [FormlyConfig]\n        }, {\n          provide: FORMLY_CONFIG,\n          useValue: config,\n          multi: true\n        }, FormlyFormBuilder]\n      };\n    }\n  }\n  FormlyModule.ɵfac = function FormlyModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormlyModule)(i0.ɵɵinject(FormlyConfig), i0.ɵɵinject(FORMLY_CONFIG, 8));\n  };\n  FormlyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FormlyModule\n  });\n  FormlyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return FormlyModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of core\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FORMLY_CONFIG, FieldArrayType, FieldType, FieldWrapper, FormlyConfig, FormlyField, FormlyForm, FormlyFormBuilder, FormlyModule, FormlyAttributes as ɵFormlyAttributes, FormlyGroup as ɵFormlyGroup, FormlyTemplate as ɵFormlyTemplate, FormlyValidationMessage as ɵFormlyValidationMessage, clone as ɵclone, defineHiddenProp as ɵdefineHiddenProp, getFieldValue as ɵgetFieldValue, hasKey as ɵhasKey, observe as ɵobserve, reverseDeepMerge as ɵreverseDeepMerge };\n","import { ChangeDetectorRef, Component, DestroyRef, OnInit, inject } from '@angular/core';\nimport { AbstractControl, Form, FormControl, FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\nimport { FormlyDemoService } from './formly-demo.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { formlyDemoConstants } from './formly-demo.constants';\n\n@Component({\n  selector: 'app-formly-demo',\n  templateUrl: './formly-demo.component.html',\n  styleUrls: ['./formly-demo.component.scss'],\n  standalone: false\n})\nexport class FormlyDemoComponent implements OnInit {\n  private changeDetectorRef = inject(ChangeDetectorRef);\n  private destroyRef = inject(DestroyRef);\n  private moduleService = inject(FormlyDemoService);\n\n  private form?: Form;\n\n  public formGroup = new FormGroup({});\n  public formDefinition?: FormlyFieldConfig[];\n  public formOptions: FormlyFormOptions = {\n    // showError(field) {\n    //   console.log(field);\n    //   return false;\n    // },\n    // build: (field) => {\n    //   console.log(field);\n    //   return field;\n    // }\n  };\n  public model = {\n    name: '',\n    age: 10\n  };\n  public record: any;\n  public formMessage?: { id: string; message: string };\n\n  constructor() {\n    this.moduleService.formMessage.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\n      next: (result) => {\n        this.formMessage = result;\n      }\n    });\n  }\n\n  public ngOnInit() {\n    this.formDefinition = formlyDemoConstants.formDefinitionAll as any;\n    this.changeDetectorRef.detectChanges();\n  }\n\n  private getFormErrors(control: AbstractControl) {\n    if (control instanceof FormControl) {\n      return control.errors ? control : null;\n    }\n\n    if (control instanceof FormGroup) {\n      const formErrors = control.errors ? { groupError: control } : ({} as any);\n      Object.keys(control.controls).forEach((key) => {\n        const error = this.getFormErrors(control.get(key) as AbstractControl);\n        if (error) {\n          formErrors[key] = error;\n        }\n      });\n\n      return Object.keys(formErrors).length > 0 ? formErrors : null;\n    }\n\n    return null;\n  }\n}\n","<div class=\"body\">\n  <form class=\"form\" novalidate autocomplete=\"off\" [formGroup]=\"formGroup\">\n    @if (formDefinition) {\n      <formly-form [form]=\"formGroup\" [model]=\"model\" [fields]=\"formDefinition\" [options]=\"formOptions\"></formly-form>\n\n      <p>\n        {{ formGroup.value | json }}\n      </p>\n    }\n  </form>\n</div>\n\n<forge-toolbar class=\"footer\" inverted>\n  <span class=\"forge-typography--label1\" slot=\"start\">\n    {{ formMessage?.message }}\n  </span>\n</forge-toolbar>\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, Component, ElementRef, OnInit, inject, viewChild, input } from '@angular/core';\nimport { FormlyField, FormlyFieldConfig, FormlyModule } from '@ngx-formly/core';\n\n@Component({\n  selector: 'app-formly-field',\n  // eslint-disable-next-line quotes\n  template: ` <formly-field #formlyField [field]=\"$any(field())\"></formly-field> `,\n  imports: [CommonModule, FormlyModule],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class FormlyFieldComponent implements OnInit {\n  private elementRef = inject(ElementRef);\n\n  private readonly formlyField = viewChild<FormlyField>('formlyField');\n\n  public readonly field = input<FormlyFieldConfig>();\n\n  public ngOnInit() {\n    // console.log(this.field);\n    // console.log(this.formlyField);\n    // console.log(this.elementRef.nativeElement);\n  }\n}\n","import { Input, inject } from '@angular/core';\nimport { Directive, ElementRef, OnInit } from '@angular/core';\nimport { FormlyField, FormlyFieldConfig } from '@ngx-formly/core';\n\nimport { FormlyDemoService } from '../formly-demo.service';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[formlyFieldDirective]',\n  standalone: true\n})\nexport class FormlyFieldDirective implements OnInit {\n  private elementRef = inject(ElementRef);\n  private moduleService = inject(FormlyDemoService);\n\n  @Input()\n  field?: FormlyFieldConfig;\n  @Input()\n  formlyFieldDirective?: FormlyField;\n\n  public ngOnInit() {\n    // console.log(this.field);\n    // console.log(this.formlyFieldDirective);\n    // console.log(this.elementRef.nativeElement);\n    const element = this.elementRef.nativeElement as HTMLElement;\n\n    if (this.field?.props?.attributes) {\n      if (this.field.props.attributes && this.field.props.attributes['width']) {\n        element.style.width = `${this.field.props.attributes['width']}px`;\n      }\n\n      if (this.field.props.attributes['column']) {\n        element.style.gridColumn = `${this.field.props.attributes['column']}`;\n      }\n\n      if (this.field.props.attributes['row']) {\n        element.style.gridRow = `${this.field.props.attributes['row']}`;\n      }\n    }\n\n    if (this.field?.props?.description?.length) {\n      element.addEventListener('focusin', () => {\n        this.moduleService.formMessage.next({\n          id: this.field?.id as string,\n          message: this.field?.props?.description as string\n        });\n      });\n      element.addEventListener('focusout', () => {\n        this.moduleService.formMessage.next({\n          id: this.field?.id as string,\n          message: ''\n        });\n      });\n    }\n\n    if (this.field?.props?.required) {\n      this.field.validation!.messages = {\n        required: `A ${this.field.props.label || 'value'} is required`\n      };\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, ElementRef, HostBinding, inject, OnInit, viewChild } from '@angular/core';\nimport { FieldGroupTypeConfig, FieldType, FormlyModule } from '@ngx-formly/core';\nimport { FormlyFieldDirective } from './formly-field.directive';\n\n@Component({\n  selector: 'app-formly-group',\n  template: `\n    @if (props.label?.length && field.parent?.type !== 'tab') {\n      <div class=\"label\">{{ props.label }}</div>\n    }\n    <div #fieldContainer>\n      @for (f of field.fieldGroup; track i; let i = $index) {\n        <formly-field [field]=\"f\" #formlyField [formlyFieldDirective]=\"formlyField\"></formly-field>\n      }\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        height: fit-content;\n\n        ::ng-deep {\n          .form-grid {\n            display: grid !important;\n            row-gap: 8px !important;\n            // row-gap: 0 !important;\n          }\n\n          .form-vbox {\n            display: flex;\n            flex-direction: column;\n            row-gap: 16px;\n          }\n\n          .form-hbox {\n            display: flex;\n            flex-direction: row;\n            column-gap: 16px;\n          }\n\n          .form-group {\n            display: flex;\n            flex-direction: column;\n            row-gap: 16px;\n            border: var(--forge-theme-outline);\n            border-radius: 4px;\n            padding: 16px;\n          }\n        }\n      }\n\n      .label {\n        padding-bottom: 8px;\n      }\n    `\n  ],\n  imports: [CommonModule, FormlyModule, FormlyFieldDirective],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class GroupTypeComponent extends FieldType<FieldGroupTypeConfig> implements OnInit {\n  private elementRef = inject(ElementRef);\n\n  private readonly fieldContainer = viewChild<ElementRef>('fieldContainer');\n  // @HostBinding('style.display')\n  // private displayStyle = 'block';\n\n  public ngOnInit() {\n    const fieldContainerElement = this.fieldContainer()?.nativeElement as HTMLElement;\n    switch (this.field.props?.type) {\n      case 'grid':\n        fieldContainerElement.classList.add('form-grid');\n\n        if (this.props.attributes) {\n          if (this.props.attributes['width']) {\n            fieldContainerElement.style.gridTemplateColumns = `repeat(${this.props.attributes['width']}, 8px)`;\n          }\n          // if (this.props.attributes['height']) {\n          //   fieldContainerElement.style.gridTemplateRows = `repeat(${this.props.attributes['height']}, 8px)`;\n          // }\n        }\n        break;\n      case 'vbox':\n        fieldContainerElement.classList.add('form-vbox');\n        break;\n      case 'hbox':\n        fieldContainerElement.classList.add('form-hbox');\n        // this.displayStyle = 'inline-block';\n        break;\n      case 'group':\n        fieldContainerElement.classList.add('form-group');\n\n        if (this.props.attributes && (this.props.attributes['gridWidth'] || this.props.attributes['gridHeight'])) {\n          fieldContainerElement.classList.add('form-grid');\n          if (this.props.attributes['gridWidth']) {\n            fieldContainerElement.style.gridTemplateColumns = `repeat(${this.props.attributes['gridWidth']}, 8px)`;\n          }\n          // if (this.props.attributes['gridHeight']) {\n          //   fieldContainerElement.style.gridTemplateRows = `repeat(${this.props.attributes['gridHeight']}, 8px)`;\n          // }\n        }\n        break;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, OnDestroy, OnInit, inject } from '@angular/core';\nimport { AbstractControl, ReactiveFormsModule } from '@angular/forms';\nimport { map, of, Subject, takeUntil } from 'rxjs';\nimport { FieldType, FieldTypeConfig, FormlyModule } from '@ngx-formly/core';\nimport { ForgeCheckboxModule } from '@tylertech/forge-angular';\n\nimport { FormlyDemoService } from '../formly-demo.service';\n\n@Component({\n  selector: 'app-formly-checkbox',\n  template: `\n    <forge-checkbox [id]=\"id\" [readonly]=\"props.readonly\" [formControl]=\"formControl\" [formlyAttributes]=\"field\">\n      @if (props.label) {\n        {{ props.label }}\n      }\n      @if (props.description) {\n        <span slot=\"helper-text\">{{ props.description }}</span>\n      }\n    </forge-checkbox>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `\n  ],\n  imports: [CommonModule, ReactiveFormsModule, FormlyModule, ForgeCheckboxModule]\n})\nexport class CheckboxTypeComponent extends FieldType<FieldTypeConfig> implements OnInit, OnDestroy {\n  private moduleService = inject(FormlyDemoService);\n\n  private unsubscribe = new Subject<void>();\n\n  public ngOnInit() {\n    this.formControl.addAsyncValidators((control: AbstractControl) => {\n      this.unsubscribe.next();\n      this.unsubscribe.complete();\n\n      if (control.pristine) {\n        return of(null);\n      }\n\n      return this.moduleService.validateField(this.field.key as string, control.value).pipe(\n        takeUntil(this.unsubscribe),\n        map((r) => {\n          return r.invalid ? { server: { message: r.message } } : null;\n        })\n      );\n    });\n  }\n\n  public ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, Component, OnDestroy, OnInit, inject } from '@angular/core';\nimport { AbstractControl, ReactiveFormsModule } from '@angular/forms';\nimport { map, of, Subject, takeUntil } from 'rxjs';\nimport { FieldType, FieldTypeConfig, FormlyModule } from '@ngx-formly/core';\nimport { ForgeDatePickerModule, ForgeTextFieldModule } from '@tylertech/forge-angular';\nimport { isValid as isValidDate } from 'date-fns';\n\nimport { FormlyDemoService } from '../formly-demo.service';\n@Component({\n  selector: 'app-formly-date-picker',\n  template: `\n    <forge-date-picker [max]=\"$any(props.max)\" [min]=\"$any(props.min)\">\n      <forge-text-field [required]=\"props.required\" [invalid]=\"showError\">\n        <input [id]=\"id\" type=\"text\" [placeholder]=\"props.placeholder\" [readonly]=\"props.readonly\" [formControl]=\"formControl\" [formlyAttributes]=\"field\" />\n        @if (props.label) {\n          <label [attr.for]=\"id\" slot=\"label\">{{ props.label }}</label>\n        }\n        @if (showError) {\n          <span slot=\"helper-text\">\n            <formly-validation-message [field]=\"field\"></formly-validation-message>\n          </span>\n        }\n      </forge-text-field>\n    </forge-date-picker>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n\n      // forge-text-field {\n      //   --forge-text-field-height: 2rem;\n      // }\n    `\n  ],\n  imports: [CommonModule, ReactiveFormsModule, FormlyModule, ForgeDatePickerModule, ForgeTextFieldModule],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DatePickerTypeComponent extends FieldType<FieldTypeConfig> implements OnInit, OnDestroy {\n  private moduleService = inject(FormlyDemoService);\n\n  private unsubscribe = new Subject<void>();\n\n  public ngOnInit() {\n    this.formControl.addAsyncValidators((control: AbstractControl) => {\n      this.unsubscribe.next();\n      this.unsubscribe.complete();\n\n      if (control.pristine) {\n        return of(null);\n      }\n\n      if (control.value && !isValidDate(new Date(control.value))) {\n        control.setValue(null);\n        if (this.field.props.required) {\n          return of({ required: true });\n        }\n      }\n\n      return this.moduleService.validateField(this.field.key as string, control.value).pipe(\n        takeUntil(this.unsubscribe),\n        map((r) => {\n          return r.invalid ? { server: { message: r.message } } : null;\n        })\n      );\n    });\n  }\n\n  public ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, inject, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, ReactiveFormsModule } from '@angular/forms';\nimport { map, of, Subject, takeUntil } from 'rxjs';\nimport { FieldType, FieldTypeConfig, FormlyModule } from '@ngx-formly/core';\nimport { ForgeTextFieldModule } from '@tylertech/forge-angular';\n\nimport { FormlyDemoService } from '../formly-demo.service';\n\n@Component({\n  selector: 'app-formly-textarea',\n  template: `\n    <forge-text-field [required]=\"props.required\" [invalid]=\"showError\">\n      <textarea [id]=\"id\" [cols]=\"props.cols\" [rows]=\"props.rows\" [readonly]=\"props.readonly\" [formControl]=\"formControl\" [formlyAttributes]=\"field\">\n      </textarea>\n      @if (props.label) {\n        <label [attr.for]=\"id\" slot=\"label\">{{ props.label }}</label>\n      }\n      @if (showError) {\n        <span slot=\"helper-text\">\n          <formly-validation-message [field]=\"field\"></formly-validation-message>\n        </span>\n      }\n    </forge-text-field>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n\n      textarea {\n        resize: none;\n      }\n    `\n  ],\n  imports: [CommonModule, ReactiveFormsModule, FormlyModule, ForgeTextFieldModule],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TextareaTypeComponent extends FieldType<FieldTypeConfig> implements OnInit, OnDestroy {\n  private moduleService = inject(FormlyDemoService);\n\n  private unsubscribe = new Subject<void>();\n\n  constructor() {\n    super();\n    this.defaultOptions = {\n      props: {\n        cols: 1,\n        rows: 3\n      }\n    };\n  }\n\n  public ngOnInit() {\n    this.formControl.addAsyncValidators((control: AbstractControl) => {\n      this.unsubscribe.next();\n      this.unsubscribe.complete();\n\n      if (control.pristine) {\n        return of(null);\n      }\n\n      return this.moduleService.validateField(this.field.key as string, control.value).pipe(\n        takeUntil(this.unsubscribe),\n        map((r) => {\n          return r.invalid ? { server: { message: r.message } } : null;\n        })\n      );\n    });\n  }\n\n  public ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, inject, OnInit } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FieldTypeConfig, FormlyModule } from '@ngx-formly/core';\nimport { ForgeTabBarModule, ForgeTabModule } from '@tylertech/forge-angular';\nimport { FormlyDemoService } from '../formly-demo.service';\n\n@Component({\n  selector: 'app-formly-tab',\n  template: `\n    <forge-tab-bar secondary [activeTab]=\"activeTab\">\n      @for (field of $any(field.fieldGroup); track i; let i = $index) {\n        <forge-tab (forge-tab-select)=\"onTabSelected(field)\">\n          {{ field.props?.label }}\n        </forge-tab>\n      }\n    </forge-tab-bar>\n    <formly-field [field]=\"$any(activeField)\" #formlyField [formlyFieldDirective]=\"formlyField\"></formly-field>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n\n      forge-tab-bar {\n        &::part(container) {\n          justify-items: flex-start;\n        }\n\n        margin: 16px 0;\n      }\n\n      forge-tab {\n        min-width: 240px;\n      }\n    `\n  ],\n  imports: [CommonModule, ReactiveFormsModule, FormlyModule, ForgeTabBarModule, ForgeTabModule],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TabTypeComponent extends FieldType<FieldTypeConfig> implements OnInit {\n  private moduleService = inject(FormlyDemoService);\n\n  public activeTab = 0;\n  public activeField?: FieldTypeConfig;\n\n  public ngOnInit() {\n    this.activeField = this.field.fieldGroup![0] as FieldTypeConfig;\n  }\n\n  public onTabSelected(field: FieldTypeConfig) {\n    this.activeField = field;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, ElementRef, viewChild } from '@angular/core';\nimport { FieldArrayType, FormlyModule } from '@ngx-formly/core';\nimport { FormlyFieldDirective } from './formly-field.directive';\n\n@Component({\n  selector: 'app-formly-table',\n  template: `\n    <table class=\"forge-table\" #table>\n      <thead>\n        <tr class=\"forge-table-row forge-table-head__row\">\n          @for (th of $any(props).columns; track i; let i = $index) {\n            <th scope=\"col\" class=\"forge-table-cell forge-table-head__cell\">\n              <div class=\"forge-table-head__cell-container\">\n                <span class=\"forge-table-head__cell-text\">{{ th.label }}</span>\n              </div>\n            </th>\n          }\n          <th class=\"forge-table-cell forge-table-head__cell forge-table-cell__button\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        @for (fg of field.fieldGroup; track i; let i = $index) {\n          <tr class=\"forge-table-row forge-table-body__row\">\n            @for (f of fg.fieldGroup; track ii; let ii = $index) {\n              <td class=\"forge-table-cell forge-table-body__cell\">\n                <formly-field [field]=\"f\" #formlyField [formlyFieldDirective]=\"formlyField\"></formly-field>\n              </td>\n            }\n            <td class=\"forge-table-cell forge-table-body__cell forge-table-cell__button\">\n              <forge-icon-button (click)=\"onRemove(i)\" aria-label=\"Delete\">\n                <forge-icon name=\"delete\"></forge-icon>\n              </forge-icon-button>\n            </td>\n          </tr>\n        }\n      </tbody>\n      <tfoot>\n        <tr>\n          <td>\n            <forge-button (click)=\"onAdd()\">Add</forge-button>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n\n      .forge-table {\n        // --forge-table-theme-row-hover-background: transparent;\n\n        &-cell {\n          padding-right: 24px;\n          &:first-child {\n            padding-left: 0;\n          }\n          &:last-child {\n            padding-right: 0;\n          }\n          &__button {\n            width: 48px;\n          }\n        }\n\n        &-body {\n          &__cell {\n            padding-top: 8px;\n            padding-bottom: 8px;\n            vertical-align: top;\n\n            formly-field {\n              background-color: var(--forge-theme-surface);\n            }\n          }\n        }\n      }\n    `\n  ],\n  imports: [CommonModule, FormlyModule, FormlyFieldDirective],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TableTypeComponent extends FieldArrayType {\n  private readonly tableElement = viewChild<ElementRef>('table');\n\n  public onAdd() {\n    const model = this.props['columns'].filter((c: any) => c.key?.length).map((c: any) => [c.key, c.defaultValue]);\n\n    this.add(this.formControl.length, Object.fromEntries(model));\n\n    requestAnimationFrame(() => {\n      const tr = Array.from(this.tableElement()?.nativeElement.querySelectorAll('tbody > tr')).reverse()[0] as HTMLTableRowElement;\n      if (tr) {\n        const focusElement = tr.querySelector(`[id*=\"${model[0][0]}\"]`) as HTMLElement;\n        if (focusElement) {\n          focusElement.focus();\n        }\n      }\n    });\n  }\n\n  public onRemove(index: number) {\n    this.remove(index);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { Component, inject } from '@angular/core';\r\nimport { finalize, Observable, Subject, takeUntil } from 'rxjs';\r\nimport { isDefined } from '@tylertech/forge-core';\r\nimport { IColumnConfiguration, ITableFilterEventData, ITableRowClickEventData, ITableSortEventData, SortDirection } from '@tylertech/forge';\r\nimport {\r\n  DIALOG_DATA,\r\n  DialogRef,\r\n  ForgeIconButtonModule,\r\n  ForgeIconModule,\r\n  ForgePageStateModule,\r\n  ForgePaginatorModule,\r\n  ForgeScaffoldModule,\r\n  ForgeSkeletonModule,\r\n  ForgeTableModule,\r\n  ForgeToolbarModule\r\n} from '@tylertech/forge-angular';\r\n\r\nimport { IFilterParameter, IFilter, IFilterResponse } from 'src/app/shared/interfaces';\r\nimport { Utils } from 'src/utils';\r\n\r\nexport interface IFieldHelpDialogConfig {\r\n  columnConfigurations: IColumnConfiguration[];\r\n  dataObservable: (param: IFilterParameter) => Observable<IFilterResponse<any>>;\r\n  key: string;\r\n  title: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-formly-field-help-dialog',\r\n  templateUrl: './field-help-dialog.component.html',\r\n  styleUrls: ['./field-help-dialog.component.scss'],\r\n  imports: [\r\n    CommonModule,\r\n    ForgeIconButtonModule,\r\n    ForgeIconModule,\r\n    ForgePageStateModule,\r\n    ForgePaginatorModule,\r\n    ForgeScaffoldModule,\r\n    ForgeSkeletonModule,\r\n    ForgeTableModule,\r\n    ForgeToolbarModule\r\n  ]\r\n})\r\nexport class FieldHelpDialogComponent {\r\n  public dialogConfig = inject<IFieldHelpDialogConfig>(DIALOG_DATA);\r\n  private dialogRef = inject(DialogRef);\r\n\r\n  public id = Utils.elementId('app-');\r\n  public dialogTitle: string;\r\n  public columnConfigurations: IColumnConfiguration[];\r\n  public data: any[] = [];\r\n  public paginator = {\r\n    pageIndex: 0,\r\n    pageSize: 25,\r\n    total: 0\r\n  };\r\n  public isBusy = false;\r\n  public key: string;\r\n\r\n  private unsubscribe = new Subject<void>();\r\n  private dataObservable: (param: IFilterParameter) => Observable<any>;\r\n  private sort = {\r\n    property: '',\r\n    direction: SortDirection.Ascending\r\n  };\r\n  private filters: IFilter[] = [];\r\n\r\n  constructor() {\r\n    this.dialogTitle = this.dialogConfig.title || '';\r\n    this.columnConfigurations = this.dialogConfig.columnConfigurations || [];\r\n    this.dataObservable = this.dialogConfig.dataObservable as any;\r\n    this.key = this.dialogConfig.key || '';\r\n    this.sort.property = this.columnConfigurations.find((c) => c.initialSort)?.property || (this.columnConfigurations[0].property as string);\r\n    this.dialogRef.nativeElement.setAttribute('aria-labelledby', `${this.id}--title`);\r\n    this.getData();\r\n  }\r\n\r\n  public onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  public onPaginatorChange(value: { pageIndex: number; pageSize: number }) {\r\n    this.paginator.pageIndex = value.pageIndex;\r\n    this.paginator.pageSize = value.pageSize;\r\n    this.getData();\r\n  }\r\n\r\n  public onTableSort(value: ITableSortEventData) {\r\n    this.sort.property = this.columnConfigurations[value.columnIndex].property as string;\r\n    this.sort.direction = value.direction;\r\n    this.paginator.pageIndex = 0;\r\n    this.getData();\r\n  }\r\n\r\n  public onTableFilter(filter: ITableFilterEventData) {\r\n    const filterProperty = this.columnConfigurations[filter.columnIndex].property as string;\r\n    if (isDefined(filter.value) && filter.value?.toString().length) {\r\n      this.filters.push({ property: filterProperty, value: filter.value });\r\n    } else {\r\n      const index = this.filters.findIndex((f) => f.property === filterProperty);\r\n      if (index !== -1) {\r\n        this.filters.splice(index, 1);\r\n      }\r\n    }\r\n    this.paginator.pageIndex = 0;\r\n    this.getData();\r\n  }\r\n\r\n  public onTableRowClick(value: ITableRowClickEventData) {\r\n    this.dialogRef.close(value.data[this.key]);\r\n  }\r\n\r\n  private getData() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n    this.isBusy = true;\r\n    const param: IFilterParameter = {\r\n      filters: this.filters,\r\n      sort: this.sort,\r\n      skip: this.paginator.pageIndex * this.paginator.pageSize,\r\n      take: this.paginator.pageSize\r\n    };\r\n    this.dataObservable(param)\r\n      .pipe(\r\n        finalize(() => (this.isBusy = false)),\r\n        takeUntil(this.unsubscribe)\r\n      )\r\n      .subscribe((r: IFilterResponse<any>) => {\r\n        this.data = r.data;\r\n        this.paginator.total = r.count;\r\n      });\r\n  }\r\n}\r\n","<forge-scaffold>\n  <forge-toolbar slot=\"header\">\n    <h2 slot=\"start\" class=\"forge-typography--heading4\" [id]=\"id + '--title'\">\n      {{ dialogTitle }}\n    </h2>\n    <forge-icon-button class=\"header__close\" slot=\"end\" aria-label=\"Close\" (click)=\"onClose()\">\n      <forge-icon name=\"close\"></forge-icon>\n    </forge-icon-button>\n  </forge-toolbar>\n  <div slot=\"body\">\n    <forge-table\n      [ngClass]=\"{ 'app--hidden': isBusy }\"\n      [data]=\"data\"\n      [columnConfigurations]=\"columnConfigurations\"\n      allow-row-click\n      (forge-table-row-click)=\"onTableRowClick($event.detail)\"\n      (forge-table-sort)=\"onTableSort($any($event).detail)\"\n      filter=\"true\"\n      (forge-table-filter)=\"onTableFilter($event.detail)\"\n    ></forge-table>\n\n    @if (!isBusy && !data.length) {\n      <forge-page-state>\n        <img src=\"https://cdn.forge.tylertech.com/v1/images/spot/no-search-results-spot.svg\" slot=\"graphic\" alt=\"No records found\" />\n        <div slot=\"message\">No records were found.</div>\n      </forge-page-state>\n    }\n\n    @if (isBusy) {\n      <ng-container>\n        <forge-skeleton list-item></forge-skeleton>\n        <forge-skeleton list-item></forge-skeleton>\n        <forge-skeleton list-item></forge-skeleton>\n        <forge-skeleton list-item></forge-skeleton>\n      </ng-container>\n    }\n  </div>\n\n  <forge-toolbar slot=\"footer\" inverted=\"true\">\n    <forge-paginator slot=\"end\" [pageIndex]=\"paginator.pageIndex\" [pageSize]=\"paginator.pageSize\" [total]=\"paginator.total\" (forge-paginator-change)=\"onPaginatorChange($event.detail)\" [disabled]=\"isBusy || !data.length\"> </forge-paginator>\n  </forge-toolbar>\n</forge-scaffold>\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { AbstractControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { FieldType, FieldTypeConfig, FormlyModule } from '@ngx-formly/core';\r\nimport { TextFieldComponentDelegate } from '@tylertech/forge';\r\nimport { DialogService, ForgeIconButtonModule, ForgeIconModule, ForgeTextFieldModule } from '@tylertech/forge-angular';\r\nimport { finalize, map, of, Subject, takeUntil } from 'rxjs';\r\nimport { IFilterParameter } from 'src/app/shared/interfaces';\r\nimport { FormlyDemoService } from '../formly-demo.service';\r\nimport { FieldHelpDialogComponent } from './field-help-dialog/field-help-dialog.component';\r\n@Component({\r\n  selector: 'app-formly-input-help',\r\n  template: `\r\n    <forge-text-field [required]=\"props.required\" [invalid]=\"showError\">\r\n      <input\r\n        #input\r\n        [id]=\"id\"\r\n        type=\"text\"\r\n        [placeholder]=\"props.placeholder\"\r\n        [readonly]=\"props.readonly\"\r\n        [formControl]=\"formControl\"\r\n        [formlyAttributes]=\"field\"\r\n      />\r\n      @if (props.label) {\r\n        <label [attr.for]=\"id\" slot=\"label\">{{ props.label }}</label>\r\n      }\r\n      <forge-icon-button slot=\"addon-end\" dense aria-label=\"Browse options\" [disabled]=\"formControl.disabled\" (click)=\"onShowDialog()\">\r\n        <forge-icon name=\"more_horiz\"></forge-icon>\r\n      </forge-icon-button>\r\n      @if (showError) {\r\n        <span slot=\"helper-text\">\r\n          <formly-validation-message [field]=\"field\"></formly-validation-message>\r\n        </span>\r\n      }\r\n    </forge-text-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: block;\r\n      }\r\n\r\n      // forge-text-field {\r\n      //   --forge-text-field-height: 2rem;\r\n      // }\r\n    `\r\n  ],\r\n  imports: [CommonModule, ReactiveFormsModule, FormlyModule, ForgeIconButtonModule, ForgeIconModule, ForgeTextFieldModule],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class InputHelpTypeComponent extends FieldType<FieldTypeConfig> implements OnInit, OnDestroy {\r\n  private dialogService = inject(DialogService);\r\n  private moduleService = inject(FormlyDemoService);\r\n\r\n  private unsubscribe = new Subject<void>();\r\n\r\n  public ngOnInit() {\r\n    this.formControl.addAsyncValidators((control: AbstractControl) => {\r\n      this.unsubscribe.next();\r\n      this.unsubscribe.complete();\r\n\r\n      if (control.pristine) {\r\n        return of(null);\r\n      }\r\n\r\n      return this.moduleService.validateField(this.field.key as string, control.value).pipe(\r\n        takeUntil(this.unsubscribe),\r\n        map((r) => {\r\n          return r.invalid ? { server: { message: r.message } } : null;\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  public onShowDialog() {\r\n    this.dialogService\r\n      .open(FieldHelpDialogComponent, {\r\n        data: {\r\n          columnConfigurations: (this.props.options as { label: string; property: string }[]).map((o) => ({\r\n            header: o.label,\r\n            property: o.property,\r\n            sortable: true,\r\n            filter: true,\r\n            filterDelegate: new TextFieldComponentDelegate()\r\n          })),\r\n          dataObservable: (param: IFilterParameter) => this.moduleService.getFieldHelp(this.key as string, param),\r\n          key: this.props['optionsKey'],\r\n          title: `Select a ${this.props.label}`\r\n        }\r\n      })\r\n      .afterClosed.subscribe({\r\n        next: (result) => {\r\n          if (result) {\r\n            this.formControl.setValue(result);\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FieldType, FieldTypeConfig, FormlyModule } from '@ngx-formly/core';\n\n@Component({\n  selector: 'app-formly-label',\n  // eslint-disable-next-line quotes\n  template: ` <label [attr.for]=\"id\" class=\"forge-typography--body1\">{{ props.label }}</label> `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `\n  ],\n  imports: [CommonModule, FormlyModule]\n})\nexport class LabelTypeComponent extends FieldType<FieldTypeConfig> {}\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, Component } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FieldTypeConfig, FormlyModule } from '@ngx-formly/core';\nimport { ForgeRadioGroupModule, ForgeRadioModule } from '@tylertech/forge-angular';\n\n@Component({\n  selector: 'app-formly-radio',\n  template: `\n    @if (props.label) {\n      <label [attr.for]=\"id\" slot=\"label\">{{ props.label }}</label>\n    }\n    <forge-radio-group [name]=\"id + '-radio-group'\">\n      @for (option of $any(props.options); track i; let i = $index) {\n        <forge-radio [id]=\"id + '-' + i\" [name]=\"id + '-radio-group'\" [value]=\"option.value\" [formControl]=\"formControl\" [formlyAttributes]=\"field\">\n          @if (option.label) {\n            {{ option.label }}\n          }\n        </forge-radio>\n      }\n    </forge-radio-group>\n    @if (showError) {\n      <div class=\"forge-typography--label1\">\n        <formly-validation-message [field]=\"field\"></formly-validation-message>\n      </div>\n    }\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n\n      [role='radiogroup'] {\n        margin-left: -8px;\n        display: flex;\n        column-gap: 16px;\n        flex-direction: column;\n      }\n\n      forge-radio {\n        &::part(container) {\n          padding: 4px;\n        }\n      }\n\n      .forge-typography--label1 {\n        color: var(--forge-theme-error);\n      }\n    `\n  ],\n  imports: [CommonModule, ReactiveFormsModule, FormlyModule, ForgeRadioModule, ForgeRadioGroupModule],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class RadioTypeComponent extends FieldType<FieldTypeConfig> {\n  // @HostBinding('attr.role')\n  // public roleAttribute = 'radiogroup';\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, inject, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FieldTypeConfig, FormlyModule } from '@ngx-formly/core';\nimport { ForgeSelectModule } from '@tylertech/forge-angular';\nimport { finalize, map, of, Subject, takeUntil } from 'rxjs';\nimport { FormlyDemoService } from '../formly-demo.service';\n\n@Component({\n  selector: 'app-formly-select',\n  template: `\n    <forge-select\n      [id]=\"id\"\n      [options]=\"$any(props.options)\"\n      [label]=\"$any(props.label)\"\n      [placeholder]=\"$any(props.placeholder)\"\n      [invalid]=\"showError\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n    >\n      @if (showError) {\n        <span slot=\"helper-text\">\n          <formly-validation-message [field]=\"field\"></formly-validation-message>\n        </span>\n      }\n    </forge-select>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n\n      // forge-select {\n      //   --forge-select-height: 2rem;\n      // }\n    `\n  ],\n  imports: [CommonModule, ReactiveFormsModule, FormlyModule, ForgeSelectModule],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class SelectTypeComponent extends FieldType<FieldTypeConfig> implements OnInit, OnDestroy {\n  private moduleService = inject(FormlyDemoService);\n\n  private unsubscribe = new Subject<void>();\n\n  public ngOnInit() {\n    this.formControl.addAsyncValidators((control: AbstractControl) => {\n      this.unsubscribe.next();\n      this.unsubscribe.complete();\n\n      if (control.pristine) {\n        return of(null);\n      }\n\n      return this.moduleService.validateField(this.field.key as string, control.value).pipe(\n        takeUntil(this.unsubscribe),\n        map((r) => {\n          return r.invalid ? { server: { message: r.message } } : null;\n        })\n      );\n    });\n  }\n\n  public ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n","import { FormlyExtension } from '@ngx-formly/core';\n\nexport const formlyFieldExtension: FormlyExtension = {\n  prePopulate(field) {\n    // TODO\n    switch (field.type) {\n      case 'date-picker':\n      case 'input':\n      case 'select':\n      case 'textarea': {\n        // field.modelOptions = {\n        //   updateOn: 'blur'\n        // }\n      }\n    }\n  }\n};\n","import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FieldType, FieldTypeConfig } from '@ngx-formly/core';\r\nimport { ForgeButtonModule } from '@tylertech/forge-angular';\r\n\r\n@Component({\r\n  selector: 'app-formly-button',\r\n  template: `\r\n    <forge-button variant=\"filled\" (click)=\"onClick($event)\">\r\n      {{ props.label }}\r\n    </forge-button>\r\n  `,\r\n  imports: [CommonModule, ForgeButtonModule]\r\n})\r\nexport class ButtonTypeComponent extends FieldType<FieldTypeConfig> {\r\n  public onClick(event: MouseEvent) {\r\n    console.log(event);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { OnInit, viewChild } from '@angular/core';\nimport { ElementRef } from '@angular/core';\nimport { Component, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FieldType, FormlyModule } from '@ngx-formly/core';\n\nimport { FormlyFieldDirective } from './formly-field.directive';\n\n@Component({\n  selector: 'app-formly-container',\n  template: `\n    @if (props.label) {\n      <div class=\"label\">{{ props.label }}</div>\n    }\n\n    <div #fieldContainer>\n      @for (f of field.fieldGroup; track i; let i = $index) {\n        <formly-field #formlyField [field]=\"f\" [formlyFieldDirective]=\"formlyField\"></formly-field>\n      }\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: inline-block;\n      }\n\n      ::ng-deep {\n        .form-grid {\n          display: grid;\n          gap: 16px;\n        }\n\n        .form-vbox {\n          display: flex;\n          flex-direction: column;\n          row-gap: 16px;\n        }\n\n        .form-hbox {\n          display: flex;\n          flex-direction: row;\n          column-gap: 16px;\n        }\n\n        .form-group {\n          display: flex;\n          flex-direction: column;\n          row-gap: 16px;\n          border: 1px solid #e6e6e6;\n          border-radius: 4px;\n          padding: 16px;\n        }\n      }\n\n      .label {\n        padding: 8px;\n      }\n    `\n  ],\n  imports: [CommonModule, FormlyModule, FormlyFieldDirective],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class ContainerTypeComponent extends FieldType implements OnInit {\n  private readonly fieldContainer = viewChild<ElementRef>('fieldContainer');\n\n  public ngOnInit() {\n    const fieldContainerElement = this.fieldContainer()?.nativeElement as HTMLElement;\n    switch (this.field.props?.type) {\n      case 'grid':\n        fieldContainerElement.classList.add('form-grid');\n        if (this.props.attributes!['columns']) {\n          fieldContainerElement.style.gridTemplateColumns = `repeat(${this.props.attributes!['columns']}, auto)`;\n        }\n        break;\n      case 'vbox':\n        fieldContainerElement.classList.add('form-vbox');\n        break;\n      case 'hbox':\n        fieldContainerElement.classList.add('form-hbox');\n        break;\n      case 'group':\n        fieldContainerElement.classList.add('form-group');\n        break;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, Component, ElementRef, OnDestroy, OnInit, inject, viewChild } from '@angular/core';\nimport { AbstractControl, ReactiveFormsModule } from '@angular/forms';\nimport { finalize, map, of, Subject, takeUntil } from 'rxjs';\nimport { FieldType, FieldTypeConfig, FormlyModule } from '@ngx-formly/core';\nimport { ForgeTextFieldModule } from '@tylertech/forge-angular';\n\nimport { FormlyDemoService } from '../formly-demo.service';\n\n@Component({\n  selector: 'app-formly-input',\n  template: `\n    <forge-text-field [required]=\"props.required\" [invalid]=\"showError\">\n      <input\n        #input\n        [id]=\"id\"\n        [type]=\"inputType\"\n        [placeholder]=\"props.placeholder\"\n        [readonly]=\"props.readonly\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\"\n      />\n      @if (props.label) {\n        <label [attr.for]=\"id\" slot=\"label\">{{ props.label }}</label>\n      }\n      @if (showError) {\n        <span slot=\"helper-text\">\n          <formly-validation-message [field]=\"field\"></formly-validation-message>\n        </span>\n      }\n    </forge-text-field>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n\n      // forge-text-field {\n      //   --forge-text-field-height: 2rem;\n      // }\n\n      input[type='number']::-webkit-outer-spin-button,\n      input[type='number']::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n    `\n  ],\n  imports: [CommonModule, ReactiveFormsModule, FormlyModule, ForgeTextFieldModule],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class InputTypeComponent extends FieldType<FieldTypeConfig> implements OnInit, OnDestroy {\n  private unsubscribe = new Subject<void>();\n  private moduleService = inject(FormlyDemoService);\n  private readonly inputElement = viewChild<ElementRef>('input');\n\n  public inputType = 'text';\n\n  public ngOnInit() {\n    this.inputType = this.props?.type || 'text';\n\n    this.formControl.addAsyncValidators((control: AbstractControl) => {\n      this.unsubscribe.next();\n      this.unsubscribe.complete();\n\n      if (control.pristine) {\n        return of(null);\n      }\n\n      // (this.inputElement.nativeElement as HTMLInputElement).disabled = true;\n      return this.moduleService.validateField(this.field.key as string, control.value).pipe(\n        // finalize(() => (this.inputElement.nativeElement as HTMLInputElement).disabled = false),\n        takeUntil(this.unsubscribe),\n        map((r) => {\n          return r.invalid ? { server: { message: r.message } } : null;\n        })\n      );\n    });\n  }\n\n  public ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormlyModule } from '@ngx-formly/core';\n\nimport { GroupTypeComponent } from './group-type.component';\nimport { CheckboxTypeComponent } from './checkbox-type.component';\nimport { DatePickerTypeComponent } from './date-picker-type.component';\nimport { TextareaTypeComponent } from './textarea-type.component';\nimport { TabTypeComponent } from './tab-type.component';\nimport { TableTypeComponent } from './table-type.component';\nimport { InputHelpTypeComponent } from './input-help-type.component';\nimport { LabelTypeComponent } from './label-type.component';\nimport { RadioTypeComponent } from './radio-type.component';\nimport { SelectTypeComponent } from './select-type.component';\nimport { formlyFieldExtension } from './formly-field.extension';\nimport { ButtonTypeComponent } from './button-type.component';\nimport { ContainerTypeComponent } from './container-type.component';\nimport { InputTypeComponent } from './input-type.component';\nimport { FormlyFieldDirective } from './formly-field.directive';\n\n@NgModule({\n  imports: [\n    FormlyModule.forRoot({\n      extensions: [{ name: 'formly-field-extension', extension: formlyFieldExtension }],\n      types: [\n        { name: 'checkbox', component: CheckboxTypeComponent },\n        { name: 'date-picker', component: DatePickerTypeComponent },\n        { name: 'input', component: InputTypeComponent },\n        { name: 'input-help', component: InputHelpTypeComponent },\n        { name: 'radio', component: RadioTypeComponent },\n        { name: 'select', component: SelectTypeComponent },\n        { name: 'textarea', component: TextareaTypeComponent },\n        { name: 'button', component: ButtonTypeComponent },\n        { name: 'container', component: ContainerTypeComponent },\n        { name: 'formly-group', component: GroupTypeComponent },\n        { name: 'tab', component: TabTypeComponent },\n        { name: 'table', component: TableTypeComponent },\n        { name: 'label', component: LabelTypeComponent }\n      ]\n      // wrappers: [\n      //   { name: 'container', component: ContainerWrapperComponent }\n      // ]\n    }),\n    FormlyFieldDirective\n  ],\n  exports: [FormlyModule]\n})\nexport class FormlyConfigModule {}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormlyDemoComponent } from './formly-demo.component';\nimport { FormlyDemoService } from './formly-demo.service';\nimport { FormlyFieldComponent } from './components/formly-field.component';\nimport { FormlyConfigModule } from './components/formly-config.module';\n\nconst routes: Routes = [{ path: '**', component: FormlyDemoComponent }];\n\n@NgModule({\n  declarations: [FormlyDemoComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), ReactiveFormsModule, FormlyConfigModule, FormlyFieldComponent],\n  exports: [RouterModule],\n  providers: [FormlyDemoService],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class FormlyDemoModule {}\n"],"mappings":"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","names":["FormlyDemoService","constructor","formMessage","Subject","validateField","field","value","validation","invalid","message","of","pipe","delay","getFieldHelp","param","filters","length","count","data","result","index","skip","take","push","id","address","city","state","factory","ɵfac","_FormlyDemoService","formDefinitionBasic","props","label","type","attributes","columns","fieldGroup","key","format","required","description","width","formDefinitionAll","defaultValue","column","row","options","value","optionsKey","property","className","template","safeHtml","fieldArray","formDefinitionLayout","height","posX","posY","gridWidth","gridHeight","disabled","formlyDemoConstants","_c0","FormlyField_ng_template_0_Template","rf","ctx","_c1","FormlyGroup_formly_field_0_Template","ɵɵelement","f_r1","ɵɵproperty","disableTreeValidityCall","form","callback","_updateTreeValidity","getFieldId","formId","field","index","type","Type","hasKey","isNil","getKeyPath","path","key","defineHiddenProp","FORMLY_VALIDATORS","assignFieldValue","value","paths","root","k","m","model","assignModelValue","isObject","clone","getFieldValue","reverseDeepMerge","dest","args","src","srcArg","isBlankString","objAndSameType","isUndefined","isFunction","obj1","obj2","x","isPromise","obj","isObservable","TemplateRef","AbstractControl","v","proto","c","newVal","prop","propDesc","defaultValue","observeDeep","source","setFn","observers","unsubscribe","observer","observe","firstChange","currentValue","target","i","state","enumerable","previousValue","changeFn","emitEvent","getField","f","len","markFieldForCheck","ref","ComponentRef$1","ChangeDetectorRef","isNoopNgZone","ngZone","NoopNgZone","isHiddenField","isHidden","setDefaultValue","parent","isSignalRequired","VERSION","FORMLY_CONFIG","InjectionToken","FormlyConfig","config","validator","wrapper","validation","__spreadValues","acc","curr","__spreadProps","options","option","name","throwIfNotFound","extendDefaults","defaultOptions","componentRef","_viewContainerRef","_injector","e","message","extensionOptions","extensionOption","priority","a","b","prio","extendedType","__ngFactoryType__","ɵɵdefineInjectable","FormlyFormBuilder","injector","viewContainerRef","parentForm","fieldGroup","extensions","extension","FormGroup","ɵɵinject","Injector","ViewContainerRef","FormGroupDirective","unregisterControl","control","fieldIndex","opts","FormArray","findControl","registerControl","disabledObserver","FormControl","updateValidity","onlySelf","status","clearControl","FormlyTemplate","ɵɵdirectiveInject","ɵɵdefineDirective","ɵɵNgOnChangesFeature","FormlyFieldTemplates","FormlyField","renderer","_elementRef","hostContainerRef","changes","hostObserver","containerRef","wrappers","wps","component","viewRef","inlineType","sub","events","propsObserver","subscribes","expressionObserver","fieldObserver","valueChanges","map","parserFn","distinctUntilChanged","y","startWith","updateOn","debounce","debounceTime","templateFieldsSubs","Renderer2","ElementRef","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","_c0","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵtemplate","FormlyField_ng_template_0_Template","ɵɵtemplateRefExtractor","FormlyForm","builder","fieldTemplates","EventEmitter","templates","formEvents","submitted","fieldChangesDetection","filter","switchMap","of","take","fnc","p","NgZone","dirIndex","ɵɵcontentQuery","ɵɵProvidersFeature","ɵɵelement","ɵɵproperty","FormlyAttributes","elementRef","_document","eventName","$event","listener","attr","element","isFocused","nativeElement","DOCUMENT","ɵɵlistener","FieldType","controls","NgControl","FormlyGroup","ɵFormlyGroup_BaseFactory","ɵɵgetInheritedFactory","ɵɵclassMap","ɵɵInheritDefinitionFeature","_c1","ɵɵprojectionDef","FormlyGroup_formly_field_0_Template","ɵɵprojection","NgForOf","FormlyValidationMessage","EXPR_VALIDATORS","merge","property","fieldForm","error","ɵɵtext","ɵɵpipe","ɵɵtextInterpolate","ɵɵpipeBind1","AsyncPipe","FieldArrayType","length","initialModel","markAsDirty","newKey","ɵFieldArrayType_BaseFactory","FormlyTemplateType","FieldType","sanitizer","__ngFactoryType__","ɵɵdirectiveInject","DomSanitizer","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵelement","ɵɵproperty","ɵɵsanitizeHtml","evalStringExpression","expression","argNames","error","evalExpression","thisArg","argVal","FieldExpressionExtension","field","defineHiddenProp","observe","currentValue","firstChange","expr","evalExpr","key","isFunction","Observable","tap","v","args","checkLocked","f","ignoreCache","fieldChanged","options","path","parentExpression","rootValue","root","exprValue","isObject","isObservable","value","hasKey","hide","resetOnHide","c","updateValidity","unregisterControl","assignFieldValue","FormArray","isUndefined","getFieldValue","registerControl","prop","parent","control","isNil","target","paths","lastIndex","i","property","p","arrayPath","FieldValidationExtension","config","type","validators","validatorName","VALIDATORS","FORMLY_VALIDATORS","opt","o","Validators","minLengthResult","minLengthKey","maxLengthResult","maxLengthKey","validator","validatorOption","clone","_a","__objRest","errors","isPromise","map","name","ctrl","errorPath","childCtrl","_errorPath","opts","__spreadProps","__spreadValues","_toDelete","childErrors","__restKey","FieldFormExtension","findControl","FormControl","controlOptions","FormGroup","disabled","markForCheck","of","getKeyPath","CoreExtension","getField","index","props","Subject","markFieldForCheck","model","k","isSignalRequired","reverseDeepMerge","getFieldId","isHiddenField","componentRefInstance","componentRef","fieldComponentRef","ComponentRef$1","_","defaultFormlyConfig","FormlyGroup","FormlyModule","configService","configs","FORMLY_CONFIG","FormlyConfig","FormlyFormBuilder","ɵɵinject","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","formGroup","model","formDefinition","formOptions","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","value","FormlyDemoComponent","constructor","changeDetectorRef","inject","ChangeDetectorRef","destroyRef","DestroyRef","moduleService","FormlyDemoService","FormGroup","name","age","formMessage","pipe","takeUntilDestroyed","subscribe","next","result","ngOnInit","formlyDemoConstants","formDefinitionAll","detectChanges","getFormErrors","control","FormControl","errors","formErrors","groupError","Object","keys","controls","forEach","key","error","get","length","selectors","standalone","decls","vars","consts","template","rf","ctx","ɵɵconditionalCreate","FormlyDemoComponent_Conditional_2_Template","ɵɵconditional","message","_FormlyDemoComponent","FormlyFieldComponent","constructor","elementRef","inject","ElementRef","formlyField","viewChild","field","input","ngOnInit","selectors","viewQuery","rf","ctx","ɵɵelement","ɵɵproperty","CommonModule","FormlyModule","FormlyField","encapsulation","_FormlyFieldComponent","FormlyFieldDirective","constructor","elementRef","inject","ElementRef","moduleService","FormlyDemoService","ngOnInit","element","nativeElement","field","props","attributes","style","width","gridColumn","gridRow","description","length","addEventListener","formMessage","next","id","message","required","validation","messages","label","selectors","inputs","formlyFieldDirective","_FormlyFieldDirective","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","props","label","ɵɵelement","ɵɵproperty","f_r2","formlyField_r3","GroupTypeComponent","FieldType","constructor","elementRef","inject","ElementRef","fieldContainer","viewChild","ngOnInit","fieldContainerElement","nativeElement","field","type","classList","add","attributes","style","gridTemplateColumns","__ngFactoryType__","selectors","viewQuery","rf","ctx","ɵɵconditionalCreate","GroupTypeComponent_Conditional_0_Template","ɵɵrepeaterCreate","GroupTypeComponent_For_4_Template","ɵɵrepeaterTrackByIndex","ɵɵprojection","ɵɵconditional","length","parent","ɵɵrepeater","fieldGroup","CommonModule","FormlyModule","FormlyField","FormlyFieldDirective","styles","_GroupTypeComponent","ɵɵtext","ɵɵtextInterpolate1","ctx_r0","props","label","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","description","CheckboxTypeComponent","FieldType","constructor","moduleService","inject","FormlyDemoService","unsubscribe","Subject","ngOnInit","formControl","addAsyncValidators","control","next","complete","pristine","of","validateField","field","key","value","pipe","takeUntil","map","r","invalid","server","message","ngOnDestroy","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵconditionalCreate","CheckboxTypeComponent_Conditional_1_Template","CheckboxTypeComponent_Conditional_2_Template","ɵɵproperty","id","readonly","ɵɵconditional","CommonModule","ReactiveFormsModule","NgControlStatus","FormControlDirective","FormlyModule","ɵFormlyAttributes","ForgeCheckboxModule","CheckboxValueAccessor","CheckboxComponent","styles","_CheckboxTypeComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","props","label","ɵɵelement","ɵɵproperty","field","DatePickerTypeComponent","FieldType","constructor","moduleService","inject","FormlyDemoService","unsubscribe","Subject","ngOnInit","formControl","addAsyncValidators","control","next","complete","pristine","of","value","isValidDate","Date","setValue","required","validateField","key","pipe","takeUntil","map","r","invalid","server","message","ngOnDestroy","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵconditionalCreate","DatePickerTypeComponent_Conditional_3_Template","DatePickerTypeComponent_Conditional_4_Template","max","min","showError","id","placeholder","readonly","ɵɵconditional","CommonModule","ReactiveFormsModule","DefaultValueAccessor","NgControlStatus","FormControlDirective","FormlyModule","ɵFormlyAttributes","ɵFormlyValidationMessage","ForgeDatePickerModule","DatePickerComponent","ForgeTextFieldModule","TextFieldComponent","styles","_DatePickerTypeComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","props","label","ɵɵelement","ɵɵproperty","field","TextareaTypeComponent","FieldType","constructor","moduleService","inject","FormlyDemoService","unsubscribe","Subject","defaultOptions","cols","rows","ngOnInit","formControl","addAsyncValidators","control","next","complete","pristine","of","validateField","key","value","pipe","takeUntil","map","r","invalid","server","message","ngOnDestroy","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵconditionalCreate","TextareaTypeComponent_Conditional_3_Template","TextareaTypeComponent_Conditional_4_Template","required","showError","id","readonly","ɵɵconditional","CommonModule","ReactiveFormsModule","DefaultValueAccessor","NgControlStatus","FormControlDirective","FormlyModule","ɵFormlyAttributes","ɵFormlyValidationMessage","ForgeTextFieldModule","TextFieldComponent","styles","_TextareaTypeComponent","ɵɵelementStart","ɵɵlistener","field_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","onTabSelected","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","props","label","TabTypeComponent","FieldType","constructor","moduleService","inject","FormlyDemoService","activeTab","ngOnInit","activeField","field","fieldGroup","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵrepeaterCreate","TabTypeComponent_For_2_Template","ɵɵrepeaterTrackByIndex","ɵɵelement","ɵɵproperty","ɵɵrepeater","formlyField_r4","CommonModule","ReactiveFormsModule","FormlyModule","FormlyField","ForgeTabBarModule","TabBarComponent","TabComponent","ForgeTabModule","styles","_TabTypeComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","th_r2","label","ɵɵelement","ɵɵproperty","f_r4","formlyField_r5","ɵɵrepeaterCreate","TableTypeComponent_For_9_For_2_Template","ɵɵrepeaterTrackByIndex","ɵɵlistener","ɵ$index_19_r6","ɵɵrestoreView","_r3","$index","ctx_r6","ɵɵnextContext","ɵɵresetView","onRemove","ɵɵrepeater","fg_r8","fieldGroup","TableTypeComponent","FieldArrayType","constructor","tableElement","viewChild","onAdd","model","props","filter","c","key","length","map","defaultValue","add","formControl","Object","fromEntries","requestAnimationFrame","tr","Array","from","nativeElement","querySelectorAll","reverse","focusElement","querySelector","focus","index","remove","__ngFactoryType__","selectors","viewQuery","rf","ctx","TableTypeComponent_For_5_Template","TableTypeComponent_For_9_Template","i0","_r1","columns","field","CommonModule","FormlyModule","FormlyField","FormlyFieldDirective","styles","_TableTypeComponent","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerStart","FieldHelpDialogComponent","constructor","dialogConfig","inject","DIALOG_DATA","dialogRef","DialogRef","id","Utils","elementId","data","paginator","pageIndex","pageSize","total","isBusy","unsubscribe","Subject","sort","property","direction","SortDirection","Ascending","filters","dialogTitle","title","columnConfigurations","dataObservable","key","find","c","initialSort","nativeElement","setAttribute","getData","onClose","close","onPaginatorChange","value","onTableSort","columnIndex","onTableFilter","filter","filterProperty","isDefined","toString","length","push","index","findIndex","f","splice","onTableRowClick","next","complete","param","skip","take","pipe","finalize","takeUntil","subscribe","r","count","selectors","decls","vars","consts","template","rf","ctx","ɵɵlistener","$event","detail","ɵɵconditionalCreate","FieldHelpDialogComponent_Conditional_8_Template","FieldHelpDialogComponent_Conditional_9_Template","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1","ɵɵpureFunction1","_c0","ɵɵconditional","CommonModule","NgClass","ForgeIconButtonModule","IconButtonComponent","IconComponent","ForgeIconModule","ForgePageStateModule","PageStateComponent","ForgePaginatorModule","PaginatorComponent","ForgeScaffoldModule","ScaffoldComponent","ForgeSkeletonModule","SkeletonComponent","ForgeTableModule","TableComponent","ForgeToolbarModule","ToolbarComponent","styles","_FieldHelpDialogComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","props","label","ɵɵelement","ɵɵproperty","field","InputHelpTypeComponent","FieldType","constructor","dialogService","inject","DialogService","moduleService","FormlyDemoService","unsubscribe","Subject","ngOnInit","formControl","addAsyncValidators","control","next","complete","pristine","of","validateField","key","value","pipe","takeUntil","map","r","invalid","server","message","ngOnDestroy","onShowDialog","open","FieldHelpDialogComponent","data","columnConfigurations","options","o","header","property","sortable","filter","filterDelegate","TextFieldComponentDelegate","dataObservable","param","getFieldHelp","title","afterClosed","subscribe","result","setValue","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵconditionalCreate","InputHelpTypeComponent_Conditional_3_Template","ɵɵlistener","i0","ɵɵrestoreView","_r1","ɵɵresetView","InputHelpTypeComponent_Conditional_6_Template","required","showError","id","placeholder","readonly","ɵɵconditional","disabled","CommonModule","ReactiveFormsModule","DefaultValueAccessor","NgControlStatus","FormControlDirective","FormlyModule","ɵFormlyAttributes","ɵFormlyValidationMessage","ForgeIconButtonModule","IconButtonComponent","IconComponent","ForgeIconModule","ForgeTextFieldModule","TextFieldComponent","styles","_InputHelpTypeComponent","LabelTypeComponent","FieldType","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","props","label","CommonModule","FormlyModule","styles","_LabelTypeComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","props","label","ɵɵtextInterpolate1","option_r2","ɵɵconditionalCreate","RadioTypeComponent_For_3_Conditional_1_Template","ɵɵproperty","id","ɵ$index_7_r3","value","formControl","field","ɵɵconditional","ɵɵelement","RadioTypeComponent","FieldType","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","RadioTypeComponent_Conditional_0_Template","ɵɵrepeaterCreate","RadioTypeComponent_For_3_Template","ɵɵrepeaterTrackByIndex","RadioTypeComponent_Conditional_4_Template","ɵɵrepeater","options","showError","CommonModule","ReactiveFormsModule","NgControlStatus","FormControlDirective","FormlyModule","ɵFormlyAttributes","ɵFormlyValidationMessage","ForgeRadioModule","RadioValueAccessor","RadioComponent","ForgeRadioGroupModule","RadioGroupComponent","styles","_RadioTypeComponent","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","field","SelectTypeComponent","FieldType","constructor","moduleService","inject","FormlyDemoService","unsubscribe","Subject","ngOnInit","formControl","addAsyncValidators","control","next","complete","pristine","of","validateField","key","value","pipe","takeUntil","map","r","invalid","server","message","ngOnDestroy","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵconditionalCreate","SelectTypeComponent_Conditional_1_Template","id","props","options","label","placeholder","showError","ɵɵconditional","CommonModule","ReactiveFormsModule","NgControlStatus","FormControlDirective","FormlyModule","ɵFormlyAttributes","ɵFormlyValidationMessage","ForgeSelectModule","SelectValueAccessor","SelectComponent","styles","_SelectTypeComponent","formlyFieldExtension","prePopulate","field","type","ButtonTypeComponent","FieldType","onClick","event","console","log","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵlistener","$event","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","props","label","CommonModule","ForgeButtonModule","ButtonComponent","encapsulation","_ButtonTypeComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","props","label","ɵɵelement","ɵɵproperty","f_r2","formlyField_r3","ContainerTypeComponent","FieldType","constructor","fieldContainer","viewChild","ngOnInit","fieldContainerElement","nativeElement","field","type","classList","add","attributes","style","gridTemplateColumns","__ngFactoryType__","selectors","viewQuery","rf","ctx","ɵɵconditionalCreate","ContainerTypeComponent_Conditional_0_Template","ɵɵrepeaterCreate","ContainerTypeComponent_For_4_Template","ɵɵrepeaterTrackByIndex","ɵɵconditional","ɵɵrepeater","fieldGroup","CommonModule","FormlyModule","FormlyField","FormlyFieldDirective","styles","_ContainerTypeComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","props","label","ɵɵelement","ɵɵproperty","field","InputTypeComponent","FieldType","constructor","unsubscribe","Subject","moduleService","inject","FormlyDemoService","inputElement","viewChild","inputType","ngOnInit","type","formControl","addAsyncValidators","control","next","complete","pristine","of","validateField","key","value","pipe","takeUntil","map","r","invalid","server","message","ngOnDestroy","__ngFactoryType__","selectors","viewQuery","rf","ctx","ɵɵconditionalCreate","InputTypeComponent_Conditional_3_Template","InputTypeComponent_Conditional_4_Template","required","showError","id","placeholder","readonly","ɵɵconditional","CommonModule","ReactiveFormsModule","DefaultValueAccessor","NgControlStatus","FormControlDirective","FormlyModule","ɵFormlyAttributes","ɵFormlyValidationMessage","ForgeTextFieldModule","TextFieldComponent","styles","_InputTypeComponent","FormlyConfigModule","FormlyModule","forRoot","extensions","name","extension","formlyFieldExtension","types","component","CheckboxTypeComponent","DatePickerTypeComponent","InputTypeComponent","InputHelpTypeComponent","RadioTypeComponent","SelectTypeComponent","TextareaTypeComponent","ButtonTypeComponent","ContainerTypeComponent","GroupTypeComponent","TabTypeComponent","TableTypeComponent","LabelTypeComponent","_FormlyConfigModule","routes","path","component","FormlyDemoComponent","FormlyDemoModule","FormlyDemoService","imports","CommonModule","RouterModule","forChild","ReactiveFormsModule","FormlyConfigModule","FormlyFieldComponent","_FormlyDemoModule"],"x_google_ignoreList":[2]}