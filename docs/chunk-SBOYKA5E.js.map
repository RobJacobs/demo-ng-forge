{
  "version": 3,
  "sources": ["src/app/test/test.component.ts", "src/app/test/test.component.html", "src/app/test/parent/parent.component.ts", "src/app/test/parent/parent.component.html", "src/app/test/child/child.component.ts", "src/app/test/child/child.component.html", "src/app/test/routes.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-test',\n  imports: [RouterOutlet],\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent {}\n", "<router-outlet></router-outlet>\n", "import { CommonModule } from '@angular/common';\r\nimport { Component, inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ForgeButtonModule, ForgeToolbarModule } from '@tylertech/forge-angular';\r\n\r\n@Component({\r\n  selector: 'app-test-parent',\r\n  imports: [CommonModule, ForgeButtonModule, ForgeToolbarModule],\r\n  templateUrl: './parent.component.html',\r\n  styleUrls: ['./parent.component.scss']\r\n})\r\nexport class ParentComponent {\r\n  private router = inject(Router);\r\n\r\n  public onNavigate(route: string) {\r\n    this.router.navigate([route], { state: { id: 0, name: 'name' } });\r\n  }\r\n}\r\n", "<forge-toolbar class=\"header\">\r\n  <h2 slot=\"start\" class=\"forge-typography--subheading4\">Parent</h2>\r\n</forge-toolbar>\r\n\r\n<div class=\"body\">\r\n  <div>Parent content</div>\r\n\r\n  <div style=\"display: flex; flex-wrap: wrap; gap: 8px 16px; padding-block: 16px\">\r\n    <forge-button variant=\"filled\" (click)=\"onNavigate('test/child')\">View child</forge-button>\r\n  </div>\r\n</div>\r\n", "import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ForgeButtonModule, ForgeIconButtonModule, ForgeIconModule, ForgeToolbarModule } from '@tylertech/forge-angular';\n\n@Component({\n  selector: 'app-test-child',\n  imports: [CommonModule, ForgeButtonModule, ForgeIconButtonModule, ForgeIconModule, ForgeToolbarModule],\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.scss']\n})\nexport class ChildComponent {\n  private router = inject(Router);\n\n  public onNavigate(route: string) {\n    this.router.navigate([route]);\n  }\n}\n", "<forge-toolbar class=\"header\">\n  <div slot=\"start\">\n    <forge-icon-button (click)=\"onNavigate('test/parent')\" aria-label=\"Go back\">\n      <forge-icon name=\"arrow_back\"></forge-icon>\n    </forge-icon-button>\n    <h2 class=\"forge-typography--subheading4\">Child</h2>\n  </div>\n</forge-toolbar>\n<div class=\"body\"></div>\n", "import { Routes } from '@angular/router';\r\n\r\nimport { TestComponent } from './test.component';\r\nimport { ParentComponent } from './parent/parent.component';\r\nimport { ChildComponent } from './child/child.component';\r\n\r\nexport const TEST_ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: TestComponent,\r\n    children: [\r\n      { path: 'parent', component: ParentComponent },\r\n      { path: 'child', component: ChildComponent },\r\n      { path: '', redirectTo: 'parent', pathMatch: 'full' }\r\n    ]\r\n  }\r\n];\r\n"],
  "mappings": "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",
  "names": ["TestComponent", "selectors", "decls", "vars", "template", "rf", "ctx", "\u0275\u0275element", "RouterOutlet", "styles", "_TestComponent", "ParentComponent", "constructor", "router", "inject", "Router", "onNavigate", "route", "navigate", "state", "id", "name", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275listener", "CommonModule", "ForgeButtonModule", "ButtonComponent", "ForgeToolbarModule", "ToolbarComponent", "styles", "_ParentComponent", "ChildComponent", "constructor", "router", "inject", "Router", "onNavigate", "route", "navigate", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275text", "CommonModule", "ForgeButtonModule", "ForgeIconButtonModule", "IconButtonComponent", "IconComponent", "ForgeIconModule", "ForgeToolbarModule", "ToolbarComponent", "styles", "_ChildComponent", "TEST_ROUTES", "path", "component", "TestComponent", "children", "ParentComponent", "ChildComponent", "redirectTo", "pathMatch"]
}
