"use strict";(self.webpackChunkdemo_ng_forge=self.webpackChunkdemo_ng_forge||[]).push([[4749],{94749:(Z,y,t)=>{t.r(y),t.d(y,{default:()=>z});var c=t(71670),s=t(18100),f=t(28191),g=t(53661),C=t(30801),U=t(7521),n=t(9497),u=(t(83382),t(19420),t(20891)),d=t(10465),v=t(21109),x=t(63982),A=t(8456),B=t(3589),F=t(34040),M=t(32995),w=t(51299),K=t(80892);const b=r=>{let e=class extends r{initialize(){this.exportImageParameters=new K.j({layer:this.layer})}destroy(){this.exportImageParameters=(0,g.SC)(this.exportImageParameters)}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(o){const{layer:i}=this;if(!o)return Promise.reject(new M.Z("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:i}));const{popupEnabled:p}=i;if(!p)return Promise.reject(new M.Z("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:p}));const E=this.createFetchPopupFeaturesQuery(o);if(!E)return Promise.resolve([]);const{extent:a,width:h,height:m,x:P,y:I}=E;if(!(a&&h&&m))throw new M.Z("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:a,width:h,height:m});return i.fetchFeatureInfo(a,h,m,P,I)}};return(0,s._)([(0,n.Cb)()],e.prototype,"exportImageParameters",void 0),(0,s._)([(0,n.Cb)({readOnly:!0})],e.prototype,"exportImageVersion",null),(0,s._)([(0,n.Cb)()],e.prototype,"layer",void 0),(0,s._)([(0,n.Cb)(w.qG)],e.prototype,"timeExtent",void 0),e=(0,s._)([(0,u.j)("esri.layers.mixins.WMSLayerView")],e),e};let l=class extends(b((0,F.Z)((0,x.y)(B.Z)))){constructor(){super(...arguments),this.bitmapContainer=new v.c}supportsSpatialReference(r){return this.layer.serviceSupportsSpatialReference(r)}update(r){this.strategy.update(r).catch(e=>{(0,C.D_)(e)||f.Z.getLogger(this.declaredClass).error(e)})}attach(){const{layer:r}=this,{imageMaxHeight:e,imageMaxWidth:o}=r;this.bitmapContainer=new v.c,this.container.addChild(this.bitmapContainer),this.strategy=new A.Z({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:e,imageMaxWidth:o,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles((0,U.YP)(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=(0,g.SC)(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(r){const{view:e,bitmapContainer:o}=this,{x:i,y:p}=r,{spatialReference:E}=e;let a,h=0,m=0;if(o.children.some(G=>{const{width:S,height:j,resolution:W,x:D,y:L}=G,T=D+W*S,V=L-W*j;return i>=D&&i<=T&&p<=L&&p>=V&&(a=new d.Z({xmin:D,ymin:V,xmax:T,ymax:L,spatialReference:E}),h=S,m=j,!0)}),!a)return null;const P=a.width/h,I=Math.round((i-a.xmin)/P),H=Math.round((a.ymax-p)/P);return{extent:a,width:h,height:m,x:I,y:H}}doRefresh(){var r=this;return(0,c.Z)(function*(){r.requestUpdate()})()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(r,e,o,i){return this.layer.fetchImageBitmap(r,e,o,{timeExtent:this.timeExtent,...i})}};(0,s._)([(0,n.Cb)()],l.prototype,"strategy",void 0),(0,s._)([(0,n.Cb)()],l.prototype,"updating",void 0),l=(0,s._)([(0,u.j)("esri.views.2d.layers.WMSLayerView2D")],l);const z=l},34040:(Z,y,t)=>{t.d(y,{Z:()=>O});var c=t(18100),s=t(28191),f=t(30801),g=t(7521),C=t(9497),R=(t(83382),t(19420),t(20891));const O=u=>{let d=class extends u{initialize(){this.handles.add((0,g.on)(()=>this.layer,"refresh",v=>{this.doRefresh(v.dataChanged).catch(x=>{(0,f.D_)(x)||s.Z.getLogger(this.declaredClass).error(x)})}),"RefreshableLayerView")}};return(0,c._)([(0,C.Cb)()],d.prototype,"layer",void 0),d=(0,c._)([(0,R.j)("esri.layers.mixins.RefreshableLayerView")],d),d}}}]);
//# sourceMappingURL=4749.e4b0ca051fd3f253.js.map